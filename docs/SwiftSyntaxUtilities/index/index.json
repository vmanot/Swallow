{"includedArchiveIdentifiers":["com.swallow.documentation.SwiftSyntaxUtilities"],"interfaceLanguages":{"swift":[{"children":[{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftsyntaxutilities\/accesslevelsyntax\/accesslevel","title":"var accessLevel: AccessLevelModifier","type":"property"},{"path":"\/documentation\/swiftsyntaxutilities\/accesslevelsyntax\/modifiers","title":"var modifiers: DeclModifierListSyntax","type":"property"}],"path":"\/documentation\/swiftsyntaxutilities\/accesslevelsyntax","title":"AccessLevelSyntax","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftsyntaxutilities\/declsyntaxwithmemberblock\/memberblock","title":"var memberBlock: MemberBlockSyntax","type":"property"}],"path":"\/documentation\/swiftsyntaxutilities\/declsyntaxwithmemberblock","title":"DeclSyntaxWithMemberBlock","type":"protocol"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftsyntaxutilities\/diagnosticmessageconvertible\/diagnosticid","title":"var diagnosticID: MessageID","type":"property"},{"path":"\/documentation\/swiftsyntaxutilities\/diagnosticmessageconvertible\/message","title":"var message: String","type":"property"}],"path":"\/documentation\/swiftsyntaxutilities\/diagnosticmessageconvertible\/diagnosticmessage-implementations","title":"DiagnosticMessage Implementations","type":"symbol"}],"path":"\/documentation\/swiftsyntaxutilities\/diagnosticmessageconvertible","title":"DiagnosticMessageConvertible","type":"protocol"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/swiftsyntaxutilities\/macroprototypegenerated\/macroprototypes","title":"static var macroPrototypes: [MacroProtoype.Type]","type":"property"}],"path":"\/documentation\/swiftsyntaxutilities\/macroprototypegenerated","title":"MacroPrototypeGenerated","type":"protocol"},{"path":"\/documentation\/swiftsyntaxutilities\/macroprotoype","title":"MacroProtoype","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftsyntaxutilities\/anydiagnosticmessage\/init(_:file:)","title":"init(Never.Reason, file: StaticString?)","type":"init"},{"path":"\/documentation\/swiftsyntaxutilities\/anydiagnosticmessage\/init(message:severity:file:)","title":"init(message: String, severity: DiagnosticSeverity, file: StaticString?)","type":"init"},{"path":"\/documentation\/swiftsyntaxutilities\/anydiagnosticmessage\/init(stringliteral:)","title":"init(stringLiteral: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftsyntaxutilities\/anydiagnosticmessage\/diagnosticid","title":"var diagnosticID: MessageID","type":"property"},{"path":"\/documentation\/swiftsyntaxutilities\/anydiagnosticmessage\/file","title":"let file: StaticString?","type":"property"},{"path":"\/documentation\/swiftsyntaxutilities\/anydiagnosticmessage\/fixitid","title":"var fixItID: MessageID","type":"property"},{"path":"\/documentation\/swiftsyntaxutilities\/anydiagnosticmessage\/message","title":"let message: String","type":"property"},{"path":"\/documentation\/swiftsyntaxutilities\/anydiagnosticmessage\/severity","title":"let severity: DiagnosticSeverity","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftsyntaxutilities\/anydiagnosticmessage\/localizeddescription","title":"var localizedDescription: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsyntaxutilities\/anydiagnosticmessage\/throw()","title":"func `throw`() throws -> Never","type":"method"}],"path":"\/documentation\/swiftsyntaxutilities\/anydiagnosticmessage\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftsyntaxutilities\/anydiagnosticmessage\/init(extendedgraphemeclusterliteral:)","title":"init(extendedGraphemeClusterLiteral: Self.StringLiteralType)","type":"init"}],"path":"\/documentation\/swiftsyntaxutilities\/anydiagnosticmessage\/expressiblebyextendedgraphemeclusterliteral-implementations","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftsyntaxutilities\/anydiagnosticmessage\/init(unicodescalarliteral:)","title":"init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)","type":"init"}],"path":"\/documentation\/swiftsyntaxutilities\/anydiagnosticmessage\/expressiblebyunicodescalarliteral-implementations","title":"ExpressibleByUnicodeScalarLiteral Implementations","type":"symbol"}],"path":"\/documentation\/swiftsyntaxutilities\/anydiagnosticmessage","title":"AnyDiagnosticMessage","type":"struct"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsyntaxutilities\/runtimediscoverablemacroprototype\/expansion(of:providingpeersof:in:)","title":"static func expansion(of: AttributeSyntax, providingPeersOf: some DeclSyntaxProtocol, in: some MacroExpansionContext) throws -> [DeclSyntax]","type":"method"}],"path":"\/documentation\/swiftsyntaxutilities\/runtimediscoverablemacroprototype","title":"RuntimeDiscoverableMacroPrototype","type":"struct"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftsyntaxutilities\/accesslevelmodifier\/_(_:_:)-471dv","title":"static func < (AccessLevelModifier, AccessLevelModifier) -> Bool","type":"op"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftsyntaxutilities\/accesslevelmodifier\/fileprivate","title":"case `fileprivate`","type":"case"},{"path":"\/documentation\/swiftsyntaxutilities\/accesslevelmodifier\/internal","title":"case `internal`","type":"case"},{"path":"\/documentation\/swiftsyntaxutilities\/accesslevelmodifier\/open","title":"case open","type":"case"},{"path":"\/documentation\/swiftsyntaxutilities\/accesslevelmodifier\/private","title":"case `private`","type":"case"},{"path":"\/documentation\/swiftsyntaxutilities\/accesslevelmodifier\/public","title":"case `public`","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftsyntaxutilities\/accesslevelmodifier\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftsyntaxutilities\/accesslevelmodifier\/keyword","title":"var keyword: Keyword","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftsyntaxutilities\/accesslevelmodifier\/'...(_:)-63cuj","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/swiftsyntaxutilities\/accesslevelmodifier\/'...(_:)-6s5nw","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/swiftsyntaxutilities\/accesslevelmodifier\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/swiftsyntaxutilities\/accesslevelmodifier\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/swiftsyntaxutilities\/accesslevelmodifier\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"},{"path":"\/documentation\/swiftsyntaxutilities\/accesslevelmodifier\/_(_:_:)-55kqw","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/swiftsyntaxutilities\/accesslevelmodifier\/_=(_:_:)-21s5p","title":"static func >= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/swiftsyntaxutilities\/accesslevelmodifier\/_=(_:_:)-928mh","title":"static func <= (Self, Self) -> Bool","type":"op"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftsyntaxutilities\/accesslevelmodifier\/erasedasanycomparable","title":"var erasedAsAnyComparable: AnyComparable","type":"property"}],"path":"\/documentation\/swiftsyntaxutilities\/accesslevelmodifier\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftsyntaxutilities\/accesslevelmodifier\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/swiftsyntaxutilities\/accesslevelmodifier\/==(_:)","title":"static func == (Self) -> ((Self) -> Bool)","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsyntaxutilities\/accesslevelmodifier\/erasetoanyequatable()","title":"func eraseToAnyEquatable() -> AnyEquatable","type":"method"}],"path":"\/documentation\/swiftsyntaxutilities\/accesslevelmodifier\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftsyntaxutilities\/accesslevelmodifier\/erasedasanyhashable","title":"var erasedAsAnyHashable: AnyHashable","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsyntaxutilities\/accesslevelmodifier\/erasetoanyhashable()","title":"func eraseToAnyHashable() -> AnyHashable","type":"method"},{"path":"\/documentation\/swiftsyntaxutilities\/accesslevelmodifier\/memoize(with:_:)-11lw0","title":"func memoize<T>(with: MemoizationCache?, KeyPath<Self, T>) -> T","type":"method"},{"path":"\/documentation\/swiftsyntaxutilities\/accesslevelmodifier\/memoize(with:_:)-2jcg3","title":"func memoize<T>(with: MemoizationCache?, KeyPath<Self, () -> T>) -> T","type":"method"}],"path":"\/documentation\/swiftsyntaxutilities\/accesslevelmodifier\/hashable-implementations","title":"Hashable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftsyntaxutilities\/accesslevelmodifier\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsyntaxutilities\/accesslevelmodifier\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftsyntaxutilities\/accesslevelmodifier\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftsyntaxutilities\/accesslevelmodifier","title":"AccessLevelModifier","type":"enum"},{"title":"Extended Modules","type":"groupMarker"},{"children":[{"title":"Extended Enumerations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftsyntaxutilities\/swallow\/anycodable\/init(from:)","title":"init(from: LabeledExprListSyntax) throws","type":"init"}],"path":"\/documentation\/swiftsyntaxutilities\/swallow\/anycodable","title":"AnyCodable","type":"extension"}],"path":"\/documentation\/swiftsyntaxutilities\/swallow","title":"Swallow","type":"extension"},{"children":[{"title":"Extended Protocols","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftsyntaxutilities\/swift\/sequence\/inferredelementtype-2sh05","title":"var inferredElementType: TypeSyntax?","type":"property"},{"path":"\/documentation\/swiftsyntaxutilities\/swift\/sequence\/inferredelementtype-9qguu","title":"var inferredElementType: TypeSyntax?","type":"property"},{"path":"\/documentation\/swiftsyntaxutilities\/swift\/sequence\/inferredelementtype-f1mg","title":"var inferredElementType: TypeSyntax?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsyntaxutilities\/swift\/sequence\/allsatisfy(_:)","title":"func allSatisfy(SyntaxKind) -> Bool","type":"method"}],"path":"\/documentation\/swiftsyntaxutilities\/swift\/sequence","title":"Sequence","type":"extension"}],"path":"\/documentation\/swiftsyntaxutilities\/swift","title":"Swift","type":"extension"},{"children":[{"title":"Extended Protocols","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/declgroupsyntax\/concretetypename","title":"var concreteTypeName: String?","type":"property"},{"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/declgroupsyntax\/declaccesslevel","title":"var declAccessLevel: AccessLevelModifier","type":"property"},{"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/declgroupsyntax\/definedvariables","title":"var definedVariables: [VariableDeclSyntax]","type":"property"},{"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/declgroupsyntax\/hasinit","title":"var hasInit: Bool","type":"property"},{"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/declgroupsyntax\/isactor","title":"var isActor: Bool","type":"property"},{"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/declgroupsyntax\/isclass","title":"var isClass: Bool","type":"property"},{"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/declgroupsyntax\/isenum","title":"var isEnum: Bool","type":"property"},{"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/declgroupsyntax\/isstruct","title":"var isStruct: Bool","type":"property"},{"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/declgroupsyntax\/memberfunctionstandins","title":"var memberFunctionStandins: [FunctionDeclSyntax.SignatureStandin]","type":"property"},{"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/declgroupsyntax\/memberfunctions","title":"var memberFunctions: [FunctionDeclSyntax]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/declgroupsyntax\/addifneeded(_:to:)-22e7n","title":"func addIfNeeded<Declaration>(Declaration?, to: inout [DeclSyntax])","type":"method"},{"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/declgroupsyntax\/addifneeded(_:to:)-4me8k","title":"func addIfNeeded(DeclSyntax?, to: inout [DeclSyntax])","type":"method"},{"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/declgroupsyntax\/classifiedadoptablevardecls(where:)","title":"func classifiedAdoptableVarDecls(where: (VariableDeclSyntax) -> Bool) -> (validWithInitializer: [VariableDeclSyntax], validWithTypeAnnoation: [VariableDeclSyntax], invalid: [VariableDeclSyntax])","type":"method"},{"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/declgroupsyntax\/collectadoptablevardecls(where:)","title":"func collectAdoptableVarDecls(where: (VariableDeclSyntax) -> Bool) -> [VariableDeclSyntax]","type":"method"},{"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/declgroupsyntax\/collectautosynthesizingprotocolconformance()","title":"func collectAutoSynthesizingProtocolConformance() -> [InheritedTypeSyntax]","type":"method"},{"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/declgroupsyntax\/collectexplicitinitializerdecls()","title":"func collectExplicitInitializerDecls() -> [InitializerDeclSyntax]","type":"method"},{"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/declgroupsyntax\/collectstoredvardecls()","title":"func collectStoredVarDecls() -> [VariableDeclSyntax]","type":"method"},{"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/declgroupsyntax\/hasmemberfunction(equvalentto:)","title":"func hasMemberFunction(equvalentTo: FunctionDeclSyntax) -> Bool","type":"method"},{"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/declgroupsyntax\/hasmemberinit(equivalentto:)","title":"func hasMemberInit(equivalentTo: InitializerDeclSyntax) -> Bool","type":"method"},{"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/declgroupsyntax\/hasmemberproperty(equivalentto:)","title":"func hasMemberProperty(equivalentTo: VariableDeclSyntax) -> Bool","type":"method"},{"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/declgroupsyntax\/hasmemberstruct(equivalentto:)","title":"func hasMemberStruct(equivalentTo: StructDeclSyntax) -> Bool","type":"method"}],"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/declgroupsyntax","title":"DeclGroupSyntax","type":"extension"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/declsyntaxprotocol\/asprotocol(_:)","title":"func asProtocol((any DeclSyntaxWithMemberBlock).Type) -> (any DeclSyntaxWithMemberBlock)?","type":"method"}],"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/declsyntaxprotocol","title":"DeclSyntaxProtocol","type":"extension"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/exprsyntaxprotocol\/inferredtype","title":"var inferredType: TypeSyntax?","type":"property"},{"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/exprsyntaxprotocol\/iselementsempty","title":"var isElementsEmpty: Bool","type":"property"}],"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/exprsyntaxprotocol","title":"ExprSyntaxProtocol","type":"extension"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/syntaxcollection\/removeall(_:where:)","title":"func removeAll<T>(T.Type, where: (T) throws -> Bool) rethrows","type":"method"},{"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/syntaxcollection\/removeall(where:)","title":"func removeAll(where: (Element) throws -> Bool) rethrows -> [Element]","type":"method"}],"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/syntaxcollection","title":"SyntaxCollection","type":"extension"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/syntaxprotocol\/map(_:_:)","title":"func map<T>(WritableKeyPath<Self, T>, (T) throws -> T) rethrows -> Self","type":"method"},{"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/syntaxprotocol\/modifying(_:_:)","title":"func modifying<T>(WritableKeyPath<Self, T>, (inout T) throws -> Void) rethrows -> Self","type":"method"}],"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/syntaxprotocol","title":"SyntaxProtocol","type":"extension"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/withattributessyntax\/hasmacroapplication(_:)","title":"func hasMacroApplication(String) -> Bool","type":"method"}],"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/withattributessyntax","title":"WithAttributesSyntax","type":"extension"},{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/actordeclsyntax\/accesslevel","title":"var accessLevel: AccessLevelModifier","type":"property"}],"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/actordeclsyntax\/accesslevelsyntax-implementations","title":"AccessLevelSyntax Implementations","type":"symbol"}],"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/actordeclsyntax","title":"ActorDeclSyntax","type":"extension"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/arrayexprsyntax\/inferredelementtype","title":"var inferredElementType: TypeSyntax?","type":"property"},{"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/arrayexprsyntax\/inferredtype","title":"var inferredType: TypeSyntax?","type":"property"}],"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/arrayexprsyntax","title":"ArrayExprSyntax","type":"extension"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/attributesyntax\/labeledarguments","title":"var labeledArguments: LabeledExprListSyntax?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/attributesyntax\/decode(_:)","title":"func decode<T>(T.Type) throws -> T","type":"method"},{"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/attributesyntax\/hasname(_:)","title":"func hasName(String) -> Bool","type":"method"},{"title":"Extended Enumerations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/attributesyntax\/arguments\/storagename","title":"var storageName: TokenSyntax?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/attributesyntax\/arguments\/getarg(at:name:)","title":"func getArg(at: Int, name: String) -> ExprSyntax?","type":"method"},{"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/attributesyntax\/arguments\/getarg(name:)","title":"func getArg(name: String) -> ExprSyntax?","type":"method"}],"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/attributesyntax\/arguments","title":"AttributeSyntax.Arguments","type":"extension"}],"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/attributesyntax","title":"AttributeSyntax","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/classdeclsyntax\/accesslevel","title":"var accessLevel: AccessLevelModifier","type":"property"}],"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/classdeclsyntax\/accesslevelsyntax-implementations","title":"AccessLevelSyntax Implementations","type":"symbol"}],"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/classdeclsyntax","title":"ClassDeclSyntax","type":"extension"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/declmodifiersyntax\/isneededaccesslevelmodifier","title":"var isNeededAccessLevelModifier: Bool","type":"property"}],"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/declmodifiersyntax","title":"DeclModifierSyntax","type":"extension"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/dictionaryexprsyntax\/inferredkeytype","title":"var inferredKeyType: TypeSyntax?","type":"property"},{"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/dictionaryexprsyntax\/inferredtype","title":"var inferredType: TypeSyntax?","type":"property"},{"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/dictionaryexprsyntax\/inferredvaluetype","title":"var inferredValueType: TypeSyntax?","type":"property"}],"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/dictionaryexprsyntax","title":"DictionaryExprSyntax","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/enumdeclsyntax\/accesslevel","title":"var accessLevel: AccessLevelModifier","type":"property"}],"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/enumdeclsyntax\/accesslevelsyntax-implementations","title":"AccessLevelSyntax Implementations","type":"symbol"}],"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/enumdeclsyntax","title":"EnumDeclSyntax","type":"extension"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/exprsyntax\/isnil","title":"var isNil: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/exprsyntax\/decodeliteral()","title":"func decodeLiteral() throws -> AnyCodable?","type":"method"},{"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/exprsyntax\/prepend(_:separator:)","title":"func prepend(ExprSyntax, separator: String)","type":"method"},{"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/exprsyntax\/prepending(_:separator:)","title":"func prepending(ExprSyntax, separator: String) -> ExprSyntax","type":"method"}],"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/exprsyntax","title":"ExprSyntax","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/extensiondeclsyntax\/accesslevel","title":"var accessLevel: AccessLevelModifier","type":"property"}],"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/extensiondeclsyntax\/accesslevelsyntax-implementations","title":"AccessLevelSyntax Implementations","type":"symbol"}],"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/extensiondeclsyntax","title":"ExtensionDeclSyntax","type":"extension"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/functiondeclsyntax\/signaturestandin-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/functiondeclsyntax\/signaturestandin-swift.struct\/==(_:)","title":"static func == (Self) -> ((Self) -> Bool)","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/functiondeclsyntax\/signaturestandin-swift.struct\/erasetoanyequatable()","title":"func eraseToAnyEquatable() -> AnyEquatable","type":"method"}],"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/functiondeclsyntax\/signaturestandin-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/functiondeclsyntax\/signaturestandin-swift.struct","title":"FunctionDeclSyntax.SignatureStandin","type":"struct"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/functiondeclsyntax\/explicitreturntype","title":"var explicitReturnType: TypeSyntax?","type":"property"},{"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/functiondeclsyntax\/isasync","title":"var isAsync: Bool","type":"property"},{"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/functiondeclsyntax\/isinstance","title":"var isInstance: Bool","type":"property"},{"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/functiondeclsyntax\/isstatic","title":"var isStatic: Bool","type":"property"},{"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/functiondeclsyntax\/isthrowing","title":"var isThrowing: Bool","type":"property"},{"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/functiondeclsyntax\/parameterlist","title":"var parameterList: FunctionParameterListSyntax","type":"property"},{"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/functiondeclsyntax\/signaturestandin-swift.property","title":"var signatureStandin: SignatureStandin","type":"property"},{"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/functiondeclsyntax\/throwskeyword","title":"var throwsKeyword: TokenSyntax?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/functiondeclsyntax\/accesslevel","title":"var accessLevel: AccessLevelModifier","type":"property"}],"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/functiondeclsyntax\/accesslevelsyntax-implementations","title":"AccessLevelSyntax Implementations","type":"symbol"}],"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/functiondeclsyntax","title":"FunctionDeclSyntax","type":"extension"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/functionparametersyntax\/name","title":"var name: TokenSyntax","type":"property"}],"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/functionparametersyntax","title":"FunctionParameterSyntax","type":"extension"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/initializerdeclsyntax\/signaturestandin-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/initializerdeclsyntax\/signaturestandin-swift.struct\/==(_:)","title":"static func == (Self) -> ((Self) -> Bool)","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/initializerdeclsyntax\/signaturestandin-swift.struct\/erasetoanyequatable()","title":"func eraseToAnyEquatable() -> AnyEquatable","type":"method"}],"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/initializerdeclsyntax\/signaturestandin-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/initializerdeclsyntax\/signaturestandin-swift.struct","title":"InitializerDeclSyntax.SignatureStandin","type":"struct"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/initializerdeclsyntax\/signaturestandin-swift.property","title":"var signatureStandin: SignatureStandin","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/initializerdeclsyntax\/isequivalent(to:)","title":"func isEquivalent(to: InitializerDeclSyntax) -> Bool","type":"method"}],"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/initializerdeclsyntax","title":"InitializerDeclSyntax","type":"extension"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/labeledexprlistsyntax\/decode(_:)","title":"func decode<T>(T.Type) throws -> T","type":"method"},{"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/labeledexprlistsyntax\/first(labeled:)","title":"func first(labeled: String) -> Element?","type":"method"},{"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/labeledexprlistsyntax\/last(labeled:)","title":"func last(labeled: String) -> Element?","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/labeledexprlistsyntax\/makearglist(parameters:usestemplatearguments:)","title":"static func makeArgList(parameters: [FunctionParameterSyntax], usesTemplateArguments: Bool) -> LabeledExprListSyntax","type":"method"}],"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/labeledexprlistsyntax","title":"LabeledExprListSyntax","type":"extension"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/labeledexprsyntax\/labeltext","title":"var labelText: String?","type":"property"}],"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/labeledexprsyntax","title":"LabeledExprSyntax","type":"extension"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/memberblockitemlistsyntax\/adding(member:)","title":"func adding(member: DeclSyntax) throws -> MemberBlockItemListSyntax","type":"method"}],"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/memberblockitemlistsyntax","title":"MemberBlockItemListSyntax","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/memberblockitemsyntax\/init(_:)","title":"init(() -> DeclSyntax)","type":"init"}],"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/memberblockitemsyntax","title":"MemberBlockItemSyntax","type":"extension"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/memberblocksyntax\/adding(member:)","title":"func adding(member: DeclSyntax) throws -> MemberBlockSyntax","type":"method"}],"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/memberblocksyntax","title":"MemberBlockSyntax","type":"extension"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/patternbindingsyntax\/didset","title":"var didSet: AccessorDeclSyntax?","type":"property"},{"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/patternbindingsyntax\/getter","title":"var getter: AccessorDeclSyntax?","type":"property"},{"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/patternbindingsyntax\/hasinitializer","title":"var hasInitializer: Bool","type":"property"},{"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/patternbindingsyntax\/hasnoinitializer","title":"var hasNoInitializer: Bool","type":"property"},{"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/patternbindingsyntax\/iscomputed","title":"var isComputed: Bool","type":"property"},{"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/patternbindingsyntax\/isgetonly","title":"var isGetOnly: Bool","type":"property"},{"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/patternbindingsyntax\/isstored","title":"var isStored: Bool","type":"property"},{"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/patternbindingsyntax\/setter","title":"var setter: AccessorDeclSyntax?","type":"property"},{"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/patternbindingsyntax\/willset","title":"var willSet: AccessorDeclSyntax?","type":"property"}],"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/patternbindingsyntax","title":"PatternBindingSyntax","type":"extension"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/structdeclsyntax\/typename","title":"var typeName: TokenSyntax","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/structdeclsyntax\/isequivalent(to:)","title":"func isEquivalent(to: StructDeclSyntax) -> Bool","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/structdeclsyntax\/accesslevel","title":"var accessLevel: AccessLevelModifier","type":"property"}],"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/structdeclsyntax\/accesslevelsyntax-implementations","title":"AccessLevelSyntax Implementations","type":"symbol"}],"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/structdeclsyntax","title":"StructDeclSyntax","type":"extension"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/tupleexprsyntax\/inferredtype","title":"var inferredType: TypeSyntax?","type":"property"}],"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/tupleexprsyntax","title":"TupleExprSyntax","type":"extension"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/typesyntax\/identifier","title":"var identifier: String?","type":"property"},{"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/typesyntax\/isoptional","title":"var isOptional: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/typesyntax\/genericsubstitution(_:)","title":"func genericSubstitution(GenericParameterListSyntax?) -> String?","type":"method"}],"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/typesyntax","title":"TypeSyntax","type":"extension"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/variabledeclsyntax\/didsetaccessors","title":"var didSetAccessors: [AccessorDeclSyntax]","type":"property"},{"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/variabledeclsyntax\/explicitlydeclaredtypes","title":"var explicitlyDeclaredTypes: [TypeSyntax]","type":"property"},{"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/variabledeclsyntax\/hasmultiplebindings","title":"var hasMultipleBindings: Bool","type":"property"},{"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/variabledeclsyntax\/hassinglebinding","title":"var hasSingleBinding: Bool","type":"property"},{"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/variabledeclsyntax\/identifier","title":"var identifier: TokenSyntax?","type":"property"},{"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/variabledeclsyntax\/identifierpattern","title":"var identifierPattern: IdentifierPatternSyntax?","type":"property"},{"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/variabledeclsyntax\/initializer","title":"var initializer: InitializerClauseSyntax?","type":"property"},{"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/variabledeclsyntax\/iscomputed","title":"var isComputed: Bool","type":"property"},{"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/variabledeclsyntax\/isimmutable","title":"var isImmutable: Bool","type":"property"},{"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/variabledeclsyntax\/isinstance","title":"var isInstance: Bool","type":"property"},{"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/variabledeclsyntax\/names","title":"var names: [TokenSyntax]","type":"property"},{"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/variabledeclsyntax\/singlebinding","title":"var singleBinding: PatternBindingSyntax?","type":"property"},{"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/variabledeclsyntax\/type","title":"var type: TypeSyntax?","type":"property"},{"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/variabledeclsyntax\/variablename","title":"var variableName: String?","type":"property"},{"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/variabledeclsyntax\/willsetaccessors","title":"var willSetAccessors: [AccessorDeclSyntax]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/variabledeclsyntax\/accessorsmatching(_:)","title":"func accessorsMatching((TokenKind) -> Bool) -> [AccessorDeclSyntax]","type":"method"},{"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/variabledeclsyntax\/hasmacroapplication(_:)","title":"func hasMacroApplication(String) -> Bool","type":"method"},{"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/variabledeclsyntax\/isequivalent(to:)","title":"func isEquivalent(to: VariableDeclSyntax) -> Bool","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/variabledeclsyntax\/accesslevel","title":"var accessLevel: AccessLevelModifier","type":"property"}],"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/variabledeclsyntax\/accesslevelsyntax-implementations","title":"AccessLevelSyntax Implementations","type":"symbol"}],"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/variabledeclsyntax","title":"VariableDeclSyntax","type":"extension"},{"title":"Extended Enumerations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/tokenkind\/keyword","title":"var keyword: Keyword?","type":"property"}],"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/tokenkind","title":"TokenKind","type":"extension"},{"title":"Extended Types","type":"groupMarker"},{"children":[{"title":"Extended Enumerations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/attributelistsyntax\/element\/hasname(_:)","title":"func hasName(String) -> Bool","type":"method"}],"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/attributelistsyntax\/element","title":"AttributeListSyntax.Element","type":"extension"}],"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/attributelistsyntax","title":"AttributeListSyntax","type":"extension"},{"children":[{"title":"Extended Enumerations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/codeblockitemsyntax\/item\/modifyingdeclarationifpresent(_:)","title":"func modifyingDeclarationIfPresent((inout DeclSyntax) throws -> Void) rethrows -> CodeBlockItemSyntax.Item","type":"method"}],"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/codeblockitemsyntax\/item","title":"CodeBlockItemSyntax.Item","type":"extension"}],"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax\/codeblockitemsyntax","title":"CodeBlockItemSyntax","type":"extension"}],"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntax","title":"SwiftSyntax","type":"extension"},{"children":[{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntaxbuilder\/syntaxstringinterpolation\/appendinterpolation(_:)","title":"func appendInterpolation<Node>(Node?)","type":"method"}],"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntaxbuilder\/syntaxstringinterpolation","title":"SyntaxStringInterpolation","type":"extension"}],"path":"\/documentation\/swiftsyntaxutilities\/swiftsyntaxbuilder","title":"SwiftSyntaxBuilder","type":"extension"}],"path":"\/documentation\/swiftsyntaxutilities","title":"SwiftSyntaxUtilities","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":2}}