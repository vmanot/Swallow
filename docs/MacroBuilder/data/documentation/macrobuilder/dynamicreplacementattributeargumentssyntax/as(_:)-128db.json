{"kind":"symbol","metadata":{"extendedModule":"SwiftSyntax","role":"symbol","platforms":[],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"`as`"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"?"}],"modules":[{"name":"MacroBuilder","relatedModules":["SwiftSyntax"]}],"roleHeading":"Instance Method","title":"as(_:)","externalID":"s:11SwiftSyntax0B8ProtocolPAAE2asyxSgxmF::SYNTHESIZED::s:11SwiftSyntax036DynamicReplacementAttributeArgumentsB0V","symbolKind":"method"},"variants":[{"paths":["\/documentation\/macrobuilder\/dynamicreplacementattributeargumentssyntax\/as(_:)-128db"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"`as`","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"syntaxType","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"?"}],"platforms":["macOS"]}]},{"content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"text":"The current syntax node.","type":"text"}]}],"kind":"content"},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"name":"Note","type":"aside","style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This method overloads the general "},{"type":"codeVoice","code":"as"},{"text":" method and is marked as deprecated to produce a warning,","type":"text"},{"text":" ","type":"text"},{"text":"informing the user that the cast will always succeed.","type":"text"}]}]}]}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DynamicReplacementAttributeArgumentsSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DynamicReplacementAttributeArgumentsSyntax\/SyntaxProtocol-Implementations"]]},"identifier":{"url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DynamicReplacementAttributeArgumentsSyntax\/as(_:)-128db","interfaceLanguage":"swift"},"deprecationSummary":[{"inlineContent":[{"type":"text","text":"This cast will always succeed"}],"type":"paragraph"}],"abstract":[{"text":"Casts the current syntax node to its own type.","type":"text"}],"schemaVersion":{"patch":0,"minor":3,"major":0},"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/DynamicReplacementAttributeArgumentsSyntax":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DynamicReplacementAttributeArgumentsSyntax","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DynamicReplacementAttributeArgumentsSyntax"}],"navigatorTitle":[{"text":"DynamicReplacementAttributeArgumentsSyntax","kind":"identifier"}],"kind":"symbol","title":"DynamicReplacementAttributeArgumentsSyntax","role":"symbol","type":"topic","abstract":[{"type":"text","text":"The arguments for the ‘@_dynamicReplacement’ attribute"}],"url":"\/documentation\/macrobuilder\/dynamicreplacementattributeargumentssyntax"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/DynamicReplacementAttributeArgumentsSyntax/SyntaxProtocol-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DynamicReplacementAttributeArgumentsSyntax\/SyntaxProtocol-Implementations","kind":"article","title":"SyntaxProtocol Implementations","role":"collectionGroup","type":"topic","abstract":[],"url":"\/documentation\/macrobuilder\/dynamicreplacementattributeargumentssyntax\/syntaxprotocol-implementations"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/DynamicReplacementAttributeArgumentsSyntax/as(_:)-128db":{"url":"\/documentation\/macrobuilder\/dynamicreplacementattributeargumentssyntax\/as(_:)-128db","role":"symbol","deprecated":true,"title":"as(_:)","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DynamicReplacementAttributeArgumentsSyntax\/as(_:)-128db","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"`as`"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":".Type) -> "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"type":"topic","abstract":[{"type":"text","text":"Casts the current syntax node to its own type."}]}}}