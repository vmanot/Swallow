{"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionStmtSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionStmtSyntax\/SyntaxProtocol-Implementations"]]},"schemaVersion":{"patch":0,"minor":3,"major":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isImplicit"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":" { ","kind":"text"},{"kind":"keyword","text":"get"},{"kind":"text","text":" }"}]}]}],"deprecationSummary":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Check children(viewMode: .all).isEmpty instead"}]}],"metadata":{"symbolKind":"property","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"isImplicit","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"role":"symbol","title":"isImplicit","externalID":"s:11SwiftSyntax0B8ProtocolPAAE10isImplicitSbvp::SYNTHESIZED::s:11SwiftSyntax014ExpressionStmtB0V","extendedModule":"SwiftSyntax","roleHeading":"Instance Property","platforms":[],"modules":[{"relatedModules":["SwiftSyntax"],"name":"MacroBuilder"}]},"sections":[],"variants":[{"paths":["\/documentation\/macrobuilder\/expressionstmtsyntax\/isimplicit"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionStmtSyntax\/isImplicit"},"kind":"symbol","abstract":[{"type":"text","text":"When isImplicit is true, the syntax node doesn’t include any"},{"text":" ","type":"text"},{"type":"text","text":"underlying tokens, e.g. an empty CodeBlockItemList."}],"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExpressionStmtSyntax":{"type":"topic","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"ExpressionStmtSyntax","kind":"identifier"}],"title":"ExpressionStmtSyntax","navigatorTitle":[{"kind":"identifier","text":"ExpressionStmtSyntax"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionStmtSyntax","role":"symbol","url":"\/documentation\/macrobuilder\/expressionstmtsyntax","abstract":[]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExpressionStmtSyntax/SyntaxProtocol-Implementations":{"role":"collectionGroup","type":"topic","url":"\/documentation\/macrobuilder\/expressionstmtsyntax\/syntaxprotocol-implementations","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionStmtSyntax\/SyntaxProtocol-Implementations","abstract":[],"kind":"article","title":"SyntaxProtocol Implementations"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExpressionStmtSyntax/isImplicit":{"role":"symbol","deprecated":true,"title":"isImplicit","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"isImplicit"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"url":"\/documentation\/macrobuilder\/expressionstmtsyntax\/isimplicit","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionStmtSyntax\/isImplicit","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"When isImplicit is true, the syntax node doesn’t include any"},{"text":" ","type":"text"},{"type":"text","text":"underlying tokens, e.g. an empty CodeBlockItemList."}]}}}