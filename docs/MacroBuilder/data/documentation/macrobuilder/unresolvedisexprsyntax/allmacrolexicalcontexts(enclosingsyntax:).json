{"metadata":{"title":"allMacroLexicalContexts(enclosingSyntax:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"allMacroLexicalContexts"},{"kind":"text","text":"("},{"text":"enclosingSyntax","kind":"externalParam"},{"kind":"text","text":": ("},{"preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier","text":"Syntax"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax","kind":"typeIdentifier"},{"kind":"text","text":"?) -> ["},{"text":"Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"kind":"text","text":"]"}],"externalID":"s:11SwiftSyntax0B8ProtocolP0aB6MacrosE23allMacroLexicalContexts09enclosingB0SayAA0B0VGAHSgAHXE_tF::SYNTHESIZED::s:11SwiftSyntax016UnresolvedIsExprB0V","modules":[{"relatedModules":["SwiftSyntax"],"name":"MacroBuilder"}],"extendedModule":"SwiftSyntax","roleHeading":"Instance Method","symbolKind":"method"},"abstract":[{"type":"text","text":"Return an array of enclosing lexical contexts for the purpose of macros,"},{"type":"text","text":" "},{"type":"text","text":"from the innermost enclosing lexical context (first in the array) to the"},{"type":"text","text":" "},{"type":"text","text":"outermost. If this syntax node itself is a lexical context, it will be"},{"text":" ","type":"text"},{"type":"text","text":"the innermost lexical context."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"allMacroLexicalContexts","kind":"identifier"},{"text":"(","kind":"text"},{"text":"enclosingSyntax","kind":"externalParam"},{"text":": (","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B0V","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax","kind":"typeIdentifier","text":"Syntax"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax"},{"text":"? = { _ in nil }) -> [","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax","text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"kind":"text","text":"]"}],"platforms":["macOS"],"languages":["swift"]}]},{"parameters":[{"content":[{"inlineContent":[{"type":"text","text":"Provides a parent node when the operation"},{"text":" ","type":"text"},{"type":"text","text":"has reached the outermost syntax node (i.e., it has no parent), allowing"},{"text":" ","type":"text"},{"type":"text","text":"the caller to provide a new syntax node that can continue the walk"},{"type":"text","text":" "},{"type":"text","text":"to collect additional lexical contexts, e.g., from outer macro"},{"type":"text","text":" "},{"text":"expansions.","type":"text"}],"type":"paragraph"}],"name":"enclosingSyntax"}],"kind":"parameters"},{"kind":"content","content":[{"level":2,"anchor":"return-value","text":"Return Value","type":"heading"},{"inlineContent":[{"text":"The array of enclosing lexical contexts.","type":"text"}],"type":"paragraph"}]}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/UnresolvedIsExprSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/UnresolvedIsExprSyntax\/SyntaxProtocol-Implementations"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/macrobuilder\/unresolvedisexprsyntax\/allmacrolexicalcontexts(enclosingsyntax:)"]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/UnresolvedIsExprSyntax\/allMacroLexicalContexts(enclosingSyntax:)"},"kind":"symbol","sections":[],"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/UnresolvedIsExprSyntax/allMacroLexicalContexts(enclosingSyntax:)":{"title":"allMacroLexicalContexts(enclosingSyntax:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"allMacroLexicalContexts","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"enclosingSyntax"},{"text":": (","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier"},{"text":"?) -> [","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax","kind":"typeIdentifier"},{"kind":"text","text":"]"}],"abstract":[{"text":"Return an array of enclosing lexical contexts for the purpose of macros,","type":"text"},{"text":" ","type":"text"},{"text":"from the innermost enclosing lexical context (first in the array) to the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"outermost. If this syntax node itself is a lexical context, it will be"},{"text":" ","type":"text"},{"text":"the innermost lexical context.","type":"text"}],"role":"symbol","kind":"symbol","url":"\/documentation\/macrobuilder\/unresolvedisexprsyntax\/allmacrolexicalcontexts(enclosingsyntax:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/UnresolvedIsExprSyntax\/allMacroLexicalContexts(enclosingSyntax:)","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/UnresolvedIsExprSyntax/SyntaxProtocol-Implementations":{"url":"\/documentation\/macrobuilder\/unresolvedisexprsyntax\/syntaxprotocol-implementations","title":"SyntaxProtocol Implementations","role":"collectionGroup","type":"topic","abstract":[],"kind":"article","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/UnresolvedIsExprSyntax\/SyntaxProtocol-Implementations"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/Syntax":{"abstract":[{"type":"text","text":"A Syntax node represents a tree of nodes with tokens at the leaves."},{"text":" ","type":"text"},{"type":"text","text":"Each node has accessors for its known children, and allows efficient"},{"text":" ","type":"text"},{"text":"iteration over the children through its ","type":"text"},{"type":"codeVoice","code":"children"},{"text":" property.","type":"text"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Syntax"}],"url":"\/documentation\/macrobuilder\/syntax","title":"Syntax","type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Syntax","kind":"identifier"}],"kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/UnresolvedIsExprSyntax":{"url":"\/documentation\/macrobuilder\/unresolvedisexprsyntax","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"UnresolvedIsExprSyntax","kind":"identifier"}],"title":"UnresolvedIsExprSyntax","role":"symbol","navigatorTitle":[{"text":"UnresolvedIsExprSyntax","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"is"},{"text":" keyword without any operands.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/UnresolvedIsExprSyntax"}}}