{"topicSections":[{"anchor":"Default-Implementations","title":"Default Implementations","generated":true,"identifiers":["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/UInt64\/AnyCodableConvertible-Implementations","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/UInt64\/BooleanInitiable-Implementations","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/UInt64\/Bounded-Implementations","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/UInt64\/BoundedRandomnable-Implementations","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/UInt64\/ByteOrderSwappable-Implementations","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/UInt64\/ByteTupleConvertible-Implementations","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/UInt64\/DataDecodable-Implementations","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/UInt64\/DataEncodable-Implementations","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/UInt64\/DiscreteOrContinuous-Implementations","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/UInt64\/Equatable-Implementations","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/UInt64\/ExpressibleByLiteralSyntax-Implementations","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/UInt64\/FloatingPointInitiable-Implementations","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/UInt64\/Initiable-Implementations","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/UInt64\/Number-Implementations","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/UInt64\/NumberConvertible-Implementations","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/UInt64\/SignedIntegerInitiable-Implementations","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/UInt64\/Trivial-Implementations","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/UInt64\/Unsigned-Implementations","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/UInt64\/UnsignedIntegerInitiable-Implementations"]}],"kind":"symbol","metadata":{"symbolKind":"extension","fragments":[{"text":"extension","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","preciseIdentifier":"s:s6UInt64V","text":"UInt64"}],"roleHeading":"Extended Structure","navigatorTitle":[{"text":"UInt64","kind":"identifier"}],"externalID":"s:e:s:s6UInt64V18SwiftSyntaxBuilderE11LiteralTypea","modules":[{"name":"MacroBuilder","relatedModules":["Swift"]}],"role":"symbol","title":"UInt64","extendedModule":"Swift"},"identifier":{"url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/UInt64","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift"]]},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/macrobuilder\/swift\/uint64"]}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"extension","kind":"keyword"},{"kind":"text","text":" "},{"text":"UInt64","preciseIdentifier":"s:s6UInt64V","kind":"typeIdentifier"}],"platforms":["macOS"]}],"kind":"declarations"}],"relationshipsSections":[{"identifiers":["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/AdditionOperatable","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/AnyCodableConvertible","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ApproximatelyEquatable","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ArithmeticOperatable","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanInitiable","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Bounded","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BoundedRandomnable","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ByteOrderSwappable","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ByteTupleConvertible","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/CoderPrimitive","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DataDecodable","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DataEncodable","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Discrete","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DiscreteOrContinuous","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DivisionOperatable","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressibleByLiteralSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/FloatingPointInitiable","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Initiable","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/IntegerInitiable","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/MultiplicationOperatable","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/MutableAdditionOperatable","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/MutableArithmeticOperatable","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/MutableDivisionOperatable","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/MutableMultiplicationOperatable","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/MutableSubtractionOperatable","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Number","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/NumberConvertible","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/NumberInitiable","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Randomnable","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ShouldNotBeDecodedFromBool","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SignedIntegerInitiable","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SignedOrUnsigned","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SubtractionOperatable","doc:\/\/com.swallow.documentation.MacroBuilder\/SL","doc:\/\/com.swallow.documentation.MacroBuilder\/s8CopyableP","doc:\/\/com.swallow.documentation.MacroBuilder\/s23CustomStringConvertibleP","doc:\/\/com.swallow.documentation.MacroBuilder\/Se","doc:\/\/com.swallow.documentation.MacroBuilder\/SE","doc:\/\/com.swallow.documentation.MacroBuilder\/SQ","doc:\/\/com.swallow.documentation.MacroBuilder\/SH","doc:\/\/com.swallow.documentation.MacroBuilder\/s8SendableP","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Trivial","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Unsigned","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/UnsignedIntegerInitiable"],"title":"Conforms To","kind":"relationships","type":"conformsTo"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/DataDecodable":{"navigatorTitle":[{"text":"DataDecodable","kind":"identifier"}],"title":"DataDecodable","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DataDecodable","abstract":[],"kind":"symbol","url":"\/documentation\/macrobuilder\/datadecodable","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DataDecodable","kind":"identifier"}],"role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/DiscreteOrContinuous":{"abstract":[{"text":"A type that is either discrete or continuous.","type":"text"}],"url":"\/documentation\/macrobuilder\/discreteorcontinuous","role":"symbol","title":"DiscreteOrContinuous","type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DiscreteOrContinuous","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DiscreteOrContinuous","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"DiscreteOrContinuous","kind":"identifier"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/Swift/UInt64/ExpressibleByLiteralSyntax-Implementations":{"type":"topic","kind":"article","title":"ExpressibleByLiteralSyntax Implementations","role":"collectionGroup","abstract":[],"url":"\/documentation\/macrobuilder\/swift\/uint64\/expressiblebyliteralsyntax-implementations","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/UInt64\/ExpressibleByLiteralSyntax-Implementations"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ByteOrderSwappable":{"title":"ByteOrderSwappable","url":"\/documentation\/macrobuilder\/byteorderswappable","abstract":[{"text":"A type whose byte-order can be swapped.","type":"text"}],"type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ByteOrderSwappable","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"ByteOrderSwappable"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ByteOrderSwappable","kind":"symbol","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/Swift/UInt64/Initiable-Implementations":{"kind":"article","url":"\/documentation\/macrobuilder\/swift\/uint64\/initiable-implementations","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/UInt64\/Initiable-Implementations","role":"collectionGroup","title":"Initiable Implementations","abstract":[],"type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/AnyCodableConvertible":{"abstract":[],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/AnyCodableConvertible","role":"symbol","kind":"symbol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"AnyCodableConvertible","kind":"identifier"}],"navigatorTitle":[{"text":"AnyCodableConvertible","kind":"identifier"}],"url":"\/documentation\/macrobuilder\/anycodableconvertible","title":"AnyCodableConvertible"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/Swift/UInt64/DataEncodable-Implementations":{"url":"\/documentation\/macrobuilder\/swift\/uint64\/dataencodable-implementations","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/UInt64\/DataEncodable-Implementations","type":"topic","kind":"article","abstract":[],"role":"collectionGroup","title":"DataEncodable Implementations"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/IntegerInitiable":{"navigatorTitle":[{"kind":"identifier","text":"IntegerInitiable"}],"title":"IntegerInitiable","type":"topic","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"IntegerInitiable"}],"url":"\/documentation\/macrobuilder\/integerinitiable","abstract":[],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/IntegerInitiable"},"doc://com.swallow.documentation.MacroBuilder/SE":{"type":"unresolvable","title":"Swift.Encodable","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/SE"},"doc://com.swallow.documentation.MacroBuilder/SH":{"type":"unresolvable","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/SH","title":"Swift.Hashable"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/Swift/UInt64/DataDecodable-Implementations":{"role":"collectionGroup","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/UInt64\/DataDecodable-Implementations","title":"DataDecodable Implementations","kind":"article","type":"topic","url":"\/documentation\/macrobuilder\/swift\/uint64\/datadecodable-implementations","abstract":[]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/MutableArithmeticOperatable":{"type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"MutableArithmeticOperatable"}],"navigatorTitle":[{"kind":"identifier","text":"MutableArithmeticOperatable"}],"role":"symbol","abstract":[{"type":"text","text":"A type capable of mutating arithmetic."}],"url":"\/documentation\/macrobuilder\/mutablearithmeticoperatable","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/MutableArithmeticOperatable","title":"MutableArithmeticOperatable","kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/CoderPrimitive":{"url":"\/documentation\/macrobuilder\/coderprimitive","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"CoderPrimitive"}],"type":"topic","abstract":[{"text":"A primitive ","type":"text"},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" type."}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/CoderPrimitive","navigatorTitle":[{"text":"CoderPrimitive","kind":"identifier"}],"kind":"symbol","role":"symbol","title":"CoderPrimitive"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/Swift":{"abstract":[],"type":"topic","role":"collection","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift","url":"\/documentation\/macrobuilder\/swift","kind":"symbol","title":"Swift"},"doc://com.swallow.documentation.MacroBuilder/SQ":{"type":"unresolvable","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/SQ","title":"Swift.Equatable"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/Swift/UInt64/BoundedRandomnable-Implementations":{"url":"\/documentation\/macrobuilder\/swift\/uint64\/boundedrandomnable-implementations","abstract":[],"role":"collectionGroup","title":"BoundedRandomnable Implementations","type":"topic","kind":"article","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/UInt64\/BoundedRandomnable-Implementations"},"doc://com.swallow.documentation.MacroBuilder/SL":{"type":"unresolvable","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/SL","title":"Swift.Comparable"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/Swift/UInt64/AnyCodableConvertible-Implementations":{"kind":"article","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/UInt64\/AnyCodableConvertible-Implementations","type":"topic","url":"\/documentation\/macrobuilder\/swift\/uint64\/anycodableconvertible-implementations","role":"collectionGroup","abstract":[],"title":"AnyCodableConvertible Implementations"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/Randomnable":{"abstract":[{"text":"A type capable of generating random instances of itself.","type":"text"}],"kind":"symbol","url":"\/documentation\/macrobuilder\/randomnable","navigatorTitle":[{"text":"Randomnable","kind":"identifier"}],"type":"topic","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"Randomnable","kind":"identifier"}],"title":"Randomnable","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Randomnable"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/Swift/UInt64/FloatingPointInitiable-Implementations":{"role":"collectionGroup","abstract":[],"url":"\/documentation\/macrobuilder\/swift\/uint64\/floatingpointinitiable-implementations","title":"FloatingPointInitiable Implementations","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/UInt64\/FloatingPointInitiable-Implementations","kind":"article","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/NumberConvertible":{"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/NumberConvertible","kind":"symbol","title":"NumberConvertible","navigatorTitle":[{"kind":"identifier","text":"NumberConvertible"}],"url":"\/documentation\/macrobuilder\/numberconvertible","abstract":[],"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"NumberConvertible","kind":"identifier"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/Bounded":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Bounded","url":"\/documentation\/macrobuilder\/bounded","role":"symbol","navigatorTitle":[{"text":"Bounded","kind":"identifier"}],"type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Bounded"}],"kind":"symbol","abstract":[{"text":"A type bounded by a minimum and a maximum value.","type":"text"}],"title":"Bounded"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/MultiplicationOperatable":{"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"MultiplicationOperatable"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/MultiplicationOperatable","kind":"symbol","title":"MultiplicationOperatable","abstract":[{"text":"A type capable of multiplication.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"MultiplicationOperatable","kind":"identifier"}],"url":"\/documentation\/macrobuilder\/multiplicationoperatable","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/Swift/UInt64":{"abstract":[],"title":"UInt64","fragments":[{"text":"extension","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"UInt64","preciseIdentifier":"s:s6UInt64V"}],"navigatorTitle":[{"text":"UInt64","kind":"identifier"}],"kind":"symbol","role":"symbol","url":"\/documentation\/macrobuilder\/swift\/uint64","type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/UInt64"},"doc://com.swallow.documentation.MacroBuilder/s23CustomStringConvertibleP":{"type":"unresolvable","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/s23CustomStringConvertibleP","title":"Swift.CustomStringConvertible"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/Initiable":{"navigatorTitle":[{"kind":"identifier","text":"Initiable"}],"url":"\/documentation\/macrobuilder\/initiable","title":"Initiable","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Initiable","abstract":[],"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Initiable","kind":"identifier"}],"type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/Swift/UInt64/Trivial-Implementations":{"abstract":[],"title":"Trivial Implementations","url":"\/documentation\/macrobuilder\/swift\/uint64\/trivial-implementations","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/UInt64\/Trivial-Implementations","role":"collectionGroup","kind":"article","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ApproximatelyEquatable":{"url":"\/documentation\/macrobuilder\/approximatelyequatable","title":"ApproximatelyEquatable","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"A type that can be compared for approximate equality."}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ApproximatelyEquatable","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ApproximatelyEquatable"}],"role":"symbol","navigatorTitle":[{"text":"ApproximatelyEquatable","kind":"identifier"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SignedIntegerInitiable":{"kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"SignedIntegerInitiable","kind":"identifier"}],"title":"SignedIntegerInitiable","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SignedIntegerInitiable","navigatorTitle":[{"kind":"identifier","text":"SignedIntegerInitiable"}],"url":"\/documentation\/macrobuilder\/signedintegerinitiable","role":"symbol","abstract":[]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/Swift/UInt64/BooleanInitiable-Implementations":{"kind":"article","url":"\/documentation\/macrobuilder\/swift\/uint64\/booleaninitiable-implementations","abstract":[],"role":"collectionGroup","type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/UInt64\/BooleanInitiable-Implementations","title":"BooleanInitiable Implementations"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BooleanInitiable":{"title":"BooleanInitiable","url":"\/documentation\/macrobuilder\/booleaninitiable","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanInitiable","kind":"symbol","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"BooleanInitiable"}],"navigatorTitle":[{"text":"BooleanInitiable","kind":"identifier"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SignedOrUnsigned":{"abstract":[],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"SignedOrUnsigned","kind":"identifier"}],"title":"SignedOrUnsigned","kind":"symbol","navigatorTitle":[{"text":"SignedOrUnsigned","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SignedOrUnsigned","role":"symbol","url":"\/documentation\/macrobuilder\/signedorunsigned","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/Swift/UInt64/DiscreteOrContinuous-Implementations":{"abstract":[],"kind":"article","role":"collectionGroup","title":"DiscreteOrContinuous Implementations","type":"topic","url":"\/documentation\/macrobuilder\/swift\/uint64\/discreteorcontinuous-implementations","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/UInt64\/DiscreteOrContinuous-Implementations"},"doc://com.swallow.documentation.MacroBuilder/Se":{"type":"unresolvable","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/Se","title":"Swift.Decodable"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/MutableDivisionOperatable":{"navigatorTitle":[{"text":"MutableDivisionOperatable","kind":"identifier"}],"url":"\/documentation\/macrobuilder\/mutabledivisionoperatable","type":"topic","abstract":[{"text":"A type capable of mutating division.","type":"text"}],"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/MutableDivisionOperatable","kind":"symbol","title":"MutableDivisionOperatable","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"MutableDivisionOperatable","kind":"identifier"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/FloatingPointInitiable":{"abstract":[{"text":"A type which can be initialized from a floating-point.","type":"text"}],"navigatorTitle":[{"text":"FloatingPointInitiable","kind":"identifier"}],"kind":"symbol","title":"FloatingPointInitiable","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"FloatingPointInitiable","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/FloatingPointInitiable","url":"\/documentation\/macrobuilder\/floatingpointinitiable"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/Swift/UInt64/Number-Implementations":{"abstract":[],"kind":"article","url":"\/documentation\/macrobuilder\/swift\/uint64\/number-implementations","title":"Number Implementations","type":"topic","role":"collectionGroup","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/UInt64\/Number-Implementations"},"doc://com.swallow.documentation.MacroBuilder/s8CopyableP":{"type":"unresolvable","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/s8CopyableP","title":"Swift.Copyable"},"doc://com.swallow.documentation.MacroBuilder/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/s8SendableP","title":"Swift.Sendable"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/Discrete":{"type":"topic","abstract":[{"text":"A discrete type.","type":"text"}],"title":"Discrete","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"Discrete","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"Discrete"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Discrete","url":"\/documentation\/macrobuilder\/discrete"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BoundedRandomnable":{"navigatorTitle":[{"kind":"identifier","text":"BoundedRandomnable"}],"role":"symbol","type":"topic","abstract":[{"text":"A bounded type capable of generating random instances of itself.","type":"text"}],"kind":"symbol","title":"BoundedRandomnable","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BoundedRandomnable","kind":"identifier"}],"url":"\/documentation\/macrobuilder\/boundedrandomnable","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BoundedRandomnable"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ShouldNotBeDecodedFromBool":{"url":"\/documentation\/macrobuilder\/shouldnotbedecodedfrombool","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ShouldNotBeDecodedFromBool"}],"type":"topic","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ShouldNotBeDecodedFromBool","navigatorTitle":[{"kind":"identifier","text":"ShouldNotBeDecodedFromBool"}],"kind":"symbol","role":"symbol","title":"ShouldNotBeDecodedFromBool"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/UnsignedIntegerInitiable":{"navigatorTitle":[{"kind":"identifier","text":"UnsignedIntegerInitiable"}],"title":"UnsignedIntegerInitiable","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"UnsignedIntegerInitiable","kind":"identifier"}],"url":"\/documentation\/macrobuilder\/unsignedintegerinitiable","abstract":[],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/UnsignedIntegerInitiable"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/MutableMultiplicationOperatable":{"kind":"symbol","abstract":[{"type":"text","text":"A type capable of mutating multiplication."}],"navigatorTitle":[{"kind":"identifier","text":"MutableMultiplicationOperatable"}],"role":"symbol","title":"MutableMultiplicationOperatable","url":"\/documentation\/macrobuilder\/mutablemultiplicationoperatable","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"MutableMultiplicationOperatable","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/MutableMultiplicationOperatable","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/DataEncodable":{"url":"\/documentation\/macrobuilder\/dataencodable","navigatorTitle":[{"text":"DataEncodable","kind":"identifier"}],"abstract":[{"type":"text","text":"A type that can convert itself into a binary-data representation."}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DataEncodable","kind":"symbol","title":"DataEncodable","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DataEncodable","kind":"identifier"}],"role":"symbol","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/DivisionOperatable":{"type":"topic","abstract":[{"type":"text","text":"A type capable of division."}],"navigatorTitle":[{"kind":"identifier","text":"DivisionOperatable"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"DivisionOperatable","kind":"identifier"}],"title":"DivisionOperatable","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DivisionOperatable","kind":"symbol","role":"symbol","url":"\/documentation\/macrobuilder\/divisionoperatable"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/MutableAdditionOperatable":{"kind":"symbol","abstract":[{"text":"A type capable of mutating addition.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"MutableAdditionOperatable"}],"role":"symbol","title":"MutableAdditionOperatable","url":"\/documentation\/macrobuilder\/mutableadditionoperatable","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"MutableAdditionOperatable","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/MutableAdditionOperatable","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SubtractionOperatable":{"abstract":[{"type":"text","text":"A type capable of subtraction."}],"url":"\/documentation\/macrobuilder\/subtractionoperatable","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SubtractionOperatable","kind":"symbol","type":"topic","title":"SubtractionOperatable","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"SubtractionOperatable","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"SubtractionOperatable","kind":"identifier"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/Swift/UInt64/Bounded-Implementations":{"abstract":[],"url":"\/documentation\/macrobuilder\/swift\/uint64\/bounded-implementations","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/UInt64\/Bounded-Implementations","kind":"article","type":"topic","title":"Bounded Implementations","role":"collectionGroup"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/Swift/UInt64/ByteOrderSwappable-Implementations":{"type":"topic","role":"collectionGroup","kind":"article","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/UInt64\/ByteOrderSwappable-Implementations","url":"\/documentation\/macrobuilder\/swift\/uint64\/byteorderswappable-implementations","title":"ByteOrderSwappable Implementations","abstract":[]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/Number":{"abstract":[{"type":"text","text":"A type that represents a number."}],"url":"\/documentation\/macrobuilder\/number","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Number","title":"Number","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Number"}],"type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Number","kind":"identifier"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/Swift/UInt64/UnsignedIntegerInitiable-Implementations":{"type":"topic","kind":"article","title":"UnsignedIntegerInitiable Implementations","role":"collectionGroup","abstract":[],"url":"\/documentation\/macrobuilder\/swift\/uint64\/unsignedintegerinitiable-implementations","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/UInt64\/UnsignedIntegerInitiable-Implementations"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/NumberInitiable":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"NumberInitiable"}],"role":"symbol","type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"NumberInitiable"}],"title":"NumberInitiable","abstract":[],"url":"\/documentation\/macrobuilder\/numberinitiable","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/NumberInitiable"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/Trivial":{"abstract":[{"type":"text","text":"A trivial (Darwin) type."}],"kind":"symbol","url":"\/documentation\/macrobuilder\/trivial","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Trivial","title":"Trivial","role":"symbol","navigatorTitle":[{"text":"Trivial","kind":"identifier"}],"type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Trivial","kind":"identifier"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/Swift/UInt64/SignedIntegerInitiable-Implementations":{"title":"SignedIntegerInitiable Implementations","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/UInt64\/SignedIntegerInitiable-Implementations","url":"\/documentation\/macrobuilder\/swift\/uint64\/signedintegerinitiable-implementations","type":"topic","role":"collectionGroup","abstract":[],"kind":"article"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/AdditionOperatable":{"kind":"symbol","abstract":[{"type":"text","text":"A type capable of addition."}],"navigatorTitle":[{"kind":"identifier","text":"AdditionOperatable"}],"role":"symbol","title":"AdditionOperatable","url":"\/documentation\/macrobuilder\/additionoperatable","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AdditionOperatable"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/AdditionOperatable","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/MutableSubtractionOperatable":{"type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"MutableSubtractionOperatable"}],"navigatorTitle":[{"text":"MutableSubtractionOperatable","kind":"identifier"}],"role":"symbol","abstract":[{"text":"A type capable of mutating subtraction.","type":"text"}],"url":"\/documentation\/macrobuilder\/mutablesubtractionoperatable","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/MutableSubtractionOperatable","title":"MutableSubtractionOperatable","kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExpressibleByLiteralSyntax":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressibleByLiteralSyntax","navigatorTitle":[{"text":"ExpressibleByLiteralSyntax","kind":"identifier"}],"url":"\/documentation\/macrobuilder\/expressiblebyliteralsyntax","kind":"symbol","role":"symbol","type":"topic","title":"ExpressibleByLiteralSyntax","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"ExpressibleByLiteralSyntax","kind":"identifier"}],"abstract":[{"type":"text","text":"A Swift type whose value can be represented directly in source code by a"},{"text":" ","type":"text"},{"text":"Swift literal.","type":"text"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/Swift/UInt64/Unsigned-Implementations":{"kind":"article","url":"\/documentation\/macrobuilder\/swift\/uint64\/unsigned-implementations","abstract":[],"type":"topic","role":"collectionGroup","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/UInt64\/Unsigned-Implementations","title":"Unsigned Implementations"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ByteTupleConvertible":{"title":"ByteTupleConvertible","abstract":[{"type":"text","text":"A type that can be converted to and from a tuple representation of its bytes."}],"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"ByteTupleConvertible","kind":"identifier"}],"url":"\/documentation\/macrobuilder\/bytetupleconvertible","type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ByteTupleConvertible","role":"symbol","navigatorTitle":[{"text":"ByteTupleConvertible","kind":"identifier"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/Swift/UInt64/NumberConvertible-Implementations":{"abstract":[],"kind":"article","type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/UInt64\/NumberConvertible-Implementations","title":"NumberConvertible Implementations","url":"\/documentation\/macrobuilder\/swift\/uint64\/numberconvertible-implementations","role":"collectionGroup"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/Swift/UInt64/ByteTupleConvertible-Implementations":{"kind":"article","role":"collectionGroup","abstract":[],"title":"ByteTupleConvertible Implementations","type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/UInt64\/ByteTupleConvertible-Implementations","url":"\/documentation\/macrobuilder\/swift\/uint64\/bytetupleconvertible-implementations"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ArithmeticOperatable":{"type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ArithmeticOperatable"}],"navigatorTitle":[{"text":"ArithmeticOperatable","kind":"identifier"}],"role":"symbol","abstract":[{"type":"text","text":"A type capable of arithmetic."}],"url":"\/documentation\/macrobuilder\/arithmeticoperatable","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ArithmeticOperatable","title":"ArithmeticOperatable","kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/Swift/UInt64/Equatable-Implementations":{"kind":"article","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/UInt64\/Equatable-Implementations","type":"topic","url":"\/documentation\/macrobuilder\/swift\/uint64\/equatable-implementations","role":"collectionGroup","abstract":[],"title":"Equatable Implementations"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/Unsigned":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Unsigned","url":"\/documentation\/macrobuilder\/unsigned","role":"symbol","navigatorTitle":[{"text":"Unsigned","kind":"identifier"}],"title":"Unsigned","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"Unsigned","kind":"identifier"}],"type":"topic","kind":"symbol","abstract":[]}}}