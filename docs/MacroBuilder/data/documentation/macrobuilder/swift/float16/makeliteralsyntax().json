{"metadata":{"externalID":"s:18SwiftSyntaxBuilder020ExpressibleByLiteralB0PAASFRzs25LosslessStringConvertibleRzrlE04makefB00aB004ExprB0VyF::SYNTHESIZED::s:s7Float16V","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"makeLiteralSyntax","kind":"identifier"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"ExprSyntax","preciseIdentifier":"s:11SwiftSyntax04ExprB0V"}],"role":"symbol","extendedModule":"SwiftSyntaxBuilder","modules":[{"relatedModules":["SwiftSyntaxBuilder"],"name":"MacroBuilder"}],"title":"makeLiteralSyntax()","roleHeading":"Instance Method","symbolKind":"method","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Self","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"FloatingPoint","type":"codeVoice"},{"type":"text","text":" and "},{"code":"LosslessStringConvertible","type":"codeVoice"},{"text":".","type":"text"}]}},"kind":"symbol","identifier":{"url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/Float16\/makeLiteralSyntax()","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/macrobuilder\/swift\/float16\/makeliteralsyntax()"]}],"abstract":[{"type":"text","text":"Returns a syntax tree that represents the value of this instance."}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/Float16","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/Float16\/ExpressibleByLiteralSyntax-Implementations"]]},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"makeLiteralSyntax"},{"text":"() -> ","kind":"text"},{"text":"ExprSyntax","preciseIdentifier":"s:11SwiftSyntax04ExprB0V","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprSyntax"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"text":"Discussion","level":2,"anchor":"discussion","type":"heading"},{"inlineContent":[{"type":"text","text":"This method is usually not called directly. Instead, conforming types can"},{"type":"text","text":" "},{"type":"text","text":"be turned into syntax trees using "},{"code":"SwiftSyntax\/ExprSyntax\/init(literal:)","type":"codeVoice"},{"type":"text","text":":"}],"type":"paragraph"},{"type":"codeListing","code":["let expr2 = Expr(literal: [0+1, 1+1, 2+1])","\/\/ `expr2` is a syntax tree for `[1, 2, 3]`."],"syntax":null},{"type":"paragraph","inlineContent":[{"type":"text","text":"Or interpolated into a Swift source code literal with the syntax"},{"type":"text","text":" "},{"type":"codeVoice","code":"\\(literal: <value>)"},{"text":":","type":"text"}]},{"type":"codeListing","code":["let greeting = \"Hello, world!\"","let expr1 = ExprSyntax(\"print(\\(literal: greeting))\")","\/\/ `expr1` is a syntax tree for `print(\"Hello, world!\")`"],"syntax":null}],"kind":"content"}],"sections":[],"schemaVersion":{"minor":3,"patch":0,"major":0},"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprSyntax":{"url":"\/documentation\/macrobuilder\/exprsyntax","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"ExprSyntax","kind":"identifier"}],"type":"topic","title":"ExprSyntax","abstract":[],"kind":"symbol","navigatorTitle":[{"text":"ExprSyntax","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprSyntax"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/Swift/Float16":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/Float16","role":"symbol","abstract":[],"kind":"symbol","navigatorTitle":[{"text":"Float16","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"extension"},{"text":" ","kind":"text"},{"text":"Float16","preciseIdentifier":"s:s7Float16V","kind":"identifier"}],"title":"Float16","url":"\/documentation\/macrobuilder\/swift\/float16","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/Swift":{"abstract":[],"type":"topic","role":"collection","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift","url":"\/documentation\/macrobuilder\/swift","kind":"symbol","title":"Swift"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/Swift/Float16/makeLiteralSyntax()":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/Float16\/makeLiteralSyntax()","kind":"symbol","url":"\/documentation\/macrobuilder\/swift\/float16\/makeliteralsyntax()","title":"makeLiteralSyntax()","type":"topic","role":"symbol","abstract":[{"type":"text","text":"Returns a syntax tree that represents the value of this instance."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"makeLiteralSyntax","kind":"identifier"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","text":"ExprSyntax","preciseIdentifier":"s:11SwiftSyntax04ExprB0V"}],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"FloatingPoint"},{"type":"text","text":" and "},{"type":"codeVoice","code":"LosslessStringConvertible"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]}},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/Swift/Float16/ExpressibleByLiteralSyntax-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/Float16\/ExpressibleByLiteralSyntax-Implementations","role":"collectionGroup","abstract":[],"kind":"article","title":"ExpressibleByLiteralSyntax Implementations","url":"\/documentation\/macrobuilder\/swift\/float16\/expressiblebyliteralsyntax-implementations","type":"topic"}}}