{"variants":[{"paths":["\/documentation\/macrobuilder\/swift\/string\/makeliteralsyntax()"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","sections":[],"metadata":{"roleHeading":"Instance Method","title":"makeLiteralSyntax()","role":"symbol","extendedModule":"Swift","modules":[{"relatedModules":["Swift"],"name":"MacroBuilder"}],"externalID":"s:SS18SwiftSyntaxBuilderE011makeLiteralB00aB006Stringe4ExprB0VyF","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"makeLiteralSyntax","kind":"identifier"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:11SwiftSyntax017StringLiteralExprB0V","text":"StringLiteralExprSyntax","kind":"typeIdentifier"}]},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/String","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/String\/ExpressibleByLiteralSyntax-Implementations"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/String\/makeLiteralSyntax()"},"abstract":[{"type":"text","text":"Returns a syntax tree that represents the value of this instance."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"makeLiteralSyntax","kind":"identifier"},{"kind":"text","text":"() -> "},{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralExprSyntax","kind":"typeIdentifier","text":"StringLiteralExprSyntax","preciseIdentifier":"s:11SwiftSyntax017StringLiteralExprB0V"}]}]},{"content":[{"level":2,"anchor":"discussion","text":"Discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method is usually not called directly. Instead, conforming types can"},{"type":"text","text":" "},{"text":"be turned into syntax trees using ","type":"text"},{"code":"SwiftSyntax\/ExprSyntax\/init(literal:)","type":"codeVoice"},{"type":"text","text":":"}]},{"syntax":null,"code":["let expr2 = Expr(literal: [0+1, 1+1, 2+1])","\/\/ `expr2` is a syntax tree for `[1, 2, 3]`."],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"Or interpolated into a Swift source code literal with the syntax"},{"type":"text","text":" "},{"code":"\\(literal: <value>)","type":"codeVoice"},{"type":"text","text":":"}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":["let greeting = \"Hello, world!\"","let expr1 = ExprSyntax(\"print(\\(literal: greeting))\")","\/\/ `expr1` is a syntax tree for `print(\"Hello, world!\")`"]}],"kind":"content"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/Swift/String/makeLiteralSyntax()":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/String\/makeLiteralSyntax()","kind":"symbol","url":"\/documentation\/macrobuilder\/swift\/string\/makeliteralsyntax()","title":"makeLiteralSyntax()","role":"symbol","abstract":[{"type":"text","text":"Returns a syntax tree that represents the value of this instance."}],"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"makeLiteralSyntax"},{"kind":"text","text":"() -> "},{"text":"StringLiteralExprSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax017StringLiteralExprB0V"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/Swift/String":{"title":"String","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/String","navigatorTitle":[{"kind":"identifier","text":"String"}],"abstract":[{"text":"https:\/\/gist.github.com\/krzyzanowskim\/f2ca3e1e4f6dfd490fc35630b823eaac","type":"text"}],"role":"symbol","url":"\/documentation\/macrobuilder\/swift\/string","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"extension"},{"kind":"text","text":" "},{"preciseIdentifier":"s:SS","text":"String","kind":"identifier"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StringLiteralExprSyntax":{"kind":"symbol","role":"symbol","abstract":[{"text":"A string literal.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StringLiteralExprSyntax","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralExprSyntax","type":"topic","title":"StringLiteralExprSyntax","url":"\/documentation\/macrobuilder\/stringliteralexprsyntax","navigatorTitle":[{"kind":"identifier","text":"StringLiteralExprSyntax"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/Swift/String/ExpressibleByLiteralSyntax-Implementations":{"kind":"article","title":"ExpressibleByLiteralSyntax Implementations","url":"\/documentation\/macrobuilder\/swift\/string\/expressiblebyliteralsyntax-implementations","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/String\/ExpressibleByLiteralSyntax-Implementations","type":"topic","role":"collectionGroup"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/Swift":{"abstract":[],"type":"topic","role":"collection","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift","url":"\/documentation\/macrobuilder\/swift","kind":"symbol","title":"Swift"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"}}}