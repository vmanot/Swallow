{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/Bool\/makeLiteralSyntax()"},"metadata":{"modules":[{"relatedModules":["Swift"],"name":"MacroBuilder"}],"extendedModule":"Swift","roleHeading":"Instance Method","role":"symbol","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"makeLiteralSyntax"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:11SwiftSyntax018BooleanLiteralExprB0V","text":"BooleanLiteralExprSyntax","kind":"typeIdentifier"}],"title":"makeLiteralSyntax()","externalID":"s:Sb18SwiftSyntaxBuilderE011makeLiteralB00aB007Booleane4ExprB0VyF"},"abstract":[{"text":"Returns a syntax tree that represents the value of this instance.","type":"text"}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"makeLiteralSyntax","kind":"identifier"},{"text":"() -> ","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax","preciseIdentifier":"s:11SwiftSyntax018BooleanLiteralExprB0V","kind":"typeIdentifier","text":"BooleanLiteralExprSyntax"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"level":2,"anchor":"discussion","text":"Discussion","type":"heading"},{"inlineContent":[{"type":"text","text":"This method is usually not called directly. Instead, conforming types can"},{"text":" ","type":"text"},{"text":"be turned into syntax trees using ","type":"text"},{"code":"SwiftSyntax\/ExprSyntax\/init(literal:)","type":"codeVoice"},{"text":":","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":["let expr2 = Expr(literal: [0+1, 1+1, 2+1])","\/\/ `expr2` is a syntax tree for `[1, 2, 3]`."]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Or interpolated into a Swift source code literal with the syntax"},{"text":" ","type":"text"},{"type":"codeVoice","code":"\\(literal: <value>)"},{"type":"text","text":":"}]},{"code":["let greeting = \"Hello, world!\"","let expr1 = ExprSyntax(\"print(\\(literal: greeting))\")","\/\/ `expr1` is a syntax tree for `print(\"Hello, world!\")`"],"syntax":null,"type":"codeListing"}]}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/Bool","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/Bool\/ExpressibleByLiteralSyntax-Implementations"]]},"variants":[{"paths":["\/documentation\/macrobuilder\/swift\/bool\/makeliteralsyntax()"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"kind":"symbol","sections":[],"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/Swift/Bool/ExpressibleByLiteralSyntax-Implementations":{"type":"topic","abstract":[],"title":"ExpressibleByLiteralSyntax Implementations","role":"collectionGroup","url":"\/documentation\/macrobuilder\/swift\/bool\/expressiblebyliteralsyntax-implementations","kind":"article","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/Bool\/ExpressibleByLiteralSyntax-Implementations"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/Swift/Bool":{"kind":"symbol","role":"symbol","abstract":[],"fragments":[{"text":"extension","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Bool","kind":"identifier","preciseIdentifier":"s:Sb"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/Bool","type":"topic","title":"Bool","url":"\/documentation\/macrobuilder\/swift\/bool","navigatorTitle":[{"text":"Bool","kind":"identifier"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/Swift/Bool/makeLiteralSyntax()":{"url":"\/documentation\/macrobuilder\/swift\/bool\/makeliteralsyntax()","type":"topic","kind":"symbol","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/Bool\/makeLiteralSyntax()","abstract":[{"text":"Returns a syntax tree that represents the value of this instance.","type":"text"}],"title":"makeLiteralSyntax()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"makeLiteralSyntax","kind":"identifier"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax018BooleanLiteralExprB0V","text":"BooleanLiteralExprSyntax"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BooleanLiteralExprSyntax":{"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"BooleanLiteralExprSyntax","kind":"identifier"}],"title":"BooleanLiteralExprSyntax","abstract":[],"navigatorTitle":[{"text":"BooleanLiteralExprSyntax","kind":"identifier"}],"url":"\/documentation\/macrobuilder\/booleanliteralexprsyntax","type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/Swift":{"abstract":[],"type":"topic","role":"collection","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift","url":"\/documentation\/macrobuilder\/swift","kind":"symbol","title":"Swift"}}}