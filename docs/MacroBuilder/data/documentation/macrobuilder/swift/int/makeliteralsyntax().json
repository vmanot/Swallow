{"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"makeLiteralSyntax","kind":"identifier"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax018IntegerLiteralExprB0V","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/IntegerLiteralExprSyntax","text":"IntegerLiteralExprSyntax"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"level":2,"anchor":"discussion","text":"Discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"This method is usually not called directly. Instead, conforming types can","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"be turned into syntax trees using "},{"type":"codeVoice","code":"SwiftSyntax\/ExprSyntax\/init(literal:)"},{"type":"text","text":":"}]},{"syntax":null,"code":["let expr2 = Expr(literal: [0+1, 1+1, 2+1])","\/\/ `expr2` is a syntax tree for `[1, 2, 3]`."],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"Or interpolated into a Swift source code literal with the syntax"},{"text":" ","type":"text"},{"type":"codeVoice","code":"\\(literal: <value>)"},{"type":"text","text":":"}],"type":"paragraph"},{"code":["let greeting = \"Hello, world!\"","let expr1 = ExprSyntax(\"print(\\(literal: greeting))\")","\/\/ `expr1` is a syntax tree for `print(\"Hello, world!\")`"],"type":"codeListing","syntax":null}]}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/Int","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/Int\/ExpressibleByLiteralSyntax-Implementations"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/macrobuilder\/swift\/int\/makeliteralsyntax()"]}],"sections":[],"identifier":{"url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/Int\/makeLiteralSyntax()","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Returns a syntax tree that represents the value of this instance."}],"metadata":{"extendedModule":"SwiftSyntaxBuilder","roleHeading":"Instance Method","modules":[{"name":"MacroBuilder","relatedModules":["SwiftSyntaxBuilder"]}],"title":"makeLiteralSyntax()","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"makeLiteralSyntax"},{"text":"() -> ","kind":"text"},{"text":"IntegerLiteralExprSyntax","preciseIdentifier":"s:11SwiftSyntax018IntegerLiteralExprB0V","kind":"typeIdentifier"}],"externalID":"s:18SwiftSyntaxBuilder020ExpressibleByLiteralB0PAASzRzrlE04makefB00aB007Integerf4ExprB0VyF::SYNTHESIZED::s:Si","conformance":{"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"BinaryInteger","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"symbolKind":"method","role":"symbol"},"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/Swift/Int":{"fragments":[{"text":"extension","kind":"keyword"},{"kind":"text","text":" "},{"text":"Int","kind":"identifier","preciseIdentifier":"s:Si"}],"url":"\/documentation\/macrobuilder\/swift\/int","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/Int","navigatorTitle":[{"text":"Int","kind":"identifier"}],"type":"topic","role":"symbol","kind":"symbol","title":"Int"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/Swift/Int/makeLiteralSyntax()":{"url":"\/documentation\/macrobuilder\/swift\/int\/makeliteralsyntax()","conformance":{"constraints":[{"code":"Self","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"BinaryInteger"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"makeLiteralSyntax","kind":"identifier"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:11SwiftSyntax018IntegerLiteralExprB0V","text":"IntegerLiteralExprSyntax","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/Int\/makeLiteralSyntax()","abstract":[{"text":"Returns a syntax tree that represents the value of this instance.","type":"text"}],"type":"topic","kind":"symbol","title":"makeLiteralSyntax()","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/Swift":{"abstract":[],"type":"topic","role":"collection","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift","url":"\/documentation\/macrobuilder\/swift","kind":"symbol","title":"Swift"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/Swift/Int/ExpressibleByLiteralSyntax-Implementations":{"url":"\/documentation\/macrobuilder\/swift\/int\/expressiblebyliteralsyntax-implementations","role":"collectionGroup","kind":"article","type":"topic","title":"ExpressibleByLiteralSyntax Implementations","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/Int\/ExpressibleByLiteralSyntax-Implementations","abstract":[]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/IntegerLiteralExprSyntax":{"kind":"symbol","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"IntegerLiteralExprSyntax"}],"navigatorTitle":[{"text":"IntegerLiteralExprSyntax","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/IntegerLiteralExprSyntax","url":"\/documentation\/macrobuilder\/integerliteralexprsyntax","title":"IntegerLiteralExprSyntax","abstract":[]}}}