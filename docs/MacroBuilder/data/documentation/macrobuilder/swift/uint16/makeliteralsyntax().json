{"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"makeLiteralSyntax","kind":"identifier"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/IntegerLiteralExprSyntax","preciseIdentifier":"s:11SwiftSyntax018IntegerLiteralExprB0V","text":"IntegerLiteralExprSyntax"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"anchor":"discussion","text":"Discussion","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"This method is usually not called directly. Instead, conforming types can"},{"text":" ","type":"text"},{"type":"text","text":"be turned into syntax trees using "},{"code":"SwiftSyntax\/ExprSyntax\/init(literal:)","type":"codeVoice"},{"text":":","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":["let expr2 = Expr(literal: [0+1, 1+1, 2+1])","\/\/ `expr2` is a syntax tree for `[1, 2, 3]`."],"syntax":null},{"type":"paragraph","inlineContent":[{"type":"text","text":"Or interpolated into a Swift source code literal with the syntax"},{"type":"text","text":" "},{"code":"\\(literal: <value>)","type":"codeVoice"},{"type":"text","text":":"}]},{"syntax":null,"type":"codeListing","code":["let greeting = \"Hello, world!\"","let expr1 = ExprSyntax(\"print(\\(literal: greeting))\")","\/\/ `expr1` is a syntax tree for `print(\"Hello, world!\")`"]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/macrobuilder\/swift\/uint16\/makeliteralsyntax()"]}],"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/UInt16\/makeLiteralSyntax()"},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/UInt16","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/UInt16\/ExpressibleByLiteralSyntax-Implementations"]]},"sections":[],"metadata":{"modules":[{"name":"MacroBuilder","relatedModules":["SwiftSyntaxBuilder"]}],"conformance":{"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"BinaryInteger"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"externalID":"s:18SwiftSyntaxBuilder020ExpressibleByLiteralB0PAASzRzrlE04makefB00aB007Integerf4ExprB0VyF::SYNTHESIZED::s:s6UInt16V","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"makeLiteralSyntax","kind":"identifier"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","text":"IntegerLiteralExprSyntax","preciseIdentifier":"s:11SwiftSyntax018IntegerLiteralExprB0V"}],"roleHeading":"Instance Method","title":"makeLiteralSyntax()","symbolKind":"method","role":"symbol","extendedModule":"SwiftSyntaxBuilder"},"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"type":"text","text":"Returns a syntax tree that represents the value of this instance."}],"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/Swift/UInt16/makeLiteralSyntax()":{"conformance":{"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"code":"BinaryInteger","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"title":"makeLiteralSyntax()","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/UInt16\/makeLiteralSyntax()","type":"topic","abstract":[{"text":"Returns a syntax tree that represents the value of this instance.","type":"text"}],"role":"symbol","url":"\/documentation\/macrobuilder\/swift\/uint16\/makeliteralsyntax()","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"makeLiteralSyntax"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax018IntegerLiteralExprB0V","text":"IntegerLiteralExprSyntax"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/IntegerLiteralExprSyntax":{"kind":"symbol","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"IntegerLiteralExprSyntax"}],"navigatorTitle":[{"text":"IntegerLiteralExprSyntax","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/IntegerLiteralExprSyntax","url":"\/documentation\/macrobuilder\/integerliteralexprsyntax","title":"IntegerLiteralExprSyntax","abstract":[]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/Swift/UInt16":{"role":"symbol","fragments":[{"text":"extension","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"UInt16","preciseIdentifier":"s:s6UInt16V"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/UInt16","type":"topic","kind":"symbol","abstract":[],"url":"\/documentation\/macrobuilder\/swift\/uint16","title":"UInt16","navigatorTitle":[{"kind":"identifier","text":"UInt16"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/Swift/UInt16/ExpressibleByLiteralSyntax-Implementations":{"url":"\/documentation\/macrobuilder\/swift\/uint16\/expressiblebyliteralsyntax-implementations","kind":"article","role":"collectionGroup","title":"ExpressibleByLiteralSyntax Implementations","abstract":[],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/UInt16\/ExpressibleByLiteralSyntax-Implementations"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/Swift":{"abstract":[],"type":"topic","role":"collection","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift","url":"\/documentation\/macrobuilder\/swift","kind":"symbol","title":"Swift"}}}