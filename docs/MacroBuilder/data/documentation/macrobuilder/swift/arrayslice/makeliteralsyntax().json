{"metadata":{"externalID":"s:s10ArraySliceV18SwiftSyntaxBuilderAC020ExpressibleByLiteralD0RzlE04makehD00cD00a4ExprD0VyF","role":"symbol","roleHeading":"Instance Method","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Element","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"ExpressibleByLiteralSyntax"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"makeLiteralSyntax"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:11SwiftSyntax09ArrayExprB0V","text":"ArrayExprSyntax","kind":"typeIdentifier"}],"modules":[{"name":"MacroBuilder","relatedModules":["Swift"]}],"title":"makeLiteralSyntax()","symbolKind":"method","extendedModule":"Swift"},"abstract":[{"text":"Returns a syntax tree that represents the value of this instance.","type":"text"}],"identifier":{"url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/ArraySlice\/makeLiteralSyntax()","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"makeLiteralSyntax","kind":"identifier"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax09ArrayExprB0V","text":"ArrayExprSyntax","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ArrayExprSyntax"}],"languages":["swift"]}]},{"kind":"content","content":[{"type":"heading","anchor":"discussion","text":"Discussion","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method is usually not called directly. Instead, conforming types can"},{"type":"text","text":" "},{"type":"text","text":"be turned into syntax trees using "},{"type":"codeVoice","code":"SwiftSyntax\/ExprSyntax\/init(literal:)"},{"text":":","type":"text"}]},{"code":["let expr2 = Expr(literal: [0+1, 1+1, 2+1])","\/\/ `expr2` is a syntax tree for `[1, 2, 3]`."],"type":"codeListing","syntax":null},{"type":"paragraph","inlineContent":[{"type":"text","text":"Or interpolated into a Swift source code literal with the syntax"},{"text":" ","type":"text"},{"type":"codeVoice","code":"\\(literal: <value>)"},{"text":":","type":"text"}]},{"code":["let greeting = \"Hello, world!\"","let expr1 = ExprSyntax(\"print(\\(literal: greeting))\")","\/\/ `expr1` is a syntax tree for `print(\"Hello, world!\")`"],"syntax":null,"type":"codeListing"}]}],"variants":[{"paths":["\/documentation\/macrobuilder\/swift\/arrayslice\/makeliteralsyntax()"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/ArraySlice","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/ArraySlice\/ExpressibleByLiteralSyntax-Implementations"]]},"schemaVersion":{"patch":0,"minor":3,"major":0},"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/Swift/ArraySlice/makeLiteralSyntax()":{"url":"\/documentation\/macrobuilder\/swift\/arrayslice\/makeliteralsyntax()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"makeLiteralSyntax","kind":"identifier"},{"kind":"text","text":"() -> "},{"text":"ArrayExprSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax09ArrayExprB0V"}],"abstract":[{"text":"Returns a syntax tree that represents the value of this instance.","type":"text"}],"kind":"symbol","title":"makeLiteralSyntax()","type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/ArraySlice\/makeLiteralSyntax()","role":"symbol","conformance":{"constraints":[{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"code":"ExpressibleByLiteralSyntax","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]}},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/Swift":{"abstract":[],"type":"topic","role":"collection","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift","url":"\/documentation\/macrobuilder\/swift","kind":"symbol","title":"Swift"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/Swift/ArraySlice":{"abstract":[],"url":"\/documentation\/macrobuilder\/swift\/arrayslice","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/ArraySlice","title":"ArraySlice","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ArraySlice"}],"type":"topic","fragments":[{"text":"extension","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:s10ArraySliceV","kind":"identifier","text":"ArraySlice"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ArrayExprSyntax":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ArrayExprSyntax","url":"\/documentation\/macrobuilder\/arrayexprsyntax","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ArrayExprSyntax"}],"role":"symbol","kind":"symbol","title":"ArrayExprSyntax","navigatorTitle":[{"text":"ArrayExprSyntax","kind":"identifier"}],"abstract":[{"type":"text","text":"An array literal."}],"type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/Swift/ArraySlice/ExpressibleByLiteralSyntax-Implementations":{"url":"\/documentation\/macrobuilder\/swift\/arrayslice\/expressiblebyliteralsyntax-implementations","type":"topic","role":"collectionGroup","kind":"article","title":"ExpressibleByLiteralSyntax Implementations","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/ArraySlice\/ExpressibleByLiteralSyntax-Implementations"}}}