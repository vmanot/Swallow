{"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"makeLiteralSyntax","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"IntegerLiteralExprSyntax","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/IntegerLiteralExprSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax018IntegerLiteralExprB0V"}]}],"kind":"declarations"},{"kind":"content","content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"This method is usually not called directly. Instead, conforming types can","type":"text"},{"type":"text","text":" "},{"text":"be turned into syntax trees using ","type":"text"},{"code":"SwiftSyntax\/ExprSyntax\/init(literal:)","type":"codeVoice"},{"text":":","type":"text"}]},{"type":"codeListing","syntax":null,"code":["let expr2 = Expr(literal: [0+1, 1+1, 2+1])","\/\/ `expr2` is a syntax tree for `[1, 2, 3]`."]},{"inlineContent":[{"type":"text","text":"Or interpolated into a Swift source code literal with the syntax"},{"text":" ","type":"text"},{"type":"codeVoice","code":"\\(literal: <value>)"},{"type":"text","text":":"}],"type":"paragraph"},{"syntax":null,"type":"codeListing","code":["let greeting = \"Hello, world!\"","let expr1 = ExprSyntax(\"print(\\(literal: greeting))\")","\/\/ `expr1` is a syntax tree for `print(\"Hello, world!\")`"]}]}],"abstract":[{"type":"text","text":"Returns a syntax tree that represents the value of this instance."}],"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"symbol","identifier":{"url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/Int16\/makeLiteralSyntax()","interfaceLanguage":"swift"},"metadata":{"extendedModule":"SwiftSyntaxBuilder","title":"makeLiteralSyntax()","symbolKind":"method","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Self","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"BinaryInteger","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"makeLiteralSyntax"},{"kind":"text","text":"() -> "},{"text":"IntegerLiteralExprSyntax","preciseIdentifier":"s:11SwiftSyntax018IntegerLiteralExprB0V","kind":"typeIdentifier"}],"roleHeading":"Instance Method","modules":[{"relatedModules":["SwiftSyntaxBuilder"],"name":"MacroBuilder"}],"role":"symbol","externalID":"s:18SwiftSyntaxBuilder020ExpressibleByLiteralB0PAASzRzrlE04makefB00aB007Integerf4ExprB0VyF::SYNTHESIZED::s:s5Int16V"},"variants":[{"paths":["\/documentation\/macrobuilder\/swift\/int16\/makeliteralsyntax()"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/Int16","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/Int16\/ExpressibleByLiteralSyntax-Implementations"]]},"sections":[],"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/Swift/Int16":{"title":"Int16","role":"symbol","abstract":[],"kind":"symbol","navigatorTitle":[{"text":"Int16","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"extension"},{"kind":"text","text":" "},{"kind":"identifier","text":"Int16","preciseIdentifier":"s:s5Int16V"}],"url":"\/documentation\/macrobuilder\/swift\/int16","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/Int16","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/IntegerLiteralExprSyntax":{"kind":"symbol","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"IntegerLiteralExprSyntax"}],"navigatorTitle":[{"text":"IntegerLiteralExprSyntax","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/IntegerLiteralExprSyntax","url":"\/documentation\/macrobuilder\/integerliteralexprsyntax","title":"IntegerLiteralExprSyntax","abstract":[]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/Swift/Int16/ExpressibleByLiteralSyntax-Implementations":{"abstract":[],"type":"topic","url":"\/documentation\/macrobuilder\/swift\/int16\/expressiblebyliteralsyntax-implementations","kind":"article","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/Int16\/ExpressibleByLiteralSyntax-Implementations","title":"ExpressibleByLiteralSyntax Implementations","role":"collectionGroup"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/Swift":{"abstract":[],"type":"topic","role":"collection","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift","url":"\/documentation\/macrobuilder\/swift","kind":"symbol","title":"Swift"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/Swift/Int16/makeLiteralSyntax()":{"title":"makeLiteralSyntax()","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"BinaryInteger"},{"type":"text","text":"."}]},"kind":"symbol","abstract":[{"text":"Returns a syntax tree that represents the value of this instance.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"makeLiteralSyntax"},{"kind":"text","text":"() -> "},{"text":"IntegerLiteralExprSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax018IntegerLiteralExprB0V"}],"type":"topic","url":"\/documentation\/macrobuilder\/swift\/int16\/makeliteralsyntax()","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/Int16\/makeLiteralSyntax()"}}}