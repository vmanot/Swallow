{"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressibleByLiteralSyntax"},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder"]]},"kind":"symbol","topicSections":[{"identifiers":["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressibleByLiteralSyntax\/LiteralType"],"anchor":"Associated-Types","generated":true,"title":"Associated Types"},{"anchor":"Instance-Methods","identifiers":["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressibleByLiteralSyntax\/makeLiteralSyntax()-3qmsa"],"generated":true,"title":"Instance Methods"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"roleHeading":"Protocol","title":"ExpressibleByLiteralSyntax","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ExpressibleByLiteralSyntax"}],"modules":[{"name":"MacroBuilder"}],"symbolKind":"protocol","navigatorTitle":[{"kind":"identifier","text":"ExpressibleByLiteralSyntax"}],"role":"symbol","externalID":"s:18SwiftSyntaxBuilder020ExpressibleByLiteralB0P"},"abstract":[{"text":"A Swift type whose value can be represented directly in source code by a","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Swift literal."}],"relationshipsSections":[{"kind":"relationships","identifiers":["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/Array","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/ArraySlice","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/Bool","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/Dictionary","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/Double","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/Float","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/Float16","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/Int","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/Int16","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/Int32","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/Int64","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/Int8","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/KeyValuePairs","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/Optional","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/Set","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/String","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/Substring","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/UInt","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/UInt16","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/UInt32","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/UInt64","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/UInt8"],"type":"conformingTypes","title":"Conforming Types"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ExpressibleByLiteralSyntax","kind":"identifier"}],"platforms":["macOS"]}]},{"content":[{"type":"heading","text":"Overview","anchor":"overview","level":2},{"inlineContent":[{"text":"Conforming types do not ","type":"text"},{"inlineContent":[{"type":"text","text":"contain"}],"type":"emphasis"},{"type":"text","text":" Swift source code; rather, they can be"},{"type":"text","text":" "},{"inlineContent":[{"type":"text","text":"expressed"}],"type":"emphasis"},{"type":"text","text":" in Swift source code, and this protocol can be used to get"},{"text":" ","type":"text"},{"type":"text","text":"whatever source code would do that. For example, "},{"code":"String","type":"codeVoice"},{"type":"text","text":" is"},{"type":"text","text":" "},{"type":"codeVoice","code":"ExpressibleByLiteralSyntax"},{"text":" but ","type":"text"},{"type":"codeVoice","code":"SwiftSyntax\/StringLiteralExprSyntax"},{"text":" is not.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"This protocol is usually not used directly. Instead, conforming types can","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"be turned into syntax trees using "},{"type":"codeVoice","code":"SwiftSyntax\/ExprSyntax\/init(literal:)"},{"text":":","type":"text"}]},{"code":["let expr2 = Expr(literal: [0+1, 1+1, 2+1])","\/\/ `expr2` is a syntax tree for `[1, 2, 3]`."],"type":"codeListing","syntax":null},{"inlineContent":[{"type":"text","text":"Or interpolated into a Swift source code literal with the syntax"},{"text":" ","type":"text"},{"type":"codeVoice","code":"\\(literal: <value>)"},{"text":":","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":["let greeting = \"Hello, world!\"","let expr1 = ExprSyntax(\"print(\\(literal: greeting))\")","\/\/ `expr1` is a syntax tree for `print(\"Hello, world!\")`"],"syntax":null},{"type":"paragraph","inlineContent":[{"text":"Note that quote marks are automatically added around the contents of string","type":"text"},{"type":"text","text":" "},{"text":"literals; you donâ€™t have to write them yourself. The conformance for","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"String"},{"type":"text","text":" will automatically ensure the contents are correctly escaped,"},{"text":" ","type":"text"},{"type":"text","text":"possibly by using raw literals or other language features:"}]},{"syntax":null,"type":"codeListing","code":["let msPath = \"c:\\\\windows\\\\system32\"","let expr3 = ExprSyntax(\"open(\\(literal: msPath))\")","\/\/ `expr3` might be a syntax tree for `open(#\"c:\\windows\\system32\"#)`","\/\/ or for `open(\"c:\\\\windows\\\\system32\")`."]},{"inlineContent":[{"type":"text","text":"Other conformances have similar intelligent behaviors: floating-point types"},{"text":" ","type":"text"},{"text":"produce correct syntax trees for infinities and NaNs, nested optionals","type":"text"},{"type":"text","text":" "},{"type":"text","text":"produce "},{"type":"codeVoice","code":".some(nil)"},{"text":" where appropriate, etc.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/macrobuilder\/expressiblebyliteralsyntax"]}],"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExpressibleByLiteralSyntax/makeLiteralSyntax()-3qmsa":{"type":"topic","title":"makeLiteralSyntax()","kind":"symbol","url":"\/documentation\/macrobuilder\/expressiblebyliteralsyntax\/makeliteralsyntax()-3qmsa","abstract":[{"text":"Returns a syntax tree that represents the value of this instance.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"makeLiteralSyntax","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"LiteralType","preciseIdentifier":"s:18SwiftSyntaxBuilder020ExpressibleByLiteralB0P0F4TypeQa","kind":"typeIdentifier"}],"defaultImplementations":2,"required":true,"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressibleByLiteralSyntax\/makeLiteralSyntax()-3qmsa","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/Swift/Int16":{"title":"Int16","role":"symbol","abstract":[],"kind":"symbol","navigatorTitle":[{"text":"Int16","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"extension"},{"kind":"text","text":" "},{"kind":"identifier","text":"Int16","preciseIdentifier":"s:s5Int16V"}],"url":"\/documentation\/macrobuilder\/swift\/int16","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/Int16","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/Swift/UInt32":{"url":"\/documentation\/macrobuilder\/swift\/uint32","fragments":[{"text":"extension","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UInt32","kind":"identifier","preciseIdentifier":"s:s6UInt32V"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/UInt32","navigatorTitle":[{"kind":"identifier","text":"UInt32"}],"title":"UInt32","type":"topic","role":"symbol","abstract":[]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/Swift/UInt64":{"abstract":[],"title":"UInt64","fragments":[{"text":"extension","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"UInt64","preciseIdentifier":"s:s6UInt64V"}],"navigatorTitle":[{"text":"UInt64","kind":"identifier"}],"kind":"symbol","role":"symbol","url":"\/documentation\/macrobuilder\/swift\/uint64","type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/UInt64"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/Swift/UInt16":{"role":"symbol","fragments":[{"text":"extension","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"UInt16","preciseIdentifier":"s:s6UInt16V"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/UInt16","type":"topic","kind":"symbol","abstract":[],"url":"\/documentation\/macrobuilder\/swift\/uint16","title":"UInt16","navigatorTitle":[{"kind":"identifier","text":"UInt16"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/Swift/Int64":{"title":"Int64","type":"topic","url":"\/documentation\/macrobuilder\/swift\/int64","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/Int64","fragments":[{"text":"extension","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:s5Int64V","text":"Int64","kind":"identifier"}],"abstract":[],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Int64"}],"kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/Swift/Double":{"title":"Double","type":"topic","kind":"symbol","url":"\/documentation\/macrobuilder\/swift\/double","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/Double","fragments":[{"text":"extension","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:Sd","text":"Double","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"Double"}],"role":"symbol","abstract":[]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/Swift/Int8":{"navigatorTitle":[{"kind":"identifier","text":"Int8"}],"fragments":[{"text":"extension","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","preciseIdentifier":"s:s4Int8V","text":"Int8"}],"kind":"symbol","url":"\/documentation\/macrobuilder\/swift\/int8","role":"symbol","title":"Int8","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/Int8","type":"topic","abstract":[]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/Swift/ArraySlice":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/ArraySlice","title":"ArraySlice","type":"topic","url":"\/documentation\/macrobuilder\/swift\/arrayslice","fragments":[{"text":"extension","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","preciseIdentifier":"s:s10ArraySliceV","text":"ArraySlice"}],"role":"symbol","abstract":[],"kind":"symbol","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Element","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"ExpressibleByLiteralSyntax"},{"text":".","type":"text"}]},"navigatorTitle":[{"text":"ArraySlice","kind":"identifier"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/Swift/Int32":{"navigatorTitle":[{"text":"Int32","kind":"identifier"}],"kind":"symbol","abstract":[],"url":"\/documentation\/macrobuilder\/swift\/int32","fragments":[{"kind":"keyword","text":"extension"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:s5Int32V","text":"Int32","kind":"identifier"}],"role":"symbol","type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/Int32","title":"Int32"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/Swift/UInt8":{"kind":"symbol","role":"symbol","abstract":[],"fragments":[{"kind":"keyword","text":"extension"},{"kind":"text","text":" "},{"text":"UInt8","preciseIdentifier":"s:s5UInt8V","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/UInt8","type":"topic","title":"UInt8","url":"\/documentation\/macrobuilder\/swift\/uint8","navigatorTitle":[{"kind":"identifier","text":"UInt8"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/Swift/UInt":{"kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"extension"},{"kind":"text","text":" "},{"preciseIdentifier":"s:Su","text":"UInt","kind":"identifier"}],"title":"UInt","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/UInt","navigatorTitle":[{"text":"UInt","kind":"identifier"}],"url":"\/documentation\/macrobuilder\/swift\/uint","role":"symbol","abstract":[]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/Swift/Substring":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/Substring","url":"\/documentation\/macrobuilder\/swift\/substring","kind":"symbol","role":"symbol","title":"Substring","abstract":[],"fragments":[{"text":"extension","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:Ss","kind":"identifier","text":"Substring"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"Substring"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/Swift/Bool":{"kind":"symbol","role":"symbol","abstract":[],"fragments":[{"text":"extension","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Bool","kind":"identifier","preciseIdentifier":"s:Sb"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/Bool","type":"topic","title":"Bool","url":"\/documentation\/macrobuilder\/swift\/bool","navigatorTitle":[{"text":"Bool","kind":"identifier"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/Swift/Set":{"navigatorTitle":[{"kind":"identifier","text":"Set"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/Set","abstract":[],"conformance":{"constraints":[{"type":"codeVoice","code":"Element"},{"text":" conforms to ","type":"text"},{"code":"Hashable","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"ExpressibleByLiteralSyntax"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"role":"symbol","kind":"symbol","type":"topic","title":"Set","fragments":[{"text":"extension","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","preciseIdentifier":"s:Sh","text":"Set"}],"url":"\/documentation\/macrobuilder\/swift\/set"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExpressibleByLiteralSyntax":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressibleByLiteralSyntax","navigatorTitle":[{"text":"ExpressibleByLiteralSyntax","kind":"identifier"}],"url":"\/documentation\/macrobuilder\/expressiblebyliteralsyntax","kind":"symbol","role":"symbol","type":"topic","title":"ExpressibleByLiteralSyntax","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"ExpressibleByLiteralSyntax","kind":"identifier"}],"abstract":[{"type":"text","text":"A Swift type whose value can be represented directly in source code by a"},{"text":" ","type":"text"},{"text":"Swift literal.","type":"text"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/Swift/Float16":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/Float16","role":"symbol","abstract":[],"kind":"symbol","navigatorTitle":[{"text":"Float16","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"extension"},{"text":" ","kind":"text"},{"text":"Float16","preciseIdentifier":"s:s7Float16V","kind":"identifier"}],"title":"Float16","url":"\/documentation\/macrobuilder\/swift\/float16","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/Swift/Optional":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/Optional","title":"Optional","type":"topic","url":"\/documentation\/macrobuilder\/swift\/optional","fragments":[{"kind":"keyword","text":"extension"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:Sq","kind":"identifier","text":"Optional"}],"role":"symbol","abstract":[],"kind":"symbol","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Wrapped","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"ExpressibleByLiteralSyntax","type":"codeVoice"},{"type":"text","text":"."}]},"navigatorTitle":[{"kind":"identifier","text":"Optional"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExpressibleByLiteralSyntax/LiteralType":{"abstract":[],"type":"topic","kind":"symbol","role":"symbol","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"LiteralType"},{"kind":"text","text":" : "},{"text":"ExprSyntaxProtocol","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax04ExprB8ProtocolP"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressibleByLiteralSyntax\/LiteralType","required":true,"url":"\/documentation\/macrobuilder\/expressiblebyliteralsyntax\/literaltype","title":"LiteralType"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/Swift/Array":{"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Array"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/Array","type":"topic","title":"Array","abstract":[],"conformance":{"constraints":[{"type":"codeVoice","code":"Element"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"ExpressibleByLiteralSyntax"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"fragments":[{"text":"extension","kind":"keyword"},{"kind":"text","text":" "},{"text":"Array","preciseIdentifier":"s:Sa","kind":"identifier"}],"url":"\/documentation\/macrobuilder\/swift\/array"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/Swift/KeyValuePairs":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/KeyValuePairs","title":"KeyValuePairs","type":"topic","url":"\/documentation\/macrobuilder\/swift\/keyvaluepairs","fragments":[{"text":"extension","kind":"keyword"},{"kind":"text","text":" "},{"text":"KeyValuePairs","kind":"identifier","preciseIdentifier":"s:s13KeyValuePairsV"}],"role":"symbol","abstract":[],"kind":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Key"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"ExpressibleByLiteralSyntax"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"code":"ExpressibleByLiteralSyntax","type":"codeVoice"},{"text":".","type":"text"}]},"navigatorTitle":[{"text":"KeyValuePairs","kind":"identifier"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/Swift/Dictionary":{"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Dictionary"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/Dictionary","type":"topic","title":"Dictionary","abstract":[],"conformance":{"constraints":[{"type":"codeVoice","code":"Key"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Hashable"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Key"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"ExpressibleByLiteralSyntax"},{"text":", and ","type":"text"},{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"code":"ExpressibleByLiteralSyntax","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"fragments":[{"text":"extension","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Dictionary","kind":"identifier","preciseIdentifier":"s:SD"}],"url":"\/documentation\/macrobuilder\/swift\/dictionary"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/Swift/Int":{"fragments":[{"text":"extension","kind":"keyword"},{"kind":"text","text":" "},{"text":"Int","kind":"identifier","preciseIdentifier":"s:Si"}],"url":"\/documentation\/macrobuilder\/swift\/int","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/Int","navigatorTitle":[{"text":"Int","kind":"identifier"}],"type":"topic","role":"symbol","kind":"symbol","title":"Int"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/Swift/Float":{"navigatorTitle":[{"text":"Float","kind":"identifier"}],"title":"Float","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"extension"},{"kind":"text","text":" "},{"preciseIdentifier":"s:Sf","text":"Float","kind":"identifier"}],"url":"\/documentation\/macrobuilder\/swift\/float","abstract":[],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/Float"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/Swift/String":{"title":"String","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Swift\/String","navigatorTitle":[{"kind":"identifier","text":"String"}],"abstract":[{"text":"https:\/\/gist.github.com\/krzyzanowskim\/f2ca3e1e4f6dfd490fc35630b823eaac","type":"text"}],"role":"symbol","url":"\/documentation\/macrobuilder\/swift\/string","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"extension"},{"kind":"text","text":" "},{"preciseIdentifier":"s:SS","text":"String","kind":"identifier"}]}}}