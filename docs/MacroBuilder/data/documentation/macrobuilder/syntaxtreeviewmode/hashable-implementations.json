{"schemaVersion":{"major":0,"patch":0,"minor":3},"identifier":{"url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxTreeViewMode\/Hashable-Implementations","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxTreeViewMode"]]},"sections":[],"kind":"article","variants":[{"paths":["\/documentation\/macrobuilder\/syntaxtreeviewmode\/hashable-implementations"],"traits":[{"interfaceLanguage":"swift"}]}],"topicSections":[{"generated":true,"anchor":"Instance-Properties","identifiers":["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxTreeViewMode\/erasedAsAnyHashable"],"title":"Instance Properties"},{"anchor":"Instance-Methods","generated":true,"identifiers":["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxTreeViewMode\/eraseToAnyHashable()","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxTreeViewMode\/memoize(with:_:)-3pk83","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxTreeViewMode\/memoize(with:_:)-7wq8r"],"title":"Instance Methods"}],"metadata":{"title":"Hashable Implementations","modules":[{"name":"MacroBuilder"}],"role":"collectionGroup","roleHeading":"API Collection"},"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SyntaxTreeViewMode/eraseToAnyHashable()":{"url":"\/documentation\/macrobuilder\/syntaxtreeviewmode\/erasetoanyhashable()","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"eraseToAnyHashable"},{"text":"() -> ","kind":"text"},{"text":"AnyHashable","preciseIdentifier":"s:s11AnyHashableV","kind":"typeIdentifier"}],"abstract":[{"text":"Wraps this ","type":"text"},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":" with a type-eraser."}],"type":"topic","kind":"symbol","role":"symbol","title":"eraseToAnyHashable()","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxTreeViewMode\/eraseToAnyHashable()"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SyntaxTreeViewMode/memoize(with:_:)-3pk83":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxTreeViewMode\/memoize(with:_:)-3pk83","abstract":[],"type":"topic","kind":"symbol","url":"\/documentation\/macrobuilder\/syntaxtreeviewmode\/memoize(with:_:)-3pk83","title":"memoize(with:_:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"memoize"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"with"},{"text":": ","kind":"text"},{"text":"MemoizationCache","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"kind":"typeIdentifier","text":"KeyPath","preciseIdentifier":"s:s7KeyPathC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", () -> "},{"kind":"typeIdentifier","text":"T"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","text":"T"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SyntaxTreeViewMode":{"kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"SyntaxTreeViewMode","kind":"identifier"}],"url":"\/documentation\/macrobuilder\/syntaxtreeviewmode","type":"topic","navigatorTitle":[{"text":"SyntaxTreeViewMode","kind":"identifier"}],"abstract":[{"type":"text","text":"Specifies how missing and unexpected nodes should be handled when traversing"},{"type":"text","text":" "},{"type":"text","text":"a syntax tree."}],"title":"SyntaxTreeViewMode","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxTreeViewMode","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SyntaxTreeViewMode/memoize(with:_:)-7wq8r":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"memoize","kind":"identifier"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"MemoizationCache"},{"text":"?, ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC","text":"KeyPath"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","text":"T"}],"abstract":[{"type":"text","text":"Memoize the result of the execution of a predicate for the "},{"code":"Hashable","type":"codeVoice"},{"type":"text","text":" receiver."}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxTreeViewMode\/memoize(with:_:)-7wq8r","role":"symbol","title":"memoize(with:_:)","url":"\/documentation\/macrobuilder\/syntaxtreeviewmode\/memoize(with:_:)-7wq8r","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SyntaxTreeViewMode/erasedAsAnyHashable":{"abstract":[],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"erasedAsAnyHashable"},{"text":": ","kind":"text"},{"text":"AnyHashable","preciseIdentifier":"s:s11AnyHashableV","kind":"typeIdentifier"}],"kind":"symbol","url":"\/documentation\/macrobuilder\/syntaxtreeviewmode\/erasedasanyhashable","title":"erasedAsAnyHashable","type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxTreeViewMode\/erasedAsAnyHashable","role":"symbol"}}}