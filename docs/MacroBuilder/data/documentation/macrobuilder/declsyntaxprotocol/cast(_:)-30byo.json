{"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"symbol","abstract":[{"type":"text","text":"Force-casts the current syntax node to a given node type from a base node protocol hierarchy other than"},{"text":" ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DeclSyntaxProtocol","type":"reference"},{"type":"text","text":"."}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DeclSyntaxProtocol"]]},"metadata":{"role":"symbol","title":"cast(_:)","modules":[{"relatedModules":["SwiftSyntax"],"name":"MacroBuilder"}],"platforms":[],"externalID":"s:11SwiftSyntax04DeclB8ProtocolPAAE4castyqd__qd__mAA0bD0Rd__lF","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"cast","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"text":"S","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"kind":"typeIdentifier","text":"S"}],"extendedModule":"SwiftSyntax","roleHeading":"Instance Method"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DeclSyntaxProtocol\/cast(_:)-30byo"},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"cast"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"S"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"syntaxType"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","text":"S"},{"text":" ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxProtocol","text":"SyntaxProtocol","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"anchor":"return-value","text":"Return Value","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"An instance of the specialized type."}]}]},{"content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"content":[{"inlineContent":[{"text":"This function will crash if the cast is not possible. Use ","type":"text"},{"type":"codeVoice","code":"as"},{"text":" to safely attempt a cast.","type":"text"}],"type":"paragraph"}],"style":"warning","type":"aside","name":"Warning"},{"type":"aside","name":"Note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"In most cases, this is casting a "},{"isActive":true,"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DeclSyntaxProtocol","type":"reference"},{"type":"text","text":" to a node that is not a"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DeclSyntaxProtocol"},{"type":"text","text":", which will always fail. If the "},{"type":"codeVoice","code":"syntaxType"},{"type":"text","text":" argument is a generic type,"},{"type":"text","text":" "},{"type":"text","text":"constrain it to "},{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DeclSyntaxProtocol","type":"reference","isActive":true},{"type":"text","text":" instead of "},{"isActive":true,"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxProtocol","type":"reference"},{"type":"text","text":"."}]}],"style":"note"}],"kind":"content"}],"deprecationSummary":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Type argument should be part of the 'DeclSyntaxProtocol' hierarchy"}]}],"variants":[{"paths":["\/documentation\/macrobuilder\/declsyntaxprotocol\/cast(_:)-30byo"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/DeclSyntaxProtocol/cast(_:)-30byo":{"type":"topic","role":"symbol","title":"cast(_:)","deprecated":true,"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"cast"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":".Type) -> "},{"text":"S","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DeclSyntaxProtocol\/cast(_:)-30byo","url":"\/documentation\/macrobuilder\/declsyntaxprotocol\/cast(_:)-30byo","kind":"symbol","abstract":[{"text":"Force-casts the current syntax node to a given node type from a base node protocol hierarchy other than","type":"text"},{"text":" ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DeclSyntaxProtocol"},{"type":"text","text":"."}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/DeclSyntax":{"title":"DeclSyntax","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DeclSyntax","navigatorTitle":[{"text":"DeclSyntax","kind":"identifier"}],"abstract":[],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DeclSyntax"}],"type":"topic","role":"symbol","url":"\/documentation\/macrobuilder\/declsyntax"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/DeclSyntaxProtocol":{"kind":"symbol","url":"\/documentation\/macrobuilder\/declsyntaxprotocol","abstract":[{"type":"text","text":"Protocol to which all "},{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DeclSyntax","isActive":true,"type":"reference"},{"type":"text","text":" nodes conform."}],"title":"DeclSyntaxProtocol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DeclSyntaxProtocol","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DeclSyntaxProtocol","navigatorTitle":[{"kind":"identifier","text":"DeclSyntaxProtocol"}],"role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SyntaxProtocol":{"title":"SyntaxProtocol","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxProtocol","navigatorTitle":[{"text":"SyntaxProtocol","kind":"identifier"}],"abstract":[{"text":"Provide common functionality for specialized syntax nodes. Extend this","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"protocol to provide common functionality for all syntax nodes."}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"SyntaxProtocol","kind":"identifier"}],"type":"topic","role":"symbol","url":"\/documentation\/macrobuilder\/syntaxprotocol"}}}