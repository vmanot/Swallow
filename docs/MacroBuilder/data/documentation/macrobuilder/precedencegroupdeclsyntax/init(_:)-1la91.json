{"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"init","kind":"keyword"},{"kind":"text","text":"?("},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"node","kind":"internalParam"},{"kind":"text","text":": some "},{"text":"SyntaxProtocol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxProtocol","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP"},{"text":")","kind":"text"}],"platforms":["macOS"]}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PrecedenceGroupDeclSyntax\/init(_:)-1la91"},"sections":[],"abstract":[{"text":"Converts the given specialized node to this type. Returns ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":" if the"},{"text":" ","type":"text"},{"type":"text","text":"conversion is not possible."}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PrecedenceGroupDeclSyntax"]]},"variants":[{"paths":["\/documentation\/macrobuilder\/precedencegroupdeclsyntax\/init(_:)-1la91"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"title":"init(_:)","roleHeading":"Initializer","symbolKind":"init","externalID":"s:11SwiftSyntax019PrecedenceGroupDeclB0VyACSgxhcAA0B8ProtocolRzlufc","role":"symbol","modules":[{"name":"MacroBuilder"}],"fragments":[{"text":"init","kind":"identifier"},{"text":"?(some ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP","text":"SyntaxProtocol"},{"text":")","kind":"text"}]},"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/PrecedenceGroupDeclSyntax":{"type":"topic","role":"symbol","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PrecedenceGroupDeclSyntax","navigatorTitle":[{"kind":"identifier","text":"PrecedenceGroupDeclSyntax"}],"abstract":[{"text":"A Swift ","type":"text"},{"type":"codeVoice","code":"precedencegroup"},{"text":" declaration.","type":"text"}],"title":"PrecedenceGroupDeclSyntax","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"PrecedenceGroupDeclSyntax","kind":"identifier"}],"url":"\/documentation\/macrobuilder\/precedencegroupdeclsyntax"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/PrecedenceGroupDeclSyntax/init(_:)-1la91":{"type":"topic","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"?(some "},{"text":"SyntaxProtocol","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP"},{"kind":"text","text":")"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PrecedenceGroupDeclSyntax\/init(_:)-1la91","title":"init(_:)","role":"symbol","kind":"symbol","abstract":[{"text":"Converts the given specialized node to this type. Returns ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":" if the"},{"type":"text","text":" "},{"type":"text","text":"conversion is not possible."}],"url":"\/documentation\/macrobuilder\/precedencegroupdeclsyntax\/init(_:)-1la91"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SyntaxProtocol":{"title":"SyntaxProtocol","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxProtocol","navigatorTitle":[{"text":"SyntaxProtocol","kind":"identifier"}],"abstract":[{"text":"Provide common functionality for specialized syntax nodes. Extend this","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"protocol to provide common functionality for all syntax nodes."}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"SyntaxProtocol","kind":"identifier"}],"type":"topic","role":"symbol","url":"\/documentation\/macrobuilder\/syntaxprotocol"}}}