{"schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"eraseToAnyHashable","kind":"identifier"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:s11AnyHashableV","kind":"typeIdentifier","text":"AnyHashable"}],"platforms":["macOS"],"languages":["swift"]}]}],"variants":[{"paths":["\/documentation\/macrobuilder\/primaryassociatedtypeclausesyntax\/erasetoanyhashable()"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PrimaryAssociatedTypeClauseSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PrimaryAssociatedTypeClauseSyntax\/Hashable-Implementations"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PrimaryAssociatedTypeClauseSyntax\/eraseToAnyHashable()"},"sections":[],"abstract":[{"type":"text","text":"Wraps this "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":" with a type-eraser."}],"kind":"symbol","metadata":{"extendedModule":"Swift","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"eraseToAnyHashable"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s11AnyHashableV","text":"AnyHashable"}],"symbolKind":"method","roleHeading":"Instance Method","role":"symbol","title":"eraseToAnyHashable()","externalID":"s:SH7SwallowE18eraseToAnyHashables0dE0VyF::SYNTHESIZED::s:11SwiftSyntax027PrimaryAssociatedTypeClauseB0V","modules":[{"name":"MacroBuilder","relatedModules":["Swift"]}]},"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/PrimaryAssociatedTypeClauseSyntax":{"role":"symbol","url":"\/documentation\/macrobuilder\/primaryassociatedtypeclausesyntax","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PrimaryAssociatedTypeClauseSyntax","title":"PrimaryAssociatedTypeClauseSyntax","kind":"symbol","abstract":[],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PrimaryAssociatedTypeClauseSyntax","kind":"identifier"}],"navigatorTitle":[{"text":"PrimaryAssociatedTypeClauseSyntax","kind":"identifier"}],"type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/PrimaryAssociatedTypeClauseSyntax/Hashable-Implementations":{"url":"\/documentation\/macrobuilder\/primaryassociatedtypeclausesyntax\/hashable-implementations","type":"topic","kind":"article","title":"Hashable Implementations","role":"collectionGroup","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PrimaryAssociatedTypeClauseSyntax\/Hashable-Implementations","abstract":[]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/PrimaryAssociatedTypeClauseSyntax/eraseToAnyHashable()":{"type":"topic","title":"eraseToAnyHashable()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"eraseToAnyHashable"},{"text":"() -> ","kind":"text"},{"text":"AnyHashable","preciseIdentifier":"s:s11AnyHashableV","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PrimaryAssociatedTypeClauseSyntax\/eraseToAnyHashable()","role":"symbol","url":"\/documentation\/macrobuilder\/primaryassociatedtypeclausesyntax\/erasetoanyhashable()","kind":"symbol","abstract":[{"text":"Wraps this ","type":"text"},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":" with a type-eraser."}]}}}