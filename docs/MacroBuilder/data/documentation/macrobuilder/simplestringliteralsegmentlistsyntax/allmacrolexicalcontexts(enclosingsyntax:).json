{"schemaVersion":{"major":0,"patch":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/SyntaxProtocol-Implementations"]]},"kind":"symbol","variants":[{"paths":["\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/allmacrolexicalcontexts(enclosingsyntax:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/allMacroLexicalContexts(enclosingSyntax:)"},"sections":[],"abstract":[{"type":"text","text":"Return an array of enclosing lexical contexts for the purpose of macros,"},{"text":" ","type":"text"},{"type":"text","text":"from the innermost enclosing lexical context (first in the array) to the"},{"text":" ","type":"text"},{"type":"text","text":"outermost. If this syntax node itself is a lexical context, it will be"},{"text":" ","type":"text"},{"text":"the innermost lexical context.","type":"text"}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"allMacroLexicalContexts"},{"kind":"text","text":"("},{"kind":"externalParam","text":"enclosingSyntax"},{"text":": (","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax","kind":"typeIdentifier","text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"text":"? = { _ in nil }) -> [","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B0V","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax","text":"Syntax","kind":"typeIdentifier"},{"kind":"text","text":"]"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"name":"enclosingSyntax","content":[{"inlineContent":[{"type":"text","text":"Provides a parent node when the operation"},{"type":"text","text":" "},{"text":"has reached the outermost syntax node (i.e., it has no parent), allowing","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the caller to provide a new syntax node that can continue the walk"},{"type":"text","text":" "},{"type":"text","text":"to collect additional lexical contexts, e.g., from outer macro"},{"type":"text","text":" "},{"text":"expansions.","type":"text"}],"type":"paragraph"}]}],"kind":"parameters"},{"kind":"content","content":[{"text":"Return Value","anchor":"return-value","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The array of enclosing lexical contexts."}]}]}],"metadata":{"role":"symbol","title":"allMacroLexicalContexts(enclosingSyntax:)","extendedModule":"SwiftSyntax","roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"allMacroLexicalContexts","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"enclosingSyntax"},{"text":": (","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier","text":"Syntax"},{"kind":"text","text":") -> "},{"text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier"},{"kind":"text","text":"?) -> ["},{"preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"modules":[{"name":"MacroBuilder","relatedModules":["SwiftSyntax"]}],"externalID":"s:11SwiftSyntax0B8ProtocolP0aB6MacrosE23allMacroLexicalContexts09enclosingB0SayAA0B0VGAHSgAHXE_tF::SYNTHESIZED::s:11SwiftSyntax030SimpleStringLiteralSegmentListB0V","symbolKind":"method"},"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/SyntaxProtocol-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/SyntaxProtocol-Implementations","url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/syntaxprotocol-implementations","type":"topic","kind":"article","role":"collectionGroup","title":"SyntaxProtocol Implementations","abstract":[]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/allMacroLexicalContexts(enclosingSyntax:)":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"allMacroLexicalContexts"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"enclosingSyntax"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"text":") -> ","kind":"text"},{"text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier"},{"text":"?) -> [","kind":"text"},{"text":"Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"text":"]","kind":"text"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/allMacroLexicalContexts(enclosingSyntax:)","title":"allMacroLexicalContexts(enclosingSyntax:)","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Return an array of enclosing lexical contexts for the purpose of macros,"},{"text":" ","type":"text"},{"text":"from the innermost enclosing lexical context (first in the array) to the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"outermost. If this syntax node itself is a lexical context, it will be"},{"type":"text","text":" "},{"type":"text","text":"the innermost lexical context."}],"url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/allmacrolexicalcontexts(enclosingsyntax:)"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/Syntax":{"abstract":[{"type":"text","text":"A Syntax node represents a tree of nodes with tokens at the leaves."},{"text":" ","type":"text"},{"type":"text","text":"Each node has accessors for its known children, and allows efficient"},{"text":" ","type":"text"},{"text":"iteration over the children through its ","type":"text"},{"type":"codeVoice","code":"children"},{"text":" property.","type":"text"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Syntax"}],"url":"\/documentation\/macrobuilder\/syntax","title":"Syntax","type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Syntax","kind":"identifier"}],"kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax","url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax","kind":"symbol","abstract":[{"text":"String literal segments that only can contain non string interpolated or extended escaped strings","type":"text"}],"type":"topic","title":"SimpleStringLiteralSegmentListSyntax","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"SimpleStringLiteralSegmentListSyntax"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SimpleStringLiteralSegmentListSyntax"}]}}}