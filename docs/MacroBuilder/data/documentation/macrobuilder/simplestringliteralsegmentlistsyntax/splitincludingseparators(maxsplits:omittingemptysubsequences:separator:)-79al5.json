{"metadata":{"roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"splitIncludingSeparators","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Separator","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"maxSplits","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"omittingEmptySubsequences"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"text":", ","kind":"text"},{"text":"separator","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Swallow8CasePathV","text":"CasePath","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"kind":"text","text":", "},{"text":"Separator","kind":"typeIdentifier"},{"text":">) -> [","kind":"text"},{"preciseIdentifier":"s:7Swallow6EitherO","text":"Either","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:Sl11SubSequenceQa","kind":"typeIdentifier","text":"SubSequence"},{"kind":"text","text":", "},{"text":"Separator","kind":"typeIdentifier"},{"text":">]","kind":"text"}],"modules":[{"relatedModules":["Swift"],"name":"MacroBuilder"}],"title":"splitIncludingSeparators(maxSplits:omittingEmptySubsequences:separator:)","symbolKind":"method","extendedModule":"Swift","role":"symbol","externalID":"s:Sl7SwallowE24splitIncludingSeparators9maxSplits25omittingEmptySubsequences9separatorSayAA6EitherOy11SubSequenceQzqd__GGSi_SbAA8CasePathVy7ElementQzqd__GtlF::SYNTHESIZED::s:11SwiftSyntax030SimpleStringLiteralSegmentListB0V"},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"splitIncludingSeparators"},{"kind":"text","text":"<"},{"text":"Separator","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"maxSplits","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":" = .max, ","kind":"text"},{"text":"omittingEmptySubsequences","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"text":" = true, ","kind":"text"},{"text":"separator","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/CasePath","text":"CasePath","preciseIdentifier":"s:7Swallow8CasePathV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Element","preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Separator","kind":"typeIdentifier"},{"kind":"text","text":">) -> ["},{"text":"Either","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Either","preciseIdentifier":"s:7Swallow6EitherO"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"SubSequence","preciseIdentifier":"s:Sl11SubSequenceQa"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Separator"},{"kind":"text","text":">]"}]}],"kind":"declarations"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/splitincludingseparators(maxsplits:omittingemptysubsequences:separator:)-79al5"]}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/Collection-Implementations"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/splitIncludingSeparators(maxSplits:omittingEmptySubsequences:separator:)-79al5"},"sections":[],"abstract":[{"text":"Inherited from ","type":"text"},{"code":"Collection.splitIncludingSeparators(maxSplits:omittingEmptySubsequences:separator:)","type":"codeVoice"},{"text":".","type":"text"}],"kind":"symbol","schemaVersion":{"patch":0,"major":0,"minor":3},"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/Either":{"url":"\/documentation\/macrobuilder\/either","type":"topic","abstract":[{"text":"A type representing a choice between one of two types.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Either","navigatorTitle":[{"kind":"identifier","text":"Either"}],"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Either"}],"title":"Either"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/Collection-Implementations":{"title":"Collection Implementations","url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/collection-implementations","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/Collection-Implementations","type":"topic","abstract":[],"role":"collectionGroup","kind":"article"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax","url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax","kind":"symbol","abstract":[{"text":"String literal segments that only can contain non string interpolated or extended escaped strings","type":"text"}],"type":"topic","title":"SimpleStringLiteralSegmentListSyntax","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"SimpleStringLiteralSegmentListSyntax"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SimpleStringLiteralSegmentListSyntax"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/splitIncludingSeparators(maxSplits:omittingEmptySubsequences:separator:)-79al5":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/splitIncludingSeparators(maxSplits:omittingEmptySubsequences:separator:)-79al5","title":"splitIncludingSeparators(maxSplits:omittingEmptySubsequences:separator:)","url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/splitincludingseparators(maxsplits:omittingemptysubsequences:separator:)-79al5","kind":"symbol","type":"topic","abstract":[],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"splitIncludingSeparators"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Separator"},{"text":">(","kind":"text"},{"text":"maxSplits","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"omittingEmptySubsequences","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":", "},{"kind":"externalParam","text":"separator"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CasePath","preciseIdentifier":"s:7Swallow8CasePathV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Separator"},{"text":">) -> [","kind":"text"},{"preciseIdentifier":"s:7Swallow6EitherO","text":"Either","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"SubSequence","preciseIdentifier":"s:Sl11SubSequenceQa"},{"text":", ","kind":"text"},{"text":"Separator","kind":"typeIdentifier"},{"kind":"text","text":">]"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/CasePath":{"role":"symbol","abstract":[{"type":"text","text":"A path that supports embedding a value in a root and attempting to extract a rootâ€™s embedded"},{"text":" ","type":"text"},{"text":"value.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/CasePath","title":"CasePath","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"CasePath"}],"url":"\/documentation\/macrobuilder\/casepath","type":"topic","navigatorTitle":[{"text":"CasePath","kind":"identifier"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"}}}