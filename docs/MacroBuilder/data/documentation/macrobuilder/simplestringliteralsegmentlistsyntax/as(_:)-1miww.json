{"schemaVersion":{"patch":0,"major":0,"minor":3},"abstract":[{"type":"text","text":"Casts the current syntax node to its own type."}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/SyntaxProtocol-Implementations"]]},"deprecationSummary":[{"inlineContent":[{"text":"This cast will always succeed","type":"text"}],"type":"paragraph"}],"sections":[],"identifier":{"url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/as(_:)-1miww","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"`as`","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"syntaxType","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"text":".Type) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":"?","kind":"text"}]}]},{"content":[{"type":"heading","anchor":"return-value","text":"Return Value","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"The current syntax node."}]}],"kind":"content"},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"style":"note","type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"This method overloads the general ","type":"text"},{"type":"codeVoice","code":"as"},{"type":"text","text":" method and is marked as deprecated to produce a warning,"},{"text":" ","type":"text"},{"type":"text","text":"informing the user that the cast will always succeed."}]}],"name":"Note"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/as(_:)-1miww"]}],"kind":"symbol","metadata":{"roleHeading":"Instance Method","platforms":[],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"`as`","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":".Type) -> "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"modules":[{"relatedModules":["SwiftSyntax"],"name":"MacroBuilder"}],"externalID":"s:11SwiftSyntax0B8ProtocolPAAE2asyxSgxmF::SYNTHESIZED::s:11SwiftSyntax030SimpleStringLiteralSegmentListB0V","symbolKind":"method","extendedModule":"SwiftSyntax","title":"as(_:)","role":"symbol"},"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax","url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax","kind":"symbol","abstract":[{"text":"String literal segments that only can contain non string interpolated or extended escaped strings","type":"text"}],"type":"topic","title":"SimpleStringLiteralSegmentListSyntax","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"SimpleStringLiteralSegmentListSyntax"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SimpleStringLiteralSegmentListSyntax"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/as(_:)-1miww":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/as(_:)-1miww","role":"symbol","deprecated":true,"title":"as(_:)","kind":"symbol","url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/as(_:)-1miww","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"`as`"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".Type) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"type":"topic","abstract":[{"type":"text","text":"Casts the current syntax node to its own type."}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/SyntaxProtocol-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/SyntaxProtocol-Implementations","url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/syntaxprotocol-implementations","type":"topic","kind":"article","role":"collectionGroup","title":"SyntaxProtocol Implementations","abstract":[]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"}}}