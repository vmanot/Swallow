{"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/SyntaxProtocol-Implementations"]]},"metadata":{"roleHeading":"Initializer","extendedModule":"SwiftSyntax","role":"symbol","symbolKind":"init","modules":[{"relatedModules":["SwiftSyntax"],"name":"MacroBuilder"}],"externalID":"s:11SwiftSyntax0B10CollectionPAAEyxqd__cSTRd__7ElementQyd__ADRtzlufc::SYNTHESIZED::s:11SwiftSyntax030SimpleStringLiteralSegmentListB0V","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"text":"Children","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"Children"},{"kind":"text","text":")"}],"title":"init(_:)"},"kind":"symbol","schemaVersion":{"major":0,"patch":0,"minor":3},"abstract":[{"text":"Converts the given specialized node to this type. Returns ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":" if the"},{"type":"text","text":" "},{"text":"conversion is not possible.","type":"text"}],"identifier":{"url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/init(_:)-4aou4","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"init"},{"text":"<","kind":"text"},{"text":"Children","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"children"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Children"},{"text":") ","kind":"text"},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Children"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","text":"Sequence","preciseIdentifier":"s:ST"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:ST7ElementQa","text":"Element","kind":"typeIdentifier"},{"kind":"text","text":" == "},{"text":"Children","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"}],"platforms":["macOS"]}]}],"variants":[{"paths":["\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/init(_:)-4aou4"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/init(_:)-4aou4":{"url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/init(_:)-4aou4","fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Children","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"Children","kind":"typeIdentifier"},{"text":")","kind":"text"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/init(_:)-4aou4","kind":"symbol","role":"symbol","type":"topic","title":"init(_:)","abstract":[{"text":"Converts the given specialized node to this type. Returns ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":" if the"},{"text":" ","type":"text"},{"type":"text","text":"conversion is not possible."}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/SyntaxProtocol-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/SyntaxProtocol-Implementations","url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/syntaxprotocol-implementations","type":"topic","kind":"article","role":"collectionGroup","title":"SyntaxProtocol Implementations","abstract":[]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax","url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax","kind":"symbol","abstract":[{"text":"String literal segments that only can contain non string interpolated or extended escaped strings","type":"text"}],"type":"topic","title":"SimpleStringLiteralSegmentListSyntax","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"SimpleStringLiteralSegmentListSyntax"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SimpleStringLiteralSegmentListSyntax"}]}}}