{"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/SyntaxProtocol-Implementations"},"sections":[],"kind":"article","metadata":{"roleHeading":"API Collection","modules":[{"name":"MacroBuilder"}],"title":"SyntaxProtocol Implementations","role":"collectionGroup"},"schemaVersion":{"patch":0,"major":0,"minor":3},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/init(_:)-4aou4","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/init(_:)-6fn3i","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/init(validating:)"],"anchor":"Initializers","generated":true},{"identifiers":["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/byteRange","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/byteSize","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/byteSizeAfterTrimmingTrivia","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/contentLength","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/debugDescription","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/description","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/detached","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/endPosition","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/endPositionBeforeTrailingTrivia","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/firstToken","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/hasError","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/hasMaximumNestingLevelOverflow","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/hasParent","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/hasSequenceExpr","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/hasWarning","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/id","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/index","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/isImplicit","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/keyPathInParent","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/kind","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/lastToken","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/leadingTrivia","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/leadingTriviaLength","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/nextToken","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/parent","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/position","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/positionAfterSkippingLeadingTrivia","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/previousToken","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/root","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/syntaxNodeType","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/syntaxTextBytes","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/totalByteRange","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/totalLength","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/trailingTrivia","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/trailingTriviaLength","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/trimmed","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/trimmedByteRange","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/trimmedDescription","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/trimmedLength"],"title":"Instance Properties","anchor":"Instance-Properties","generated":true},{"identifiers":["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/allMacroLexicalContexts(enclosingSyntax:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/as(_:)-18h17","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/as(_:)-1miww","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/as(_:)-51qx7","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/asMacroLexicalContext()","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/asProtocol(_:)-1mdcp","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/asProtocol(_:)-28ro9","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/asProtocol(_:)-2t7c0","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/asProtocol(_:)-2zs1u","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/asProtocol(_:)-39sbt","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/asProtocol(_:)-3c0vw","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/asProtocol(_:)-3wucn","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/asProtocol(_:)-4b74s","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/asProtocol(_:)-5w5se","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/asProtocol(_:)-6eltk","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/asProtocol(_:)-6xiga","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/asProtocol(_:)-9asg6","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/asProtocol(_:)-9syxt","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/asProtocol(_:)-9ty12","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/cast(_:)-2p3z0","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/cast(_:)-7s9cf","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/cast(_:)-k8cu","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/children(viewMode:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/debugDescription(includeTrivia:converter:mark:indentString:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/detach()","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/endLocation(converter:afterTrailingTrivia:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/expand(macroSpecs:contextGenerator:indentationWidth:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/expand(macros:contextGenerator:indentationWidth:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/expand(macros:in:indentationWidth:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/firstToken(viewMode:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/formatted(using:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/is(_:)-6i5e8","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/is(_:)-8y6hi","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/is(_:)-9tl4l","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/isProtocol(_:)-148zt","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/isProtocol(_:)-14lhb","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/isProtocol(_:)-19x01","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/isProtocol(_:)-1phnq","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/isProtocol(_:)-2hbfk","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/isProtocol(_:)-3xsk9","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/isProtocol(_:)-4beuj","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/isProtocol(_:)-4u9p5","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/isProtocol(_:)-7hd9k","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/isProtocol(_:)-7rqvz","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/isProtocol(_:)-7ti9v","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/isProtocol(_:)-9wrlt","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/isProtocol(_:)-j9yc","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/isProtocol(_:)-yhik","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/lastToken(viewMode:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/map(_:_:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/modifying(_:_:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/nextToken(viewMode:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/node(at:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/previousToken(viewMode:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/startLocation(converter:afterLeadingTrivia:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/token(at:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/tokens(viewMode:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/trimmed(matching:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/trimmedDescription(matching:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/with(_:_:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/write(to:)"],"anchor":"Instance-Methods","title":"Instance Methods","generated":true},{"identifiers":["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/structure"],"generated":true,"title":"Type Properties","anchor":"Type-Properties"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/syntaxprotocol-implementations"]}],"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/syntaxTextBytes":{"url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/syntaxtextbytes","type":"topic","kind":"symbol","title":"syntaxTextBytes","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/syntaxTextBytes","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"syntaxTextBytes"},{"kind":"text","text":": ["},{"preciseIdentifier":"s:s5UInt8V","kind":"typeIdentifier","text":"UInt8"},{"kind":"text","text":"]"}],"role":"symbol","abstract":[{"type":"text","text":"Retrieve the syntax text as an array of bytes that models the input"},{"type":"text","text":" "},{"type":"text","text":"source even in the presence of invalid UTF-8."}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/isProtocol(_:)-14lhb":{"abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"code":"MissingNodeSyntax","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"kind":"symbol","type":"topic","title":"isProtocol(_:)","url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/isprotocol(_:)-14lhb","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/isProtocol(_:)-14lhb","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"text":"((any ","kind":"text"},{"text":"MissingNodeSyntax","preciseIdentifier":"s:11SwiftSyntax011MissingNodeB0P","kind":"typeIdentifier"},{"kind":"text","text":").Type) -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SyntaxKind/functionDecl":{"url":"\/documentation\/macrobuilder\/syntaxkind\/functiondecl","fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"kind":"identifier","text":"functionDecl"}],"title":"SyntaxKind.functionDecl","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxKind\/functionDecl","role":"symbol","type":"topic","kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/endLocation(converter:afterTrailingTrivia:)":{"kind":"symbol","title":"endLocation(converter:afterTrailingTrivia:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"endLocation"},{"kind":"text","text":"("},{"text":"converter","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC","text":"SourceLocationConverter","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"afterTrailingTrivia"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"text":") -> ","kind":"text"},{"text":"SourceLocation","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax14SourceLocationV"}],"url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/endlocation(converter:aftertrailingtrivia:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/endLocation(converter:afterTrailingTrivia:)","type":"topic","role":"symbol","abstract":[{"text":"The ending location, in the provided file, of this Syntax node.","type":"text"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/expand(macroSpecs:contextGenerator:indentationWidth:)":{"url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/expand(macrospecs:contextgenerator:indentationwidth:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"expand","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Context","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"macroSpecs","kind":"externalParam"},{"text":": [","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:25SwiftSyntaxMacroExpansion0C4SpecV","kind":"typeIdentifier","text":"MacroSpec"},{"kind":"text","text":"], "},{"text":"contextGenerator","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Context"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"indentationWidth"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax6TriviaV","text":"Trivia","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"text":"Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/expand(macroSpecs:contextGenerator:indentationWidth:)","title":"expand(macroSpecs:contextGenerator:indentationWidth:)","type":"topic","abstract":[]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/previousToken(viewMode:)":{"url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/previoustoken(viewmode:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"previousToken","kind":"identifier"},{"kind":"text","text":"("},{"text":"viewMode","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","text":"SyntaxTreeViewMode","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax"},{"kind":"text","text":"?"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/previousToken(viewMode:)","kind":"symbol","role":"symbol","type":"topic","title":"previousToken(viewMode:)","abstract":[{"type":"text","text":"Recursively walks through the tree to find the token semantically before"},{"type":"text","text":" "},{"type":"text","text":"this node."}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/hasSequenceExpr":{"url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/hassequenceexpr","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"hasSequenceExpr"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/hasSequenceExpr","title":"hasSequenceExpr","type":"topic","abstract":[{"type":"text","text":"Whether this tree contains a missing token or unexpected node."}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/detach()":{"url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/detach()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"detach"},{"kind":"text","text":"() -> "},{"text":"Self","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/detach()","kind":"symbol","deprecated":true,"role":"symbol","type":"topic","title":"detach()","abstract":[]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/isProtocol(_:)-148zt":{"url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/isprotocol(_:)-148zt","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"((any "},{"text":"WithModifiersSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013WithModifiersB0P"},{"kind":"text","text":").Type) -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/isProtocol(_:)-148zt","title":"isProtocol(_:)","type":"topic","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithModifiersSyntax"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/trailingTrivia":{"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"trailingTrivia","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Trivia","preciseIdentifier":"s:11SwiftSyntax6TriviaV"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/trailingTrivia","url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/trailingtrivia","role":"symbol","title":"trailingTrivia","type":"topic","abstract":[{"text":"The trailing trivia of this syntax node.","type":"text"}],"kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/isProtocol(_:)-7hd9k":{"title":"isProtocol(_:)","type":"topic","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/isProtocol(_:)-7hd9k","url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/isprotocol(_:)-7hd9k","role":"symbol","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"WithOptionalCodeBlockSyntax"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"((any "},{"preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P","text":"WithOptionalCodeBlockSyntax","kind":"typeIdentifier"},{"kind":"text","text":").Type) -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax","url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax","kind":"symbol","abstract":[{"text":"String literal segments that only can contain non string interpolated or extended escaped strings","type":"text"}],"type":"topic","title":"SimpleStringLiteralSegmentListSyntax","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"SimpleStringLiteralSegmentListSyntax"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SimpleStringLiteralSegmentListSyntax"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/isImplicit":{"url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/isimplicit","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"isImplicit","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/isImplicit","kind":"symbol","deprecated":true,"role":"symbol","type":"topic","title":"isImplicit","abstract":[{"type":"text","text":"When isImplicit is true, the syntax node doesn’t include any"},{"type":"text","text":" "},{"type":"text","text":"underlying tokens, e.g. an empty CodeBlockItemList."}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/tokens(viewMode:)":{"type":"topic","title":"tokens(viewMode:)","url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/tokens(viewmode:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/tokens(viewMode:)","abstract":[{"type":"text","text":"Sequence of tokens that are part of this Syntax node."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"tokens","kind":"identifier"},{"text":"(","kind":"text"},{"text":"viewMode","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"SyntaxTreeViewMode","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO"},{"text":") -> ","kind":"text"},{"text":"TokenSequence","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax13TokenSequenceV"}],"role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/lastToken":{"url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/lasttoken","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"lastToken","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"kind":"symbol","deprecated":true,"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/lastToken","title":"lastToken","type":"topic","abstract":[]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/hasError":{"url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/haserror","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"hasError","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/hasError","kind":"symbol","role":"symbol","type":"topic","title":"hasError","abstract":[{"type":"text","text":"Whether the tree contained by this layout has any"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/trimmedLength":{"url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/trimmedlength","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"trimmedLength","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV","text":"SourceLength"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/trimmedLength","title":"trimmedLength","type":"topic","abstract":[{"type":"text","text":"The length this node takes up spelled out in the source, excluding its"},{"type":"text","text":" "},{"type":"text","text":"leading or trailing trivia."}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/hasMaximumNestingLevelOverflow":{"url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/hasmaximumnestingleveloverflow","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"hasMaximumNestingLevelOverflow","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/hasMaximumNestingLevelOverflow","kind":"symbol","role":"symbol","type":"topic","title":"hasMaximumNestingLevelOverflow","abstract":[]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/trailingTriviaLength":{"title":"trailingTriviaLength","kind":"symbol","url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/trailingtrivialength","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"trailingTriviaLength"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax12SourceLengthV","kind":"typeIdentifier","text":"SourceLength"}],"abstract":[{"type":"text","text":"The length this node’s trailing trivia takes up spelled out in source."}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/trailingTriviaLength","type":"topic","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/isProtocol(_:)-j9yc":{"url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/isprotocol(_:)-j9yc","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"((any "},{"text":"BracedSyntax","preciseIdentifier":"s:11SwiftSyntax06BracedB0P","kind":"typeIdentifier"},{"text":").Type) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/isProtocol(_:)-j9yc","title":"isProtocol(_:)","type":"topic","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"BracedSyntax"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/asProtocol(_:)-6xiga":{"url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/asprotocol(_:)-6xiga","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"text":"((any ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax014WithStatementsB0P","text":"WithStatementsSyntax"},{"text":").Type) -> (any ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax014WithStatementsB0P","text":"WithStatementsSyntax","kind":"typeIdentifier"},{"text":")?","kind":"text"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/asProtocol(_:)-6xiga","kind":"symbol","role":"symbol","type":"topic","title":"asProtocol(_:)","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"code":"WithStatementsSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/leadingTriviaLength":{"url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/leadingtrivialength","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"leadingTriviaLength"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax12SourceLengthV","text":"SourceLength","kind":"typeIdentifier"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/leadingTriviaLength","title":"leadingTriviaLength","type":"topic","abstract":[{"text":"The length this node’s leading trivia takes up spelled out in source.","type":"text"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/asProtocol(_:)-1mdcp":{"url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/asprotocol(_:)-1mdcp","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"((any "},{"preciseIdentifier":"s:11SwiftSyntax013ParenthesizedB0P","text":"ParenthesizedSyntax","kind":"typeIdentifier"},{"text":").Type) -> (any ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013ParenthesizedB0P","text":"ParenthesizedSyntax"},{"text":")?","kind":"text"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/asProtocol(_:)-1mdcp","kind":"symbol","role":"symbol","type":"topic","title":"asProtocol(_:)","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"ParenthesizedSyntax"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/startLocation(converter:afterLeadingTrivia:)":{"title":"startLocation(converter:afterLeadingTrivia:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/startLocation(converter:afterLeadingTrivia:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"startLocation","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"converter"},{"kind":"text","text":": "},{"text":"SourceLocationConverter","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC"},{"text":", ","kind":"text"},{"text":"afterLeadingTrivia","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"SourceLocation","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax14SourceLocationV"}],"abstract":[{"type":"text","text":"The starting location, in the provided file, of this Syntax node."}],"type":"topic","url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/startlocation(converter:afterleadingtrivia:)","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/with(_:_:)":{"url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/with(_:_:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"with","kind":"identifier"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s15WritableKeyPathC","text":"WritableKeyPath"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/with(_:_:)","title":"with(_:_:)","type":"topic","abstract":[{"type":"text","text":"Returns a new syntax node that has the child at "},{"type":"codeVoice","code":"keyPath"},{"type":"text","text":" replaced by"},{"type":"text","text":" "},{"type":"codeVoice","code":"value"},{"type":"text","text":"."}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/debugDescription(includeTrivia:converter:mark:indentString:)":{"title":"debugDescription(includeTrivia:converter:mark:indentString:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/debugDescription(includeTrivia:converter:mark:indentString:)","type":"topic","url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/debugdescription(includetrivia:converter:mark:indentstring:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"debugDescription","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"includeTrivia"},{"kind":"text","text":": "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"converter"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SourceLocationConverter","preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"mark"},{"text":": (any ","kind":"text"},{"kind":"typeIdentifier","text":"SyntaxProtocol","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP"},{"kind":"text","text":")?, "},{"text":"indentString","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":") -> ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}],"role":"symbol","abstract":[{"text":"Returns a summarized dump of this node.","type":"text"}],"kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SyntaxChildren":{"title":"SyntaxChildren","abstract":[{"text":"Collection that contains the present child ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax","type":"reference"},{"type":"text","text":" nodes of the given node."}],"url":"\/documentation\/macrobuilder\/syntaxchildren","role":"symbol","navigatorTitle":[{"text":"SyntaxChildren","kind":"identifier"}],"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SyntaxChildren","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxChildren"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/is(_:)-8y6hi":{"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/is(_:)-8y6hi","abstract":[{"type":"text","text":"Checks if the current syntax node can be cast to a given specialized syntax type."}],"url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/is(_:)-8y6hi","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"`is`","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"text":"S","kind":"typeIdentifier"},{"kind":"text","text":".Type) -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"kind":"symbol","type":"topic","title":"is(_:)"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/asProtocol(_:)-6eltk":{"url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/asprotocol(_:)-6eltk","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"text":"((any ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P","text":"WithGenericParametersSyntax","kind":"typeIdentifier"},{"text":").Type) -> (any ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P","text":"WithGenericParametersSyntax"},{"text":")?","kind":"text"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/asProtocol(_:)-6eltk","kind":"symbol","role":"symbol","type":"topic","title":"asProtocol(_:)","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithGenericParametersSyntax"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/trimmed(matching:)":{"url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/trimmed(matching:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"trimmed","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"matching"},{"text":": (","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax11TriviaPieceO","text":"TriviaPiece","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/trimmed(matching:)","title":"trimmed(matching:)","type":"topic","abstract":[{"text":"A copy of this node with pieces that match ","type":"text"},{"code":"matching","type":"codeVoice"},{"type":"text","text":" trimmed from the"},{"type":"text","text":" "},{"type":"text","text":"leading trivia of the first token and trailing trivia of the last token."}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/isProtocol(_:)-2hbfk":{"url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/isprotocol(_:)-2hbfk","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"text":"((any ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax09NamedDeclB0P","text":"NamedDeclSyntax","kind":"typeIdentifier"},{"kind":"text","text":").Type) -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/isProtocol(_:)-2hbfk","kind":"symbol","role":"symbol","type":"topic","title":"isProtocol(_:)","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"NamedDeclSyntax"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/positionAfterSkippingLeadingTrivia":{"kind":"symbol","abstract":[{"type":"text","text":"The absolute position of the starting point of this node, skipping any"},{"type":"text","text":" "},{"text":"leading trivia attached to the first token syntax.","type":"text"}],"role":"symbol","title":"positionAfterSkippingLeadingTrivia","url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/positionafterskippingleadingtrivia","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"positionAfterSkippingLeadingTrivia","kind":"identifier"},{"kind":"text","text":": "},{"text":"AbsolutePosition","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/positionAfterSkippingLeadingTrivia","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/cast(_:)-7s9cf":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/cast(_:)-7s9cf","type":"topic","abstract":[{"type":"text","text":"Force-casts the current syntax node to a given specialized syntax type."}],"kind":"symbol","role":"symbol","url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/cast(_:)-7s9cf","title":"cast(_:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"cast","kind":"identifier"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"S","kind":"typeIdentifier"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","text":"S"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/leadingTrivia":{"url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/leadingtrivia","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"leadingTrivia","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax6TriviaV","text":"Trivia","kind":"typeIdentifier"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/leadingTrivia","title":"leadingTrivia","type":"topic","abstract":[{"text":"The leading trivia of this syntax node.","type":"text"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/nextToken(viewMode:)":{"url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/nexttoken(viewmode:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"nextToken"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"viewMode"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","text":"SyntaxTreeViewMode","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"TokenSyntax","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/nextToken(viewMode:)","kind":"symbol","role":"symbol","type":"topic","title":"nextToken(viewMode:)","abstract":[{"text":"Recursively walks through the tree to find the next token semantically","type":"text"},{"type":"text","text":" "},{"type":"text","text":"after this node."}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/isProtocol(_:)-7rqvz":{"url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/isprotocol(_:)-7rqvz","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"text":"((any ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013ParenthesizedB0P","text":"ParenthesizedSyntax"},{"kind":"text","text":").Type) -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"ParenthesizedSyntax"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"title":"isProtocol(_:)","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/isProtocol(_:)-7rqvz","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/nextToken":{"url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/nexttoken","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"nextToken","kind":"identifier"},{"kind":"text","text":": "},{"text":"TokenSyntax","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"kind":"symbol","deprecated":true,"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/nextToken","title":"nextToken","type":"topic","abstract":[]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/endPositionBeforeTrailingTrivia":{"url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/endpositionbeforetrailingtrivia","type":"topic","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/endPositionBeforeTrailingTrivia","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"endPositionBeforeTrailingTrivia"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","text":"AbsolutePosition","kind":"typeIdentifier"}],"role":"symbol","title":"endPositionBeforeTrailingTrivia","abstract":[{"type":"text","text":"The end position of this node’s content, before any trailing trivia."}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/asProtocol(_:)-3c0vw":{"url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/asprotocol(_:)-3c0vw","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"text":"((any ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax06BracedB0P","text":"BracedSyntax","kind":"typeIdentifier"},{"text":").Type) -> (any ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax06BracedB0P","text":"BracedSyntax"},{"kind":"text","text":")?"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/asProtocol(_:)-3c0vw","kind":"symbol","role":"symbol","type":"topic","title":"asProtocol(_:)","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"code":"BracedSyntax","type":"codeVoice"},{"text":". Otherwise return ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/Syntax":{"abstract":[{"type":"text","text":"A Syntax node represents a tree of nodes with tokens at the leaves."},{"text":" ","type":"text"},{"type":"text","text":"Each node has accessors for its known children, and allows efficient"},{"text":" ","type":"text"},{"text":"iteration over the children through its ","type":"text"},{"type":"codeVoice","code":"children"},{"text":" property.","type":"text"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Syntax"}],"url":"\/documentation\/macrobuilder\/syntax","title":"Syntax","type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Syntax","kind":"identifier"}],"kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/isProtocol(_:)-7ti9v":{"url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/isprotocol(_:)-7ti9v","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"kind":"text","text":"((any "},{"text":"WithAttributesSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax014WithAttributesB0P"},{"text":").Type) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/isProtocol(_:)-7ti9v","title":"isProtocol(_:)","type":"topic","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithAttributesSyntax"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/isProtocol(_:)-19x01":{"url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/isprotocol(_:)-19x01","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"((any "},{"preciseIdentifier":"s:11SwiftSyntax014WithStatementsB0P","kind":"typeIdentifier","text":"WithStatementsSyntax"},{"text":").Type) -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/isProtocol(_:)-19x01","kind":"symbol","role":"symbol","type":"topic","title":"isProtocol(_:)","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"text":" ","type":"text"},{"code":"WithStatementsSyntax","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/expand(macros:in:indentationWidth:)":{"url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/expand(macros:in:indentationwidth:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"expand","kind":"identifier"},{"text":"(","kind":"text"},{"text":"macros","kind":"externalParam"},{"kind":"text","text":": ["},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":" : any ","kind":"text"},{"preciseIdentifier":"s:17SwiftSyntaxMacros5MacroP","kind":"typeIdentifier","text":"Macro"},{"kind":"text","text":".Type], "},{"text":"in","kind":"externalParam"},{"text":": some ","kind":"text"},{"preciseIdentifier":"s:17SwiftSyntaxMacros21MacroExpansionContextP","text":"MacroExpansionContext","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"indentationWidth","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Trivia","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax6TriviaV"},{"kind":"text","text":"?) -> "},{"text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier"}],"kind":"symbol","deprecated":true,"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/expand(macros:in:indentationWidth:)","title":"expand(macros:in:indentationWidth:)","type":"topic","abstract":[]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/children(viewMode:)":{"abstract":[{"type":"text","text":"A sequence over the children of this node."}],"kind":"symbol","title":"children(viewMode:)","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/children(viewMode:)","url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/children(viewmode:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"children"},{"text":"(","kind":"text"},{"text":"viewMode","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","text":"SyntaxTreeViewMode","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"SyntaxChildren","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ChildrenV"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/asProtocol(_:)-2t7c0":{"url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/asprotocol(_:)-2t7c0","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"asProtocol"},{"text":"((any ","kind":"text"},{"text":"WithAttributesSyntax","preciseIdentifier":"s:11SwiftSyntax014WithAttributesB0P","kind":"typeIdentifier"},{"kind":"text","text":").Type) -> (any "},{"text":"WithAttributesSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax014WithAttributesB0P"},{"text":")?","kind":"text"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/asProtocol(_:)-2t7c0","kind":"symbol","role":"symbol","type":"topic","title":"asProtocol(_:)","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"code":"WithAttributesSyntax","type":"codeVoice"},{"text":". Otherwise return ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/asProtocol(_:)-39sbt":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/asProtocol(_:)-39sbt","type":"topic","kind":"symbol","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"text":" ","type":"text"},{"code":"WithTrailingCommaSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"text":"((any ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax017WithTrailingCommaB0P","text":"WithTrailingCommaSyntax"},{"text":").Type) -> (any ","kind":"text"},{"kind":"typeIdentifier","text":"WithTrailingCommaSyntax","preciseIdentifier":"s:11SwiftSyntax017WithTrailingCommaB0P"},{"text":")?","kind":"text"}],"title":"asProtocol(_:)","role":"symbol","url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/asprotocol(_:)-39sbt"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/is(_:)-9tl4l":{"url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/is(_:)-9tl4l","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"`is`","kind":"identifier"},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":".Type) -> "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"kind":"symbol","deprecated":true,"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/is(_:)-9tl4l","title":"is(_:)","type":"topic","abstract":[{"type":"text","text":"Checks if the current syntax node can be cast to its own type."}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/trimmedDescription(matching:)":{"url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/trimmeddescription(matching:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"trimmedDescription","kind":"identifier"},{"kind":"text","text":"("},{"text":"matching","kind":"externalParam"},{"text":": (","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax11TriviaPieceO","kind":"typeIdentifier","text":"TriviaPiece"},{"kind":"text","text":") -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/trimmedDescription(matching:)","kind":"symbol","role":"symbol","type":"topic","title":"trimmedDescription(matching:)","abstract":[{"type":"text","text":"The description of this node with pieces that match "},{"code":"matching","type":"codeVoice"},{"type":"text","text":" removed"},{"text":" ","type":"text"},{"text":"from the leading trivia of the first token and trailing trivia of the","type":"text"},{"type":"text","text":" "},{"text":"last token.","type":"text"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/hasWarning":{"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/haswarning","abstract":[{"text":"Whether the tree contained by this layout has any tokens with a","type":"text"},{"text":" ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TokenDiagnostic"},{"type":"text","text":" of severity "},{"code":"warning","type":"codeVoice"},{"text":".","type":"text"}],"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"hasWarning","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"title":"hasWarning","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/hasWarning"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/debugDescription":{"url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/debugdescription","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"debugDescription","kind":"identifier"},{"kind":"text","text":": "},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/debugDescription","title":"debugDescription","type":"topic","abstract":[{"text":"A simple description of this node (ie. its type).","type":"text"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/asProtocol(_:)-3wucn":{"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/asProtocol(_:)-3wucn","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"((any "},{"text":"WithModifiersSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013WithModifiersB0P"},{"text":").Type) -> (any ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013WithModifiersB0P","text":"WithModifiersSyntax"},{"kind":"text","text":")?"}],"role":"symbol","url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/asprotocol(_:)-3wucn","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"text":" ","type":"text"},{"code":"WithModifiersSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"title":"asProtocol(_:)"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/allMacroLexicalContexts(enclosingSyntax:)":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"allMacroLexicalContexts"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"enclosingSyntax"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"text":") -> ","kind":"text"},{"text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier"},{"text":"?) -> [","kind":"text"},{"text":"Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"text":"]","kind":"text"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/allMacroLexicalContexts(enclosingSyntax:)","title":"allMacroLexicalContexts(enclosingSyntax:)","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Return an array of enclosing lexical contexts for the purpose of macros,"},{"text":" ","type":"text"},{"text":"from the innermost enclosing lexical context (first in the array) to the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"outermost. If this syntax node itself is a lexical context, it will be"},{"type":"text","text":" "},{"type":"text","text":"the innermost lexical context."}],"url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/allmacrolexicalcontexts(enclosingsyntax:)"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/description":{"url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/description","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"description","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/description","kind":"symbol","role":"symbol","type":"topic","title":"description","abstract":[{"text":"A source-accurate description of this node.","type":"text"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/syntaxNodeType":{"kind":"symbol","url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/syntaxnodetype","abstract":[{"type":"text","text":"The dynamic metatype of the concrete node."}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/syntaxNodeType","title":"syntaxNodeType","role":"symbol","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"syntaxNodeType","kind":"identifier"},{"text":": any ","kind":"text"},{"text":"SyntaxProtocol","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP"},{"kind":"text","text":".Type"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/write(to:)":{"url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/write(to:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"write","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Target","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"to","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Target"},{"text":")","kind":"text"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/write(to:)","title":"write(to:)","type":"topic","abstract":[{"text":"Prints the raw value of this node to the provided stream.","type":"text"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/asProtocol(_:)-9asg6":{"url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/asprotocol(_:)-9asg6","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"((any "},{"preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P","text":"WithOptionalCodeBlockSyntax","kind":"typeIdentifier"},{"text":").Type) -> (any ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P","kind":"typeIdentifier","text":"WithOptionalCodeBlockSyntax"},{"text":")?","kind":"text"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/asProtocol(_:)-9asg6","kind":"symbol","role":"symbol","type":"topic","title":"asProtocol(_:)","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithOptionalCodeBlockSyntax"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/isProtocol(_:)-9wrlt":{"url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/isprotocol(_:)-9wrlt","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"((any "},{"text":"FreestandingMacroExpansionSyntax","preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P","kind":"typeIdentifier"},{"text":").Type) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/isProtocol(_:)-9wrlt","title":"isProtocol(_:)","type":"topic","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"FreestandingMacroExpansionSyntax"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/as(_:)-1miww":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/as(_:)-1miww","role":"symbol","deprecated":true,"title":"as(_:)","kind":"symbol","url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/as(_:)-1miww","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"`as`"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".Type) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"type":"topic","abstract":[{"type":"text","text":"Casts the current syntax node to its own type."}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/kind":{"url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/kind","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"kind","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax0B4KindO","text":"SyntaxKind","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/kind","kind":"symbol","role":"symbol","type":"topic","title":"kind","abstract":[{"type":"text","text":"The kind of the syntax node, e.g. if it is a "},{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxKind\/functionDecl","type":"reference","isActive":true},{"type":"text","text":"."}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/expand(macros:contextGenerator:indentationWidth:)":{"url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/expand(macros:contextgenerator:indentationwidth:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"expand"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Context"},{"text":">(","kind":"text"},{"text":"macros","kind":"externalParam"},{"text":": [","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"kind":"text","text":" : any "},{"text":"Macro","kind":"typeIdentifier","preciseIdentifier":"s:17SwiftSyntaxMacros5MacroP"},{"kind":"text","text":".Type], "},{"text":"contextGenerator","kind":"externalParam"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax"},{"text":") -> ","kind":"text"},{"text":"Context","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"indentationWidth","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax6TriviaV","text":"Trivia","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/expand(macros:contextGenerator:indentationWidth:)","title":"expand(macros:contextGenerator:indentationWidth:)","type":"topic","abstract":[]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/isProtocol(_:)-4u9p5":{"abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"code":"DeclGroupSyntax","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"kind":"symbol","type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/isProtocol(_:)-4u9p5","role":"symbol","title":"isProtocol(_:)","url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/isprotocol(_:)-4u9p5","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"((any "},{"preciseIdentifier":"s:11SwiftSyntax09DeclGroupB0P","kind":"typeIdentifier","text":"DeclGroupSyntax"},{"text":").Type) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/totalLength":{"title":"totalLength","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/totalLength","url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/totallength","type":"topic","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"totalLength","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"SourceLength","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV"}],"abstract":[{"type":"text","text":"The length of this node including all of its trivia."}],"kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/node(at:)":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"node"},{"kind":"text","text":"("},{"text":"at","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"SyntaxIdentifier","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B10IdentifierV"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/node(at:)","type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/node(at:)","title":"node(at:)","kind":"symbol","abstract":[{"text":"If the node with the given ","type":"text"},{"type":"codeVoice","code":"syntaxIdentifier"},{"type":"text","text":" is a (recursive) child of this node, return the node with that"},{"type":"text","text":" "},{"type":"text","text":"identifier."}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/hasParent":{"url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/hasparent","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"hasParent","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/hasParent","kind":"symbol","role":"symbol","type":"topic","title":"hasParent","abstract":[{"text":"Whether or not this node has a parent.","type":"text"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/asProtocol(_:)-2zs1u":{"url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/asprotocol(_:)-2zs1u","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"((any "},{"text":"FreestandingMacroExpansionSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P"},{"kind":"text","text":").Type) -> (any "},{"text":"FreestandingMacroExpansionSyntax","preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P","kind":"typeIdentifier"},{"text":")?","kind":"text"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/asProtocol(_:)-2zs1u","title":"asProtocol(_:)","type":"topic","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"FreestandingMacroExpansionSyntax"},{"text":". Otherwise return ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/keyPathInParent":{"title":"keyPathInParent","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/keyPathInParent","url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/keypathinparent","abstract":[],"type":"topic","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"keyPathInParent","kind":"identifier"},{"kind":"text","text":": "},{"text":"AnyKeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s10AnyKeyPathC"},{"kind":"text","text":"?"}],"role":"symbol","kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/asProtocol(_:)-4b74s":{"kind":"symbol","url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/asprotocol(_:)-4b74s","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/asProtocol(_:)-4b74s","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"text":"((any ","kind":"text"},{"text":"WithCodeBlockSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P"},{"text":").Type) -> (any ","kind":"text"},{"text":"WithCodeBlockSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P"},{"kind":"text","text":")?"}],"type":"topic","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"code":"WithCodeBlockSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"title":"asProtocol(_:)"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/asProtocol(_:)-9syxt":{"url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/asprotocol(_:)-9syxt","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"text":"((any ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax011MissingNodeB0P","kind":"typeIdentifier","text":"MissingNodeSyntax"},{"text":").Type) -> (any ","kind":"text"},{"text":"MissingNodeSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax011MissingNodeB0P"},{"kind":"text","text":")?"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/asProtocol(_:)-9syxt","kind":"symbol","role":"symbol","type":"topic","title":"asProtocol(_:)","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"code":"MissingNodeSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/isProtocol(_:)-1phnq":{"url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/isprotocol(_:)-1phnq","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"text":"((any ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax017WithTrailingCommaB0P","text":"WithTrailingCommaSyntax","kind":"typeIdentifier"},{"kind":"text","text":").Type) -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/isProtocol(_:)-1phnq","title":"isProtocol(_:)","type":"topic","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"WithTrailingCommaSyntax"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/map(_:_:)":{"url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/map(_:_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"map","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"WritableKeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s15WritableKeyPathC"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":">, (","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"rethrows"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/map(_:_:)","kind":"symbol","role":"symbol","type":"topic","title":"map(_:_:)","abstract":[]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)":{"url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/sourcerange(converter:afterleadingtrivia:aftertrailingtrivia:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"sourceRange","kind":"identifier"},{"text":"(","kind":"text"},{"text":"converter","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC","kind":"typeIdentifier","text":"SourceLocationConverter"},{"text":", ","kind":"text"},{"text":"afterLeadingTrivia","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"afterTrailingTrivia"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax11SourceRangeV","text":"SourceRange","kind":"typeIdentifier"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)","title":"sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)","type":"topic","abstract":[{"type":"text","text":"The source range, in the provided file, of this Syntax node."}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/firstToken":{"url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/firsttoken","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"firstToken","kind":"identifier"},{"kind":"text","text":": "},{"text":"TokenSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"kind":"text","text":"?"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/firstToken","kind":"symbol","deprecated":true,"role":"symbol","type":"topic","title":"firstToken","abstract":[]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/asMacroLexicalContext()":{"abstract":[{"text":"If this syntax node acts as a lexical context from the perspective","type":"text"},{"type":"text","text":" "},{"text":"of a macro, return a new syntax node based on this node that strips all","type":"text"},{"type":"text","text":" "},{"type":"text","text":"information that isn’t supposed to be exposed as a lexical context, such"},{"type":"text","text":" "},{"text":"as function bodies or the members of types\/extensions.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"asMacroLexicalContext","kind":"identifier"},{"kind":"text","text":"() -> "},{"text":"Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"kind":"text","text":"?"}],"title":"asMacroLexicalContext()","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/asMacroLexicalContext()","type":"topic","url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/asmacrolexicalcontext()","kind":"symbol","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/init(validating:)":{"url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/init(validating:)","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"text":"validating","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/init(validating:)","title":"init(validating:)","type":"topic","abstract":[{"text":"If ","type":"text"},{"type":"codeVoice","code":"node"},{"text":" has contains no syntax errors, return ","type":"text"},{"code":"node","type":"codeVoice"},{"text":", otherwise","type":"text"},{"type":"text","text":" "},{"type":"text","text":"throw an error with diagnostics describing the syntax errors."}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/as(_:)-51qx7":{"url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/as(_:)-51qx7","kind":"symbol","abstract":[{"text":"Attempts to cast the current syntax node to a given specialized syntax type.","type":"text"}],"type":"topic","title":"as(_:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/as(_:)-51qx7","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"`as`"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"S"},{"text":">(","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":"?"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/as(_:)-18h17":{"url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/as(_:)-18h17","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"`as`","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier","text":"Syntax"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/as(_:)-18h17","kind":"symbol","deprecated":true,"role":"symbol","type":"topic","title":"as(_:)","abstract":[{"type":"text","text":"Attempts to upcast the current syntax node to "},{"type":"reference","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax","isActive":true},{"text":" node.","type":"text"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/isProtocol(_:)-3xsk9":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"text":"((any ","kind":"text"},{"kind":"typeIdentifier","text":"WithGenericParametersSyntax","preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P"},{"text":").Type) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"code":"WithGenericParametersSyntax","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"kind":"symbol","title":"isProtocol(_:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/isProtocol(_:)-3xsk9","url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/isprotocol(_:)-3xsk9","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/init(_:)-6fn3i":{"url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/init(_:)-6fn3i","role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"text":"?<","kind":"text"},{"text":"S","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"S","kind":"typeIdentifier"},{"text":"?)","kind":"text"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/init(_:)-6fn3i","title":"init(_:)","type":"topic","abstract":[{"text":"Initializes a new instance of the conforming type from a given specialized syntax node.","type":"text"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/cast(_:)-2p3z0":{"url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/cast(_:)-2p3z0","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"cast","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier","text":"Syntax"},{"text":".Type) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/cast(_:)-2p3z0","kind":"symbol","deprecated":true,"role":"symbol","type":"topic","title":"cast(_:)","abstract":[{"text":"Force-cast the current syntax node to ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax","isActive":true},{"text":" node..","type":"text"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/contentLength":{"url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/contentlength","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"contentLength","kind":"identifier"},{"kind":"text","text":": "},{"text":"SourceLength","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV"}],"kind":"symbol","deprecated":true,"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/contentLength","title":"contentLength","type":"topic","abstract":[]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/index":{"url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/index","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"index"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax0B13ChildrenIndexV","text":"SyntaxChildrenIndex","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/index","kind":"symbol","deprecated":true,"role":"symbol","type":"topic","title":"index","abstract":[{"text":"The index of this node in a ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxChildren","type":"reference"},{"text":" collection.","type":"text"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/token(at:)":{"url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/token(at:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"token"},{"text":"(","kind":"text"},{"text":"at","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","kind":"typeIdentifier","text":"AbsolutePosition"},{"text":") -> ","kind":"text"},{"text":"TokenSyntax","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/token(at:)","title":"token(at:)","type":"topic","abstract":[{"text":"Find the syntax token at the given absolute position within this","type":"text"},{"text":" ","type":"text"},{"text":"syntax node or any of its children.","type":"text"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/position":{"url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/position","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"position","kind":"identifier"},{"text":": ","kind":"text"},{"text":"AbsolutePosition","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/position","kind":"symbol","role":"symbol","type":"topic","title":"position","abstract":[{"text":"The absolute position of the starting point of this node. If the first token","type":"text"},{"text":" ","type":"text"},{"text":"is with leading trivia, the position points to the start of the leading","type":"text"},{"type":"text","text":" "},{"text":"trivia.","type":"text"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/formatted(using:)":{"kind":"symbol","abstract":[],"role":"symbol","url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/formatted(using:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/formatted(using:)","title":"formatted(using:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"formatted","kind":"identifier"},{"text":"(","kind":"text"},{"text":"using","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:16SwiftBasicFormat0bC0C","text":"BasicFormat","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V"}],"type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/detached":{"url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/detached","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"detached","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/detached","title":"detached","type":"topic","abstract":[{"text":"Return this subtree with this node as the root, ie. detach this node","type":"text"},{"type":"text","text":" "},{"text":"from its parent.","type":"text"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/is(_:)-6i5e8":{"url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/is(_:)-6i5e8","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"`is`","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"kind":"text","text":".Type) -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/is(_:)-6i5e8","kind":"symbol","deprecated":true,"role":"symbol","type":"topic","title":"is(_:)","abstract":[{"text":"Checks if the current syntax node can be upcast to ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax"},{"text":" node.","type":"text"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/TokenDiagnostic":{"type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"TokenDiagnostic"}],"role":"symbol","abstract":[{"text":"If the token has an error that’s inherent to the token itself and not its","type":"text"},{"text":" ","type":"text"},{"text":"surrounding structure, this defines the type of the error.","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"byteOffset"},{"type":"text","text":" specifies at which offset the error occurred."}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TokenDiagnostic","title":"TokenDiagnostic","url":"\/documentation\/macrobuilder\/tokendiagnostic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"TokenDiagnostic","kind":"identifier"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/byteSize":{"url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/bytesize","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"byteSize","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"kind":"symbol","deprecated":true,"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/byteSize","title":"byteSize","type":"topic","abstract":[{"text":"The textual byte length of this node including leading and trailing trivia.","type":"text"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/isProtocol(_:)-yhik":{"url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/isprotocol(_:)-yhik","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"text":"((any ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax016EffectSpecifiersB0P","kind":"typeIdentifier","text":"EffectSpecifiersSyntax"},{"kind":"text","text":").Type) -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/isProtocol(_:)-yhik","kind":"symbol","role":"symbol","type":"topic","title":"isProtocol(_:)","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"text":" ","type":"text"},{"code":"EffectSpecifiersSyntax","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/byteSizeAfterTrimmingTrivia":{"url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/bytesizeaftertrimmingtrivia","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"byteSizeAfterTrimmingTrivia"},{"kind":"text","text":": "},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"}],"kind":"symbol","deprecated":true,"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/byteSizeAfterTrimmingTrivia","title":"byteSizeAfterTrimmingTrivia","type":"topic","abstract":[{"type":"text","text":"The textual byte length of this node excluding leading and trailing trivia."}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/trimmed":{"title":"trimmed","type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/trimmed","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"trimmed","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"}],"role":"symbol","abstract":[{"type":"text","text":"A copy of this node without the leading trivia of the first token in the"},{"type":"text","text":" "},{"text":"node and the trailing trivia of the last token in the node.","type":"text"}],"url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/trimmed"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/isProtocol(_:)-4beuj":{"title":"isProtocol(_:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/isProtocol(_:)-4beuj","role":"symbol","kind":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"kind":"text","text":"((any "},{"preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P","kind":"typeIdentifier","text":"WithCodeBlockSyntax"},{"text":").Type) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/isprotocol(_:)-4beuj","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"code":"WithCodeBlockSyntax","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/asProtocol(_:)-28ro9":{"url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/asprotocol(_:)-28ro9","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"text":"((any ","kind":"text"},{"text":"NamedDeclSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax09NamedDeclB0P"},{"text":").Type) -> (any ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax09NamedDeclB0P","text":"NamedDeclSyntax","kind":"typeIdentifier"},{"text":")?","kind":"text"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/asProtocol(_:)-28ro9","kind":"symbol","role":"symbol","type":"topic","title":"asProtocol(_:)","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"code":"NamedDeclSyntax","type":"codeVoice"},{"text":". Otherwise return ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/trimmedDescription":{"url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/trimmeddescription","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"trimmedDescription","kind":"identifier"},{"kind":"text","text":": "},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"The description of this node with leading whitespace of the first token"},{"type":"text","text":" "},{"type":"text","text":"and trailing whitespace of the last token removed."}],"kind":"symbol","title":"trimmedDescription","type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/trimmedDescription","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/cast(_:)-k8cu":{"abstract":[{"type":"text","text":"Force-casts the current syntax node to its own type."}],"kind":"symbol","title":"cast(_:)","role":"symbol","deprecated":true,"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/cast(_:)-k8cu","url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/cast(_:)-k8cu","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cast"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"text":".Type) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/modifying(_:_:)":{"url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/modifying(_:_:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"modifying","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"text":"WritableKeyPath","preciseIdentifier":"s:s15WritableKeyPathC","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">, (","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Self","kind":"typeIdentifier"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/modifying(_:_:)","title":"modifying(_:_:)","type":"topic","abstract":[]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/totalByteRange":{"url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/totalbyterange","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"totalByteRange","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangeV","text":"ByteSourceRange","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/totalByteRange","kind":"symbol","role":"symbol","type":"topic","title":"totalByteRange","abstract":[{"type":"text","text":"The byte source range of this node including leading and trailing trivia."}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/lastToken(viewMode:)":{"url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/lasttoken(viewmode:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"lastToken","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"viewMode"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","kind":"typeIdentifier","text":"SyntaxTreeViewMode"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/lastToken(viewMode:)","title":"lastToken(viewMode:)","type":"topic","abstract":[{"type":"text","text":"Returns the last token node that is part of this syntax node."}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/parent":{"url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/parent","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"parent"},{"kind":"text","text":": "},{"text":"Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/parent","kind":"symbol","role":"symbol","type":"topic","title":"parent","abstract":[{"type":"text","text":"The parent of this syntax node, or "},{"code":"nil","type":"codeVoice"},{"type":"text","text":" if this node is the root."}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/endPosition":{"url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/endposition","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"endPosition","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","text":"AbsolutePosition"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/endPosition","title":"endPosition","type":"topic","abstract":[{"type":"text","text":"The end position of this node, including its trivia."}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/firstToken(viewMode:)":{"abstract":[{"type":"text","text":"Returns the first token node that is part of this syntax node."}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/firstToken(viewMode:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"firstToken","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"viewMode"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","text":"SyntaxTreeViewMode","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"TokenSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"text":"?","kind":"text"}],"url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/firsttoken(viewmode:)","role":"symbol","title":"firstToken(viewMode:)","kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/id":{"url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/id","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"id","kind":"identifier"},{"text":": ","kind":"text"},{"text":"SyntaxIdentifier","preciseIdentifier":"s:11SwiftSyntax0B10IdentifierV","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/id","kind":"symbol","role":"symbol","type":"topic","title":"id","abstract":[{"type":"text","text":"Returns a value representing the unique identity of the node."}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/asProtocol(_:)-5w5se":{"url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/asprotocol(_:)-5w5se","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"text":"((any ","kind":"text"},{"text":"DeclGroupSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax09DeclGroupB0P"},{"text":").Type) -> (any ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax09DeclGroupB0P","text":"DeclGroupSyntax","kind":"typeIdentifier"},{"kind":"text","text":")?"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/asProtocol(_:)-5w5se","title":"asProtocol(_:)","type":"topic","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"DeclGroupSyntax"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/init(_:)-4aou4":{"url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/init(_:)-4aou4","fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Children","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"Children","kind":"typeIdentifier"},{"text":")","kind":"text"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/init(_:)-4aou4","kind":"symbol","role":"symbol","type":"topic","title":"init(_:)","abstract":[{"text":"Converts the given specialized node to this type. Returns ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":" if the"},{"text":" ","type":"text"},{"type":"text","text":"conversion is not possible."}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/root":{"url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/root","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"root"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax","kind":"typeIdentifier"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/root","title":"root","type":"topic","abstract":[{"type":"text","text":"The root of the tree in which this node resides."}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/structure":{"url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/structure","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"structure","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B13NodeStructureO","kind":"typeIdentifier","text":"SyntaxNodeStructure"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/structure","kind":"symbol","role":"symbol","type":"topic","title":"structure","abstract":[{"type":"text","text":"The statically allowed structure of the syntax node."}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/asProtocol(_:)-9ty12":{"type":"topic","role":"symbol","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"code":"EffectSpecifiersSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/asprotocol(_:)-9ty12","title":"asProtocol(_:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"asProtocol"},{"kind":"text","text":"((any "},{"preciseIdentifier":"s:11SwiftSyntax016EffectSpecifiersB0P","text":"EffectSpecifiersSyntax","kind":"typeIdentifier"},{"text":").Type) -> (any ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax016EffectSpecifiersB0P","text":"EffectSpecifiersSyntax","kind":"typeIdentifier"},{"text":")?","kind":"text"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/asProtocol(_:)-9ty12"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/previousToken":{"role":"symbol","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/previousToken","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"previousToken","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"TokenSyntax","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"text":"?","kind":"text"}],"title":"previousToken","kind":"symbol","deprecated":true,"url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/previoustoken"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/byteRange":{"role":"symbol","title":"byteRange","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"byteRange","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"ByteSourceRange","preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangeV"}],"deprecated":true,"abstract":[],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/byteRange","url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/byterange","type":"topic","kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/trimmedByteRange":{"type":"topic","role":"symbol","abstract":[{"type":"text","text":"The byte source range of this node excluding leading and trailing trivia."}],"url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/trimmedbyterange","title":"trimmedByteRange","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"trimmedByteRange","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"ByteSourceRange","preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangeV"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/trimmedByteRange"}}}