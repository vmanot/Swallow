{"sections":[],"variants":[{"paths":["\/documentation\/macrobuilder\/simplestringliteralexprsyntax\/init(_:)-2ir73"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralExprSyntax\/init(_:)-2ir73"},"metadata":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"?(some "},{"text":"SyntaxProtocol","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP"},{"text":")","kind":"text"}],"modules":[{"name":"MacroBuilder"}],"roleHeading":"Initializer","symbolKind":"init","externalID":"s:11SwiftSyntax023SimpleStringLiteralExprB0VyACSgxhcAA0B8ProtocolRzlufc"},"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralExprSyntax"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"?("},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"node","kind":"internalParam"},{"text":": some ","kind":"text"},{"text":"SyntaxProtocol","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxProtocol"},{"kind":"text","text":")"}],"platforms":["macOS"],"languages":["swift"]}]}],"kind":"symbol","abstract":[{"type":"text","text":"Converts the given specialized node to this type. Returns "},{"type":"codeVoice","code":"nil"},{"text":" if the","type":"text"},{"type":"text","text":" "},{"text":"conversion is not possible.","type":"text"}],"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralExprSyntax":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SimpleStringLiteralExprSyntax"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralExprSyntax","url":"\/documentation\/macrobuilder\/simplestringliteralexprsyntax","navigatorTitle":[{"kind":"identifier","text":"SimpleStringLiteralExprSyntax"}],"kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"A simple string that canâ€™t contain string interpolation and cannot have raw string delimiters."}],"title":"SimpleStringLiteralExprSyntax","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SyntaxProtocol":{"title":"SyntaxProtocol","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxProtocol","navigatorTitle":[{"text":"SyntaxProtocol","kind":"identifier"}],"abstract":[{"text":"Provide common functionality for specialized syntax nodes. Extend this","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"protocol to provide common functionality for all syntax nodes."}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"SyntaxProtocol","kind":"identifier"}],"type":"topic","role":"symbol","url":"\/documentation\/macrobuilder\/syntaxprotocol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralExprSyntax/init(_:)-2ir73":{"title":"init(_:)","type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralExprSyntax\/init(_:)-2ir73","role":"symbol","url":"\/documentation\/macrobuilder\/simplestringliteralexprsyntax\/init(_:)-2ir73","fragments":[{"text":"init","kind":"identifier"},{"text":"?(some ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP","text":"SyntaxProtocol"},{"text":")","kind":"text"}],"kind":"symbol","abstract":[{"text":"Converts the given specialized node to this type. Returns ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":" if the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"conversion is not possible."}]}}}