{"sections":[],"abstract":[{"type":"text","text":"If this syntax node acts as a lexical context from the perspective"},{"text":" ","type":"text"},{"type":"text","text":"of a macro, return a new syntax node based on this node that strips all"},{"text":" ","type":"text"},{"type":"text","text":"information that isn’t supposed to be exposed as a lexical context, such"},{"type":"text","text":" "},{"text":"as function bodies or the members of types\/extensions.","type":"text"}],"metadata":{"modules":[{"name":"MacroBuilder","relatedModules":["SwiftSyntax"]}],"roleHeading":"Instance Method","extendedModule":"SwiftSyntax","externalID":"s:11SwiftSyntax0B8ProtocolP0aB6MacrosE21asMacroLexicalContextAA0B0VSgyF::SYNTHESIZED::s:11SwiftSyntax020ClosureParameterListB0V","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"asMacroLexicalContext","kind":"identifier"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax"},{"kind":"text","text":"?"}],"title":"asMacroLexicalContext()","role":"symbol","symbolKind":"method"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ClosureParameterListSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ClosureParameterListSyntax\/SyntaxProtocol-Implementations"]]},"identifier":{"url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ClosureParameterListSyntax\/asMacroLexicalContext()","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/macrobuilder\/closureparameterlistsyntax\/asmacrolexicalcontext()"]}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"asMacroLexicalContext","kind":"identifier"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax"},{"text":"?","kind":"text"}],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"content","content":[{"anchor":"discussion","level":2,"text":"Discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"Returns ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":" for any syntax node that isn’t a lexical context.","type":"text"}]}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ClosureParameterListSyntax/asMacroLexicalContext()":{"abstract":[{"text":"If this syntax node acts as a lexical context from the perspective","type":"text"},{"type":"text","text":" "},{"type":"text","text":"of a macro, return a new syntax node based on this node that strips all"},{"text":" ","type":"text"},{"type":"text","text":"information that isn’t supposed to be exposed as a lexical context, such"},{"text":" ","type":"text"},{"type":"text","text":"as function bodies or the members of types\/extensions."}],"kind":"symbol","type":"topic","url":"\/documentation\/macrobuilder\/closureparameterlistsyntax\/asmacrolexicalcontext()","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ClosureParameterListSyntax\/asMacroLexicalContext()","role":"symbol","title":"asMacroLexicalContext()","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asMacroLexicalContext"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"kind":"text","text":"?"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ClosureParameterListSyntax/SyntaxProtocol-Implementations":{"abstract":[],"role":"collectionGroup","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ClosureParameterListSyntax\/SyntaxProtocol-Implementations","title":"SyntaxProtocol Implementations","url":"\/documentation\/macrobuilder\/closureparameterlistsyntax\/syntaxprotocol-implementations","kind":"article","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ClosureParameterListSyntax":{"role":"symbol","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ClosureParameterListSyntax"}],"url":"\/documentation\/macrobuilder\/closureparameterlistsyntax","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ClosureParameterListSyntax","type":"topic","navigatorTitle":[{"text":"ClosureParameterListSyntax","kind":"identifier"}],"title":"ClosureParameterListSyntax"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/Syntax":{"abstract":[{"type":"text","text":"A Syntax node represents a tree of nodes with tokens at the leaves."},{"text":" ","type":"text"},{"type":"text","text":"Each node has accessors for its known children, and allows efficient"},{"text":" ","type":"text"},{"text":"iteration over the children through its ","type":"text"},{"type":"codeVoice","code":"children"},{"text":" property.","type":"text"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Syntax"}],"url":"\/documentation\/macrobuilder\/syntax","title":"Syntax","type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Syntax","kind":"identifier"}],"kind":"symbol"}}}