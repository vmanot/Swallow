{"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"symbol","sections":[],"topicSections":[{"generated":true,"title":"Initializers","identifiers":["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BinaryOperatorExprSyntax\/init(_:)-8691r","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BinaryOperatorExprSyntax\/init(leadingTrivia:_:operator:_:trailingTrivia:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BinaryOperatorExprSyntax\/init(leadingTrivia:_:operatorToken:_:trailingTrivia:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BinaryOperatorExprSyntax\/init(text:)"],"anchor":"Initializers"},{"generated":true,"anchor":"Instance-Properties","identifiers":["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BinaryOperatorExprSyntax\/operator","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BinaryOperatorExprSyntax\/operatorToken","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BinaryOperatorExprSyntax\/unexpectedAfterOperator","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BinaryOperatorExprSyntax\/unexpectedAfterOperatorToken","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BinaryOperatorExprSyntax\/unexpectedBeforeOperator","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BinaryOperatorExprSyntax\/unexpectedBeforeOperatorToken"],"title":"Instance Properties"},{"anchor":"Type-Properties","identifiers":["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BinaryOperatorExprSyntax\/structure"],"generated":true,"title":"Type Properties"},{"anchor":"Default-Implementations","title":"Default Implementations","identifiers":["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BinaryOperatorExprSyntax\/CustomReflectable-Implementations","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BinaryOperatorExprSyntax\/Equatable-Implementations","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BinaryOperatorExprSyntax\/Equatable-Implementations","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BinaryOperatorExprSyntax\/ExprSyntaxProtocol-Implementations","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BinaryOperatorExprSyntax\/Hashable-Implementations","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BinaryOperatorExprSyntax\/Hashable-Implementations","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BinaryOperatorExprSyntax\/SyntaxProtocol-Implementations"],"generated":true}],"identifier":{"url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BinaryOperatorExprSyntax","interfaceLanguage":"swift"},"metadata":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"BinaryOperatorExprSyntax"}],"navigatorTitle":[{"text":"BinaryOperatorExprSyntax","kind":"identifier"}],"externalID":"s:11SwiftSyntax018BinaryOperatorExprB0V","roleHeading":"Structure","title":"BinaryOperatorExprSyntax","modules":[{"name":"MacroBuilder"}],"symbolKind":"struct","role":"symbol"},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder"]]},"relationshipsSections":[{"title":"Conforms To","type":"conformsTo","kind":"relationships","identifiers":["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprSyntaxProtocol","doc:\/\/com.swallow.documentation.MacroBuilder\/s28CustomDebugStringConvertibleP","doc:\/\/com.swallow.documentation.MacroBuilder\/s17CustomReflectableP","doc:\/\/com.swallow.documentation.MacroBuilder\/s23CustomStringConvertibleP","doc:\/\/com.swallow.documentation.MacroBuilder\/SQ","doc:\/\/com.swallow.documentation.MacroBuilder\/SH","doc:\/\/com.swallow.documentation.MacroBuilder\/s8SendableP","doc:\/\/com.swallow.documentation.MacroBuilder\/s20TextOutputStreamableP","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxHashable","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxProtocol"]}],"abstract":[{"type":"text","text":"An operator like "},{"code":"+","type":"codeVoice"},{"type":"text","text":" or "},{"type":"codeVoice","code":"-"},{"type":"text","text":"."}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"BinaryOperatorExprSyntax"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"text":"Overview","level":2,"type":"heading","anchor":"overview"},{"inlineContent":[{"type":"text","text":"This node represents the binary operator itself. It can occur inside a "},{"type":"reference","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SequenceExprSyntax","isActive":true},{"type":"text","text":""},{"type":"text","text":" "},{"text":"after parsing and will be the ","type":"text"},{"type":"codeVoice","code":"operator"},{"text":" child of an ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/InfixOperatorExprSyntax"},{"type":"text","text":""},{"text":" ","type":"text"},{"type":"text","text":"after folding operator using the "},{"code":"SwiftOperators","type":"codeVoice"},{"type":"text","text":" library."}],"type":"paragraph"},{"anchor":"Children","level":3,"type":"heading","text":"Children"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"code":"operator","type":"codeVoice"},{"type":"text","text":": "},{"code":"<binaryOperator>","type":"codeVoice"}],"type":"paragraph"}]}]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/macrobuilder\/binaryoperatorexprsyntax"]}],"references":{"doc://com.swallow.documentation.MacroBuilder/s23CustomStringConvertibleP":{"title":"Swift.CustomStringConvertible","type":"unresolvable","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/s23CustomStringConvertibleP"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BinaryOperatorExprSyntax/init(leadingTrivia:_:operatorToken:_:trailingTrivia:)":{"type":"topic","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"text":"leadingTrivia","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax6TriviaV","text":"Trivia"},{"kind":"text","text":"?, "},{"preciseIdentifier":"s:11SwiftSyntax015UnexpectedNodesB0V","kind":"typeIdentifier","text":"UnexpectedNodesSyntax"},{"text":"?, ","kind":"text"},{"text":"operatorToken","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","kind":"typeIdentifier","text":"TokenSyntax"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax015UnexpectedNodesB0V","text":"UnexpectedNodesSyntax","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"trailingTrivia","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Trivia","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax6TriviaV"},{"kind":"text","text":"?)"}],"title":"init(leadingTrivia:_:operatorToken:_:trailingTrivia:)","kind":"symbol","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BinaryOperatorExprSyntax\/init(leadingTrivia:_:operatorToken:_:trailingTrivia:)","role":"symbol","deprecated":true,"url":"\/documentation\/macrobuilder\/binaryoperatorexprsyntax\/init(leadingtrivia:_:operatortoken:_:trailingtrivia:)"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SyntaxHashable":{"url":"\/documentation\/macrobuilder\/syntaxhashable","type":"topic","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxHashable","role":"symbol","navigatorTitle":[{"text":"SyntaxHashable","kind":"identifier"}],"title":"SyntaxHashable","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SyntaxHashable","kind":"identifier"}],"abstract":[{"type":"text","text":"Protocol that provides a common Hashable implementation for all syntax nodes"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BinaryOperatorExprSyntax/structure":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BinaryOperatorExprSyntax\/structure","abstract":[{"text":"The statically allowed structure of the syntax node.","type":"text"}],"type":"topic","kind":"symbol","url":"\/documentation\/macrobuilder\/binaryoperatorexprsyntax\/structure","title":"structure","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"text":"structure","kind":"identifier"},{"text":": ","kind":"text"},{"text":"SyntaxNodeStructure","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B13NodeStructureO"}]},"doc://com.swallow.documentation.MacroBuilder/s17CustomReflectableP":{"title":"Swift.CustomReflectable","type":"unresolvable","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/s17CustomReflectableP"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BinaryOperatorExprSyntax/ExprSyntaxProtocol-Implementations":{"title":"ExprSyntaxProtocol Implementations","abstract":[],"type":"topic","url":"\/documentation\/macrobuilder\/binaryoperatorexprsyntax\/exprsyntaxprotocol-implementations","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BinaryOperatorExprSyntax\/ExprSyntaxProtocol-Implementations","kind":"article","role":"collectionGroup"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BinaryOperatorExprSyntax/init(text:)":{"title":"init(text:)","type":"topic","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"text":"text","kind":"externalParam"},{"kind":"text","text":": "},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"kind":"text","text":")"}],"abstract":[],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BinaryOperatorExprSyntax\/init(text:)","kind":"symbol","role":"symbol","url":"\/documentation\/macrobuilder\/binaryoperatorexprsyntax\/init(text:)"},"doc://com.swallow.documentation.MacroBuilder/SH":{"type":"unresolvable","title":"Swift.Hashable","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/SH"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BinaryOperatorExprSyntax/operator":{"kind":"symbol","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"`operator`"},{"text":": ","kind":"text"},{"text":"TokenSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BinaryOperatorExprSyntax\/operator","url":"\/documentation\/macrobuilder\/binaryoperatorexprsyntax\/operator","abstract":[],"title":"operator","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BinaryOperatorExprSyntax/unexpectedBeforeOperator":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BinaryOperatorExprSyntax\/unexpectedBeforeOperator","abstract":[],"type":"topic","kind":"symbol","url":"\/documentation\/macrobuilder\/binaryoperatorexprsyntax\/unexpectedbeforeoperator","title":"unexpectedBeforeOperator","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"unexpectedBeforeOperator"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax015UnexpectedNodesB0V","text":"UnexpectedNodesSyntax","kind":"typeIdentifier"},{"text":"?","kind":"text"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BinaryOperatorExprSyntax/CustomReflectable-Implementations":{"abstract":[],"url":"\/documentation\/macrobuilder\/binaryoperatorexprsyntax\/customreflectable-implementations","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BinaryOperatorExprSyntax\/CustomReflectable-Implementations","kind":"article","type":"topic","title":"CustomReflectable Implementations","role":"collectionGroup"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BinaryOperatorExprSyntax":{"url":"\/documentation\/macrobuilder\/binaryoperatorexprsyntax","title":"BinaryOperatorExprSyntax","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BinaryOperatorExprSyntax","type":"topic","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BinaryOperatorExprSyntax","kind":"identifier"}],"abstract":[{"type":"text","text":"An operator like "},{"type":"codeVoice","code":"+"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"-"},{"text":".","type":"text"}],"navigatorTitle":[{"text":"BinaryOperatorExprSyntax","kind":"identifier"}],"kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SequenceExprSyntax":{"url":"\/documentation\/macrobuilder\/sequenceexprsyntax","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SequenceExprSyntax","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"SequenceExprSyntax","kind":"identifier"}],"title":"SequenceExprSyntax","abstract":[{"type":"text","text":"A flat list of expressions before operator folding using the "},{"type":"codeVoice","code":"SwiftOperators"},{"type":"text","text":" library."}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SequenceExprSyntax","kind":"identifier"}],"type":"topic"},"doc://com.swallow.documentation.MacroBuilder/s20TextOutputStreamableP":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/s20TextOutputStreamableP","title":"Swift.TextOutputStreamable","type":"unresolvable"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BinaryOperatorExprSyntax/SyntaxProtocol-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BinaryOperatorExprSyntax\/SyntaxProtocol-Implementations","kind":"article","title":"SyntaxProtocol Implementations","role":"collectionGroup","type":"topic","abstract":[],"url":"\/documentation\/macrobuilder\/binaryoperatorexprsyntax\/syntaxprotocol-implementations"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BinaryOperatorExprSyntax/unexpectedBeforeOperatorToken":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"unexpectedBeforeOperatorToken"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax015UnexpectedNodesB0V","text":"UnexpectedNodesSyntax"},{"text":"?","kind":"text"}],"url":"\/documentation\/macrobuilder\/binaryoperatorexprsyntax\/unexpectedbeforeoperatortoken","type":"topic","kind":"symbol","title":"unexpectedBeforeOperatorToken","role":"symbol","deprecated":true,"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BinaryOperatorExprSyntax\/unexpectedBeforeOperatorToken","abstract":[]},"doc://com.swallow.documentation.MacroBuilder/s8SendableP":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/s8SendableP","title":"Swift.Sendable","type":"unresolvable"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BinaryOperatorExprSyntax/unexpectedAfterOperator":{"title":"unexpectedAfterOperator","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"unexpectedAfterOperator"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"UnexpectedNodesSyntax","preciseIdentifier":"s:11SwiftSyntax015UnexpectedNodesB0V"},{"kind":"text","text":"?"}],"abstract":[],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BinaryOperatorExprSyntax\/unexpectedAfterOperator","kind":"symbol","role":"symbol","url":"\/documentation\/macrobuilder\/binaryoperatorexprsyntax\/unexpectedafteroperator"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BinaryOperatorExprSyntax/Hashable-Implementations":{"url":"\/documentation\/macrobuilder\/binaryoperatorexprsyntax\/hashable-implementations","type":"topic","title":"Hashable Implementations","kind":"article","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BinaryOperatorExprSyntax\/Hashable-Implementations","role":"collectionGroup"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/InfixOperatorExprSyntax":{"abstract":[{"text":"An infix operator call like ","type":"text"},{"type":"codeVoice","code":"1 + 2"},{"text":".","type":"text"}],"url":"\/documentation\/macrobuilder\/infixoperatorexprsyntax","navigatorTitle":[{"text":"InfixOperatorExprSyntax","kind":"identifier"}],"title":"InfixOperatorExprSyntax","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/InfixOperatorExprSyntax","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"InfixOperatorExprSyntax"}],"type":"topic","kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/s28CustomDebugStringConvertibleP":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/s28CustomDebugStringConvertibleP","title":"Swift.CustomDebugStringConvertible","type":"unresolvable"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprSyntaxProtocol":{"type":"topic","url":"\/documentation\/macrobuilder\/exprsyntaxprotocol","abstract":[{"text":"Protocol to which all ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprSyntax"},{"type":"text","text":" nodes conform."}],"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprSyntaxProtocol","kind":"symbol","title":"ExprSyntaxProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ExprSyntaxProtocol"}],"navigatorTitle":[{"text":"ExprSyntaxProtocol","kind":"identifier"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BinaryOperatorExprSyntax/init(_:)-8691r":{"title":"init(_:)","type":"topic","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"?(some "},{"text":"SyntaxProtocol","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Converts the given specialized node to this type. Returns "},{"type":"codeVoice","code":"nil"},{"text":" if the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"conversion is not possible."}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BinaryOperatorExprSyntax\/init(_:)-8691r","kind":"symbol","role":"symbol","url":"\/documentation\/macrobuilder\/binaryoperatorexprsyntax\/init(_:)-8691r"},"doc://com.swallow.documentation.MacroBuilder/SQ":{"type":"unresolvable","title":"Swift.Equatable","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/SQ"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BinaryOperatorExprSyntax/init(leadingTrivia:_:operator:_:trailingTrivia:)":{"title":"init(leadingTrivia:_:operator:_:trailingTrivia:)","type":"topic","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"text":"leadingTrivia","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Trivia","preciseIdentifier":"s:11SwiftSyntax6TriviaV"},{"kind":"text","text":"?, "},{"text":"UnexpectedNodesSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax015UnexpectedNodesB0V"},{"kind":"text","text":"?, "},{"text":"operator","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax","kind":"typeIdentifier"},{"kind":"text","text":", "},{"preciseIdentifier":"s:11SwiftSyntax015UnexpectedNodesB0V","text":"UnexpectedNodesSyntax","kind":"typeIdentifier"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"trailingTrivia"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax6TriviaV","kind":"typeIdentifier","text":"Trivia"},{"text":"?)","kind":"text"}],"abstract":[],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BinaryOperatorExprSyntax\/init(leadingTrivia:_:operator:_:trailingTrivia:)","kind":"symbol","role":"symbol","url":"\/documentation\/macrobuilder\/binaryoperatorexprsyntax\/init(leadingtrivia:_:operator:_:trailingtrivia:)"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BinaryOperatorExprSyntax/unexpectedAfterOperatorToken":{"kind":"symbol","deprecated":true,"abstract":[],"type":"topic","title":"unexpectedAfterOperatorToken","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BinaryOperatorExprSyntax\/unexpectedAfterOperatorToken","url":"\/documentation\/macrobuilder\/binaryoperatorexprsyntax\/unexpectedafteroperatortoken","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"unexpectedAfterOperatorToken","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax015UnexpectedNodesB0V","text":"UnexpectedNodesSyntax"},{"text":"?","kind":"text"}],"role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprSyntax":{"url":"\/documentation\/macrobuilder\/exprsyntax","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"ExprSyntax","kind":"identifier"}],"type":"topic","title":"ExprSyntax","abstract":[],"kind":"symbol","navigatorTitle":[{"text":"ExprSyntax","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprSyntax"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SyntaxProtocol":{"title":"SyntaxProtocol","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxProtocol","navigatorTitle":[{"text":"SyntaxProtocol","kind":"identifier"}],"abstract":[{"text":"Provide common functionality for specialized syntax nodes. Extend this","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"protocol to provide common functionality for all syntax nodes."}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"SyntaxProtocol","kind":"identifier"}],"type":"topic","role":"symbol","url":"\/documentation\/macrobuilder\/syntaxprotocol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BinaryOperatorExprSyntax/operatorToken":{"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"operatorToken","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TokenSyntax","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"}],"deprecated":true,"role":"symbol","type":"topic","kind":"symbol","title":"operatorToken","abstract":[],"url":"\/documentation\/macrobuilder\/binaryoperatorexprsyntax\/operatortoken","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BinaryOperatorExprSyntax\/operatorToken"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BinaryOperatorExprSyntax/Equatable-Implementations":{"abstract":[],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BinaryOperatorExprSyntax\/Equatable-Implementations","kind":"article","title":"Equatable Implementations","url":"\/documentation\/macrobuilder\/binaryoperatorexprsyntax\/equatable-implementations","type":"topic","role":"collectionGroup"}}}