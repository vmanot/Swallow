{"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"variants":[{"paths":["\/documentation\/macrobuilder\/exprsyntaxprotocol\/cast(_:)-9upnc"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"cast","kind":"identifier"},{"kind":"text","text":"<"},{"text":"S","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"syntaxType"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":" "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"text":"S","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"SyntaxProtocol","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxProtocol"}]}]},{"kind":"content","content":[{"anchor":"return-value","type":"heading","text":"Return Value","level":2},{"type":"paragraph","inlineContent":[{"text":"An instance of the specialized type.","type":"text"}]}]},{"kind":"content","content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"name":"Warning","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This function will crash if the cast is not possible. Use "},{"type":"codeVoice","code":"as"},{"type":"text","text":" to safely attempt a cast."}]}],"type":"aside","style":"warning"},{"content":[{"inlineContent":[{"type":"text","text":"In most cases, this is casting a "},{"isActive":true,"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprSyntaxProtocol","type":"reference"},{"text":" to a node that is not a","type":"text"},{"text":" ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprSyntaxProtocol","type":"reference"},{"type":"text","text":", which will always fail. If the "},{"type":"codeVoice","code":"syntaxType"},{"type":"text","text":" argument is a generic type,"},{"text":" ","type":"text"},{"type":"text","text":"constrain it to "},{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprSyntaxProtocol","isActive":true,"type":"reference"},{"type":"text","text":" instead of "},{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxProtocol","type":"reference","isActive":true},{"type":"text","text":"."}],"type":"paragraph"}],"style":"note","type":"aside","name":"Note"}]}],"deprecationSummary":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Type argument should be part of the 'ExprSyntaxProtocol' hierarchy"}]}],"abstract":[{"text":"Force-casts the current syntax node to a given node type from a base node protocol hierarchy other than","type":"text"},{"type":"text","text":" "},{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprSyntaxProtocol","isActive":true,"type":"reference"},{"text":".","type":"text"}],"metadata":{"title":"cast(_:)","extendedModule":"SwiftSyntax","platforms":[],"modules":[{"name":"MacroBuilder","relatedModules":["SwiftSyntax"]}],"roleHeading":"Instance Method","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"cast"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"kind":"text","text":".Type) -> "},{"text":"S","kind":"typeIdentifier"}],"role":"symbol","externalID":"s:11SwiftSyntax04ExprB8ProtocolPAAE4castyqd__qd__mAA0bD0Rd__lF"},"kind":"symbol","identifier":{"url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprSyntaxProtocol\/cast(_:)-9upnc","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprSyntaxProtocol"]]},"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprSyntax":{"url":"\/documentation\/macrobuilder\/exprsyntax","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"ExprSyntax","kind":"identifier"}],"type":"topic","title":"ExprSyntax","abstract":[],"kind":"symbol","navigatorTitle":[{"text":"ExprSyntax","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprSyntax"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprSyntaxProtocol":{"type":"topic","url":"\/documentation\/macrobuilder\/exprsyntaxprotocol","abstract":[{"text":"Protocol to which all ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprSyntax"},{"type":"text","text":" nodes conform."}],"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprSyntaxProtocol","kind":"symbol","title":"ExprSyntaxProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ExprSyntaxProtocol"}],"navigatorTitle":[{"text":"ExprSyntaxProtocol","kind":"identifier"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SyntaxProtocol":{"title":"SyntaxProtocol","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxProtocol","navigatorTitle":[{"text":"SyntaxProtocol","kind":"identifier"}],"abstract":[{"text":"Provide common functionality for specialized syntax nodes. Extend this","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"protocol to provide common functionality for all syntax nodes."}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"SyntaxProtocol","kind":"identifier"}],"type":"topic","role":"symbol","url":"\/documentation\/macrobuilder\/syntaxprotocol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprSyntaxProtocol/cast(_:)-9upnc":{"type":"topic","title":"cast(_:)","url":"\/documentation\/macrobuilder\/exprsyntaxprotocol\/cast(_:)-9upnc","abstract":[{"type":"text","text":"Force-casts the current syntax node to a given node type from a base node protocol hierarchy other than"},{"type":"text","text":" "},{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprSyntaxProtocol","type":"reference","isActive":true},{"text":".","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprSyntaxProtocol\/cast(_:)-9upnc","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"cast"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"S"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":".Type) -> "},{"text":"S","kind":"typeIdentifier"}],"kind":"symbol","deprecated":true,"role":"symbol"}}}