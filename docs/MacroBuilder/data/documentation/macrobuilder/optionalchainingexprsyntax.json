{"metadata":{"navigatorTitle":[{"text":"OptionalChainingExprSyntax","kind":"identifier"}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"OptionalChainingExprSyntax","kind":"identifier"}],"roleHeading":"Structure","title":"OptionalChainingExprSyntax","modules":[{"name":"MacroBuilder"}],"externalID":"s:11SwiftSyntax020OptionalChainingExprB0V","symbolKind":"struct"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/macrobuilder\/optionalchainingexprsyntax"]}],"kind":"symbol","topicSections":[{"generated":true,"identifiers":["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/OptionalChainingExprSyntax\/init(_:)-24ccc","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/OptionalChainingExprSyntax\/init(leadingTrivia:_:expression:_:questionMark:_:trailingTrivia:)"],"title":"Initializers","anchor":"Initializers"},{"identifiers":["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/OptionalChainingExprSyntax\/expression","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/OptionalChainingExprSyntax\/questionMark","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/OptionalChainingExprSyntax\/unexpectedAfterQuestionMark","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/OptionalChainingExprSyntax\/unexpectedBeforeExpression","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/OptionalChainingExprSyntax\/unexpectedBetweenExpressionAndQuestionMark"],"generated":true,"anchor":"Instance-Properties","title":"Instance Properties"},{"identifiers":["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/OptionalChainingExprSyntax\/structure"],"generated":true,"anchor":"Type-Properties","title":"Type Properties"},{"identifiers":["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/OptionalChainingExprSyntax\/CustomReflectable-Implementations","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/OptionalChainingExprSyntax\/Equatable-Implementations","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/OptionalChainingExprSyntax\/Equatable-Implementations","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/OptionalChainingExprSyntax\/ExprSyntaxProtocol-Implementations","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/OptionalChainingExprSyntax\/Hashable-Implementations","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/OptionalChainingExprSyntax\/Hashable-Implementations","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/OptionalChainingExprSyntax\/SyntaxProtocol-Implementations"],"generated":true,"anchor":"Default-Implementations","title":"Default Implementations"}],"identifier":{"url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/OptionalChainingExprSyntax","interfaceLanguage":"swift"},"relationshipsSections":[{"identifiers":["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprSyntaxProtocol","doc:\/\/com.swallow.documentation.MacroBuilder\/s28CustomDebugStringConvertibleP","doc:\/\/com.swallow.documentation.MacroBuilder\/s17CustomReflectableP","doc:\/\/com.swallow.documentation.MacroBuilder\/s23CustomStringConvertibleP","doc:\/\/com.swallow.documentation.MacroBuilder\/SQ","doc:\/\/com.swallow.documentation.MacroBuilder\/SH","doc:\/\/com.swallow.documentation.MacroBuilder\/s8SendableP","doc:\/\/com.swallow.documentation.MacroBuilder\/s20TextOutputStreamableP","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxHashable","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxProtocol"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder"]]},"sections":[],"schemaVersion":{"major":0,"patch":0,"minor":3},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"OptionalChainingExprSyntax","kind":"identifier"}]}]},{"content":[{"level":3,"type":"heading","anchor":"Children","text":"Children"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"expression"},{"type":"text","text":": "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprSyntax"}]}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"questionMark"},{"type":"text","text":": "},{"type":"codeVoice","code":"?"}],"type":"paragraph"}]}],"type":"unorderedList"}],"kind":"content"}],"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/OptionalChainingExprSyntax/questionMark":{"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"questionMark"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax"}],"title":"questionMark","kind":"symbol","url":"\/documentation\/macrobuilder\/optionalchainingexprsyntax\/questionmark","type":"topic","abstract":[],"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/OptionalChainingExprSyntax\/questionMark"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprSyntax":{"url":"\/documentation\/macrobuilder\/exprsyntax","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"ExprSyntax","kind":"identifier"}],"type":"topic","title":"ExprSyntax","abstract":[],"kind":"symbol","navigatorTitle":[{"text":"ExprSyntax","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprSyntax"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/OptionalChainingExprSyntax/unexpectedBetweenExpressionAndQuestionMark":{"type":"topic","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"unexpectedBetweenExpressionAndQuestionMark"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax015UnexpectedNodesB0V","text":"UnexpectedNodesSyntax","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"kind":"symbol","url":"\/documentation\/macrobuilder\/optionalchainingexprsyntax\/unexpectedbetweenexpressionandquestionmark","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/OptionalChainingExprSyntax\/unexpectedBetweenExpressionAndQuestionMark","title":"unexpectedBetweenExpressionAndQuestionMark","abstract":[]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/OptionalChainingExprSyntax/init(_:)-24ccc":{"fragments":[{"kind":"identifier","text":"init"},{"text":"?(some ","kind":"text"},{"text":"SyntaxProtocol","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP","kind":"typeIdentifier"},{"text":")","kind":"text"}],"title":"init(_:)","kind":"symbol","url":"\/documentation\/macrobuilder\/optionalchainingexprsyntax\/init(_:)-24ccc","type":"topic","abstract":[{"type":"text","text":"Converts the given specialized node to this type. Returns "},{"type":"codeVoice","code":"nil"},{"text":" if the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"conversion is not possible."}],"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/OptionalChainingExprSyntax\/init(_:)-24ccc"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/OptionalChainingExprSyntax/unexpectedAfterQuestionMark":{"type":"topic","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"unexpectedAfterQuestionMark"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax015UnexpectedNodesB0V","text":"UnexpectedNodesSyntax"},{"text":"?","kind":"text"}],"kind":"symbol","url":"\/documentation\/macrobuilder\/optionalchainingexprsyntax\/unexpectedafterquestionmark","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/OptionalChainingExprSyntax\/unexpectedAfterQuestionMark","title":"unexpectedAfterQuestionMark","abstract":[]},"doc://com.swallow.documentation.MacroBuilder/s17CustomReflectableP":{"type":"unresolvable","title":"Swift.CustomReflectable","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/s17CustomReflectableP"},"doc://com.swallow.documentation.MacroBuilder/s28CustomDebugStringConvertibleP":{"type":"unresolvable","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/s28CustomDebugStringConvertibleP","title":"Swift.CustomDebugStringConvertible"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/OptionalChainingExprSyntax/unexpectedBeforeExpression":{"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"unexpectedBeforeExpression","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax015UnexpectedNodesB0V","text":"UnexpectedNodesSyntax"},{"text":"?","kind":"text"}],"title":"unexpectedBeforeExpression","kind":"symbol","url":"\/documentation\/macrobuilder\/optionalchainingexprsyntax\/unexpectedbeforeexpression","type":"topic","abstract":[],"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/OptionalChainingExprSyntax\/unexpectedBeforeExpression"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/OptionalChainingExprSyntax/structure":{"type":"topic","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"structure"},{"text":": ","kind":"text"},{"text":"SyntaxNodeStructure","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B13NodeStructureO"}],"kind":"symbol","url":"\/documentation\/macrobuilder\/optionalchainingexprsyntax\/structure","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/OptionalChainingExprSyntax\/structure","title":"structure","abstract":[{"type":"text","text":"The statically allowed structure of the syntax node."}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/OptionalChainingExprSyntax/CustomReflectable-Implementations":{"title":"CustomReflectable Implementations","kind":"article","url":"\/documentation\/macrobuilder\/optionalchainingexprsyntax\/customreflectable-implementations","type":"topic","abstract":[],"role":"collectionGroup","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/OptionalChainingExprSyntax\/CustomReflectable-Implementations"},"doc://com.swallow.documentation.MacroBuilder/SH":{"type":"unresolvable","title":"Swift.Hashable","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/SH"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/OptionalChainingExprSyntax/SyntaxProtocol-Implementations":{"abstract":[],"kind":"article","role":"collectionGroup","type":"topic","url":"\/documentation\/macrobuilder\/optionalchainingexprsyntax\/syntaxprotocol-implementations","title":"SyntaxProtocol Implementations","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/OptionalChainingExprSyntax\/SyntaxProtocol-Implementations"},"doc://com.swallow.documentation.MacroBuilder/s23CustomStringConvertibleP":{"title":"Swift.CustomStringConvertible","type":"unresolvable","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/s23CustomStringConvertibleP"},"doc://com.swallow.documentation.MacroBuilder/SQ":{"title":"Swift.Equatable","type":"unresolvable","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/SQ"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/OptionalChainingExprSyntax/expression":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"expression","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax04ExprB0V","text":"ExprSyntax","kind":"typeIdentifier"}],"title":"expression","kind":"symbol","url":"\/documentation\/macrobuilder\/optionalchainingexprsyntax\/expression","type":"topic","abstract":[],"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/OptionalChainingExprSyntax\/expression"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SyntaxProtocol":{"title":"SyntaxProtocol","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxProtocol","navigatorTitle":[{"text":"SyntaxProtocol","kind":"identifier"}],"abstract":[{"text":"Provide common functionality for specialized syntax nodes. Extend this","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"protocol to provide common functionality for all syntax nodes."}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"SyntaxProtocol","kind":"identifier"}],"type":"topic","role":"symbol","url":"\/documentation\/macrobuilder\/syntaxprotocol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/s8SendableP":{"type":"unresolvable","title":"Swift.Sendable","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/s8SendableP"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/OptionalChainingExprSyntax/Hashable-Implementations":{"title":"Hashable Implementations","kind":"article","url":"\/documentation\/macrobuilder\/optionalchainingexprsyntax\/hashable-implementations","type":"topic","abstract":[],"role":"collectionGroup","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/OptionalChainingExprSyntax\/Hashable-Implementations"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/OptionalChainingExprSyntax/init(leadingTrivia:_:expression:_:questionMark:_:trailingTrivia:)":{"type":"topic","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"text":"leadingTrivia","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Trivia","preciseIdentifier":"s:11SwiftSyntax6TriviaV","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax015UnexpectedNodesB0V","text":"UnexpectedNodesSyntax"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"expression"},{"kind":"text","text":": some "},{"preciseIdentifier":"s:11SwiftSyntax04ExprB8ProtocolP","text":"ExprSyntaxProtocol","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"UnexpectedNodesSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax015UnexpectedNodesB0V"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"questionMark"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TokenSyntax","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"text":", ","kind":"text"},{"text":"UnexpectedNodesSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax015UnexpectedNodesB0V"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"trailingTrivia"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Trivia","preciseIdentifier":"s:11SwiftSyntax6TriviaV"},{"text":"?)","kind":"text"}],"kind":"symbol","url":"\/documentation\/macrobuilder\/optionalchainingexprsyntax\/init(leadingtrivia:_:expression:_:questionmark:_:trailingtrivia:)","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/OptionalChainingExprSyntax\/init(leadingTrivia:_:expression:_:questionMark:_:trailingTrivia:)","title":"init(leadingTrivia:_:expression:_:questionMark:_:trailingTrivia:)","abstract":[]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/OptionalChainingExprSyntax/ExprSyntaxProtocol-Implementations":{"title":"ExprSyntaxProtocol Implementations","kind":"article","url":"\/documentation\/macrobuilder\/optionalchainingexprsyntax\/exprsyntaxprotocol-implementations","type":"topic","abstract":[],"role":"collectionGroup","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/OptionalChainingExprSyntax\/ExprSyntaxProtocol-Implementations"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprSyntaxProtocol":{"type":"topic","url":"\/documentation\/macrobuilder\/exprsyntaxprotocol","abstract":[{"text":"Protocol to which all ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprSyntax"},{"type":"text","text":" nodes conform."}],"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprSyntaxProtocol","kind":"symbol","title":"ExprSyntaxProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ExprSyntaxProtocol"}],"navigatorTitle":[{"text":"ExprSyntaxProtocol","kind":"identifier"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SyntaxHashable":{"url":"\/documentation\/macrobuilder\/syntaxhashable","type":"topic","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxHashable","role":"symbol","navigatorTitle":[{"text":"SyntaxHashable","kind":"identifier"}],"title":"SyntaxHashable","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SyntaxHashable","kind":"identifier"}],"abstract":[{"type":"text","text":"Protocol that provides a common Hashable implementation for all syntax nodes"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/OptionalChainingExprSyntax/Equatable-Implementations":{"type":"topic","kind":"article","url":"\/documentation\/macrobuilder\/optionalchainingexprsyntax\/equatable-implementations","role":"collectionGroup","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/OptionalChainingExprSyntax\/Equatable-Implementations","title":"Equatable Implementations","abstract":[]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/OptionalChainingExprSyntax":{"title":"OptionalChainingExprSyntax","type":"topic","abstract":[],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"OptionalChainingExprSyntax","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/OptionalChainingExprSyntax","url":"\/documentation\/macrobuilder\/optionalchainingexprsyntax","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"OptionalChainingExprSyntax","kind":"identifier"}]},"doc://com.swallow.documentation.MacroBuilder/s20TextOutputStreamableP":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/s20TextOutputStreamableP","title":"Swift.TextOutputStreamable","type":"unresolvable"}}}