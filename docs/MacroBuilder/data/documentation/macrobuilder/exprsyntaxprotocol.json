{"identifier":{"url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprSyntaxProtocol","interfaceLanguage":"swift"},"sections":[],"metadata":{"roleHeading":"Protocol","navigatorTitle":[{"kind":"identifier","text":"ExprSyntaxProtocol"}],"externalID":"s:11SwiftSyntax04ExprB8ProtocolP","title":"ExprSyntaxProtocol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ExprSyntaxProtocol","kind":"identifier"}],"symbolKind":"protocol","modules":[{"name":"MacroBuilder"}]},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ExprSyntaxProtocol"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP","text":"SyntaxProtocol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxProtocol"}]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","anchor":"overview","level":2,"text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Extension point to add common methods to all "},{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprSyntax","type":"reference","isActive":true},{"text":" nodes.","type":"text"}]},{"style":"warning","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Do not conform to this protocol yourself."}]}],"name":"Warning","type":"aside"}]}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"text":"Protocol to which all ","type":"text"},{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprSyntax","type":"reference","isActive":true},{"type":"text","text":" nodes conform."}],"variants":[{"paths":["\/documentation\/macrobuilder\/exprsyntaxprotocol"],"traits":[{"interfaceLanguage":"swift"}]}],"topicSections":[{"title":"Instance Properties","identifiers":["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprSyntaxProtocol\/inferredType","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprSyntaxProtocol\/isElementsEmpty"],"anchor":"Instance-Properties","generated":true},{"title":"Instance Methods","identifiers":["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprSyntaxProtocol\/as(_:)-2dez","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprSyntaxProtocol\/as(_:)-9yu1e","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprSyntaxProtocol\/as(_:)-xerh","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprSyntaxProtocol\/cast(_:)-19pk0","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprSyntaxProtocol\/cast(_:)-5juku","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprSyntaxProtocol\/cast(_:)-9upnc","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprSyntaxProtocol\/is(_:)-1c97t","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprSyntaxProtocol\/is(_:)-20b4l","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprSyntaxProtocol\/is(_:)-96iuy"],"anchor":"Instance-Methods","generated":true}],"relationshipsSections":[{"type":"inheritsFrom","kind":"relationships","title":"Inherits From","identifiers":["doc:\/\/com.swallow.documentation.MacroBuilder\/s28CustomDebugStringConvertibleP","doc:\/\/com.swallow.documentation.MacroBuilder\/s17CustomReflectableP","doc:\/\/com.swallow.documentation.MacroBuilder\/s23CustomStringConvertibleP","doc:\/\/com.swallow.documentation.MacroBuilder\/s8SendableP","doc:\/\/com.swallow.documentation.MacroBuilder\/s20TextOutputStreamableP","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxProtocol"]},{"title":"Conforming Types","type":"conformingTypes","identifiers":["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ArrayExprSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ArrowExprSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/AsExprSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/AssignmentExprSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/AwaitExprSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BinaryOperatorExprSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BorrowExprSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ClosureExprSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConsumeExprSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/CopyExprSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DeclReferenceExprSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DictionaryExprSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DiscardAssignmentExprSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/EditorPlaceholderExprSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/FloatLiteralExprSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ForceUnwrapExprSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/FunctionCallExprSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/GenericSpecializationExprSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/IfExprSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/InOutExprSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/InfixOperatorExprSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/IntegerLiteralExprSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/IsExprSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/KeyPathExprSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/MacroExpansionExprSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/MemberAccessExprSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/MissingExprSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/NilLiteralExprSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/OptionalChainingExprSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackElementExprSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PatternExprSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PostfixIfConfigExprSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PostfixOperatorExprSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PrefixOperatorExprSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/RegexLiteralExprSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SequenceExprSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralExprSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralExprSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SubscriptCallExprSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SuperExprSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SwitchExprSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TernaryExprSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TryExprSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TupleExprSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TypeExprSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/UnresolvedAsExprSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/UnresolvedIsExprSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/UnresolvedTernaryExprSyntax"],"kind":"relationships"}],"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ClosureExprSyntax":{"url":"\/documentation\/macrobuilder\/closureexprsyntax","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ClosureExprSyntax"}],"type":"topic","title":"ClosureExprSyntax","abstract":[],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ClosureExprSyntax"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ClosureExprSyntax"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/CopyExprSyntax":{"kind":"symbol","url":"\/documentation\/macrobuilder\/copyexprsyntax","abstract":[],"title":"CopyExprSyntax","type":"topic","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/CopyExprSyntax","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CopyExprSyntax"}],"navigatorTitle":[{"text":"CopyExprSyntax","kind":"identifier"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/TypeExprSyntax":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TypeExprSyntax","navigatorTitle":[{"text":"TypeExprSyntax","kind":"identifier"}],"title":"TypeExprSyntax","url":"\/documentation\/macrobuilder\/typeexprsyntax","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"TypeExprSyntax","kind":"identifier"}],"role":"symbol","abstract":[]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/DictionaryExprSyntax":{"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DictionaryExprSyntax","title":"DictionaryExprSyntax","url":"\/documentation\/macrobuilder\/dictionaryexprsyntax","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"A dictionary literal"}],"navigatorTitle":[{"text":"DictionaryExprSyntax","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DictionaryExprSyntax"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/MacroExpansionExprSyntax":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"MacroExpansionExprSyntax","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"MacroExpansionExprSyntax","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/MacroExpansionExprSyntax","abstract":[{"type":"text","text":"The expansion of a freestanding macro in a position that expects an expression."}],"type":"topic","url":"\/documentation\/macrobuilder\/macroexpansionexprsyntax","role":"symbol","title":"MacroExpansionExprSyntax"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/FunctionCallExprSyntax":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/FunctionCallExprSyntax","kind":"symbol","type":"topic","title":"FunctionCallExprSyntax","url":"\/documentation\/macrobuilder\/functioncallexprsyntax","abstract":[],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"FunctionCallExprSyntax"}],"role":"symbol","navigatorTitle":[{"text":"FunctionCallExprSyntax","kind":"identifier"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/PostfixIfConfigExprSyntax":{"kind":"symbol","role":"symbol","abstract":[],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"PostfixIfConfigExprSyntax"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PostfixIfConfigExprSyntax","type":"topic","title":"PostfixIfConfigExprSyntax","url":"\/documentation\/macrobuilder\/postfixifconfigexprsyntax","navigatorTitle":[{"text":"PostfixIfConfigExprSyntax","kind":"identifier"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SuperExprSyntax":{"url":"\/documentation\/macrobuilder\/superexprsyntax","type":"topic","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SuperExprSyntax","role":"symbol","abstract":[],"navigatorTitle":[{"text":"SuperExprSyntax","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"SuperExprSyntax","kind":"identifier"}],"title":"SuperExprSyntax"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/FloatLiteralExprSyntax":{"url":"\/documentation\/macrobuilder\/floatliteralexprsyntax","navigatorTitle":[{"kind":"identifier","text":"FloatLiteralExprSyntax"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/FloatLiteralExprSyntax","abstract":[],"kind":"symbol","title":"FloatLiteralExprSyntax","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"FloatLiteralExprSyntax","kind":"identifier"}],"role":"symbol","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SwitchExprSyntax":{"abstract":[{"text":"A ","type":"text"},{"code":"switch","type":"codeVoice"},{"type":"text","text":" expression."}],"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SwitchExprSyntax","title":"SwitchExprSyntax","url":"\/documentation\/macrobuilder\/switchexprsyntax","navigatorTitle":[{"text":"SwitchExprSyntax","kind":"identifier"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"SwitchExprSyntax","kind":"identifier"}],"type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/AwaitExprSyntax":{"abstract":[],"url":"\/documentation\/macrobuilder\/awaitexprsyntax","navigatorTitle":[{"text":"AwaitExprSyntax","kind":"identifier"}],"title":"AwaitExprSyntax","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/AwaitExprSyntax","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AwaitExprSyntax"}],"type":"topic","kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/AsExprSyntax":{"url":"\/documentation\/macrobuilder\/asexprsyntax","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/AsExprSyntax","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"The cast of an expressison to a different type."}],"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsExprSyntax"}],"title":"AsExprSyntax","navigatorTitle":[{"kind":"identifier","text":"AsExprSyntax"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/PostfixOperatorExprSyntax":{"type":"topic","url":"\/documentation\/macrobuilder\/postfixoperatorexprsyntax","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PostfixOperatorExprSyntax","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"PostfixOperatorExprSyntax","kind":"identifier"}],"title":"PostfixOperatorExprSyntax","navigatorTitle":[{"kind":"identifier","text":"PostfixOperatorExprSyntax"}],"kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/AssignmentExprSyntax":{"navigatorTitle":[{"kind":"identifier","text":"AssignmentExprSyntax"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/AssignmentExprSyntax","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"AssignmentExprSyntax","kind":"identifier"}],"url":"\/documentation\/macrobuilder\/assignmentexprsyntax","type":"topic","abstract":[],"role":"symbol","title":"AssignmentExprSyntax","kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ArrowExprSyntax":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ArrowExprSyntax"}],"navigatorTitle":[{"text":"ArrowExprSyntax","kind":"identifier"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ArrowExprSyntax","type":"topic","url":"\/documentation\/macrobuilder\/arrowexprsyntax","title":"ArrowExprSyntax","abstract":[{"text":"The arrow when a type is used at a position that syntactically expectes an expression.","type":"text"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralExprSyntax":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SimpleStringLiteralExprSyntax"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralExprSyntax","url":"\/documentation\/macrobuilder\/simplestringliteralexprsyntax","navigatorTitle":[{"kind":"identifier","text":"SimpleStringLiteralExprSyntax"}],"kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"A simple string that can’t contain string interpolation and cannot have raw string delimiters."}],"title":"SimpleStringLiteralExprSyntax","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/UnresolvedAsExprSyntax":{"navigatorTitle":[{"kind":"identifier","text":"UnresolvedAsExprSyntax"}],"kind":"symbol","abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"as"},{"type":"text","text":" keyword without any operands."}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/UnresolvedAsExprSyntax","url":"\/documentation\/macrobuilder\/unresolvedasexprsyntax","title":"UnresolvedAsExprSyntax","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"UnresolvedAsExprSyntax"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/MemberAccessExprSyntax":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"MemberAccessExprSyntax"}],"title":"MemberAccessExprSyntax","abstract":[{"text":"An expression that access a member like a function or a property.","type":"text"}],"kind":"symbol","type":"topic","url":"\/documentation\/macrobuilder\/memberaccessexprsyntax","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/MemberAccessExprSyntax","role":"symbol","navigatorTitle":[{"text":"MemberAccessExprSyntax","kind":"identifier"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprSyntaxProtocol/as(_:)-2dez":{"url":"\/documentation\/macrobuilder\/exprsyntaxprotocol\/as(_:)-2dez","type":"topic","title":"as(_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"`as`"},{"kind":"text","text":"<"},{"text":"S","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"S"},{"text":".Type) -> ","kind":"text"},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":"?"}],"kind":"symbol","abstract":[{"type":"text","text":"Attempts to cast the current syntax node to a given specialized syntax type."}],"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprSyntaxProtocol\/as(_:)-2dez"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprSyntaxProtocol/cast(_:)-9upnc":{"type":"topic","title":"cast(_:)","url":"\/documentation\/macrobuilder\/exprsyntaxprotocol\/cast(_:)-9upnc","abstract":[{"type":"text","text":"Force-casts the current syntax node to a given node type from a base node protocol hierarchy other than"},{"type":"text","text":" "},{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprSyntaxProtocol","type":"reference","isActive":true},{"text":".","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprSyntaxProtocol\/cast(_:)-9upnc","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"cast"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"S"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":".Type) -> "},{"text":"S","kind":"typeIdentifier"}],"kind":"symbol","deprecated":true,"role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/EditorPlaceholderExprSyntax":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/EditorPlaceholderExprSyntax","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"EditorPlaceholderExprSyntax"}],"navigatorTitle":[{"kind":"identifier","text":"EditorPlaceholderExprSyntax"}],"kind":"symbol","title":"EditorPlaceholderExprSyntax","role":"symbol","type":"topic","abstract":[],"url":"\/documentation\/macrobuilder\/editorplaceholderexprsyntax"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprSyntaxProtocol/as(_:)-9yu1e":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprSyntaxProtocol\/as(_:)-9yu1e","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"`as`"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"S"},{"text":">(","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"role":"symbol","deprecated":true,"abstract":[{"type":"text","text":"Attempts to cast the current syntax node to a given node type from the a base node protocol hierarchy other than"},{"type":"text","text":" "},{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprSyntaxProtocol","type":"reference","isActive":true},{"text":".","type":"text"}],"title":"as(_:)","url":"\/documentation\/macrobuilder\/exprsyntaxprotocol\/as(_:)-9yu1e"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/PackExpansionExprSyntax":{"navigatorTitle":[{"kind":"identifier","text":"PackExpansionExprSyntax"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"PackExpansionExprSyntax"}],"url":"\/documentation\/macrobuilder\/packexpansionexprsyntax","type":"topic","abstract":[{"text":"A pack expansion expression spelled with ","type":"text"},{"code":"repeat","type":"codeVoice"},{"type":"text","text":"."}],"role":"symbol","title":"PackExpansionExprSyntax","kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/NilLiteralExprSyntax":{"abstract":[],"url":"\/documentation\/macrobuilder\/nilliteralexprsyntax","title":"NilLiteralExprSyntax","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NilLiteralExprSyntax","kind":"identifier"}],"navigatorTitle":[{"text":"NilLiteralExprSyntax","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/NilLiteralExprSyntax","type":"topic","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StringLiteralExprSyntax":{"kind":"symbol","role":"symbol","abstract":[{"text":"A string literal.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StringLiteralExprSyntax","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralExprSyntax","type":"topic","title":"StringLiteralExprSyntax","url":"\/documentation\/macrobuilder\/stringliteralexprsyntax","navigatorTitle":[{"kind":"identifier","text":"StringLiteralExprSyntax"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ArrayExprSyntax":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ArrayExprSyntax","url":"\/documentation\/macrobuilder\/arrayexprsyntax","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ArrayExprSyntax"}],"role":"symbol","kind":"symbol","title":"ArrayExprSyntax","navigatorTitle":[{"text":"ArrayExprSyntax","kind":"identifier"}],"abstract":[{"type":"text","text":"An array literal."}],"type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/MissingExprSyntax":{"url":"\/documentation\/macrobuilder\/missingexprsyntax","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/MissingExprSyntax","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"MissingExprSyntax","kind":"identifier"}],"title":"MissingExprSyntax","abstract":[{"text":"In case the source code is missing an expression, this node stands in place of the missing expression.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"MissingExprSyntax","kind":"identifier"}],"type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SubscriptCallExprSyntax":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SubscriptCallExprSyntax","url":"\/documentation\/macrobuilder\/subscriptcallexprsyntax","abstract":[],"type":"topic","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SubscriptCallExprSyntax"}],"title":"SubscriptCallExprSyntax","navigatorTitle":[{"text":"SubscriptCallExprSyntax","kind":"identifier"}],"kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/IsExprSyntax":{"kind":"symbol","role":"symbol","abstract":[{"text":"Checks if an expression is of a given type.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"IsExprSyntax","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/IsExprSyntax","type":"topic","title":"IsExprSyntax","url":"\/documentation\/macrobuilder\/isexprsyntax","navigatorTitle":[{"text":"IsExprSyntax","kind":"identifier"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/TryExprSyntax":{"role":"symbol","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"TryExprSyntax","kind":"identifier"}],"abstract":[{"type":"text","text":"An expression prefixed with "},{"type":"codeVoice","code":"try"},{"text":".","type":"text"}],"title":"TryExprSyntax","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TryExprSyntax"}],"url":"\/documentation\/macrobuilder\/tryexprsyntax","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TryExprSyntax"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BorrowExprSyntax":{"type":"topic","title":"BorrowExprSyntax","abstract":[],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"BorrowExprSyntax"}],"navigatorTitle":[{"kind":"identifier","text":"BorrowExprSyntax"}],"url":"\/documentation\/macrobuilder\/borrowexprsyntax","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BorrowExprSyntax"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/DeclReferenceExprSyntax":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DeclReferenceExprSyntax","url":"\/documentation\/macrobuilder\/declreferenceexprsyntax","kind":"symbol","title":"DeclReferenceExprSyntax","type":"topic","abstract":[],"role":"symbol","navigatorTitle":[{"text":"DeclReferenceExprSyntax","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DeclReferenceExprSyntax"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/IfExprSyntax":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"IfExprSyntax"}],"url":"\/documentation\/macrobuilder\/ifexprsyntax","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/IfExprSyntax","abstract":[],"navigatorTitle":[{"text":"IfExprSyntax","kind":"identifier"}],"type":"topic","role":"symbol","kind":"symbol","title":"IfExprSyntax"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SequenceExprSyntax":{"url":"\/documentation\/macrobuilder\/sequenceexprsyntax","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SequenceExprSyntax","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"SequenceExprSyntax","kind":"identifier"}],"title":"SequenceExprSyntax","abstract":[{"type":"text","text":"A flat list of expressions before operator folding using the "},{"type":"codeVoice","code":"SwiftOperators"},{"type":"text","text":" library."}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SequenceExprSyntax","kind":"identifier"}],"type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/PrefixOperatorExprSyntax":{"navigatorTitle":[{"kind":"identifier","text":"PrefixOperatorExprSyntax"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PrefixOperatorExprSyntax","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"PrefixOperatorExprSyntax"}],"url":"\/documentation\/macrobuilder\/prefixoperatorexprsyntax","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"A prefix operator applied to a value."}],"title":"PrefixOperatorExprSyntax","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/DiscardAssignmentExprSyntax":{"abstract":[{"type":"text","text":"A "},{"code":"_","type":"codeVoice"},{"text":" that discards a value inside an assignment.","type":"text"}],"url":"\/documentation\/macrobuilder\/discardassignmentexprsyntax","navigatorTitle":[{"text":"DiscardAssignmentExprSyntax","kind":"identifier"}],"title":"DiscardAssignmentExprSyntax","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DiscardAssignmentExprSyntax","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"DiscardAssignmentExprSyntax"}],"type":"topic","kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/s20TextOutputStreamableP":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/s20TextOutputStreamableP","title":"Swift.TextOutputStreamable","type":"unresolvable"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprSyntaxProtocol":{"type":"topic","url":"\/documentation\/macrobuilder\/exprsyntaxprotocol","abstract":[{"text":"Protocol to which all ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprSyntax"},{"type":"text","text":" nodes conform."}],"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprSyntaxProtocol","kind":"symbol","title":"ExprSyntaxProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ExprSyntaxProtocol"}],"navigatorTitle":[{"text":"ExprSyntaxProtocol","kind":"identifier"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ForceUnwrapExprSyntax":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ForceUnwrapExprSyntax"}],"navigatorTitle":[{"text":"ForceUnwrapExprSyntax","kind":"identifier"}],"title":"ForceUnwrapExprSyntax","url":"\/documentation\/macrobuilder\/forceunwrapexprsyntax","role":"symbol","kind":"symbol","type":"topic","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ForceUnwrapExprSyntax"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/TupleExprSyntax":{"abstract":[],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TupleExprSyntax","title":"TupleExprSyntax","url":"\/documentation\/macrobuilder\/tupleexprsyntax","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TupleExprSyntax"}],"type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"TupleExprSyntax"}]},"doc://com.swallow.documentation.MacroBuilder/s17CustomReflectableP":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/s17CustomReflectableP","title":"Swift.CustomReflectable","type":"unresolvable"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/PatternExprSyntax":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PatternExprSyntax","title":"PatternExprSyntax","abstract":[],"type":"topic","url":"\/documentation\/macrobuilder\/patternexprsyntax","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"PatternExprSyntax"}],"kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"PatternExprSyntax"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprSyntaxProtocol/cast(_:)-19pk0":{"type":"topic","url":"\/documentation\/macrobuilder\/exprsyntaxprotocol\/cast(_:)-19pk0","title":"cast(_:)","abstract":[{"text":"Force-casts the current syntax node to a given specialized syntax type.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprSyntaxProtocol\/cast(_:)-19pk0","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"cast","kind":"identifier"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"kind":"typeIdentifier","text":"S"}],"kind":"symbol","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprSyntaxProtocol/is(_:)-1c97t":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprSyntaxProtocol\/is(_:)-1c97t","kind":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"`is`"},{"kind":"text","text":"<"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"role":"symbol","deprecated":true,"abstract":[{"text":"Checks if the current syntax node can be cast to a given node type from a base node protocol hierarchy other","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"than "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprSyntaxProtocol"},{"type":"text","text":"."}],"title":"is(_:)","url":"\/documentation\/macrobuilder\/exprsyntaxprotocol\/is(_:)-1c97t"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/InOutExprSyntax":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/InOutExprSyntax","url":"\/documentation\/macrobuilder\/inoutexprsyntax","kind":"symbol","abstract":[{"type":"text","text":"An expression prefixed with "},{"code":"&","type":"codeVoice"},{"type":"text","text":" to pass an argument to an "},{"type":"codeVoice","code":"inout"},{"text":" parameter.","type":"text"}],"type":"topic","title":"InOutExprSyntax","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"InOutExprSyntax"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"InOutExprSyntax","kind":"identifier"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprSyntax":{"url":"\/documentation\/macrobuilder\/exprsyntax","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"ExprSyntax","kind":"identifier"}],"type":"topic","title":"ExprSyntax","abstract":[],"kind":"symbol","navigatorTitle":[{"text":"ExprSyntax","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprSyntax"},"doc://com.swallow.documentation.MacroBuilder/s23CustomStringConvertibleP":{"type":"unresolvable","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/s23CustomStringConvertibleP","title":"Swift.CustomStringConvertible"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/RegexLiteralExprSyntax":{"navigatorTitle":[{"kind":"identifier","text":"RegexLiteralExprSyntax"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/RegexLiteralExprSyntax","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RegexLiteralExprSyntax"}],"url":"\/documentation\/macrobuilder\/regexliteralexprsyntax","type":"topic","abstract":[],"role":"symbol","title":"RegexLiteralExprSyntax","kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprSyntaxProtocol/is(_:)-96iuy":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprSyntaxProtocol\/is(_:)-96iuy","kind":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"`is`","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"S"},{"text":".Type) -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"role":"symbol","abstract":[{"type":"text","text":"Checks if the current syntax node can be cast to a given specialized syntax type."}],"title":"is(_:)","url":"\/documentation\/macrobuilder\/exprsyntaxprotocol\/is(_:)-96iuy"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BinaryOperatorExprSyntax":{"url":"\/documentation\/macrobuilder\/binaryoperatorexprsyntax","title":"BinaryOperatorExprSyntax","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BinaryOperatorExprSyntax","type":"topic","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BinaryOperatorExprSyntax","kind":"identifier"}],"abstract":[{"type":"text","text":"An operator like "},{"type":"codeVoice","code":"+"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"-"},{"text":".","type":"text"}],"navigatorTitle":[{"text":"BinaryOperatorExprSyntax","kind":"identifier"}],"kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SyntaxProtocol":{"title":"SyntaxProtocol","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxProtocol","navigatorTitle":[{"text":"SyntaxProtocol","kind":"identifier"}],"abstract":[{"text":"Provide common functionality for specialized syntax nodes. Extend this","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"protocol to provide common functionality for all syntax nodes."}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"SyntaxProtocol","kind":"identifier"}],"type":"topic","role":"symbol","url":"\/documentation\/macrobuilder\/syntaxprotocol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/GenericSpecializationExprSyntax":{"type":"topic","kind":"symbol","navigatorTitle":[{"text":"GenericSpecializationExprSyntax","kind":"identifier"}],"role":"symbol","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/GenericSpecializationExprSyntax","title":"GenericSpecializationExprSyntax","url":"\/documentation\/macrobuilder\/genericspecializationexprsyntax","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"GenericSpecializationExprSyntax"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/UnresolvedTernaryExprSyntax":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/UnresolvedTernaryExprSyntax","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UnresolvedTernaryExprSyntax","kind":"identifier"}],"url":"\/documentation\/macrobuilder\/unresolvedternaryexprsyntax","type":"topic","navigatorTitle":[{"text":"UnresolvedTernaryExprSyntax","kind":"identifier"}],"kind":"symbol","role":"symbol","title":"UnresolvedTernaryExprSyntax","abstract":[{"text":"The middle section of a ternary operator between ","type":"text"},{"code":"?","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":":"},{"type":"text","text":"."}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/TernaryExprSyntax":{"abstract":[{"text":"The ternary operator with operator precedences resolved.","type":"text"}],"role":"symbol","kind":"symbol","url":"\/documentation\/macrobuilder\/ternaryexprsyntax","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TernaryExprSyntax","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TernaryExprSyntax","type":"topic","navigatorTitle":[{"text":"TernaryExprSyntax","kind":"identifier"}],"title":"TernaryExprSyntax"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/UnresolvedIsExprSyntax":{"url":"\/documentation\/macrobuilder\/unresolvedisexprsyntax","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"UnresolvedIsExprSyntax","kind":"identifier"}],"title":"UnresolvedIsExprSyntax","role":"symbol","navigatorTitle":[{"text":"UnresolvedIsExprSyntax","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"is"},{"text":" keyword without any operands.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/UnresolvedIsExprSyntax"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprSyntaxProtocol/as(_:)-xerh":{"deprecated":true,"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"`as`","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax04ExprB0V","text":"ExprSyntax","kind":"typeIdentifier"},{"kind":"text","text":".Type) -> "},{"preciseIdentifier":"s:11SwiftSyntax04ExprB0V","text":"ExprSyntax","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"kind":"symbol","url":"\/documentation\/macrobuilder\/exprsyntaxprotocol\/as(_:)-xerh","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprSyntaxProtocol\/as(_:)-xerh","role":"symbol","type":"topic","abstract":[{"type":"text","text":"Attempts to upcast the current syntax node to its base node type ("},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprSyntax"},{"type":"text","text":")."}],"title":"as(_:)"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprSyntaxProtocol/inferredType":{"type":"topic","url":"\/documentation\/macrobuilder\/exprsyntaxprotocol\/inferredtype","title":"inferredType","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprSyntaxProtocol\/inferredType","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"inferredType","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax04TypeB0V","text":"TypeSyntax"},{"kind":"text","text":"?"}],"kind":"symbol","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprSyntaxProtocol/isElementsEmpty":{"type":"topic","kind":"symbol","abstract":[],"role":"symbol","title":"isElementsEmpty","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"isElementsEmpty","kind":"identifier"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"url":"\/documentation\/macrobuilder\/exprsyntaxprotocol\/iselementsempty","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprSyntaxProtocol\/isElementsEmpty"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/KeyPathExprSyntax":{"url":"\/documentation\/macrobuilder\/keypathexprsyntax","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"KeyPathExprSyntax","kind":"identifier"}],"title":"KeyPathExprSyntax","type":"topic","abstract":[{"type":"text","text":"A key path."}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/KeyPathExprSyntax","role":"symbol","navigatorTitle":[{"text":"KeyPathExprSyntax","kind":"identifier"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConsumeExprSyntax":{"abstract":[],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConsumeExprSyntax","type":"topic","role":"symbol","kind":"symbol","title":"ConsumeExprSyntax","url":"\/documentation\/macrobuilder\/consumeexprsyntax","navigatorTitle":[{"kind":"identifier","text":"ConsumeExprSyntax"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"ConsumeExprSyntax","kind":"identifier"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/OptionalChainingExprSyntax":{"title":"OptionalChainingExprSyntax","type":"topic","abstract":[],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"OptionalChainingExprSyntax","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/OptionalChainingExprSyntax","url":"\/documentation\/macrobuilder\/optionalchainingexprsyntax","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"OptionalChainingExprSyntax","kind":"identifier"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BooleanLiteralExprSyntax":{"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"BooleanLiteralExprSyntax","kind":"identifier"}],"title":"BooleanLiteralExprSyntax","abstract":[],"navigatorTitle":[{"text":"BooleanLiteralExprSyntax","kind":"identifier"}],"url":"\/documentation\/macrobuilder\/booleanliteralexprsyntax","type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/PackElementExprSyntax":{"title":"PackElementExprSyntax","type":"topic","kind":"symbol","url":"\/documentation\/macrobuilder\/packelementexprsyntax","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackElementExprSyntax","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"PackElementExprSyntax","kind":"identifier"}],"navigatorTitle":[{"text":"PackElementExprSyntax","kind":"identifier"}],"role":"symbol","abstract":[{"text":"A pack element expression spelled with ","type":"text"},{"code":"each","type":"codeVoice"},{"type":"text","text":"."}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/InfixOperatorExprSyntax":{"abstract":[{"text":"An infix operator call like ","type":"text"},{"type":"codeVoice","code":"1 + 2"},{"text":".","type":"text"}],"url":"\/documentation\/macrobuilder\/infixoperatorexprsyntax","navigatorTitle":[{"text":"InfixOperatorExprSyntax","kind":"identifier"}],"title":"InfixOperatorExprSyntax","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/InfixOperatorExprSyntax","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"InfixOperatorExprSyntax"}],"type":"topic","kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/s28CustomDebugStringConvertibleP":{"title":"Swift.CustomDebugStringConvertible","type":"unresolvable","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/s28CustomDebugStringConvertibleP"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/IntegerLiteralExprSyntax":{"kind":"symbol","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"IntegerLiteralExprSyntax"}],"navigatorTitle":[{"text":"IntegerLiteralExprSyntax","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/IntegerLiteralExprSyntax","url":"\/documentation\/macrobuilder\/integerliteralexprsyntax","title":"IntegerLiteralExprSyntax","abstract":[]},"doc://com.swallow.documentation.MacroBuilder/s8SendableP":{"title":"Swift.Sendable","type":"unresolvable","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/s8SendableP"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprSyntaxProtocol/is(_:)-20b4l":{"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprSyntaxProtocol\/is(_:)-20b4l","type":"topic","title":"is(_:)","abstract":[{"text":"Checks if the current syntax node can be upcast to its base node type (","type":"text"},{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprSyntax","type":"reference","isActive":true},{"text":").","type":"text"}],"deprecated":true,"url":"\/documentation\/macrobuilder\/exprsyntaxprotocol\/is(_:)-20b4l","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"`is`"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax04ExprB0V","text":"ExprSyntax","kind":"typeIdentifier"},{"kind":"text","text":".Type) -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprSyntaxProtocol/cast(_:)-5juku":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprSyntaxProtocol\/cast(_:)-5juku","kind":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cast","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax04ExprB0V","text":"ExprSyntax","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax04ExprB0V","text":"ExprSyntax","kind":"typeIdentifier"}],"role":"symbol","deprecated":true,"abstract":[{"type":"text","text":"Force-upcast the current syntax node to its base node type ("},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprSyntax"},{"type":"text","text":")."}],"title":"cast(_:)","url":"\/documentation\/macrobuilder\/exprsyntaxprotocol\/cast(_:)-5juku"}}}