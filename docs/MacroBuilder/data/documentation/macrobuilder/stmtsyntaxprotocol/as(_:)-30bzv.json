{"deprecationSummary":[{"inlineContent":[{"text":"Type argument should be part of the 'StmtSyntaxProtocol' hierarchy","type":"text"}],"type":"paragraph"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"`as`"},{"kind":"text","text":"<"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"syntaxType"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"S"},{"text":".Type) -> ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"kind":"text","text":"? "},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"S"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxProtocol","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP","text":"SyntaxProtocol","kind":"typeIdentifier"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"content","content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"An instance of the specialized type, or "},{"code":"nil","type":"codeVoice"},{"type":"text","text":" if the cast fails."}]}]},{"kind":"content","content":[{"text":"Discussion","type":"heading","anchor":"discussion","level":2},{"style":"note","name":"Note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"In most cases, this is casting a "},{"isActive":true,"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StmtSyntaxProtocol","type":"reference"},{"text":" to a node that is not a","type":"text"},{"text":" ","type":"text"},{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StmtSyntaxProtocol","isActive":true,"type":"reference"},{"text":", which will always fail. If the ","type":"text"},{"code":"syntaxType","type":"codeVoice"},{"type":"text","text":" argument is a generic type,"},{"type":"text","text":" "},{"text":"constrain it to ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StmtSyntaxProtocol","type":"reference"},{"text":" instead of ","type":"text"},{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxProtocol","type":"reference","isActive":true},{"text":".","type":"text"}]}],"type":"aside"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StmtSyntaxProtocol\/as(_:)-30bzv"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StmtSyntaxProtocol"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"type":"text","text":"Attempts to cast the current syntax node to a given node type from the a base node protocol hierarchy other than"},{"text":" ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StmtSyntaxProtocol"},{"text":".","type":"text"}],"sections":[],"metadata":{"symbolKind":"method","platforms":[],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"`as`","kind":"identifier"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"S"},{"text":".Type) -> ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"roleHeading":"Instance Method","modules":[{"relatedModules":["SwiftSyntax"],"name":"MacroBuilder"}],"title":"as(_:)","externalID":"s:11SwiftSyntax04StmtB8ProtocolPAAE2asyqd__Sgqd__mAA0bD0Rd__lF","extendedModule":"SwiftSyntax","role":"symbol"},"variants":[{"paths":["\/documentation\/macrobuilder\/stmtsyntaxprotocol\/as(_:)-30bzv"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StmtSyntax":{"navigatorTitle":[{"text":"StmtSyntax","kind":"identifier"}],"title":"StmtSyntax","role":"symbol","abstract":[],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StmtSyntax","url":"\/documentation\/macrobuilder\/stmtsyntax","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"StmtSyntax"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StmtSyntaxProtocol/as(_:)-30bzv":{"abstract":[{"type":"text","text":"Attempts to cast the current syntax node to a given node type from the a base node protocol hierarchy other than"},{"type":"text","text":" "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StmtSyntaxProtocol"},{"text":".","type":"text"}],"url":"\/documentation\/macrobuilder\/stmtsyntaxprotocol\/as(_:)-30bzv","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"`as`","kind":"identifier"},{"kind":"text","text":"<"},{"text":"S","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"S","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"kind":"typeIdentifier","text":"S"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StmtSyntaxProtocol\/as(_:)-30bzv","type":"topic","deprecated":true,"kind":"symbol","title":"as(_:)","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StmtSyntaxProtocol":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StmtSyntaxProtocol","kind":"identifier"}],"abstract":[{"type":"text","text":"Protocol to which all "},{"type":"reference","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StmtSyntax","isActive":true},{"type":"text","text":" nodes conform."}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"StmtSyntaxProtocol"}],"url":"\/documentation\/macrobuilder\/stmtsyntaxprotocol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StmtSyntaxProtocol","title":"StmtSyntaxProtocol","type":"topic","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SyntaxProtocol":{"title":"SyntaxProtocol","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxProtocol","navigatorTitle":[{"text":"SyntaxProtocol","kind":"identifier"}],"abstract":[{"text":"Provide common functionality for specialized syntax nodes. Extend this","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"protocol to provide common functionality for all syntax nodes."}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"SyntaxProtocol","kind":"identifier"}],"type":"topic","role":"symbol","url":"\/documentation\/macrobuilder\/syntaxprotocol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"}}}