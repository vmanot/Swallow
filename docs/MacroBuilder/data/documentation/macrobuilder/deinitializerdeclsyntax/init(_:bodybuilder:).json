{"sections":[],"metadata":{"roleHeading":"Initializer","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"preciseIdentifier":"s:18SwiftSyntaxBuilder0B10NodeStringV","text":"SyntaxNodeString","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"bodyBuilder"},{"text":": () ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax017CodeBlockItemListB0V","text":"CodeBlockItemListSyntax"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"modules":[{"name":"MacroBuilder","relatedModules":["SwiftSyntax"]}],"role":"symbol","extendedModule":"SwiftSyntax","title":"init(_:bodyBuilder:)","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"DeclSyntaxProtocol"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"externalID":"s:11SwiftSyntax021WithOptionalCodeBlockB0P0aB7BuilderAA04DeclB8ProtocolRzrlE_04bodyG0xAD0B10NodeStringV_AA0ef8ItemListB0VyKXEtKcfc::SYNTHESIZED::s:11SwiftSyntax017DeinitializerDeclB0V","symbolKind":"init"},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DeinitializerDeclSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DeinitializerDeclSyntax\/WithOptionalCodeBlockSyntax-Implementations"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/macrobuilder\/deinitializerdeclsyntax\/init(_:bodybuilder:)"]}],"abstract":[{"type":"text","text":"Constructs a syntax node where "},{"code":"header","type":"codeVoice"},{"type":"text","text":" builds the text of the node before the body in braces and "},{"type":"codeVoice","code":"bodyBuilder"},{"type":"text","text":" is used to build the node’s body."}],"identifier":{"url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DeinitializerDeclSyntax\/init(_:bodyBuilder:)","interfaceLanguage":"swift"},"kind":"symbol","schemaVersion":{"major":0,"patch":0,"minor":3},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"init"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"header"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:18SwiftSyntaxBuilder0B10NodeStringV","text":"SyntaxNodeString","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxNodeString","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"@","kind":"attribute"},{"text":"CodeBlockItemListBuilder","kind":"attribute","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/CodeBlockItemListBuilder","preciseIdentifier":"s:18SwiftSyntaxBuilder017CodeBlockItemListC0V"},{"text":" ","kind":"text"},{"text":"bodyBuilder","kind":"externalParam"},{"kind":"text","text":": () "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:11SwiftSyntax017CodeBlockItemListB0V","text":"CodeBlockItemListSyntax","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/CodeBlockItemListSyntax","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"level":2,"text":"Discussion","type":"heading","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"For example, you can construct"}]},{"code":["func addOne(_ base: Int) -> Int {","  return base + 1","}"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"using this call","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["try FunctionDeclSyntax(\"func addOne(_ base: Int) -> Int\") {","  ExprSyntax(\"return base + 1\")","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Throws an error if "},{"type":"codeVoice","code":"header"},{"type":"text","text":" defines a different node type than the type the initializer is called on. E.g. if calling "},{"code":"try FunctionDeclSyntax(\"init\") {}","type":"codeVoice"}]}],"kind":"content"}],"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/DeinitializerDeclSyntax":{"navigatorTitle":[{"text":"DeinitializerDeclSyntax","kind":"identifier"}],"url":"\/documentation\/macrobuilder\/deinitializerdeclsyntax","kind":"symbol","type":"topic","role":"symbol","title":"DeinitializerDeclSyntax","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"DeinitializerDeclSyntax"}],"abstract":[{"type":"text","text":"A "},{"code":"deint","type":"codeVoice"},{"type":"text","text":" declaration"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DeinitializerDeclSyntax"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/DeinitializerDeclSyntax/WithOptionalCodeBlockSyntax-Implementations":{"kind":"article","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DeinitializerDeclSyntax\/WithOptionalCodeBlockSyntax-Implementations","role":"collectionGroup","abstract":[],"title":"WithOptionalCodeBlockSyntax Implementations","url":"\/documentation\/macrobuilder\/deinitializerdeclsyntax\/withoptionalcodeblocksyntax-implementations","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/CodeBlockItemListBuilder":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"CodeBlockItemListBuilder","kind":"identifier"}],"url":"\/documentation\/macrobuilder\/codeblockitemlistbuilder","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/CodeBlockItemListBuilder","navigatorTitle":[{"text":"CodeBlockItemListBuilder","kind":"identifier"}],"type":"topic","role":"symbol","kind":"symbol","title":"CodeBlockItemListBuilder"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/DeinitializerDeclSyntax/init(_:bodyBuilder:)":{"title":"init(_:bodyBuilder:)","url":"\/documentation\/macrobuilder\/deinitializerdeclsyntax\/init(_:bodybuilder:)","kind":"symbol","type":"topic","role":"symbol","abstract":[{"type":"text","text":"Constructs a syntax node where "},{"code":"header","type":"codeVoice"},{"text":" builds the text of the node before the body in braces and ","type":"text"},{"code":"bodyBuilder","type":"codeVoice"},{"type":"text","text":" is used to build the node’s body."}],"fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"text":"SyntaxNodeString","kind":"typeIdentifier","preciseIdentifier":"s:18SwiftSyntaxBuilder0B10NodeStringV"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"bodyBuilder"},{"kind":"text","text":": () "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"CodeBlockItemListSyntax","preciseIdentifier":"s:11SwiftSyntax017CodeBlockItemListB0V"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"conformance":{"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"DeclSyntaxProtocol"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DeinitializerDeclSyntax\/init(_:bodyBuilder:)"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SyntaxNodeString":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxNodeString","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"SyntaxNodeString","kind":"identifier"}],"navigatorTitle":[{"text":"SyntaxNodeString","kind":"identifier"}],"kind":"symbol","title":"SyntaxNodeString","role":"symbol","type":"topic","abstract":[{"type":"text","text":"A type that is expressible by string interpolation the same way that syntax"},{"type":"text","text":" "},{"type":"text","text":"nodes are, but instead of producing a node, it stores the string interpolation"},{"text":" ","type":"text"},{"type":"text","text":"text."}],"url":"\/documentation\/macrobuilder\/syntaxnodestring"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/CodeBlockItemListSyntax":{"navigatorTitle":[{"text":"CodeBlockItemListSyntax","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/CodeBlockItemListSyntax","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CodeBlockItemListSyntax"}],"url":"\/documentation\/macrobuilder\/codeblockitemlistsyntax","type":"topic","abstract":[],"role":"symbol","title":"CodeBlockItemListSyntax","kind":"symbol"}}}