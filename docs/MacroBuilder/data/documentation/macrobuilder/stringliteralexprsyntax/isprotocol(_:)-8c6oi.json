{"kind":"symbol","sections":[],"metadata":{"roleHeading":"Instance Method","title":"isProtocol(_:)","extendedModule":"SwiftSyntax","modules":[{"name":"MacroBuilder","relatedModules":["SwiftSyntax"]}],"symbolKind":"method","externalID":"s:11SwiftSyntax0B8ProtocolPAAE02isC0ySbAA021WithGenericParametersB0_pmF::SYNTHESIZED::s:11SwiftSyntax017StringLiteralExprB0V","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"((any "},{"kind":"typeIdentifier","text":"WithGenericParametersSyntax","preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P"},{"text":").Type) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}]},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralExprSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralExprSyntax\/SyntaxProtocol-Implementations"]]},"abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithGenericParametersSyntax"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"("},{"text":"_","kind":"externalParam"},{"text":": (any ","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/WithGenericParametersSyntax","preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P","text":"WithGenericParametersSyntax"},{"text":").Type) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"languages":["swift"]}],"kind":"declarations"}],"variants":[{"paths":["\/documentation\/macrobuilder\/stringliteralexprsyntax\/isprotocol(_:)-8c6oi"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralExprSyntax\/isProtocol(_:)-8c6oi","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StringLiteralExprSyntax/isProtocol(_:)-8c6oi":{"title":"isProtocol(_:)","type":"topic","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralExprSyntax\/isProtocol(_:)-8c6oi","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithGenericParametersSyntax"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"role":"symbol","url":"\/documentation\/macrobuilder\/stringliteralexprsyntax\/isprotocol(_:)-8c6oi","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"((any "},{"text":"WithGenericParametersSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P"},{"text":").Type) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StringLiteralExprSyntax/SyntaxProtocol-Implementations":{"abstract":[],"title":"SyntaxProtocol Implementations","role":"collectionGroup","type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralExprSyntax\/SyntaxProtocol-Implementations","kind":"article","url":"\/documentation\/macrobuilder\/stringliteralexprsyntax\/syntaxprotocol-implementations"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StringLiteralExprSyntax":{"kind":"symbol","role":"symbol","abstract":[{"text":"A string literal.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StringLiteralExprSyntax","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralExprSyntax","type":"topic","title":"StringLiteralExprSyntax","url":"\/documentation\/macrobuilder\/stringliteralexprsyntax","navigatorTitle":[{"kind":"identifier","text":"StringLiteralExprSyntax"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/WithGenericParametersSyntax":{"url":"\/documentation\/macrobuilder\/withgenericparameterssyntax","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/WithGenericParametersSyntax","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"WithGenericParametersSyntax","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"Syntax nodes that have generic parameters."}],"kind":"symbol","role":"symbol","title":"WithGenericParametersSyntax","navigatorTitle":[{"text":"WithGenericParametersSyntax","kind":"identifier"}]}}}