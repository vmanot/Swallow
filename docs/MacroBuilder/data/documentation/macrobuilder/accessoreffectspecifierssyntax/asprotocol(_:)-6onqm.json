{"abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithOptionalCodeBlockSyntax"},{"text":". Otherwise return ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/macrobuilder\/accessoreffectspecifierssyntax\/asprotocol(_:)-6onqm"]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/AccessorEffectSpecifiersSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/AccessorEffectSpecifiersSyntax\/SyntaxProtocol-Implementations"]]},"sections":[],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":": (any "},{"text":"WithOptionalCodeBlockSyntax","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/WithOptionalCodeBlockSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P"},{"text":").Type) -> (any ","kind":"text"},{"text":"WithOptionalCodeBlockSyntax","preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/WithOptionalCodeBlockSyntax"},{"kind":"text","text":")?"}]}],"kind":"declarations"}],"metadata":{"extendedModule":"SwiftSyntax","role":"symbol","modules":[{"name":"MacroBuilder","relatedModules":["SwiftSyntax"]}],"title":"asProtocol(_:)","roleHeading":"Instance Method","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"((any "},{"text":"WithOptionalCodeBlockSyntax","preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P","kind":"typeIdentifier"},{"text":").Type) -> (any ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P","text":"WithOptionalCodeBlockSyntax"},{"text":")?","kind":"text"}],"externalID":"s:11SwiftSyntax0B8ProtocolPAAE02asC0yAA021WithOptionalCodeBlockB0_pSgAaE_pmF::SYNTHESIZED::s:11SwiftSyntax024AccessorEffectSpecifiersB0V"},"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/AccessorEffectSpecifiersSyntax\/asProtocol(_:)-6onqm"},"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/AccessorEffectSpecifiersSyntax/SyntaxProtocol-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/AccessorEffectSpecifiersSyntax\/SyntaxProtocol-Implementations","type":"topic","kind":"article","title":"SyntaxProtocol Implementations","abstract":[],"url":"\/documentation\/macrobuilder\/accessoreffectspecifierssyntax\/syntaxprotocol-implementations","role":"collectionGroup"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/AccessorEffectSpecifiersSyntax":{"navigatorTitle":[{"text":"AccessorEffectSpecifiersSyntax","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/AccessorEffectSpecifiersSyntax","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AccessorEffectSpecifiersSyntax"}],"url":"\/documentation\/macrobuilder\/accessoreffectspecifierssyntax","type":"topic","kind":"symbol","abstract":[],"title":"AccessorEffectSpecifiersSyntax","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/WithOptionalCodeBlockSyntax":{"abstract":[],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"WithOptionalCodeBlockSyntax","kind":"identifier"}],"navigatorTitle":[{"text":"WithOptionalCodeBlockSyntax","kind":"identifier"}],"role":"symbol","url":"\/documentation\/macrobuilder\/withoptionalcodeblocksyntax","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/WithOptionalCodeBlockSyntax","type":"topic","title":"WithOptionalCodeBlockSyntax","kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/AccessorEffectSpecifiersSyntax/asProtocol(_:)-6onqm":{"url":"\/documentation\/macrobuilder\/accessoreffectspecifierssyntax\/asprotocol(_:)-6onqm","role":"symbol","type":"topic","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"code":"WithOptionalCodeBlockSyntax","type":"codeVoice"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"title":"asProtocol(_:)","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/AccessorEffectSpecifiersSyntax\/asProtocol(_:)-6onqm","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"((any "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P","text":"WithOptionalCodeBlockSyntax"},{"text":").Type) -> (any ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P","kind":"typeIdentifier","text":"WithOptionalCodeBlockSyntax"},{"kind":"text","text":")?"}]}}}