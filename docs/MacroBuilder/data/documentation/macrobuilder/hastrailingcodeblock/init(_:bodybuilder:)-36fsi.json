{"identifier":{"url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/HasTrailingCodeBlock\/init(_:bodyBuilder:)-36fsi","interfaceLanguage":"swift"},"kind":"symbol","schemaVersion":{"minor":3,"patch":0,"major":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/macrobuilder\/hastrailingcodeblock\/init(_:bodybuilder:)-36fsi"]}],"sections":[],"metadata":{"title":"init(_:bodyBuilder:)","modules":[{"name":"MacroBuilder","relatedModules":["SwiftSyntaxBuilder"]}],"role":"symbol","externalID":"s:18SwiftSyntaxBuilder20HasTrailingCodeBlockPAA0aB004StmtB8ProtocolRzrlE_04bodyC0xAA0B10NodeStringV_AD0fg8ItemListB0VyKXEtKcfc","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"SyntaxNodeString","preciseIdentifier":"s:18SwiftSyntaxBuilder0B10NodeStringV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"bodyBuilder"},{"kind":"text","text":": () "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax017CodeBlockItemListB0V","text":"CodeBlockItemListSyntax"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"symbolKind":"init","extendedModule":"SwiftSyntaxBuilder","roleHeading":"Initializer","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"StmtSyntaxProtocol"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]}},"abstract":[{"text":"Constructs a syntax node where ","type":"text"},{"type":"codeVoice","code":"header"},{"type":"text","text":" builds the text of the node before the body in braces and "},{"code":"bodyBuilder","type":"codeVoice"},{"type":"text","text":" is used to build the node’s body."}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/HasTrailingCodeBlock","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/HasTrailingCodeBlock\/init(_:bodyBuilder:)-5x2a7"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"header","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxNodeString","text":"SyntaxNodeString","preciseIdentifier":"s:18SwiftSyntaxBuilder0B10NodeStringV"},{"text":", ","kind":"text"},{"kind":"attribute","text":"@"},{"kind":"attribute","text":"CodeBlockItemListBuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/CodeBlockItemListBuilder","preciseIdentifier":"s:18SwiftSyntaxBuilder017CodeBlockItemListC0V"},{"text":" ","kind":"text"},{"kind":"externalParam","text":"bodyBuilder"},{"kind":"text","text":": () "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/CodeBlockItemListSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax017CodeBlockItemListB0V","text":"CodeBlockItemListSyntax"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"}]}]},{"content":[{"level":2,"text":"Discussion","anchor":"discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"For example, you can construct"}]},{"syntax":"swift","code":["while x < 5 {","  x += 1","}"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"using this call","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["try WhileStmtSyntax(\"while x < 5\") {","  ExprSyntax(\"x += 1\")","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Throws an error if "},{"type":"codeVoice","code":"header"},{"text":" defines a different node type than the type the initializer is called on. E.g. if calling ","type":"text"},{"code":"try IfStmtSyntax(\"while x < 5\") {}","type":"codeVoice"}]}],"kind":"content"}],"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/HasTrailingCodeBlock/init(_:bodyBuilder:)-36fsi":{"role":"symbol","url":"\/documentation\/macrobuilder\/hastrailingcodeblock\/init(_:bodybuilder:)-36fsi","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/HasTrailingCodeBlock\/init(_:bodyBuilder:)-36fsi","abstract":[{"type":"text","text":"Constructs a syntax node where "},{"code":"header","type":"codeVoice"},{"text":" builds the text of the node before the body in braces and ","type":"text"},{"code":"bodyBuilder","type":"codeVoice"},{"type":"text","text":" is used to build the node’s body."}],"type":"topic","title":"init(_:bodyBuilder:)","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Self","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"StmtSyntaxProtocol"},{"type":"text","text":"."}]},"kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"SyntaxNodeString","kind":"typeIdentifier","preciseIdentifier":"s:18SwiftSyntaxBuilder0B10NodeStringV"},{"text":", ","kind":"text"},{"text":"bodyBuilder","kind":"externalParam"},{"text":": () ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"CodeBlockItemListSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax017CodeBlockItemListB0V"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/HasTrailingCodeBlock":{"url":"\/documentation\/macrobuilder\/hastrailingcodeblock","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/HasTrailingCodeBlock","type":"topic","abstract":[],"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"HasTrailingCodeBlock"}],"kind":"symbol","title":"HasTrailingCodeBlock","navigatorTitle":[{"text":"HasTrailingCodeBlock","kind":"identifier"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/CodeBlockItemListSyntax":{"navigatorTitle":[{"text":"CodeBlockItemListSyntax","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/CodeBlockItemListSyntax","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CodeBlockItemListSyntax"}],"url":"\/documentation\/macrobuilder\/codeblockitemlistsyntax","type":"topic","abstract":[],"role":"symbol","title":"CodeBlockItemListSyntax","kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/HasTrailingCodeBlock/init(_:bodyBuilder:)-5x2a7":{"abstract":[{"text":"Constructs a syntax node where ","type":"text"},{"code":"header","type":"codeVoice"},{"type":"text","text":" builds the text of the node before the body in braces and "},{"type":"codeVoice","code":"bodyBuilder"},{"type":"text","text":" is used to build the node’s body."}],"title":"init(_:bodyBuilder:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/HasTrailingCodeBlock\/init(_:bodyBuilder:)-5x2a7","kind":"symbol","url":"\/documentation\/macrobuilder\/hastrailingcodeblock\/init(_:bodybuilder:)-5x2a7","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"text":"SyntaxNodeString","kind":"typeIdentifier","preciseIdentifier":"s:18SwiftSyntaxBuilder0B10NodeStringV"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"bodyBuilder"},{"text":": () ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"CodeBlockItemListSyntax","preciseIdentifier":"s:11SwiftSyntax017CodeBlockItemListB0V","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"}],"defaultImplementations":1,"type":"topic","role":"symbol","required":true},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SyntaxNodeString":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxNodeString","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"SyntaxNodeString","kind":"identifier"}],"navigatorTitle":[{"text":"SyntaxNodeString","kind":"identifier"}],"kind":"symbol","title":"SyntaxNodeString","role":"symbol","type":"topic","abstract":[{"type":"text","text":"A type that is expressible by string interpolation the same way that syntax"},{"type":"text","text":" "},{"type":"text","text":"nodes are, but instead of producing a node, it stores the string interpolation"},{"text":" ","type":"text"},{"type":"text","text":"text."}],"url":"\/documentation\/macrobuilder\/syntaxnodestring"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/CodeBlockItemListBuilder":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"CodeBlockItemListBuilder","kind":"identifier"}],"url":"\/documentation\/macrobuilder\/codeblockitemlistbuilder","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/CodeBlockItemListBuilder","navigatorTitle":[{"text":"CodeBlockItemListBuilder","kind":"identifier"}],"type":"topic","role":"symbol","kind":"symbol","title":"CodeBlockItemListBuilder"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"}}}