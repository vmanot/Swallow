{"abstract":[{"text":"Checks if the current syntax node can be cast to a given specialized syntax type.","type":"text"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SpecializeTargetFunctionArgumentSyntax\/is(_:)-7vjcc"},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SpecializeTargetFunctionArgumentSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SpecializeTargetFunctionArgumentSyntax\/SyntaxProtocol-Implementations"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/macrobuilder\/specializetargetfunctionargumentsyntax\/is(_:)-7vjcc"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"`is`"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"text":"syntaxType","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"S"},{"text":".Type) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":" ","kind":"text"},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"text":"S","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxProtocol","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP","kind":"typeIdentifier","text":"SyntaxProtocol"}],"platforms":["macOS"],"languages":["swift"]}]},{"content":[{"type":"heading","text":"Return Value","anchor":"return-value","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"code":"true","type":"codeVoice"},{"type":"text","text":" if the node can be cast, "},{"code":"false","type":"codeVoice"},{"text":" otherwise.","type":"text"}]}],"kind":"content"}],"kind":"symbol","metadata":{"modules":[{"name":"MacroBuilder","relatedModules":["SwiftSyntax"]}],"roleHeading":"Instance Method","role":"symbol","symbolKind":"method","externalID":"s:11SwiftSyntax0B8ProtocolPAAE2isySbqd__mAaBRd__lF::SYNTHESIZED::s:11SwiftSyntax032SpecializeTargetFunctionArgumentB0V","extendedModule":"SwiftSyntax","title":"is(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"`is`","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"text":"S","kind":"typeIdentifier"},{"kind":"text","text":".Type) -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}]},"sections":[],"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SpecializeTargetFunctionArgumentSyntax":{"navigatorTitle":[{"kind":"identifier","text":"SpecializeTargetFunctionArgumentSyntax"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SpecializeTargetFunctionArgumentSyntax","url":"\/documentation\/macrobuilder\/specializetargetfunctionargumentsyntax","role":"symbol","abstract":[{"text":"A labeled argument for the ","type":"text"},{"type":"codeVoice","code":"@_specialize"},{"type":"text","text":" attribute with a function decl value like "},{"type":"codeVoice","code":"target: myFunc(_:)"}],"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SpecializeTargetFunctionArgumentSyntax","kind":"identifier"}],"title":"SpecializeTargetFunctionArgumentSyntax"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SpecializeTargetFunctionArgumentSyntax/is(_:)-7vjcc":{"abstract":[{"type":"text","text":"Checks if the current syntax node can be cast to a given specialized syntax type."}],"url":"\/documentation\/macrobuilder\/specializetargetfunctionargumentsyntax\/is(_:)-7vjcc","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SpecializeTargetFunctionArgumentSyntax\/is(_:)-7vjcc","title":"is(_:)","role":"symbol","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"`is`"},{"kind":"text","text":"<"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SyntaxProtocol":{"title":"SyntaxProtocol","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxProtocol","navigatorTitle":[{"text":"SyntaxProtocol","kind":"identifier"}],"abstract":[{"text":"Provide common functionality for specialized syntax nodes. Extend this","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"protocol to provide common functionality for all syntax nodes."}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"SyntaxProtocol","kind":"identifier"}],"type":"topic","role":"symbol","url":"\/documentation\/macrobuilder\/syntaxprotocol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SpecializeTargetFunctionArgumentSyntax/SyntaxProtocol-Implementations":{"title":"SyntaxProtocol Implementations","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SpecializeTargetFunctionArgumentSyntax\/SyntaxProtocol-Implementations","kind":"article","abstract":[],"type":"topic","url":"\/documentation\/macrobuilder\/specializetargetfunctionargumentsyntax\/syntaxprotocol-implementations","role":"collectionGroup"}}}