{"identifier":{"url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/WhileStmtSyntax\/init(_:bodyBuilder:)","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"metadata":{"externalID":"s:18SwiftSyntaxBuilder20HasTrailingCodeBlockPAA0aB004StmtB8ProtocolRzrlE_04bodyC0xAA0B10NodeStringV_AD0fg8ItemListB0VyKXEtKcfc::SYNTHESIZED::s:11SwiftSyntax09WhileStmtB0V","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"StmtSyntaxProtocol","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"modules":[{"relatedModules":["SwiftSyntaxBuilder"],"name":"MacroBuilder"}],"title":"init(_:bodyBuilder:)","role":"symbol","symbolKind":"init","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"text":"SyntaxNodeString","kind":"typeIdentifier","preciseIdentifier":"s:18SwiftSyntaxBuilder0B10NodeStringV"},{"text":", ","kind":"text"},{"text":"bodyBuilder","kind":"externalParam"},{"text":": () ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"CodeBlockItemListSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax017CodeBlockItemListB0V"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"extendedModule":"SwiftSyntaxBuilder","roleHeading":"Initializer"},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"("},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"header","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"SyntaxNodeString","preciseIdentifier":"s:18SwiftSyntaxBuilder0B10NodeStringV","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxNodeString","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"attribute","text":"@"},{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/CodeBlockItemListBuilder","preciseIdentifier":"s:18SwiftSyntaxBuilder017CodeBlockItemListC0V","text":"CodeBlockItemListBuilder","kind":"attribute"},{"kind":"text","text":" "},{"text":"bodyBuilder","kind":"externalParam"},{"kind":"text","text":": () "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:11SwiftSyntax017CodeBlockItemListB0V","text":"CodeBlockItemListSyntax","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/CodeBlockItemListSyntax","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"}],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"content","content":[{"level":2,"text":"Discussion","type":"heading","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"For example, you can construct","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["while x < 5 {","  x += 1","}"]},{"inlineContent":[{"text":"using this call","type":"text"}],"type":"paragraph"},{"code":["try WhileStmtSyntax(\"while x < 5\") {","  ExprSyntax(\"x += 1\")","}"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"type":"text","text":"Throws an error if "},{"type":"codeVoice","code":"header"},{"text":" defines a different node type than the type the initializer is called on. E.g. if calling ","type":"text"},{"type":"codeVoice","code":"try IfStmtSyntax(\"while x < 5\") {}"}],"type":"paragraph"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/macrobuilder\/whilestmtsyntax\/init(_:bodybuilder:)"]}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/WhileStmtSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/WhileStmtSyntax\/HasTrailingCodeBlock-Implementations"]]},"kind":"symbol","abstract":[{"text":"Constructs a syntax node where ","type":"text"},{"code":"header","type":"codeVoice"},{"text":" builds the text of the node before the body in braces and ","type":"text"},{"code":"bodyBuilder","type":"codeVoice"},{"type":"text","text":" is used to build the node’s body."}],"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/WhileStmtSyntax/HasTrailingCodeBlock-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/WhileStmtSyntax\/HasTrailingCodeBlock-Implementations","kind":"article","title":"HasTrailingCodeBlock Implementations","type":"topic","abstract":[],"role":"collectionGroup","url":"\/documentation\/macrobuilder\/whilestmtsyntax\/hastrailingcodeblock-implementations"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/WhileStmtSyntax/init(_:bodyBuilder:)":{"abstract":[{"text":"Constructs a syntax node where ","type":"text"},{"type":"codeVoice","code":"header"},{"text":" builds the text of the node before the body in braces and ","type":"text"},{"type":"codeVoice","code":"bodyBuilder"},{"text":" is used to build the node’s body.","type":"text"}],"url":"\/documentation\/macrobuilder\/whilestmtsyntax\/init(_:bodybuilder:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/WhileStmtSyntax\/init(_:bodyBuilder:)","kind":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"text":"SyntaxNodeString","preciseIdentifier":"s:18SwiftSyntaxBuilder0B10NodeStringV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"bodyBuilder"},{"kind":"text","text":": () "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"CodeBlockItemListSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax017CodeBlockItemListB0V"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"}],"title":"init(_:bodyBuilder:)","role":"symbol","conformance":{"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"code":"StmtSyntaxProtocol","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/WhileStmtSyntax":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"WhileStmtSyntax"}],"role":"symbol","navigatorTitle":[{"text":"WhileStmtSyntax","kind":"identifier"}],"url":"\/documentation\/macrobuilder\/whilestmtsyntax","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/WhileStmtSyntax","title":"WhileStmtSyntax","type":"topic","abstract":[],"kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/CodeBlockItemListBuilder":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"CodeBlockItemListBuilder","kind":"identifier"}],"url":"\/documentation\/macrobuilder\/codeblockitemlistbuilder","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/CodeBlockItemListBuilder","navigatorTitle":[{"text":"CodeBlockItemListBuilder","kind":"identifier"}],"type":"topic","role":"symbol","kind":"symbol","title":"CodeBlockItemListBuilder"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/CodeBlockItemListSyntax":{"navigatorTitle":[{"text":"CodeBlockItemListSyntax","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/CodeBlockItemListSyntax","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CodeBlockItemListSyntax"}],"url":"\/documentation\/macrobuilder\/codeblockitemlistsyntax","type":"topic","abstract":[],"role":"symbol","title":"CodeBlockItemListSyntax","kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SyntaxNodeString":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxNodeString","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"SyntaxNodeString","kind":"identifier"}],"navigatorTitle":[{"text":"SyntaxNodeString","kind":"identifier"}],"kind":"symbol","title":"SyntaxNodeString","role":"symbol","type":"topic","abstract":[{"type":"text","text":"A type that is expressible by string interpolation the same way that syntax"},{"type":"text","text":" "},{"type":"text","text":"nodes are, but instead of producing a node, it stores the string interpolation"},{"text":" ","type":"text"},{"type":"text","text":"text."}],"url":"\/documentation\/macrobuilder\/syntaxnodestring"}}}