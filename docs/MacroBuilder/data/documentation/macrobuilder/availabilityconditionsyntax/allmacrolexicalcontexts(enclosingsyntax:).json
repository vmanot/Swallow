{"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"allMacroLexicalContexts","kind":"identifier"},{"kind":"text","text":"("},{"text":"enclosingSyntax","kind":"externalParam"},{"text":": (","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax","kind":"typeIdentifier","text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax"},{"text":"? = { _ in nil }) -> [","kind":"text"},{"text":"Syntax","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"name":"enclosingSyntax","content":[{"type":"paragraph","inlineContent":[{"text":"Provides a parent node when the operation","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"has reached the outermost syntax node (i.e., it has no parent), allowing"},{"text":" ","type":"text"},{"text":"the caller to provide a new syntax node that can continue the walk","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"to collect additional lexical contexts, e.g., from outer macro"},{"type":"text","text":" "},{"type":"text","text":"expansions."}]}]}]},{"content":[{"text":"Return Value","anchor":"return-value","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"text":"The array of enclosing lexical contexts.","type":"text"}]}],"kind":"content"}],"metadata":{"roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"allMacroLexicalContexts","kind":"identifier"},{"text":"(","kind":"text"},{"text":"enclosingSyntax","kind":"externalParam"},{"kind":"text","text":": ("},{"text":"Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax","kind":"typeIdentifier"},{"text":"?) -> [","kind":"text"},{"text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier"},{"kind":"text","text":"]"}],"modules":[{"name":"MacroBuilder","relatedModules":["SwiftSyntax"]}],"title":"allMacroLexicalContexts(enclosingSyntax:)","symbolKind":"method","extendedModule":"SwiftSyntax","role":"symbol","externalID":"s:11SwiftSyntax0B8ProtocolP0aB6MacrosE23allMacroLexicalContexts09enclosingB0SayAA0B0VGAHSgAHXE_tF::SYNTHESIZED::s:11SwiftSyntax021AvailabilityConditionB0V"},"abstract":[{"text":"Return an array of enclosing lexical contexts for the purpose of macros,","type":"text"},{"type":"text","text":" "},{"text":"from the innermost enclosing lexical context (first in the array) to the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"outermost. If this syntax node itself is a lexical context, it will be"},{"type":"text","text":" "},{"text":"the innermost lexical context.","type":"text"}],"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/AvailabilityConditionSyntax\/allMacroLexicalContexts(enclosingSyntax:)"},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/AvailabilityConditionSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/AvailabilityConditionSyntax\/SyntaxProtocol-Implementations"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/macrobuilder\/availabilityconditionsyntax\/allmacrolexicalcontexts(enclosingsyntax:)"]}],"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/AvailabilityConditionSyntax/allMacroLexicalContexts(enclosingSyntax:)":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/AvailabilityConditionSyntax\/allMacroLexicalContexts(enclosingSyntax:)","title":"allMacroLexicalContexts(enclosingSyntax:)","abstract":[{"type":"text","text":"Return an array of enclosing lexical contexts for the purpose of macros,"},{"text":" ","type":"text"},{"text":"from the innermost enclosing lexical context (first in the array) to the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"outermost. If this syntax node itself is a lexical context, it will be"},{"type":"text","text":" "},{"text":"the innermost lexical context.","type":"text"}],"type":"topic","role":"symbol","url":"\/documentation\/macrobuilder\/availabilityconditionsyntax\/allmacrolexicalcontexts(enclosingsyntax:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"allMacroLexicalContexts"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"enclosingSyntax"},{"kind":"text","text":": ("},{"text":"Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax"},{"text":"?) -> [","kind":"text"},{"text":"Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"text":"]","kind":"text"}],"kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/AvailabilityConditionSyntax":{"type":"topic","navigatorTitle":[{"kind":"identifier","text":"AvailabilityConditionSyntax"}],"title":"AvailabilityConditionSyntax","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/AvailabilityConditionSyntax","role":"symbol","kind":"symbol","abstract":[],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AvailabilityConditionSyntax"}],"url":"\/documentation\/macrobuilder\/availabilityconditionsyntax"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/AvailabilityConditionSyntax/SyntaxProtocol-Implementations":{"type":"topic","title":"SyntaxProtocol Implementations","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/AvailabilityConditionSyntax\/SyntaxProtocol-Implementations","role":"collectionGroup","kind":"article","abstract":[],"url":"\/documentation\/macrobuilder\/availabilityconditionsyntax\/syntaxprotocol-implementations"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/Syntax":{"abstract":[{"type":"text","text":"A Syntax node represents a tree of nodes with tokens at the leaves."},{"text":" ","type":"text"},{"type":"text","text":"Each node has accessors for its known children, and allows efficient"},{"text":" ","type":"text"},{"text":"iteration over the children through its ","type":"text"},{"type":"codeVoice","code":"children"},{"text":" property.","type":"text"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Syntax"}],"url":"\/documentation\/macrobuilder\/syntax","title":"Syntax","type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Syntax","kind":"identifier"}],"kind":"symbol"}}}