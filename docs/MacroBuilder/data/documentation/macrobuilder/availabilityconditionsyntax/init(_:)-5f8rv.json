{"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/AvailabilityConditionSyntax"]]},"identifier":{"url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/AvailabilityConditionSyntax\/init(_:)-5f8rv","interfaceLanguage":"swift"},"abstract":[{"text":"Converts the given specialized node to this type. Returns ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":" if the"},{"type":"text","text":" "},{"text":"conversion is not possible.","type":"text"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"metadata":{"externalID":"s:11SwiftSyntax021AvailabilityConditionB0VyACSgxhcAA0B8ProtocolRzlufc","title":"init(_:)","modules":[{"name":"MacroBuilder"}],"role":"symbol","symbolKind":"init","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"?(some "},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP","text":"SyntaxProtocol","kind":"typeIdentifier"},{"kind":"text","text":")"}],"roleHeading":"Initializer"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"?("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"text":"node","kind":"internalParam"},{"text":": some ","kind":"text"},{"kind":"typeIdentifier","text":"SyntaxProtocol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxProtocol","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP"},{"kind":"text","text":")"}],"platforms":["macOS"]}]}],"variants":[{"paths":["\/documentation\/macrobuilder\/availabilityconditionsyntax\/init(_:)-5f8rv"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/AvailabilityConditionSyntax":{"type":"topic","navigatorTitle":[{"kind":"identifier","text":"AvailabilityConditionSyntax"}],"title":"AvailabilityConditionSyntax","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/AvailabilityConditionSyntax","role":"symbol","kind":"symbol","abstract":[],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AvailabilityConditionSyntax"}],"url":"\/documentation\/macrobuilder\/availabilityconditionsyntax"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/AvailabilityConditionSyntax/init(_:)-5f8rv":{"fragments":[{"kind":"identifier","text":"init"},{"text":"?(some ","kind":"text"},{"text":"SyntaxProtocol","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP"},{"text":")","kind":"text"}],"role":"symbol","title":"init(_:)","kind":"symbol","abstract":[{"type":"text","text":"Converts the given specialized node to this type. Returns "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" if the"},{"text":" ","type":"text"},{"text":"conversion is not possible.","type":"text"}],"url":"\/documentation\/macrobuilder\/availabilityconditionsyntax\/init(_:)-5f8rv","type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/AvailabilityConditionSyntax\/init(_:)-5f8rv"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SyntaxProtocol":{"title":"SyntaxProtocol","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxProtocol","navigatorTitle":[{"text":"SyntaxProtocol","kind":"identifier"}],"abstract":[{"text":"Provide common functionality for specialized syntax nodes. Extend this","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"protocol to provide common functionality for all syntax nodes."}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"SyntaxProtocol","kind":"identifier"}],"type":"topic","role":"symbol","url":"\/documentation\/macrobuilder\/syntaxprotocol"}}}