{"sections":[],"topicSections":[{"anchor":"Enumeration-Cases","identifiers":["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TypeSpecifierListSyntax\/Element\/simpleTypeSpecifier(_:)"],"generated":true,"title":"Enumeration Cases"},{"anchor":"Initializers","generated":true,"identifiers":["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TypeSpecifierListSyntax\/Element\/init(_:)-18tcv","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TypeSpecifierListSyntax\/Element\/init(_:)-5ls6l"],"title":"Initializers"},{"title":"Instance Methods","anchor":"Instance-Methods","generated":true,"identifiers":["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TypeSpecifierListSyntax\/Element\/as(_:)-2ji6u","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TypeSpecifierListSyntax\/Element\/cast(_:)-5clvt","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TypeSpecifierListSyntax\/Element\/is(_:)-1l7oe"]},{"anchor":"Type-Properties","title":"Type Properties","identifiers":["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TypeSpecifierListSyntax\/Element\/structure"],"generated":true},{"identifiers":["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TypeSpecifierListSyntax\/Element\/CustomReflectable-Implementations","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TypeSpecifierListSyntax\/Element\/Equatable-Implementations","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TypeSpecifierListSyntax\/Element\/Equatable-Implementations","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TypeSpecifierListSyntax\/Element\/Hashable-Implementations","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TypeSpecifierListSyntax\/Element\/Hashable-Implementations","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TypeSpecifierListSyntax\/Element\/SyntaxChildChoices-Implementations","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TypeSpecifierListSyntax\/Element\/SyntaxProtocol-Implementations"],"anchor":"Default-Implementations","title":"Default Implementations","generated":true}],"variants":[{"paths":["\/documentation\/macrobuilder\/typespecifierlistsyntax\/element"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","relationshipsSections":[{"kind":"relationships","title":"Conforms To","identifiers":["doc:\/\/com.swallow.documentation.MacroBuilder\/s28CustomDebugStringConvertibleP","doc:\/\/com.swallow.documentation.MacroBuilder\/s17CustomReflectableP","doc:\/\/com.swallow.documentation.MacroBuilder\/s23CustomStringConvertibleP","doc:\/\/com.swallow.documentation.MacroBuilder\/SQ","doc:\/\/com.swallow.documentation.MacroBuilder\/SH","doc:\/\/com.swallow.documentation.MacroBuilder\/s8SendableP","doc:\/\/com.swallow.documentation.MacroBuilder\/s20TextOutputStreamableP","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxChildChoices","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxHashable","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxProtocol"],"type":"conformsTo"}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Element"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TypeSpecifierListSyntax"]]},"metadata":{"modules":[{"name":"MacroBuilder"}],"externalID":"s:11SwiftSyntax017TypeSpecifierListB0V7ElementO","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"identifier"}],"roleHeading":"Enumeration","title":"TypeSpecifierListSyntax.Element","symbolKind":"enum","navigatorTitle":[{"text":"Element","kind":"identifier"}],"role":"symbol"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TypeSpecifierListSyntax\/Element"},"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"Sequence.Element"},{"type":"text","text":"."}],"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/TypeSpecifierListSyntax/Element/as(_:)-2ji6u":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TypeSpecifierListSyntax\/Element\/as(_:)-2ji6u","kind":"symbol","abstract":[{"type":"text","text":"Attempts to cast the current syntax node to "},{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleTypeSpecifierSyntax","type":"reference","isActive":true},{"type":"text","text":"."}],"role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"`as`","kind":"identifier"},{"text":"(","kind":"text"},{"text":"SimpleTypeSpecifierSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax019SimpleTypeSpecifierB0V"},{"text":".Type) -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax019SimpleTypeSpecifierB0V","text":"SimpleTypeSpecifierSyntax","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"title":"as(_:)","url":"\/documentation\/macrobuilder\/typespecifierlistsyntax\/element\/as(_:)-2ji6u"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/TypeSpecifierListSyntax/Element/SyntaxProtocol-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TypeSpecifierListSyntax\/Element\/SyntaxProtocol-Implementations","title":"SyntaxProtocol Implementations","abstract":[],"type":"topic","url":"\/documentation\/macrobuilder\/typespecifierlistsyntax\/element\/syntaxprotocol-implementations","role":"collectionGroup","kind":"article"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/TypeSpecifierListSyntax/Element":{"title":"TypeSpecifierListSyntax.Element","abstract":[],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Element"}],"type":"topic","url":"\/documentation\/macrobuilder\/typespecifierlistsyntax\/element","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Element"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TypeSpecifierListSyntax\/Element","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/TypeSpecifierListSyntax/Element/Equatable-Implementations":{"kind":"article","type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TypeSpecifierListSyntax\/Element\/Equatable-Implementations","url":"\/documentation\/macrobuilder\/typespecifierlistsyntax\/element\/equatable-implementations","abstract":[],"role":"collectionGroup","title":"Equatable Implementations"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/TypeSpecifierListSyntax/Element/cast(_:)-5clvt":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TypeSpecifierListSyntax\/Element\/cast(_:)-5clvt","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cast","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax019SimpleTypeSpecifierB0V","text":"SimpleTypeSpecifierSyntax"},{"text":".Type) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax019SimpleTypeSpecifierB0V","text":"SimpleTypeSpecifierSyntax"}],"url":"\/documentation\/macrobuilder\/typespecifierlistsyntax\/element\/cast(_:)-5clvt","title":"cast(_:)","abstract":[{"type":"text","text":"Force-casts the current syntax node to "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleTypeSpecifierSyntax"},{"text":".","type":"text"}],"role":"symbol","kind":"symbol","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/s8SendableP":{"title":"Swift.Sendable","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/s8SendableP","type":"unresolvable"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/TypeSpecifierListSyntax/Element/Hashable-Implementations":{"abstract":[],"url":"\/documentation\/macrobuilder\/typespecifierlistsyntax\/element\/hashable-implementations","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TypeSpecifierListSyntax\/Element\/Hashable-Implementations","kind":"article","type":"topic","title":"Hashable Implementations","role":"collectionGroup"},"doc://com.swallow.documentation.MacroBuilder/s17CustomReflectableP":{"title":"Swift.CustomReflectable","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/s17CustomReflectableP","type":"unresolvable"},"doc://com.swallow.documentation.MacroBuilder/SQ":{"title":"Swift.Equatable","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/SQ","type":"unresolvable"},"doc://com.swallow.documentation.MacroBuilder/s28CustomDebugStringConvertibleP":{"title":"Swift.CustomDebugStringConvertible","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/s28CustomDebugStringConvertibleP","type":"unresolvable"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/TypeSpecifierListSyntax/Element/SyntaxChildChoices-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TypeSpecifierListSyntax\/Element\/SyntaxChildChoices-Implementations","type":"topic","kind":"article","abstract":[],"title":"SyntaxChildChoices Implementations","url":"\/documentation\/macrobuilder\/typespecifierlistsyntax\/element\/syntaxchildchoices-implementations","role":"collectionGroup"},"doc://com.swallow.documentation.MacroBuilder/s20TextOutputStreamableP":{"title":"Swift.TextOutputStreamable","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/s20TextOutputStreamableP","type":"unresolvable"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/TypeSpecifierListSyntax/Element/simpleTypeSpecifier(_:)":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TypeSpecifierListSyntax\/Element\/simpleTypeSpecifier(_:)","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"simpleTypeSpecifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax019SimpleTypeSpecifierB0V","text":"SimpleTypeSpecifierSyntax","kind":"typeIdentifier"},{"kind":"text","text":")"}],"url":"\/documentation\/macrobuilder\/typespecifierlistsyntax\/element\/simpletypespecifier(_:)","title":"TypeSpecifierListSyntax.Element.simpleTypeSpecifier(_:)","abstract":[],"role":"symbol","kind":"symbol","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/Syntax":{"abstract":[{"type":"text","text":"A Syntax node represents a tree of nodes with tokens at the leaves."},{"text":" ","type":"text"},{"type":"text","text":"Each node has accessors for its known children, and allows efficient"},{"text":" ","type":"text"},{"text":"iteration over the children through its ","type":"text"},{"type":"codeVoice","code":"children"},{"text":" property.","type":"text"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Syntax"}],"url":"\/documentation\/macrobuilder\/syntax","title":"Syntax","type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Syntax","kind":"identifier"}],"kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/TypeSpecifierListSyntax/Element/structure":{"kind":"symbol","url":"\/documentation\/macrobuilder\/typespecifierlistsyntax\/element\/structure","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TypeSpecifierListSyntax\/Element\/structure","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"structure","kind":"identifier"},{"text":": ","kind":"text"},{"text":"SyntaxNodeStructure","preciseIdentifier":"s:11SwiftSyntax0B13NodeStructureO","kind":"typeIdentifier"}],"title":"structure","type":"topic","abstract":[{"text":"The statically allowed structure of the syntax node.","type":"text"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/TypeSpecifierListSyntax/Element/is(_:)-1l7oe":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TypeSpecifierListSyntax\/Element\/is(_:)-1l7oe","kind":"symbol","abstract":[{"type":"text","text":"Checks if the current syntax node can be cast to "},{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleTypeSpecifierSyntax","type":"reference","isActive":true},{"type":"text","text":"."}],"role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"`is`","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax019SimpleTypeSpecifierB0V","text":"SimpleTypeSpecifierSyntax","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"title":"is(_:)","url":"\/documentation\/macrobuilder\/typespecifierlistsyntax\/element\/is(_:)-1l7oe"},"doc://com.swallow.documentation.MacroBuilder/SH":{"title":"Swift.Hashable","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/SH","type":"unresolvable"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/TypeSpecifierListSyntax/Element/init(_:)-18tcv":{"url":"\/documentation\/macrobuilder\/typespecifierlistsyntax\/element\/init(_:)-18tcv","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"text":"SimpleTypeSpecifierSyntax","preciseIdentifier":"s:11SwiftSyntax019SimpleTypeSpecifierB0V","kind":"typeIdentifier"},{"kind":"text","text":")"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TypeSpecifierListSyntax\/Element\/init(_:)-18tcv","type":"topic","abstract":[],"kind":"symbol","title":"init(_:)","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/TypeSpecifierListSyntax/Element/init(_:)-5ls6l":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TypeSpecifierListSyntax\/Element\/init(_:)-5ls6l","kind":"symbol","abstract":[{"text":"Converts the given specialized node to this type. Returns ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":" if the"},{"type":"text","text":" "},{"text":"conversion is not possible.","type":"text"}],"role":"symbol","type":"topic","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"?(some "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP","text":"SyntaxProtocol"},{"text":")","kind":"text"}],"title":"init(_:)","url":"\/documentation\/macrobuilder\/typespecifierlistsyntax\/element\/init(_:)-5ls6l"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SyntaxChildChoices":{"url":"\/documentation\/macrobuilder\/syntaxchildchoices","navigatorTitle":[{"text":"SyntaxChildChoices","kind":"identifier"}],"abstract":[{"type":"text","text":"Protocol for the enums nested inside "},{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax","type":"reference","isActive":true},{"type":"text","text":" nodes that enumerate all the"},{"type":"text","text":" "},{"type":"text","text":"possible types a child node might have."}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxChildChoices","kind":"symbol","title":"SyntaxChildChoices","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SyntaxChildChoices","kind":"identifier"}],"role":"symbol","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/TypeSpecifierListSyntax/Element/CustomReflectable-Implementations":{"url":"\/documentation\/macrobuilder\/typespecifierlistsyntax\/element\/customreflectable-implementations","title":"CustomReflectable Implementations","abstract":[],"kind":"article","type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TypeSpecifierListSyntax\/Element\/CustomReflectable-Implementations","role":"collectionGroup"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SyntaxProtocol":{"title":"SyntaxProtocol","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxProtocol","navigatorTitle":[{"text":"SyntaxProtocol","kind":"identifier"}],"abstract":[{"text":"Provide common functionality for specialized syntax nodes. Extend this","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"protocol to provide common functionality for all syntax nodes."}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"SyntaxProtocol","kind":"identifier"}],"type":"topic","role":"symbol","url":"\/documentation\/macrobuilder\/syntaxprotocol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SyntaxHashable":{"url":"\/documentation\/macrobuilder\/syntaxhashable","type":"topic","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxHashable","role":"symbol","navigatorTitle":[{"text":"SyntaxHashable","kind":"identifier"}],"title":"SyntaxHashable","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SyntaxHashable","kind":"identifier"}],"abstract":[{"type":"text","text":"Protocol that provides a common Hashable implementation for all syntax nodes"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/TypeSpecifierListSyntax":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TypeSpecifierListSyntax","url":"\/documentation\/macrobuilder\/typespecifierlistsyntax","abstract":[],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"TypeSpecifierListSyntax","kind":"identifier"}],"title":"TypeSpecifierListSyntax","navigatorTitle":[{"text":"TypeSpecifierListSyntax","kind":"identifier"}],"kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/s23CustomStringConvertibleP":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/s23CustomStringConvertibleP","type":"unresolvable","title":"Swift.CustomStringConvertible"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleTypeSpecifierSyntax":{"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SimpleTypeSpecifierSyntax","kind":"identifier"}],"abstract":[{"text":"A specifier that can be attached to a type to eg. mark a parameter as ","type":"text"},{"type":"codeVoice","code":"inout"},{"type":"text","text":" or "},{"code":"consuming","type":"codeVoice"}],"title":"SimpleTypeSpecifierSyntax","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SimpleTypeSpecifierSyntax"}],"url":"\/documentation\/macrobuilder\/simpletypespecifiersyntax","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleTypeSpecifierSyntax","role":"symbol"}}}