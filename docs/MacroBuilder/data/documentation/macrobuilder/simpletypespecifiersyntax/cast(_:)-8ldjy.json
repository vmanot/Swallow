{"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/macrobuilder\/simpletypespecifiersyntax\/cast(_:)-8ldjy"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleTypeSpecifierSyntax\/cast(_:)-8ldjy"},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleTypeSpecifierSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleTypeSpecifierSyntax\/SyntaxProtocol-Implementations"]]},"abstract":[{"type":"text","text":"Force-casts the current syntax node to its own type."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"cast"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"syntaxType"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"platforms":["macOS"],"languages":["swift"]}]},{"content":[{"anchor":"return-value","text":"Return Value","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"The current syntax node."}],"type":"paragraph"}],"kind":"content"},{"content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"type":"aside","style":"note","name":"Note","content":[{"inlineContent":[{"type":"text","text":"This method overloads the general "},{"code":"cast","type":"codeVoice"},{"type":"text","text":" method and is marked as deprecated to produce a warning,"},{"type":"text","text":" "},{"type":"text","text":"informing the user that the cast will always succeed."}],"type":"paragraph"}]}],"kind":"content"}],"sections":[],"deprecationSummary":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This cast will always succeed"}]}],"metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cast"},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":".Type) -> "},{"text":"Self","kind":"typeIdentifier"}],"title":"cast(_:)","role":"symbol","extendedModule":"SwiftSyntax","externalID":"s:11SwiftSyntax0B8ProtocolPAAE4castyxxmF::SYNTHESIZED::s:11SwiftSyntax019SimpleTypeSpecifierB0V","symbolKind":"method","roleHeading":"Instance Method","platforms":[],"modules":[{"relatedModules":["SwiftSyntax"],"name":"MacroBuilder"}]},"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleTypeSpecifierSyntax/cast(_:)-8ldjy":{"title":"cast(_:)","kind":"symbol","abstract":[{"type":"text","text":"Force-casts the current syntax node to its own type."}],"deprecated":true,"url":"\/documentation\/macrobuilder\/simpletypespecifiersyntax\/cast(_:)-8ldjy","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"cast"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".Type) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleTypeSpecifierSyntax\/cast(_:)-8ldjy","role":"symbol","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleTypeSpecifierSyntax/SyntaxProtocol-Implementations":{"type":"topic","title":"SyntaxProtocol Implementations","abstract":[],"kind":"article","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleTypeSpecifierSyntax\/SyntaxProtocol-Implementations","url":"\/documentation\/macrobuilder\/simpletypespecifiersyntax\/syntaxprotocol-implementations","role":"collectionGroup"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleTypeSpecifierSyntax":{"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SimpleTypeSpecifierSyntax","kind":"identifier"}],"abstract":[{"text":"A specifier that can be attached to a type to eg. mark a parameter as ","type":"text"},{"type":"codeVoice","code":"inout"},{"type":"text","text":" or "},{"code":"consuming","type":"codeVoice"}],"title":"SimpleTypeSpecifierSyntax","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SimpleTypeSpecifierSyntax"}],"url":"\/documentation\/macrobuilder\/simpletypespecifiersyntax","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleTypeSpecifierSyntax","role":"symbol"}}}