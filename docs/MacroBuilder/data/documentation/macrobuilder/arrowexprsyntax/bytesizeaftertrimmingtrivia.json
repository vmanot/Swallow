{"sections":[],"deprecationSummary":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use trimmedLength.utf8Length"}]}],"variants":[{"paths":["\/documentation\/macrobuilder\/arrowexprsyntax\/bytesizeaftertrimmingtrivia"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"extendedModule":"SwiftSyntax","modules":[{"name":"MacroBuilder","relatedModules":["SwiftSyntax"]}],"title":"byteSizeAfterTrimmingTrivia","platforms":[],"externalID":"s:11SwiftSyntax0B8ProtocolPAAE27byteSizeAfterTrimmingTriviaSivp::SYNTHESIZED::s:11SwiftSyntax09ArrowExprB0V","symbolKind":"property","role":"symbol","roleHeading":"Instance Property","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"byteSizeAfterTrimmingTrivia","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"}]},"kind":"symbol","identifier":{"url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ArrowExprSyntax\/byteSizeAfterTrimmingTrivia","interfaceLanguage":"swift"},"abstract":[{"text":"The textual byte length of this node excluding leading and trailing trivia.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"byteSizeAfterTrimmingTrivia","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"kind":"text","text":" { "},{"text":"get","kind":"keyword"},{"text":" }","kind":"text"}],"platforms":["macOS"]}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ArrowExprSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ArrowExprSyntax\/SyntaxProtocol-Implementations"]]},"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ArrowExprSyntax/SyntaxProtocol-Implementations":{"kind":"article","role":"collectionGroup","title":"SyntaxProtocol Implementations","abstract":[],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ArrowExprSyntax\/SyntaxProtocol-Implementations","url":"\/documentation\/macrobuilder\/arrowexprsyntax\/syntaxprotocol-implementations"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ArrowExprSyntax/byteSizeAfterTrimmingTrivia":{"role":"symbol","title":"byteSizeAfterTrimmingTrivia","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ArrowExprSyntax\/byteSizeAfterTrimmingTrivia","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/macrobuilder\/arrowexprsyntax\/bytesizeaftertrimmingtrivia","abstract":[{"type":"text","text":"The textual byte length of this node excluding leading and trailing trivia."}],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"byteSizeAfterTrimmingTrivia","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ArrowExprSyntax":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ArrowExprSyntax"}],"navigatorTitle":[{"text":"ArrowExprSyntax","kind":"identifier"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ArrowExprSyntax","type":"topic","url":"\/documentation\/macrobuilder\/arrowexprsyntax","title":"ArrowExprSyntax","abstract":[{"text":"The arrow when a type is used at a position that syntactically expectes an expression.","type":"text"}]}}}