{"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/CompositionTypeElementListSyntax"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"init","kind":"keyword"},{"kind":"text","text":"?("},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"node","kind":"internalParam"},{"text":": some ","kind":"text"},{"kind":"typeIdentifier","text":"SyntaxProtocol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxProtocol","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP"},{"kind":"text","text":")"}],"platforms":["macOS"],"languages":["swift"]}]}],"sections":[],"metadata":{"symbolKind":"init","externalID":"s:11SwiftSyntax026CompositionTypeElementListB0VyACSgxcAA0B8ProtocolRzlufc","roleHeading":"Initializer","modules":[{"name":"MacroBuilder"}],"title":"init(_:)","role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"?(some "},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP","kind":"typeIdentifier","text":"SyntaxProtocol"},{"kind":"text","text":")"}]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/macrobuilder\/compositiontypeelementlistsyntax\/init(_:)-3doka"]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/CompositionTypeElementListSyntax\/init(_:)-3doka"},"kind":"symbol","abstract":[{"type":"text","text":"Converts the given specialized node to this type. Returns "},{"type":"codeVoice","code":"nil"},{"text":" if the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"conversion is not possible."}],"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/CompositionTypeElementListSyntax/init(_:)-3doka":{"fragments":[{"text":"init","kind":"identifier"},{"text":"?(some ","kind":"text"},{"text":"SyntaxProtocol","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP","kind":"typeIdentifier"},{"text":")","kind":"text"}],"kind":"symbol","url":"\/documentation\/macrobuilder\/compositiontypeelementlistsyntax\/init(_:)-3doka","type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/CompositionTypeElementListSyntax\/init(_:)-3doka","title":"init(_:)","role":"symbol","abstract":[{"type":"text","text":"Converts the given specialized node to this type. Returns "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" if the"},{"type":"text","text":" "},{"type":"text","text":"conversion is not possible."}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/CompositionTypeElementListSyntax":{"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CompositionTypeElementListSyntax"}],"navigatorTitle":[{"text":"CompositionTypeElementListSyntax","kind":"identifier"}],"type":"topic","url":"\/documentation\/macrobuilder\/compositiontypeelementlistsyntax","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/CompositionTypeElementListSyntax","abstract":[],"kind":"symbol","title":"CompositionTypeElementListSyntax"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SyntaxProtocol":{"title":"SyntaxProtocol","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxProtocol","navigatorTitle":[{"text":"SyntaxProtocol","kind":"identifier"}],"abstract":[{"text":"Provide common functionality for specialized syntax nodes. Extend this","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"protocol to provide common functionality for all syntax nodes."}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"SyntaxProtocol","kind":"identifier"}],"type":"topic","role":"symbol","url":"\/documentation\/macrobuilder\/syntaxprotocol"}}}