{"sections":[],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/SyntaxProtocol-Implementations"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/trimmedDescription"},"schemaVersion":{"major":0,"patch":0,"minor":3},"kind":"symbol","metadata":{"externalID":"s:11SwiftSyntax0B8ProtocolPAAE18trimmedDescriptionSSvp::SYNTHESIZED::s:11SwiftSyntax018BooleanLiteralExprB0V","roleHeading":"Instance Property","modules":[{"name":"MacroBuilder","relatedModules":["SwiftSyntax"]}],"symbolKind":"property","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"trimmedDescription","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"}],"title":"trimmedDescription","role":"symbol","extendedModule":"SwiftSyntax"},"abstract":[{"type":"text","text":"The description of this node with leading whitespace of the first token"},{"type":"text","text":" "},{"text":"and trailing whitespace of the last token removed.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"trimmedDescription","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":" { ","kind":"text"},{"text":"get","kind":"keyword"},{"kind":"text","text":" }"}]}]}],"variants":[{"paths":["\/documentation\/macrobuilder\/booleanliteralexprsyntax\/trimmeddescription"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BooleanLiteralExprSyntax/trimmedDescription":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/trimmedDescription","url":"\/documentation\/macrobuilder\/booleanliteralexprsyntax\/trimmeddescription","title":"trimmedDescription","type":"topic","role":"symbol","abstract":[{"text":"The description of this node with leading whitespace of the first token","type":"text"},{"text":" ","type":"text"},{"text":"and trailing whitespace of the last token removed.","type":"text"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"trimmedDescription","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BooleanLiteralExprSyntax":{"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"BooleanLiteralExprSyntax","kind":"identifier"}],"title":"BooleanLiteralExprSyntax","abstract":[],"navigatorTitle":[{"text":"BooleanLiteralExprSyntax","kind":"identifier"}],"url":"\/documentation\/macrobuilder\/booleanliteralexprsyntax","type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BooleanLiteralExprSyntax/SyntaxProtocol-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/SyntaxProtocol-Implementations","title":"SyntaxProtocol Implementations","abstract":[],"type":"topic","role":"collectionGroup","url":"\/documentation\/macrobuilder\/booleanliteralexprsyntax\/syntaxprotocol-implementations","kind":"article"}}}