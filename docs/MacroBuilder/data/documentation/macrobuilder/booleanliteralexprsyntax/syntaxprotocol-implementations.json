{"sections":[],"topicSections":[{"anchor":"Initializers","title":"Initializers","identifiers":["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/init(_:)-3on0h","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/init(validating:)"],"generated":true},{"anchor":"Instance-Properties","generated":true,"identifiers":["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/byteRange","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/byteSize","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/byteSizeAfterTrimmingTrivia","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/contentLength","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/debugDescription","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/description","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/detached","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/endPosition","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/endPositionBeforeTrailingTrivia","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/firstToken","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/hasError","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/hasMaximumNestingLevelOverflow","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/hasParent","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/hasSequenceExpr","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/hasWarning","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/id","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/index","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/isImplicit","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/keyPathInParent","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/kind","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/lastToken","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/leadingTrivia","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/leadingTriviaLength","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/nextToken","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/parent","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/position","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/positionAfterSkippingLeadingTrivia","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/previousToken","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/root","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/syntaxNodeType","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/syntaxTextBytes","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/totalByteRange","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/totalLength","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/trailingTrivia","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/trailingTriviaLength","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/trimmed","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/trimmedByteRange","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/trimmedDescription","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/trimmedLength"],"title":"Instance Properties"},{"title":"Instance Methods","anchor":"Instance-Methods","identifiers":["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/allMacroLexicalContexts(enclosingSyntax:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/asMacroLexicalContext()","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/asProtocol(_:)-1h67v","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/asProtocol(_:)-2bt0b","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/asProtocol(_:)-3awqs","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/asProtocol(_:)-3e0r5","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/asProtocol(_:)-4g8de","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/asProtocol(_:)-4y3","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/asProtocol(_:)-5anp","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/asProtocol(_:)-5oa15","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/asProtocol(_:)-6hyif","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/asProtocol(_:)-6r79k","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/asProtocol(_:)-6vsg6","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/asProtocol(_:)-7etxr","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/asProtocol(_:)-9jy73","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/asProtocol(_:)-9o24f","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/children(viewMode:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/debugDescription(includeTrivia:converter:mark:indentString:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/detach()","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/endLocation(converter:afterTrailingTrivia:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/expand(macroSpecs:contextGenerator:indentationWidth:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/expand(macros:contextGenerator:indentationWidth:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/expand(macros:in:indentationWidth:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/firstToken(viewMode:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/formatted(using:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/isProtocol(_:)-16056","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/isProtocol(_:)-2fg13","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/isProtocol(_:)-2ppcx","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/isProtocol(_:)-3g66x","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/isProtocol(_:)-3nqqc","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/isProtocol(_:)-3ylyy","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/isProtocol(_:)-43l8j","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/isProtocol(_:)-4s2jm","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/isProtocol(_:)-4taqm","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/isProtocol(_:)-5dhmc","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/isProtocol(_:)-6ea8m","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/isProtocol(_:)-9yrdb","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/isProtocol(_:)-cvts","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/isProtocol(_:)-mimj","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/lastToken(viewMode:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/map(_:_:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/modifying(_:_:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/nextToken(viewMode:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/node(at:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/previousToken(viewMode:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/startLocation(converter:afterLeadingTrivia:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/token(at:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/tokens(viewMode:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/trimmed(matching:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/trimmedDescription(matching:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/with(_:_:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/write(to:)"],"generated":true}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/SyntaxProtocol-Implementations"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/macrobuilder\/booleanliteralexprsyntax\/syntaxprotocol-implementations"]}],"kind":"article","hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax"]]},"metadata":{"role":"collectionGroup","roleHeading":"API Collection","title":"SyntaxProtocol Implementations","modules":[{"name":"MacroBuilder"}]},"schemaVersion":{"patch":0,"major":0,"minor":3},"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BooleanLiteralExprSyntax/expand(macros:contextGenerator:indentationWidth:)":{"type":"topic","url":"\/documentation\/macrobuilder\/booleanliteralexprsyntax\/expand(macros:contextgenerator:indentationwidth:)","title":"expand(macros:contextGenerator:indentationWidth:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/expand(macros:contextGenerator:indentationWidth:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"expand","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Context","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"macros"},{"text":": [","kind":"text"},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"text":" : any ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:17SwiftSyntaxMacros5MacroP","text":"Macro"},{"text":".Type], ","kind":"text"},{"text":"contextGenerator","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"text":") -> ","kind":"text"},{"text":"Context","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"indentationWidth"},{"text":": ","kind":"text"},{"text":"Trivia","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax6TriviaV"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax"}],"kind":"symbol","role":"symbol","abstract":[]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BooleanLiteralExprSyntax/trimmedLength":{"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"trimmedLength","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV","text":"SourceLength"}],"role":"symbol","type":"topic","url":"\/documentation\/macrobuilder\/booleanliteralexprsyntax\/trimmedlength","title":"trimmedLength","abstract":[{"text":"The length this node takes up spelled out in the source, excluding its","type":"text"},{"type":"text","text":" "},{"type":"text","text":"leading or trailing trivia."}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/trimmedLength","kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BooleanLiteralExprSyntax/lastToken(viewMode:)":{"title":"lastToken(viewMode:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"lastToken","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"viewMode"},{"text":": ","kind":"text"},{"text":"SyntaxTreeViewMode","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"url":"\/documentation\/macrobuilder\/booleanliteralexprsyntax\/lasttoken(viewmode:)","role":"symbol","type":"topic","abstract":[{"type":"text","text":"Returns the last token node that is part of this syntax node."}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/lastToken(viewMode:)","kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BooleanLiteralExprSyntax/asProtocol(_:)-6r79k":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/asProtocol(_:)-6r79k","url":"\/documentation\/macrobuilder\/booleanliteralexprsyntax\/asprotocol(_:)-6r79k","type":"topic","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"code":"WithOptionalCodeBlockSyntax","type":"codeVoice"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"title":"asProtocol(_:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"asProtocol"},{"kind":"text","text":"((any "},{"text":"WithOptionalCodeBlockSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P"},{"text":").Type) -> (any ","kind":"text"},{"kind":"typeIdentifier","text":"WithOptionalCodeBlockSyntax","preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P"},{"text":")?","kind":"text"}],"kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BooleanLiteralExprSyntax/nextToken(viewMode:)":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/nextToken(viewMode:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"nextToken"},{"text":"(","kind":"text"},{"text":"viewMode","kind":"externalParam"},{"kind":"text","text":": "},{"text":"SyntaxTreeViewMode","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax"},{"text":"?","kind":"text"}],"url":"\/documentation\/macrobuilder\/booleanliteralexprsyntax\/nexttoken(viewmode:)","title":"nextToken(viewMode:)","abstract":[{"type":"text","text":"Recursively walks through the tree to find the next token semantically"},{"type":"text","text":" "},{"type":"text","text":"after this node."}],"role":"symbol","kind":"symbol","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BooleanLiteralExprSyntax/nextToken":{"kind":"symbol","type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/nextToken","title":"nextToken","abstract":[],"role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"nextToken","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"deprecated":true,"url":"\/documentation\/macrobuilder\/booleanliteralexprsyntax\/nexttoken"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BooleanLiteralExprSyntax/tokens(viewMode:)":{"role":"symbol","type":"topic","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/tokens(viewMode:)","abstract":[{"text":"Sequence of tokens that are part of this Syntax node.","type":"text"}],"url":"\/documentation\/macrobuilder\/booleanliteralexprsyntax\/tokens(viewmode:)","title":"tokens(viewMode:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"tokens","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"viewMode"},{"text":": ","kind":"text"},{"text":"SyntaxTreeViewMode","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO"},{"kind":"text","text":") -> "},{"text":"TokenSequence","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax13TokenSequenceV"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SyntaxChildren":{"title":"SyntaxChildren","abstract":[{"text":"Collection that contains the present child ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax","type":"reference"},{"type":"text","text":" nodes of the given node."}],"url":"\/documentation\/macrobuilder\/syntaxchildren","role":"symbol","navigatorTitle":[{"text":"SyntaxChildren","kind":"identifier"}],"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SyntaxChildren","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxChildren"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BooleanLiteralExprSyntax/trimmed":{"type":"topic","url":"\/documentation\/macrobuilder\/booleanliteralexprsyntax\/trimmed","title":"trimmed","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/trimmed","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"trimmed","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"}],"kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"A copy of this node without the leading trivia of the first token in the"},{"text":" ","type":"text"},{"type":"text","text":"node and the trailing trivia of the last token in the node."}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BooleanLiteralExprSyntax/isProtocol(_:)-5dhmc":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"text":"((any ","kind":"text"},{"text":"EffectSpecifiersSyntax","preciseIdentifier":"s:11SwiftSyntax016EffectSpecifiersB0P","kind":"typeIdentifier"},{"text":").Type) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"type":"topic","url":"\/documentation\/macrobuilder\/booleanliteralexprsyntax\/isprotocol(_:)-5dhmc","title":"isProtocol(_:)","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/isProtocol(_:)-5dhmc","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"code":"EffectSpecifiersSyntax","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BooleanLiteralExprSyntax/trimmedDescription":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/trimmedDescription","url":"\/documentation\/macrobuilder\/booleanliteralexprsyntax\/trimmeddescription","title":"trimmedDescription","type":"topic","role":"symbol","abstract":[{"text":"The description of this node with leading whitespace of the first token","type":"text"},{"text":" ","type":"text"},{"text":"and trailing whitespace of the last token removed.","type":"text"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"trimmedDescription","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BooleanLiteralExprSyntax/trimmedByteRange":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"trimmedByteRange","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"ByteSourceRange","preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangeV"}],"abstract":[{"type":"text","text":"The byte source range of this node excluding leading and trailing trivia."}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/trimmedByteRange","type":"topic","role":"symbol","url":"\/documentation\/macrobuilder\/booleanliteralexprsyntax\/trimmedbyterange","kind":"symbol","title":"trimmedByteRange"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BooleanLiteralExprSyntax/asProtocol(_:)-3e0r5":{"title":"asProtocol(_:)","url":"\/documentation\/macrobuilder\/booleanliteralexprsyntax\/asprotocol(_:)-3e0r5","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/asProtocol(_:)-3e0r5","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"code":"EffectSpecifiersSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"kind":"symbol","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"kind":"text","text":"((any "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax016EffectSpecifiersB0P","text":"EffectSpecifiersSyntax"},{"text":").Type) -> (any ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax016EffectSpecifiersB0P","kind":"typeIdentifier","text":"EffectSpecifiersSyntax"},{"text":")?","kind":"text"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BooleanLiteralExprSyntax/isProtocol(_:)-3ylyy":{"abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"code":"WithStatementsSyntax","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/isProtocol(_:)-3ylyy","title":"isProtocol(_:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"text":"((any ","kind":"text"},{"text":"WithStatementsSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax014WithStatementsB0P"},{"kind":"text","text":").Type) -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"kind":"symbol","url":"\/documentation\/macrobuilder\/booleanliteralexprsyntax\/isprotocol(_:)-3ylyy","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BooleanLiteralExprSyntax/asProtocol(_:)-4y3":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/asProtocol(_:)-4y3","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"asProtocol"},{"text":"((any ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax013ParenthesizedB0P","text":"ParenthesizedSyntax","kind":"typeIdentifier"},{"text":").Type) -> (any ","kind":"text"},{"text":"ParenthesizedSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013ParenthesizedB0P"},{"kind":"text","text":")?"}],"kind":"symbol","role":"symbol","url":"\/documentation\/macrobuilder\/booleanliteralexprsyntax\/asprotocol(_:)-4y3","type":"topic","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"ParenthesizedSyntax"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"title":"asProtocol(_:)"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BooleanLiteralExprSyntax/isProtocol(_:)-4taqm":{"url":"\/documentation\/macrobuilder\/booleanliteralexprsyntax\/isprotocol(_:)-4taqm","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"code":"WithCodeBlockSyntax","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"role":"symbol","kind":"symbol","type":"topic","title":"isProtocol(_:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/isProtocol(_:)-4taqm","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"text":"((any ","kind":"text"},{"text":"WithCodeBlockSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P"},{"text":").Type) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BooleanLiteralExprSyntax/asMacroLexicalContext()":{"abstract":[{"type":"text","text":"If this syntax node acts as a lexical context from the perspective"},{"type":"text","text":" "},{"text":"of a macro, return a new syntax node based on this node that strips all","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"information that isn’t supposed to be exposed as a lexical context, such"},{"type":"text","text":" "},{"text":"as function bodies or the members of types\/extensions.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/asMacroLexicalContext()","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"asMacroLexicalContext"},{"kind":"text","text":"() -> "},{"text":"Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"text":"?","kind":"text"}],"kind":"symbol","title":"asMacroLexicalContext()","url":"\/documentation\/macrobuilder\/booleanliteralexprsyntax\/asmacrolexicalcontext()","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BooleanLiteralExprSyntax/endLocation(converter:afterTrailingTrivia:)":{"title":"endLocation(converter:afterTrailingTrivia:)","type":"topic","abstract":[{"text":"The ending location, in the provided file, of this Syntax node.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/endLocation(converter:afterTrailingTrivia:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"endLocation"},{"kind":"text","text":"("},{"kind":"externalParam","text":"converter"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC","text":"SourceLocationConverter"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"afterTrailingTrivia"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax14SourceLocationV","kind":"typeIdentifier","text":"SourceLocation"}],"role":"symbol","url":"\/documentation\/macrobuilder\/booleanliteralexprsyntax\/endlocation(converter:aftertrailingtrivia:)"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/TokenDiagnostic":{"type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"TokenDiagnostic"}],"role":"symbol","abstract":[{"text":"If the token has an error that’s inherent to the token itself and not its","type":"text"},{"text":" ","type":"text"},{"text":"surrounding structure, this defines the type of the error.","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"byteOffset"},{"type":"text","text":" specifies at which offset the error occurred."}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TokenDiagnostic","title":"TokenDiagnostic","url":"\/documentation\/macrobuilder\/tokendiagnostic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"TokenDiagnostic","kind":"identifier"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BooleanLiteralExprSyntax/node(at:)":{"abstract":[{"text":"If the node with the given ","type":"text"},{"type":"codeVoice","code":"syntaxIdentifier"},{"type":"text","text":" is a (recursive) child of this node, return the node with that"},{"type":"text","text":" "},{"text":"identifier.","type":"text"}],"role":"symbol","type":"topic","title":"node(at:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"node","kind":"identifier"},{"kind":"text","text":"("},{"text":"at","kind":"externalParam"},{"kind":"text","text":": "},{"text":"SyntaxIdentifier","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B10IdentifierV"},{"kind":"text","text":") -> "},{"text":"Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/node(at:)","url":"\/documentation\/macrobuilder\/booleanliteralexprsyntax\/node(at:)"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BooleanLiteralExprSyntax/debugDescription":{"title":"debugDescription","abstract":[{"text":"A simple description of this node (ie. its type).","type":"text"}],"url":"\/documentation\/macrobuilder\/booleanliteralexprsyntax\/debugdescription","type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/debugDescription","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"debugDescription"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BooleanLiteralExprSyntax/hasWarning":{"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"hasWarning"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"role":"symbol","abstract":[{"type":"text","text":"Whether the tree contained by this layout has any tokens with a"},{"type":"text","text":" "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TokenDiagnostic"},{"type":"text","text":" of severity "},{"type":"codeVoice","code":"warning"},{"text":".","type":"text"}],"kind":"symbol","title":"hasWarning","type":"topic","url":"\/documentation\/macrobuilder\/booleanliteralexprsyntax\/haswarning","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/hasWarning"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BooleanLiteralExprSyntax/hasMaximumNestingLevelOverflow":{"title":"hasMaximumNestingLevelOverflow","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"hasMaximumNestingLevelOverflow"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"url":"\/documentation\/macrobuilder\/booleanliteralexprsyntax\/hasmaximumnestingleveloverflow","role":"symbol","type":"topic","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/hasMaximumNestingLevelOverflow","kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BooleanLiteralExprSyntax/asProtocol(_:)-2bt0b":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/asProtocol(_:)-2bt0b","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"text":"((any ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax06BracedB0P","kind":"typeIdentifier","text":"BracedSyntax"},{"kind":"text","text":").Type) -> (any "},{"kind":"typeIdentifier","text":"BracedSyntax","preciseIdentifier":"s:11SwiftSyntax06BracedB0P"},{"kind":"text","text":")?"}],"title":"asProtocol(_:)","type":"topic","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"BracedSyntax"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"url":"\/documentation\/macrobuilder\/booleanliteralexprsyntax\/asprotocol(_:)-2bt0b","kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BooleanLiteralExprSyntax/allMacroLexicalContexts(enclosingSyntax:)":{"kind":"symbol","abstract":[{"type":"text","text":"Return an array of enclosing lexical contexts for the purpose of macros,"},{"text":" ","type":"text"},{"text":"from the innermost enclosing lexical context (first in the array) to the","type":"text"},{"type":"text","text":" "},{"text":"outermost. If this syntax node itself is a lexical context, it will be","type":"text"},{"type":"text","text":" "},{"text":"the innermost lexical context.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"allMacroLexicalContexts","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"enclosingSyntax"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"kind":"text","text":") -> "},{"text":"Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"text":"?) -> [","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax","kind":"typeIdentifier"},{"kind":"text","text":"]"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/allMacroLexicalContexts(enclosingSyntax:)","url":"\/documentation\/macrobuilder\/booleanliteralexprsyntax\/allmacrolexicalcontexts(enclosingsyntax:)","title":"allMacroLexicalContexts(enclosingSyntax:)","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BooleanLiteralExprSyntax/endPosition":{"abstract":[{"type":"text","text":"The end position of this node, including its trivia."}],"role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"endPosition","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","text":"AbsolutePosition","kind":"typeIdentifier"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/endPosition","title":"endPosition","type":"topic","url":"\/documentation\/macrobuilder\/booleanliteralexprsyntax\/endposition"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BooleanLiteralExprSyntax/syntaxNodeType":{"type":"topic","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/syntaxNodeType","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"syntaxNodeType","kind":"identifier"},{"kind":"text","text":": any "},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP","text":"SyntaxProtocol","kind":"typeIdentifier"},{"text":".Type","kind":"text"}],"url":"\/documentation\/macrobuilder\/booleanliteralexprsyntax\/syntaxnodetype","kind":"symbol","abstract":[{"type":"text","text":"The dynamic metatype of the concrete node."}],"title":"syntaxNodeType"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BooleanLiteralExprSyntax/init(_:)-3on0h":{"role":"symbol","title":"init(_:)","kind":"symbol","abstract":[{"type":"text","text":"Initializes a new instance of the conforming type from a given specialized syntax node."}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/init(_:)-3on0h","type":"topic","url":"\/documentation\/macrobuilder\/booleanliteralexprsyntax\/init(_:)-3on0h","fragments":[{"kind":"identifier","text":"init"},{"text":"?<","kind":"text"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"S"},{"text":"?)","kind":"text"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BooleanLiteralExprSyntax/parent":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/parent","role":"symbol","title":"parent","abstract":[{"type":"text","text":"The parent of this syntax node, or "},{"code":"nil","type":"codeVoice"},{"text":" if this node is the root.","type":"text"}],"kind":"symbol","type":"topic","url":"\/documentation\/macrobuilder\/booleanliteralexprsyntax\/parent","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"parent"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"text":"?","kind":"text"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BooleanLiteralExprSyntax/sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)":{"role":"symbol","abstract":[{"type":"text","text":"The source range, in the provided file, of this Syntax node."}],"title":"sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"sourceRange","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"converter"},{"kind":"text","text":": "},{"text":"SourceLocationConverter","preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"afterLeadingTrivia","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"afterTrailingTrivia"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"SourceRange","preciseIdentifier":"s:11SwiftSyntax11SourceRangeV"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)","type":"topic","url":"\/documentation\/macrobuilder\/booleanliteralexprsyntax\/sourcerange(converter:afterleadingtrivia:aftertrailingtrivia:)","kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BooleanLiteralExprSyntax/detached":{"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/detached","title":"detached","role":"symbol","kind":"symbol","abstract":[{"text":"Return this subtree with this node as the root, ie. detach this node","type":"text"},{"type":"text","text":" "},{"type":"text","text":"from its parent."}],"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"detached"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"url":"\/documentation\/macrobuilder\/booleanliteralexprsyntax\/detached"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BooleanLiteralExprSyntax/description":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/description","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"description","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"}],"title":"description","abstract":[{"type":"text","text":"A source-accurate description of this node."}],"type":"topic","role":"symbol","url":"\/documentation\/macrobuilder\/booleanliteralexprsyntax\/description","kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BooleanLiteralExprSyntax/isProtocol(_:)-cvts":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/isProtocol(_:)-cvts","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"DeclGroupSyntax"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"type":"topic","kind":"symbol","url":"\/documentation\/macrobuilder\/booleanliteralexprsyntax\/isprotocol(_:)-cvts","title":"isProtocol(_:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"((any "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax09DeclGroupB0P","text":"DeclGroupSyntax"},{"kind":"text","text":").Type) -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BooleanLiteralExprSyntax/leadingTriviaLength":{"role":"symbol","kind":"symbol","type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/leadingTriviaLength","abstract":[{"type":"text","text":"The length this node’s leading trivia takes up spelled out in source."}],"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"leadingTriviaLength","kind":"identifier"},{"kind":"text","text":": "},{"text":"SourceLength","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV"}],"title":"leadingTriviaLength","url":"\/documentation\/macrobuilder\/booleanliteralexprsyntax\/leadingtrivialength"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BooleanLiteralExprSyntax/asProtocol(_:)-9o24f":{"kind":"symbol","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithTrailingCommaSyntax"},{"text":". Otherwise return ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"text":"((any ","kind":"text"},{"kind":"typeIdentifier","text":"WithTrailingCommaSyntax","preciseIdentifier":"s:11SwiftSyntax017WithTrailingCommaB0P"},{"text":").Type) -> (any ","kind":"text"},{"text":"WithTrailingCommaSyntax","preciseIdentifier":"s:11SwiftSyntax017WithTrailingCommaB0P","kind":"typeIdentifier"},{"text":")?","kind":"text"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/asProtocol(_:)-9o24f","url":"\/documentation\/macrobuilder\/booleanliteralexprsyntax\/asprotocol(_:)-9o24f","type":"topic","role":"symbol","title":"asProtocol(_:)"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BooleanLiteralExprSyntax/debugDescription(includeTrivia:converter:mark:indentString:)":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"debugDescription"},{"kind":"text","text":"("},{"text":"includeTrivia","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"converter"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC","kind":"typeIdentifier","text":"SourceLocationConverter"},{"kind":"text","text":"?, "},{"text":"mark","kind":"externalParam"},{"kind":"text","text":": (any "},{"text":"SyntaxProtocol","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP","kind":"typeIdentifier"},{"text":")?, ","kind":"text"},{"text":"indentString","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"}],"abstract":[{"text":"Returns a summarized dump of this node.","type":"text"}],"type":"topic","role":"symbol","title":"debugDescription(includeTrivia:converter:mark:indentString:)","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/debugDescription(includeTrivia:converter:mark:indentString:)","url":"\/documentation\/macrobuilder\/booleanliteralexprsyntax\/debugdescription(includetrivia:converter:mark:indentstring:)"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BooleanLiteralExprSyntax/byteSizeAfterTrimmingTrivia":{"deprecated":true,"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/byteSizeAfterTrimmingTrivia","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"byteSizeAfterTrimmingTrivia"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"abstract":[{"text":"The textual byte length of this node excluding leading and trailing trivia.","type":"text"}],"title":"byteSizeAfterTrimmingTrivia","url":"\/documentation\/macrobuilder\/booleanliteralexprsyntax\/bytesizeaftertrimmingtrivia","role":"symbol","kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BooleanLiteralExprSyntax/isImplicit":{"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"isImplicit"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"abstract":[{"text":"When isImplicit is true, the syntax node doesn’t include any","type":"text"},{"type":"text","text":" "},{"type":"text","text":"underlying tokens, e.g. an empty CodeBlockItemList."}],"deprecated":true,"title":"isImplicit","type":"topic","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/isImplicit","url":"\/documentation\/macrobuilder\/booleanliteralexprsyntax\/isimplicit","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BooleanLiteralExprSyntax/trailingTriviaLength":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/trailingTriviaLength","type":"topic","abstract":[{"type":"text","text":"The length this node’s trailing trivia takes up spelled out in source."}],"role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"trailingTriviaLength","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax12SourceLengthV","kind":"typeIdentifier","text":"SourceLength"}],"title":"trailingTriviaLength","url":"\/documentation\/macrobuilder\/booleanliteralexprsyntax\/trailingtrivialength","kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BooleanLiteralExprSyntax/isProtocol(_:)-16056":{"title":"isProtocol(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"text":"((any ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P","text":"FreestandingMacroExpansionSyntax"},{"text":").Type) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"url":"\/documentation\/macrobuilder\/booleanliteralexprsyntax\/isprotocol(_:)-16056","role":"symbol","type":"topic","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"FreestandingMacroExpansionSyntax"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/isProtocol(_:)-16056","kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BooleanLiteralExprSyntax/totalByteRange":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/totalByteRange","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"totalByteRange"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangeV","kind":"typeIdentifier","text":"ByteSourceRange"}],"kind":"symbol","title":"totalByteRange","role":"symbol","type":"topic","abstract":[{"type":"text","text":"The byte source range of this node including leading and trailing trivia."}],"url":"\/documentation\/macrobuilder\/booleanliteralexprsyntax\/totalbyterange"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BooleanLiteralExprSyntax/totalLength":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/totalLength","kind":"symbol","title":"totalLength","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"totalLength","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax12SourceLengthV","text":"SourceLength","kind":"typeIdentifier"}],"role":"symbol","abstract":[{"text":"The length of this node including all of its trivia.","type":"text"}],"type":"topic","url":"\/documentation\/macrobuilder\/booleanliteralexprsyntax\/totallength"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BooleanLiteralExprSyntax/trailingTrivia":{"abstract":[{"text":"The trailing trivia of this syntax node.","type":"text"}],"type":"topic","title":"trailingTrivia","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/trailingTrivia","role":"symbol","kind":"symbol","url":"\/documentation\/macrobuilder\/booleanliteralexprsyntax\/trailingtrivia","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"trailingTrivia"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Trivia","preciseIdentifier":"s:11SwiftSyntax6TriviaV"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BooleanLiteralExprSyntax/isProtocol(_:)-2ppcx":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/isProtocol(_:)-2ppcx","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"code":"NamedDeclSyntax","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"type":"topic","kind":"symbol","url":"\/documentation\/macrobuilder\/booleanliteralexprsyntax\/isprotocol(_:)-2ppcx","title":"isProtocol(_:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"isProtocol"},{"text":"((any ","kind":"text"},{"kind":"typeIdentifier","text":"NamedDeclSyntax","preciseIdentifier":"s:11SwiftSyntax09NamedDeclB0P"},{"text":").Type) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BooleanLiteralExprSyntax/isProtocol(_:)-3nqqc":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/isProtocol(_:)-3nqqc","url":"\/documentation\/macrobuilder\/booleanliteralexprsyntax\/isprotocol(_:)-3nqqc","role":"symbol","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"WithAttributesSyntax"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"((any "},{"preciseIdentifier":"s:11SwiftSyntax014WithAttributesB0P","kind":"typeIdentifier","text":"WithAttributesSyntax"},{"kind":"text","text":").Type) -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"title":"isProtocol(_:)","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BooleanLiteralExprSyntax/lastToken":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/lastToken","abstract":[],"type":"topic","kind":"symbol","url":"\/documentation\/macrobuilder\/booleanliteralexprsyntax\/lasttoken","title":"lastToken","role":"symbol","deprecated":true,"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"lastToken","kind":"identifier"},{"kind":"text","text":": "},{"text":"TokenSyntax","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","kind":"typeIdentifier"},{"kind":"text","text":"?"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BooleanLiteralExprSyntax/isProtocol(_:)-43l8j":{"title":"isProtocol(_:)","role":"symbol","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"code":"MissingNodeSyntax","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"kind":"text","text":"((any "},{"kind":"typeIdentifier","text":"MissingNodeSyntax","preciseIdentifier":"s:11SwiftSyntax011MissingNodeB0P"},{"text":").Type) -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/isProtocol(_:)-43l8j","type":"topic","url":"\/documentation\/macrobuilder\/booleanliteralexprsyntax\/isprotocol(_:)-43l8j","kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BooleanLiteralExprSyntax/previousToken":{"type":"topic","url":"\/documentation\/macrobuilder\/booleanliteralexprsyntax\/previoustoken","title":"previousToken","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/previousToken","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"previousToken"},{"kind":"text","text":": "},{"text":"TokenSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"text":"?","kind":"text"}],"kind":"symbol","deprecated":true,"role":"symbol","abstract":[]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BooleanLiteralExprSyntax/hasSequenceExpr":{"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"hasSequenceExpr"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/hasSequenceExpr","url":"\/documentation\/macrobuilder\/booleanliteralexprsyntax\/hassequenceexpr","abstract":[{"type":"text","text":"Whether this tree contains a missing token or unexpected node."}],"role":"symbol","kind":"symbol","type":"topic","title":"hasSequenceExpr"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BooleanLiteralExprSyntax/leadingTrivia":{"type":"topic","abstract":[{"text":"The leading trivia of this syntax node.","type":"text"}],"title":"leadingTrivia","kind":"symbol","url":"\/documentation\/macrobuilder\/booleanliteralexprsyntax\/leadingtrivia","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"leadingTrivia","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Trivia","preciseIdentifier":"s:11SwiftSyntax6TriviaV"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/leadingTrivia"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BooleanLiteralExprSyntax/positionAfterSkippingLeadingTrivia":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/positionAfterSkippingLeadingTrivia","type":"topic","kind":"symbol","title":"positionAfterSkippingLeadingTrivia","url":"\/documentation\/macrobuilder\/booleanliteralexprsyntax\/positionafterskippingleadingtrivia","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"positionAfterSkippingLeadingTrivia","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"AbsolutePosition","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV"}],"abstract":[{"type":"text","text":"The absolute position of the starting point of this node, skipping any"},{"type":"text","text":" "},{"type":"text","text":"leading trivia attached to the first token syntax."}],"role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BooleanLiteralExprSyntax/asProtocol(_:)-6hyif":{"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"text":"((any ","kind":"text"},{"kind":"typeIdentifier","text":"WithModifiersSyntax","preciseIdentifier":"s:11SwiftSyntax013WithModifiersB0P"},{"text":").Type) -> (any ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013WithModifiersB0P","text":"WithModifiersSyntax"},{"text":")?","kind":"text"}],"abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithModifiersSyntax"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"title":"asProtocol(_:)","url":"\/documentation\/macrobuilder\/booleanliteralexprsyntax\/asprotocol(_:)-6hyif","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/asProtocol(_:)-6hyif","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BooleanLiteralExprSyntax/isProtocol(_:)-6ea8m":{"type":"topic","role":"symbol","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"WithGenericParametersSyntax"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/isProtocol(_:)-6ea8m","kind":"symbol","title":"isProtocol(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"text":"((any ","kind":"text"},{"text":"WithGenericParametersSyntax","preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P","kind":"typeIdentifier"},{"text":").Type) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"url":"\/documentation\/macrobuilder\/booleanliteralexprsyntax\/isprotocol(_:)-6ea8m"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BooleanLiteralExprSyntax/root":{"title":"root","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"root"},{"kind":"text","text":": "},{"text":"Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"}],"url":"\/documentation\/macrobuilder\/booleanliteralexprsyntax\/root","role":"symbol","type":"topic","abstract":[{"type":"text","text":"The root of the tree in which this node resides."}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/root","kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BooleanLiteralExprSyntax/contentLength":{"type":"topic","kind":"symbol","url":"\/documentation\/macrobuilder\/booleanliteralexprsyntax\/contentlength","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"contentLength"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV","text":"SourceLength"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/contentLength","deprecated":true,"role":"symbol","title":"contentLength","abstract":[]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BooleanLiteralExprSyntax/byteSize":{"url":"\/documentation\/macrobuilder\/booleanliteralexprsyntax\/bytesize","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"byteSize","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"abstract":[{"type":"text","text":"The textual byte length of this node including leading and trailing trivia."}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/byteSize","deprecated":true,"type":"topic","role":"symbol","title":"byteSize"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BooleanLiteralExprSyntax/asProtocol(_:)-3awqs":{"url":"\/documentation\/macrobuilder\/booleanliteralexprsyntax\/asprotocol(_:)-3awqs","type":"topic","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"FreestandingMacroExpansionSyntax"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"title":"asProtocol(_:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/asProtocol(_:)-3awqs","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"text":"((any ","kind":"text"},{"text":"FreestandingMacroExpansionSyntax","preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P","kind":"typeIdentifier"},{"kind":"text","text":").Type) -> (any "},{"text":"FreestandingMacroExpansionSyntax","preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P","kind":"typeIdentifier"},{"kind":"text","text":")?"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BooleanLiteralExprSyntax/write(to:)":{"url":"\/documentation\/macrobuilder\/booleanliteralexprsyntax\/write(to:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/write(to:)","title":"write(to:)","kind":"symbol","abstract":[{"text":"Prints the raw value of this node to the provided stream.","type":"text"}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"write"},{"kind":"text","text":"<"},{"text":"Target","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"to","kind":"externalParam"},{"kind":"text","text":": "},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Target"},{"kind":"text","text":")"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BooleanLiteralExprSyntax/endPositionBeforeTrailingTrivia":{"kind":"symbol","type":"topic","url":"\/documentation\/macrobuilder\/booleanliteralexprsyntax\/endpositionbeforetrailingtrivia","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/endPositionBeforeTrailingTrivia","title":"endPositionBeforeTrailingTrivia","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"endPositionBeforeTrailingTrivia","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","text":"AbsolutePosition","kind":"typeIdentifier"}],"abstract":[{"text":"The end position of this node’s content, before any trailing trivia.","type":"text"}],"role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BooleanLiteralExprSyntax/asProtocol(_:)-4g8de":{"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/asProtocol(_:)-4g8de","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"((any "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax09NamedDeclB0P","text":"NamedDeclSyntax"},{"kind":"text","text":").Type) -> (any "},{"preciseIdentifier":"s:11SwiftSyntax09NamedDeclB0P","text":"NamedDeclSyntax","kind":"typeIdentifier"},{"kind":"text","text":")?"}],"type":"topic","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"NamedDeclSyntax"},{"text":". Otherwise return ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"url":"\/documentation\/macrobuilder\/booleanliteralexprsyntax\/asprotocol(_:)-4g8de","title":"asProtocol(_:)"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BooleanLiteralExprSyntax/expand(macros:in:indentationWidth:)":{"type":"topic","kind":"symbol","title":"expand(macros:in:indentationWidth:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/expand(macros:in:indentationWidth:)","abstract":[],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"expand","kind":"identifier"},{"text":"(","kind":"text"},{"text":"macros","kind":"externalParam"},{"text":": [","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":" : any ","kind":"text"},{"preciseIdentifier":"s:17SwiftSyntaxMacros5MacroP","text":"Macro","kind":"typeIdentifier"},{"text":".Type], ","kind":"text"},{"text":"in","kind":"externalParam"},{"kind":"text","text":": some "},{"preciseIdentifier":"s:17SwiftSyntaxMacros21MacroExpansionContextP","text":"MacroExpansionContext","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"indentationWidth","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax6TriviaV","text":"Trivia"},{"text":"?) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V"}],"deprecated":true,"url":"\/documentation\/macrobuilder\/booleanliteralexprsyntax\/expand(macros:in:indentationwidth:)"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BooleanLiteralExprSyntax/hasParent":{"role":"symbol","abstract":[{"type":"text","text":"Whether or not this node has a parent."}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/hasParent","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"hasParent"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"url":"\/documentation\/macrobuilder\/booleanliteralexprsyntax\/hasparent","title":"hasParent"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BooleanLiteralExprSyntax/asProtocol(_:)-1h67v":{"role":"symbol","type":"topic","title":"asProtocol(_:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/asProtocol(_:)-1h67v","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"text":"((any ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax014WithStatementsB0P","text":"WithStatementsSyntax"},{"text":").Type) -> (any ","kind":"text"},{"text":"WithStatementsSyntax","preciseIdentifier":"s:11SwiftSyntax014WithStatementsB0P","kind":"typeIdentifier"},{"kind":"text","text":")?"}],"url":"\/documentation\/macrobuilder\/booleanliteralexprsyntax\/asprotocol(_:)-1h67v","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"WithStatementsSyntax"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BooleanLiteralExprSyntax/keyPathInParent":{"type":"topic","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/keyPathInParent","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"keyPathInParent","kind":"identifier"},{"text":": ","kind":"text"},{"text":"AnyKeyPath","preciseIdentifier":"s:s10AnyKeyPathC","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"url":"\/documentation\/macrobuilder\/booleanliteralexprsyntax\/keypathinparent","kind":"symbol","abstract":[],"title":"keyPathInParent"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BooleanLiteralExprSyntax":{"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"BooleanLiteralExprSyntax","kind":"identifier"}],"title":"BooleanLiteralExprSyntax","abstract":[],"navigatorTitle":[{"text":"BooleanLiteralExprSyntax","kind":"identifier"}],"url":"\/documentation\/macrobuilder\/booleanliteralexprsyntax","type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BooleanLiteralExprSyntax/isProtocol(_:)-mimj":{"type":"topic","url":"\/documentation\/macrobuilder\/booleanliteralexprsyntax\/isprotocol(_:)-mimj","title":"isProtocol(_:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/isProtocol(_:)-mimj","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"text":"((any ","kind":"text"},{"text":"WithModifiersSyntax","preciseIdentifier":"s:11SwiftSyntax013WithModifiersB0P","kind":"typeIdentifier"},{"text":").Type) -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"WithModifiersSyntax"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BooleanLiteralExprSyntax/detach()":{"abstract":[],"title":"detach()","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/detach()","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"detach","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"kind":"symbol","deprecated":true,"url":"\/documentation\/macrobuilder\/booleanliteralexprsyntax\/detach()","role":"symbol","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BooleanLiteralExprSyntax/isProtocol(_:)-9yrdb":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/isProtocol(_:)-9yrdb","url":"\/documentation\/macrobuilder\/booleanliteralexprsyntax\/isprotocol(_:)-9yrdb","title":"isProtocol(_:)","type":"topic","role":"symbol","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"code":"WithOptionalCodeBlockSyntax","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"text":"((any ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P","text":"WithOptionalCodeBlockSyntax"},{"kind":"text","text":").Type) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BooleanLiteralExprSyntax/byteRange":{"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"byteRange","kind":"identifier"},{"kind":"text","text":": "},{"text":"ByteSourceRange","preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangeV","kind":"typeIdentifier"}],"url":"\/documentation\/macrobuilder\/booleanliteralexprsyntax\/byterange","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/byteRange","type":"topic","deprecated":true,"role":"symbol","title":"byteRange","kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BooleanLiteralExprSyntax/firstToken(viewMode:)":{"url":"\/documentation\/macrobuilder\/booleanliteralexprsyntax\/firsttoken(viewmode:)","role":"symbol","abstract":[{"type":"text","text":"Returns the first token node that is part of this syntax node."}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/firstToken(viewMode:)","kind":"symbol","title":"firstToken(viewMode:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"firstToken"},{"text":"(","kind":"text"},{"text":"viewMode","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"SyntaxTreeViewMode","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO"},{"kind":"text","text":") -> "},{"text":"TokenSyntax","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","kind":"typeIdentifier"},{"text":"?","kind":"text"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BooleanLiteralExprSyntax/map(_:_:)":{"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/map(_:_:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"map","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"text":"WritableKeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s15WritableKeyPathC"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">, ("},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"rethrows","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"}],"type":"topic","abstract":[],"title":"map(_:_:)","url":"\/documentation\/macrobuilder\/booleanliteralexprsyntax\/map(_:_:)"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BooleanLiteralExprSyntax/firstToken":{"kind":"symbol","title":"firstToken","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"firstToken"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"abstract":[],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/firstToken","url":"\/documentation\/macrobuilder\/booleanliteralexprsyntax\/firsttoken","type":"topic","deprecated":true,"role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BooleanLiteralExprSyntax/asProtocol(_:)-7etxr":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"text":"((any ","kind":"text"},{"text":"WithAttributesSyntax","preciseIdentifier":"s:11SwiftSyntax014WithAttributesB0P","kind":"typeIdentifier"},{"text":").Type) -> (any ","kind":"text"},{"text":"WithAttributesSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax014WithAttributesB0P"},{"kind":"text","text":")?"}],"title":"asProtocol(_:)","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"code":"WithAttributesSyntax","type":"codeVoice"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"kind":"symbol","type":"topic","url":"\/documentation\/macrobuilder\/booleanliteralexprsyntax\/asprotocol(_:)-7etxr","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/asProtocol(_:)-7etxr"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BooleanLiteralExprSyntax/hasError":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/hasError","abstract":[{"text":"Whether the tree contained by this layout has any","type":"text"}],"type":"topic","kind":"symbol","url":"\/documentation\/macrobuilder\/booleanliteralexprsyntax\/haserror","title":"hasError","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"hasError","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BooleanLiteralExprSyntax/index":{"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"index"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SyntaxChildrenIndex","preciseIdentifier":"s:11SwiftSyntax0B13ChildrenIndexV"}],"abstract":[{"text":"The index of this node in a ","type":"text"},{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxChildren","type":"reference","isActive":true},{"text":" collection.","type":"text"}],"kind":"symbol","url":"\/documentation\/macrobuilder\/booleanliteralexprsyntax\/index","title":"index","deprecated":true,"type":"topic","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/index"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BooleanLiteralExprSyntax/previousToken(viewMode:)":{"type":"topic","kind":"symbol","title":"previousToken(viewMode:)","url":"\/documentation\/macrobuilder\/booleanliteralexprsyntax\/previoustoken(viewmode:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/previousToken(viewMode:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"previousToken"},{"text":"(","kind":"text"},{"text":"viewMode","kind":"externalParam"},{"kind":"text","text":": "},{"text":"SyntaxTreeViewMode","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"TokenSyntax","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Recursively walks through the tree to find the token semantically before"},{"text":" ","type":"text"},{"text":"this node.","type":"text"}],"role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BooleanLiteralExprSyntax/trimmedDescription(matching:)":{"abstract":[{"type":"text","text":"The description of this node with pieces that match "},{"type":"codeVoice","code":"matching"},{"text":" removed","type":"text"},{"type":"text","text":" "},{"type":"text","text":"from the leading trivia of the first token and trailing trivia of the"},{"type":"text","text":" "},{"text":"last token.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"trimmedDescription","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"matching"},{"kind":"text","text":": ("},{"text":"TriviaPiece","preciseIdentifier":"s:11SwiftSyntax11TriviaPieceO","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/trimmedDescription(matching:)","url":"\/documentation\/macrobuilder\/booleanliteralexprsyntax\/trimmeddescription(matching:)","type":"topic","kind":"symbol","title":"trimmedDescription(matching:)","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BooleanLiteralExprSyntax/kind":{"abstract":[{"type":"text","text":"The kind of the syntax node, e.g. if it is a "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxKind\/functionDecl"},{"text":".","type":"text"}],"type":"topic","title":"kind","url":"\/documentation\/macrobuilder\/booleanliteralexprsyntax\/kind","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/kind","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"kind","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B4KindO","text":"SyntaxKind"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BooleanLiteralExprSyntax/syntaxTextBytes":{"title":"syntaxTextBytes","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"syntaxTextBytes","kind":"identifier"},{"text":": [","kind":"text"},{"text":"UInt8","kind":"typeIdentifier","preciseIdentifier":"s:s5UInt8V"},{"text":"]","kind":"text"}],"url":"\/documentation\/macrobuilder\/booleanliteralexprsyntax\/syntaxtextbytes","role":"symbol","type":"topic","abstract":[{"text":"Retrieve the syntax text as an array of bytes that models the input","type":"text"},{"type":"text","text":" "},{"type":"text","text":"source even in the presence of invalid UTF-8."}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/syntaxTextBytes","kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BooleanLiteralExprSyntax/id":{"type":"topic","url":"\/documentation\/macrobuilder\/booleanliteralexprsyntax\/id","title":"id","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/id","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"id","kind":"identifier"},{"text":": ","kind":"text"},{"text":"SyntaxIdentifier","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B10IdentifierV"}],"kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Returns a value representing the unique identity of the node."}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BooleanLiteralExprSyntax/formatted(using:)":{"title":"formatted(using:)","url":"\/documentation\/macrobuilder\/booleanliteralexprsyntax\/formatted(using:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"formatted"},{"kind":"text","text":"("},{"text":"using","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:16SwiftBasicFormat0bC0C","text":"BasicFormat"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax"}],"abstract":[],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/formatted(using:)","type":"topic","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BooleanLiteralExprSyntax/with(_:_:)":{"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/with(_:_:)","kind":"symbol","abstract":[{"text":"Returns a new syntax node that has the child at ","type":"text"},{"code":"keyPath","type":"codeVoice"},{"text":" replaced by","type":"text"},{"text":" ","type":"text"},{"code":"value","type":"codeVoice"},{"text":".","type":"text"}],"role":"symbol","title":"with(_:_:)","url":"\/documentation\/macrobuilder\/booleanliteralexprsyntax\/with(_:_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"with","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:s15WritableKeyPathC","text":"WritableKeyPath"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"text":"T","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BooleanLiteralExprSyntax/asProtocol(_:)-6vsg6":{"type":"topic","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"MissingNodeSyntax"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/asProtocol(_:)-6vsg6","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"text":"((any ","kind":"text"},{"text":"MissingNodeSyntax","preciseIdentifier":"s:11SwiftSyntax011MissingNodeB0P","kind":"typeIdentifier"},{"kind":"text","text":").Type) -> (any "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax011MissingNodeB0P","text":"MissingNodeSyntax"},{"kind":"text","text":")?"}],"url":"\/documentation\/macrobuilder\/booleanliteralexprsyntax\/asprotocol(_:)-6vsg6","title":"asProtocol(_:)","kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BooleanLiteralExprSyntax/modifying(_:_:)":{"role":"symbol","kind":"symbol","type":"topic","title":"modifying(_:_:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/modifying(_:_:)","abstract":[],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"modifying","kind":"identifier"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:s15WritableKeyPathC","kind":"typeIdentifier","text":"WritableKeyPath"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"T"},{"text":">, (","kind":"text"},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"url":"\/documentation\/macrobuilder\/booleanliteralexprsyntax\/modifying(_:_:)"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BooleanLiteralExprSyntax/asProtocol(_:)-5oa15":{"url":"\/documentation\/macrobuilder\/booleanliteralexprsyntax\/asprotocol(_:)-5oa15","title":"asProtocol(_:)","role":"symbol","type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/asProtocol(_:)-5oa15","kind":"symbol","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"code":"WithCodeBlockSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"text":"((any ","kind":"text"},{"kind":"typeIdentifier","text":"WithCodeBlockSyntax","preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P"},{"kind":"text","text":").Type) -> (any "},{"preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P","text":"WithCodeBlockSyntax","kind":"typeIdentifier"},{"text":")?","kind":"text"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BooleanLiteralExprSyntax/position":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/position","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"position"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","text":"AbsolutePosition"}],"type":"topic","abstract":[{"type":"text","text":"The absolute position of the starting point of this node. If the first token"},{"text":" ","type":"text"},{"type":"text","text":"is with leading trivia, the position points to the start of the leading"},{"text":" ","type":"text"},{"type":"text","text":"trivia."}],"url":"\/documentation\/macrobuilder\/booleanliteralexprsyntax\/position","title":"position","kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SyntaxKind/functionDecl":{"url":"\/documentation\/macrobuilder\/syntaxkind\/functiondecl","fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"kind":"identifier","text":"functionDecl"}],"title":"SyntaxKind.functionDecl","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxKind\/functionDecl","role":"symbol","type":"topic","kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BooleanLiteralExprSyntax/trimmed(matching:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"trimmed"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"matching"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax11TriviaPieceO","text":"TriviaPiece"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"A copy of this node with pieces that match "},{"type":"codeVoice","code":"matching"},{"type":"text","text":" trimmed from the"},{"text":" ","type":"text"},{"type":"text","text":"leading trivia of the first token and trailing trivia of the last token."}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/trimmed(matching:)","url":"\/documentation\/macrobuilder\/booleanliteralexprsyntax\/trimmed(matching:)","role":"symbol","title":"trimmed(matching:)"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BooleanLiteralExprSyntax/init(validating:)":{"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"validating","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"abstract":[{"type":"text","text":"If "},{"code":"node","type":"codeVoice"},{"text":" has contains no syntax errors, return ","type":"text"},{"code":"node","type":"codeVoice"},{"text":", otherwise","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"throw an error with diagnostics describing the syntax errors."}],"title":"init(validating:)","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/init(validating:)","kind":"symbol","type":"topic","url":"\/documentation\/macrobuilder\/booleanliteralexprsyntax\/init(validating:)"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BooleanLiteralExprSyntax/children(viewMode:)":{"title":"children(viewMode:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"children","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"viewMode"},{"text":": ","kind":"text"},{"text":"SyntaxTreeViewMode","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO"},{"kind":"text","text":") -> "},{"text":"SyntaxChildren","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ChildrenV"}],"url":"\/documentation\/macrobuilder\/booleanliteralexprsyntax\/children(viewmode:)","role":"symbol","type":"topic","abstract":[{"type":"text","text":"A sequence over the children of this node."}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/children(viewMode:)","kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BooleanLiteralExprSyntax/expand(macroSpecs:contextGenerator:indentationWidth:)":{"type":"topic","url":"\/documentation\/macrobuilder\/booleanliteralexprsyntax\/expand(macrospecs:contextgenerator:indentationwidth:)","title":"expand(macroSpecs:contextGenerator:indentationWidth:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/expand(macroSpecs:contextGenerator:indentationWidth:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"expand"},{"text":"<","kind":"text"},{"text":"Context","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"macroSpecs","kind":"externalParam"},{"text":": [","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:25SwiftSyntaxMacroExpansion0C4SpecV","text":"MacroSpec"},{"text":"], ","kind":"text"},{"kind":"externalParam","text":"contextGenerator"},{"text":": (","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier","text":"Syntax"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Context"},{"text":", ","kind":"text"},{"text":"indentationWidth","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Trivia","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax6TriviaV"},{"kind":"text","text":"?) -> "},{"preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier","text":"Syntax"}],"kind":"symbol","role":"symbol","abstract":[]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BooleanLiteralExprSyntax/startLocation(converter:afterLeadingTrivia:)":{"abstract":[{"type":"text","text":"The starting location, in the provided file, of this Syntax node."}],"title":"startLocation(converter:afterLeadingTrivia:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"startLocation","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"converter"},{"kind":"text","text":": "},{"text":"SourceLocationConverter","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"afterLeadingTrivia"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:11SwiftSyntax14SourceLocationV","text":"SourceLocation","kind":"typeIdentifier"}],"role":"symbol","type":"topic","url":"\/documentation\/macrobuilder\/booleanliteralexprsyntax\/startlocation(converter:afterleadingtrivia:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/startLocation(converter:afterLeadingTrivia:)","kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BooleanLiteralExprSyntax/isProtocol(_:)-3g66x":{"title":"isProtocol(_:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/isProtocol(_:)-3g66x","url":"\/documentation\/macrobuilder\/booleanliteralexprsyntax\/isprotocol(_:)-3g66x","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"text":"((any ","kind":"text"},{"text":"BracedSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax06BracedB0P"},{"kind":"text","text":").Type) -> "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"BracedSyntax"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BooleanLiteralExprSyntax/isProtocol(_:)-2fg13":{"url":"\/documentation\/macrobuilder\/booleanliteralexprsyntax\/isprotocol(_:)-2fg13","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"text":"((any ","kind":"text"},{"text":"ParenthesizedSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013ParenthesizedB0P"},{"kind":"text","text":").Type) -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"code":"ParenthesizedSyntax","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"type":"topic","kind":"symbol","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/isProtocol(_:)-2fg13","title":"isProtocol(_:)"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BooleanLiteralExprSyntax/asProtocol(_:)-5anp":{"title":"asProtocol(_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"text":"((any ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax09DeclGroupB0P","text":"DeclGroupSyntax"},{"text":").Type) -> (any ","kind":"text"},{"text":"DeclGroupSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax09DeclGroupB0P"},{"text":")?","kind":"text"}],"url":"\/documentation\/macrobuilder\/booleanliteralexprsyntax\/asprotocol(_:)-5anp","role":"symbol","type":"topic","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"DeclGroupSyntax"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/asProtocol(_:)-5anp","kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BooleanLiteralExprSyntax/isProtocol(_:)-4s2jm":{"kind":"symbol","type":"topic","url":"\/documentation\/macrobuilder\/booleanliteralexprsyntax\/isprotocol(_:)-4s2jm","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/isProtocol(_:)-4s2jm","title":"isProtocol(_:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"isProtocol"},{"text":"((any ","kind":"text"},{"text":"WithTrailingCommaSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax017WithTrailingCommaB0P"},{"text":").Type) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"code":"WithTrailingCommaSyntax","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BooleanLiteralExprSyntax/asProtocol(_:)-9jy73":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/asProtocol(_:)-9jy73","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"code":"WithGenericParametersSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"type":"topic","kind":"symbol","url":"\/documentation\/macrobuilder\/booleanliteralexprsyntax\/asprotocol(_:)-9jy73","title":"asProtocol(_:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"asProtocol"},{"text":"((any ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P","text":"WithGenericParametersSyntax"},{"text":").Type) -> (any ","kind":"text"},{"kind":"typeIdentifier","text":"WithGenericParametersSyntax","preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P"},{"text":")?","kind":"text"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BooleanLiteralExprSyntax/token(at:)":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"token","kind":"identifier"},{"text":"(","kind":"text"},{"text":"at","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","text":"AbsolutePosition"},{"text":") -> ","kind":"text"},{"text":"TokenSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"kind":"text","text":"?"}],"type":"topic","kind":"symbol","role":"symbol","abstract":[{"text":"Find the syntax token at the given absolute position within this","type":"text"},{"type":"text","text":" "},{"text":"syntax node or any of its children.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/token(at:)","url":"\/documentation\/macrobuilder\/booleanliteralexprsyntax\/token(at:)","title":"token(at:)"}}}