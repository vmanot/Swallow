{"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"trimmed","kind":"identifier"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":" { "},{"text":"get","kind":"keyword"},{"kind":"text","text":" }"}],"languages":["swift"]}]}],"identifier":{"url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BinaryOperatorExprSyntax\/trimmed","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BinaryOperatorExprSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BinaryOperatorExprSyntax\/SyntaxProtocol-Implementations"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/macrobuilder\/binaryoperatorexprsyntax\/trimmed"]}],"abstract":[{"text":"A copy of this node without the leading trivia of the first token in the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"node and the trailing trivia of the last token in the node."}],"metadata":{"roleHeading":"Instance Property","externalID":"s:11SwiftSyntax0B8ProtocolPAAE7trimmedxvp::SYNTHESIZED::s:11SwiftSyntax018BinaryOperatorExprB0V","title":"trimmed","role":"symbol","extendedModule":"SwiftSyntax","modules":[{"relatedModules":["SwiftSyntax"],"name":"MacroBuilder"}],"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"trimmed"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"symbolKind":"property"},"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BinaryOperatorExprSyntax/trimmed":{"url":"\/documentation\/macrobuilder\/binaryoperatorexprsyntax\/trimmed","type":"topic","title":"trimmed","abstract":[{"type":"text","text":"A copy of this node without the leading trivia of the first token in the"},{"type":"text","text":" "},{"type":"text","text":"node and the trailing trivia of the last token in the node."}],"kind":"symbol","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"trimmed"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BinaryOperatorExprSyntax\/trimmed"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BinaryOperatorExprSyntax":{"url":"\/documentation\/macrobuilder\/binaryoperatorexprsyntax","title":"BinaryOperatorExprSyntax","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BinaryOperatorExprSyntax","type":"topic","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BinaryOperatorExprSyntax","kind":"identifier"}],"abstract":[{"type":"text","text":"An operator like "},{"type":"codeVoice","code":"+"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"-"},{"text":".","type":"text"}],"navigatorTitle":[{"text":"BinaryOperatorExprSyntax","kind":"identifier"}],"kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BinaryOperatorExprSyntax/SyntaxProtocol-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BinaryOperatorExprSyntax\/SyntaxProtocol-Implementations","kind":"article","title":"SyntaxProtocol Implementations","role":"collectionGroup","type":"topic","abstract":[],"url":"\/documentation\/macrobuilder\/binaryoperatorexprsyntax\/syntaxprotocol-implementations"}}}