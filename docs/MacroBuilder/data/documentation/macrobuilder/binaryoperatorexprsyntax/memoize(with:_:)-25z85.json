{"metadata":{"externalID":"s:SH7SwallowE7memoize4with_qd__AA6_CacheCyAA011MemoizationD3KeyVypGSg_s0F4PathCyxqd__GtlF::SYNTHESIZED::s:11SwiftSyntax018BinaryOperatorExprB0V","title":"memoize(with:_:)","roleHeading":"Instance Method","modules":[{"relatedModules":["Swift"],"name":"MacroBuilder"}],"role":"symbol","extendedModule":"Swift","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"memoize","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"with"},{"text":": ","kind":"text"},{"text":"MemoizationCache","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"KeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"text":"T","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}]},"abstract":[{"text":"Memoize the result of the execution of a predicate for the ","type":"text"},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":" receiver."}],"schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"memoize","kind":"identifier"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"with"},{"kind":"text","text":" "},{"text":"cache","kind":"internalParam"},{"kind":"text","text":": "},{"text":"MemoizationCache","kind":"typeIdentifier"},{"text":"? = MemoizationCache.shared, ","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"text":"keyPath","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC","text":"KeyPath"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"platforms":["macOS"]}]},{"parameters":[{"content":[{"inlineContent":[{"type":"text","text":"The shared cache to use; "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" disables caching and simply returns the result of "},{"type":"codeVoice","code":"predicate"},{"type":"text","text":" directly"}],"type":"paragraph"}],"name":"cache"}],"kind":"parameters"},{"kind":"content","content":[{"type":"heading","anchor":"return-value","text":"Return Value","level":2},{"inlineContent":[{"type":"text","text":"The result from the "},{"type":"codeVoice","code":"predicate"},{"text":", either a previously cached value, or the result of executing the ","type":"text"},{"type":"codeVoice","code":"predicate"}],"type":"paragraph"}]},{"content":[{"text":"Discussion","type":"heading","anchor":"discussion","level":2},{"inlineContent":[{"text":"The source subject (the receiver) and the result object (the return value) should be value types, and the ","type":"text"},{"code":"predicate","type":"codeVoice"},{"type":"text","text":" must be a "},{"type":"emphasis","inlineContent":[{"text":"pure","type":"text"}]},{"type":"text","text":" function that captures "},{"inlineContent":[{"type":"text","text":"no state"}],"type":"emphasis"},{"text":", in that:","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Its return value is the same for the same arguments (no variation with local static variables, non-local variables, mutable reference arguments or input streams from I\/O devices)."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Its evaluation has no side effects (no mutation of local static variables, non-local variables, mutable reference arguments or I\/O streams)."}]}]}],"type":"orderedList"},{"name":"Note","type":"aside","style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The calling functionâ€™s source file and line are used as the cache key, so care must be taken to avoid having multiple calls to "},{"code":"memoize","type":"codeVoice"},{"text":" occur from a single line of source code.","type":"text"}]}]},{"style":"note","content":[{"inlineContent":[{"text":"Re-Throws and errors from ","type":"text"},{"code":"predicate","type":"codeVoice"}],"type":"paragraph"}],"name":"Throws","type":"aside"},{"name":"Complexity","content":[{"inlineContent":[{"type":"text","text":"Around O(1) for a successful cache hit, otherwise the complexity of the keyPath execution"}],"type":"paragraph"}],"type":"aside","style":"note"}],"kind":"content"}],"sections":[],"identifier":{"url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BinaryOperatorExprSyntax\/memoize(with:_:)-25z85","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BinaryOperatorExprSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BinaryOperatorExprSyntax\/Hashable-Implementations"]]},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/macrobuilder\/binaryoperatorexprsyntax\/memoize(with:_:)-25z85"]}],"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BinaryOperatorExprSyntax/Hashable-Implementations":{"url":"\/documentation\/macrobuilder\/binaryoperatorexprsyntax\/hashable-implementations","type":"topic","title":"Hashable Implementations","kind":"article","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BinaryOperatorExprSyntax\/Hashable-Implementations","role":"collectionGroup"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BinaryOperatorExprSyntax":{"url":"\/documentation\/macrobuilder\/binaryoperatorexprsyntax","title":"BinaryOperatorExprSyntax","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BinaryOperatorExprSyntax","type":"topic","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BinaryOperatorExprSyntax","kind":"identifier"}],"abstract":[{"type":"text","text":"An operator like "},{"type":"codeVoice","code":"+"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"-"},{"text":".","type":"text"}],"navigatorTitle":[{"text":"BinaryOperatorExprSyntax","kind":"identifier"}],"kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BinaryOperatorExprSyntax/memoize(with:_:)-25z85":{"abstract":[{"text":"Memoize the result of the execution of a predicate for the ","type":"text"},{"code":"Hashable","type":"codeVoice"},{"text":" receiver.","type":"text"}],"title":"memoize(with:_:)","kind":"symbol","url":"\/documentation\/macrobuilder\/binaryoperatorexprsyntax\/memoize(with:_:)-25z85","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"memoize"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"text":"with","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"MemoizationCache","kind":"typeIdentifier"},{"kind":"text","text":"?, "},{"text":"KeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">) -> "},{"text":"T","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BinaryOperatorExprSyntax\/memoize(with:_:)-25z85","type":"topic"}}}