{"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"eraseToAnyHashable","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"AnyHashable","kind":"typeIdentifier","preciseIdentifier":"s:s11AnyHashableV"}]}]}],"metadata":{"role":"symbol","roleHeading":"Instance Method","extendedModule":"Swift","title":"eraseToAnyHashable()","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"eraseToAnyHashable","kind":"identifier"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:s11AnyHashableV","kind":"typeIdentifier","text":"AnyHashable"}],"modules":[{"relatedModules":["Swift"],"name":"MacroBuilder"}],"externalID":"s:SH7SwallowE18eraseToAnyHashables0dE0VyF::SYNTHESIZED::s:11SwiftSyntax018BinaryOperatorExprB0V","symbolKind":"method"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BinaryOperatorExprSyntax\/eraseToAnyHashable()"},"sections":[],"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/macrobuilder\/binaryoperatorexprsyntax\/erasetoanyhashable()"]}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BinaryOperatorExprSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BinaryOperatorExprSyntax\/Hashable-Implementations"]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"abstract":[{"text":"Wraps this ","type":"text"},{"code":"Hashable","type":"codeVoice"},{"type":"text","text":" with a type-eraser."}],"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BinaryOperatorExprSyntax/Hashable-Implementations":{"url":"\/documentation\/macrobuilder\/binaryoperatorexprsyntax\/hashable-implementations","type":"topic","title":"Hashable Implementations","kind":"article","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BinaryOperatorExprSyntax\/Hashable-Implementations","role":"collectionGroup"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BinaryOperatorExprSyntax":{"url":"\/documentation\/macrobuilder\/binaryoperatorexprsyntax","title":"BinaryOperatorExprSyntax","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BinaryOperatorExprSyntax","type":"topic","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BinaryOperatorExprSyntax","kind":"identifier"}],"abstract":[{"type":"text","text":"An operator like "},{"type":"codeVoice","code":"+"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"-"},{"text":".","type":"text"}],"navigatorTitle":[{"text":"BinaryOperatorExprSyntax","kind":"identifier"}],"kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BinaryOperatorExprSyntax/eraseToAnyHashable()":{"role":"symbol","url":"\/documentation\/macrobuilder\/binaryoperatorexprsyntax\/erasetoanyhashable()","kind":"symbol","type":"topic","title":"eraseToAnyHashable()","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BinaryOperatorExprSyntax\/eraseToAnyHashable()","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"eraseToAnyHashable","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"AnyHashable","preciseIdentifier":"s:s11AnyHashableV","kind":"typeIdentifier"}],"abstract":[{"text":"Wraps this ","type":"text"},{"code":"Hashable","type":"codeVoice"},{"type":"text","text":" with a type-eraser."}]}}}