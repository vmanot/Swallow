{"sections":[],"deprecationSummary":[{"inlineContent":[{"type":"text","text":"Use `Syntax.init` for upcasting."}],"type":"paragraph"}],"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"cast","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax"},{"text":".Type) -> ","kind":"text"},{"text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier"}],"extendedModule":"SwiftSyntax","title":"cast(_:)","externalID":"s:11SwiftSyntax0B8ProtocolPAAE4castyAA0B0VAFmF::SYNTHESIZED::s:11SwiftSyntax011CatchClauseB0V","symbolKind":"method","platforms":[],"modules":[{"name":"MacroBuilder","relatedModules":["SwiftSyntax"]}],"roleHeading":"Instance Method","role":"symbol"},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/CatchClauseSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/CatchClauseSyntax\/SyntaxProtocol-Implementations"]]},"abstract":[{"type":"text","text":"Force-cast the current syntax node to "},{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax","type":"reference","isActive":true},{"text":" node..","type":"text"}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cast"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"text":"syntaxType","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax","text":"Syntax"},{"kind":"text","text":".Type) -> "},{"text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"content":[{"anchor":"return-value","text":"Return Value","level":2,"type":"heading"},{"inlineContent":[{"text":"The ","type":"text"},{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax","isActive":true,"type":"reference"},{"text":" node created from the current syntax node, as the node can always be upcast to ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax","isActive":true},{"type":"text","text":" node."}],"type":"paragraph"}],"kind":"content"},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"name":"Note","style":"note","type":"aside","content":[{"inlineContent":[{"type":"text","text":"This method overloads the general "},{"type":"codeVoice","code":"as"},{"text":" method and is marked deprecated to produce a warning","type":"text"},{"type":"text","text":" "},{"type":"text","text":"informing the user the upcast should be performed using the base nodeâ€™s initializer."}],"type":"paragraph"}]}]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/CatchClauseSyntax\/cast(_:)-8ewlx"},"variants":[{"paths":["\/documentation\/macrobuilder\/catchclausesyntax\/cast(_:)-8ewlx"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/CatchClauseSyntax":{"kind":"symbol","role":"symbol","abstract":[],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"CatchClauseSyntax","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/CatchClauseSyntax","type":"topic","title":"CatchClauseSyntax","url":"\/documentation\/macrobuilder\/catchclausesyntax","navigatorTitle":[{"kind":"identifier","text":"CatchClauseSyntax"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/CatchClauseSyntax/SyntaxProtocol-Implementations":{"title":"SyntaxProtocol Implementations","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/CatchClauseSyntax\/SyntaxProtocol-Implementations","abstract":[],"kind":"article","url":"\/documentation\/macrobuilder\/catchclausesyntax\/syntaxprotocol-implementations","type":"topic","role":"collectionGroup"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/Syntax":{"abstract":[{"type":"text","text":"A Syntax node represents a tree of nodes with tokens at the leaves."},{"text":" ","type":"text"},{"type":"text","text":"Each node has accessors for its known children, and allows efficient"},{"text":" ","type":"text"},{"text":"iteration over the children through its ","type":"text"},{"type":"codeVoice","code":"children"},{"text":" property.","type":"text"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Syntax"}],"url":"\/documentation\/macrobuilder\/syntax","title":"Syntax","type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Syntax","kind":"identifier"}],"kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/CatchClauseSyntax/cast(_:)-8ewlx":{"title":"cast(_:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cast"},{"kind":"text","text":"("},{"text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"text":"Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/CatchClauseSyntax\/cast(_:)-8ewlx","abstract":[{"type":"text","text":"Force-cast the current syntax node to "},{"isActive":true,"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax","type":"reference"},{"text":" node..","type":"text"}],"deprecated":true,"url":"\/documentation\/macrobuilder\/catchclausesyntax\/cast(_:)-8ewlx","role":"symbol"}}}