{"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"init"},{"text":"(","kind":"text"},{"text":"validating","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"node","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"inlineContent":[{"text":"This allows clients to e.g. write ","type":"text"},{"code":"try DeclSyntax(validating: \"struct Foo {}\")","type":"codeVoice"},{"text":" ","type":"text"},{"text":"which constructs a ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DeclSyntax","type":"reference"},{"text":" thatâ€™s guaranteed to be free of syntax","type":"text"},{"type":"text","text":" "},{"type":"text","text":"errors."}],"type":"paragraph"}],"kind":"content"}],"sections":[],"identifier":{"url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionTypeSyntax\/init(validating:)","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/macrobuilder\/packexpansiontypesyntax\/init(validating:)"]}],"kind":"symbol","metadata":{"symbolKind":"init","roleHeading":"Initializer","externalID":"s:11SwiftSyntax0B8ProtocolP0aB7BuilderE10validatingxx_tKcfc::SYNTHESIZED::s:11SwiftSyntax017PackExpansionTypeB0V","modules":[{"relatedModules":["SwiftSyntax"],"name":"MacroBuilder"}],"fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"text":"validating","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"extendedModule":"SwiftSyntax","title":"init(validating:)","role":"symbol"},"abstract":[{"type":"text","text":"If "},{"type":"codeVoice","code":"node"},{"type":"text","text":" has contains no syntax errors, return "},{"type":"codeVoice","code":"node"},{"type":"text","text":", otherwise"},{"type":"text","text":" "},{"type":"text","text":"throw an error with diagnostics describing the syntax errors."}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionTypeSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionTypeSyntax\/SyntaxProtocol-Implementations"]]},"schemaVersion":{"minor":3,"major":0,"patch":0},"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/PackExpansionTypeSyntax":{"kind":"symbol","navigatorTitle":[{"text":"PackExpansionTypeSyntax","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionTypeSyntax","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"PackExpansionTypeSyntax","kind":"identifier"}],"abstract":[],"title":"PackExpansionTypeSyntax","url":"\/documentation\/macrobuilder\/packexpansiontypesyntax"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/DeclSyntax":{"title":"DeclSyntax","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DeclSyntax","navigatorTitle":[{"text":"DeclSyntax","kind":"identifier"}],"abstract":[],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DeclSyntax"}],"type":"topic","role":"symbol","url":"\/documentation\/macrobuilder\/declsyntax"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/PackExpansionTypeSyntax/init(validating:)":{"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionTypeSyntax\/init(validating:)","abstract":[{"text":"If ","type":"text"},{"type":"codeVoice","code":"node"},{"type":"text","text":" has contains no syntax errors, return "},{"type":"codeVoice","code":"node"},{"text":", otherwise","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"throw an error with diagnostics describing the syntax errors."}],"url":"\/documentation\/macrobuilder\/packexpansiontypesyntax\/init(validating:)","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"text":"validating","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"}],"title":"init(validating:)","role":"symbol","kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/PackExpansionTypeSyntax/SyntaxProtocol-Implementations":{"abstract":[],"kind":"article","url":"\/documentation\/macrobuilder\/packexpansiontypesyntax\/syntaxprotocol-implementations","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionTypeSyntax\/SyntaxProtocol-Implementations","title":"SyntaxProtocol Implementations","role":"collectionGroup","type":"topic"}}}