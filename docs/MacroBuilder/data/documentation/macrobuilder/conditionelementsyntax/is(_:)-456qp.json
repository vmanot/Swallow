{"schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"`is`"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"roleHeading":"Instance Method","externalID":"s:11SwiftSyntax0B8ProtocolPAAE2isySbqd__mAaBRd__lF::SYNTHESIZED::s:11SwiftSyntax016ConditionElementB0V","modules":[{"relatedModules":["SwiftSyntax"],"name":"MacroBuilder"}],"title":"is(_:)","role":"symbol","extendedModule":"SwiftSyntax"},"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/is(_:)-456qp"},"abstract":[{"text":"Checks if the current syntax node can be cast to a given specialized syntax type.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/SyntaxProtocol-Implementations"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/macrobuilder\/conditionelementsyntax\/is(_:)-456qp"]}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"`is`","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"text":"syntaxType","kind":"internalParam"},{"kind":"text","text":": "},{"text":"S","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":" ","kind":"text"},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"text":"S","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"text":"SyntaxProtocol","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxProtocol"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"level":2,"anchor":"return-value","type":"heading","text":"Return Value"},{"inlineContent":[{"type":"text","text":""},{"code":"true","type":"codeVoice"},{"type":"text","text":" if the node can be cast, "},{"code":"false","type":"codeVoice"},{"text":" otherwise.","type":"text"}],"type":"paragraph"}]}],"sections":[],"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementSyntax/is(_:)-456qp":{"abstract":[{"text":"Checks if the current syntax node can be cast to a given specialized syntax type.","type":"text"}],"url":"\/documentation\/macrobuilder\/conditionelementsyntax\/is(_:)-456qp","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"`is`","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"S"},{"text":">(","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/is(_:)-456qp","type":"topic","kind":"symbol","title":"is(_:)","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementSyntax":{"kind":"symbol","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ConditionElementSyntax","kind":"identifier"}],"title":"ConditionElementSyntax","abstract":[],"navigatorTitle":[{"kind":"identifier","text":"ConditionElementSyntax"}],"url":"\/documentation\/macrobuilder\/conditionelementsyntax","type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementSyntax/SyntaxProtocol-Implementations":{"title":"SyntaxProtocol Implementations","abstract":[],"role":"collectionGroup","type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/SyntaxProtocol-Implementations","kind":"article","url":"\/documentation\/macrobuilder\/conditionelementsyntax\/syntaxprotocol-implementations"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SyntaxProtocol":{"title":"SyntaxProtocol","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxProtocol","navigatorTitle":[{"text":"SyntaxProtocol","kind":"identifier"}],"abstract":[{"text":"Provide common functionality for specialized syntax nodes. Extend this","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"protocol to provide common functionality for all syntax nodes."}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"SyntaxProtocol","kind":"identifier"}],"type":"topic","role":"symbol","url":"\/documentation\/macrobuilder\/syntaxprotocol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"}}}