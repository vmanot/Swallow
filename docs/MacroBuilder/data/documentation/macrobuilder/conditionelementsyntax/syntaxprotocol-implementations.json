{"sections":[],"kind":"article","metadata":{"roleHeading":"API Collection","title":"SyntaxProtocol Implementations","modules":[{"name":"MacroBuilder"}],"role":"collectionGroup"},"identifier":{"url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/SyntaxProtocol-Implementations","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/macrobuilder\/conditionelementsyntax\/syntaxprotocol-implementations"]}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax"]]},"topicSections":[{"identifiers":["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/init(_:)-6jc3c","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/init(validating:)"],"generated":true,"anchor":"Initializers","title":"Initializers"},{"identifiers":["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/byteRange","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/byteSize","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/byteSizeAfterTrimmingTrivia","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/contentLength","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/debugDescription","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/description","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/detached","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/endPosition","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/endPositionBeforeTrailingTrivia","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/firstToken","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/hasError","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/hasMaximumNestingLevelOverflow","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/hasParent","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/hasSequenceExpr","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/hasWarning","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/id","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/index","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/isImplicit","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/keyPathInParent","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/kind","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/lastToken","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/leadingTrivia","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/leadingTriviaLength","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/nextToken","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/parent","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/position","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/positionAfterSkippingLeadingTrivia","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/previousToken","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/root","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/syntaxNodeType","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/syntaxTextBytes","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/totalByteRange","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/totalLength","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/trailingTrivia","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/trailingTriviaLength","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/trimmed","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/trimmedByteRange","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/trimmedDescription","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/trimmedLength"],"generated":true,"anchor":"Instance-Properties","title":"Instance Properties"},{"identifiers":["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/allMacroLexicalContexts(enclosingSyntax:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/as(_:)-20ctp","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/as(_:)-90ial","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/as(_:)-vfyg","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/asMacroLexicalContext()","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/asProtocol(_:)-18ct","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/asProtocol(_:)-1e49a","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/asProtocol(_:)-1ekoi","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/asProtocol(_:)-1zsvz","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/asProtocol(_:)-2amib","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/asProtocol(_:)-35tbc","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/asProtocol(_:)-4ak1l","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/asProtocol(_:)-5ah1u","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/asProtocol(_:)-6d5m6","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/asProtocol(_:)-6lblc","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/asProtocol(_:)-7uehk","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/asProtocol(_:)-90mly","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/asProtocol(_:)-9r6ug","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/asProtocol(_:)-yan2","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/cast(_:)-2renf","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/cast(_:)-7s0r4","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/cast(_:)-81sk","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/children(viewMode:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/debugDescription(includeTrivia:converter:mark:indentString:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/detach()","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/endLocation(converter:afterTrailingTrivia:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/expand(macroSpecs:contextGenerator:indentationWidth:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/expand(macros:contextGenerator:indentationWidth:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/expand(macros:in:indentationWidth:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/firstToken(viewMode:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/formatted(using:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/is(_:)-456qp","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/is(_:)-6tne","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/is(_:)-koj2","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/isProtocol(_:)-1qrpy","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/isProtocol(_:)-1um14","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/isProtocol(_:)-26s4n","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/isProtocol(_:)-3an6i","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/isProtocol(_:)-3zksb","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/isProtocol(_:)-5hpov","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/isProtocol(_:)-5ox2k","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/isProtocol(_:)-61hv5","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/isProtocol(_:)-6lv9r","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/isProtocol(_:)-7hy1w","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/isProtocol(_:)-7mci1","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/isProtocol(_:)-82ab4","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/isProtocol(_:)-8z2i9","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/isProtocol(_:)-9ohbe","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/lastToken(viewMode:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/map(_:_:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/modifying(_:_:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/nextToken(viewMode:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/node(at:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/previousToken(viewMode:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/startLocation(converter:afterLeadingTrivia:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/token(at:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/tokens(viewMode:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/trimmed(matching:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/trimmedDescription(matching:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/with(_:_:)-9p2z6","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/write(to:)"],"anchor":"Instance-Methods","title":"Instance Methods","generated":true}],"schemaVersion":{"patch":0,"major":0,"minor":3},"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementSyntax/asProtocol(_:)-6d5m6":{"title":"asProtocol(_:)","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"code":"ParenthesizedSyntax","type":"codeVoice"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/asProtocol(_:)-6d5m6","type":"topic","url":"\/documentation\/macrobuilder\/conditionelementsyntax\/asprotocol(_:)-6d5m6","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"((any "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013ParenthesizedB0P","text":"ParenthesizedSyntax"},{"kind":"text","text":").Type) -> (any "},{"preciseIdentifier":"s:11SwiftSyntax013ParenthesizedB0P","text":"ParenthesizedSyntax","kind":"typeIdentifier"},{"kind":"text","text":")?"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/Syntax":{"abstract":[{"type":"text","text":"A Syntax node represents a tree of nodes with tokens at the leaves."},{"text":" ","type":"text"},{"type":"text","text":"Each node has accessors for its known children, and allows efficient"},{"text":" ","type":"text"},{"text":"iteration over the children through its ","type":"text"},{"type":"codeVoice","code":"children"},{"text":" property.","type":"text"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Syntax"}],"url":"\/documentation\/macrobuilder\/syntax","title":"Syntax","type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Syntax","kind":"identifier"}],"kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementSyntax/keyPathInParent":{"title":"keyPathInParent","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/keyPathInParent","url":"\/documentation\/macrobuilder\/conditionelementsyntax\/keypathinparent","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"keyPathInParent"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s10AnyKeyPathC","kind":"typeIdentifier","text":"AnyKeyPath"},{"text":"?","kind":"text"}],"role":"symbol","abstract":[],"type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementSyntax/isProtocol(_:)-6lv9r":{"type":"topic","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithOptionalCodeBlockSyntax"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/isProtocol(_:)-6lv9r","url":"\/documentation\/macrobuilder\/conditionelementsyntax\/isprotocol(_:)-6lv9r","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"isProtocol"},{"text":"((any ","kind":"text"},{"text":"WithOptionalCodeBlockSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P"},{"text":").Type) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"title":"isProtocol(_:)","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementSyntax/isProtocol(_:)-7mci1":{"title":"isProtocol(_:)","kind":"symbol","url":"\/documentation\/macrobuilder\/conditionelementsyntax\/isprotocol(_:)-7mci1","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/isProtocol(_:)-7mci1","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"((any "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P","text":"WithCodeBlockSyntax"},{"kind":"text","text":").Type) -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"role":"symbol","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithCodeBlockSyntax"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementSyntax/isProtocol(_:)-1um14":{"type":"topic","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"BracedSyntax"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/isProtocol(_:)-1um14","url":"\/documentation\/macrobuilder\/conditionelementsyntax\/isprotocol(_:)-1um14","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"isProtocol"},{"kind":"text","text":"((any "},{"preciseIdentifier":"s:11SwiftSyntax06BracedB0P","text":"BracedSyntax","kind":"typeIdentifier"},{"kind":"text","text":").Type) -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"title":"isProtocol(_:)","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementSyntax/syntaxNodeType":{"title":"syntaxNodeType","kind":"symbol","url":"\/documentation\/macrobuilder\/conditionelementsyntax\/syntaxnodetype","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/syntaxNodeType","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"syntaxNodeType"},{"kind":"text","text":": any "},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP","kind":"typeIdentifier","text":"SyntaxProtocol"},{"text":".Type","kind":"text"}],"role":"symbol","abstract":[{"text":"The dynamic metatype of the concrete node.","type":"text"}],"type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementSyntax/leadingTrivia":{"abstract":[{"text":"The leading trivia of this syntax node.","type":"text"}],"type":"topic","title":"leadingTrivia","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/leadingTrivia","kind":"symbol","role":"symbol","url":"\/documentation\/macrobuilder\/conditionelementsyntax\/leadingtrivia","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"leadingTrivia"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Trivia","preciseIdentifier":"s:11SwiftSyntax6TriviaV"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementSyntax/detached":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/detached","title":"detached","type":"topic","url":"\/documentation\/macrobuilder\/conditionelementsyntax\/detached","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"detached","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"}],"abstract":[{"text":"Return this subtree with this node as the root, ie. detach this node","type":"text"},{"type":"text","text":" "},{"type":"text","text":"from its parent."}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementSyntax/tokens(viewMode:)":{"kind":"symbol","type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/tokens(viewMode:)","abstract":[{"type":"text","text":"Sequence of tokens that are part of this Syntax node."}],"url":"\/documentation\/macrobuilder\/conditionelementsyntax\/tokens(viewmode:)","title":"tokens(viewMode:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"tokens"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"viewMode"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","text":"SyntaxTreeViewMode","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax13TokenSequenceV","kind":"typeIdentifier","text":"TokenSequence"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementSyntax/as(_:)-90ial":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/as(_:)-90ial","url":"\/documentation\/macrobuilder\/conditionelementsyntax\/as(_:)-90ial","abstract":[{"text":"Casts the current syntax node to its own type.","type":"text"}],"role":"symbol","deprecated":true,"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"`as`"},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":".Type) -> "},{"text":"Self","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"kind":"symbol","title":"as(_:)"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementSyntax/startLocation(converter:afterLeadingTrivia:)":{"title":"startLocation(converter:afterLeadingTrivia:)","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/startLocation(converter:afterLeadingTrivia:)","url":"\/documentation\/macrobuilder\/conditionelementsyntax\/startlocation(converter:afterleadingtrivia:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"startLocation","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"converter"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC","text":"SourceLocationConverter","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"afterLeadingTrivia","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:11SwiftSyntax14SourceLocationV","text":"SourceLocation","kind":"typeIdentifier"}],"role":"symbol","abstract":[{"type":"text","text":"The starting location, in the provided file, of this Syntax node."}],"type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementSyntax/as(_:)-20ctp":{"role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"`as`","kind":"identifier"},{"kind":"text","text":"("},{"text":"Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"text":".Type) -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"deprecated":true,"title":"as(_:)","abstract":[{"text":"Attempts to upcast the current syntax node to ","type":"text"},{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax","type":"reference","isActive":true},{"text":" node.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/as(_:)-20ctp","url":"\/documentation\/macrobuilder\/conditionelementsyntax\/as(_:)-20ctp"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementSyntax/id":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/id","url":"\/documentation\/macrobuilder\/conditionelementsyntax\/id","abstract":[{"type":"text","text":"Returns a value representing the unique identity of the node."}],"role":"symbol","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"id"},{"text":": ","kind":"text"},{"text":"SyntaxIdentifier","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B10IdentifierV"}],"kind":"symbol","title":"id"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementSyntax/trimmedLength":{"role":"symbol","url":"\/documentation\/macrobuilder\/conditionelementsyntax\/trimmedlength","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"trimmedLength","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax12SourceLengthV","text":"SourceLength","kind":"typeIdentifier"}],"title":"trimmedLength","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/trimmedLength","type":"topic","abstract":[{"type":"text","text":"The length this node takes up spelled out in the source, excluding its"},{"type":"text","text":" "},{"type":"text","text":"leading or trailing trivia."}],"kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementSyntax/hasSequenceExpr":{"kind":"symbol","url":"\/documentation\/macrobuilder\/conditionelementsyntax\/hassequenceexpr","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/hasSequenceExpr","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"hasSequenceExpr","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"type":"topic","abstract":[{"type":"text","text":"Whether this tree contains a missing token or unexpected node."}],"title":"hasSequenceExpr"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementSyntax/parent":{"title":"parent","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/parent","url":"\/documentation\/macrobuilder\/conditionelementsyntax\/parent","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"parent","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"role":"symbol","abstract":[{"type":"text","text":"The parent of this syntax node, or "},{"type":"codeVoice","code":"nil"},{"text":" if this node is the root.","type":"text"}],"type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementSyntax/asProtocol(_:)-35tbc":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/asProtocol(_:)-35tbc","url":"\/documentation\/macrobuilder\/conditionelementsyntax\/asprotocol(_:)-35tbc","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithAttributesSyntax"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"asProtocol"},{"text":"((any ","kind":"text"},{"kind":"typeIdentifier","text":"WithAttributesSyntax","preciseIdentifier":"s:11SwiftSyntax014WithAttributesB0P"},{"text":").Type) -> (any ","kind":"text"},{"text":"WithAttributesSyntax","preciseIdentifier":"s:11SwiftSyntax014WithAttributesB0P","kind":"typeIdentifier"},{"kind":"text","text":")?"}],"kind":"symbol","title":"asProtocol(_:)"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementSyntax/previousToken":{"title":"previousToken","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/previousToken","url":"\/documentation\/macrobuilder\/conditionelementsyntax\/previoustoken","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"previousToken","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"deprecated":true,"role":"symbol","abstract":[],"type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementSyntax/firstToken(viewMode:)":{"role":"symbol","title":"firstToken(viewMode:)","type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/firstToken(viewMode:)","abstract":[{"type":"text","text":"Returns the first token node that is part of this syntax node."}],"kind":"symbol","url":"\/documentation\/macrobuilder\/conditionelementsyntax\/firsttoken(viewmode:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"firstToken"},{"text":"(","kind":"text"},{"text":"viewMode","kind":"externalParam"},{"kind":"text","text":": "},{"text":"SyntaxTreeViewMode","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax"},{"text":"?","kind":"text"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementSyntax/nextToken(viewMode:)":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/nextToken(viewMode:)","url":"\/documentation\/macrobuilder\/conditionelementsyntax\/nexttoken(viewmode:)","abstract":[{"type":"text","text":"Recursively walks through the tree to find the next token semantically"},{"text":" ","type":"text"},{"text":"after this node.","type":"text"}],"role":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"nextToken"},{"kind":"text","text":"("},{"kind":"externalParam","text":"viewMode"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","text":"SyntaxTreeViewMode","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"kind":"symbol","title":"nextToken(viewMode:)"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementSyntax/asProtocol(_:)-yan2":{"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"((any "},{"preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P","kind":"typeIdentifier","text":"WithGenericParametersSyntax"},{"kind":"text","text":").Type) -> (any "},{"kind":"typeIdentifier","text":"WithGenericParametersSyntax","preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P"},{"kind":"text","text":")?"}],"title":"asProtocol(_:)","url":"\/documentation\/macrobuilder\/conditionelementsyntax\/asprotocol(_:)-yan2","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithGenericParametersSyntax"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/asProtocol(_:)-yan2"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementSyntax/isProtocol(_:)-82ab4":{"title":"isProtocol(_:)","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/isProtocol(_:)-82ab4","url":"\/documentation\/macrobuilder\/conditionelementsyntax\/isprotocol(_:)-82ab4","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"text":"((any ","kind":"text"},{"kind":"typeIdentifier","text":"DeclGroupSyntax","preciseIdentifier":"s:11SwiftSyntax09DeclGroupB0P"},{"text":").Type) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"role":"symbol","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"DeclGroupSyntax"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementSyntax/positionAfterSkippingLeadingTrivia":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/positionAfterSkippingLeadingTrivia","url":"\/documentation\/macrobuilder\/conditionelementsyntax\/positionafterskippingleadingtrivia","abstract":[{"type":"text","text":"The absolute position of the starting point of this node, skipping any"},{"text":" ","type":"text"},{"type":"text","text":"leading trivia attached to the first token syntax."}],"role":"symbol","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"positionAfterSkippingLeadingTrivia"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","text":"AbsolutePosition","kind":"typeIdentifier"}],"kind":"symbol","title":"positionAfterSkippingLeadingTrivia"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementSyntax/is(_:)-6tne":{"title":"is(_:)","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/is(_:)-6tne","url":"\/documentation\/macrobuilder\/conditionelementsyntax\/is(_:)-6tne","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"`is`","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax"},{"kind":"text","text":".Type) -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"deprecated":true,"role":"symbol","abstract":[{"text":"Checks if the current syntax node can be upcast to ","type":"text"},{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax","type":"reference","isActive":true},{"type":"text","text":" node."}],"type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementSyntax/trimmedDescription":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/trimmedDescription","url":"\/documentation\/macrobuilder\/conditionelementsyntax\/trimmeddescription","abstract":[{"type":"text","text":"The description of this node with leading whitespace of the first token"},{"type":"text","text":" "},{"text":"and trailing whitespace of the last token removed.","type":"text"}],"role":"symbol","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"trimmedDescription"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"}],"kind":"symbol","title":"trimmedDescription"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementSyntax/previousToken(viewMode:)":{"title":"previousToken(viewMode:)","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/previousToken(viewMode:)","url":"\/documentation\/macrobuilder\/conditionelementsyntax\/previoustoken(viewmode:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"previousToken","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"viewMode"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","text":"SyntaxTreeViewMode","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax"},{"kind":"text","text":"?"}],"role":"symbol","abstract":[{"type":"text","text":"Recursively walks through the tree to find the token semantically before"},{"text":" ","type":"text"},{"type":"text","text":"this node."}],"type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementSyntax/endLocation(converter:afterTrailingTrivia:)":{"title":"endLocation(converter:afterTrailingTrivia:)","url":"\/documentation\/macrobuilder\/conditionelementsyntax\/endlocation(converter:aftertrailingtrivia:)","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"The ending location, in the provided file, of this Syntax node."}],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"endLocation"},{"kind":"text","text":"("},{"text":"converter","kind":"externalParam"},{"kind":"text","text":": "},{"text":"SourceLocationConverter","preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"afterTrailingTrivia"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"SourceLocation","preciseIdentifier":"s:11SwiftSyntax14SourceLocationV"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/endLocation(converter:afterTrailingTrivia:)"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementSyntax/with(_:_:)-9p2z6":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/with(_:_:)-9p2z6","url":"\/documentation\/macrobuilder\/conditionelementsyntax\/with(_:_:)-9p2z6","abstract":[{"type":"text","text":"Returns a new syntax node that has the child at "},{"code":"keyPath","type":"codeVoice"},{"type":"text","text":" replaced by"},{"type":"text","text":" "},{"type":"codeVoice","code":"value"},{"text":".","type":"text"}],"role":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"with"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"WritableKeyPath","preciseIdentifier":"s:s15WritableKeyPathC"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"text":"T","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"kind":"symbol","title":"with(_:_:)"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementSyntax/asProtocol(_:)-4ak1l":{"title":"asProtocol(_:)","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/asProtocol(_:)-4ak1l","url":"\/documentation\/macrobuilder\/conditionelementsyntax\/asprotocol(_:)-4ak1l","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"((any "},{"preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P","kind":"typeIdentifier","text":"WithOptionalCodeBlockSyntax"},{"text":").Type) -> (any ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P","text":"WithOptionalCodeBlockSyntax","kind":"typeIdentifier"},{"text":")?","kind":"text"}],"role":"symbol","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithOptionalCodeBlockSyntax"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementSyntax/byteRange":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/byteRange","url":"\/documentation\/macrobuilder\/conditionelementsyntax\/byterange","abstract":[],"role":"symbol","deprecated":true,"type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"byteRange"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"ByteSourceRange","preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangeV"}],"kind":"symbol","title":"byteRange"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementSyntax/sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)":{"title":"sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)","url":"\/documentation\/macrobuilder\/conditionelementsyntax\/sourcerange(converter:afterleadingtrivia:aftertrailingtrivia:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"sourceRange","kind":"identifier"},{"text":"(","kind":"text"},{"text":"converter","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC","text":"SourceLocationConverter","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"afterLeadingTrivia","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":", "},{"text":"afterTrailingTrivia","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax11SourceRangeV","text":"SourceRange"}],"role":"symbol","abstract":[{"type":"text","text":"The source range, in the provided file, of this Syntax node."}],"type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementSyntax/debugDescription":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/debugDescription","url":"\/documentation\/macrobuilder\/conditionelementsyntax\/debugdescription","abstract":[{"type":"text","text":"A simple description of this node (ie. its type)."}],"role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"debugDescription"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"}],"kind":"symbol","title":"debugDescription"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementSyntax/lastToken(viewMode:)":{"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/lastToken(viewMode:)","kind":"symbol","abstract":[{"type":"text","text":"Returns the last token node that is part of this syntax node."}],"role":"symbol","title":"lastToken(viewMode:)","url":"\/documentation\/macrobuilder\/conditionelementsyntax\/lasttoken(viewmode:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"lastToken","kind":"identifier"},{"text":"(","kind":"text"},{"text":"viewMode","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","text":"SyntaxTreeViewMode"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax","kind":"typeIdentifier"},{"text":"?","kind":"text"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementSyntax/map(_:_:)":{"abstract":[],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"map"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"WritableKeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s15WritableKeyPathC"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":">, (","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"title":"map(_:_:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/map(_:_:)","type":"topic","url":"\/documentation\/macrobuilder\/conditionelementsyntax\/map(_:_:)","kind":"symbol","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementSyntax/hasParent":{"title":"hasParent","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/hasParent","url":"\/documentation\/macrobuilder\/conditionelementsyntax\/hasparent","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"hasParent"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"role":"symbol","abstract":[{"text":"Whether or not this node has a parent.","type":"text"}],"type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementSyntax/as(_:)-vfyg":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/as(_:)-vfyg","url":"\/documentation\/macrobuilder\/conditionelementsyntax\/as(_:)-vfyg","abstract":[{"text":"Attempts to cast the current syntax node to a given specialized syntax type.","type":"text"}],"role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"`as`"},{"kind":"text","text":"<"},{"text":"S","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"S"},{"text":".Type) -> ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"kind":"symbol","title":"as(_:)"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementSyntax/init(validating:)":{"title":"init(validating:)","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/init(validating:)","url":"\/documentation\/macrobuilder\/conditionelementsyntax\/init(validating:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"validating"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"role":"symbol","abstract":[{"text":"If ","type":"text"},{"code":"node","type":"codeVoice"},{"text":" has contains no syntax errors, return ","type":"text"},{"type":"codeVoice","code":"node"},{"type":"text","text":", otherwise"},{"text":" ","type":"text"},{"text":"throw an error with diagnostics describing the syntax errors.","type":"text"}],"type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementSyntax/modifying(_:_:)":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/modifying(_:_:)","url":"\/documentation\/macrobuilder\/conditionelementsyntax\/modifying(_:_:)","abstract":[],"role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"modifying"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"WritableKeyPath","preciseIdentifier":"s:s15WritableKeyPathC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":">, ("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"text":"T","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"rethrows"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"kind":"symbol","title":"modifying(_:_:)"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementSyntax/root":{"title":"root","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/root","url":"\/documentation\/macrobuilder\/conditionelementsyntax\/root","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"root","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier"}],"role":"symbol","abstract":[{"type":"text","text":"The root of the tree in which this node resides."}],"type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementSyntax/isProtocol(_:)-3an6i":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/isProtocol(_:)-3an6i","url":"\/documentation\/macrobuilder\/conditionelementsyntax\/isprotocol(_:)-3an6i","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"NamedDeclSyntax"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"((any "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax09NamedDeclB0P","text":"NamedDeclSyntax"},{"kind":"text","text":").Type) -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"kind":"symbol","title":"isProtocol(_:)"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementSyntax/asProtocol(_:)-90mly":{"title":"asProtocol(_:)","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/asProtocol(_:)-90mly","url":"\/documentation\/macrobuilder\/conditionelementsyntax\/asprotocol(_:)-90mly","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"text":"((any ","kind":"text"},{"kind":"typeIdentifier","text":"MissingNodeSyntax","preciseIdentifier":"s:11SwiftSyntax011MissingNodeB0P"},{"text":").Type) -> (any ","kind":"text"},{"text":"MissingNodeSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax011MissingNodeB0P"},{"kind":"text","text":")?"}],"role":"symbol","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"MissingNodeSyntax"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementSyntax/byteSizeAfterTrimmingTrivia":{"type":"topic","role":"symbol","title":"byteSizeAfterTrimmingTrivia","deprecated":true,"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/byteSizeAfterTrimmingTrivia","url":"\/documentation\/macrobuilder\/conditionelementsyntax\/bytesizeaftertrimmingtrivia","abstract":[{"type":"text","text":"The textual byte length of this node excluding leading and trailing trivia."}],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"byteSizeAfterTrimmingTrivia","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementSyntax/position":{"type":"topic","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"position"},{"kind":"text","text":": "},{"text":"AbsolutePosition","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV"}],"title":"position","kind":"symbol","abstract":[{"text":"The absolute position of the starting point of this node. If the first token","type":"text"},{"type":"text","text":" "},{"type":"text","text":"is with leading trivia, the position points to the start of the leading"},{"type":"text","text":" "},{"type":"text","text":"trivia."}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/position","role":"symbol","url":"\/documentation\/macrobuilder\/conditionelementsyntax\/position"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementSyntax/formatted(using:)":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"formatted","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"using"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"BasicFormat","preciseIdentifier":"s:16SwiftBasicFormat0bC0C"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax","kind":"typeIdentifier"}],"role":"symbol","type":"topic","url":"\/documentation\/macrobuilder\/conditionelementsyntax\/formatted(using:)","title":"formatted(using:)","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/formatted(using:)","kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementSyntax/lastToken":{"title":"lastToken","abstract":[],"role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"lastToken","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax"},{"kind":"text","text":"?"}],"type":"topic","deprecated":true,"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/lastToken","kind":"symbol","url":"\/documentation\/macrobuilder\/conditionelementsyntax\/lasttoken"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementSyntax/detach()":{"title":"detach()","abstract":[],"deprecated":true,"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/detach()","type":"topic","url":"\/documentation\/macrobuilder\/conditionelementsyntax\/detach()","role":"symbol","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"detach","kind":"identifier"},{"kind":"text","text":"() -> "},{"text":"Self","kind":"typeIdentifier"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementSyntax/index":{"abstract":[{"type":"text","text":"The index of this node in a "},{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxChildren","isActive":true,"type":"reference"},{"type":"text","text":" collection."}],"url":"\/documentation\/macrobuilder\/conditionelementsyntax\/index","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"index","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B13ChildrenIndexV","text":"SyntaxChildrenIndex","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/index","type":"topic","deprecated":true,"kind":"symbol","title":"index","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementSyntax/totalLength":{"type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"totalLength","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV","text":"SourceLength"}],"title":"totalLength","kind":"symbol","abstract":[{"text":"The length of this node including all of its trivia.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/totalLength","role":"symbol","url":"\/documentation\/macrobuilder\/conditionelementsyntax\/totallength"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementSyntax/isImplicit":{"abstract":[{"text":"When isImplicit is true, the syntax node doesn’t include any","type":"text"},{"type":"text","text":" "},{"type":"text","text":"underlying tokens, e.g. an empty CodeBlockItemList."}],"url":"\/documentation\/macrobuilder\/conditionelementsyntax\/isimplicit","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isImplicit","kind":"identifier"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/isImplicit","type":"topic","deprecated":true,"kind":"symbol","title":"isImplicit","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementSyntax/isProtocol(_:)-26s4n":{"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/isProtocol(_:)-26s4n","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"text":"((any ","kind":"text"},{"text":"WithTrailingCommaSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax017WithTrailingCommaB0P"},{"text":").Type) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"role":"symbol","url":"\/documentation\/macrobuilder\/conditionelementsyntax\/isprotocol(_:)-26s4n","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"WithTrailingCommaSyntax"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"title":"isProtocol(_:)"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementSyntax/isProtocol(_:)-5hpov":{"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"((any "},{"text":"FreestandingMacroExpansionSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P"},{"text":").Type) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"title":"isProtocol(_:)","kind":"symbol","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"code":"FreestandingMacroExpansionSyntax","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/isProtocol(_:)-5hpov","role":"symbol","url":"\/documentation\/macrobuilder\/conditionelementsyntax\/isprotocol(_:)-5hpov"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementSyntax/syntaxTextBytes":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/syntaxTextBytes","role":"symbol","url":"\/documentation\/macrobuilder\/conditionelementsyntax\/syntaxtextbytes","title":"syntaxTextBytes","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"syntaxTextBytes","kind":"identifier"},{"text":": [","kind":"text"},{"preciseIdentifier":"s:s5UInt8V","kind":"typeIdentifier","text":"UInt8"},{"text":"]","kind":"text"}],"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Retrieve the syntax text as an array of bytes that models the input"},{"text":" ","type":"text"},{"text":"source even in the presence of invalid UTF-8.","type":"text"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementSyntax/asProtocol(_:)-7uehk":{"abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"FreestandingMacroExpansionSyntax"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"url":"\/documentation\/macrobuilder\/conditionelementsyntax\/asprotocol(_:)-7uehk","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"text":"((any ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P","text":"FreestandingMacroExpansionSyntax"},{"text":").Type) -> (any ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P","text":"FreestandingMacroExpansionSyntax","kind":"typeIdentifier"},{"text":")?","kind":"text"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/asProtocol(_:)-7uehk","type":"topic","kind":"symbol","title":"asProtocol(_:)","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementSyntax/init(_:)-6jc3c":{"kind":"symbol","title":"init(_:)","role":"symbol","url":"\/documentation\/macrobuilder\/conditionelementsyntax\/init(_:)-6jc3c","abstract":[{"type":"text","text":"Initializes a new instance of the conforming type from a given specialized syntax node."}],"type":"topic","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"?<"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"kind":"text","text":"?)"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/init(_:)-6jc3c"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementSyntax/hasError":{"type":"topic","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"hasError"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"url":"\/documentation\/macrobuilder\/conditionelementsyntax\/haserror","title":"hasError","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Whether the tree contained by this layout has any"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/hasError"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementSyntax/trimmed(matching:)":{"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"trimmed","kind":"identifier"},{"text":"(","kind":"text"},{"text":"matching","kind":"externalParam"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"TriviaPiece","preciseIdentifier":"s:11SwiftSyntax11TriviaPieceO"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"title":"trimmed(matching:)","kind":"symbol","abstract":[{"type":"text","text":"A copy of this node with pieces that match "},{"code":"matching","type":"codeVoice"},{"text":" trimmed from the","type":"text"},{"type":"text","text":" "},{"text":"leading trivia of the first token and trailing trivia of the last token.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/trimmed(matching:)","role":"symbol","url":"\/documentation\/macrobuilder\/conditionelementsyntax\/trimmed(matching:)"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementSyntax/endPosition":{"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"endPosition"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","kind":"typeIdentifier","text":"AbsolutePosition"}],"abstract":[{"text":"The end position of this node, including its trivia.","type":"text"}],"kind":"symbol","url":"\/documentation\/macrobuilder\/conditionelementsyntax\/endposition","role":"symbol","title":"endPosition","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/endPosition","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementSyntax/is(_:)-456qp":{"abstract":[{"text":"Checks if the current syntax node can be cast to a given specialized syntax type.","type":"text"}],"url":"\/documentation\/macrobuilder\/conditionelementsyntax\/is(_:)-456qp","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"`is`","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"S"},{"text":">(","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/is(_:)-456qp","type":"topic","kind":"symbol","title":"is(_:)","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementSyntax/write(to:)":{"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"write","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Target","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"to","kind":"externalParam"},{"kind":"text","text":": "},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Target","kind":"typeIdentifier"},{"text":")","kind":"text"}],"title":"write(to:)","kind":"symbol","abstract":[{"type":"text","text":"Prints the raw value of this node to the provided stream."}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/write(to:)","role":"symbol","url":"\/documentation\/macrobuilder\/conditionelementsyntax\/write(to:)"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementSyntax/allMacroLexicalContexts(enclosingSyntax:)":{"abstract":[{"type":"text","text":"Return an array of enclosing lexical contexts for the purpose of macros,"},{"type":"text","text":" "},{"type":"text","text":"from the innermost enclosing lexical context (first in the array) to the"},{"type":"text","text":" "},{"text":"outermost. If this syntax node itself is a lexical context, it will be","type":"text"},{"type":"text","text":" "},{"text":"the innermost lexical context.","type":"text"}],"url":"\/documentation\/macrobuilder\/conditionelementsyntax\/allmacrolexicalcontexts(enclosingsyntax:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"allMacroLexicalContexts"},{"text":"(","kind":"text"},{"text":"enclosingSyntax","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"kind":"text","text":") -> "},{"text":"Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"kind":"text","text":"?) -> ["},{"preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier","text":"Syntax"},{"kind":"text","text":"]"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/allMacroLexicalContexts(enclosingSyntax:)","type":"topic","kind":"symbol","title":"allMacroLexicalContexts(enclosingSyntax:)","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementSyntax/cast(_:)-7s0r4":{"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"cast","kind":"identifier"},{"kind":"text","text":"<"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"kind":"typeIdentifier","text":"S"}],"title":"cast(_:)","kind":"symbol","abstract":[{"type":"text","text":"Force-casts the current syntax node to a given specialized syntax type."}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/cast(_:)-7s0r4","role":"symbol","url":"\/documentation\/macrobuilder\/conditionelementsyntax\/cast(_:)-7s0r4"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SyntaxChildren":{"title":"SyntaxChildren","abstract":[{"text":"Collection that contains the present child ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax","type":"reference"},{"type":"text","text":" nodes of the given node."}],"url":"\/documentation\/macrobuilder\/syntaxchildren","role":"symbol","navigatorTitle":[{"text":"SyntaxChildren","kind":"identifier"}],"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SyntaxChildren","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxChildren"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementSyntax/nextToken":{"url":"\/documentation\/macrobuilder\/conditionelementsyntax\/nexttoken","deprecated":true,"kind":"symbol","title":"nextToken","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/nextToken","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"nextToken"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"type":"topic","abstract":[]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementSyntax/byteSize":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/byteSize","title":"byteSize","url":"\/documentation\/macrobuilder\/conditionelementsyntax\/bytesize","type":"topic","abstract":[{"text":"The textual byte length of this node including leading and trailing trivia.","type":"text"}],"role":"symbol","deprecated":true,"kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"byteSize"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementSyntax/hasMaximumNestingLevelOverflow":{"abstract":[],"url":"\/documentation\/macrobuilder\/conditionelementsyntax\/hasmaximumnestingleveloverflow","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"hasMaximumNestingLevelOverflow","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/hasMaximumNestingLevelOverflow","type":"topic","kind":"symbol","title":"hasMaximumNestingLevelOverflow","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementSyntax/isProtocol(_:)-1qrpy":{"title":"isProtocol(_:)","type":"topic","role":"symbol","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"text":" ","type":"text"},{"code":"MissingNodeSyntax","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/isProtocol(_:)-1qrpy","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"text":"((any ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax011MissingNodeB0P","kind":"typeIdentifier","text":"MissingNodeSyntax"},{"kind":"text","text":").Type) -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"url":"\/documentation\/macrobuilder\/conditionelementsyntax\/isprotocol(_:)-1qrpy"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementSyntax/leadingTriviaLength":{"title":"leadingTriviaLength","url":"\/documentation\/macrobuilder\/conditionelementsyntax\/leadingtrivialength","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"leadingTriviaLength","kind":"identifier"},{"kind":"text","text":": "},{"text":"SourceLength","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV"}],"kind":"symbol","role":"symbol","type":"topic","abstract":[{"text":"The length this node’s leading trivia takes up spelled out in source.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/leadingTriviaLength"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SyntaxKind/functionDecl":{"url":"\/documentation\/macrobuilder\/syntaxkind\/functiondecl","fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"kind":"identifier","text":"functionDecl"}],"title":"SyntaxKind.functionDecl","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxKind\/functionDecl","role":"symbol","type":"topic","kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementSyntax/is(_:)-koj2":{"kind":"symbol","abstract":[{"type":"text","text":"Checks if the current syntax node can be cast to its own type."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"`is`"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"text":".Type) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/is(_:)-koj2","title":"is(_:)","url":"\/documentation\/macrobuilder\/conditionelementsyntax\/is(_:)-koj2","role":"symbol","deprecated":true,"type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementSyntax/isProtocol(_:)-5ox2k":{"title":"isProtocol(_:)","type":"topic","role":"symbol","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"text":" ","type":"text"},{"code":"WithGenericParametersSyntax","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/isProtocol(_:)-5ox2k","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"text":"((any ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P","kind":"typeIdentifier","text":"WithGenericParametersSyntax"},{"kind":"text","text":").Type) -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"url":"\/documentation\/macrobuilder\/conditionelementsyntax\/isprotocol(_:)-5ox2k"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementSyntax/expand(macros:in:indentationWidth:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"expand","kind":"identifier"},{"kind":"text","text":"("},{"text":"macros","kind":"externalParam"},{"text":": [","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":" : any "},{"kind":"typeIdentifier","preciseIdentifier":"s:17SwiftSyntaxMacros5MacroP","text":"Macro"},{"kind":"text","text":".Type], "},{"text":"in","kind":"externalParam"},{"kind":"text","text":": some "},{"kind":"typeIdentifier","preciseIdentifier":"s:17SwiftSyntaxMacros21MacroExpansionContextP","text":"MacroExpansionContext"},{"kind":"text","text":", "},{"kind":"externalParam","text":"indentationWidth"},{"text":": ","kind":"text"},{"text":"Trivia","preciseIdentifier":"s:11SwiftSyntax6TriviaV","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"text":"Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"}],"abstract":[],"kind":"symbol","url":"\/documentation\/macrobuilder\/conditionelementsyntax\/expand(macros:in:indentationwidth:)","title":"expand(macros:in:indentationWidth:)","deprecated":true,"type":"topic","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/expand(macros:in:indentationWidth:)"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementSyntax/asProtocol(_:)-1ekoi":{"title":"asProtocol(_:)","url":"\/documentation\/macrobuilder\/conditionelementsyntax\/asprotocol(_:)-1ekoi","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"text":"((any ","kind":"text"},{"text":"EffectSpecifiersSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax016EffectSpecifiersB0P"},{"text":").Type) -> (any ","kind":"text"},{"text":"EffectSpecifiersSyntax","preciseIdentifier":"s:11SwiftSyntax016EffectSpecifiersB0P","kind":"typeIdentifier"},{"text":")?","kind":"text"}],"kind":"symbol","role":"symbol","type":"topic","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"text":" ","type":"text"},{"code":"EffectSpecifiersSyntax","type":"codeVoice"},{"text":". Otherwise return ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/asProtocol(_:)-1ekoi"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementSyntax/firstToken":{"title":"firstToken","type":"topic","role":"symbol","abstract":[],"deprecated":true,"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/firstToken","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"firstToken","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"url":"\/documentation\/macrobuilder\/conditionelementsyntax\/firsttoken"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementSyntax/isProtocol(_:)-9ohbe":{"title":"isProtocol(_:)","url":"\/documentation\/macrobuilder\/conditionelementsyntax\/isprotocol(_:)-9ohbe","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"text":"((any ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax014WithStatementsB0P","text":"WithStatementsSyntax","kind":"typeIdentifier"},{"text":").Type) -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"kind":"symbol","role":"symbol","type":"topic","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"text":" ","type":"text"},{"code":"WithStatementsSyntax","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/isProtocol(_:)-9ohbe"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementSyntax/contentLength":{"title":"contentLength","type":"topic","role":"symbol","abstract":[],"deprecated":true,"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/contentLength","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"contentLength","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax12SourceLengthV","text":"SourceLength","kind":"typeIdentifier"}],"url":"\/documentation\/macrobuilder\/conditionelementsyntax\/contentlength"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementSyntax/asProtocol(_:)-5ah1u":{"title":"asProtocol(_:)","url":"\/documentation\/macrobuilder\/conditionelementsyntax\/asprotocol(_:)-5ah1u","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"text":"((any ","kind":"text"},{"kind":"typeIdentifier","text":"WithModifiersSyntax","preciseIdentifier":"s:11SwiftSyntax013WithModifiersB0P"},{"kind":"text","text":").Type) -> (any "},{"text":"WithModifiersSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013WithModifiersB0P"},{"kind":"text","text":")?"}],"kind":"symbol","role":"symbol","type":"topic","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"WithModifiersSyntax"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/asProtocol(_:)-5ah1u"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementSyntax/node(at:)":{"kind":"symbol","url":"\/documentation\/macrobuilder\/conditionelementsyntax\/node(at:)","abstract":[{"text":"If the node with the given ","type":"text"},{"code":"syntaxIdentifier","type":"codeVoice"},{"type":"text","text":" is a (recursive) child of this node, return the node with that"},{"text":" ","type":"text"},{"text":"identifier.","type":"text"}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"node","kind":"identifier"},{"text":"(","kind":"text"},{"text":"at","kind":"externalParam"},{"kind":"text","text":": "},{"text":"SyntaxIdentifier","preciseIdentifier":"s:11SwiftSyntax0B10IdentifierV","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax"},{"text":"?","kind":"text"}],"title":"node(at:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/node(at:)"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementSyntax":{"kind":"symbol","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ConditionElementSyntax","kind":"identifier"}],"title":"ConditionElementSyntax","abstract":[],"navigatorTitle":[{"kind":"identifier","text":"ConditionElementSyntax"}],"url":"\/documentation\/macrobuilder\/conditionelementsyntax","type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementSyntax/children(viewMode:)":{"title":"children(viewMode:)","type":"topic","role":"symbol","abstract":[{"text":"A sequence over the children of this node.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/children(viewMode:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"children"},{"text":"(","kind":"text"},{"text":"viewMode","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","text":"SyntaxTreeViewMode","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"SyntaxChildren","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ChildrenV"}],"url":"\/documentation\/macrobuilder\/conditionelementsyntax\/children(viewmode:)"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementSyntax/isProtocol(_:)-3zksb":{"title":"isProtocol(_:)","url":"\/documentation\/macrobuilder\/conditionelementsyntax\/isprotocol(_:)-3zksb","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"text":"((any ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax016EffectSpecifiersB0P","kind":"typeIdentifier","text":"EffectSpecifiersSyntax"},{"kind":"text","text":").Type) -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"kind":"symbol","role":"symbol","type":"topic","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"code":"EffectSpecifiersSyntax","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/isProtocol(_:)-3zksb"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementSyntax/cast(_:)-2renf":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/cast(_:)-2renf","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"cast"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","text":"Self"}],"abstract":[{"text":"Force-casts the current syntax node to its own type.","type":"text"}],"kind":"symbol","deprecated":true,"title":"cast(_:)","role":"symbol","type":"topic","url":"\/documentation\/macrobuilder\/conditionelementsyntax\/cast(_:)-2renf"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementSyntax/expand(macros:contextGenerator:indentationWidth:)":{"url":"\/documentation\/macrobuilder\/conditionelementsyntax\/expand(macros:contextgenerator:indentationwidth:)","title":"expand(macros:contextGenerator:indentationWidth:)","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/expand(macros:contextGenerator:indentationWidth:)","type":"topic","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"expand"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Context"},{"kind":"text","text":">("},{"kind":"externalParam","text":"macros"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":" : any ","kind":"text"},{"kind":"typeIdentifier","text":"Macro","preciseIdentifier":"s:17SwiftSyntaxMacros5MacroP"},{"text":".Type], ","kind":"text"},{"text":"contextGenerator","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Context","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"indentationWidth"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax6TriviaV","text":"Trivia"},{"kind":"text","text":"?) -> "},{"preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax","kind":"typeIdentifier"}],"abstract":[]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementSyntax/isProtocol(_:)-61hv5":{"title":"isProtocol(_:)","type":"topic","role":"symbol","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"text":" ","type":"text"},{"code":"ParenthesizedSyntax","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/isProtocol(_:)-61hv5","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"isProtocol"},{"text":"((any ","kind":"text"},{"text":"ParenthesizedSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013ParenthesizedB0P"},{"kind":"text","text":").Type) -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"url":"\/documentation\/macrobuilder\/conditionelementsyntax\/isprotocol(_:)-61hv5"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementSyntax/isProtocol(_:)-8z2i9":{"title":"isProtocol(_:)","url":"\/documentation\/macrobuilder\/conditionelementsyntax\/isprotocol(_:)-8z2i9","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"text":"((any ","kind":"text"},{"text":"WithAttributesSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax014WithAttributesB0P"},{"text":").Type) -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"kind":"symbol","role":"symbol","type":"topic","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"WithAttributesSyntax"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/isProtocol(_:)-8z2i9"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementSyntax/asProtocol(_:)-6lblc":{"role":"symbol","url":"\/documentation\/macrobuilder\/conditionelementsyntax\/asprotocol(_:)-6lblc","kind":"symbol","title":"asProtocol(_:)","type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/asProtocol(_:)-6lblc","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"text":"((any ","kind":"text"},{"kind":"typeIdentifier","text":"DeclGroupSyntax","preciseIdentifier":"s:11SwiftSyntax09DeclGroupB0P"},{"text":").Type) -> (any ","kind":"text"},{"text":"DeclGroupSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax09DeclGroupB0P"},{"kind":"text","text":")?"}],"abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"DeclGroupSyntax"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementSyntax/trimmedByteRange":{"kind":"symbol","abstract":[{"text":"The byte source range of this node excluding leading and trailing trivia.","type":"text"}],"role":"symbol","url":"\/documentation\/macrobuilder\/conditionelementsyntax\/trimmedbyterange","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/trimmedByteRange","title":"trimmedByteRange","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"trimmedByteRange"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"ByteSourceRange","preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangeV"}],"type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementSyntax/cast(_:)-81sk":{"type":"topic","deprecated":true,"abstract":[{"type":"text","text":"Force-cast the current syntax node to "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax"},{"type":"text","text":" node.."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cast","kind":"identifier"},{"kind":"text","text":"("},{"text":"Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V"}],"title":"cast(_:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/cast(_:)-81sk","url":"\/documentation\/macrobuilder\/conditionelementsyntax\/cast(_:)-81sk","kind":"symbol","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementSyntax/trailingTrivia":{"title":"trailingTrivia","type":"topic","role":"symbol","abstract":[{"text":"The trailing trivia of this syntax node.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/trailingTrivia","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"trailingTrivia","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax6TriviaV","kind":"typeIdentifier","text":"Trivia"}],"url":"\/documentation\/macrobuilder\/conditionelementsyntax\/trailingtrivia"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementSyntax/asMacroLexicalContext()":{"title":"asMacroLexicalContext()","url":"\/documentation\/macrobuilder\/conditionelementsyntax\/asmacrolexicalcontext()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asMacroLexicalContext","kind":"identifier"},{"kind":"text","text":"() -> "},{"text":"Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"text":"?","kind":"text"}],"kind":"symbol","role":"symbol","type":"topic","abstract":[{"type":"text","text":"If this syntax node acts as a lexical context from the perspective"},{"text":" ","type":"text"},{"text":"of a macro, return a new syntax node based on this node that strips all","type":"text"},{"text":" ","type":"text"},{"text":"information that isn’t supposed to be exposed as a lexical context, such","type":"text"},{"text":" ","type":"text"},{"text":"as function bodies or the members of types\/extensions.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/asMacroLexicalContext()"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementSyntax/asProtocol(_:)-18ct":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"text":"((any ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P","kind":"typeIdentifier","text":"WithCodeBlockSyntax"},{"text":").Type) -> (any ","kind":"text"},{"text":"WithCodeBlockSyntax","preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P","kind":"typeIdentifier"},{"text":")?","kind":"text"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/asProtocol(_:)-18ct","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"WithCodeBlockSyntax"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"url":"\/documentation\/macrobuilder\/conditionelementsyntax\/asprotocol(_:)-18ct","type":"topic","title":"asProtocol(_:)","role":"symbol","kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementSyntax/expand(macroSpecs:contextGenerator:indentationWidth:)":{"title":"expand(macroSpecs:contextGenerator:indentationWidth:)","type":"topic","role":"symbol","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/expand(macroSpecs:contextGenerator:indentationWidth:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"expand"},{"text":"<","kind":"text"},{"text":"Context","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"macroSpecs"},{"text":": [","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:25SwiftSyntaxMacroExpansion0C4SpecV","text":"MacroSpec","kind":"typeIdentifier"},{"text":"], ","kind":"text"},{"text":"contextGenerator","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Context","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"indentationWidth","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Trivia","preciseIdentifier":"s:11SwiftSyntax6TriviaV","kind":"typeIdentifier"},{"kind":"text","text":"?) -> "},{"preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax","kind":"typeIdentifier"}],"url":"\/documentation\/macrobuilder\/conditionelementsyntax\/expand(macrospecs:contextgenerator:indentationwidth:)"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementSyntax/kind":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/kind","url":"\/documentation\/macrobuilder\/conditionelementsyntax\/kind","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"kind"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B4KindO","text":"SyntaxKind","kind":"typeIdentifier"}],"kind":"symbol","role":"symbol","type":"topic","abstract":[{"type":"text","text":"The kind of the syntax node, e.g. if it is a "},{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxKind\/functionDecl","isActive":true,"type":"reference"},{"type":"text","text":"."}],"title":"kind"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementSyntax/asProtocol(_:)-1e49a":{"title":"asProtocol(_:)","type":"topic","role":"symbol","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"NamedDeclSyntax"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/asProtocol(_:)-1e49a","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"text":"((any ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax09NamedDeclB0P","text":"NamedDeclSyntax","kind":"typeIdentifier"},{"kind":"text","text":").Type) -> (any "},{"text":"NamedDeclSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax09NamedDeclB0P"},{"text":")?","kind":"text"}],"url":"\/documentation\/macrobuilder\/conditionelementsyntax\/asprotocol(_:)-1e49a"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementSyntax/endPositionBeforeTrailingTrivia":{"role":"symbol","url":"\/documentation\/macrobuilder\/conditionelementsyntax\/endpositionbeforetrailingtrivia","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"endPositionBeforeTrailingTrivia"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","text":"AbsolutePosition","kind":"typeIdentifier"}],"title":"endPositionBeforeTrailingTrivia","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/endPositionBeforeTrailingTrivia","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"The end position of this node’s content, before any trailing trivia."}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementSyntax/hasWarning":{"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/hasWarning","title":"hasWarning","url":"\/documentation\/macrobuilder\/conditionelementsyntax\/haswarning","role":"symbol","abstract":[{"text":"Whether the tree contained by this layout has any tokens with a","type":"text"},{"type":"text","text":" "},{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TokenDiagnostic","type":"reference","isActive":true},{"text":" of severity ","type":"text"},{"code":"warning","type":"codeVoice"},{"text":".","type":"text"}],"kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"hasWarning","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementSyntax/asProtocol(_:)-2amib":{"title":"asProtocol(_:)","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/asProtocol(_:)-2amib","url":"\/documentation\/macrobuilder\/conditionelementsyntax\/asprotocol(_:)-2amib","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"text":"((any ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax06BracedB0P","text":"BracedSyntax","kind":"typeIdentifier"},{"text":").Type) -> (any ","kind":"text"},{"kind":"typeIdentifier","text":"BracedSyntax","preciseIdentifier":"s:11SwiftSyntax06BracedB0P"},{"text":")?","kind":"text"}],"role":"symbol","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"BracedSyntax"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementSyntax/token(at:)":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/token(at:)","url":"\/documentation\/macrobuilder\/conditionelementsyntax\/token(at:)","abstract":[{"text":"Find the syntax token at the given absolute position within this","type":"text"},{"text":" ","type":"text"},{"text":"syntax node or any of its children.","type":"text"}],"role":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"token","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"at"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"AbsolutePosition","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"kind":"symbol","title":"token(at:)"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementSyntax/isProtocol(_:)-7hy1w":{"title":"isProtocol(_:)","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/isProtocol(_:)-7hy1w","url":"\/documentation\/macrobuilder\/conditionelementsyntax\/isprotocol(_:)-7hy1w","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"text":"((any ","kind":"text"},{"text":"WithModifiersSyntax","preciseIdentifier":"s:11SwiftSyntax013WithModifiersB0P","kind":"typeIdentifier"},{"text":").Type) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"role":"symbol","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"WithModifiersSyntax"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementSyntax/asProtocol(_:)-1zsvz":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/asProtocol(_:)-1zsvz","url":"\/documentation\/macrobuilder\/conditionelementsyntax\/asprotocol(_:)-1zsvz","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"code":"WithStatementsSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"role":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"text":"((any ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax014WithStatementsB0P","text":"WithStatementsSyntax","kind":"typeIdentifier"},{"text":").Type) -> (any ","kind":"text"},{"text":"WithStatementsSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax014WithStatementsB0P"},{"kind":"text","text":")?"}],"kind":"symbol","title":"asProtocol(_:)"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/TokenDiagnostic":{"type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"TokenDiagnostic"}],"role":"symbol","abstract":[{"text":"If the token has an error that’s inherent to the token itself and not its","type":"text"},{"text":" ","type":"text"},{"text":"surrounding structure, this defines the type of the error.","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"byteOffset"},{"type":"text","text":" specifies at which offset the error occurred."}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TokenDiagnostic","title":"TokenDiagnostic","url":"\/documentation\/macrobuilder\/tokendiagnostic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"TokenDiagnostic","kind":"identifier"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementSyntax/totalByteRange":{"title":"totalByteRange","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/totalByteRange","url":"\/documentation\/macrobuilder\/conditionelementsyntax\/totalbyterange","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"totalByteRange","kind":"identifier"},{"text":": ","kind":"text"},{"text":"ByteSourceRange","preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangeV","kind":"typeIdentifier"}],"role":"symbol","abstract":[{"type":"text","text":"The byte source range of this node including leading and trailing trivia."}],"type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementSyntax/asProtocol(_:)-9r6ug":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"((any "},{"preciseIdentifier":"s:11SwiftSyntax017WithTrailingCommaB0P","text":"WithTrailingCommaSyntax","kind":"typeIdentifier"},{"kind":"text","text":").Type) -> (any "},{"preciseIdentifier":"s:11SwiftSyntax017WithTrailingCommaB0P","text":"WithTrailingCommaSyntax","kind":"typeIdentifier"},{"text":")?","kind":"text"}],"url":"\/documentation\/macrobuilder\/conditionelementsyntax\/asprotocol(_:)-9r6ug","title":"asProtocol(_:)","type":"topic","kind":"symbol","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/asProtocol(_:)-9r6ug","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"code":"WithTrailingCommaSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementSyntax/trimmed":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/trimmed","url":"\/documentation\/macrobuilder\/conditionelementsyntax\/trimmed","abstract":[{"type":"text","text":"A copy of this node without the leading trivia of the first token in the"},{"text":" ","type":"text"},{"type":"text","text":"node and the trailing trivia of the last token in the node."}],"role":"symbol","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"trimmed","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"kind":"symbol","title":"trimmed"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementSyntax/debugDescription(includeTrivia:converter:mark:indentString:)":{"role":"symbol","url":"\/documentation\/macrobuilder\/conditionelementsyntax\/debugdescription(includetrivia:converter:mark:indentstring:)","title":"debugDescription(includeTrivia:converter:mark:indentString:)","type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/debugDescription(includeTrivia:converter:mark:indentString:)","abstract":[{"text":"Returns a summarized dump of this node.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"debugDescription","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"includeTrivia"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"converter","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SourceLocationConverter","preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"mark"},{"text":": (any ","kind":"text"},{"text":"SyntaxProtocol","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP","kind":"typeIdentifier"},{"text":")?, ","kind":"text"},{"kind":"externalParam","text":"indentString"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":") -> "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}],"kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementSyntax/description":{"title":"description","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/description","url":"\/documentation\/macrobuilder\/conditionelementsyntax\/description","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"description","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"}],"role":"symbol","abstract":[{"text":"A source-accurate description of this node.","type":"text"}],"type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementSyntax/trimmedDescription(matching:)":{"abstract":[{"type":"text","text":"The description of this node with pieces that match "},{"code":"matching","type":"codeVoice"},{"type":"text","text":" removed"},{"type":"text","text":" "},{"type":"text","text":"from the leading trivia of the first token and trailing trivia of the"},{"type":"text","text":" "},{"text":"last token.","type":"text"}],"kind":"symbol","title":"trimmedDescription(matching:)","type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"trimmedDescription","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"matching"},{"kind":"text","text":": ("},{"preciseIdentifier":"s:11SwiftSyntax11TriviaPieceO","text":"TriviaPiece","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") -> "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/trimmedDescription(matching:)","url":"\/documentation\/macrobuilder\/conditionelementsyntax\/trimmeddescription(matching:)"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementSyntax/trailingTriviaLength":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementSyntax\/trailingTriviaLength","url":"\/documentation\/macrobuilder\/conditionelementsyntax\/trailingtrivialength","abstract":[{"text":"The length this node’s trailing trivia takes up spelled out in source.","type":"text"}],"role":"symbol","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"trailingTriviaLength","kind":"identifier"},{"text":": ","kind":"text"},{"text":"SourceLength","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV"}],"kind":"symbol","title":"trailingTriviaLength"}}}