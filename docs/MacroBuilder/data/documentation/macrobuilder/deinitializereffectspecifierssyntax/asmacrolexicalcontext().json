{"sections":[],"abstract":[{"text":"If this syntax node acts as a lexical context from the perspective","type":"text"},{"type":"text","text":" "},{"text":"of a macro, return a new syntax node based on this node that strips all","type":"text"},{"type":"text","text":" "},{"text":"information that isn’t supposed to be exposed as a lexical context, such","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"as function bodies or the members of types\/extensions."}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DeinitializerEffectSpecifiersSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DeinitializerEffectSpecifiersSyntax\/SyntaxProtocol-Implementations"]]},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asMacroLexicalContext"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax"},{"text":"?","kind":"text"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"inlineContent":[{"text":"Returns ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":" for any syntax node that isn’t a lexical context."}],"type":"paragraph"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/macrobuilder\/deinitializereffectspecifierssyntax\/asmacrolexicalcontext()"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DeinitializerEffectSpecifiersSyntax\/asMacroLexicalContext()"},"metadata":{"modules":[{"relatedModules":["SwiftSyntax"],"name":"MacroBuilder"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asMacroLexicalContext"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"text":"?","kind":"text"}],"roleHeading":"Instance Method","extendedModule":"SwiftSyntax","title":"asMacroLexicalContext()","externalID":"s:11SwiftSyntax0B8ProtocolP0aB6MacrosE21asMacroLexicalContextAA0B0VSgyF::SYNTHESIZED::s:11SwiftSyntax029DeinitializerEffectSpecifiersB0V","role":"symbol","symbolKind":"method"},"schemaVersion":{"minor":3,"major":0,"patch":0},"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/DeinitializerEffectSpecifiersSyntax/SyntaxProtocol-Implementations":{"abstract":[],"url":"\/documentation\/macrobuilder\/deinitializereffectspecifierssyntax\/syntaxprotocol-implementations","title":"SyntaxProtocol Implementations","role":"collectionGroup","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DeinitializerEffectSpecifiersSyntax\/SyntaxProtocol-Implementations","type":"topic","kind":"article"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/DeinitializerEffectSpecifiersSyntax":{"abstract":[],"url":"\/documentation\/macrobuilder\/deinitializereffectspecifierssyntax","navigatorTitle":[{"kind":"identifier","text":"DeinitializerEffectSpecifiersSyntax"}],"title":"DeinitializerEffectSpecifiersSyntax","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DeinitializerEffectSpecifiersSyntax","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"DeinitializerEffectSpecifiersSyntax","kind":"identifier"}],"type":"topic","kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/DeinitializerEffectSpecifiersSyntax/asMacroLexicalContext()":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DeinitializerEffectSpecifiersSyntax\/asMacroLexicalContext()","type":"topic","title":"asMacroLexicalContext()","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"If this syntax node acts as a lexical context from the perspective"},{"text":" ","type":"text"},{"type":"text","text":"of a macro, return a new syntax node based on this node that strips all"},{"text":" ","type":"text"},{"text":"information that isn’t supposed to be exposed as a lexical context, such","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"as function bodies or the members of types\/extensions."}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asMacroLexicalContext"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"url":"\/documentation\/macrobuilder\/deinitializereffectspecifierssyntax\/asmacrolexicalcontext()"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/Syntax":{"abstract":[{"type":"text","text":"A Syntax node represents a tree of nodes with tokens at the leaves."},{"text":" ","type":"text"},{"type":"text","text":"Each node has accessors for its known children, and allows efficient"},{"text":" ","type":"text"},{"text":"iteration over the children through its ","type":"text"},{"type":"codeVoice","code":"children"},{"text":" property.","type":"text"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Syntax"}],"url":"\/documentation\/macrobuilder\/syntax","title":"Syntax","type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Syntax","kind":"identifier"}],"kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"}}}