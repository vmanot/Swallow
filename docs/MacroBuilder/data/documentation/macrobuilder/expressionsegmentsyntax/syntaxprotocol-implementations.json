{"identifier":{"url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/SyntaxProtocol-Implementations","interfaceLanguage":"swift"},"sections":[],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax"]]},"metadata":{"title":"SyntaxProtocol Implementations","modules":[{"name":"MacroBuilder"}],"roleHeading":"API Collection","role":"collectionGroup"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/macrobuilder\/expressionsegmentsyntax\/syntaxprotocol-implementations"]}],"topicSections":[{"identifiers":["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/init(_:)-2vndw","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/init(validating:)"],"title":"Initializers","anchor":"Initializers","generated":true},{"anchor":"Instance-Properties","title":"Instance Properties","identifiers":["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/byteRange","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/byteSize","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/byteSizeAfterTrimmingTrivia","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/contentLength","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/debugDescription","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/description","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/detached","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/endPosition","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/endPositionBeforeTrailingTrivia","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/firstToken","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/hasError","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/hasMaximumNestingLevelOverflow","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/hasParent","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/hasSequenceExpr","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/hasWarning","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/id","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/index","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/isImplicit","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/keyPathInParent","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/kind","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/lastToken","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/leadingTrivia","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/leadingTriviaLength","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/nextToken","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/parent","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/position","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/positionAfterSkippingLeadingTrivia","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/previousToken","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/root","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/syntaxNodeType","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/syntaxTextBytes","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/totalByteRange","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/totalLength","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/trailingTrivia","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/trailingTriviaLength","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/trimmed","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/trimmedByteRange","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/trimmedDescription","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/trimmedLength"],"generated":true},{"identifiers":["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/allMacroLexicalContexts(enclosingSyntax:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/as(_:)-17kai","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/as(_:)-6u7eq","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/as(_:)-8epri","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/asMacroLexicalContext()","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/asProtocol(_:)-1204i","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/asProtocol(_:)-23zoh","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/asProtocol(_:)-2d6of","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/asProtocol(_:)-36mn1","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/asProtocol(_:)-3ipf3","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/asProtocol(_:)-3yc6g","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/asProtocol(_:)-449zz","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/asProtocol(_:)-50xus","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/asProtocol(_:)-6ga1","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/asProtocol(_:)-79cb3","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/asProtocol(_:)-89zqk","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/asProtocol(_:)-999qs","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/asProtocol(_:)-9quhg","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/asProtocol(_:)-9vl6j","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/cast(_:)-2mfs0","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/cast(_:)-3p1yk","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/cast(_:)-5bn43","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/children(viewMode:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/debugDescription(includeTrivia:converter:mark:indentString:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/detach()","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/endLocation(converter:afterTrailingTrivia:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/expand(macroSpecs:contextGenerator:indentationWidth:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/expand(macros:contextGenerator:indentationWidth:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/expand(macros:in:indentationWidth:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/firstToken(viewMode:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/formatted(using:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/is(_:)-24840","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/is(_:)-4pzzf","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/is(_:)-5753t","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/isProtocol(_:)-1559c","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/isProtocol(_:)-2tma3","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/isProtocol(_:)-3ca7n","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/isProtocol(_:)-452y5","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/isProtocol(_:)-4h63","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/isProtocol(_:)-4y0xg","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/isProtocol(_:)-5fofz","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/isProtocol(_:)-5xbuk","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/isProtocol(_:)-66b13","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/isProtocol(_:)-66qi4","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/isProtocol(_:)-7sb6o","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/isProtocol(_:)-7svmk","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/isProtocol(_:)-86hj2","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/isProtocol(_:)-8w4ok","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/lastToken(viewMode:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/map(_:_:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/modifying(_:_:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/nextToken(viewMode:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/node(at:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/previousToken(viewMode:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/startLocation(converter:afterLeadingTrivia:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/token(at:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/tokens(viewMode:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/trimmed(matching:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/trimmedDescription(matching:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/with(_:_:)-6es28","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/write(to:)"],"title":"Instance Methods","anchor":"Instance-Methods","generated":true}],"kind":"article","schemaVersion":{"patch":0,"major":0,"minor":3},"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExpressionSegmentSyntax/index":{"type":"topic","abstract":[{"text":"The index of this node in a ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxChildren"},{"text":" collection.","type":"text"}],"kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"index"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B13ChildrenIndexV","text":"SyntaxChildrenIndex","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/index","role":"symbol","title":"index","deprecated":true,"url":"\/documentation\/macrobuilder\/expressionsegmentsyntax\/index"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExpressionSegmentSyntax/asProtocol(_:)-89zqk":{"kind":"symbol","url":"\/documentation\/macrobuilder\/expressionsegmentsyntax\/asprotocol(_:)-89zqk","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/asProtocol(_:)-89zqk","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"text":"((any ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax013ParenthesizedB0P","kind":"typeIdentifier","text":"ParenthesizedSyntax"},{"kind":"text","text":").Type) -> (any "},{"preciseIdentifier":"s:11SwiftSyntax013ParenthesizedB0P","text":"ParenthesizedSyntax","kind":"typeIdentifier"},{"kind":"text","text":")?"}],"title":"asProtocol(_:)","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"code":"ParenthesizedSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExpressionSegmentSyntax/trimmed":{"role":"symbol","title":"trimmed","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"trimmed","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"kind":"symbol","url":"\/documentation\/macrobuilder\/expressionsegmentsyntax\/trimmed","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/trimmed","type":"topic","abstract":[{"type":"text","text":"A copy of this node without the leading trivia of the first token in the"},{"text":" ","type":"text"},{"type":"text","text":"node and the trailing trivia of the last token in the node."}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExpressionSegmentSyntax/is(_:)-4pzzf":{"abstract":[{"type":"text","text":"Checks if the current syntax node can be cast to its own type."}],"type":"topic","url":"\/documentation\/macrobuilder\/expressionsegmentsyntax\/is(_:)-4pzzf","role":"symbol","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/is(_:)-4pzzf","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"`is`","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"deprecated":true,"title":"is(_:)"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExpressionSegmentSyntax/nextToken(viewMode:)":{"kind":"symbol","abstract":[{"type":"text","text":"Recursively walks through the tree to find the next token semantically"},{"text":" ","type":"text"},{"text":"after this node.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"nextToken","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"viewMode"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","text":"SyntaxTreeViewMode"},{"text":") -> ","kind":"text"},{"text":"TokenSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"text":"?","kind":"text"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/nextToken(viewMode:)","url":"\/documentation\/macrobuilder\/expressionsegmentsyntax\/nexttoken(viewmode:)","title":"nextToken(viewMode:)","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExpressionSegmentSyntax/isProtocol(_:)-7svmk":{"abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"code":"WithStatementsSyntax","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"type":"topic","url":"\/documentation\/macrobuilder\/expressionsegmentsyntax\/isprotocol(_:)-7svmk","role":"symbol","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/isProtocol(_:)-7svmk","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"text":"((any ","kind":"text"},{"text":"WithStatementsSyntax","preciseIdentifier":"s:11SwiftSyntax014WithStatementsB0P","kind":"typeIdentifier"},{"text":").Type) -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"title":"isProtocol(_:)"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExpressionSegmentSyntax/leadingTriviaLength":{"kind":"symbol","abstract":[{"type":"text","text":"The length this node’s leading trivia takes up spelled out in source."}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"leadingTriviaLength","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax12SourceLengthV","text":"SourceLength","kind":"typeIdentifier"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/leadingTriviaLength","url":"\/documentation\/macrobuilder\/expressionsegmentsyntax\/leadingtrivialength","title":"leadingTriviaLength","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExpressionSegmentSyntax/endPositionBeforeTrailingTrivia":{"title":"endPositionBeforeTrailingTrivia","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/endPositionBeforeTrailingTrivia","role":"symbol","kind":"symbol","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"endPositionBeforeTrailingTrivia","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"AbsolutePosition","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV"}],"url":"\/documentation\/macrobuilder\/expressionsegmentsyntax\/endpositionbeforetrailingtrivia","abstract":[{"type":"text","text":"The end position of this node’s content, before any trailing trivia."}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExpressionSegmentSyntax/node(at:)":{"abstract":[{"type":"text","text":"If the node with the given "},{"code":"syntaxIdentifier","type":"codeVoice"},{"type":"text","text":" is a (recursive) child of this node, return the node with that"},{"text":" ","type":"text"},{"text":"identifier.","type":"text"}],"type":"topic","url":"\/documentation\/macrobuilder\/expressionsegmentsyntax\/node(at:)","role":"symbol","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/node(at:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"node"},{"kind":"text","text":"("},{"kind":"externalParam","text":"at"},{"text":": ","kind":"text"},{"text":"SyntaxIdentifier","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B10IdentifierV"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier","text":"Syntax"},{"text":"?","kind":"text"}],"title":"node(at:)"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExpressionSegmentSyntax/keyPathInParent":{"kind":"symbol","abstract":[],"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"keyPathInParent","kind":"identifier"},{"text":": ","kind":"text"},{"text":"AnyKeyPath","preciseIdentifier":"s:s10AnyKeyPathC","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/keyPathInParent","url":"\/documentation\/macrobuilder\/expressionsegmentsyntax\/keypathinparent","title":"keyPathInParent","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExpressionSegmentSyntax/totalLength":{"abstract":[{"text":"The length of this node including all of its trivia.","type":"text"}],"type":"topic","url":"\/documentation\/macrobuilder\/expressionsegmentsyntax\/totallength","role":"symbol","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/totalLength","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"totalLength","kind":"identifier"},{"kind":"text","text":": "},{"text":"SourceLength","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV"}],"title":"totalLength"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExpressionSegmentSyntax/isProtocol(_:)-4y0xg":{"kind":"symbol","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"code":"NamedDeclSyntax","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"text":"((any ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax09NamedDeclB0P","text":"NamedDeclSyntax","kind":"typeIdentifier"},{"text":").Type) -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/isProtocol(_:)-4y0xg","url":"\/documentation\/macrobuilder\/expressionsegmentsyntax\/isprotocol(_:)-4y0xg","title":"isProtocol(_:)","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExpressionSegmentSyntax/formatted(using:)":{"abstract":[],"type":"topic","url":"\/documentation\/macrobuilder\/expressionsegmentsyntax\/formatted(using:)","role":"symbol","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/formatted(using:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"formatted","kind":"identifier"},{"text":"(","kind":"text"},{"text":"using","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:16SwiftBasicFormat0bC0C","kind":"typeIdentifier","text":"BasicFormat"},{"kind":"text","text":") -> "},{"text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier"}],"title":"formatted(using:)"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExpressionSegmentSyntax/isProtocol(_:)-66b13":{"kind":"symbol","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"DeclGroupSyntax"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"text":"((any ","kind":"text"},{"text":"DeclGroupSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax09DeclGroupB0P"},{"kind":"text","text":").Type) -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/isProtocol(_:)-66b13","url":"\/documentation\/macrobuilder\/expressionsegmentsyntax\/isprotocol(_:)-66b13","title":"isProtocol(_:)","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExpressionSegmentSyntax/as(_:)-17kai":{"abstract":[{"type":"text","text":"Attempts to cast the current syntax node to a given specialized syntax type."}],"url":"\/documentation\/macrobuilder\/expressionsegmentsyntax\/as(_:)-17kai","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/as(_:)-17kai","title":"as(_:)","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"`as`","kind":"identifier"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"S","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":"?","kind":"text"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExpressionSegmentSyntax/previousToken":{"role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"previousToken","kind":"identifier"},{"text":": ","kind":"text"},{"text":"TokenSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"text":"?","kind":"text"}],"deprecated":true,"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/previousToken","title":"previousToken","url":"\/documentation\/macrobuilder\/expressionsegmentsyntax\/previoustoken","abstract":[],"kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExpressionSegmentSyntax/token(at:)":{"kind":"symbol","abstract":[{"text":"Find the syntax token at the given absolute position within this","type":"text"},{"type":"text","text":" "},{"type":"text","text":"syntax node or any of its children."}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"token","kind":"identifier"},{"text":"(","kind":"text"},{"text":"at","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","text":"AbsolutePosition"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax"},{"text":"?","kind":"text"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/token(at:)","url":"\/documentation\/macrobuilder\/expressionsegmentsyntax\/token(at:)","title":"token(at:)","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExpressionSegmentSyntax/asProtocol(_:)-50xus":{"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"text":"((any ","kind":"text"},{"text":"WithOptionalCodeBlockSyntax","preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P","kind":"typeIdentifier"},{"text":").Type) -> (any ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P","text":"WithOptionalCodeBlockSyntax","kind":"typeIdentifier"},{"text":")?","kind":"text"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/asProtocol(_:)-50xus","title":"asProtocol(_:)","url":"\/documentation\/macrobuilder\/expressionsegmentsyntax\/asprotocol(_:)-50xus","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"WithOptionalCodeBlockSyntax"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExpressionSegmentSyntax/detach()":{"kind":"symbol","abstract":[],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"detach","kind":"identifier"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/detach()","url":"\/documentation\/macrobuilder\/expressionsegmentsyntax\/detach()","title":"detach()","role":"symbol","deprecated":true},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExpressionSegmentSyntax/hasError":{"role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"hasError","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/hasError","title":"hasError","url":"\/documentation\/macrobuilder\/expressionsegmentsyntax\/haserror","abstract":[{"type":"text","text":"Whether the tree contained by this layout has any"}],"kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExpressionSegmentSyntax/with(_:_:)-6es28":{"kind":"symbol","abstract":[{"type":"text","text":"Returns a new syntax node that has the child at "},{"type":"codeVoice","code":"keyPath"},{"text":" replaced by","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"value"},{"text":".","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"with","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"WritableKeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s15WritableKeyPathC"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/with(_:_:)-6es28","url":"\/documentation\/macrobuilder\/expressionsegmentsyntax\/with(_:_:)-6es28","title":"with(_:_:)","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExpressionSegmentSyntax/isProtocol(_:)-66qi4":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"text":"((any ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax013ParenthesizedB0P","text":"ParenthesizedSyntax","kind":"typeIdentifier"},{"text":").Type) -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/isProtocol(_:)-66qi4","title":"isProtocol(_:)","url":"\/documentation\/macrobuilder\/expressionsegmentsyntax\/isprotocol(_:)-66qi4","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"ParenthesizedSyntax"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExpressionSegmentSyntax/debugDescription":{"kind":"symbol","abstract":[{"type":"text","text":"A simple description of this node (ie. its type)."}],"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"debugDescription","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/debugDescription","url":"\/documentation\/macrobuilder\/expressionsegmentsyntax\/debugdescription","title":"debugDescription","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExpressionSegmentSyntax/kind":{"role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"kind"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B4KindO","text":"SyntaxKind","kind":"typeIdentifier"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/kind","title":"kind","url":"\/documentation\/macrobuilder\/expressionsegmentsyntax\/kind","abstract":[{"text":"The kind of the syntax node, e.g. if it is a ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxKind\/functionDecl"},{"text":".","type":"text"}],"kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExpressionSegmentSyntax/root":{"kind":"symbol","abstract":[{"text":"The root of the tree in which this node resides.","type":"text"}],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"root","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier","text":"Syntax"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/root","url":"\/documentation\/macrobuilder\/expressionsegmentsyntax\/root","title":"root","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/Syntax":{"abstract":[{"type":"text","text":"A Syntax node represents a tree of nodes with tokens at the leaves."},{"text":" ","type":"text"},{"type":"text","text":"Each node has accessors for its known children, and allows efficient"},{"text":" ","type":"text"},{"text":"iteration over the children through its ","type":"text"},{"type":"codeVoice","code":"children"},{"text":" property.","type":"text"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Syntax"}],"url":"\/documentation\/macrobuilder\/syntax","title":"Syntax","type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Syntax","kind":"identifier"}],"kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExpressionSegmentSyntax/isProtocol(_:)-452y5":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"text":"((any ","kind":"text"},{"text":"EffectSpecifiersSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax016EffectSpecifiersB0P"},{"text":").Type) -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/isProtocol(_:)-452y5","title":"isProtocol(_:)","url":"\/documentation\/macrobuilder\/expressionsegmentsyntax\/isprotocol(_:)-452y5","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"EffectSpecifiersSyntax"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExpressionSegmentSyntax/trimmedDescription(matching:)":{"kind":"symbol","abstract":[{"text":"The description of this node with pieces that match ","type":"text"},{"type":"codeVoice","code":"matching"},{"text":" removed","type":"text"},{"type":"text","text":" "},{"text":"from the leading trivia of the first token and trailing trivia of the","type":"text"},{"type":"text","text":" "},{"text":"last token.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"trimmedDescription","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"matching"},{"text":": (","kind":"text"},{"text":"TriviaPiece","preciseIdentifier":"s:11SwiftSyntax11TriviaPieceO","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/trimmedDescription(matching:)","url":"\/documentation\/macrobuilder\/expressionsegmentsyntax\/trimmeddescription(matching:)","title":"trimmedDescription(matching:)","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SyntaxKind/functionDecl":{"url":"\/documentation\/macrobuilder\/syntaxkind\/functiondecl","fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"kind":"identifier","text":"functionDecl"}],"title":"SyntaxKind.functionDecl","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxKind\/functionDecl","role":"symbol","type":"topic","kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExpressionSegmentSyntax/children(viewMode:)":{"kind":"symbol","url":"\/documentation\/macrobuilder\/expressionsegmentsyntax\/children(viewmode:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/children(viewMode:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"children"},{"kind":"text","text":"("},{"text":"viewMode","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","text":"SyntaxTreeViewMode","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:11SwiftSyntax0B8ChildrenV","text":"SyntaxChildren","kind":"typeIdentifier"}],"type":"topic","abstract":[{"type":"text","text":"A sequence over the children of this node."}],"title":"children(viewMode:)"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SyntaxChildren":{"title":"SyntaxChildren","abstract":[{"text":"Collection that contains the present child ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax","type":"reference"},{"type":"text","text":" nodes of the given node."}],"url":"\/documentation\/macrobuilder\/syntaxchildren","role":"symbol","navigatorTitle":[{"text":"SyntaxChildren","kind":"identifier"}],"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SyntaxChildren","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxChildren"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExpressionSegmentSyntax/asProtocol(_:)-23zoh":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"text":"((any ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax017WithTrailingCommaB0P","kind":"typeIdentifier","text":"WithTrailingCommaSyntax"},{"text":").Type) -> (any ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax017WithTrailingCommaB0P","text":"WithTrailingCommaSyntax","kind":"typeIdentifier"},{"kind":"text","text":")?"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/asProtocol(_:)-23zoh","title":"asProtocol(_:)","url":"\/documentation\/macrobuilder\/expressionsegmentsyntax\/asprotocol(_:)-23zoh","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"code":"WithTrailingCommaSyntax","type":"codeVoice"},{"text":". Otherwise return ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExpressionSegmentSyntax/isImplicit":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/isImplicit","abstract":[{"type":"text","text":"When isImplicit is true, the syntax node doesn’t include any"},{"text":" ","type":"text"},{"text":"underlying tokens, e.g. an empty CodeBlockItemList.","type":"text"}],"url":"\/documentation\/macrobuilder\/expressionsegmentsyntax\/isimplicit","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isImplicit"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"role":"symbol","deprecated":true,"title":"isImplicit","kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExpressionSegmentSyntax/previousToken(viewMode:)":{"kind":"symbol","abstract":[{"text":"Recursively walks through the tree to find the token semantically before","type":"text"},{"text":" ","type":"text"},{"text":"this node.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"previousToken","kind":"identifier"},{"text":"(","kind":"text"},{"text":"viewMode","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","text":"SyntaxTreeViewMode","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","kind":"typeIdentifier","text":"TokenSyntax"},{"text":"?","kind":"text"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/previousToken(viewMode:)","url":"\/documentation\/macrobuilder\/expressionsegmentsyntax\/previoustoken(viewmode:)","title":"previousToken(viewMode:)","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExpressionSegmentSyntax/asProtocol(_:)-79cb3":{"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"((any "},{"preciseIdentifier":"s:11SwiftSyntax014WithStatementsB0P","text":"WithStatementsSyntax","kind":"typeIdentifier"},{"text":").Type) -> (any ","kind":"text"},{"text":"WithStatementsSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax014WithStatementsB0P"},{"text":")?","kind":"text"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/asProtocol(_:)-79cb3","title":"asProtocol(_:)","url":"\/documentation\/macrobuilder\/expressionsegmentsyntax\/asprotocol(_:)-79cb3","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithStatementsSyntax"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExpressionSegmentSyntax/isProtocol(_:)-5xbuk":{"kind":"symbol","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"code":"FreestandingMacroExpansionSyntax","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"text":"((any ","kind":"text"},{"text":"FreestandingMacroExpansionSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P"},{"text":").Type) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/isProtocol(_:)-5xbuk","url":"\/documentation\/macrobuilder\/expressionsegmentsyntax\/isprotocol(_:)-5xbuk","title":"isProtocol(_:)","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExpressionSegmentSyntax/asProtocol(_:)-36mn1":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"text":"((any ","kind":"text"},{"text":"WithGenericParametersSyntax","preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P","kind":"typeIdentifier"},{"text":").Type) -> (any ","kind":"text"},{"text":"WithGenericParametersSyntax","preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P","kind":"typeIdentifier"},{"kind":"text","text":")?"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/asProtocol(_:)-36mn1","title":"asProtocol(_:)","url":"\/documentation\/macrobuilder\/expressionsegmentsyntax\/asprotocol(_:)-36mn1","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"text":" ","type":"text"},{"code":"WithGenericParametersSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExpressionSegmentSyntax/contentLength":{"url":"\/documentation\/macrobuilder\/expressionsegmentsyntax\/contentlength","role":"symbol","deprecated":true,"title":"contentLength","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/contentLength","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"contentLength","kind":"identifier"},{"text":": ","kind":"text"},{"text":"SourceLength","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV"}],"type":"topic","abstract":[]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExpressionSegmentSyntax/trimmed(matching:)":{"abstract":[{"text":"A copy of this node with pieces that match ","type":"text"},{"code":"matching","type":"codeVoice"},{"type":"text","text":" trimmed from the"},{"text":" ","type":"text"},{"type":"text","text":"leading trivia of the first token and trailing trivia of the last token."}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/trimmed(matching:)","type":"topic","role":"symbol","title":"trimmed(matching:)","url":"\/documentation\/macrobuilder\/expressionsegmentsyntax\/trimmed(matching:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"trimmed","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"matching"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax11TriviaPieceO","text":"TriviaPiece"},{"kind":"text","text":") -> "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExpressionSegmentSyntax/cast(_:)-5bn43":{"kind":"symbol","abstract":[{"text":"Force-cast the current syntax node to ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax"},{"text":" node..","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cast","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier","text":"Syntax"},{"kind":"text","text":".Type) -> "},{"text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/cast(_:)-5bn43","url":"\/documentation\/macrobuilder\/expressionsegmentsyntax\/cast(_:)-5bn43","title":"cast(_:)","role":"symbol","deprecated":true},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExpressionSegmentSyntax/totalByteRange":{"role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"totalByteRange","kind":"identifier"},{"text":": ","kind":"text"},{"text":"ByteSourceRange","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangeV"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/totalByteRange","title":"totalByteRange","url":"\/documentation\/macrobuilder\/expressionsegmentsyntax\/totalbyterange","abstract":[{"text":"The byte source range of this node including leading and trailing trivia.","type":"text"}],"kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExpressionSegmentSyntax/detached":{"title":"detached","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"detached"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"url":"\/documentation\/macrobuilder\/expressionsegmentsyntax\/detached","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/detached","abstract":[{"text":"Return this subtree with this node as the root, ie. detach this node","type":"text"},{"type":"text","text":" "},{"type":"text","text":"from its parent."}],"kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExpressionSegmentSyntax/firstToken(viewMode:)":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/firstToken(viewMode:)","abstract":[{"type":"text","text":"Returns the first token node that is part of this syntax node."}],"role":"symbol","url":"\/documentation\/macrobuilder\/expressionsegmentsyntax\/firsttoken(viewmode:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"firstToken"},{"text":"(","kind":"text"},{"text":"viewMode","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","text":"SyntaxTreeViewMode"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax"},{"kind":"text","text":"?"}],"kind":"symbol","title":"firstToken(viewMode:)","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExpressionSegmentSyntax/id":{"kind":"symbol","abstract":[{"text":"Returns a value representing the unique identity of the node.","type":"text"}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"id","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B10IdentifierV","text":"SyntaxIdentifier"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/id","url":"\/documentation\/macrobuilder\/expressionsegmentsyntax\/id","title":"id","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExpressionSegmentSyntax/endPosition":{"title":"endPosition","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/endPosition","type":"topic","abstract":[{"type":"text","text":"The end position of this node, including its trivia."}],"url":"\/documentation\/macrobuilder\/expressionsegmentsyntax\/endposition","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"endPosition"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","kind":"typeIdentifier","text":"AbsolutePosition"}],"role":"symbol","kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExpressionSegmentSyntax/isProtocol(_:)-8w4ok":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"text":"((any ","kind":"text"},{"text":"WithModifiersSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013WithModifiersB0P"},{"text":").Type) -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/isProtocol(_:)-8w4ok","title":"isProtocol(_:)","url":"\/documentation\/macrobuilder\/expressionsegmentsyntax\/isprotocol(_:)-8w4ok","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"text":" ","type":"text"},{"code":"WithModifiersSyntax","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExpressionSegmentSyntax/firstToken":{"kind":"symbol","abstract":[],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"firstToken","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","kind":"typeIdentifier","text":"TokenSyntax"},{"kind":"text","text":"?"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/firstToken","url":"\/documentation\/macrobuilder\/expressionsegmentsyntax\/firsttoken","title":"firstToken","role":"symbol","deprecated":true},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExpressionSegmentSyntax/isProtocol(_:)-4h63":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"text":"((any ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P","kind":"typeIdentifier","text":"WithCodeBlockSyntax"},{"text":").Type) -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/isProtocol(_:)-4h63","title":"isProtocol(_:)","url":"\/documentation\/macrobuilder\/expressionsegmentsyntax\/isprotocol(_:)-4h63","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"text":" ","type":"text"},{"code":"WithCodeBlockSyntax","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExpressionSegmentSyntax/description":{"kind":"symbol","abstract":[{"text":"A source-accurate description of this node.","type":"text"}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"description","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/description","url":"\/documentation\/macrobuilder\/expressionsegmentsyntax\/description","title":"description","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExpressionSegmentSyntax/sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)":{"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"sourceRange","kind":"identifier"},{"text":"(","kind":"text"},{"text":"converter","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"SourceLocationConverter","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC"},{"kind":"text","text":", "},{"text":"afterLeadingTrivia","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"afterTrailingTrivia","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:11SwiftSyntax11SourceRangeV","text":"SourceRange","kind":"typeIdentifier"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)","title":"sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)","url":"\/documentation\/macrobuilder\/expressionsegmentsyntax\/sourcerange(converter:afterleadingtrivia:aftertrailingtrivia:)","abstract":[{"text":"The source range, in the provided file, of this Syntax node.","type":"text"}],"kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExpressionSegmentSyntax/asProtocol(_:)-9vl6j":{"kind":"symbol","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"DeclGroupSyntax"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"text":"((any ","kind":"text"},{"text":"DeclGroupSyntax","preciseIdentifier":"s:11SwiftSyntax09DeclGroupB0P","kind":"typeIdentifier"},{"text":").Type) -> (any ","kind":"text"},{"text":"DeclGroupSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax09DeclGroupB0P"},{"text":")?","kind":"text"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/asProtocol(_:)-9vl6j","url":"\/documentation\/macrobuilder\/expressionsegmentsyntax\/asprotocol(_:)-9vl6j","title":"asProtocol(_:)","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExpressionSegmentSyntax/expand(macros:in:indentationWidth:)":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"expand","kind":"identifier"},{"text":"(","kind":"text"},{"text":"macros","kind":"externalParam"},{"kind":"text","text":": ["},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":" : any ","kind":"text"},{"text":"Macro","preciseIdentifier":"s:17SwiftSyntaxMacros5MacroP","kind":"typeIdentifier"},{"text":".Type], ","kind":"text"},{"text":"in","kind":"externalParam"},{"kind":"text","text":": some "},{"preciseIdentifier":"s:17SwiftSyntaxMacros21MacroExpansionContextP","text":"MacroExpansionContext","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"indentationWidth","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax6TriviaV","text":"Trivia","kind":"typeIdentifier"},{"kind":"text","text":"?) -> "},{"text":"Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"}],"deprecated":true,"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/expand(macros:in:indentationWidth:)","title":"expand(macros:in:indentationWidth:)","url":"\/documentation\/macrobuilder\/expressionsegmentsyntax\/expand(macros:in:indentationwidth:)","abstract":[],"kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExpressionSegmentSyntax/nextToken":{"kind":"symbol","abstract":[],"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"nextToken","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/nextToken","url":"\/documentation\/macrobuilder\/expressionsegmentsyntax\/nexttoken","title":"nextToken","role":"symbol","deprecated":true},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExpressionSegmentSyntax/parent":{"role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"parent","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"text":"?","kind":"text"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/parent","title":"parent","url":"\/documentation\/macrobuilder\/expressionsegmentsyntax\/parent","abstract":[{"type":"text","text":"The parent of this syntax node, or "},{"type":"codeVoice","code":"nil"},{"text":" if this node is the root.","type":"text"}],"kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExpressionSegmentSyntax/asProtocol(_:)-999qs":{"kind":"symbol","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"BracedSyntax"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"text":"((any ","kind":"text"},{"text":"BracedSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax06BracedB0P"},{"kind":"text","text":").Type) -> (any "},{"text":"BracedSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax06BracedB0P"},{"text":")?","kind":"text"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/asProtocol(_:)-999qs","url":"\/documentation\/macrobuilder\/expressionsegmentsyntax\/asprotocol(_:)-999qs","title":"asProtocol(_:)","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExpressionSegmentSyntax/expand(macros:contextGenerator:indentationWidth:)":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"expand"},{"text":"<","kind":"text"},{"text":"Context","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"macros","kind":"externalParam"},{"text":": [","kind":"text"},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"text":" : any ","kind":"text"},{"preciseIdentifier":"s:17SwiftSyntaxMacros5MacroP","text":"Macro","kind":"typeIdentifier"},{"kind":"text","text":".Type], "},{"text":"contextGenerator","kind":"externalParam"},{"kind":"text","text":": ("},{"preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Context","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"indentationWidth","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax6TriviaV","text":"Trivia"},{"text":"?) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/expand(macros:contextGenerator:indentationWidth:)","title":"expand(macros:contextGenerator:indentationWidth:)","url":"\/documentation\/macrobuilder\/expressionsegmentsyntax\/expand(macros:contextgenerator:indentationwidth:)","abstract":[],"kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExpressionSegmentSyntax/init(validating:)":{"kind":"symbol","abstract":[{"type":"text","text":"If "},{"type":"codeVoice","code":"node"},{"type":"text","text":" has contains no syntax errors, return "},{"type":"codeVoice","code":"node"},{"type":"text","text":", otherwise"},{"type":"text","text":" "},{"text":"throw an error with diagnostics describing the syntax errors.","type":"text"}],"fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"validating"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/init(validating:)","url":"\/documentation\/macrobuilder\/expressionsegmentsyntax\/init(validating:)","title":"init(validating:)","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExpressionSegmentSyntax/hasSequenceExpr":{"role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"hasSequenceExpr","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/hasSequenceExpr","title":"hasSequenceExpr","url":"\/documentation\/macrobuilder\/expressionsegmentsyntax\/hassequenceexpr","abstract":[{"text":"Whether this tree contains a missing token or unexpected node.","type":"text"}],"kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExpressionSegmentSyntax/isProtocol(_:)-7sb6o":{"abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithAttributesSyntax"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"role":"symbol","type":"topic","title":"isProtocol(_:)","kind":"symbol","url":"\/documentation\/macrobuilder\/expressionsegmentsyntax\/isprotocol(_:)-7sb6o","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"((any "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax014WithAttributesB0P","text":"WithAttributesSyntax"},{"text":").Type) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/isProtocol(_:)-7sb6o"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExpressionSegmentSyntax/startLocation(converter:afterLeadingTrivia:)":{"kind":"symbol","abstract":[{"text":"The starting location, in the provided file, of this Syntax node.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"startLocation","kind":"identifier"},{"kind":"text","text":"("},{"text":"converter","kind":"externalParam"},{"kind":"text","text":": "},{"text":"SourceLocationConverter","preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"afterLeadingTrivia","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"SourceLocation","preciseIdentifier":"s:11SwiftSyntax14SourceLocationV"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/startLocation(converter:afterLeadingTrivia:)","url":"\/documentation\/macrobuilder\/expressionsegmentsyntax\/startlocation(converter:afterleadingtrivia:)","title":"startLocation(converter:afterLeadingTrivia:)","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExpressionSegmentSyntax/trailingTrivia":{"role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"trailingTrivia"},{"text":": ","kind":"text"},{"text":"Trivia","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax6TriviaV"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/trailingTrivia","title":"trailingTrivia","url":"\/documentation\/macrobuilder\/expressionsegmentsyntax\/trailingtrivia","abstract":[{"type":"text","text":"The trailing trivia of this syntax node."}],"kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExpressionSegmentSyntax/cast(_:)-2mfs0":{"kind":"symbol","abstract":[{"type":"text","text":"Force-casts the current syntax node to its own type."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"cast"},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/cast(_:)-2mfs0","url":"\/documentation\/macrobuilder\/expressionsegmentsyntax\/cast(_:)-2mfs0","title":"cast(_:)","role":"symbol","deprecated":true},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExpressionSegmentSyntax/modifying(_:_:)":{"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"modifying","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"text":"WritableKeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s15WritableKeyPathC"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":">, ("},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":") ","kind":"text"},{"kind":"keyword","text":"rethrows"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/modifying(_:_:)","title":"modifying(_:_:)","url":"\/documentation\/macrobuilder\/expressionsegmentsyntax\/modifying(_:_:)","abstract":[],"kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExpressionSegmentSyntax/byteSize":{"kind":"symbol","abstract":[{"text":"The textual byte length of this node including leading and trailing trivia.","type":"text"}],"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"byteSize","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/byteSize","url":"\/documentation\/macrobuilder\/expressionsegmentsyntax\/bytesize","title":"byteSize","role":"symbol","deprecated":true},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExpressionSegmentSyntax/byteRange":{"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"byteRange","kind":"identifier"},{"kind":"text","text":": "},{"text":"ByteSourceRange","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangeV"}],"url":"\/documentation\/macrobuilder\/expressionsegmentsyntax\/byterange","kind":"symbol","type":"topic","title":"byteRange","role":"symbol","deprecated":true,"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/byteRange","abstract":[]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExpressionSegmentSyntax/leadingTrivia":{"role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"leadingTrivia"},{"text":": ","kind":"text"},{"text":"Trivia","preciseIdentifier":"s:11SwiftSyntax6TriviaV","kind":"typeIdentifier"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/leadingTrivia","title":"leadingTrivia","url":"\/documentation\/macrobuilder\/expressionsegmentsyntax\/leadingtrivia","abstract":[{"text":"The leading trivia of this syntax node.","type":"text"}],"kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExpressionSegmentSyntax/hasWarning":{"kind":"symbol","abstract":[{"text":"Whether the tree contained by this layout has any tokens with a","type":"text"},{"text":" ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TokenDiagnostic","type":"reference"},{"type":"text","text":" of severity "},{"type":"codeVoice","code":"warning"},{"text":".","type":"text"}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"hasWarning"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/hasWarning","url":"\/documentation\/macrobuilder\/expressionsegmentsyntax\/haswarning","title":"hasWarning","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExpressionSegmentSyntax/positionAfterSkippingLeadingTrivia":{"role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"positionAfterSkippingLeadingTrivia","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","kind":"typeIdentifier","text":"AbsolutePosition"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/positionAfterSkippingLeadingTrivia","title":"positionAfterSkippingLeadingTrivia","url":"\/documentation\/macrobuilder\/expressionsegmentsyntax\/positionafterskippingleadingtrivia","abstract":[{"text":"The absolute position of the starting point of this node, skipping any","type":"text"},{"text":" ","type":"text"},{"text":"leading trivia attached to the first token syntax.","type":"text"}],"kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExpressionSegmentSyntax/hasParent":{"kind":"symbol","abstract":[{"text":"Whether or not this node has a parent.","type":"text"}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"hasParent"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/hasParent","url":"\/documentation\/macrobuilder\/expressionsegmentsyntax\/hasparent","title":"hasParent","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExpressionSegmentSyntax/init(_:)-2vndw":{"url":"\/documentation\/macrobuilder\/expressionsegmentsyntax\/init(_:)-2vndw","abstract":[{"type":"text","text":"Initializes a new instance of the conforming type from a given specialized syntax node."}],"title":"init(_:)","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"?<","kind":"text"},{"kind":"genericParameter","text":"S"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":"?)"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/init(_:)-2vndw"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExpressionSegmentSyntax/asMacroLexicalContext()":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asMacroLexicalContext","kind":"identifier"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax"},{"text":"?","kind":"text"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/asMacroLexicalContext()","title":"asMacroLexicalContext()","url":"\/documentation\/macrobuilder\/expressionsegmentsyntax\/asmacrolexicalcontext()","abstract":[{"text":"If this syntax node acts as a lexical context from the perspective","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"of a macro, return a new syntax node based on this node that strips all"},{"text":" ","type":"text"},{"text":"information that isn’t supposed to be exposed as a lexical context, such","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"as function bodies or the members of types\/extensions."}],"kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExpressionSegmentSyntax/isProtocol(_:)-2tma3":{"kind":"symbol","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"code":"MissingNodeSyntax","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"text":"((any ","kind":"text"},{"text":"MissingNodeSyntax","preciseIdentifier":"s:11SwiftSyntax011MissingNodeB0P","kind":"typeIdentifier"},{"text":").Type) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/isProtocol(_:)-2tma3","url":"\/documentation\/macrobuilder\/expressionsegmentsyntax\/isprotocol(_:)-2tma3","title":"isProtocol(_:)","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExpressionSegmentSyntax/as(_:)-6u7eq":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"`as`","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"kind":"text","text":".Type) -> "},{"preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"deprecated":true,"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/as(_:)-6u7eq","title":"as(_:)","url":"\/documentation\/macrobuilder\/expressionsegmentsyntax\/as(_:)-6u7eq","abstract":[{"text":"Attempts to upcast the current syntax node to ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax","type":"reference"},{"text":" node.","type":"text"}],"kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExpressionSegmentSyntax/isProtocol(_:)-3ca7n":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/isProtocol(_:)-3ca7n","kind":"symbol","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithTrailingCommaSyntax"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"text":"((any ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax017WithTrailingCommaB0P","text":"WithTrailingCommaSyntax"},{"kind":"text","text":").Type) -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"title":"isProtocol(_:)","url":"\/documentation\/macrobuilder\/expressionsegmentsyntax\/isprotocol(_:)-3ca7n","role":"symbol","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExpressionSegmentSyntax/syntaxNodeType":{"kind":"symbol","abstract":[{"text":"The dynamic metatype of the concrete node.","type":"text"}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"syntaxNodeType","kind":"identifier"},{"text":": any ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP","kind":"typeIdentifier","text":"SyntaxProtocol"},{"text":".Type","kind":"text"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/syntaxNodeType","url":"\/documentation\/macrobuilder\/expressionsegmentsyntax\/syntaxnodetype","title":"syntaxNodeType","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExpressionSegmentSyntax/map(_:_:)":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"map","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"WritableKeyPath","preciseIdentifier":"s:s15WritableKeyPathC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":">, ("},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"T","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"text":"Self","kind":"typeIdentifier"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/map(_:_:)","title":"map(_:_:)","url":"\/documentation\/macrobuilder\/expressionsegmentsyntax\/map(_:_:)","abstract":[],"kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExpressionSegmentSyntax/asProtocol(_:)-449zz":{"kind":"symbol","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"MissingNodeSyntax"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"((any "},{"preciseIdentifier":"s:11SwiftSyntax011MissingNodeB0P","text":"MissingNodeSyntax","kind":"typeIdentifier"},{"text":").Type) -> (any ","kind":"text"},{"text":"MissingNodeSyntax","preciseIdentifier":"s:11SwiftSyntax011MissingNodeB0P","kind":"typeIdentifier"},{"text":")?","kind":"text"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/asProtocol(_:)-449zz","url":"\/documentation\/macrobuilder\/expressionsegmentsyntax\/asprotocol(_:)-449zz","title":"asProtocol(_:)","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExpressionSegmentSyntax/lastToken(viewMode:)":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"lastToken","kind":"identifier"},{"kind":"text","text":"("},{"text":"viewMode","kind":"externalParam"},{"kind":"text","text":": "},{"text":"SyntaxTreeViewMode","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/lastToken(viewMode:)","title":"lastToken(viewMode:)","url":"\/documentation\/macrobuilder\/expressionsegmentsyntax\/lasttoken(viewmode:)","abstract":[{"text":"Returns the last token node that is part of this syntax node.","type":"text"}],"kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExpressionSegmentSyntax/allMacroLexicalContexts(enclosingSyntax:)":{"kind":"symbol","abstract":[{"text":"Return an array of enclosing lexical contexts for the purpose of macros,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"from the innermost enclosing lexical context (first in the array) to the"},{"text":" ","type":"text"},{"type":"text","text":"outermost. If this syntax node itself is a lexical context, it will be"},{"text":" ","type":"text"},{"text":"the innermost lexical context.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"allMacroLexicalContexts","kind":"identifier"},{"text":"(","kind":"text"},{"text":"enclosingSyntax","kind":"externalParam"},{"text":": (","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier","text":"Syntax"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax","kind":"typeIdentifier"},{"text":"?) -> [","kind":"text"},{"text":"Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"text":"]","kind":"text"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/allMacroLexicalContexts(enclosingSyntax:)","url":"\/documentation\/macrobuilder\/expressionsegmentsyntax\/allmacrolexicalcontexts(enclosingsyntax:)","title":"allMacroLexicalContexts(enclosingSyntax:)","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExpressionSegmentSyntax/asProtocol(_:)-9quhg":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"((any "},{"text":"WithModifiersSyntax","preciseIdentifier":"s:11SwiftSyntax013WithModifiersB0P","kind":"typeIdentifier"},{"kind":"text","text":").Type) -> (any "},{"text":"WithModifiersSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013WithModifiersB0P"},{"kind":"text","text":")?"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/asProtocol(_:)-9quhg","title":"asProtocol(_:)","url":"\/documentation\/macrobuilder\/expressionsegmentsyntax\/asprotocol(_:)-9quhg","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"text":" ","type":"text"},{"code":"WithModifiersSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExpressionSegmentSyntax/byteSizeAfterTrimmingTrivia":{"kind":"symbol","abstract":[{"type":"text","text":"The textual byte length of this node excluding leading and trailing trivia."}],"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"byteSizeAfterTrimmingTrivia"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/byteSizeAfterTrimmingTrivia","url":"\/documentation\/macrobuilder\/expressionsegmentsyntax\/bytesizeaftertrimmingtrivia","title":"byteSizeAfterTrimmingTrivia","role":"symbol","deprecated":true},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExpressionSegmentSyntax":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ExpressionSegmentSyntax"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax","title":"ExpressionSegmentSyntax","kind":"symbol","navigatorTitle":[{"text":"ExpressionSegmentSyntax","kind":"identifier"}],"url":"\/documentation\/macrobuilder\/expressionsegmentsyntax","role":"symbol","abstract":[{"type":"text","text":"An interpolated expression inside a string literal."}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExpressionSegmentSyntax/isProtocol(_:)-5fofz":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"text":"((any ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P","kind":"typeIdentifier","text":"WithGenericParametersSyntax"},{"text":").Type) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/isProtocol(_:)-5fofz","title":"isProtocol(_:)","url":"\/documentation\/macrobuilder\/expressionsegmentsyntax\/isprotocol(_:)-5fofz","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithGenericParametersSyntax"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExpressionSegmentSyntax/expand(macroSpecs:contextGenerator:indentationWidth:)":{"kind":"symbol","abstract":[],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"expand"},{"kind":"text","text":"<"},{"text":"Context","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"macroSpecs"},{"text":": [","kind":"text"},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","text":"MacroSpec","preciseIdentifier":"s:25SwiftSyntaxMacroExpansion0C4SpecV"},{"text":"], ","kind":"text"},{"text":"contextGenerator","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"text":") -> ","kind":"text"},{"text":"Context","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"indentationWidth","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Trivia","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax6TriviaV"},{"text":"?) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/expand(macroSpecs:contextGenerator:indentationWidth:)","url":"\/documentation\/macrobuilder\/expressionsegmentsyntax\/expand(macrospecs:contextgenerator:indentationwidth:)","title":"expand(macroSpecs:contextGenerator:indentationWidth:)","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExpressionSegmentSyntax/syntaxTextBytes":{"role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"syntaxTextBytes"},{"text":": [","kind":"text"},{"text":"UInt8","preciseIdentifier":"s:s5UInt8V","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/syntaxTextBytes","title":"syntaxTextBytes","url":"\/documentation\/macrobuilder\/expressionsegmentsyntax\/syntaxtextbytes","abstract":[{"text":"Retrieve the syntax text as an array of bytes that models the input","type":"text"},{"text":" ","type":"text"},{"text":"source even in the presence of invalid UTF-8.","type":"text"}],"kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExpressionSegmentSyntax/asProtocol(_:)-3yc6g":{"kind":"symbol","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"text":" ","type":"text"},{"code":"WithAttributesSyntax","type":"codeVoice"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"text":"((any ","kind":"text"},{"kind":"typeIdentifier","text":"WithAttributesSyntax","preciseIdentifier":"s:11SwiftSyntax014WithAttributesB0P"},{"text":").Type) -> (any ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax014WithAttributesB0P","kind":"typeIdentifier","text":"WithAttributesSyntax"},{"text":")?","kind":"text"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/asProtocol(_:)-3yc6g","url":"\/documentation\/macrobuilder\/expressionsegmentsyntax\/asprotocol(_:)-3yc6g","title":"asProtocol(_:)","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExpressionSegmentSyntax/trailingTriviaLength":{"role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"trailingTriviaLength"},{"text":": ","kind":"text"},{"text":"SourceLength","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/trailingTriviaLength","title":"trailingTriviaLength","url":"\/documentation\/macrobuilder\/expressionsegmentsyntax\/trailingtrivialength","abstract":[{"text":"The length this node’s trailing trivia takes up spelled out in source.","type":"text"}],"kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/TokenDiagnostic":{"type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"TokenDiagnostic"}],"role":"symbol","abstract":[{"text":"If the token has an error that’s inherent to the token itself and not its","type":"text"},{"text":" ","type":"text"},{"text":"surrounding structure, this defines the type of the error.","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"byteOffset"},{"type":"text","text":" specifies at which offset the error occurred."}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TokenDiagnostic","title":"TokenDiagnostic","url":"\/documentation\/macrobuilder\/tokendiagnostic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"TokenDiagnostic","kind":"identifier"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExpressionSegmentSyntax/trimmedByteRange":{"kind":"symbol","abstract":[{"text":"The byte source range of this node excluding leading and trailing trivia.","type":"text"}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"trimmedByteRange"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangeV","kind":"typeIdentifier","text":"ByteSourceRange"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/trimmedByteRange","url":"\/documentation\/macrobuilder\/expressionsegmentsyntax\/trimmedbyterange","title":"trimmedByteRange","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExpressionSegmentSyntax/lastToken":{"role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"lastToken"},{"text":": ","kind":"text"},{"text":"TokenSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"text":"?","kind":"text"}],"deprecated":true,"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/lastToken","title":"lastToken","url":"\/documentation\/macrobuilder\/expressionsegmentsyntax\/lasttoken","abstract":[],"kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExpressionSegmentSyntax/cast(_:)-3p1yk":{"kind":"symbol","abstract":[{"text":"Force-casts the current syntax node to a given specialized syntax type.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"cast"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"S"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"S"},{"text":".Type) -> ","kind":"text"},{"kind":"typeIdentifier","text":"S"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/cast(_:)-3p1yk","url":"\/documentation\/macrobuilder\/expressionsegmentsyntax\/cast(_:)-3p1yk","title":"cast(_:)","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExpressionSegmentSyntax/is(_:)-5753t":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"`is`","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"deprecated":true,"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/is(_:)-5753t","title":"is(_:)","url":"\/documentation\/macrobuilder\/expressionsegmentsyntax\/is(_:)-5753t","abstract":[{"type":"text","text":"Checks if the current syntax node can be upcast to "},{"isActive":true,"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax","type":"reference"},{"type":"text","text":" node."}],"kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExpressionSegmentSyntax/asProtocol(_:)-3ipf3":{"kind":"symbol","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"code":"EffectSpecifiersSyntax","type":"codeVoice"},{"text":". Otherwise return ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"text":"((any ","kind":"text"},{"text":"EffectSpecifiersSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax016EffectSpecifiersB0P"},{"kind":"text","text":").Type) -> (any "},{"text":"EffectSpecifiersSyntax","preciseIdentifier":"s:11SwiftSyntax016EffectSpecifiersB0P","kind":"typeIdentifier"},{"text":")?","kind":"text"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/asProtocol(_:)-3ipf3","url":"\/documentation\/macrobuilder\/expressionsegmentsyntax\/asprotocol(_:)-3ipf3","title":"asProtocol(_:)","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExpressionSegmentSyntax/asProtocol(_:)-6ga1":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"text":"((any ","kind":"text"},{"text":"NamedDeclSyntax","preciseIdentifier":"s:11SwiftSyntax09NamedDeclB0P","kind":"typeIdentifier"},{"kind":"text","text":").Type) -> (any "},{"text":"NamedDeclSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax09NamedDeclB0P"},{"kind":"text","text":")?"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/asProtocol(_:)-6ga1","title":"asProtocol(_:)","url":"\/documentation\/macrobuilder\/expressionsegmentsyntax\/asprotocol(_:)-6ga1","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"text":" ","type":"text"},{"code":"NamedDeclSyntax","type":"codeVoice"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExpressionSegmentSyntax/trimmedDescription":{"kind":"symbol","abstract":[{"text":"The description of this node with leading whitespace of the first token","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and trailing whitespace of the last token removed."}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"trimmedDescription"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/trimmedDescription","url":"\/documentation\/macrobuilder\/expressionsegmentsyntax\/trimmeddescription","title":"trimmedDescription","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExpressionSegmentSyntax/write(to:)":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"write","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Target","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"text":"Target","kind":"typeIdentifier"},{"text":")","kind":"text"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/write(to:)","title":"write(to:)","url":"\/documentation\/macrobuilder\/expressionsegmentsyntax\/write(to:)","abstract":[{"text":"Prints the raw value of this node to the provided stream.","type":"text"}],"kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExpressionSegmentSyntax/is(_:)-24840":{"kind":"symbol","abstract":[{"text":"Checks if the current syntax node can be cast to a given specialized syntax type.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"`is`"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"text":"S","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/is(_:)-24840","url":"\/documentation\/macrobuilder\/expressionsegmentsyntax\/is(_:)-24840","title":"is(_:)","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExpressionSegmentSyntax/endLocation(converter:afterTrailingTrivia:)":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"endLocation"},{"kind":"text","text":"("},{"text":"converter","kind":"externalParam"},{"kind":"text","text":": "},{"text":"SourceLocationConverter","preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"afterTrailingTrivia","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax14SourceLocationV","text":"SourceLocation","kind":"typeIdentifier"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/endLocation(converter:afterTrailingTrivia:)","title":"endLocation(converter:afterTrailingTrivia:)","url":"\/documentation\/macrobuilder\/expressionsegmentsyntax\/endlocation(converter:aftertrailingtrivia:)","abstract":[{"text":"The ending location, in the provided file, of this Syntax node.","type":"text"}],"kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExpressionSegmentSyntax/debugDescription(includeTrivia:converter:mark:indentString:)":{"kind":"symbol","abstract":[{"text":"Returns a summarized dump of this node.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"debugDescription"},{"text":"(","kind":"text"},{"text":"includeTrivia","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"converter","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC","kind":"typeIdentifier","text":"SourceLocationConverter"},{"text":"?, ","kind":"text"},{"text":"mark","kind":"externalParam"},{"kind":"text","text":": (any "},{"text":"SyntaxProtocol","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP"},{"kind":"text","text":")?, "},{"text":"indentString","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":") -> "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/debugDescription(includeTrivia:converter:mark:indentString:)","url":"\/documentation\/macrobuilder\/expressionsegmentsyntax\/debugdescription(includetrivia:converter:mark:indentstring:)","title":"debugDescription(includeTrivia:converter:mark:indentString:)","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExpressionSegmentSyntax/tokens(viewMode:)":{"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"tokens","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"viewMode"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"SyntaxTreeViewMode","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax13TokenSequenceV","text":"TokenSequence","kind":"typeIdentifier"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/tokens(viewMode:)","title":"tokens(viewMode:)","url":"\/documentation\/macrobuilder\/expressionsegmentsyntax\/tokens(viewmode:)","abstract":[{"type":"text","text":"Sequence of tokens that are part of this Syntax node."}],"kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExpressionSegmentSyntax/hasMaximumNestingLevelOverflow":{"kind":"symbol","abstract":[],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"hasMaximumNestingLevelOverflow","kind":"identifier"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/hasMaximumNestingLevelOverflow","url":"\/documentation\/macrobuilder\/expressionsegmentsyntax\/hasmaximumnestingleveloverflow","title":"hasMaximumNestingLevelOverflow","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExpressionSegmentSyntax/as(_:)-8epri":{"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"`as`","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".Type) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"deprecated":true,"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/as(_:)-8epri","title":"as(_:)","url":"\/documentation\/macrobuilder\/expressionsegmentsyntax\/as(_:)-8epri","abstract":[{"type":"text","text":"Casts the current syntax node to its own type."}],"kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExpressionSegmentSyntax/position":{"kind":"symbol","abstract":[{"type":"text","text":"The absolute position of the starting point of this node. If the first token"},{"type":"text","text":" "},{"type":"text","text":"is with leading trivia, the position points to the start of the leading"},{"text":" ","type":"text"},{"type":"text","text":"trivia."}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"position","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","kind":"typeIdentifier","text":"AbsolutePosition"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/position","url":"\/documentation\/macrobuilder\/expressionsegmentsyntax\/position","title":"position","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExpressionSegmentSyntax/isProtocol(_:)-1559c":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"text":"((any ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P","kind":"typeIdentifier","text":"WithOptionalCodeBlockSyntax"},{"kind":"text","text":").Type) -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/isProtocol(_:)-1559c","title":"isProtocol(_:)","url":"\/documentation\/macrobuilder\/expressionsegmentsyntax\/isprotocol(_:)-1559c","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"WithOptionalCodeBlockSyntax"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExpressionSegmentSyntax/isProtocol(_:)-86hj2":{"kind":"symbol","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"code":"BracedSyntax","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"isProtocol"},{"text":"((any ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax06BracedB0P","text":"BracedSyntax"},{"text":").Type) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/isProtocol(_:)-86hj2","url":"\/documentation\/macrobuilder\/expressionsegmentsyntax\/isprotocol(_:)-86hj2","title":"isProtocol(_:)","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExpressionSegmentSyntax/asProtocol(_:)-2d6of":{"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"text":"((any ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P","text":"FreestandingMacroExpansionSyntax"},{"kind":"text","text":").Type) -> (any "},{"text":"FreestandingMacroExpansionSyntax","preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P","kind":"typeIdentifier"},{"text":")?","kind":"text"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/asProtocol(_:)-2d6of","title":"asProtocol(_:)","url":"\/documentation\/macrobuilder\/expressionsegmentsyntax\/asprotocol(_:)-2d6of","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"FreestandingMacroExpansionSyntax"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExpressionSegmentSyntax/asProtocol(_:)-1204i":{"kind":"symbol","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"WithCodeBlockSyntax"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"kind":"text","text":"((any "},{"text":"WithCodeBlockSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P"},{"text":").Type) -> (any ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P","text":"WithCodeBlockSyntax","kind":"typeIdentifier"},{"kind":"text","text":")?"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/asProtocol(_:)-1204i","url":"\/documentation\/macrobuilder\/expressionsegmentsyntax\/asprotocol(_:)-1204i","title":"asProtocol(_:)","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExpressionSegmentSyntax/trimmedLength":{"role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"trimmedLength"},{"text":": ","kind":"text"},{"text":"SourceLength","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressionSegmentSyntax\/trimmedLength","title":"trimmedLength","url":"\/documentation\/macrobuilder\/expressionsegmentsyntax\/trimmedlength","abstract":[{"text":"The length this node takes up spelled out in the source, excluding its","type":"text"},{"type":"text","text":" "},{"text":"leading or trailing trivia.","type":"text"}],"kind":"symbol"}}}