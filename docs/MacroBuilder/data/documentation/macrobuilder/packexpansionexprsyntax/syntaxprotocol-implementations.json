{"metadata":{"modules":[{"name":"MacroBuilder"}],"role":"collectionGroup","roleHeading":"API Collection","title":"SyntaxProtocol Implementations"},"sections":[],"kind":"article","hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax"]]},"topicSections":[{"anchor":"Initializers","identifiers":["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/init(_:)-4qp25","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/init(validating:)"],"title":"Initializers","generated":true},{"identifiers":["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/byteRange","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/byteSize","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/byteSizeAfterTrimmingTrivia","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/contentLength","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/debugDescription","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/description","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/detached","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/endPosition","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/endPositionBeforeTrailingTrivia","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/firstToken","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/hasError","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/hasMaximumNestingLevelOverflow","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/hasParent","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/hasSequenceExpr","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/hasWarning","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/id","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/index","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/isImplicit","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/keyPathInParent","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/kind","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/lastToken","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/leadingTrivia","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/leadingTriviaLength","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/nextToken","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/parent","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/position","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/positionAfterSkippingLeadingTrivia","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/previousToken","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/root","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/syntaxNodeType","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/syntaxTextBytes","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/totalByteRange","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/totalLength","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/trailingTrivia","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/trailingTriviaLength","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/trimmed","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/trimmedByteRange","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/trimmedDescription","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/trimmedLength"],"anchor":"Instance-Properties","generated":true,"title":"Instance Properties"},{"title":"Instance Methods","identifiers":["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/allMacroLexicalContexts(enclosingSyntax:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/asMacroLexicalContext()","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/asProtocol(_:)-36gvt","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/asProtocol(_:)-3lbce","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/asProtocol(_:)-4eqs1","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/asProtocol(_:)-4jtd3","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/asProtocol(_:)-4zqk","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/asProtocol(_:)-5ohry","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/asProtocol(_:)-5z7pa","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/asProtocol(_:)-6do6m","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/asProtocol(_:)-6ycvs","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/asProtocol(_:)-7c3we","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/asProtocol(_:)-7p0b2","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/asProtocol(_:)-86xil","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/asProtocol(_:)-9319y","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/asProtocol(_:)-9ngtg","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/children(viewMode:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/debugDescription(includeTrivia:converter:mark:indentString:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/detach()","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/endLocation(converter:afterTrailingTrivia:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/expand(macroSpecs:contextGenerator:indentationWidth:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/expand(macros:contextGenerator:indentationWidth:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/expand(macros:in:indentationWidth:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/firstToken(viewMode:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/formatted(using:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/isProtocol(_:)-17unx","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/isProtocol(_:)-1e9al","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/isProtocol(_:)-1qclz","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/isProtocol(_:)-2g2jy","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/isProtocol(_:)-2qkrl","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/isProtocol(_:)-3fr8q","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/isProtocol(_:)-5p6lu","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/isProtocol(_:)-6qddy","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/isProtocol(_:)-7pz4a","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/isProtocol(_:)-8q63i","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/isProtocol(_:)-9djgz","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/isProtocol(_:)-9i7pn","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/isProtocol(_:)-9uo6i","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/isProtocol(_:)-prfi","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/lastToken(viewMode:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/map(_:_:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/modifying(_:_:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/nextToken(viewMode:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/node(at:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/previousToken(viewMode:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/startLocation(converter:afterLeadingTrivia:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/token(at:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/tokens(viewMode:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/trimmed(matching:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/trimmedDescription(matching:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/with(_:_:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/write(to:)"],"generated":true,"anchor":"Instance-Methods"}],"schemaVersion":{"patch":0,"minor":3,"major":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/SyntaxProtocol-Implementations"},"variants":[{"paths":["\/documentation\/macrobuilder\/packexpansionexprsyntax\/syntaxprotocol-implementations"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/PackExpansionExprSyntax/detach()":{"title":"detach()","deprecated":true,"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/detach()","abstract":[],"type":"topic","url":"\/documentation\/macrobuilder\/packexpansionexprsyntax\/detach()","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"detach","kind":"identifier"},{"kind":"text","text":"() -> "},{"text":"Self","kind":"typeIdentifier"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/PackExpansionExprSyntax/trimmedLength":{"type":"topic","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"trimmedLength","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SourceLength","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV"}],"title":"trimmedLength","kind":"symbol","url":"\/documentation\/macrobuilder\/packexpansionexprsyntax\/trimmedlength","abstract":[{"type":"text","text":"The length this node takes up spelled out in the source, excluding its"},{"type":"text","text":" "},{"type":"text","text":"leading or trailing trivia."}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/trimmedLength","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/PackExpansionExprSyntax/asProtocol(_:)-4jtd3":{"title":"asProtocol(_:)","role":"symbol","kind":"symbol","type":"topic","url":"\/documentation\/macrobuilder\/packexpansionexprsyntax\/asprotocol(_:)-4jtd3","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"text":"((any ","kind":"text"},{"text":"WithOptionalCodeBlockSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P"},{"kind":"text","text":").Type) -> (any "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P","text":"WithOptionalCodeBlockSyntax"},{"text":")?","kind":"text"}],"abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithOptionalCodeBlockSyntax"},{"text":". Otherwise return ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/asProtocol(_:)-4jtd3"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/PackExpansionExprSyntax/token(at:)":{"title":"token(at:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/token(at:)","abstract":[{"text":"Find the syntax token at the given absolute position within this","type":"text"},{"type":"text","text":" "},{"text":"syntax node or any of its children.","type":"text"}],"type":"topic","url":"\/documentation\/macrobuilder\/packexpansionexprsyntax\/token(at:)","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"token","kind":"identifier"},{"kind":"text","text":"("},{"text":"at","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","text":"AbsolutePosition"},{"kind":"text","text":") -> "},{"text":"TokenSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"text":"?","kind":"text"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/PackExpansionExprSyntax/hasMaximumNestingLevelOverflow":{"role":"symbol","type":"topic","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/hasMaximumNestingLevelOverflow","abstract":[],"url":"\/documentation\/macrobuilder\/packexpansionexprsyntax\/hasmaximumnestingleveloverflow","title":"hasMaximumNestingLevelOverflow","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"hasMaximumNestingLevelOverflow"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/PackExpansionExprSyntax/endPositionBeforeTrailingTrivia":{"title":"endPositionBeforeTrailingTrivia","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/endPositionBeforeTrailingTrivia","abstract":[{"text":"The end position of this node’s content, before any trailing trivia.","type":"text"}],"type":"topic","url":"\/documentation\/macrobuilder\/packexpansionexprsyntax\/endpositionbeforetrailingtrivia","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"endPositionBeforeTrailingTrivia","kind":"identifier"},{"text":": ","kind":"text"},{"text":"AbsolutePosition","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/PackExpansionExprSyntax/modifying(_:_:)":{"role":"symbol","type":"topic","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/modifying(_:_:)","abstract":[],"url":"\/documentation\/macrobuilder\/packexpansionexprsyntax\/modifying(_:_:)","title":"modifying(_:_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"modifying","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:s15WritableKeyPathC","kind":"typeIdentifier","text":"WritableKeyPath"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":">, ("},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/PackExpansionExprSyntax/allMacroLexicalContexts(enclosingSyntax:)":{"title":"allMacroLexicalContexts(enclosingSyntax:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/allMacroLexicalContexts(enclosingSyntax:)","abstract":[{"type":"text","text":"Return an array of enclosing lexical contexts for the purpose of macros,"},{"text":" ","type":"text"},{"text":"from the innermost enclosing lexical context (first in the array) to the","type":"text"},{"type":"text","text":" "},{"text":"outermost. If this syntax node itself is a lexical context, it will be","type":"text"},{"type":"text","text":" "},{"text":"the innermost lexical context.","type":"text"}],"type":"topic","url":"\/documentation\/macrobuilder\/packexpansionexprsyntax\/allmacrolexicalcontexts(enclosingsyntax:)","role":"symbol","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"allMacroLexicalContexts","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"enclosingSyntax"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax","kind":"typeIdentifier"},{"kind":"text","text":"?) -> ["},{"preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax","kind":"typeIdentifier"},{"kind":"text","text":"]"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/PackExpansionExprSyntax/previousToken(viewMode:)":{"title":"previousToken(viewMode:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/previousToken(viewMode:)","type":"topic","role":"symbol","url":"\/documentation\/macrobuilder\/packexpansionexprsyntax\/previoustoken(viewmode:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"previousToken","kind":"identifier"},{"kind":"text","text":"("},{"text":"viewMode","kind":"externalParam"},{"kind":"text","text":": "},{"text":"SyntaxTreeViewMode","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"kind":"symbol","abstract":[{"type":"text","text":"Recursively walks through the tree to find the token semantically before"},{"text":" ","type":"text"},{"type":"text","text":"this node."}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/PackExpansionExprSyntax/isProtocol(_:)-9djgz":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"((any "},{"text":"BracedSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax06BracedB0P"},{"kind":"text","text":").Type) -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"type":"topic","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"BracedSyntax"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/isProtocol(_:)-9djgz","role":"symbol","kind":"symbol","title":"isProtocol(_:)","url":"\/documentation\/macrobuilder\/packexpansionexprsyntax\/isprotocol(_:)-9djgz"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/PackExpansionExprSyntax/nextToken(viewMode:)":{"role":"symbol","type":"topic","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/nextToken(viewMode:)","abstract":[{"text":"Recursively walks through the tree to find the next token semantically","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"after this node."}],"url":"\/documentation\/macrobuilder\/packexpansionexprsyntax\/nexttoken(viewmode:)","title":"nextToken(viewMode:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"nextToken"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"viewMode"},{"text":": ","kind":"text"},{"text":"SyntaxTreeViewMode","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"TokenSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"kind":"text","text":"?"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/PackExpansionExprSyntax/totalLength":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/totalLength","url":"\/documentation\/macrobuilder\/packexpansionexprsyntax\/totallength","title":"totalLength","type":"topic","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"totalLength"},{"kind":"text","text":": "},{"text":"SourceLength","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"The length of this node including all of its trivia."}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/PackExpansionExprSyntax/description":{"title":"description","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/description","abstract":[{"text":"A source-accurate description of this node.","type":"text"}],"type":"topic","url":"\/documentation\/macrobuilder\/packexpansionexprsyntax\/description","role":"symbol","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"description","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/PackExpansionExprSyntax/asMacroLexicalContext()":{"role":"symbol","type":"topic","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/asMacroLexicalContext()","abstract":[{"type":"text","text":"If this syntax node acts as a lexical context from the perspective"},{"text":" ","type":"text"},{"text":"of a macro, return a new syntax node based on this node that strips all","type":"text"},{"type":"text","text":" "},{"type":"text","text":"information that isn’t supposed to be exposed as a lexical context, such"},{"text":" ","type":"text"},{"text":"as function bodies or the members of types\/extensions.","type":"text"}],"url":"\/documentation\/macrobuilder\/packexpansionexprsyntax\/asmacrolexicalcontext()","title":"asMacroLexicalContext()","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"asMacroLexicalContext","kind":"identifier"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax","kind":"typeIdentifier"},{"kind":"text","text":"?"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/PackExpansionExprSyntax/isProtocol(_:)-8q63i":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/isProtocol(_:)-8q63i","role":"symbol","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"isProtocol"},{"text":"((any ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax011MissingNodeB0P","text":"MissingNodeSyntax","kind":"typeIdentifier"},{"text":").Type) -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"title":"isProtocol(_:)","type":"topic","url":"\/documentation\/macrobuilder\/packexpansionexprsyntax\/isprotocol(_:)-8q63i","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"MissingNodeSyntax"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/PackExpansionExprSyntax/index":{"deprecated":true,"type":"topic","url":"\/documentation\/macrobuilder\/packexpansionexprsyntax\/index","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"index"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax0B13ChildrenIndexV","text":"SyntaxChildrenIndex","kind":"typeIdentifier"}],"title":"index","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/index","abstract":[{"type":"text","text":"The index of this node in a "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxChildren"},{"type":"text","text":" collection."}],"role":"symbol","kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/PackExpansionExprSyntax/with(_:_:)":{"kind":"symbol","url":"\/documentation\/macrobuilder\/packexpansionexprsyntax\/with(_:_:)","abstract":[{"text":"Returns a new syntax node that has the child at ","type":"text"},{"code":"keyPath","type":"codeVoice"},{"type":"text","text":" replaced by"},{"type":"text","text":" "},{"type":"codeVoice","code":"value"},{"type":"text","text":"."}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/with(_:_:)","title":"with(_:_:)","role":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"with","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:s15WritableKeyPathC","text":"WritableKeyPath","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"text":"T","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/PackExpansionExprSyntax/isProtocol(_:)-prfi":{"title":"isProtocol(_:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/isProtocol(_:)-prfi","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"WithTrailingCommaSyntax"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"type":"topic","url":"\/documentation\/macrobuilder\/packexpansionexprsyntax\/isprotocol(_:)-prfi","role":"symbol","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"text":"((any ","kind":"text"},{"text":"WithTrailingCommaSyntax","preciseIdentifier":"s:11SwiftSyntax017WithTrailingCommaB0P","kind":"typeIdentifier"},{"text":").Type) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/PackExpansionExprSyntax/byteSize":{"role":"symbol","type":"topic","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/byteSize","abstract":[{"type":"text","text":"The textual byte length of this node including leading and trailing trivia."}],"url":"\/documentation\/macrobuilder\/packexpansionexprsyntax\/bytesize","title":"byteSize","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"byteSize","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"}],"deprecated":true},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/PackExpansionExprSyntax/isProtocol(_:)-2g2jy":{"title":"isProtocol(_:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/isProtocol(_:)-2g2jy","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithCodeBlockSyntax"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"type":"topic","url":"\/documentation\/macrobuilder\/packexpansionexprsyntax\/isprotocol(_:)-2g2jy","role":"symbol","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"text":"((any ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P","kind":"typeIdentifier","text":"WithCodeBlockSyntax"},{"text":").Type) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/PackExpansionExprSyntax/children(viewMode:)":{"kind":"symbol","abstract":[{"type":"text","text":"A sequence over the children of this node."}],"role":"symbol","url":"\/documentation\/macrobuilder\/packexpansionexprsyntax\/children(viewmode:)","title":"children(viewMode:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"children"},{"text":"(","kind":"text"},{"text":"viewMode","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","text":"SyntaxTreeViewMode","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B8ChildrenV","text":"SyntaxChildren","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/children(viewMode:)","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/PackExpansionExprSyntax/isProtocol(_:)-17unx":{"url":"\/documentation\/macrobuilder\/packexpansionexprsyntax\/isprotocol(_:)-17unx","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/isProtocol(_:)-17unx","role":"symbol","title":"isProtocol(_:)","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"code":"ParenthesizedSyntax","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"text":"((any ","kind":"text"},{"text":"ParenthesizedSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013ParenthesizedB0P"},{"text":").Type) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/PackExpansionExprSyntax/lastToken(viewMode:)":{"role":"symbol","type":"topic","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/lastToken(viewMode:)","abstract":[{"text":"Returns the last token node that is part of this syntax node.","type":"text"}],"url":"\/documentation\/macrobuilder\/packexpansionexprsyntax\/lasttoken(viewmode:)","title":"lastToken(viewMode:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"lastToken","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"viewMode"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"SyntaxTreeViewMode","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO"},{"text":") -> ","kind":"text"},{"text":"TokenSyntax","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","kind":"typeIdentifier"},{"text":"?","kind":"text"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/PackExpansionExprSyntax/isProtocol(_:)-1e9al":{"title":"isProtocol(_:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/isProtocol(_:)-1e9al","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"code":"WithAttributesSyntax","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"type":"topic","url":"\/documentation\/macrobuilder\/packexpansionexprsyntax\/isprotocol(_:)-1e9al","role":"symbol","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"text":"((any ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax014WithAttributesB0P","text":"WithAttributesSyntax"},{"text":").Type) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/PackExpansionExprSyntax/sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)","type":"topic","url":"\/documentation\/macrobuilder\/packexpansionexprsyntax\/sourcerange(converter:afterleadingtrivia:aftertrailingtrivia:)","title":"sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)","kind":"symbol","role":"symbol","abstract":[{"text":"The source range, in the provided file, of this Syntax node.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"sourceRange"},{"kind":"text","text":"("},{"kind":"externalParam","text":"converter"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC","kind":"typeIdentifier","text":"SourceLocationConverter"},{"kind":"text","text":", "},{"text":"afterLeadingTrivia","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":", ","kind":"text"},{"text":"afterTrailingTrivia","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":") -> "},{"text":"SourceRange","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax11SourceRangeV"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/PackExpansionExprSyntax/positionAfterSkippingLeadingTrivia":{"abstract":[{"text":"The absolute position of the starting point of this node, skipping any","type":"text"},{"type":"text","text":" "},{"text":"leading trivia attached to the first token syntax.","type":"text"}],"title":"positionAfterSkippingLeadingTrivia","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"positionAfterSkippingLeadingTrivia","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"AbsolutePosition","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV"}],"role":"symbol","type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/positionAfterSkippingLeadingTrivia","url":"\/documentation\/macrobuilder\/packexpansionexprsyntax\/positionafterskippingleadingtrivia","kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/PackExpansionExprSyntax/asProtocol(_:)-86xil":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/asProtocol(_:)-86xil","type":"topic","url":"\/documentation\/macrobuilder\/packexpansionexprsyntax\/asprotocol(_:)-86xil","title":"asProtocol(_:)","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"code":"MissingNodeSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"asProtocol"},{"text":"((any ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax011MissingNodeB0P","text":"MissingNodeSyntax"},{"kind":"text","text":").Type) -> (any "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax011MissingNodeB0P","text":"MissingNodeSyntax"},{"kind":"text","text":")?"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/PackExpansionExprSyntax/isProtocol(_:)-9i7pn":{"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/isProtocol(_:)-9i7pn","url":"\/documentation\/macrobuilder\/packexpansionexprsyntax\/isprotocol(_:)-9i7pn","role":"symbol","kind":"symbol","title":"isProtocol(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"text":"((any ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax09NamedDeclB0P","text":"NamedDeclSyntax"},{"text":").Type) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"NamedDeclSyntax"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/PackExpansionExprSyntax/node(at:)":{"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"If the node with the given "},{"code":"syntaxIdentifier","type":"codeVoice"},{"text":" is a (recursive) child of this node, return the node with that","type":"text"},{"type":"text","text":" "},{"type":"text","text":"identifier."}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"node"},{"text":"(","kind":"text"},{"text":"at","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B10IdentifierV","text":"SyntaxIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"role":"symbol","url":"\/documentation\/macrobuilder\/packexpansionexprsyntax\/node(at:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/node(at:)","title":"node(at:)"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/PackExpansionExprSyntax/asProtocol(_:)-5z7pa":{"role":"symbol","title":"asProtocol(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"text":"((any ","kind":"text"},{"kind":"typeIdentifier","text":"WithCodeBlockSyntax","preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P"},{"kind":"text","text":").Type) -> (any "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P","text":"WithCodeBlockSyntax"},{"kind":"text","text":")?"}],"type":"topic","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithCodeBlockSyntax"},{"text":". Otherwise return ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"kind":"symbol","url":"\/documentation\/macrobuilder\/packexpansionexprsyntax\/asprotocol(_:)-5z7pa","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/asProtocol(_:)-5z7pa"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/PackExpansionExprSyntax/keyPathInParent":{"abstract":[],"title":"keyPathInParent","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"keyPathInParent"},{"kind":"text","text":": "},{"text":"AnyKeyPath","preciseIdentifier":"s:s10AnyKeyPathC","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"role":"symbol","type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/keyPathInParent","url":"\/documentation\/macrobuilder\/packexpansionexprsyntax\/keypathinparent","kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/PackExpansionExprSyntax/asProtocol(_:)-4eqs1":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/asProtocol(_:)-4eqs1","type":"topic","url":"\/documentation\/macrobuilder\/packexpansionexprsyntax\/asprotocol(_:)-4eqs1","title":"asProtocol(_:)","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"WithTrailingCommaSyntax"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"text":"((any ","kind":"text"},{"text":"WithTrailingCommaSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax017WithTrailingCommaB0P"},{"text":").Type) -> (any ","kind":"text"},{"text":"WithTrailingCommaSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax017WithTrailingCommaB0P"},{"kind":"text","text":")?"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/PackExpansionExprSyntax":{"navigatorTitle":[{"kind":"identifier","text":"PackExpansionExprSyntax"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"PackExpansionExprSyntax"}],"url":"\/documentation\/macrobuilder\/packexpansionexprsyntax","type":"topic","abstract":[{"text":"A pack expansion expression spelled with ","type":"text"},{"code":"repeat","type":"codeVoice"},{"type":"text","text":"."}],"role":"symbol","title":"PackExpansionExprSyntax","kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/PackExpansionExprSyntax/leadingTrivia":{"abstract":[{"type":"text","text":"The leading trivia of this syntax node."}],"url":"\/documentation\/macrobuilder\/packexpansionexprsyntax\/leadingtrivia","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/leadingTrivia","title":"leadingTrivia","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"leadingTrivia"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax6TriviaV","kind":"typeIdentifier","text":"Trivia"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/PackExpansionExprSyntax/id":{"role":"symbol","title":"id","type":"topic","kind":"symbol","url":"\/documentation\/macrobuilder\/packexpansionexprsyntax\/id","abstract":[{"text":"Returns a value representing the unique identity of the node.","type":"text"}],"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"id","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B10IdentifierV","text":"SyntaxIdentifier"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/id"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/PackExpansionExprSyntax/isProtocol(_:)-3fr8q":{"abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"WithStatementsSyntax"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"role":"symbol","type":"topic","title":"isProtocol(_:)","kind":"symbol","url":"\/documentation\/macrobuilder\/packexpansionexprsyntax\/isprotocol(_:)-3fr8q","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"text":"((any ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax014WithStatementsB0P","text":"WithStatementsSyntax"},{"kind":"text","text":").Type) -> "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/isProtocol(_:)-3fr8q"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/PackExpansionExprSyntax/trimmedDescription(matching:)":{"title":"trimmedDescription(matching:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"trimmedDescription","kind":"identifier"},{"text":"(","kind":"text"},{"text":"matching","kind":"externalParam"},{"kind":"text","text":": ("},{"text":"TriviaPiece","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax11TriviaPieceO"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"}],"kind":"symbol","abstract":[{"text":"The description of this node with pieces that match ","type":"text"},{"type":"codeVoice","code":"matching"},{"text":" removed","type":"text"},{"type":"text","text":" "},{"text":"from the leading trivia of the first token and trailing trivia of the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"last token."}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/trimmedDescription(matching:)","url":"\/documentation\/macrobuilder\/packexpansionexprsyntax\/trimmeddescription(matching:)","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/PackExpansionExprSyntax/isProtocol(_:)-6qddy":{"abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"code":"FreestandingMacroExpansionSyntax","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"title":"isProtocol(_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"((any "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P","text":"FreestandingMacroExpansionSyntax"},{"kind":"text","text":").Type) -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"role":"symbol","type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/isProtocol(_:)-6qddy","url":"\/documentation\/macrobuilder\/packexpansionexprsyntax\/isprotocol(_:)-6qddy","kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/PackExpansionExprSyntax/startLocation(converter:afterLeadingTrivia:)":{"role":"symbol","abstract":[{"text":"The starting location, in the provided file, of this Syntax node.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/startLocation(converter:afterLeadingTrivia:)","kind":"symbol","title":"startLocation(converter:afterLeadingTrivia:)","url":"\/documentation\/macrobuilder\/packexpansionexprsyntax\/startlocation(converter:afterleadingtrivia:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"startLocation"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"converter"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC","text":"SourceLocationConverter"},{"kind":"text","text":", "},{"text":"afterLeadingTrivia","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:11SwiftSyntax14SourceLocationV","kind":"typeIdentifier","text":"SourceLocation"}],"type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/PackExpansionExprSyntax/hasWarning":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/hasWarning","type":"topic","url":"\/documentation\/macrobuilder\/packexpansionexprsyntax\/haswarning","title":"hasWarning","kind":"symbol","role":"symbol","abstract":[{"text":"Whether the tree contained by this layout has any tokens with a","type":"text"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TokenDiagnostic","isActive":true},{"text":" of severity ","type":"text"},{"code":"warning","type":"codeVoice"},{"text":".","type":"text"}],"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"hasWarning","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/PackExpansionExprSyntax/asProtocol(_:)-7p0b2":{"abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"BracedSyntax"},{"text":". Otherwise return ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"title":"asProtocol(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"asProtocol"},{"text":"((any ","kind":"text"},{"kind":"typeIdentifier","text":"BracedSyntax","preciseIdentifier":"s:11SwiftSyntax06BracedB0P"},{"kind":"text","text":").Type) -> (any "},{"text":"BracedSyntax","preciseIdentifier":"s:11SwiftSyntax06BracedB0P","kind":"typeIdentifier"},{"kind":"text","text":")?"}],"role":"symbol","type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/asProtocol(_:)-7p0b2","url":"\/documentation\/macrobuilder\/packexpansionexprsyntax\/asprotocol(_:)-7p0b2","kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/PackExpansionExprSyntax/expand(macroSpecs:contextGenerator:indentationWidth:)":{"title":"expand(macroSpecs:contextGenerator:indentationWidth:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/expand(macroSpecs:contextGenerator:indentationWidth:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"expand"},{"kind":"text","text":"<"},{"text":"Context","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"macroSpecs"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"text":" : ","kind":"text"},{"text":"MacroSpec","kind":"typeIdentifier","preciseIdentifier":"s:25SwiftSyntaxMacroExpansion0C4SpecV"},{"kind":"text","text":"], "},{"text":"contextGenerator","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"text":") -> ","kind":"text"},{"text":"Context","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"indentationWidth","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Trivia","preciseIdentifier":"s:11SwiftSyntax6TriviaV"},{"kind":"text","text":"?) -> "},{"preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax","kind":"typeIdentifier"}],"type":"topic","role":"symbol","url":"\/documentation\/macrobuilder\/packexpansionexprsyntax\/expand(macrospecs:contextgenerator:indentationwidth:)","abstract":[]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/PackExpansionExprSyntax/formatted(using:)":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"formatted","kind":"identifier"},{"text":"(","kind":"text"},{"text":"using","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:16SwiftBasicFormat0bC0C","text":"BasicFormat","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier"}],"abstract":[],"type":"topic","role":"symbol","url":"\/documentation\/macrobuilder\/packexpansionexprsyntax\/formatted(using:)","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/formatted(using:)","title":"formatted(using:)"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/PackExpansionExprSyntax/trimmed":{"kind":"symbol","type":"topic","title":"trimmed","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/trimmed","abstract":[{"type":"text","text":"A copy of this node without the leading trivia of the first token in the"},{"type":"text","text":" "},{"text":"node and the trailing trivia of the last token in the node.","type":"text"}],"url":"\/documentation\/macrobuilder\/packexpansionexprsyntax\/trimmed","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"trimmed","kind":"identifier"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SyntaxChildren":{"title":"SyntaxChildren","abstract":[{"text":"Collection that contains the present child ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax","type":"reference"},{"type":"text","text":" nodes of the given node."}],"url":"\/documentation\/macrobuilder\/syntaxchildren","role":"symbol","navigatorTitle":[{"text":"SyntaxChildren","kind":"identifier"}],"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SyntaxChildren","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxChildren"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/TokenDiagnostic":{"type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"TokenDiagnostic"}],"role":"symbol","abstract":[{"text":"If the token has an error that’s inherent to the token itself and not its","type":"text"},{"text":" ","type":"text"},{"text":"surrounding structure, this defines the type of the error.","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"byteOffset"},{"type":"text","text":" specifies at which offset the error occurred."}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TokenDiagnostic","title":"TokenDiagnostic","url":"\/documentation\/macrobuilder\/tokendiagnostic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"TokenDiagnostic","kind":"identifier"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/PackExpansionExprSyntax/asProtocol(_:)-7c3we":{"title":"asProtocol(_:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/asProtocol(_:)-7c3we","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"((any "},{"text":"WithModifiersSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013WithModifiersB0P"},{"kind":"text","text":").Type) -> (any "},{"preciseIdentifier":"s:11SwiftSyntax013WithModifiersB0P","text":"WithModifiersSyntax","kind":"typeIdentifier"},{"text":")?","kind":"text"}],"type":"topic","role":"symbol","url":"\/documentation\/macrobuilder\/packexpansionexprsyntax\/asprotocol(_:)-7c3we","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"WithModifiersSyntax"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/PackExpansionExprSyntax/detached":{"abstract":[{"text":"Return this subtree with this node as the root, ie. detach this node","type":"text"},{"type":"text","text":" "},{"text":"from its parent.","type":"text"}],"title":"detached","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"detached","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"role":"symbol","type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/detached","url":"\/documentation\/macrobuilder\/packexpansionexprsyntax\/detached","kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/PackExpansionExprSyntax/endLocation(converter:afterTrailingTrivia:)":{"title":"endLocation(converter:afterTrailingTrivia:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/endLocation(converter:afterTrailingTrivia:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"endLocation","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"converter"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC","text":"SourceLocationConverter","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"afterTrailingTrivia","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"text":") -> ","kind":"text"},{"text":"SourceLocation","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax14SourceLocationV"}],"type":"topic","role":"symbol","url":"\/documentation\/macrobuilder\/packexpansionexprsyntax\/endlocation(converter:aftertrailingtrivia:)","abstract":[{"text":"The ending location, in the provided file, of this Syntax node.","type":"text"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/PackExpansionExprSyntax/write(to:)":{"abstract":[{"text":"Prints the raw value of this node to the provided stream.","type":"text"}],"title":"write(to:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"write"},{"text":"<","kind":"text"},{"text":"Target","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"to","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"text":"Target","kind":"typeIdentifier"},{"text":")","kind":"text"}],"role":"symbol","type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/write(to:)","url":"\/documentation\/macrobuilder\/packexpansionexprsyntax\/write(to:)","kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/PackExpansionExprSyntax/asProtocol(_:)-3lbce":{"title":"asProtocol(_:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/asProtocol(_:)-3lbce","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"text":"((any ","kind":"text"},{"text":"DeclGroupSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax09DeclGroupB0P"},{"text":").Type) -> (any ","kind":"text"},{"kind":"typeIdentifier","text":"DeclGroupSyntax","preciseIdentifier":"s:11SwiftSyntax09DeclGroupB0P"},{"kind":"text","text":")?"}],"type":"topic","role":"symbol","url":"\/documentation\/macrobuilder\/packexpansionexprsyntax\/asprotocol(_:)-3lbce","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"DeclGroupSyntax"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/PackExpansionExprSyntax/firstToken(viewMode:)":{"role":"symbol","title":"firstToken(viewMode:)","type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/firstToken(viewMode:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"firstToken","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"viewMode"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","text":"SyntaxTreeViewMode","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"abstract":[{"text":"Returns the first token node that is part of this syntax node.","type":"text"}],"url":"\/documentation\/macrobuilder\/packexpansionexprsyntax\/firsttoken(viewmode:)","kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/PackExpansionExprSyntax/root":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"root","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier"}],"abstract":[{"text":"The root of the tree in which this node resides.","type":"text"}],"kind":"symbol","title":"root","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/root","role":"symbol","url":"\/documentation\/macrobuilder\/packexpansionexprsyntax\/root","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/PackExpansionExprSyntax/asProtocol(_:)-9ngtg":{"title":"asProtocol(_:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/asProtocol(_:)-9ngtg","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"code":"WithStatementsSyntax","type":"codeVoice"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"type":"topic","url":"\/documentation\/macrobuilder\/packexpansionexprsyntax\/asprotocol(_:)-9ngtg","role":"symbol","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"text":"((any ","kind":"text"},{"text":"WithStatementsSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax014WithStatementsB0P"},{"kind":"text","text":").Type) -> (any "},{"text":"WithStatementsSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax014WithStatementsB0P"},{"kind":"text","text":")?"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/PackExpansionExprSyntax/syntaxTextBytes":{"kind":"symbol","abstract":[{"type":"text","text":"Retrieve the syntax text as an array of bytes that models the input"},{"text":" ","type":"text"},{"type":"text","text":"source even in the presence of invalid UTF-8."}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/syntaxTextBytes","title":"syntaxTextBytes","url":"\/documentation\/macrobuilder\/packexpansionexprsyntax\/syntaxtextbytes","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"syntaxTextBytes","kind":"identifier"},{"text":": [","kind":"text"},{"preciseIdentifier":"s:s5UInt8V","text":"UInt8","kind":"typeIdentifier"},{"kind":"text","text":"]"}],"role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/PackExpansionExprSyntax/lastToken":{"role":"symbol","type":"topic","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/lastToken","abstract":[],"url":"\/documentation\/macrobuilder\/packexpansionexprsyntax\/lasttoken","title":"lastToken","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"lastToken"},{"text":": ","kind":"text"},{"text":"TokenSyntax","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"deprecated":true},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/PackExpansionExprSyntax/debugDescription(includeTrivia:converter:mark:indentString:)":{"url":"\/documentation\/macrobuilder\/packexpansionexprsyntax\/debugdescription(includetrivia:converter:mark:indentstring:)","title":"debugDescription(includeTrivia:converter:mark:indentString:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"debugDescription"},{"kind":"text","text":"("},{"text":"includeTrivia","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":", ","kind":"text"},{"text":"converter","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"SourceLocationConverter","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"mark"},{"text":": (any ","kind":"text"},{"text":"SyntaxProtocol","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP"},{"text":")?, ","kind":"text"},{"kind":"externalParam","text":"indentString"},{"kind":"text","text":": "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":") -> ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}],"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Returns a summarized dump of this node."}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/debugDescription(includeTrivia:converter:mark:indentString:)"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/PackExpansionExprSyntax/isProtocol(_:)-7pz4a":{"abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"code":"WithOptionalCodeBlockSyntax","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"title":"isProtocol(_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"text":"((any ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P","text":"WithOptionalCodeBlockSyntax"},{"text":").Type) -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"role":"symbol","type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/isProtocol(_:)-7pz4a","url":"\/documentation\/macrobuilder\/packexpansionexprsyntax\/isprotocol(_:)-7pz4a","kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/PackExpansionExprSyntax/hasSequenceExpr":{"title":"hasSequenceExpr","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/hasSequenceExpr","abstract":[{"text":"Whether this tree contains a missing token or unexpected node.","type":"text"}],"type":"topic","url":"\/documentation\/macrobuilder\/packexpansionexprsyntax\/hassequenceexpr","role":"symbol","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"hasSequenceExpr"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/PackExpansionExprSyntax/totalByteRange":{"role":"symbol","type":"topic","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/totalByteRange","abstract":[{"type":"text","text":"The byte source range of this node including leading and trailing trivia."}],"url":"\/documentation\/macrobuilder\/packexpansionexprsyntax\/totalbyterange","title":"totalByteRange","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"totalByteRange","kind":"identifier"},{"text":": ","kind":"text"},{"text":"ByteSourceRange","preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangeV","kind":"typeIdentifier"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/PackExpansionExprSyntax/asProtocol(_:)-6ycvs":{"title":"asProtocol(_:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/asProtocol(_:)-6ycvs","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"WithAttributesSyntax"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"type":"topic","url":"\/documentation\/macrobuilder\/packexpansionexprsyntax\/asprotocol(_:)-6ycvs","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"((any "},{"preciseIdentifier":"s:11SwiftSyntax014WithAttributesB0P","text":"WithAttributesSyntax","kind":"typeIdentifier"},{"kind":"text","text":").Type) -> (any "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax014WithAttributesB0P","text":"WithAttributesSyntax"},{"text":")?","kind":"text"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/PackExpansionExprSyntax/expand(macros:contextGenerator:indentationWidth:)":{"abstract":[],"url":"\/documentation\/macrobuilder\/packexpansionexprsyntax\/expand(macros:contextgenerator:indentationwidth:)","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/expand(macros:contextGenerator:indentationWidth:)","title":"expand(macros:contextGenerator:indentationWidth:)","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"expand"},{"text":"<","kind":"text"},{"text":"Context","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"macros"},{"kind":"text","text":": ["},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":" : any ","kind":"text"},{"preciseIdentifier":"s:17SwiftSyntaxMacros5MacroP","kind":"typeIdentifier","text":"Macro"},{"kind":"text","text":".Type], "},{"kind":"externalParam","text":"contextGenerator"},{"text":": (","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier","text":"Syntax"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Context"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"indentationWidth"},{"kind":"text","text":": "},{"text":"Trivia","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax6TriviaV"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/PackExpansionExprSyntax/byteRange":{"role":"symbol","type":"topic","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/byteRange","abstract":[],"url":"\/documentation\/macrobuilder\/packexpansionexprsyntax\/byterange","title":"byteRange","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"byteRange"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangeV","kind":"typeIdentifier","text":"ByteSourceRange"}],"deprecated":true},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/PackExpansionExprSyntax/isProtocol(_:)-9uo6i":{"title":"isProtocol(_:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/isProtocol(_:)-9uo6i","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"code":"WithModifiersSyntax","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"type":"topic","url":"\/documentation\/macrobuilder\/packexpansionexprsyntax\/isprotocol(_:)-9uo6i","role":"symbol","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"((any "},{"preciseIdentifier":"s:11SwiftSyntax013WithModifiersB0P","kind":"typeIdentifier","text":"WithModifiersSyntax"},{"text":").Type) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/PackExpansionExprSyntax/asProtocol(_:)-6do6m":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/asProtocol(_:)-6do6m","kind":"symbol","role":"symbol","url":"\/documentation\/macrobuilder\/packexpansionexprsyntax\/asprotocol(_:)-6do6m","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"((any "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax016EffectSpecifiersB0P","text":"EffectSpecifiersSyntax"},{"text":").Type) -> (any ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax016EffectSpecifiersB0P","text":"EffectSpecifiersSyntax","kind":"typeIdentifier"},{"text":")?","kind":"text"}],"abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"code":"EffectSpecifiersSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"type":"topic","title":"asProtocol(_:)"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SyntaxKind/functionDecl":{"url":"\/documentation\/macrobuilder\/syntaxkind\/functiondecl","fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"kind":"identifier","text":"functionDecl"}],"title":"SyntaxKind.functionDecl","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxKind\/functionDecl","role":"symbol","type":"topic","kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/PackExpansionExprSyntax/syntaxNodeType":{"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"syntaxNodeType","kind":"identifier"},{"kind":"text","text":": any "},{"text":"SyntaxProtocol","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP","kind":"typeIdentifier"},{"text":".Type","kind":"text"}],"kind":"symbol","title":"syntaxNodeType","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/syntaxNodeType","type":"topic","url":"\/documentation\/macrobuilder\/packexpansionexprsyntax\/syntaxnodetype","role":"symbol","abstract":[{"text":"The dynamic metatype of the concrete node.","type":"text"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/PackExpansionExprSyntax/tokens(viewMode:)":{"role":"symbol","type":"topic","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/tokens(viewMode:)","abstract":[{"type":"text","text":"Sequence of tokens that are part of this Syntax node."}],"url":"\/documentation\/macrobuilder\/packexpansionexprsyntax\/tokens(viewmode:)","title":"tokens(viewMode:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"tokens"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"viewMode"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","text":"SyntaxTreeViewMode","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax13TokenSequenceV","text":"TokenSequence"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/PackExpansionExprSyntax/byteSizeAfterTrimmingTrivia":{"abstract":[{"type":"text","text":"The textual byte length of this node excluding leading and trailing trivia."}],"role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"byteSizeAfterTrimmingTrivia","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"deprecated":true,"url":"\/documentation\/macrobuilder\/packexpansionexprsyntax\/bytesizeaftertrimmingtrivia","title":"byteSizeAfterTrimmingTrivia","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/byteSizeAfterTrimmingTrivia","kind":"symbol","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/PackExpansionExprSyntax/hasError":{"title":"hasError","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/hasError","abstract":[{"text":"Whether the tree contained by this layout has any","type":"text"}],"type":"topic","url":"\/documentation\/macrobuilder\/packexpansionexprsyntax\/haserror","role":"symbol","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"hasError","kind":"identifier"},{"kind":"text","text":": "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/PackExpansionExprSyntax/asProtocol(_:)-5ohry":{"role":"symbol","type":"topic","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/asProtocol(_:)-5ohry","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"code":"FreestandingMacroExpansionSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"url":"\/documentation\/macrobuilder\/packexpansionexprsyntax\/asprotocol(_:)-5ohry","title":"asProtocol(_:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"asProtocol"},{"text":"((any ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P","kind":"typeIdentifier","text":"FreestandingMacroExpansionSyntax"},{"text":").Type) -> (any ","kind":"text"},{"text":"FreestandingMacroExpansionSyntax","preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P","kind":"typeIdentifier"},{"text":")?","kind":"text"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/PackExpansionExprSyntax/endPosition":{"title":"endPosition","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/endPosition","abstract":[{"text":"The end position of this node, including its trivia.","type":"text"}],"type":"topic","url":"\/documentation\/macrobuilder\/packexpansionexprsyntax\/endposition","role":"symbol","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"endPosition"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","text":"AbsolutePosition"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/PackExpansionExprSyntax/isImplicit":{"role":"symbol","type":"topic","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/isImplicit","abstract":[{"text":"When isImplicit is true, the syntax node doesn’t include any","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"underlying tokens, e.g. an empty CodeBlockItemList."}],"url":"\/documentation\/macrobuilder\/packexpansionexprsyntax\/isimplicit","title":"isImplicit","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isImplicit","kind":"identifier"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"deprecated":true},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/PackExpansionExprSyntax/asProtocol(_:)-4zqk":{"title":"asProtocol(_:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/asProtocol(_:)-4zqk","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"code":"WithGenericParametersSyntax","type":"codeVoice"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"type":"topic","url":"\/documentation\/macrobuilder\/packexpansionexprsyntax\/asprotocol(_:)-4zqk","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"asProtocol"},{"text":"((any ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P","text":"WithGenericParametersSyntax","kind":"typeIdentifier"},{"text":").Type) -> (any ","kind":"text"},{"kind":"typeIdentifier","text":"WithGenericParametersSyntax","preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P"},{"text":")?","kind":"text"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/PackExpansionExprSyntax/parent":{"role":"symbol","type":"topic","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/parent","abstract":[{"text":"The parent of this syntax node, or ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":" if this node is the root.","type":"text"}],"url":"\/documentation\/macrobuilder\/packexpansionexprsyntax\/parent","title":"parent","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"parent"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier","text":"Syntax"},{"kind":"text","text":"?"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/PackExpansionExprSyntax/init(validating:)":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/init(validating:)","role":"symbol","kind":"symbol","type":"topic","abstract":[{"text":"If ","type":"text"},{"code":"node","type":"codeVoice"},{"type":"text","text":" has contains no syntax errors, return "},{"type":"codeVoice","code":"node"},{"type":"text","text":", otherwise"},{"type":"text","text":" "},{"text":"throw an error with diagnostics describing the syntax errors.","type":"text"}],"fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"validating"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"url":"\/documentation\/macrobuilder\/packexpansionexprsyntax\/init(validating:)","title":"init(validating:)"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/PackExpansionExprSyntax/kind":{"title":"kind","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/kind","type":"topic","abstract":[{"type":"text","text":"The kind of the syntax node, e.g. if it is a "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxKind\/functionDecl"},{"text":".","type":"text"}],"role":"symbol","url":"\/documentation\/macrobuilder\/packexpansionexprsyntax\/kind","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"kind","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B4KindO","kind":"typeIdentifier","text":"SyntaxKind"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/PackExpansionExprSyntax/debugDescription":{"title":"debugDescription","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/debugDescription","abstract":[{"text":"A simple description of this node (ie. its type).","type":"text"}],"type":"topic","url":"\/documentation\/macrobuilder\/packexpansionexprsyntax\/debugdescription","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"debugDescription"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/PackExpansionExprSyntax/trimmed(matching:)":{"role":"symbol","type":"topic","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/trimmed(matching:)","abstract":[{"type":"text","text":"A copy of this node with pieces that match "},{"type":"codeVoice","code":"matching"},{"text":" trimmed from the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"leading trivia of the first token and trailing trivia of the last token."}],"url":"\/documentation\/macrobuilder\/packexpansionexprsyntax\/trimmed(matching:)","title":"trimmed(matching:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"trimmed"},{"text":"(","kind":"text"},{"text":"matching","kind":"externalParam"},{"kind":"text","text":": ("},{"text":"TriviaPiece","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax11TriviaPieceO"},{"text":") -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/PackExpansionExprSyntax/contentLength":{"abstract":[],"kind":"symbol","role":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/macrobuilder\/packexpansionexprsyntax\/contentlength","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"contentLength","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV","text":"SourceLength"}],"title":"contentLength","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/contentLength"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/PackExpansionExprSyntax/hasParent":{"title":"hasParent","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/hasParent","abstract":[{"text":"Whether or not this node has a parent.","type":"text"}],"type":"topic","url":"\/documentation\/macrobuilder\/packexpansionexprsyntax\/hasparent","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"hasParent","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/PackExpansionExprSyntax/trimmedByteRange":{"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"trimmedByteRange"},{"text":": ","kind":"text"},{"text":"ByteSourceRange","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangeV"}],"title":"trimmedByteRange","abstract":[{"text":"The byte source range of this node excluding leading and trailing trivia.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/trimmedByteRange","role":"symbol","url":"\/documentation\/macrobuilder\/packexpansionexprsyntax\/trimmedbyterange","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/PackExpansionExprSyntax/isProtocol(_:)-5p6lu":{"role":"symbol","type":"topic","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/isProtocol(_:)-5p6lu","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"code":"DeclGroupSyntax","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"url":"\/documentation\/macrobuilder\/packexpansionexprsyntax\/isprotocol(_:)-5p6lu","title":"isProtocol(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"text":"((any ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax09DeclGroupB0P","text":"DeclGroupSyntax"},{"kind":"text","text":").Type) -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/PackExpansionExprSyntax/isProtocol(_:)-1qclz":{"title":"isProtocol(_:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/isProtocol(_:)-1qclz","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"code":"EffectSpecifiersSyntax","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"type":"topic","url":"\/documentation\/macrobuilder\/packexpansionexprsyntax\/isprotocol(_:)-1qclz","role":"symbol","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"text":"((any ","kind":"text"},{"text":"EffectSpecifiersSyntax","preciseIdentifier":"s:11SwiftSyntax016EffectSpecifiersB0P","kind":"typeIdentifier"},{"text":").Type) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/PackExpansionExprSyntax/firstToken":{"role":"symbol","type":"topic","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/firstToken","abstract":[],"url":"\/documentation\/macrobuilder\/packexpansionexprsyntax\/firsttoken","title":"firstToken","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"firstToken","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"TokenSyntax","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"text":"?","kind":"text"}],"deprecated":true},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/PackExpansionExprSyntax/isProtocol(_:)-2qkrl":{"title":"isProtocol(_:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/isProtocol(_:)-2qkrl","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"code":"WithGenericParametersSyntax","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"type":"topic","url":"\/documentation\/macrobuilder\/packexpansionexprsyntax\/isprotocol(_:)-2qkrl","role":"symbol","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"text":"((any ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P","text":"WithGenericParametersSyntax"},{"kind":"text","text":").Type) -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/PackExpansionExprSyntax/trailingTrivia":{"role":"symbol","type":"topic","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/trailingTrivia","abstract":[{"type":"text","text":"The trailing trivia of this syntax node."}],"url":"\/documentation\/macrobuilder\/packexpansionexprsyntax\/trailingtrivia","title":"trailingTrivia","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"trailingTrivia","kind":"identifier"},{"kind":"text","text":": "},{"text":"Trivia","preciseIdentifier":"s:11SwiftSyntax6TriviaV","kind":"typeIdentifier"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/PackExpansionExprSyntax/expand(macros:in:indentationWidth:)":{"title":"expand(macros:in:indentationWidth:)","deprecated":true,"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/expand(macros:in:indentationWidth:)","abstract":[],"type":"topic","url":"\/documentation\/macrobuilder\/packexpansionexprsyntax\/expand(macros:in:indentationwidth:)","role":"symbol","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"expand","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"macros"},{"kind":"text","text":": ["},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"kind":"text","text":" : any "},{"text":"Macro","kind":"typeIdentifier","preciseIdentifier":"s:17SwiftSyntaxMacros5MacroP"},{"text":".Type], ","kind":"text"},{"text":"in","kind":"externalParam"},{"kind":"text","text":": some "},{"text":"MacroExpansionContext","kind":"typeIdentifier","preciseIdentifier":"s:17SwiftSyntaxMacros21MacroExpansionContextP"},{"kind":"text","text":", "},{"text":"indentationWidth","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Trivia","preciseIdentifier":"s:11SwiftSyntax6TriviaV"},{"text":"?) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/PackExpansionExprSyntax/asProtocol(_:)-36gvt":{"role":"symbol","type":"topic","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/asProtocol(_:)-36gvt","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"code":"NamedDeclSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"url":"\/documentation\/macrobuilder\/packexpansionexprsyntax\/asprotocol(_:)-36gvt","title":"asProtocol(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"((any "},{"preciseIdentifier":"s:11SwiftSyntax09NamedDeclB0P","text":"NamedDeclSyntax","kind":"typeIdentifier"},{"kind":"text","text":").Type) -> (any "},{"preciseIdentifier":"s:11SwiftSyntax09NamedDeclB0P","kind":"typeIdentifier","text":"NamedDeclSyntax"},{"kind":"text","text":")?"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/PackExpansionExprSyntax/trailingTriviaLength":{"title":"trailingTriviaLength","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/trailingTriviaLength","abstract":[{"text":"The length this node’s trailing trivia takes up spelled out in source.","type":"text"}],"type":"topic","url":"\/documentation\/macrobuilder\/packexpansionexprsyntax\/trailingtrivialength","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"trailingTriviaLength","kind":"identifier"},{"kind":"text","text":": "},{"text":"SourceLength","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/PackExpansionExprSyntax/map(_:_:)":{"url":"\/documentation\/macrobuilder\/packexpansionexprsyntax\/map(_:_:)","kind":"symbol","title":"map(_:_:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/map(_:_:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"map","kind":"identifier"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:s15WritableKeyPathC","text":"WritableKeyPath"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":">, (","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"type":"topic","abstract":[]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/PackExpansionExprSyntax/init(_:)-4qp25":{"role":"symbol","type":"topic","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/init(_:)-4qp25","abstract":[{"type":"text","text":"Initializes a new instance of the conforming type from a given specialized syntax node."}],"url":"\/documentation\/macrobuilder\/packexpansionexprsyntax\/init(_:)-4qp25","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"text":"?<","kind":"text"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"S"},{"text":"?)","kind":"text"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/PackExpansionExprSyntax/previousToken":{"title":"previousToken","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"previousToken"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"type":"topic","kind":"symbol","deprecated":true,"url":"\/documentation\/macrobuilder\/packexpansionexprsyntax\/previoustoken","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/previousToken","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/PackExpansionExprSyntax/position":{"title":"position","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/position","abstract":[{"text":"The absolute position of the starting point of this node. If the first token","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"is with leading trivia, the position points to the start of the leading"},{"type":"text","text":" "},{"text":"trivia.","type":"text"}],"type":"topic","url":"\/documentation\/macrobuilder\/packexpansionexprsyntax\/position","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"position","kind":"identifier"},{"kind":"text","text":": "},{"text":"AbsolutePosition","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/PackExpansionExprSyntax/trimmedDescription":{"role":"symbol","type":"topic","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/trimmedDescription","abstract":[{"text":"The description of this node with leading whitespace of the first token","type":"text"},{"type":"text","text":" "},{"text":"and trailing whitespace of the last token removed.","type":"text"}],"url":"\/documentation\/macrobuilder\/packexpansionexprsyntax\/trimmeddescription","title":"trimmedDescription","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"trimmedDescription","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/PackExpansionExprSyntax/nextToken":{"kind":"symbol","abstract":[],"title":"nextToken","type":"topic","url":"\/documentation\/macrobuilder\/packexpansionexprsyntax\/nexttoken","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/nextToken","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"nextToken","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","kind":"typeIdentifier","text":"TokenSyntax"},{"text":"?","kind":"text"}],"deprecated":true},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/PackExpansionExprSyntax/leadingTriviaLength":{"title":"leadingTriviaLength","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/leadingTriviaLength","abstract":[{"type":"text","text":"The length this node’s leading trivia takes up spelled out in source."}],"type":"topic","url":"\/documentation\/macrobuilder\/packexpansionexprsyntax\/leadingtrivialength","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"leadingTriviaLength"},{"text":": ","kind":"text"},{"text":"SourceLength","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV","kind":"typeIdentifier"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/PackExpansionExprSyntax/asProtocol(_:)-9319y":{"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"asProtocol"},{"text":"((any ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax013ParenthesizedB0P","kind":"typeIdentifier","text":"ParenthesizedSyntax"},{"kind":"text","text":").Type) -> (any "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013ParenthesizedB0P","text":"ParenthesizedSyntax"},{"text":")?","kind":"text"}],"url":"\/documentation\/macrobuilder\/packexpansionexprsyntax\/asprotocol(_:)-9319y","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"code":"ParenthesizedSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"title":"asProtocol(_:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackExpansionExprSyntax\/asProtocol(_:)-9319y","type":"topic","kind":"symbol"}}}