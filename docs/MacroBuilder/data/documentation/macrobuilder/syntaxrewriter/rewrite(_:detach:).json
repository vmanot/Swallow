{"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxRewriter"]]},"metadata":{"symbolKind":"method","externalID":"s:11SwiftSyntax0B8RewriterC7rewrite_6detachAA0B0Vx_SbtAA0B8ProtocolRzlF","title":"rewrite(_:detach:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"rewrite"},{"text":"(some ","kind":"text"},{"text":"SyntaxProtocol","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"detach"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier","text":"Syntax"}],"modules":[{"name":"MacroBuilder"}],"roleHeading":"Instance Method","role":"symbol"},"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"symbol","abstract":[{"text":"Rewrite ","type":"text"},{"type":"codeVoice","code":"node"},{"text":", keeping its parent unless ","type":"text"},{"type":"codeVoice","code":"detach"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"true"},{"text":".","type":"text"}],"identifier":{"url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxRewriter\/rewrite(_:detach:)","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/macrobuilder\/syntaxrewriter\/rewrite(_:detach:)"]}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"rewrite","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"node"},{"text":": some ","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxProtocol","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP","kind":"typeIdentifier","text":"SyntaxProtocol"},{"kind":"text","text":", "},{"kind":"externalParam","text":"detach"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":" = false) -> "},{"kind":"typeIdentifier","text":"Syntax","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V"}]}],"kind":"declarations"}],"sections":[],"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SyntaxProtocol":{"title":"SyntaxProtocol","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxProtocol","navigatorTitle":[{"text":"SyntaxProtocol","kind":"identifier"}],"abstract":[{"text":"Provide common functionality for specialized syntax nodes. Extend this","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"protocol to provide common functionality for all syntax nodes."}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"SyntaxProtocol","kind":"identifier"}],"type":"topic","role":"symbol","url":"\/documentation\/macrobuilder\/syntaxprotocol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SyntaxRewriter":{"abstract":[{"text":"\/ Automatically generated by generate-swift-syntax","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"\/ Do not edit directly!"}],"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"SyntaxRewriter","kind":"identifier"}],"type":"topic","role":"symbol","navigatorTitle":[{"text":"SyntaxRewriter","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxRewriter","kind":"symbol","url":"\/documentation\/macrobuilder\/syntaxrewriter","title":"SyntaxRewriter"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/Syntax":{"abstract":[{"type":"text","text":"A Syntax node represents a tree of nodes with tokens at the leaves."},{"text":" ","type":"text"},{"type":"text","text":"Each node has accessors for its known children, and allows efficient"},{"text":" ","type":"text"},{"text":"iteration over the children through its ","type":"text"},{"type":"codeVoice","code":"children"},{"text":" property.","type":"text"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Syntax"}],"url":"\/documentation\/macrobuilder\/syntax","title":"Syntax","type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Syntax","kind":"identifier"}],"kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SyntaxRewriter/rewrite(_:detach:)":{"kind":"symbol","type":"topic","url":"\/documentation\/macrobuilder\/syntaxrewriter\/rewrite(_:detach:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxRewriter\/rewrite(_:detach:)","title":"rewrite(_:detach:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"rewrite","kind":"identifier"},{"text":"(some ","kind":"text"},{"text":"SyntaxProtocol","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"detach","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":") -> "},{"text":"Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"}],"abstract":[{"text":"Rewrite ","type":"text"},{"type":"codeVoice","code":"node"},{"type":"text","text":", keeping its parent unless "},{"code":"detach","type":"codeVoice"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"true"},{"type":"text","text":"."}],"role":"symbol"}}}