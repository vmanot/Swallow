{"identifier":{"url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DeclSyntax\/syntaxNodeType","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"minor":3,"major":0},"abstract":[{"text":"The dynamic metatype of the concrete node.","type":"text"}],"variants":[{"paths":["\/documentation\/macrobuilder\/declsyntax\/syntaxnodetype"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"syntaxNodeType","kind":"identifier"},{"text":": any ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP","text":"SyntaxProtocol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxProtocol","kind":"typeIdentifier"},{"kind":"text","text":".Type { "},{"text":"get","kind":"keyword"},{"kind":"text","text":" }"}]}]},{"kind":"content","content":[{"text":"Discussion","level":2,"anchor":"discussion","type":"heading"},{"inlineContent":[{"type":"text","text":"You almost always want to prefer this over "},{"type":"codeVoice","code":"type(of: self)"},{"text":" because if","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"self"},{"type":"text","text":" is a "},{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DeclSyntax","type":"reference","isActive":true},{"text":" representing a ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/FunctionDeclSyntax","isActive":true},{"type":"text","text":","},{"text":" ","type":"text"},{"code":"type(of: self)","type":"codeVoice"},{"text":" will return ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DeclSyntax"},{"type":"text","text":", while "},{"type":"codeVoice","code":"syntaxNodeType"},{"type":"text","text":" looks"},{"type":"text","text":" "},{"type":"text","text":"at the dynamic kind of this node and returns "},{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/FunctionDeclSyntax","type":"reference","isActive":true},{"type":"text","text":"."}],"type":"paragraph"}]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DeclSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DeclSyntax\/SyntaxProtocol-Implementations"]]},"kind":"symbol","metadata":{"role":"symbol","extendedModule":"SwiftSyntax","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"syntaxNodeType","kind":"identifier"},{"kind":"text","text":": any "},{"text":"SyntaxProtocol","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP"},{"text":".Type","kind":"text"}],"modules":[{"relatedModules":["SwiftSyntax"],"name":"MacroBuilder"}],"roleHeading":"Instance Property","externalID":"s:11SwiftSyntax0B8ProtocolPAAE14syntaxNodeTypeAaB_pXpvp::SYNTHESIZED::s:11SwiftSyntax04DeclB0V","title":"syntaxNodeType","symbolKind":"property"},"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/DeclSyntax/SyntaxProtocol-Implementations":{"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DeclSyntax\/SyntaxProtocol-Implementations","abstract":[],"role":"collectionGroup","title":"SyntaxProtocol Implementations","kind":"article","url":"\/documentation\/macrobuilder\/declsyntax\/syntaxprotocol-implementations"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/DeclSyntax/syntaxNodeType":{"kind":"symbol","title":"syntaxNodeType","url":"\/documentation\/macrobuilder\/declsyntax\/syntaxnodetype","abstract":[{"text":"The dynamic metatype of the concrete node.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DeclSyntax\/syntaxNodeType","type":"topic","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"syntaxNodeType","kind":"identifier"},{"kind":"text","text":": any "},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP","text":"SyntaxProtocol","kind":"typeIdentifier"},{"kind":"text","text":".Type"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/FunctionDeclSyntax":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/FunctionDeclSyntax","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"FunctionDeclSyntax","kind":"identifier"}],"title":"FunctionDeclSyntax","url":"\/documentation\/macrobuilder\/functiondeclsyntax","navigatorTitle":[{"text":"FunctionDeclSyntax","kind":"identifier"}],"type":"topic","abstract":[],"kind":"symbol","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/DeclSyntax":{"title":"DeclSyntax","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DeclSyntax","navigatorTitle":[{"text":"DeclSyntax","kind":"identifier"}],"abstract":[],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DeclSyntax"}],"type":"topic","role":"symbol","url":"\/documentation\/macrobuilder\/declsyntax"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SyntaxProtocol":{"title":"SyntaxProtocol","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxProtocol","navigatorTitle":[{"text":"SyntaxProtocol","kind":"identifier"}],"abstract":[{"text":"Provide common functionality for specialized syntax nodes. Extend this","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"protocol to provide common functionality for all syntax nodes."}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"SyntaxProtocol","kind":"identifier"}],"type":"topic","role":"symbol","url":"\/documentation\/macrobuilder\/syntaxprotocol"}}}