{"metadata":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"makeLiteralSyntax"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","text":"IntegerLiteralExprSyntax","preciseIdentifier":"s:11SwiftSyntax018IntegerLiteralExprB0V"}],"externalID":"s:18SwiftSyntaxBuilder020ExpressibleByLiteralB0PAASzRzrlE04makefB00aB007Integerf4ExprB0VyF","symbolKind":"method","extendedModule":"SwiftSyntaxBuilder","title":"makeLiteralSyntax()","modules":[{"name":"MacroBuilder","relatedModules":["SwiftSyntaxBuilder"]}],"roleHeading":"Instance Method","role":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"BinaryInteger"},{"text":".","type":"text"}]}},"schemaVersion":{"minor":3,"major":0,"patch":0},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/macrobuilder\/expressiblebyliteralsyntax\/makeliteralsyntax()-10zcu"]}],"identifier":{"url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressibleByLiteralSyntax\/makeLiteralSyntax()-10zcu","interfaceLanguage":"swift"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressibleByLiteralSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressibleByLiteralSyntax\/makeLiteralSyntax()-3qmsa"]]},"abstract":[{"type":"text","text":"Returns a syntax tree that represents the value of this instance."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"makeLiteralSyntax"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax018IntegerLiteralExprB0V","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/IntegerLiteralExprSyntax","text":"IntegerLiteralExprSyntax"}]}]},{"kind":"content","content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"inlineContent":[{"type":"text","text":"This method is usually not called directly. Instead, conforming types can"},{"text":" ","type":"text"},{"text":"be turned into syntax trees using ","type":"text"},{"code":"SwiftSyntax\/ExprSyntax\/init(literal:)","type":"codeVoice"},{"type":"text","text":":"}],"type":"paragraph"},{"code":["let expr2 = Expr(literal: [0+1, 1+1, 2+1])","\/\/ `expr2` is a syntax tree for `[1, 2, 3]`."],"type":"codeListing","syntax":null},{"inlineContent":[{"type":"text","text":"Or interpolated into a Swift source code literal with the syntax"},{"type":"text","text":" "},{"code":"\\(literal: <value>)","type":"codeVoice"},{"text":":","type":"text"}],"type":"paragraph"},{"code":["let greeting = \"Hello, world!\"","let expr1 = ExprSyntax(\"print(\\(literal: greeting))\")","\/\/ `expr1` is a syntax tree for `print(\"Hello, world!\")`"],"type":"codeListing","syntax":null}]}],"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExpressibleByLiteralSyntax":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressibleByLiteralSyntax","navigatorTitle":[{"text":"ExpressibleByLiteralSyntax","kind":"identifier"}],"url":"\/documentation\/macrobuilder\/expressiblebyliteralsyntax","kind":"symbol","role":"symbol","type":"topic","title":"ExpressibleByLiteralSyntax","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"ExpressibleByLiteralSyntax","kind":"identifier"}],"abstract":[{"type":"text","text":"A Swift type whose value can be represented directly in source code by a"},{"text":" ","type":"text"},{"text":"Swift literal.","type":"text"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/IntegerLiteralExprSyntax":{"kind":"symbol","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"IntegerLiteralExprSyntax"}],"navigatorTitle":[{"text":"IntegerLiteralExprSyntax","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/IntegerLiteralExprSyntax","url":"\/documentation\/macrobuilder\/integerliteralexprsyntax","title":"IntegerLiteralExprSyntax","abstract":[]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExpressibleByLiteralSyntax/makeLiteralSyntax()-3qmsa":{"type":"topic","title":"makeLiteralSyntax()","kind":"symbol","url":"\/documentation\/macrobuilder\/expressiblebyliteralsyntax\/makeliteralsyntax()-3qmsa","abstract":[{"text":"Returns a syntax tree that represents the value of this instance.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"makeLiteralSyntax","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"LiteralType","preciseIdentifier":"s:18SwiftSyntaxBuilder020ExpressibleByLiteralB0P0F4TypeQa","kind":"typeIdentifier"}],"defaultImplementations":2,"required":true,"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressibleByLiteralSyntax\/makeLiteralSyntax()-3qmsa","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExpressibleByLiteralSyntax/makeLiteralSyntax()-10zcu":{"title":"makeLiteralSyntax()","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"BinaryInteger"},{"type":"text","text":"."}]},"type":"topic","abstract":[{"type":"text","text":"Returns a syntax tree that represents the value of this instance."}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExpressibleByLiteralSyntax\/makeLiteralSyntax()-10zcu","kind":"symbol","url":"\/documentation\/macrobuilder\/expressiblebyliteralsyntax\/makeliteralsyntax()-10zcu","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"makeLiteralSyntax","kind":"identifier"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax018IntegerLiteralExprB0V","text":"IntegerLiteralExprSyntax"}]}}}