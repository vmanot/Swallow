{"sections":[],"metadata":{"extendedModule":"SwiftSyntax","title":"asProtocol(_:)","role":"symbol","symbolKind":"method","externalID":"s:11SwiftSyntax0B8ProtocolPAAE02asC0yAA021WithOptionalCodeBlockB0_pSgAaE_pmF::SYNTHESIZED::s:11SwiftSyntax021TypeInitializerClauseB0V","roleHeading":"Instance Method","modules":[{"name":"MacroBuilder","relatedModules":["SwiftSyntax"]}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"text":"((any ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P","text":"WithOptionalCodeBlockSyntax"},{"text":").Type) -> (any ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P","kind":"typeIdentifier","text":"WithOptionalCodeBlockSyntax"},{"kind":"text","text":")?"}]},"kind":"symbol","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"code":"WithOptionalCodeBlockSyntax","type":"codeVoice"},{"text":". Otherwise return ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TypeInitializerClauseSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TypeInitializerClauseSyntax\/SyntaxProtocol-Implementations"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/macrobuilder\/typeinitializerclausesyntax\/asprotocol(_:)-8fi1b"]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"_"},{"text":": (any ","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/WithOptionalCodeBlockSyntax","preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P","text":"WithOptionalCodeBlockSyntax","kind":"typeIdentifier"},{"text":").Type) -> (any ","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/WithOptionalCodeBlockSyntax","preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P","kind":"typeIdentifier","text":"WithOptionalCodeBlockSyntax"},{"text":")?","kind":"text"}],"platforms":["macOS"]}],"kind":"declarations"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TypeInitializerClauseSyntax\/asProtocol(_:)-8fi1b"},"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/WithOptionalCodeBlockSyntax":{"abstract":[],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"WithOptionalCodeBlockSyntax","kind":"identifier"}],"navigatorTitle":[{"text":"WithOptionalCodeBlockSyntax","kind":"identifier"}],"role":"symbol","url":"\/documentation\/macrobuilder\/withoptionalcodeblocksyntax","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/WithOptionalCodeBlockSyntax","type":"topic","title":"WithOptionalCodeBlockSyntax","kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/TypeInitializerClauseSyntax/SyntaxProtocol-Implementations":{"role":"collectionGroup","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TypeInitializerClauseSyntax\/SyntaxProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/macrobuilder\/typeinitializerclausesyntax\/syntaxprotocol-implementations","title":"SyntaxProtocol Implementations","abstract":[]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/TypeInitializerClauseSyntax":{"url":"\/documentation\/macrobuilder\/typeinitializerclausesyntax","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TypeInitializerClauseSyntax","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"TypeInitializerClauseSyntax"}],"title":"TypeInitializerClauseSyntax","abstract":[],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"TypeInitializerClauseSyntax","kind":"identifier"}],"type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/TypeInitializerClauseSyntax/asProtocol(_:)-8fi1b":{"kind":"symbol","type":"topic","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithOptionalCodeBlockSyntax"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TypeInitializerClauseSyntax\/asProtocol(_:)-8fi1b","title":"asProtocol(_:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"asProtocol"},{"kind":"text","text":"((any "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P","text":"WithOptionalCodeBlockSyntax"},{"text":").Type) -> (any ","kind":"text"},{"text":"WithOptionalCodeBlockSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P"},{"text":")?","kind":"text"}],"url":"\/documentation\/macrobuilder\/typeinitializerclausesyntax\/asprotocol(_:)-8fi1b","role":"symbol"}}}