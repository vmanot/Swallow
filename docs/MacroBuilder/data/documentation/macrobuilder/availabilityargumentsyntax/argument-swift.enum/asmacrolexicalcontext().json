{"abstract":[{"type":"text","text":"If this syntax node acts as a lexical context from the perspective"},{"type":"text","text":" "},{"text":"of a macro, return a new syntax node based on this node that strips all","type":"text"},{"type":"text","text":" "},{"text":"information that isn’t supposed to be exposed as a lexical context, such","type":"text"},{"type":"text","text":" "},{"type":"text","text":"as function bodies or the members of types\/extensions."}],"schemaVersion":{"major":0,"patch":0,"minor":3},"identifier":{"url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/AvailabilityArgumentSyntax\/Argument-swift.enum\/asMacroLexicalContext()","interfaceLanguage":"swift"},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"asMacroLexicalContext","kind":"identifier"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax"},{"text":"?","kind":"text"}],"languages":["swift"]}]},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Returns "},{"code":"nil","type":"codeVoice"},{"type":"text","text":" for any syntax node that isn’t a lexical context."}]}]}],"metadata":{"externalID":"s:11SwiftSyntax0B8ProtocolP0aB6MacrosE21asMacroLexicalContextAA0B0VSgyF::SYNTHESIZED::s:11SwiftSyntax020AvailabilityArgumentB0V0D0O","title":"asMacroLexicalContext()","modules":[{"name":"MacroBuilder","relatedModules":["SwiftSyntax"]}],"roleHeading":"Instance Method","symbolKind":"method","role":"symbol","extendedModule":"SwiftSyntax","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"asMacroLexicalContext"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"text":"?","kind":"text"}]},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/macrobuilder\/availabilityargumentsyntax\/argument-swift.enum\/asmacrolexicalcontext()"]}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/AvailabilityArgumentSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/AvailabilityArgumentSyntax\/Argument-swift.enum","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/AvailabilityArgumentSyntax\/Argument-swift.enum\/SyntaxProtocol-Implementations"]]},"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/Syntax":{"abstract":[{"type":"text","text":"A Syntax node represents a tree of nodes with tokens at the leaves."},{"text":" ","type":"text"},{"type":"text","text":"Each node has accessors for its known children, and allows efficient"},{"text":" ","type":"text"},{"text":"iteration over the children through its ","type":"text"},{"type":"codeVoice","code":"children"},{"text":" property.","type":"text"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Syntax"}],"url":"\/documentation\/macrobuilder\/syntax","title":"Syntax","type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Syntax","kind":"identifier"}],"kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/AvailabilityArgumentSyntax":{"navigatorTitle":[{"text":"AvailabilityArgumentSyntax","kind":"identifier"}],"role":"symbol","url":"\/documentation\/macrobuilder\/availabilityargumentsyntax","abstract":[{"type":"text","text":"A single argument to an "},{"code":"@available","type":"codeVoice"},{"text":" argument like ","type":"text"},{"type":"codeVoice","code":"*"},{"text":", ","type":"text"},{"type":"codeVoice","code":"iOS 10.1"},{"text":", or ","type":"text"},{"type":"codeVoice","code":"message: \"This has been deprecated\""},{"type":"text","text":"."}],"title":"AvailabilityArgumentSyntax","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/AvailabilityArgumentSyntax","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AvailabilityArgumentSyntax"}],"kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/AvailabilityArgumentSyntax/Argument-swift.enum/asMacroLexicalContext()":{"title":"asMacroLexicalContext()","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/AvailabilityArgumentSyntax\/Argument-swift.enum\/asMacroLexicalContext()","abstract":[{"type":"text","text":"If this syntax node acts as a lexical context from the perspective"},{"type":"text","text":" "},{"type":"text","text":"of a macro, return a new syntax node based on this node that strips all"},{"text":" ","type":"text"},{"type":"text","text":"information that isn’t supposed to be exposed as a lexical context, such"},{"type":"text","text":" "},{"text":"as function bodies or the members of types\/extensions.","type":"text"}],"type":"topic","url":"\/documentation\/macrobuilder\/availabilityargumentsyntax\/argument-swift.enum\/asmacrolexicalcontext()","role":"symbol","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"asMacroLexicalContext"},{"text":"() -> ","kind":"text"},{"text":"Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"kind":"text","text":"?"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/AvailabilityArgumentSyntax/Argument-swift.enum":{"kind":"symbol","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"Argument","kind":"identifier"}],"title":"AvailabilityArgumentSyntax.Argument","abstract":[],"navigatorTitle":[{"kind":"identifier","text":"Argument"}],"url":"\/documentation\/macrobuilder\/availabilityargumentsyntax\/argument-swift.enum","type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/AvailabilityArgumentSyntax\/Argument-swift.enum"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/AvailabilityArgumentSyntax/Argument-swift.enum/SyntaxProtocol-Implementations":{"kind":"article","role":"collectionGroup","title":"SyntaxProtocol Implementations","abstract":[],"url":"\/documentation\/macrobuilder\/availabilityargumentsyntax\/argument-swift.enum\/syntaxprotocol-implementations","type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/AvailabilityArgumentSyntax\/Argument-swift.enum\/SyntaxProtocol-Implementations"}}}