{"abstract":[{"type":"text","text":"Checks if the current "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxChildChoices"},{"type":"text","text":" instance can be cast to a given specialized syntax type."}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/AvailabilityArgumentSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/AvailabilityArgumentSyntax\/Argument-swift.enum","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/AvailabilityArgumentSyntax\/Argument-swift.enum\/SyntaxChildChoices-Implementations"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"`is`"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"syntaxType"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":".Type) -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":" ","kind":"text"},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"text":"S","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"text":"SyntaxProtocol","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxProtocol","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"level":2,"anchor":"return-value","type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"true"},{"type":"text","text":" if the node can be cast, "},{"code":"false","type":"codeVoice"},{"text":" otherwise.","type":"text"}]}]},{"content":[{"level":2,"type":"heading","anchor":"discussion","text":"Discussion"},{"style":"note","type":"aside","name":"Note","content":[{"inlineContent":[{"type":"text","text":"This method is marked as deprecated because it is advised not to use it for unrelated casts."}],"type":"paragraph"}]}],"kind":"content"}],"deprecationSummary":[{"inlineContent":[{"type":"text","text":"This cast will always fail"}],"type":"paragraph"}],"metadata":{"role":"symbol","title":"is(_:)","symbolKind":"method","roleHeading":"Instance Method","platforms":[],"modules":[{"relatedModules":["SwiftSyntax"],"name":"MacroBuilder"}],"externalID":"s:11SwiftSyntax0B12ChildChoicesPAAE2isySbqd__mAA0B8ProtocolRd__lF::SYNTHESIZED::s:11SwiftSyntax020AvailabilityArgumentB0V0D0O","extendedModule":"SwiftSyntax","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"`is`","kind":"identifier"},{"kind":"text","text":"<"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"S"},{"text":".Type) -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}]},"identifier":{"url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/AvailabilityArgumentSyntax\/Argument-swift.enum\/is(_:)-1kzuw","interfaceLanguage":"swift"},"kind":"symbol","variants":[{"paths":["\/documentation\/macrobuilder\/availabilityargumentsyntax\/argument-swift.enum\/is(_:)-1kzuw"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SyntaxProtocol":{"title":"SyntaxProtocol","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxProtocol","navigatorTitle":[{"text":"SyntaxProtocol","kind":"identifier"}],"abstract":[{"text":"Provide common functionality for specialized syntax nodes. Extend this","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"protocol to provide common functionality for all syntax nodes."}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"SyntaxProtocol","kind":"identifier"}],"type":"topic","role":"symbol","url":"\/documentation\/macrobuilder\/syntaxprotocol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/Syntax":{"abstract":[{"type":"text","text":"A Syntax node represents a tree of nodes with tokens at the leaves."},{"text":" ","type":"text"},{"type":"text","text":"Each node has accessors for its known children, and allows efficient"},{"text":" ","type":"text"},{"text":"iteration over the children through its ","type":"text"},{"type":"codeVoice","code":"children"},{"text":" property.","type":"text"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Syntax"}],"url":"\/documentation\/macrobuilder\/syntax","title":"Syntax","type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Syntax","kind":"identifier"}],"kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/AvailabilityArgumentSyntax/Argument-swift.enum":{"kind":"symbol","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"Argument","kind":"identifier"}],"title":"AvailabilityArgumentSyntax.Argument","abstract":[],"navigatorTitle":[{"kind":"identifier","text":"Argument"}],"url":"\/documentation\/macrobuilder\/availabilityargumentsyntax\/argument-swift.enum","type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/AvailabilityArgumentSyntax\/Argument-swift.enum"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/AvailabilityArgumentSyntax/Argument-swift.enum/is(_:)-1kzuw":{"title":"is(_:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/AvailabilityArgumentSyntax\/Argument-swift.enum\/is(_:)-1kzuw","type":"topic","abstract":[{"type":"text","text":"Checks if the current "},{"type":"reference","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxChildChoices","isActive":true},{"text":" instance can be cast to a given specialized syntax type.","type":"text"}],"role":"symbol","url":"\/documentation\/macrobuilder\/availabilityargumentsyntax\/argument-swift.enum\/is(_:)-1kzuw","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"`is`"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"S"},{"text":".Type) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"deprecated":true},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/AvailabilityArgumentSyntax":{"navigatorTitle":[{"text":"AvailabilityArgumentSyntax","kind":"identifier"}],"role":"symbol","url":"\/documentation\/macrobuilder\/availabilityargumentsyntax","abstract":[{"type":"text","text":"A single argument to an "},{"code":"@available","type":"codeVoice"},{"text":" argument like ","type":"text"},{"type":"codeVoice","code":"*"},{"text":", ","type":"text"},{"type":"codeVoice","code":"iOS 10.1"},{"text":", or ","type":"text"},{"type":"codeVoice","code":"message: \"This has been deprecated\""},{"type":"text","text":"."}],"title":"AvailabilityArgumentSyntax","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/AvailabilityArgumentSyntax","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AvailabilityArgumentSyntax"}],"kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/AvailabilityArgumentSyntax/Argument-swift.enum/SyntaxChildChoices-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/AvailabilityArgumentSyntax\/Argument-swift.enum\/SyntaxChildChoices-Implementations","type":"topic","abstract":[],"role":"collectionGroup","kind":"article","url":"\/documentation\/macrobuilder\/availabilityargumentsyntax\/argument-swift.enum\/syntaxchildchoices-implementations","title":"SyntaxChildChoices Implementations"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SyntaxChildChoices":{"url":"\/documentation\/macrobuilder\/syntaxchildchoices","navigatorTitle":[{"text":"SyntaxChildChoices","kind":"identifier"}],"abstract":[{"type":"text","text":"Protocol for the enums nested inside "},{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax","type":"reference","isActive":true},{"type":"text","text":" nodes that enumerate all the"},{"type":"text","text":" "},{"type":"text","text":"possible types a child node might have."}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxChildChoices","kind":"symbol","title":"SyntaxChildChoices","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SyntaxChildChoices","kind":"identifier"}],"role":"symbol","type":"topic"}}}