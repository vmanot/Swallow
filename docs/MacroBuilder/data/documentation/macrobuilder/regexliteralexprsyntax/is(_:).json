{"schemaVersion":{"patch":0,"minor":3,"major":0},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"`is`","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"text":"syntaxType","kind":"internalParam"},{"kind":"text","text":": "},{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprSyntax","kind":"typeIdentifier","text":"ExprSyntax","preciseIdentifier":"s:11SwiftSyntax04ExprB0V"},{"text":".Type) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}]}],"kind":"declarations"},{"content":[{"anchor":"return-value","level":2,"text":"Return Value","type":"heading"},{"inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"true"},{"text":" since the node can always be upcast to its base node.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"deprecationSummary":[{"type":"paragraph","inlineContent":[{"text":"This cast will always succeed","type":"text"}]}],"abstract":[{"type":"text","text":"Checks if the current syntax node can be upcast to its base node type ("},{"type":"reference","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprSyntax","isActive":true},{"type":"text","text":")."}],"variants":[{"paths":["\/documentation\/macrobuilder\/regexliteralexprsyntax\/is(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/RegexLiteralExprSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/RegexLiteralExprSyntax\/ExprSyntaxProtocol-Implementations"]]},"metadata":{"roleHeading":"Instance Method","symbolKind":"method","role":"symbol","title":"is(_:)","extendedModule":"SwiftSyntax","modules":[{"name":"MacroBuilder","relatedModules":["SwiftSyntax"]}],"platforms":[],"externalID":"s:11SwiftSyntax04ExprB8ProtocolPAAE2isySbAA0cB0VmF::SYNTHESIZED::s:11SwiftSyntax016RegexLiteralExprB0V","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"`is`"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax04ExprB0V","text":"ExprSyntax"},{"text":".Type) -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/RegexLiteralExprSyntax\/is(_:)"},"sections":[],"kind":"symbol","references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/RegexLiteralExprSyntax/is(_:)":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/RegexLiteralExprSyntax\/is(_:)","abstract":[{"text":"Checks if the current syntax node can be upcast to its base node type (","type":"text"},{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprSyntax","isActive":true,"type":"reference"},{"type":"text","text":")."}],"url":"\/documentation\/macrobuilder\/regexliteralexprsyntax\/is(_:)","title":"is(_:)","role":"symbol","deprecated":true,"kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"`is`"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax04ExprB0V","kind":"typeIdentifier","text":"ExprSyntax"},{"kind":"text","text":".Type) -> "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/RegexLiteralExprSyntax/ExprSyntaxProtocol-Implementations":{"kind":"article","url":"\/documentation\/macrobuilder\/regexliteralexprsyntax\/exprsyntaxprotocol-implementations","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/RegexLiteralExprSyntax\/ExprSyntaxProtocol-Implementations","role":"collectionGroup","type":"topic","title":"ExprSyntaxProtocol Implementations","abstract":[]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/RegexLiteralExprSyntax":{"navigatorTitle":[{"kind":"identifier","text":"RegexLiteralExprSyntax"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/RegexLiteralExprSyntax","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RegexLiteralExprSyntax"}],"url":"\/documentation\/macrobuilder\/regexliteralexprsyntax","type":"topic","abstract":[],"role":"symbol","title":"RegexLiteralExprSyntax","kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprSyntax":{"url":"\/documentation\/macrobuilder\/exprsyntax","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"ExprSyntax","kind":"identifier"}],"type":"topic","title":"ExprSyntax","abstract":[],"kind":"symbol","navigatorTitle":[{"text":"ExprSyntax","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprSyntax"}}}