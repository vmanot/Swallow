{"sections":[],"metadata":{"title":"trimmedByteRange","roleHeading":"Instance Property","symbolKind":"property","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"trimmedByteRange","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangeV","kind":"typeIdentifier","text":"ByteSourceRange"}],"modules":[{"relatedModules":["SwiftSyntax"],"name":"MacroBuilder"}],"externalID":"s:11SwiftSyntax0B8ProtocolPAAE16trimmedByteRangeAA0e6SourceF0Vvp::SYNTHESIZED::s:11SwiftSyntax016RegexLiteralExprB0V","role":"symbol","extendedModule":"SwiftSyntax"},"abstract":[{"type":"text","text":"The byte source range of this node excluding leading and trailing trivia."}],"identifier":{"url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/RegexLiteralExprSyntax\/trimmedByteRange","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"minor":3,"major":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"trimmedByteRange"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangeV","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ByteSourceRange","text":"ByteSourceRange"},{"kind":"text","text":" { "},{"text":"get","kind":"keyword"},{"kind":"text","text":" }"}]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"text":"Discussion","type":"heading"},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If this node consists of multiple tokens, only the first token’s"},{"type":"text","text":" "},{"type":"text","text":"leading and the last token’s trailing trivia will be trimmed."}]}],"type":"aside","name":"Note"}]}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/RegexLiteralExprSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/RegexLiteralExprSyntax\/SyntaxProtocol-Implementations"]]},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/macrobuilder\/regexliteralexprsyntax\/trimmedbyterange"]}],"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ByteSourceRange":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ByteSourceRange","url":"\/documentation\/macrobuilder\/bytesourcerange","kind":"symbol","title":"ByteSourceRange","type":"topic","abstract":[],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ByteSourceRange"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ByteSourceRange"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/RegexLiteralExprSyntax/trimmedByteRange":{"abstract":[{"type":"text","text":"The byte source range of this node excluding leading and trailing trivia."}],"title":"trimmedByteRange","url":"\/documentation\/macrobuilder\/regexliteralexprsyntax\/trimmedbyterange","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/RegexLiteralExprSyntax\/trimmedByteRange","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"trimmedByteRange","kind":"identifier"},{"text":": ","kind":"text"},{"text":"ByteSourceRange","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangeV"}],"role":"symbol","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/RegexLiteralExprSyntax":{"navigatorTitle":[{"kind":"identifier","text":"RegexLiteralExprSyntax"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/RegexLiteralExprSyntax","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RegexLiteralExprSyntax"}],"url":"\/documentation\/macrobuilder\/regexliteralexprsyntax","type":"topic","abstract":[],"role":"symbol","title":"RegexLiteralExprSyntax","kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/RegexLiteralExprSyntax/SyntaxProtocol-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/RegexLiteralExprSyntax\/SyntaxProtocol-Implementations","url":"\/documentation\/macrobuilder\/regexliteralexprsyntax\/syntaxprotocol-implementations","type":"topic","abstract":[],"role":"collectionGroup","title":"SyntaxProtocol Implementations","kind":"article"}}}