{"metadata":{"extendedModule":"SwiftSyntax","modules":[{"name":"MacroBuilder","relatedModules":["SwiftSyntax"]}],"title":"init(validating:)","roleHeading":"Initializer","role":"symbol","symbolKind":"init","externalID":"s:11SwiftSyntax0B8ProtocolP0aB7BuilderE10validatingxx_tKcfc::SYNTHESIZED::s:11SwiftSyntax016RegexLiteralExprB0V","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"text":"validating","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"}]},"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/RegexLiteralExprSyntax\/init(validating:)"},"kind":"symbol","abstract":[{"type":"text","text":"If "},{"type":"codeVoice","code":"node"},{"text":" has contains no syntax errors, return ","type":"text"},{"type":"codeVoice","code":"node"},{"text":", otherwise","type":"text"},{"type":"text","text":" "},{"type":"text","text":"throw an error with diagnostics describing the syntax errors."}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"validating"},{"text":" ","kind":"text"},{"text":"node","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","anchor":"discussion","text":"Discussion","level":2},{"type":"paragraph","inlineContent":[{"text":"This allows clients to e.g. write ","type":"text"},{"type":"codeVoice","code":"try DeclSyntax(validating: \"struct Foo {}\")"},{"type":"text","text":" "},{"text":"which constructs a ","type":"text"},{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DeclSyntax","isActive":true,"type":"reference"},{"text":" thatâ€™s guaranteed to be free of syntax","type":"text"},{"type":"text","text":" "},{"text":"errors.","type":"text"}]}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/RegexLiteralExprSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/RegexLiteralExprSyntax\/SyntaxProtocol-Implementations"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/macrobuilder\/regexliteralexprsyntax\/init(validating:)"]}],"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/RegexLiteralExprSyntax/init(validating:)":{"abstract":[{"text":"If ","type":"text"},{"code":"node","type":"codeVoice"},{"type":"text","text":" has contains no syntax errors, return "},{"type":"codeVoice","code":"node"},{"text":", otherwise","type":"text"},{"type":"text","text":" "},{"type":"text","text":"throw an error with diagnostics describing the syntax errors."}],"title":"init(validating:)","url":"\/documentation\/macrobuilder\/regexliteralexprsyntax\/init(validating:)","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/RegexLiteralExprSyntax\/init(validating:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"validating"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"role":"symbol","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/RegexLiteralExprSyntax":{"navigatorTitle":[{"kind":"identifier","text":"RegexLiteralExprSyntax"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/RegexLiteralExprSyntax","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RegexLiteralExprSyntax"}],"url":"\/documentation\/macrobuilder\/regexliteralexprsyntax","type":"topic","abstract":[],"role":"symbol","title":"RegexLiteralExprSyntax","kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/RegexLiteralExprSyntax/SyntaxProtocol-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/RegexLiteralExprSyntax\/SyntaxProtocol-Implementations","url":"\/documentation\/macrobuilder\/regexliteralexprsyntax\/syntaxprotocol-implementations","type":"topic","abstract":[],"role":"collectionGroup","title":"SyntaxProtocol Implementations","kind":"article"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/DeclSyntax":{"title":"DeclSyntax","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DeclSyntax","navigatorTitle":[{"text":"DeclSyntax","kind":"identifier"}],"abstract":[],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DeclSyntax"}],"type":"topic","role":"symbol","url":"\/documentation\/macrobuilder\/declsyntax"}}}