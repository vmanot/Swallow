{"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"type":"text","text":"Memoize the result of the execution of a predicate for the "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":" receiver."}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/FailableCoding","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/FailableCoding\/Hashable-Implementations"]]},"metadata":{"roleHeading":"Instance Method","role":"symbol","extendedModule":"Swift","symbolKind":"method","externalID":"s:SH7SwallowE7memoize4with_qd__AA6_CacheCyAA011MemoizationD3KeyVypGSg_s0F4PathCyxqd__GtlF::SYNTHESIZED::s:7Swallow14FailableCodingV","title":"memoize(with:_:)","modules":[{"relatedModules":["Swift"],"name":"MacroBuilder"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"memoize","kind":"identifier"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"MemoizationCache","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"preciseIdentifier":"s:s7KeyPathC","text":"KeyPath","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"T","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}]},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"memoize"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"text":"with","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"cache"},{"text":": ","kind":"text"},{"text":"MemoizationCache","kind":"typeIdentifier"},{"kind":"text","text":"? = MemoizationCache.shared, "},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"text":"keyPath","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"KeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"text":"T","kind":"typeIdentifier"}]}]},{"parameters":[{"name":"cache","content":[{"inlineContent":[{"text":"The shared cache to use; ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":" disables caching and simply returns the result of ","type":"text"},{"type":"codeVoice","code":"predicate"},{"type":"text","text":" directly"}],"type":"paragraph"}]}],"kind":"parameters"},{"content":[{"level":2,"type":"heading","text":"Return Value","anchor":"return-value"},{"inlineContent":[{"type":"text","text":"The result from the "},{"type":"codeVoice","code":"predicate"},{"type":"text","text":", either a previously cached value, or the result of executing the "},{"code":"predicate","type":"codeVoice"}],"type":"paragraph"}],"kind":"content"},{"content":[{"level":2,"text":"Discussion","anchor":"discussion","type":"heading"},{"inlineContent":[{"type":"text","text":"The source subject (the receiver) and the result object (the return value) should be value types, and the "},{"type":"codeVoice","code":"predicate"},{"type":"text","text":" must be a "},{"inlineContent":[{"type":"text","text":"pure"}],"type":"emphasis"},{"text":" function that captures ","type":"text"},{"inlineContent":[{"text":"no state","type":"text"}],"type":"emphasis"},{"type":"text","text":", in that:"}],"type":"paragraph"},{"type":"orderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Its return value is the same for the same arguments (no variation with local static variables, non-local variables, mutable reference arguments or input streams from I\/O devices)."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Its evaluation has no side effects (no mutation of local static variables, non-local variables, mutable reference arguments or I\/O streams).","type":"text"}],"type":"paragraph"}]}]},{"name":"Note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The calling functionâ€™s source file and line are used as the cache key, so care must be taken to avoid having multiple calls to "},{"type":"codeVoice","code":"memoize"},{"type":"text","text":" occur from a single line of source code."}]}],"type":"aside","style":"note"},{"type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Re-Throws and errors from "},{"type":"codeVoice","code":"predicate"}]}],"style":"note","name":"Throws"},{"style":"note","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Around O(1) for a successful cache hit, otherwise the complexity of the keyPath execution"}]}],"name":"Complexity"}],"kind":"content"}],"identifier":{"url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/FailableCoding\/memoize(with:_:)-92wgo","interfaceLanguage":"swift"},"kind":"symbol","variants":[{"paths":["\/documentation\/macrobuilder\/failablecoding\/memoize(with:_:)-92wgo"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/FailableCoding/Hashable-Implementations":{"url":"\/documentation\/macrobuilder\/failablecoding\/hashable-implementations","abstract":[],"title":"Hashable Implementations","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/FailableCoding\/Hashable-Implementations","role":"collectionGroup","type":"topic","kind":"article"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/FailableCoding/memoize(with:_:)-92wgo":{"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"memoize"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"text":"with","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"MemoizationCache"},{"text":"?, ","kind":"text"},{"text":"KeyPath","preciseIdentifier":"s:s7KeyPathC","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/FailableCoding\/memoize(with:_:)-92wgo","title":"memoize(with:_:)","kind":"symbol","type":"topic","url":"\/documentation\/macrobuilder\/failablecoding\/memoize(with:_:)-92wgo","abstract":[{"type":"text","text":"Memoize the result of the execution of a predicate for the "},{"code":"Hashable","type":"codeVoice"},{"type":"text","text":" receiver."}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/FailableCoding":{"type":"topic","role":"symbol","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/FailableCoding","kind":"symbol","title":"FailableCoding","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"FailableCoding","kind":"identifier"}],"navigatorTitle":[{"text":"FailableCoding","kind":"identifier"}],"url":"\/documentation\/macrobuilder\/failablecoding"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"}}}