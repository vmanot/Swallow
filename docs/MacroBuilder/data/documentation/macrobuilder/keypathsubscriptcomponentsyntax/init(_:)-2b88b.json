{"schemaVersion":{"patch":0,"minor":3,"major":0},"abstract":[{"type":"text","text":"Converts the given specialized node to this type. Returns "},{"code":"nil","type":"codeVoice"},{"type":"text","text":" if the"},{"text":" ","type":"text"},{"text":"conversion is not possible.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"init","kind":"keyword"},{"kind":"text","text":"?("},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"text":"node","kind":"internalParam"},{"kind":"text","text":": some "},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP","text":"SyntaxProtocol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxProtocol","kind":"typeIdentifier"},{"kind":"text","text":")"}],"languages":["swift"]}]}],"metadata":{"fragments":[{"kind":"identifier","text":"init"},{"text":"?(some ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP","kind":"typeIdentifier","text":"SyntaxProtocol"},{"kind":"text","text":")"}],"title":"init(_:)","modules":[{"name":"MacroBuilder"}],"role":"symbol","symbolKind":"init","roleHeading":"Initializer","externalID":"s:11SwiftSyntax025KeyPathSubscriptComponentB0VyACSgxhcAA0B8ProtocolRzlufc"},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/KeyPathSubscriptComponentSyntax"]]},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/macrobuilder\/keypathsubscriptcomponentsyntax\/init(_:)-2b88b"]}],"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/KeyPathSubscriptComponentSyntax\/init(_:)-2b88b"},"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/KeyPathSubscriptComponentSyntax/init(_:)-2b88b":{"role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"?(some "},{"kind":"typeIdentifier","text":"SyntaxProtocol","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP"},{"text":")","kind":"text"}],"abstract":[{"type":"text","text":"Converts the given specialized node to this type. Returns "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" if the"},{"type":"text","text":" "},{"text":"conversion is not possible.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/KeyPathSubscriptComponentSyntax\/init(_:)-2b88b","url":"\/documentation\/macrobuilder\/keypathsubscriptcomponentsyntax\/init(_:)-2b88b","type":"topic","title":"init(_:)","kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/KeyPathSubscriptComponentSyntax":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/KeyPathSubscriptComponentSyntax","type":"topic","kind":"symbol","title":"KeyPathSubscriptComponentSyntax","navigatorTitle":[{"kind":"identifier","text":"KeyPathSubscriptComponentSyntax"}],"abstract":[{"text":"A key path component like ","type":"text"},{"code":".[17]","type":"codeVoice"}],"url":"\/documentation\/macrobuilder\/keypathsubscriptcomponentsyntax","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"KeyPathSubscriptComponentSyntax"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SyntaxProtocol":{"title":"SyntaxProtocol","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxProtocol","navigatorTitle":[{"text":"SyntaxProtocol","kind":"identifier"}],"abstract":[{"text":"Provide common functionality for specialized syntax nodes. Extend this","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"protocol to provide common functionality for all syntax nodes."}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"SyntaxProtocol","kind":"identifier"}],"type":"topic","role":"symbol","url":"\/documentation\/macrobuilder\/syntaxprotocol"}}}