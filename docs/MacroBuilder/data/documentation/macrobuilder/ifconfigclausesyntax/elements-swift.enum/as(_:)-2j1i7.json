{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"`as`"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"syntaxType","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"S"},{"text":".Type) -> ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"kind":"text","text":"? "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"text":"S","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxProtocol","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP","kind":"typeIdentifier","text":"SyntaxProtocol"}],"platforms":["macOS"],"languages":["swift"]}]},{"content":[{"text":"Return Value","anchor":"return-value","type":"heading","level":2},{"inlineContent":[{"text":"An instance of the specialized type, or ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":" if the cast fails."}],"type":"paragraph"}],"kind":"content"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/IfConfigClauseSyntax\/Elements-swift.enum\/as(_:)-2j1i7"},"variants":[{"paths":["\/documentation\/macrobuilder\/ifconfigclausesyntax\/elements-swift.enum\/as(_:)-2j1i7"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"type":"text","text":"Attempts to cast the current syntax node to a given specialized syntax type."}],"sections":[],"metadata":{"symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"`as`","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"S"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"S"},{"text":".Type) -> ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"role":"symbol","roleHeading":"Instance Method","title":"as(_:)","extendedModule":"SwiftSyntax","modules":[{"name":"MacroBuilder","relatedModules":["SwiftSyntax"]}],"externalID":"s:11SwiftSyntax0B8ProtocolPAAE2asyqd__Sgqd__mAaBRd__lF::SYNTHESIZED::s:11SwiftSyntax014IfConfigClauseB0V8ElementsO"},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/IfConfigClauseSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/IfConfigClauseSyntax\/Elements-swift.enum","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/IfConfigClauseSyntax\/Elements-swift.enum\/SyntaxProtocol-Implementations"]]},"kind":"symbol","references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/IfConfigClauseSyntax/Elements-swift.enum/SyntaxProtocol-Implementations":{"role":"collectionGroup","title":"SyntaxProtocol Implementations","type":"topic","abstract":[],"url":"\/documentation\/macrobuilder\/ifconfigclausesyntax\/elements-swift.enum\/syntaxprotocol-implementations","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/IfConfigClauseSyntax\/Elements-swift.enum\/SyntaxProtocol-Implementations","kind":"article"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/IfConfigClauseSyntax/Elements-swift.enum/as(_:)-2j1i7":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"`as`"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":"?"}],"url":"\/documentation\/macrobuilder\/ifconfigclausesyntax\/elements-swift.enum\/as(_:)-2j1i7","role":"symbol","kind":"symbol","title":"as(_:)","abstract":[{"text":"Attempts to cast the current syntax node to a given specialized syntax type.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/IfConfigClauseSyntax\/Elements-swift.enum\/as(_:)-2j1i7","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/IfConfigClauseSyntax":{"role":"symbol","title":"IfConfigClauseSyntax","type":"topic","abstract":[],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"IfConfigClauseSyntax","kind":"identifier"}],"navigatorTitle":[{"text":"IfConfigClauseSyntax","kind":"identifier"}],"url":"\/documentation\/macrobuilder\/ifconfigclausesyntax","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/IfConfigClauseSyntax","kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/IfConfigClauseSyntax/Elements-swift.enum":{"type":"topic","title":"IfConfigClauseSyntax.Elements","url":"\/documentation\/macrobuilder\/ifconfigclausesyntax\/elements-swift.enum","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Elements"}],"navigatorTitle":[{"kind":"identifier","text":"Elements"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/IfConfigClauseSyntax\/Elements-swift.enum","abstract":[]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SyntaxProtocol":{"title":"SyntaxProtocol","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxProtocol","navigatorTitle":[{"text":"SyntaxProtocol","kind":"identifier"}],"abstract":[{"text":"Provide common functionality for specialized syntax nodes. Extend this","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"protocol to provide common functionality for all syntax nodes."}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"SyntaxProtocol","kind":"identifier"}],"type":"topic","role":"symbol","url":"\/documentation\/macrobuilder\/syntaxprotocol"}}}