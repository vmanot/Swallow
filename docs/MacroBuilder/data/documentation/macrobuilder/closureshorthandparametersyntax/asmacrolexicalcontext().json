{"metadata":{"externalID":"s:11SwiftSyntax0B8ProtocolP0aB6MacrosE21asMacroLexicalContextAA0B0VSgyF::SYNTHESIZED::s:11SwiftSyntax025ClosureShorthandParameterB0V","extendedModule":"SwiftSyntax","roleHeading":"Instance Method","symbolKind":"method","role":"symbol","modules":[{"relatedModules":["SwiftSyntax"],"name":"MacroBuilder"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"asMacroLexicalContext"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax"},{"kind":"text","text":"?"}],"title":"asMacroLexicalContext()"},"abstract":[{"type":"text","text":"If this syntax node acts as a lexical context from the perspective"},{"type":"text","text":" "},{"type":"text","text":"of a macro, return a new syntax node based on this node that strips all"},{"text":" ","type":"text"},{"type":"text","text":"information that isn’t supposed to be exposed as a lexical context, such"},{"type":"text","text":" "},{"text":"as function bodies or the members of types\/extensions.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/macrobuilder\/closureshorthandparametersyntax\/asmacrolexicalcontext()"]}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ClosureShorthandParameterSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ClosureShorthandParameterSyntax\/SyntaxProtocol-Implementations"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"asMacroLexicalContext","kind":"identifier"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax","text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"kind":"text","text":"?"}]}]},{"content":[{"anchor":"discussion","level":2,"text":"Discussion","type":"heading"},{"inlineContent":[{"type":"text","text":"Returns "},{"code":"nil","type":"codeVoice"},{"type":"text","text":" for any syntax node that isn’t a lexical context."}],"type":"paragraph"}],"kind":"content"}],"sections":[],"identifier":{"url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ClosureShorthandParameterSyntax\/asMacroLexicalContext()","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ClosureShorthandParameterSyntax/asMacroLexicalContext()":{"url":"\/documentation\/macrobuilder\/closureshorthandparametersyntax\/asmacrolexicalcontext()","abstract":[{"text":"If this syntax node acts as a lexical context from the perspective","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"of a macro, return a new syntax node based on this node that strips all"},{"text":" ","type":"text"},{"type":"text","text":"information that isn’t supposed to be exposed as a lexical context, such"},{"type":"text","text":" "},{"type":"text","text":"as function bodies or the members of types\/extensions."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"asMacroLexicalContext"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"role":"symbol","type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ClosureShorthandParameterSyntax\/asMacroLexicalContext()","title":"asMacroLexicalContext()","kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ClosureShorthandParameterSyntax/SyntaxProtocol-Implementations":{"role":"collectionGroup","title":"SyntaxProtocol Implementations","abstract":[],"type":"topic","url":"\/documentation\/macrobuilder\/closureshorthandparametersyntax\/syntaxprotocol-implementations","kind":"article","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ClosureShorthandParameterSyntax\/SyntaxProtocol-Implementations"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/Syntax":{"abstract":[{"type":"text","text":"A Syntax node represents a tree of nodes with tokens at the leaves."},{"text":" ","type":"text"},{"type":"text","text":"Each node has accessors for its known children, and allows efficient"},{"text":" ","type":"text"},{"text":"iteration over the children through its ","type":"text"},{"type":"codeVoice","code":"children"},{"text":" property.","type":"text"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Syntax"}],"url":"\/documentation\/macrobuilder\/syntax","title":"Syntax","type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Syntax","kind":"identifier"}],"kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ClosureShorthandParameterSyntax":{"url":"\/documentation\/macrobuilder\/closureshorthandparametersyntax","type":"topic","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ClosureShorthandParameterSyntax","kind":"symbol","role":"symbol","title":"ClosureShorthandParameterSyntax","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"ClosureShorthandParameterSyntax","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"ClosureShorthandParameterSyntax"}]}}}