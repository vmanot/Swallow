{"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/macrobuilder\/withoptionalcodeblocksyntax\/init(_:bodybuilder:)"]}],"identifier":{"url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/WithOptionalCodeBlockSyntax\/init(_:bodyBuilder:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Constructs a syntax node where "},{"code":"header","type":"codeVoice"},{"text":" builds the text of the node before the body in braces and ","type":"text"},{"code":"bodyBuilder","type":"codeVoice"},{"text":" is used to build the node’s body.","type":"text"}],"metadata":{"modules":[{"relatedModules":["SwiftSyntax"],"name":"MacroBuilder"}],"extendedModule":"SwiftSyntax","externalID":"s:11SwiftSyntax021WithOptionalCodeBlockB0P0aB7BuilderAA04DeclB8ProtocolRzrlE_04bodyG0xAD0B10NodeStringV_AA0ef8ItemListB0VyKXEtKcfc","role":"symbol","conformance":{"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"code":"DeclSyntaxProtocol","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"title":"init(_:bodyBuilder:)","symbolKind":"init","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"text":"SyntaxNodeString","kind":"typeIdentifier","preciseIdentifier":"s:18SwiftSyntaxBuilder0B10NodeStringV"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"bodyBuilder"},{"kind":"text","text":": () "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax017CodeBlockItemListB0V","text":"CodeBlockItemListSyntax"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"roleHeading":"Initializer"},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"text":"header","kind":"internalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:18SwiftSyntaxBuilder0B10NodeStringV","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxNodeString","text":"SyntaxNodeString"},{"kind":"text","text":", "},{"text":"@","kind":"attribute"},{"text":"CodeBlockItemListBuilder","preciseIdentifier":"s:18SwiftSyntaxBuilder017CodeBlockItemListC0V","kind":"attribute","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/CodeBlockItemListBuilder"},{"text":" ","kind":"text"},{"text":"bodyBuilder","kind":"externalParam"},{"kind":"text","text":": () "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"CodeBlockItemListSyntax","preciseIdentifier":"s:11SwiftSyntax017CodeBlockItemListB0V","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/CodeBlockItemListSyntax","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"For example, you can construct"}]},{"type":"codeListing","syntax":"swift","code":["func addOne(_ base: Int) -> Int {","  return base + 1","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"using this call"}]},{"type":"codeListing","code":["try FunctionDeclSyntax(\"func addOne(_ base: Int) -> Int\") {","  ExprSyntax(\"return base + 1\")","}"],"syntax":"swift"},{"inlineContent":[{"type":"text","text":"Throws an error if "},{"code":"header","type":"codeVoice"},{"type":"text","text":" defines a different node type than the type the initializer is called on. E.g. if calling "},{"code":"try FunctionDeclSyntax(\"init\") {}","type":"codeVoice"}],"type":"paragraph"}]}],"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/WithOptionalCodeBlockSyntax"]]},"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/WithOptionalCodeBlockSyntax/init(_:bodyBuilder:)":{"fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"text":"SyntaxNodeString","kind":"typeIdentifier","preciseIdentifier":"s:18SwiftSyntaxBuilder0B10NodeStringV"},{"text":", ","kind":"text"},{"text":"bodyBuilder","kind":"externalParam"},{"text":": () ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:11SwiftSyntax017CodeBlockItemListB0V","kind":"typeIdentifier","text":"CodeBlockItemListSyntax"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"abstract":[{"text":"Constructs a syntax node where ","type":"text"},{"code":"header","type":"codeVoice"},{"text":" builds the text of the node before the body in braces and ","type":"text"},{"type":"codeVoice","code":"bodyBuilder"},{"type":"text","text":" is used to build the node’s body."}],"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/WithOptionalCodeBlockSyntax\/init(_:bodyBuilder:)","kind":"symbol","type":"topic","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"DeclSyntaxProtocol"},{"type":"text","text":"."}]},"title":"init(_:bodyBuilder:)","url":"\/documentation\/macrobuilder\/withoptionalcodeblocksyntax\/init(_:bodybuilder:)"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/CodeBlockItemListBuilder":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"CodeBlockItemListBuilder","kind":"identifier"}],"url":"\/documentation\/macrobuilder\/codeblockitemlistbuilder","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/CodeBlockItemListBuilder","navigatorTitle":[{"text":"CodeBlockItemListBuilder","kind":"identifier"}],"type":"topic","role":"symbol","kind":"symbol","title":"CodeBlockItemListBuilder"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/CodeBlockItemListSyntax":{"navigatorTitle":[{"text":"CodeBlockItemListSyntax","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/CodeBlockItemListSyntax","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CodeBlockItemListSyntax"}],"url":"\/documentation\/macrobuilder\/codeblockitemlistsyntax","type":"topic","abstract":[],"role":"symbol","title":"CodeBlockItemListSyntax","kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SyntaxNodeString":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxNodeString","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"SyntaxNodeString","kind":"identifier"}],"navigatorTitle":[{"text":"SyntaxNodeString","kind":"identifier"}],"kind":"symbol","title":"SyntaxNodeString","role":"symbol","type":"topic","abstract":[{"type":"text","text":"A type that is expressible by string interpolation the same way that syntax"},{"type":"text","text":" "},{"type":"text","text":"nodes are, but instead of producing a node, it stores the string interpolation"},{"text":" ","type":"text"},{"type":"text","text":"text."}],"url":"\/documentation\/macrobuilder\/syntaxnodestring"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/WithOptionalCodeBlockSyntax":{"abstract":[],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"WithOptionalCodeBlockSyntax","kind":"identifier"}],"navigatorTitle":[{"text":"WithOptionalCodeBlockSyntax","kind":"identifier"}],"role":"symbol","url":"\/documentation\/macrobuilder\/withoptionalcodeblocksyntax","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/WithOptionalCodeBlockSyntax","type":"topic","title":"WithOptionalCodeBlockSyntax","kind":"symbol"}}}