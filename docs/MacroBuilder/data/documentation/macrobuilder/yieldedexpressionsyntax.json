{"relationshipsSections":[{"title":"Conforms To","kind":"relationships","type":"conformsTo","identifiers":["doc:\/\/com.swallow.documentation.MacroBuilder\/s28CustomDebugStringConvertibleP","doc:\/\/com.swallow.documentation.MacroBuilder\/s17CustomReflectableP","doc:\/\/com.swallow.documentation.MacroBuilder\/s23CustomStringConvertibleP","doc:\/\/com.swallow.documentation.MacroBuilder\/SQ","doc:\/\/com.swallow.documentation.MacroBuilder\/SH","doc:\/\/com.swallow.documentation.MacroBuilder\/s8SendableP","doc:\/\/com.swallow.documentation.MacroBuilder\/s20TextOutputStreamableP","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxHashable","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxProtocol"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/YieldedExpressionSyntax"},"kind":"symbol","schemaVersion":{"major":0,"patch":0,"minor":3},"metadata":{"roleHeading":"Structure","modules":[{"name":"MacroBuilder"}],"title":"YieldedExpressionSyntax","role":"symbol","navigatorTitle":[{"text":"YieldedExpressionSyntax","kind":"identifier"}],"externalID":"s:11SwiftSyntax017YieldedExpressionB0V","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"YieldedExpressionSyntax","kind":"identifier"}],"symbolKind":"struct"},"topicSections":[{"identifiers":["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/YieldedExpressionSyntax\/init(_:)-5g3ac","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/YieldedExpressionSyntax\/init(leadingTrivia:_:expression:_:comma:_:trailingTrivia:)"],"title":"Initializers","generated":true,"anchor":"Initializers"},{"generated":true,"anchor":"Instance-Properties","identifiers":["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/YieldedExpressionSyntax\/comma","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/YieldedExpressionSyntax\/expression","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/YieldedExpressionSyntax\/unexpectedAfterComma","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/YieldedExpressionSyntax\/unexpectedBeforeExpression","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/YieldedExpressionSyntax\/unexpectedBetweenExpressionAndComma"],"title":"Instance Properties"},{"title":"Type Properties","anchor":"Type-Properties","identifiers":["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/YieldedExpressionSyntax\/structure"],"generated":true},{"title":"Default Implementations","identifiers":["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/YieldedExpressionSyntax\/CustomReflectable-Implementations","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/YieldedExpressionSyntax\/Equatable-Implementations","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/YieldedExpressionSyntax\/Equatable-Implementations","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/YieldedExpressionSyntax\/Hashable-Implementations","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/YieldedExpressionSyntax\/Hashable-Implementations","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/YieldedExpressionSyntax\/SyntaxProtocol-Implementations"],"anchor":"Default-Implementations","generated":true}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"YieldedExpressionSyntax","kind":"identifier"}]}],"kind":"declarations"},{"content":[{"level":3,"text":"Children","type":"heading","anchor":"Children"},{"items":[{"content":[{"inlineContent":[{"code":"expression","type":"codeVoice"},{"text":": ","type":"text"},{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprSyntax","isActive":true,"type":"reference"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"comma"},{"type":"text","text":": "},{"code":",","type":"codeVoice"},{"text":"?","type":"text"}]}]}],"type":"unorderedList"},{"type":"heading","level":3,"anchor":"Contained-in","text":"Contained in"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/YieldedExpressionListSyntax","isActive":true,"type":"reference"}],"type":"paragraph"}]}]}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder"]]},"variants":[{"paths":["\/documentation\/macrobuilder\/yieldedexpressionsyntax"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/YieldedExpressionSyntax/unexpectedBeforeExpression":{"title":"unexpectedBeforeExpression","kind":"symbol","type":"topic","url":"\/documentation\/macrobuilder\/yieldedexpressionsyntax\/unexpectedbeforeexpression","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"unexpectedBeforeExpression"},{"text":": ","kind":"text"},{"text":"UnexpectedNodesSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax015UnexpectedNodesB0V"},{"text":"?","kind":"text"}],"abstract":[],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/YieldedExpressionSyntax\/unexpectedBeforeExpression"},"doc://com.swallow.documentation.MacroBuilder/s17CustomReflectableP":{"title":"Swift.CustomReflectable","type":"unresolvable","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/s17CustomReflectableP"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/YieldedExpressionSyntax/unexpectedAfterComma":{"url":"\/documentation\/macrobuilder\/yieldedexpressionsyntax\/unexpectedaftercomma","title":"unexpectedAfterComma","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/YieldedExpressionSyntax\/unexpectedAfterComma","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"unexpectedAfterComma"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax015UnexpectedNodesB0V","text":"UnexpectedNodesSyntax"},{"kind":"text","text":"?"}],"abstract":[],"type":"topic"},"doc://com.swallow.documentation.MacroBuilder/s23CustomStringConvertibleP":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/s23CustomStringConvertibleP","type":"unresolvable","title":"Swift.CustomStringConvertible"},"doc://com.swallow.documentation.MacroBuilder/SQ":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/SQ","type":"unresolvable","title":"Swift.Equatable"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/YieldedExpressionSyntax/CustomReflectable-Implementations":{"type":"topic","kind":"article","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/YieldedExpressionSyntax\/CustomReflectable-Implementations","abstract":[],"title":"CustomReflectable Implementations","role":"collectionGroup","url":"\/documentation\/macrobuilder\/yieldedexpressionsyntax\/customreflectable-implementations"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/YieldedExpressionSyntax/unexpectedBetweenExpressionAndComma":{"title":"unexpectedBetweenExpressionAndComma","kind":"symbol","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/YieldedExpressionSyntax\/unexpectedBetweenExpressionAndComma","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unexpectedBetweenExpressionAndComma","kind":"identifier"},{"text":": ","kind":"text"},{"text":"UnexpectedNodesSyntax","preciseIdentifier":"s:11SwiftSyntax015UnexpectedNodesB0V","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"role":"symbol","url":"\/documentation\/macrobuilder\/yieldedexpressionsyntax\/unexpectedbetweenexpressionandcomma"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/YieldedExpressionSyntax/Hashable-Implementations":{"url":"\/documentation\/macrobuilder\/yieldedexpressionsyntax\/hashable-implementations","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/YieldedExpressionSyntax\/Hashable-Implementations","type":"topic","abstract":[],"role":"collectionGroup","kind":"article","title":"Hashable Implementations"},"doc://com.swallow.documentation.MacroBuilder/s20TextOutputStreamableP":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/s20TextOutputStreamableP","type":"unresolvable","title":"Swift.TextOutputStreamable"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprSyntax":{"url":"\/documentation\/macrobuilder\/exprsyntax","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"ExprSyntax","kind":"identifier"}],"type":"topic","title":"ExprSyntax","abstract":[],"kind":"symbol","navigatorTitle":[{"text":"ExprSyntax","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprSyntax"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/YieldedExpressionSyntax":{"navigatorTitle":[{"text":"YieldedExpressionSyntax","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/YieldedExpressionSyntax","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"YieldedExpressionSyntax"}],"url":"\/documentation\/macrobuilder\/yieldedexpressionsyntax","type":"topic","kind":"symbol","abstract":[],"title":"YieldedExpressionSyntax","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/YieldedExpressionSyntax/structure":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/YieldedExpressionSyntax\/structure","role":"symbol","url":"\/documentation\/macrobuilder\/yieldedexpressionsyntax\/structure","title":"structure","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"structure"},{"text":": ","kind":"text"},{"text":"SyntaxNodeStructure","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B13NodeStructureO"}],"kind":"symbol","abstract":[{"type":"text","text":"The statically allowed structure of the syntax node."}],"type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SyntaxProtocol":{"title":"SyntaxProtocol","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxProtocol","navigatorTitle":[{"text":"SyntaxProtocol","kind":"identifier"}],"abstract":[{"text":"Provide common functionality for specialized syntax nodes. Extend this","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"protocol to provide common functionality for all syntax nodes."}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"SyntaxProtocol","kind":"identifier"}],"type":"topic","role":"symbol","url":"\/documentation\/macrobuilder\/syntaxprotocol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/YieldedExpressionSyntax/init(_:)-5g3ac":{"url":"\/documentation\/macrobuilder\/yieldedexpressionsyntax\/init(_:)-5g3ac","fragments":[{"kind":"identifier","text":"init"},{"text":"?(some ","kind":"text"},{"text":"SyntaxProtocol","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP"},{"text":")","kind":"text"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/YieldedExpressionSyntax\/init(_:)-5g3ac","type":"topic","abstract":[{"type":"text","text":"Converts the given specialized node to this type. Returns "},{"type":"codeVoice","code":"nil"},{"text":" if the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"conversion is not possible."}],"kind":"symbol","title":"init(_:)","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/YieldedExpressionListSyntax":{"title":"YieldedExpressionListSyntax","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/YieldedExpressionListSyntax","abstract":[],"url":"\/documentation\/macrobuilder\/yieldedexpressionlistsyntax","navigatorTitle":[{"kind":"identifier","text":"YieldedExpressionListSyntax"}],"kind":"symbol","role":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"YieldedExpressionListSyntax","kind":"identifier"}]},"doc://com.swallow.documentation.MacroBuilder/s28CustomDebugStringConvertibleP":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/s28CustomDebugStringConvertibleP","type":"unresolvable","title":"Swift.CustomDebugStringConvertible"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/YieldedExpressionSyntax/comma":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/YieldedExpressionSyntax\/comma","role":"symbol","url":"\/documentation\/macrobuilder\/yieldedexpressionsyntax\/comma","title":"comma","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"comma","kind":"identifier"},{"kind":"text","text":": "},{"text":"TokenSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"text":"?","kind":"text"}],"kind":"symbol","abstract":[],"type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SyntaxHashable":{"url":"\/documentation\/macrobuilder\/syntaxhashable","type":"topic","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxHashable","role":"symbol","navigatorTitle":[{"text":"SyntaxHashable","kind":"identifier"}],"title":"SyntaxHashable","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SyntaxHashable","kind":"identifier"}],"abstract":[{"type":"text","text":"Protocol that provides a common Hashable implementation for all syntax nodes"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/YieldedExpressionSyntax/init(leadingTrivia:_:expression:_:comma:_:trailingTrivia:)":{"role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"text":"leadingTrivia","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax6TriviaV","kind":"typeIdentifier","text":"Trivia"},{"kind":"text","text":"?, "},{"preciseIdentifier":"s:11SwiftSyntax015UnexpectedNodesB0V","kind":"typeIdentifier","text":"UnexpectedNodesSyntax"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"expression"},{"text":": some ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax04ExprB8ProtocolP","text":"ExprSyntaxProtocol"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax015UnexpectedNodesB0V","kind":"typeIdentifier","text":"UnexpectedNodesSyntax"},{"kind":"text","text":"?, "},{"text":"comma","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"TokenSyntax","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","kind":"typeIdentifier"},{"kind":"text","text":"?, "},{"preciseIdentifier":"s:11SwiftSyntax015UnexpectedNodesB0V","text":"UnexpectedNodesSyntax","kind":"typeIdentifier"},{"kind":"text","text":"?, "},{"text":"trailingTrivia","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax6TriviaV","text":"Trivia","kind":"typeIdentifier"},{"text":"?)","kind":"text"}],"type":"topic","title":"init(leadingTrivia:_:expression:_:comma:_:trailingTrivia:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/YieldedExpressionSyntax\/init(leadingTrivia:_:expression:_:comma:_:trailingTrivia:)","url":"\/documentation\/macrobuilder\/yieldedexpressionsyntax\/init(leadingtrivia:_:expression:_:comma:_:trailingtrivia:)","kind":"symbol","abstract":[]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/YieldedExpressionSyntax/expression":{"abstract":[],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"expression"},{"text":": ","kind":"text"},{"text":"ExprSyntax","preciseIdentifier":"s:11SwiftSyntax04ExprB0V","kind":"typeIdentifier"}],"title":"expression","kind":"symbol","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/YieldedExpressionSyntax\/expression","url":"\/documentation\/macrobuilder\/yieldedexpressionsyntax\/expression","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/YieldedExpressionSyntax/Equatable-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/YieldedExpressionSyntax\/Equatable-Implementations","url":"\/documentation\/macrobuilder\/yieldedexpressionsyntax\/equatable-implementations","kind":"article","role":"collectionGroup","title":"Equatable Implementations","abstract":[],"type":"topic"},"doc://com.swallow.documentation.MacroBuilder/SH":{"title":"Swift.Hashable","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/SH","type":"unresolvable"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/YieldedExpressionSyntax/SyntaxProtocol-Implementations":{"title":"SyntaxProtocol Implementations","url":"\/documentation\/macrobuilder\/yieldedexpressionsyntax\/syntaxprotocol-implementations","role":"collectionGroup","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/YieldedExpressionSyntax\/SyntaxProtocol-Implementations","abstract":[],"type":"topic","kind":"article"},"doc://com.swallow.documentation.MacroBuilder/s8SendableP":{"title":"Swift.Sendable","type":"unresolvable","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/s8SendableP"}}}