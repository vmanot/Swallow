{"kind":"symbol","relationshipsSections":[{"title":"Conforms To","identifiers":["doc:\/\/com.swallow.documentation.MacroBuilder\/SK","doc:\/\/com.swallow.documentation.MacroBuilder\/Sl","doc:\/\/com.swallow.documentation.MacroBuilder\/s28CustomDebugStringConvertibleP","doc:\/\/com.swallow.documentation.MacroBuilder\/s17CustomReflectableP","doc:\/\/com.swallow.documentation.MacroBuilder\/s23CustomStringConvertibleP","doc:\/\/com.swallow.documentation.MacroBuilder\/SQ","doc:\/\/com.swallow.documentation.MacroBuilder\/s25ExpressibleByArrayLiteralP","doc:\/\/com.swallow.documentation.MacroBuilder\/SH","doc:\/\/com.swallow.documentation.MacroBuilder\/s8SendableP","doc:\/\/com.swallow.documentation.MacroBuilder\/ST","doc:\/\/com.swallow.documentation.MacroBuilder\/s20TextOutputStreamableP","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxCollection","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxHashable","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxProtocol"],"kind":"relationships","type":"conformsTo"}],"metadata":{"symbolKind":"struct","title":"SimpleStringLiteralSegmentListSyntax","modules":[{"name":"MacroBuilder"}],"roleHeading":"Structure","externalID":"s:11SwiftSyntax030SimpleStringLiteralSegmentListB0V","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"SimpleStringLiteralSegmentListSyntax"}],"navigatorTitle":[{"kind":"identifier","text":"SimpleStringLiteralSegmentListSyntax"}]},"topicSections":[{"identifiers":["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/init(_:)-366vb","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/init(itemsBuilder:)"],"title":"Initializers","generated":true,"anchor":"Initializers"},{"generated":true,"anchor":"Type-Aliases","title":"Type Aliases","identifiers":["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/Element"]},{"identifiers":["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/syntaxKind"],"title":"Type Properties","anchor":"Type-Properties","generated":true},{"generated":true,"anchor":"Default-Implementations","identifiers":["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/BidirectionalCollection-Implementations","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/BidirectionalCollection-Implementations","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/Collection-Implementations","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/Collection-Implementations","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/CustomReflectable-Implementations","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/Equatable-Implementations","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/Equatable-Implementations","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/ExpressibleByArrayLiteral-Implementations","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/Hashable-Implementations","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/Hashable-Implementations","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/Sequence-Implementations","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/Sequence-Implementations","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/SyntaxCollection-Implementations","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/SyntaxProtocol-Implementations"],"title":"Default Implementations"}],"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"SimpleStringLiteralSegmentListSyntax","kind":"identifier"}],"platforms":["macOS"]}]},{"content":[{"text":"Children","level":3,"type":"heading","anchor":"Children"},{"type":"paragraph","inlineContent":[{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringSegmentSyntax","type":"reference","isActive":true},{"text":" ","type":"text"},{"code":"*","type":"codeVoice"}]},{"level":3,"text":"Contained in","type":"heading","anchor":"Contained-in"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralExprSyntax","isActive":true,"type":"reference"},{"type":"text","text":"."},{"isActive":true,"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralExprSyntax\/segments","type":"reference"}]}]}],"type":"unorderedList"}],"kind":"content"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"identifier":{"url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder"]]},"abstract":[{"text":"String literal segments that only can contain non string interpolated or extended escaped strings","type":"text"}],"variants":[{"paths":["\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/init(_:)-366vb":{"role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"?(some ","kind":"text"},{"text":"SyntaxProtocol","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP"},{"text":")","kind":"text"}],"url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/init(_:)-366vb","type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/init(_:)-366vb","title":"init(_:)","abstract":[{"type":"text","text":"Converts the given specialized node to this type. Returns "},{"code":"nil","type":"codeVoice"},{"type":"text","text":" if the"},{"type":"text","text":" "},{"type":"text","text":"conversion is not possible."}],"kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralExprSyntax":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SimpleStringLiteralExprSyntax"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralExprSyntax","url":"\/documentation\/macrobuilder\/simplestringliteralexprsyntax","navigatorTitle":[{"kind":"identifier","text":"SimpleStringLiteralExprSyntax"}],"kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"A simple string that canâ€™t contain string interpolation and cannot have raw string delimiters."}],"title":"SimpleStringLiteralExprSyntax","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax","url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax","kind":"symbol","abstract":[{"text":"String literal segments that only can contain non string interpolated or extended escaped strings","type":"text"}],"type":"topic","title":"SimpleStringLiteralSegmentListSyntax","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"SimpleStringLiteralSegmentListSyntax"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SimpleStringLiteralSegmentListSyntax"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/Collection-Implementations":{"title":"Collection Implementations","url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/collection-implementations","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/Collection-Implementations","type":"topic","abstract":[],"role":"collectionGroup","kind":"article"},"doc://com.swallow.documentation.MacroBuilder/ST":{"type":"unresolvable","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/ST","title":"Swift.Sequence"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SyntaxCollection":{"title":"SyntaxCollection","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxCollection","url":"\/documentation\/macrobuilder\/syntaxcollection","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SyntaxCollection","kind":"identifier"}],"type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"SyntaxCollection"}]},"doc://com.swallow.documentation.MacroBuilder/s23CustomStringConvertibleP":{"type":"unresolvable","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/s23CustomStringConvertibleP","title":"Swift.CustomStringConvertible"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SyntaxKind":{"navigatorTitle":[{"kind":"identifier","text":"SyntaxKind"}],"role":"symbol","kind":"symbol","title":"SyntaxKind","abstract":[{"type":"text","text":"Enumerates the known kinds of Syntax represented in the Syntax tree."}],"type":"topic","url":"\/documentation\/macrobuilder\/syntaxkind","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxKind","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"SyntaxKind","kind":"identifier"}]},"doc://com.swallow.documentation.MacroBuilder/Sl":{"type":"unresolvable","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/Sl","title":"Swift.Collection"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/Equatable-Implementations":{"abstract":[],"title":"Equatable Implementations","url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/equatable-implementations","kind":"article","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/Equatable-Implementations","role":"collectionGroup","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/SQ":{"type":"unresolvable","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/SQ","title":"Swift.Equatable"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/BidirectionalCollection-Implementations":{"abstract":[],"role":"collectionGroup","type":"topic","title":"BidirectionalCollection Implementations","kind":"article","url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/bidirectionalcollection-implementations","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/BidirectionalCollection-Implementations"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/Hashable-Implementations":{"url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/hashable-implementations","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/Hashable-Implementations","type":"topic","abstract":[],"role":"collectionGroup","kind":"article","title":"Hashable Implementations"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/syntaxKind":{"kind":"symbol","url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/syntaxkind","role":"symbol","type":"topic","title":"syntaxKind","abstract":[{"type":"text","text":"The "},{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxKind","isActive":true,"type":"reference"},{"type":"text","text":" of the syntax node that conforms to "},{"type":"reference","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxCollection","isActive":true},{"text":".","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/syntaxKind","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"text":"syntaxKind","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B4KindO","text":"SyntaxKind","kind":"typeIdentifier"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/SyntaxProtocol-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/SyntaxProtocol-Implementations","url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/syntaxprotocol-implementations","type":"topic","kind":"article","role":"collectionGroup","title":"SyntaxProtocol Implementations","abstract":[]},"doc://com.swallow.documentation.MacroBuilder/s25ExpressibleByArrayLiteralP":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/s25ExpressibleByArrayLiteralP","title":"Swift.ExpressibleByArrayLiteral","type":"unresolvable"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/ExpressibleByArrayLiteral-Implementations":{"kind":"article","url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/expressiblebyarrayliteral-implementations","role":"collectionGroup","type":"topic","title":"ExpressibleByArrayLiteral Implementations","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/ExpressibleByArrayLiteral-Implementations"},"doc://com.swallow.documentation.MacroBuilder/s17CustomReflectableP":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/s17CustomReflectableP","title":"Swift.CustomReflectable","type":"unresolvable"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/Sequence-Implementations":{"type":"topic","kind":"article","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/Sequence-Implementations","url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/sequence-implementations","role":"collectionGroup","title":"Sequence Implementations"},"doc://com.swallow.documentation.MacroBuilder/s28CustomDebugStringConvertibleP":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/s28CustomDebugStringConvertibleP","title":"Swift.CustomDebugStringConvertible","type":"unresolvable"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StringSegmentSyntax":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringSegmentSyntax","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"StringSegmentSyntax"}],"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"StringSegmentSyntax"}],"title":"StringSegmentSyntax","type":"topic","abstract":[{"type":"text","text":"A literal segment inside a string segment."}],"url":"\/documentation\/macrobuilder\/stringsegmentsyntax"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/CustomReflectable-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/CustomReflectable-Implementations","title":"CustomReflectable Implementations","url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/customreflectable-implementations","type":"topic","role":"collectionGroup","abstract":[],"kind":"article"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/SyntaxCollection-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/SyntaxCollection-Implementations","url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/syntaxcollection-implementations","kind":"article","role":"collectionGroup","abstract":[],"title":"SyntaxCollection Implementations","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SyntaxProtocol":{"title":"SyntaxProtocol","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxProtocol","navigatorTitle":[{"text":"SyntaxProtocol","kind":"identifier"}],"abstract":[{"text":"Provide common functionality for specialized syntax nodes. Extend this","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"protocol to provide common functionality for all syntax nodes."}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"SyntaxProtocol","kind":"identifier"}],"type":"topic","role":"symbol","url":"\/documentation\/macrobuilder\/syntaxprotocol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralExprSyntax/segments":{"kind":"symbol","url":"\/documentation\/macrobuilder\/simplestringliteralexprsyntax\/segments","role":"symbol","type":"topic","title":"segments","abstract":[{"text":"String content","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralExprSyntax\/segments","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"segments","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SimpleStringLiteralSegmentListSyntax","preciseIdentifier":"s:11SwiftSyntax030SimpleStringLiteralSegmentListB0V"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/Element":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/Element","navigatorTitle":[{"text":"Element","kind":"identifier"}],"title":"SimpleStringLiteralSegmentListSyntax.Element","url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/element","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"text":"Element","kind":"identifier"}],"abstract":[],"kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/SH":{"type":"unresolvable","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/SH","title":"Swift.Hashable"},"doc://com.swallow.documentation.MacroBuilder/s20TextOutputStreamableP":{"type":"unresolvable","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/s20TextOutputStreamableP","title":"Swift.TextOutputStreamable"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SyntaxHashable":{"url":"\/documentation\/macrobuilder\/syntaxhashable","type":"topic","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxHashable","role":"symbol","navigatorTitle":[{"text":"SyntaxHashable","kind":"identifier"}],"title":"SyntaxHashable","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SyntaxHashable","kind":"identifier"}],"abstract":[{"type":"text","text":"Protocol that provides a common Hashable implementation for all syntax nodes"}]},"doc://com.swallow.documentation.MacroBuilder/SK":{"type":"unresolvable","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/SK","title":"Swift.BidirectionalCollection"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax/init(itemsBuilder:)":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax\/init(itemsBuilder:)","title":"init(itemsBuilder:)","url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax\/init(itemsbuilder:)","type":"topic","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"itemsBuilder"},{"text":": () ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax030SimpleStringLiteralSegmentListB0V","text":"SimpleStringLiteralSegmentListSyntax"},{"text":") ","kind":"text"},{"kind":"keyword","text":"rethrows"}],"abstract":[],"kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/s8SendableP","title":"Swift.Sendable"}}}