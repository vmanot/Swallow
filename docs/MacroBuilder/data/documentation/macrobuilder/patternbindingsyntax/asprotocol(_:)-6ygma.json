{"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"text":"((any ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P","kind":"typeIdentifier","text":"WithOptionalCodeBlockSyntax"},{"kind":"text","text":").Type) -> (any "},{"text":"WithOptionalCodeBlockSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P"},{"kind":"text","text":")?"}],"title":"asProtocol(_:)","role":"symbol","modules":[{"relatedModules":["SwiftSyntax"],"name":"MacroBuilder"}],"extendedModule":"SwiftSyntax","symbolKind":"method","externalID":"s:11SwiftSyntax0B8ProtocolPAAE02asC0yAA021WithOptionalCodeBlockB0_pSgAaE_pmF::SYNTHESIZED::s:11SwiftSyntax014PatternBindingB0V","roleHeading":"Instance Method"},"abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithOptionalCodeBlockSyntax"},{"text":". Otherwise return ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"identifier":{"url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PatternBindingSyntax\/asProtocol(_:)-6ygma","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/macrobuilder\/patternbindingsyntax\/asprotocol(_:)-6ygma"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PatternBindingSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PatternBindingSyntax\/SyntaxProtocol-Implementations"]]},"schemaVersion":{"patch":0,"minor":3,"major":0},"sections":[],"kind":"symbol","primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"kind":"text","text":"("},{"text":"_","kind":"externalParam"},{"kind":"text","text":": (any "},{"preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P","text":"WithOptionalCodeBlockSyntax","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/WithOptionalCodeBlockSyntax","kind":"typeIdentifier"},{"text":").Type) -> (any ","kind":"text"},{"kind":"typeIdentifier","text":"WithOptionalCodeBlockSyntax","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/WithOptionalCodeBlockSyntax","preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P"},{"kind":"text","text":")?"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"}],"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/PatternBindingSyntax":{"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"PatternBindingSyntax"}],"abstract":[{"type":"text","text":"Defines variables inside a variable declaration."}],"title":"PatternBindingSyntax","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PatternBindingSyntax"}],"url":"\/documentation\/macrobuilder\/patternbindingsyntax","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PatternBindingSyntax"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/PatternBindingSyntax/asProtocol(_:)-6ygma":{"url":"\/documentation\/macrobuilder\/patternbindingsyntax\/asprotocol(_:)-6ygma","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"text":"((any ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P","text":"WithOptionalCodeBlockSyntax","kind":"typeIdentifier"},{"text":").Type) -> (any ","kind":"text"},{"text":"WithOptionalCodeBlockSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P"},{"kind":"text","text":")?"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PatternBindingSyntax\/asProtocol(_:)-6ygma","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"text":" ","type":"text"},{"code":"WithOptionalCodeBlockSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"title":"asProtocol(_:)","kind":"symbol","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/PatternBindingSyntax/SyntaxProtocol-Implementations":{"abstract":[],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PatternBindingSyntax\/SyntaxProtocol-Implementations","type":"topic","kind":"article","title":"SyntaxProtocol Implementations","url":"\/documentation\/macrobuilder\/patternbindingsyntax\/syntaxprotocol-implementations","role":"collectionGroup"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/WithOptionalCodeBlockSyntax":{"abstract":[],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"WithOptionalCodeBlockSyntax","kind":"identifier"}],"navigatorTitle":[{"text":"WithOptionalCodeBlockSyntax","kind":"identifier"}],"role":"symbol","url":"\/documentation\/macrobuilder\/withoptionalcodeblocksyntax","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/WithOptionalCodeBlockSyntax","type":"topic","title":"WithOptionalCodeBlockSyntax","kind":"symbol"}}}