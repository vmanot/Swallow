{"kind":"article","schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax"]]},"topicSections":[{"anchor":"Initializers","identifiers":["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/init(_:)-73pbn","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/init(_:)-n80","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/init(validating:)"],"title":"Initializers","generated":true},{"anchor":"Instance-Properties","identifiers":["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/byteRange","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/byteSize","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/byteSizeAfterTrimmingTrivia","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/contentLength","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/debugDescription","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/description","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/detached","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/endPosition","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/endPositionBeforeTrailingTrivia","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/firstToken","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/hasError","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/hasMaximumNestingLevelOverflow","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/hasParent","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/hasSequenceExpr","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/hasWarning","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/id","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/index","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/isImplicit","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/keyPathInParent","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/kind","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/lastToken","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/leadingTrivia","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/leadingTriviaLength","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/nextToken","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/parent","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/position","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/positionAfterSkippingLeadingTrivia","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/previousToken","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/root","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/syntaxNodeType","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/syntaxTextBytes","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/totalByteRange","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/totalLength","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/trailingTrivia","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/trailingTriviaLength","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/trimmed","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/trimmedByteRange","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/trimmedDescription","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/trimmedLength"],"generated":true,"title":"Instance Properties"},{"identifiers":["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/allMacroLexicalContexts(enclosingSyntax:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/as(_:)-21gt5","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/as(_:)-4h2u0","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/as(_:)-5zv18","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/asMacroLexicalContext()","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/asProtocol(_:)-17eyf","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/asProtocol(_:)-1afnx","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/asProtocol(_:)-2jgin","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/asProtocol(_:)-39kb9","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/asProtocol(_:)-3a1lr","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/asProtocol(_:)-3nu9d","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/asProtocol(_:)-41ajz","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/asProtocol(_:)-46n9m","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/asProtocol(_:)-47wgz","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/asProtocol(_:)-55al3","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/asProtocol(_:)-6esiq","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/asProtocol(_:)-6n3l0","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/asProtocol(_:)-714j6","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/asProtocol(_:)-9xqdj","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/cast(_:)-5qqab","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/cast(_:)-7petv","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/cast(_:)-9cee2","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/children(viewMode:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/debugDescription(includeTrivia:converter:mark:indentString:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/detach()","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/endLocation(converter:afterTrailingTrivia:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/expand(macroSpecs:contextGenerator:indentationWidth:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/expand(macros:contextGenerator:indentationWidth:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/expand(macros:in:indentationWidth:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/firstToken(viewMode:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/formatted(using:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/is(_:)-4p96k","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/is(_:)-611gj","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/is(_:)-9068v","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/isProtocol(_:)-1a1gr","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/isProtocol(_:)-23d2x","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/isProtocol(_:)-2xm7n","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/isProtocol(_:)-3zjei","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/isProtocol(_:)-54vpb","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/isProtocol(_:)-58ztc","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/isProtocol(_:)-5l6zw","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/isProtocol(_:)-611d8","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/isProtocol(_:)-6ph86","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/isProtocol(_:)-6zw2i","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/isProtocol(_:)-89snu","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/isProtocol(_:)-9mwk1","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/isProtocol(_:)-br0j","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/isProtocol(_:)-k2nw","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/lastToken(viewMode:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/map(_:_:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/modifying(_:_:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/nextToken(viewMode:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/node(at:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/previousToken(viewMode:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/startLocation(converter:afterLeadingTrivia:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/token(at:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/tokens(viewMode:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/trimmed(matching:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/trimmedDescription(matching:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/with(_:_:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/write(to:)"],"anchor":"Instance-Methods","generated":true,"title":"Instance Methods"},{"generated":true,"anchor":"Type-Properties","title":"Type Properties","identifiers":["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/structure"]}],"metadata":{"role":"collectionGroup","modules":[{"name":"MacroBuilder"}],"title":"SyntaxProtocol Implementations","roleHeading":"API Collection"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/macrobuilder\/conditionelementlistsyntax\/syntaxprotocol-implementations"]}],"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/SyntaxProtocol-Implementations"},"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementListSyntax/nextToken(viewMode:)":{"type":"topic","role":"symbol","url":"\/documentation\/macrobuilder\/conditionelementlistsyntax\/nexttoken(viewmode:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"nextToken"},{"text":"(","kind":"text"},{"text":"viewMode","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SyntaxTreeViewMode","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO"},{"kind":"text","text":") -> "},{"text":"TokenSyntax","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"title":"nextToken(viewMode:)","abstract":[{"text":"Recursively walks through the tree to find the next token semantically","type":"text"},{"type":"text","text":" "},{"type":"text","text":"after this node."}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/nextToken(viewMode:)"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementListSyntax/byteSize":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/byteSize","url":"\/documentation\/macrobuilder\/conditionelementlistsyntax\/bytesize","role":"symbol","deprecated":true,"title":"byteSize","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"byteSize","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"}],"type":"topic","kind":"symbol","abstract":[{"text":"The textual byte length of this node including leading and trailing trivia.","type":"text"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementListSyntax/previousToken(viewMode:)":{"abstract":[{"type":"text","text":"Recursively walks through the tree to find the token semantically before"},{"type":"text","text":" "},{"type":"text","text":"this node."}],"kind":"symbol","type":"topic","title":"previousToken(viewMode:)","url":"\/documentation\/macrobuilder\/conditionelementlistsyntax\/previoustoken(viewmode:)","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/previousToken(viewMode:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"previousToken","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"viewMode"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","text":"SyntaxTreeViewMode","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax","kind":"typeIdentifier"},{"text":"?","kind":"text"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementListSyntax/byteSizeAfterTrimmingTrivia":{"title":"byteSizeAfterTrimmingTrivia","role":"symbol","url":"\/documentation\/macrobuilder\/conditionelementlistsyntax\/bytesizeaftertrimmingtrivia","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/byteSizeAfterTrimmingTrivia","type":"topic","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"byteSizeAfterTrimmingTrivia","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"The textual byte length of this node excluding leading and trailing trivia."}],"deprecated":true},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementListSyntax/hasMaximumNestingLevelOverflow":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"hasMaximumNestingLevelOverflow","kind":"identifier"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"abstract":[],"type":"topic","url":"\/documentation\/macrobuilder\/conditionelementlistsyntax\/hasmaximumnestingleveloverflow","title":"hasMaximumNestingLevelOverflow","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/hasMaximumNestingLevelOverflow","kind":"symbol","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementListSyntax/isProtocol(_:)-2xm7n":{"url":"\/documentation\/macrobuilder\/conditionelementlistsyntax\/isprotocol(_:)-2xm7n","role":"symbol","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithStatementsSyntax"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"((any "},{"text":"WithStatementsSyntax","preciseIdentifier":"s:11SwiftSyntax014WithStatementsB0P","kind":"typeIdentifier"},{"text":").Type) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"title":"isProtocol(_:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/isProtocol(_:)-2xm7n","kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementListSyntax/asProtocol(_:)-17eyf":{"type":"topic","role":"symbol","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/asProtocol(_:)-17eyf","title":"asProtocol(_:)","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"code":"NamedDeclSyntax","type":"codeVoice"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"((any "},{"kind":"typeIdentifier","text":"NamedDeclSyntax","preciseIdentifier":"s:11SwiftSyntax09NamedDeclB0P"},{"kind":"text","text":").Type) -> (any "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax09NamedDeclB0P","text":"NamedDeclSyntax"},{"text":")?","kind":"text"}],"url":"\/documentation\/macrobuilder\/conditionelementlistsyntax\/asprotocol(_:)-17eyf"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementListSyntax/expand(macros:in:indentationWidth:)":{"role":"symbol","title":"expand(macros:in:indentationWidth:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"expand","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"macros"},{"text":": [","kind":"text"},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":" : any "},{"text":"Macro","kind":"typeIdentifier","preciseIdentifier":"s:17SwiftSyntaxMacros5MacroP"},{"kind":"text","text":".Type], "},{"kind":"externalParam","text":"in"},{"text":": some ","kind":"text"},{"kind":"typeIdentifier","text":"MacroExpansionContext","preciseIdentifier":"s:17SwiftSyntaxMacros21MacroExpansionContextP"},{"text":", ","kind":"text"},{"text":"indentationWidth","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Trivia","preciseIdentifier":"s:11SwiftSyntax6TriviaV","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier"}],"url":"\/documentation\/macrobuilder\/conditionelementlistsyntax\/expand(macros:in:indentationwidth:)","type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/expand(macros:in:indentationWidth:)","kind":"symbol","deprecated":true,"abstract":[]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementListSyntax/nextToken":{"deprecated":true,"title":"nextToken","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"nextToken","kind":"identifier"},{"kind":"text","text":": "},{"text":"TokenSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"text":"?","kind":"text"}],"kind":"symbol","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/nextToken","role":"symbol","url":"\/documentation\/macrobuilder\/conditionelementlistsyntax\/nexttoken","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementListSyntax/expand(macroSpecs:contextGenerator:indentationWidth:)":{"type":"topic","url":"\/documentation\/macrobuilder\/conditionelementlistsyntax\/expand(macrospecs:contextgenerator:indentationwidth:)","role":"symbol","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/expand(macroSpecs:contextGenerator:indentationWidth:)","title":"expand(macroSpecs:contextGenerator:indentationWidth:)","abstract":[],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"expand","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Context","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"macroSpecs","kind":"externalParam"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:25SwiftSyntaxMacroExpansion0C4SpecV","kind":"typeIdentifier","text":"MacroSpec"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"contextGenerator"},{"text":": (","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier","text":"Syntax"},{"text":") -> ","kind":"text"},{"text":"Context","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"indentationWidth"},{"text":": ","kind":"text"},{"text":"Trivia","preciseIdentifier":"s:11SwiftSyntax6TriviaV","kind":"typeIdentifier"},{"kind":"text","text":"?) -> "},{"preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax","kind":"typeIdentifier"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementListSyntax":{"navigatorTitle":[{"kind":"identifier","text":"ConditionElementListSyntax"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ConditionElementListSyntax"}],"url":"\/documentation\/macrobuilder\/conditionelementlistsyntax","type":"topic","kind":"symbol","abstract":[],"title":"ConditionElementListSyntax","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementListSyntax/children(viewMode:)":{"title":"children(viewMode:)","abstract":[{"type":"text","text":"A sequence over the children of this node."}],"url":"\/documentation\/macrobuilder\/conditionelementlistsyntax\/children(viewmode:)","kind":"symbol","type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/children(viewMode:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"children","kind":"identifier"},{"kind":"text","text":"("},{"text":"viewMode","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"SyntaxTreeViewMode","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:11SwiftSyntax0B8ChildrenV","text":"SyntaxChildren","kind":"typeIdentifier"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementListSyntax/endPosition":{"type":"topic","url":"\/documentation\/macrobuilder\/conditionelementlistsyntax\/endposition","role":"symbol","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/endPosition","title":"endPosition","abstract":[{"text":"The end position of this node, including its trivia.","type":"text"}],"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"endPosition","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","text":"AbsolutePosition"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementListSyntax/asProtocol(_:)-3a1lr":{"title":"asProtocol(_:)","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"BracedSyntax"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"url":"\/documentation\/macrobuilder\/conditionelementlistsyntax\/asprotocol(_:)-3a1lr","kind":"symbol","type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/asProtocol(_:)-3a1lr","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"kind":"text","text":"((any "},{"preciseIdentifier":"s:11SwiftSyntax06BracedB0P","kind":"typeIdentifier","text":"BracedSyntax"},{"text":").Type) -> (any ","kind":"text"},{"kind":"typeIdentifier","text":"BracedSyntax","preciseIdentifier":"s:11SwiftSyntax06BracedB0P"},{"kind":"text","text":")?"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/TokenDiagnostic":{"type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"TokenDiagnostic"}],"role":"symbol","abstract":[{"text":"If the token has an error that’s inherent to the token itself and not its","type":"text"},{"text":" ","type":"text"},{"text":"surrounding structure, this defines the type of the error.","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"byteOffset"},{"type":"text","text":" specifies at which offset the error occurred."}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TokenDiagnostic","title":"TokenDiagnostic","url":"\/documentation\/macrobuilder\/tokendiagnostic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"TokenDiagnostic","kind":"identifier"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementListSyntax/debugDescription(includeTrivia:converter:mark:indentString:)":{"title":"debugDescription(includeTrivia:converter:mark:indentString:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/debugDescription(includeTrivia:converter:mark:indentString:)","type":"topic","abstract":[{"type":"text","text":"Returns a summarized dump of this node."}],"role":"symbol","url":"\/documentation\/macrobuilder\/conditionelementlistsyntax\/debugdescription(includetrivia:converter:mark:indentstring:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"debugDescription","kind":"identifier"},{"text":"(","kind":"text"},{"text":"includeTrivia","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":", "},{"text":"converter","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC","text":"SourceLocationConverter","kind":"typeIdentifier"},{"kind":"text","text":"?, "},{"text":"mark","kind":"externalParam"},{"text":": (any ","kind":"text"},{"text":"SyntaxProtocol","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP"},{"text":")?, ","kind":"text"},{"kind":"externalParam","text":"indentString"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementListSyntax/tokens(viewMode:)":{"type":"topic","url":"\/documentation\/macrobuilder\/conditionelementlistsyntax\/tokens(viewmode:)","role":"symbol","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/tokens(viewMode:)","title":"tokens(viewMode:)","abstract":[{"type":"text","text":"Sequence of tokens that are part of this Syntax node."}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"tokens"},{"kind":"text","text":"("},{"kind":"externalParam","text":"viewMode"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"SyntaxTreeViewMode","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO"},{"text":") -> ","kind":"text"},{"text":"TokenSequence","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax13TokenSequenceV"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementListSyntax/trimmedDescription":{"title":"trimmedDescription","abstract":[{"text":"The description of this node with leading whitespace of the first token","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and trailing whitespace of the last token removed."}],"url":"\/documentation\/macrobuilder\/conditionelementlistsyntax\/trimmeddescription","kind":"symbol","type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/trimmedDescription","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"trimmedDescription"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementListSyntax/hasParent":{"role":"symbol","title":"hasParent","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"hasParent"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"type":"topic","url":"\/documentation\/macrobuilder\/conditionelementlistsyntax\/hasparent","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/hasParent","kind":"symbol","abstract":[{"text":"Whether or not this node has a parent.","type":"text"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementListSyntax/trailingTrivia":{"type":"topic","url":"\/documentation\/macrobuilder\/conditionelementlistsyntax\/trailingtrivia","role":"symbol","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/trailingTrivia","title":"trailingTrivia","abstract":[{"type":"text","text":"The trailing trivia of this syntax node."}],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"trailingTrivia"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Trivia","preciseIdentifier":"s:11SwiftSyntax6TriviaV"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementListSyntax/isProtocol(_:)-9mwk1":{"title":"isProtocol(_:)","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"code":"WithModifiersSyntax","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"url":"\/documentation\/macrobuilder\/conditionelementlistsyntax\/isprotocol(_:)-9mwk1","kind":"symbol","type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/isProtocol(_:)-9mwk1","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"kind":"text","text":"((any "},{"preciseIdentifier":"s:11SwiftSyntax013WithModifiersB0P","text":"WithModifiersSyntax","kind":"typeIdentifier"},{"kind":"text","text":").Type) -> "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementListSyntax/leadingTriviaLength":{"type":"topic","url":"\/documentation\/macrobuilder\/conditionelementlistsyntax\/leadingtrivialength","role":"symbol","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/leadingTriviaLength","title":"leadingTriviaLength","abstract":[{"text":"The length this node’s leading trivia takes up spelled out in source.","type":"text"}],"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"leadingTriviaLength"},{"kind":"text","text":": "},{"text":"SourceLength","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementListSyntax/endLocation(converter:afterTrailingTrivia:)":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"endLocation"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"converter"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"SourceLocationConverter","preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"afterTrailingTrivia"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"SourceLocation","preciseIdentifier":"s:11SwiftSyntax14SourceLocationV"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/endLocation(converter:afterTrailingTrivia:)","kind":"symbol","url":"\/documentation\/macrobuilder\/conditionelementlistsyntax\/endlocation(converter:aftertrailingtrivia:)","title":"endLocation(converter:afterTrailingTrivia:)","abstract":[{"type":"text","text":"The ending location, in the provided file, of this Syntax node."}],"role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementListSyntax/isProtocol(_:)-54vpb":{"abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"WithAttributesSyntax"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"url":"\/documentation\/macrobuilder\/conditionelementlistsyntax\/isprotocol(_:)-54vpb","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/isProtocol(_:)-54vpb","title":"isProtocol(_:)","role":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"text":"((any ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax014WithAttributesB0P","kind":"typeIdentifier","text":"WithAttributesSyntax"},{"kind":"text","text":").Type) -> "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementListSyntax/firstToken(viewMode:)":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/firstToken(viewMode:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"firstToken"},{"kind":"text","text":"("},{"kind":"externalParam","text":"viewMode"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"SyntaxTreeViewMode","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax"},{"text":"?","kind":"text"}],"url":"\/documentation\/macrobuilder\/conditionelementlistsyntax\/firsttoken(viewmode:)","title":"firstToken(viewMode:)","abstract":[{"type":"text","text":"Returns the first token node that is part of this syntax node."}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementListSyntax/trimmedByteRange":{"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"trimmedByteRange","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangeV","text":"ByteSourceRange","kind":"typeIdentifier"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/trimmedByteRange","kind":"symbol","title":"trimmedByteRange","url":"\/documentation\/macrobuilder\/conditionelementlistsyntax\/trimmedbyterange","abstract":[{"type":"text","text":"The byte source range of this node excluding leading and trailing trivia."}],"role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementListSyntax/node(at:)":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/node(at:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"node"},{"kind":"text","text":"("},{"text":"at","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B10IdentifierV","text":"SyntaxIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax"},{"text":"?","kind":"text"}],"url":"\/documentation\/macrobuilder\/conditionelementlistsyntax\/node(at:)","title":"node(at:)","abstract":[{"type":"text","text":"If the node with the given "},{"type":"codeVoice","code":"syntaxIdentifier"},{"type":"text","text":" is a (recursive) child of this node, return the node with that"},{"text":" ","type":"text"},{"type":"text","text":"identifier."}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementListSyntax/isProtocol(_:)-k2nw":{"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/isProtocol(_:)-k2nw","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"WithCodeBlockSyntax"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"role":"symbol","title":"isProtocol(_:)","kind":"symbol","url":"\/documentation\/macrobuilder\/conditionelementlistsyntax\/isprotocol(_:)-k2nw","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"text":"((any ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P","text":"WithCodeBlockSyntax"},{"text":").Type) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/Syntax":{"abstract":[{"type":"text","text":"A Syntax node represents a tree of nodes with tokens at the leaves."},{"text":" ","type":"text"},{"type":"text","text":"Each node has accessors for its known children, and allows efficient"},{"text":" ","type":"text"},{"text":"iteration over the children through its ","type":"text"},{"type":"codeVoice","code":"children"},{"text":" property.","type":"text"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Syntax"}],"url":"\/documentation\/macrobuilder\/syntax","title":"Syntax","type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Syntax","kind":"identifier"}],"kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementListSyntax/previousToken":{"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"previousToken"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"TokenSyntax","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"text":"?","kind":"text"}],"type":"topic","deprecated":true,"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/previousToken","kind":"symbol","title":"previousToken","url":"\/documentation\/macrobuilder\/conditionelementlistsyntax\/previoustoken","abstract":[],"role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementListSyntax/detach()":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/detach()","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"detach","kind":"identifier"},{"kind":"text","text":"() -> "},{"text":"Self","kind":"typeIdentifier"}],"deprecated":true,"url":"\/documentation\/macrobuilder\/conditionelementlistsyntax\/detach()","title":"detach()","abstract":[]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SyntaxKind/functionDecl":{"url":"\/documentation\/macrobuilder\/syntaxkind\/functiondecl","fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"kind":"identifier","text":"functionDecl"}],"title":"SyntaxKind.functionDecl","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxKind\/functionDecl","role":"symbol","type":"topic","kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementListSyntax/parent":{"abstract":[{"text":"The parent of this syntax node, or ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":" if this node is the root."}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/parent","role":"symbol","title":"parent","type":"topic","kind":"symbol","url":"\/documentation\/macrobuilder\/conditionelementlistsyntax\/parent","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parent","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax","kind":"typeIdentifier"},{"text":"?","kind":"text"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementListSyntax/isProtocol(_:)-6ph86":{"url":"\/documentation\/macrobuilder\/conditionelementlistsyntax\/isprotocol(_:)-6ph86","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/isProtocol(_:)-6ph86","role":"symbol","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"kind":"text","text":"((any "},{"text":"WithTrailingCommaSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax017WithTrailingCommaB0P"},{"text":").Type) -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"title":"isProtocol(_:)","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithTrailingCommaSyntax"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementListSyntax/asProtocol(_:)-41ajz":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"((any "},{"text":"WithModifiersSyntax","preciseIdentifier":"s:11SwiftSyntax013WithModifiersB0P","kind":"typeIdentifier"},{"kind":"text","text":").Type) -> (any "},{"preciseIdentifier":"s:11SwiftSyntax013WithModifiersB0P","kind":"typeIdentifier","text":"WithModifiersSyntax"},{"kind":"text","text":")?"}],"abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"WithModifiersSyntax"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"url":"\/documentation\/macrobuilder\/conditionelementlistsyntax\/asprotocol(_:)-41ajz","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/asProtocol(_:)-41ajz","kind":"symbol","type":"topic","role":"symbol","title":"asProtocol(_:)"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementListSyntax/trimmed(matching:)":{"abstract":[{"text":"A copy of this node with pieces that match ","type":"text"},{"type":"codeVoice","code":"matching"},{"text":" trimmed from the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"leading trivia of the first token and trailing trivia of the last token."}],"kind":"symbol","type":"topic","title":"trimmed(matching:)","url":"\/documentation\/macrobuilder\/conditionelementlistsyntax\/trimmed(matching:)","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/trimmed(matching:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"trimmed"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"matching"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax11TriviaPieceO","text":"TriviaPiece"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementListSyntax/init(_:)-n80":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/init(_:)-n80","url":"\/documentation\/macrobuilder\/conditionelementlistsyntax\/init(_:)-n80","title":"init(_:)","fragments":[{"text":"init","kind":"identifier"},{"text":"?<","kind":"text"},{"text":"S","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"S","kind":"typeIdentifier"},{"text":"?)","kind":"text"}],"abstract":[{"type":"text","text":"Initializes a new instance of the conforming type from a given specialized syntax node."}],"role":"symbol","kind":"symbol","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementListSyntax/contentLength":{"url":"\/documentation\/macrobuilder\/conditionelementlistsyntax\/contentlength","deprecated":true,"type":"topic","kind":"symbol","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/contentLength","abstract":[],"title":"contentLength","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"contentLength"},{"text":": ","kind":"text"},{"text":"SourceLength","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementListSyntax/id":{"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"id"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B10IdentifierV","text":"SyntaxIdentifier"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/id","kind":"symbol","title":"id","url":"\/documentation\/macrobuilder\/conditionelementlistsyntax\/id","abstract":[{"text":"Returns a value representing the unique identity of the node.","type":"text"}],"role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementListSyntax/modifying(_:_:)":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/modifying(_:_:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"modifying","kind":"identifier"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:s15WritableKeyPathC","text":"WritableKeyPath"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":">, ("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"url":"\/documentation\/macrobuilder\/conditionelementlistsyntax\/modifying(_:_:)","title":"modifying(_:_:)","abstract":[]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementListSyntax/hasWarning":{"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"hasWarning","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/hasWarning","kind":"symbol","title":"hasWarning","url":"\/documentation\/macrobuilder\/conditionelementlistsyntax\/haswarning","abstract":[{"text":"Whether the tree contained by this layout has any tokens with a","type":"text"},{"type":"text","text":" "},{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TokenDiagnostic","isActive":true,"type":"reference"},{"text":" of severity ","type":"text"},{"code":"warning","type":"codeVoice"},{"text":".","type":"text"}],"role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementListSyntax/startLocation(converter:afterLeadingTrivia:)":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/startLocation(converter:afterLeadingTrivia:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"startLocation","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"converter"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SourceLocationConverter","preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"afterLeadingTrivia"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"SourceLocation","preciseIdentifier":"s:11SwiftSyntax14SourceLocationV"}],"url":"\/documentation\/macrobuilder\/conditionelementlistsyntax\/startlocation(converter:afterleadingtrivia:)","title":"startLocation(converter:afterLeadingTrivia:)","abstract":[{"text":"The starting location, in the provided file, of this Syntax node.","type":"text"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementListSyntax/asProtocol(_:)-6n3l0":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"text":"((any ","kind":"text"},{"text":"WithAttributesSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax014WithAttributesB0P"},{"kind":"text","text":").Type) -> (any "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax014WithAttributesB0P","text":"WithAttributesSyntax"},{"text":")?","kind":"text"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/asProtocol(_:)-6n3l0","kind":"symbol","title":"asProtocol(_:)","url":"\/documentation\/macrobuilder\/conditionelementlistsyntax\/asprotocol(_:)-6n3l0","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"code":"WithAttributesSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementListSyntax/description":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"description","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"}],"kind":"symbol","url":"\/documentation\/macrobuilder\/conditionelementlistsyntax\/description","type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/description","title":"description","role":"symbol","abstract":[{"text":"A source-accurate description of this node.","type":"text"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementListSyntax/as(_:)-4h2u0":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/as(_:)-4h2u0","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"`as`","kind":"identifier"},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","text":"Self"},{"text":"?","kind":"text"}],"deprecated":true,"url":"\/documentation\/macrobuilder\/conditionelementlistsyntax\/as(_:)-4h2u0","title":"as(_:)","abstract":[{"type":"text","text":"Casts the current syntax node to its own type."}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementListSyntax/trimmed":{"type":"topic","abstract":[{"type":"text","text":"A copy of this node without the leading trivia of the first token in the"},{"text":" ","type":"text"},{"text":"node and the trailing trivia of the last token in the node.","type":"text"}],"url":"\/documentation\/macrobuilder\/conditionelementlistsyntax\/trimmed","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"trimmed","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"}],"title":"trimmed","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/trimmed"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementListSyntax/with(_:_:)":{"abstract":[{"text":"Returns a new syntax node that has the child at ","type":"text"},{"code":"keyPath","type":"codeVoice"},{"type":"text","text":" replaced by"},{"type":"text","text":" "},{"code":"value","type":"codeVoice"},{"type":"text","text":"."}],"url":"\/documentation\/macrobuilder\/conditionelementlistsyntax\/with(_:_:)","role":"symbol","title":"with(_:_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"with","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s15WritableKeyPathC","text":"WritableKeyPath"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"T"},{"text":">, ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/with(_:_:)","kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementListSyntax/kind":{"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"kind"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B4KindO","kind":"typeIdentifier","text":"SyntaxKind"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/kind","kind":"symbol","title":"kind","url":"\/documentation\/macrobuilder\/conditionelementlistsyntax\/kind","abstract":[{"type":"text","text":"The kind of the syntax node, e.g. if it is a "},{"type":"reference","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxKind\/functionDecl","isActive":true},{"text":".","type":"text"}],"role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementListSyntax/isProtocol(_:)-23d2x":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/isProtocol(_:)-23d2x","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"((any "},{"preciseIdentifier":"s:11SwiftSyntax013ParenthesizedB0P","kind":"typeIdentifier","text":"ParenthesizedSyntax"},{"text":").Type) -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"url":"\/documentation\/macrobuilder\/conditionelementlistsyntax\/isprotocol(_:)-23d2x","title":"isProtocol(_:)","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"ParenthesizedSyntax"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementListSyntax/asProtocol(_:)-47wgz":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"((any "},{"text":"MissingNodeSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax011MissingNodeB0P"},{"text":").Type) -> (any ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax011MissingNodeB0P","text":"MissingNodeSyntax"},{"kind":"text","text":")?"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/asProtocol(_:)-47wgz","kind":"symbol","title":"asProtocol(_:)","url":"\/documentation\/macrobuilder\/conditionelementlistsyntax\/asprotocol(_:)-47wgz","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"MissingNodeSyntax"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementListSyntax/asProtocol(_:)-9xqdj":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/asProtocol(_:)-9xqdj","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"text":"((any ","kind":"text"},{"kind":"typeIdentifier","text":"WithOptionalCodeBlockSyntax","preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P"},{"text":").Type) -> (any ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P","text":"WithOptionalCodeBlockSyntax"},{"kind":"text","text":")?"}],"url":"\/documentation\/macrobuilder\/conditionelementlistsyntax\/asprotocol(_:)-9xqdj","title":"asProtocol(_:)","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"text":" ","type":"text"},{"code":"WithOptionalCodeBlockSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementListSyntax/asProtocol(_:)-1afnx":{"abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"ParenthesizedSyntax"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"((any "},{"kind":"typeIdentifier","text":"ParenthesizedSyntax","preciseIdentifier":"s:11SwiftSyntax013ParenthesizedB0P"},{"kind":"text","text":").Type) -> (any "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013ParenthesizedB0P","text":"ParenthesizedSyntax"},{"text":")?","kind":"text"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/asProtocol(_:)-1afnx","kind":"symbol","url":"\/documentation\/macrobuilder\/conditionelementlistsyntax\/asprotocol(_:)-1afnx","title":"asProtocol(_:)"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementListSyntax/sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"sourceRange"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"converter"},{"text":": ","kind":"text"},{"text":"SourceLocationConverter","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC"},{"kind":"text","text":", "},{"kind":"externalParam","text":"afterLeadingTrivia"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"text":", ","kind":"text"},{"text":"afterTrailingTrivia","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"SourceRange","preciseIdentifier":"s:11SwiftSyntax11SourceRangeV"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)","kind":"symbol","title":"sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)","url":"\/documentation\/macrobuilder\/conditionelementlistsyntax\/sourcerange(converter:afterleadingtrivia:aftertrailingtrivia:)","abstract":[{"type":"text","text":"The source range, in the provided file, of this Syntax node."}],"role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementListSyntax/cast(_:)-5qqab":{"role":"symbol","type":"topic","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/cast(_:)-5qqab","abstract":[{"type":"text","text":"Force-casts the current syntax node to a given specialized syntax type."}],"url":"\/documentation\/macrobuilder\/conditionelementlistsyntax\/cast(_:)-5qqab","title":"cast(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"cast"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":".Type) -> "},{"text":"S","kind":"typeIdentifier"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementListSyntax/init(validating:)":{"url":"\/documentation\/macrobuilder\/conditionelementlistsyntax\/init(validating:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/init(validating:)","type":"topic","abstract":[{"type":"text","text":"If "},{"type":"codeVoice","code":"node"},{"type":"text","text":" has contains no syntax errors, return "},{"code":"node","type":"codeVoice"},{"type":"text","text":", otherwise"},{"type":"text","text":" "},{"type":"text","text":"throw an error with diagnostics describing the syntax errors."}],"role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"text":"validating","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"kind":"symbol","title":"init(validating:)"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementListSyntax/isProtocol(_:)-58ztc":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/isProtocol(_:)-58ztc","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"((any "},{"preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P","kind":"typeIdentifier","text":"FreestandingMacroExpansionSyntax"},{"text":").Type) -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"url":"\/documentation\/macrobuilder\/conditionelementlistsyntax\/isprotocol(_:)-58ztc","title":"isProtocol(_:)","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"code":"FreestandingMacroExpansionSyntax","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementListSyntax/trimmedLength":{"url":"\/documentation\/macrobuilder\/conditionelementlistsyntax\/trimmedlength","title":"trimmedLength","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"trimmedLength","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV","text":"SourceLength"}],"type":"topic","abstract":[{"type":"text","text":"The length this node takes up spelled out in the source, excluding its"},{"type":"text","text":" "},{"text":"leading or trailing trivia.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/trimmedLength","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementListSyntax/keyPathInParent":{"abstract":[],"type":"topic","role":"symbol","url":"\/documentation\/macrobuilder\/conditionelementlistsyntax\/keypathinparent","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/keyPathInParent","title":"keyPathInParent","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"keyPathInParent","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"AnyKeyPath","preciseIdentifier":"s:s10AnyKeyPathC"},{"kind":"text","text":"?"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementListSyntax/debugDescription":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"debugDescription"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/debugDescription","kind":"symbol","title":"debugDescription","url":"\/documentation\/macrobuilder\/conditionelementlistsyntax\/debugdescription","abstract":[{"type":"text","text":"A simple description of this node (ie. its type)."}],"role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementListSyntax/asProtocol(_:)-2jgin":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/asProtocol(_:)-2jgin","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"((any "},{"text":"WithStatementsSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax014WithStatementsB0P"},{"kind":"text","text":").Type) -> (any "},{"text":"WithStatementsSyntax","preciseIdentifier":"s:11SwiftSyntax014WithStatementsB0P","kind":"typeIdentifier"},{"kind":"text","text":")?"}],"url":"\/documentation\/macrobuilder\/conditionelementlistsyntax\/asprotocol(_:)-2jgin","title":"asProtocol(_:)","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithStatementsSyntax"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementListSyntax/is(_:)-4p96k":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"`is`"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"text":".Type) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"deprecated":true,"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/is(_:)-4p96k","url":"\/documentation\/macrobuilder\/conditionelementlistsyntax\/is(_:)-4p96k","kind":"symbol","role":"symbol","title":"is(_:)","abstract":[{"type":"text","text":"Checks if the current syntax node can be cast to its own type."}],"type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementListSyntax/structure":{"url":"\/documentation\/macrobuilder\/conditionelementlistsyntax\/structure","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/structure","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"structure","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B13NodeStructureO","text":"SyntaxNodeStructure","kind":"typeIdentifier"}],"kind":"symbol","type":"topic","abstract":[{"text":"The statically allowed structure of the syntax node.","type":"text"}],"title":"structure"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementListSyntax/isProtocol(_:)-1a1gr":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"text":"((any ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax011MissingNodeB0P","text":"MissingNodeSyntax"},{"text":").Type) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/isProtocol(_:)-1a1gr","kind":"symbol","title":"isProtocol(_:)","url":"\/documentation\/macrobuilder\/conditionelementlistsyntax\/isprotocol(_:)-1a1gr","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"text":" ","type":"text"},{"code":"MissingNodeSyntax","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementListSyntax/as(_:)-21gt5":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/as(_:)-21gt5","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"`as`","kind":"identifier"},{"kind":"text","text":"("},{"text":"Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"kind":"text","text":".Type) -> "},{"text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"deprecated":true,"url":"\/documentation\/macrobuilder\/conditionelementlistsyntax\/as(_:)-21gt5","title":"as(_:)","abstract":[{"type":"text","text":"Attempts to upcast the current syntax node to "},{"isActive":true,"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax","type":"reference"},{"type":"text","text":" node."}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementListSyntax/isProtocol(_:)-br0j":{"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"isProtocol"},{"text":"((any ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax09DeclGroupB0P","kind":"typeIdentifier","text":"DeclGroupSyntax"},{"kind":"text","text":").Type) -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"role":"symbol","url":"\/documentation\/macrobuilder\/conditionelementlistsyntax\/isprotocol(_:)-br0j","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/isProtocol(_:)-br0j","title":"isProtocol(_:)","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"code":"DeclGroupSyntax","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementListSyntax/positionAfterSkippingLeadingTrivia":{"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"positionAfterSkippingLeadingTrivia","kind":"identifier"},{"text":": ","kind":"text"},{"text":"AbsolutePosition","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV"}],"role":"symbol","type":"topic","kind":"symbol","title":"positionAfterSkippingLeadingTrivia","abstract":[{"type":"text","text":"The absolute position of the starting point of this node, skipping any"},{"text":" ","type":"text"},{"type":"text","text":"leading trivia attached to the first token syntax."}],"url":"\/documentation\/macrobuilder\/conditionelementlistsyntax\/positionafterskippingleadingtrivia","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/positionAfterSkippingLeadingTrivia"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementListSyntax/asProtocol(_:)-55al3":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"text":"((any ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P","kind":"typeIdentifier","text":"FreestandingMacroExpansionSyntax"},{"text":").Type) -> (any ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P","text":"FreestandingMacroExpansionSyntax"},{"kind":"text","text":")?"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/asProtocol(_:)-55al3","kind":"symbol","title":"asProtocol(_:)","url":"\/documentation\/macrobuilder\/conditionelementlistsyntax\/asprotocol(_:)-55al3","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"FreestandingMacroExpansionSyntax"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementListSyntax/asProtocol(_:)-3nu9d":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/asProtocol(_:)-3nu9d","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"((any "},{"text":"WithCodeBlockSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P"},{"kind":"text","text":").Type) -> (any "},{"text":"WithCodeBlockSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P"},{"text":")?","kind":"text"}],"url":"\/documentation\/macrobuilder\/conditionelementlistsyntax\/asprotocol(_:)-3nu9d","title":"asProtocol(_:)","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"code":"WithCodeBlockSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementListSyntax/index":{"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"index"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"SyntaxChildrenIndex","preciseIdentifier":"s:11SwiftSyntax0B13ChildrenIndexV"}],"type":"topic","deprecated":true,"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/index","kind":"symbol","title":"index","url":"\/documentation\/macrobuilder\/conditionelementlistsyntax\/index","abstract":[{"type":"text","text":"The index of this node in a "},{"isActive":true,"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxChildren","type":"reference"},{"type":"text","text":" collection."}],"role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementListSyntax/isImplicit":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/isImplicit","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isImplicit"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"deprecated":true,"url":"\/documentation\/macrobuilder\/conditionelementlistsyntax\/isimplicit","title":"isImplicit","abstract":[{"type":"text","text":"When isImplicit is true, the syntax node doesn’t include any"},{"text":" ","type":"text"},{"type":"text","text":"underlying tokens, e.g. an empty CodeBlockItemList."}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementListSyntax/isProtocol(_:)-3zjei":{"abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"text":" ","type":"text"},{"code":"WithOptionalCodeBlockSyntax","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/isProtocol(_:)-3zjei","title":"isProtocol(_:)","url":"\/documentation\/macrobuilder\/conditionelementlistsyntax\/isprotocol(_:)-3zjei","role":"symbol","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"((any "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P","text":"WithOptionalCodeBlockSyntax"},{"kind":"text","text":").Type) -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementListSyntax/formatted(using:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"formatted"},{"kind":"text","text":"("},{"text":"using","kind":"externalParam"},{"kind":"text","text":": "},{"text":"BasicFormat","kind":"typeIdentifier","preciseIdentifier":"s:16SwiftBasicFormat0bC0C"},{"kind":"text","text":") -> "},{"text":"Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/formatted(using:)","kind":"symbol","title":"formatted(using:)","url":"\/documentation\/macrobuilder\/conditionelementlistsyntax\/formatted(using:)","abstract":[],"role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementListSyntax/detached":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/detached","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"detached"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"}],"url":"\/documentation\/macrobuilder\/conditionelementlistsyntax\/detached","title":"detached","abstract":[{"text":"Return this subtree with this node as the root, ie. detach this node","type":"text"},{"type":"text","text":" "},{"text":"from its parent.","type":"text"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementListSyntax/syntaxTextBytes":{"url":"\/documentation\/macrobuilder\/conditionelementlistsyntax\/syntaxtextbytes","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/syntaxTextBytes","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"syntaxTextBytes","kind":"identifier"},{"text":": [","kind":"text"},{"kind":"typeIdentifier","text":"UInt8","preciseIdentifier":"s:s5UInt8V"},{"text":"]","kind":"text"}],"type":"topic","kind":"symbol","role":"symbol","title":"syntaxTextBytes","abstract":[{"type":"text","text":"Retrieve the syntax text as an array of bytes that models the input"},{"text":" ","type":"text"},{"type":"text","text":"source even in the presence of invalid UTF-8."}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementListSyntax/expand(macros:contextGenerator:indentationWidth:)":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"expand","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Context"},{"kind":"text","text":">("},{"kind":"externalParam","text":"macros"},{"kind":"text","text":": ["},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":" : any ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:17SwiftSyntaxMacros5MacroP","text":"Macro"},{"text":".Type], ","kind":"text"},{"text":"contextGenerator","kind":"externalParam"},{"kind":"text","text":": ("},{"text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Context","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"indentationWidth"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax6TriviaV","text":"Trivia","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"text":"Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/expand(macros:contextGenerator:indentationWidth:)","type":"topic","url":"\/documentation\/macrobuilder\/conditionelementlistsyntax\/expand(macros:contextgenerator:indentationwidth:)","role":"symbol","kind":"symbol","abstract":[],"title":"expand(macros:contextGenerator:indentationWidth:)"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementListSyntax/hasError":{"title":"hasError","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/hasError","url":"\/documentation\/macrobuilder\/conditionelementlistsyntax\/haserror","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"hasError","kind":"identifier"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Whether the tree contained by this layout has any"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementListSyntax/asProtocol(_:)-6esiq":{"abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithTrailingCommaSyntax"},{"text":". Otherwise return ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"url":"\/documentation\/macrobuilder\/conditionelementlistsyntax\/asprotocol(_:)-6esiq","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/asProtocol(_:)-6esiq","type":"topic","title":"asProtocol(_:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"asProtocol"},{"text":"((any ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax017WithTrailingCommaB0P","kind":"typeIdentifier","text":"WithTrailingCommaSyntax"},{"text":").Type) -> (any ","kind":"text"},{"text":"WithTrailingCommaSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax017WithTrailingCommaB0P"},{"text":")?","kind":"text"}],"kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementListSyntax/hasSequenceExpr":{"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"hasSequenceExpr"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/hasSequenceExpr","kind":"symbol","title":"hasSequenceExpr","url":"\/documentation\/macrobuilder\/conditionelementlistsyntax\/hassequenceexpr","abstract":[{"text":"Whether this tree contains a missing token or unexpected node.","type":"text"}],"role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementListSyntax/trailingTriviaLength":{"abstract":[{"type":"text","text":"The length this node’s trailing trivia takes up spelled out in source."}],"title":"trailingTriviaLength","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"trailingTriviaLength","kind":"identifier"},{"kind":"text","text":": "},{"text":"SourceLength","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV","kind":"typeIdentifier"}],"role":"symbol","type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/trailingTriviaLength","url":"\/documentation\/macrobuilder\/conditionelementlistsyntax\/trailingtrivialength","kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementListSyntax/endPositionBeforeTrailingTrivia":{"abstract":[{"text":"The end position of this node’s content, before any trailing trivia.","type":"text"}],"url":"\/documentation\/macrobuilder\/conditionelementlistsyntax\/endpositionbeforetrailingtrivia","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/endPositionBeforeTrailingTrivia","title":"endPositionBeforeTrailingTrivia","role":"symbol","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"endPositionBeforeTrailingTrivia"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","text":"AbsolutePosition"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementListSyntax/cast(_:)-7petv":{"url":"\/documentation\/macrobuilder\/conditionelementlistsyntax\/cast(_:)-7petv","deprecated":true,"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/cast(_:)-7petv","title":"cast(_:)","kind":"symbol","abstract":[{"text":"Force-casts the current syntax node to its own type.","type":"text"}],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"cast","kind":"identifier"},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementListSyntax/isProtocol(_:)-6zw2i":{"title":"isProtocol(_:)","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"EffectSpecifiersSyntax"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/isProtocol(_:)-6zw2i","url":"\/documentation\/macrobuilder\/conditionelementlistsyntax\/isprotocol(_:)-6zw2i","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"isProtocol"},{"kind":"text","text":"((any "},{"text":"EffectSpecifiersSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax016EffectSpecifiersB0P"},{"text":").Type) -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementListSyntax/asMacroLexicalContext()":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/asMacroLexicalContext()","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"asMacroLexicalContext","kind":"identifier"},{"kind":"text","text":"() -> "},{"text":"Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"kind":"text","text":"?"}],"url":"\/documentation\/macrobuilder\/conditionelementlistsyntax\/asmacrolexicalcontext()","title":"asMacroLexicalContext()","abstract":[{"text":"If this syntax node acts as a lexical context from the perspective","type":"text"},{"type":"text","text":" "},{"type":"text","text":"of a macro, return a new syntax node based on this node that strips all"},{"text":" ","type":"text"},{"text":"information that isn’t supposed to be exposed as a lexical context, such","type":"text"},{"type":"text","text":" "},{"type":"text","text":"as function bodies or the members of types\/extensions."}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementListSyntax/lastToken(viewMode:)":{"type":"topic","role":"symbol","kind":"symbol","title":"lastToken(viewMode:)","abstract":[{"type":"text","text":"Returns the last token node that is part of this syntax node."}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/lastToken(viewMode:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"lastToken","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"viewMode"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SyntaxTreeViewMode","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","kind":"typeIdentifier","text":"TokenSyntax"},{"text":"?","kind":"text"}],"url":"\/documentation\/macrobuilder\/conditionelementlistsyntax\/lasttoken(viewmode:)"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementListSyntax/token(at:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"token"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"at"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","text":"AbsolutePosition"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax"},{"kind":"text","text":"?"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/token(at:)","kind":"symbol","title":"token(at:)","url":"\/documentation\/macrobuilder\/conditionelementlistsyntax\/token(at:)","abstract":[{"type":"text","text":"Find the syntax token at the given absolute position within this"},{"type":"text","text":" "},{"text":"syntax node or any of its children.","type":"text"}],"role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementListSyntax/isProtocol(_:)-89snu":{"title":"isProtocol(_:)","url":"\/documentation\/macrobuilder\/conditionelementlistsyntax\/isprotocol(_:)-89snu","type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/isProtocol(_:)-89snu","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"NamedDeclSyntax"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"text":"((any ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax09NamedDeclB0P","text":"NamedDeclSyntax"},{"text":").Type) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementListSyntax/is(_:)-611gj":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"`is`","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier","text":"Syntax"},{"kind":"text","text":".Type) -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"deprecated":true,"url":"\/documentation\/macrobuilder\/conditionelementlistsyntax\/is(_:)-611gj","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/is(_:)-611gj","kind":"symbol","title":"is(_:)","abstract":[{"text":"Checks if the current syntax node can be upcast to ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax"},{"type":"text","text":" node."}],"role":"symbol","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementListSyntax/firstToken":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/firstToken","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"firstToken","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax"},{"text":"?","kind":"text"}],"deprecated":true,"url":"\/documentation\/macrobuilder\/conditionelementlistsyntax\/firsttoken","title":"firstToken","abstract":[]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementListSyntax/isProtocol(_:)-611d8":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"text":"((any ","kind":"text"},{"kind":"typeIdentifier","text":"BracedSyntax","preciseIdentifier":"s:11SwiftSyntax06BracedB0P"},{"kind":"text","text":").Type) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/isProtocol(_:)-611d8","kind":"symbol","title":"isProtocol(_:)","url":"\/documentation\/macrobuilder\/conditionelementlistsyntax\/isprotocol(_:)-611d8","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"code":"BracedSyntax","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementListSyntax/lastToken":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/lastToken","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"lastToken","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax"},{"text":"?","kind":"text"}],"deprecated":true,"url":"\/documentation\/macrobuilder\/conditionelementlistsyntax\/lasttoken","title":"lastToken","abstract":[]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementListSyntax/cast(_:)-9cee2":{"abstract":[{"text":"Force-cast the current syntax node to ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax","isActive":true},{"text":" node..","type":"text"}],"kind":"symbol","url":"\/documentation\/macrobuilder\/conditionelementlistsyntax\/cast(_:)-9cee2","type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"cast","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V"}],"deprecated":true,"title":"cast(_:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/cast(_:)-9cee2"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementListSyntax/is(_:)-9068v":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"`is`","kind":"identifier"},{"kind":"text","text":"<"},{"text":"S","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":".Type) -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/is(_:)-9068v","kind":"symbol","title":"is(_:)","url":"\/documentation\/macrobuilder\/conditionelementlistsyntax\/is(_:)-9068v","abstract":[{"text":"Checks if the current syntax node can be cast to a given specialized syntax type.","type":"text"}],"role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementListSyntax/byteRange":{"url":"\/documentation\/macrobuilder\/conditionelementlistsyntax\/byterange","kind":"symbol","abstract":[],"role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"byteRange"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangeV","kind":"typeIdentifier","text":"ByteSourceRange"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/byteRange","title":"byteRange","deprecated":true},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementListSyntax/allMacroLexicalContexts(enclosingSyntax:)":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/allMacroLexicalContexts(enclosingSyntax:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"allMacroLexicalContexts"},{"kind":"text","text":"("},{"text":"enclosingSyntax","kind":"externalParam"},{"kind":"text","text":": ("},{"text":"Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier","text":"Syntax"},{"kind":"text","text":"?) -> ["},{"preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"url":"\/documentation\/macrobuilder\/conditionelementlistsyntax\/allmacrolexicalcontexts(enclosingsyntax:)","title":"allMacroLexicalContexts(enclosingSyntax:)","abstract":[{"text":"Return an array of enclosing lexical contexts for the purpose of macros,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"from the innermost enclosing lexical context (first in the array) to the"},{"type":"text","text":" "},{"text":"outermost. If this syntax node itself is a lexical context, it will be","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the innermost lexical context."}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementListSyntax/asProtocol(_:)-39kb9":{"role":"symbol","title":"asProtocol(_:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/asProtocol(_:)-39kb9","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"EffectSpecifiersSyntax"},{"text":". Otherwise return ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"asProtocol"},{"kind":"text","text":"((any "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax016EffectSpecifiersB0P","text":"EffectSpecifiersSyntax"},{"text":").Type) -> (any ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax016EffectSpecifiersB0P","text":"EffectSpecifiersSyntax"},{"text":")?","kind":"text"}],"type":"topic","url":"\/documentation\/macrobuilder\/conditionelementlistsyntax\/asprotocol(_:)-39kb9","kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementListSyntax/totalByteRange":{"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"totalByteRange"},{"kind":"text","text":": "},{"text":"ByteSourceRange","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangeV"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/totalByteRange","kind":"symbol","title":"totalByteRange","url":"\/documentation\/macrobuilder\/conditionelementlistsyntax\/totalbyterange","abstract":[{"type":"text","text":"The byte source range of this node including leading and trailing trivia."}],"role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementListSyntax/as(_:)-5zv18":{"role":"symbol","url":"\/documentation\/macrobuilder\/conditionelementlistsyntax\/as(_:)-5zv18","type":"topic","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/as(_:)-5zv18","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"`as`","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"S"},{"text":">(","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"kind":"typeIdentifier","text":"S"},{"text":"?","kind":"text"}],"abstract":[{"type":"text","text":"Attempts to cast the current syntax node to a given specialized syntax type."}],"title":"as(_:)"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementListSyntax/leadingTrivia":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/leadingTrivia","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"leadingTrivia"},{"kind":"text","text":": "},{"text":"Trivia","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax6TriviaV"}],"url":"\/documentation\/macrobuilder\/conditionelementlistsyntax\/leadingtrivia","title":"leadingTrivia","abstract":[{"type":"text","text":"The leading trivia of this syntax node."}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementListSyntax/position":{"url":"\/documentation\/macrobuilder\/conditionelementlistsyntax\/position","type":"topic","kind":"symbol","role":"symbol","abstract":[{"text":"The absolute position of the starting point of this node. If the first token","type":"text"},{"type":"text","text":" "},{"type":"text","text":"is with leading trivia, the position points to the start of the leading"},{"text":" ","type":"text"},{"type":"text","text":"trivia."}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/position","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"position","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","kind":"typeIdentifier","text":"AbsolutePosition"}],"title":"position"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementListSyntax/write(to:)":{"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"write","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Target","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"text":"Target","kind":"typeIdentifier"},{"kind":"text","text":")"}],"title":"write(to:)","role":"symbol","type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/write(to:)","abstract":[{"text":"Prints the raw value of this node to the provided stream.","type":"text"}],"url":"\/documentation\/macrobuilder\/conditionelementlistsyntax\/write(to:)"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementListSyntax/map(_:_:)":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"map"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"text":"WritableKeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s15WritableKeyPathC"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">, ("},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") "},{"text":"rethrows","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Self","kind":"typeIdentifier"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/map(_:_:)","kind":"symbol","title":"map(_:_:)","url":"\/documentation\/macrobuilder\/conditionelementlistsyntax\/map(_:_:)","abstract":[],"role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementListSyntax/totalLength":{"role":"symbol","title":"totalLength","type":"topic","url":"\/documentation\/macrobuilder\/conditionelementlistsyntax\/totallength","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/totalLength","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"totalLength","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax12SourceLengthV","text":"SourceLength","kind":"typeIdentifier"}],"abstract":[{"text":"The length of this node including all of its trivia.","type":"text"}],"kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementListSyntax/asProtocol(_:)-46n9m":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/asProtocol(_:)-46n9m","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"asProtocol"},{"kind":"text","text":"((any "},{"preciseIdentifier":"s:11SwiftSyntax09DeclGroupB0P","text":"DeclGroupSyntax","kind":"typeIdentifier"},{"text":").Type) -> (any ","kind":"text"},{"text":"DeclGroupSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax09DeclGroupB0P"},{"text":")?","kind":"text"}],"url":"\/documentation\/macrobuilder\/conditionelementlistsyntax\/asprotocol(_:)-46n9m","title":"asProtocol(_:)","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"DeclGroupSyntax"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementListSyntax/trimmedDescription(matching:)":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"trimmedDescription","kind":"identifier"},{"kind":"text","text":"("},{"text":"matching","kind":"externalParam"},{"kind":"text","text":": ("},{"text":"TriviaPiece","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax11TriviaPieceO"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"}],"kind":"symbol","type":"topic","url":"\/documentation\/macrobuilder\/conditionelementlistsyntax\/trimmeddescription(matching:)","abstract":[{"type":"text","text":"The description of this node with pieces that match "},{"type":"codeVoice","code":"matching"},{"type":"text","text":" removed"},{"type":"text","text":" "},{"text":"from the leading trivia of the first token and trailing trivia of the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"last token."}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/trimmedDescription(matching:)","title":"trimmedDescription(matching:)"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SyntaxChildren":{"title":"SyntaxChildren","abstract":[{"text":"Collection that contains the present child ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax","type":"reference"},{"type":"text","text":" nodes of the given node."}],"url":"\/documentation\/macrobuilder\/syntaxchildren","role":"symbol","navigatorTitle":[{"text":"SyntaxChildren","kind":"identifier"}],"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SyntaxChildren","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxChildren"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementListSyntax/init(_:)-73pbn":{"fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Children","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Children","kind":"typeIdentifier"},{"text":")","kind":"text"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/init(_:)-73pbn","kind":"symbol","title":"init(_:)","url":"\/documentation\/macrobuilder\/conditionelementlistsyntax\/init(_:)-73pbn","abstract":[{"text":"Converts the given specialized node to this type. Returns ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":" if the"},{"type":"text","text":" "},{"text":"conversion is not possible.","type":"text"}],"role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementListSyntax/asProtocol(_:)-714j6":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/asProtocol(_:)-714j6","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"text":"((any ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P","kind":"typeIdentifier","text":"WithGenericParametersSyntax"},{"kind":"text","text":").Type) -> (any "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P","text":"WithGenericParametersSyntax"},{"text":")?","kind":"text"}],"url":"\/documentation\/macrobuilder\/conditionelementlistsyntax\/asprotocol(_:)-714j6","title":"asProtocol(_:)","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithGenericParametersSyntax"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementListSyntax/root":{"abstract":[{"text":"The root of the tree in which this node resides.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/root","title":"root","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"root"},{"kind":"text","text":": "},{"text":"Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"}],"kind":"symbol","url":"\/documentation\/macrobuilder\/conditionelementlistsyntax\/root","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementListSyntax/syntaxNodeType":{"title":"syntaxNodeType","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/syntaxNodeType","type":"topic","abstract":[{"text":"The dynamic metatype of the concrete node.","type":"text"}],"url":"\/documentation\/macrobuilder\/conditionelementlistsyntax\/syntaxnodetype","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"syntaxNodeType"},{"kind":"text","text":": any "},{"text":"SyntaxProtocol","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP"},{"text":".Type","kind":"text"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ConditionElementListSyntax/isProtocol(_:)-5l6zw":{"abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"code":"WithGenericParametersSyntax","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ConditionElementListSyntax\/isProtocol(_:)-5l6zw","title":"isProtocol(_:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"text":"((any ","kind":"text"},{"text":"WithGenericParametersSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P"},{"kind":"text","text":").Type) -> "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"url":"\/documentation\/macrobuilder\/conditionelementlistsyntax\/isprotocol(_:)-5l6zw","kind":"symbol","role":"symbol"}}}