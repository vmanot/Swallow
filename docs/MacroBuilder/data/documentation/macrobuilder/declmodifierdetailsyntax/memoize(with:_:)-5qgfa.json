{"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"memoize"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"text":"with","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"cache","kind":"internalParam"},{"kind":"text","text":": "},{"text":"MemoizationCache","kind":"typeIdentifier"},{"text":"? = MemoizationCache.shared, ","kind":"text"},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"keyPath"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC","text":"KeyPath"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"text":"T","kind":"typeIdentifier"}]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The shared cache to use; ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":" disables caching and simply returns the result of "},{"code":"predicate","type":"codeVoice"},{"text":" directly","type":"text"}]}],"name":"cache"}]},{"kind":"content","content":[{"type":"heading","text":"Return Value","level":2,"anchor":"return-value"},{"inlineContent":[{"text":"The result from the ","type":"text"},{"type":"codeVoice","code":"predicate"},{"text":", either a previously cached value, or the result of executing the ","type":"text"},{"code":"predicate","type":"codeVoice"}],"type":"paragraph"}]},{"kind":"content","content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"The source subject (the receiver) and the result object (the return value) should be value types, and the ","type":"text"},{"code":"predicate","type":"codeVoice"},{"type":"text","text":" must be a "},{"inlineContent":[{"type":"text","text":"pure"}],"type":"emphasis"},{"text":" function that captures ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"no state","type":"text"}]},{"type":"text","text":", in that:"}]},{"type":"orderedList","items":[{"content":[{"inlineContent":[{"text":"Its return value is the same for the same arguments (no variation with local static variables, non-local variables, mutable reference arguments or input streams from I\/O devices).","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Its evaluation has no side effects (no mutation of local static variables, non-local variables, mutable reference arguments or I\/O streams)."}],"type":"paragraph"}]}]},{"style":"note","name":"Note","type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"The calling functionâ€™s source file and line are used as the cache key, so care must be taken to avoid having multiple calls to ","type":"text"},{"type":"codeVoice","code":"memoize"},{"text":" occur from a single line of source code.","type":"text"}]}]},{"name":"Throws","content":[{"inlineContent":[{"type":"text","text":"Re-Throws and errors from "},{"code":"predicate","type":"codeVoice"}],"type":"paragraph"}],"type":"aside","style":"note"},{"style":"note","type":"aside","content":[{"inlineContent":[{"type":"text","text":"Around O(1) for a successful cache hit, otherwise the complexity of the keyPath execution"}],"type":"paragraph"}],"name":"Complexity"}]}],"kind":"symbol","schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"type":"text","text":"Memoize the result of the execution of a predicate for the "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":" receiver."}],"sections":[],"metadata":{"symbolKind":"method","roleHeading":"Instance Method","externalID":"s:SH7SwallowE7memoize4with_qd__AA6_CacheCyAA011MemoizationD3KeyVypGSg_s0F4PathCyxqd__GtlF::SYNTHESIZED::s:11SwiftSyntax018DeclModifierDetailB0V","extendedModule":"Swift","modules":[{"relatedModules":["Swift"],"name":"MacroBuilder"}],"title":"memoize(with:_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"memoize"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"text":"with","kind":"externalParam"},{"kind":"text","text":": "},{"text":"MemoizationCache","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"KeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","text":"T"}],"role":"symbol"},"variants":[{"paths":["\/documentation\/macrobuilder\/declmodifierdetailsyntax\/memoize(with:_:)-5qgfa"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DeclModifierDetailSyntax\/memoize(with:_:)-5qgfa","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DeclModifierDetailSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DeclModifierDetailSyntax\/Hashable-Implementations"]]},"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/DeclModifierDetailSyntax/memoize(with:_:)-5qgfa":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"memoize"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"MemoizationCache","kind":"typeIdentifier"},{"kind":"text","text":"?, "},{"kind":"typeIdentifier","text":"KeyPath","preciseIdentifier":"s:s7KeyPathC"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"T","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"title":"memoize(with:_:)","abstract":[{"type":"text","text":"Memoize the result of the execution of a predicate for the "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":" receiver."}],"role":"symbol","type":"topic","url":"\/documentation\/macrobuilder\/declmodifierdetailsyntax\/memoize(with:_:)-5qgfa","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DeclModifierDetailSyntax\/memoize(with:_:)-5qgfa"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/DeclModifierDetailSyntax/Hashable-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DeclModifierDetailSyntax\/Hashable-Implementations","role":"collectionGroup","type":"topic","kind":"article","abstract":[],"title":"Hashable Implementations","url":"\/documentation\/macrobuilder\/declmodifierdetailsyntax\/hashable-implementations"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/DeclModifierDetailSyntax":{"role":"symbol","navigatorTitle":[{"text":"DeclModifierDetailSyntax","kind":"identifier"}],"abstract":[],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DeclModifierDetailSyntax","url":"\/documentation\/macrobuilder\/declmodifierdetailsyntax","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DeclModifierDetailSyntax","kind":"identifier"}],"type":"topic","kind":"symbol","title":"DeclModifierDetailSyntax"}}}