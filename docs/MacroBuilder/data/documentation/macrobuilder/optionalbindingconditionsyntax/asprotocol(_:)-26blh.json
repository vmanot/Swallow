{"kind":"symbol","sections":[],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"("},{"text":"_","kind":"externalParam"},{"kind":"text","text":": (any "},{"text":"WithCodeBlockSyntax","preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/WithCodeBlockSyntax"},{"text":").Type) -> (any ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P","text":"WithCodeBlockSyntax","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/WithCodeBlockSyntax"},{"kind":"text","text":")?"}],"platforms":["macOS"]}],"kind":"declarations"}],"abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"code":"WithCodeBlockSyntax","type":"codeVoice"},{"text":". Otherwise return ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/macrobuilder\/optionalbindingconditionsyntax\/asprotocol(_:)-26blh"]}],"metadata":{"roleHeading":"Instance Method","title":"asProtocol(_:)","role":"symbol","extendedModule":"SwiftSyntax","modules":[{"name":"MacroBuilder","relatedModules":["SwiftSyntax"]}],"symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"kind":"text","text":"((any "},{"text":"WithCodeBlockSyntax","preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P","kind":"typeIdentifier"},{"text":").Type) -> (any ","kind":"text"},{"text":"WithCodeBlockSyntax","preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P","kind":"typeIdentifier"},{"text":")?","kind":"text"}],"externalID":"s:11SwiftSyntax0B8ProtocolPAAE02asC0yAA013WithCodeBlockB0_pSgAaE_pmF::SYNTHESIZED::s:11SwiftSyntax024OptionalBindingConditionB0V"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/OptionalBindingConditionSyntax\/asProtocol(_:)-26blh"},"schemaVersion":{"patch":0,"minor":3,"major":0},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/OptionalBindingConditionSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/OptionalBindingConditionSyntax\/SyntaxProtocol-Implementations"]]},"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/OptionalBindingConditionSyntax":{"abstract":[],"type":"topic","title":"OptionalBindingConditionSyntax","url":"\/documentation\/macrobuilder\/optionalbindingconditionsyntax","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"OptionalBindingConditionSyntax","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/OptionalBindingConditionSyntax","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OptionalBindingConditionSyntax","kind":"identifier"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/WithCodeBlockSyntax":{"type":"topic","title":"WithCodeBlockSyntax","url":"\/documentation\/macrobuilder\/withcodeblocksyntax","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"WithCodeBlockSyntax"}],"navigatorTitle":[{"kind":"identifier","text":"WithCodeBlockSyntax"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/WithCodeBlockSyntax","abstract":[]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/OptionalBindingConditionSyntax/asProtocol(_:)-26blh":{"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/OptionalBindingConditionSyntax\/asProtocol(_:)-26blh","title":"asProtocol(_:)","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithCodeBlockSyntax"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"((any "},{"kind":"typeIdentifier","text":"WithCodeBlockSyntax","preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P"},{"kind":"text","text":").Type) -> (any "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P","text":"WithCodeBlockSyntax"},{"kind":"text","text":")?"}],"url":"\/documentation\/macrobuilder\/optionalbindingconditionsyntax\/asprotocol(_:)-26blh"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/OptionalBindingConditionSyntax/SyntaxProtocol-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/OptionalBindingConditionSyntax\/SyntaxProtocol-Implementations","url":"\/documentation\/macrobuilder\/optionalbindingconditionsyntax\/syntaxprotocol-implementations","type":"topic","abstract":[],"role":"collectionGroup","title":"SyntaxProtocol Implementations","kind":"article"}}}