{"abstract":[{"type":"text","text":"Memoize the result of the execution of a predicate for the "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":" receiver."}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/CodingPathElement","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/CodingPathElement\/Hashable-Implementations"]]},"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"memoize","kind":"identifier"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"with","kind":"externalParam"},{"kind":"text","text":": "},{"text":"MemoizationCache","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"kind":"typeIdentifier","text":"KeyPath","preciseIdentifier":"s:s7KeyPathC"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":">) -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"title":"memoize(with:_:)","extendedModule":"Swift","modules":[{"name":"MacroBuilder","relatedModules":["Swift"]}],"role":"symbol","externalID":"s:SH7SwallowE7memoize4with_qd__AA6_CacheCyAA011MemoizationD3KeyVypGSg_s0F4PathCyxqd__GtlF::SYNTHESIZED::s:7Swallow17CodingPathElementO","symbolKind":"method","roleHeading":"Instance Method"},"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/CodingPathElement\/memoize(with:_:)-8ect5"},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"memoize","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"with"},{"text":" ","kind":"text"},{"text":"cache","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"MemoizationCache"},{"text":"? = MemoizationCache.shared, ","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"keyPath","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"KeyPath","preciseIdentifier":"s:s7KeyPathC","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"T"}],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"cache","content":[{"type":"paragraph","inlineContent":[{"text":"The shared cache to use; ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":" disables caching and simply returns the result of "},{"type":"codeVoice","code":"predicate"},{"type":"text","text":" directly"}]}]}]},{"content":[{"anchor":"return-value","type":"heading","text":"Return Value","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"The result from the "},{"code":"predicate","type":"codeVoice"},{"type":"text","text":", either a previously cached value, or the result of executing the "},{"code":"predicate","type":"codeVoice"}]}],"kind":"content"},{"kind":"content","content":[{"level":2,"type":"heading","text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The source subject (the receiver) and the result object (the return value) should be value types, and the "},{"code":"predicate","type":"codeVoice"},{"text":" must be a ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"pure","type":"text"}]},{"type":"text","text":" function that captures "},{"type":"emphasis","inlineContent":[{"type":"text","text":"no state"}]},{"text":", in that:","type":"text"}]},{"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Its return value is the same for the same arguments (no variation with local static variables, non-local variables, mutable reference arguments or input streams from I\/O devices)."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Its evaluation has no side effects (no mutation of local static variables, non-local variables, mutable reference arguments or I\/O streams)."}]}]}]},{"style":"note","name":"Note","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The calling functionâ€™s source file and line are used as the cache key, so care must be taken to avoid having multiple calls to "},{"type":"codeVoice","code":"memoize"},{"text":" occur from a single line of source code.","type":"text"}]}]},{"name":"Throws","style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Re-Throws and errors from "},{"type":"codeVoice","code":"predicate"}]}],"type":"aside"},{"name":"Complexity","style":"note","type":"aside","content":[{"inlineContent":[{"type":"text","text":"Around O(1) for a successful cache hit, otherwise the complexity of the keyPath execution"}],"type":"paragraph"}]}]}],"sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/macrobuilder\/codingpathelement\/memoize(with:_:)-8ect5"]}],"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/CodingPathElement/memoize(with:_:)-8ect5":{"kind":"symbol","role":"symbol","type":"topic","abstract":[{"type":"text","text":"Memoize the result of the execution of a predicate for the "},{"type":"codeVoice","code":"Hashable"},{"text":" receiver.","type":"text"}],"url":"\/documentation\/macrobuilder\/codingpathelement\/memoize(with:_:)-8ect5","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"memoize"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"with"},{"text":": ","kind":"text"},{"text":"MemoizationCache","kind":"typeIdentifier"},{"kind":"text","text":"?, "},{"kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC","text":"KeyPath"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/CodingPathElement\/memoize(with:_:)-8ect5","title":"memoize(with:_:)"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/CodingPathElement/Hashable-Implementations":{"role":"collectionGroup","abstract":[],"title":"Hashable Implementations","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/CodingPathElement\/Hashable-Implementations","type":"topic","url":"\/documentation\/macrobuilder\/codingpathelement\/hashable-implementations","kind":"article"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/CodingPathElement":{"kind":"symbol","role":"symbol","type":"topic","abstract":[],"url":"\/documentation\/macrobuilder\/codingpathelement","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CodingPathElement","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/CodingPathElement","title":"CodingPathElement","navigatorTitle":[{"text":"CodingPathElement","kind":"identifier"}]}}}