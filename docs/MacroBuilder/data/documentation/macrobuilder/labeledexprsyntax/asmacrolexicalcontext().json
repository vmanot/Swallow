{"abstract":[{"type":"text","text":"If this syntax node acts as a lexical context from the perspective"},{"text":" ","type":"text"},{"text":"of a macro, return a new syntax node based on this node that strips all","type":"text"},{"text":" ","type":"text"},{"text":"information that isn’t supposed to be exposed as a lexical context, such","type":"text"},{"type":"text","text":" "},{"type":"text","text":"as function bodies or the members of types\/extensions."}],"metadata":{"externalID":"s:11SwiftSyntax0B8ProtocolP0aB6MacrosE21asMacroLexicalContextAA0B0VSgyF::SYNTHESIZED::s:11SwiftSyntax011LabeledExprB0V","title":"asMacroLexicalContext()","extendedModule":"SwiftSyntax","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asMacroLexicalContext","kind":"identifier"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier","text":"Syntax"},{"kind":"text","text":"?"}],"symbolKind":"method","role":"symbol","modules":[{"name":"MacroBuilder","relatedModules":["SwiftSyntax"]}],"roleHeading":"Instance Method"},"sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprSyntax\/SyntaxProtocol-Implementations"]]},"identifier":{"url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprSyntax\/asMacroLexicalContext()","interfaceLanguage":"swift"},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"asMacroLexicalContext","kind":"identifier"},{"kind":"text","text":"() -> "},{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax","kind":"typeIdentifier"},{"text":"?","kind":"text"}]}]},{"kind":"content","content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Returns "},{"code":"nil","type":"codeVoice"},{"type":"text","text":" for any syntax node that isn’t a lexical context."}]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/macrobuilder\/labeledexprsyntax\/asmacrolexicalcontext()"]}],"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/LabeledExprSyntax/asMacroLexicalContext()":{"type":"topic","abstract":[{"type":"text","text":"If this syntax node acts as a lexical context from the perspective"},{"type":"text","text":" "},{"type":"text","text":"of a macro, return a new syntax node based on this node that strips all"},{"type":"text","text":" "},{"type":"text","text":"information that isn’t supposed to be exposed as a lexical context, such"},{"text":" ","type":"text"},{"text":"as function bodies or the members of types\/extensions.","type":"text"}],"url":"\/documentation\/macrobuilder\/labeledexprsyntax\/asmacrolexicalcontext()","role":"symbol","kind":"symbol","title":"asMacroLexicalContext()","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprSyntax\/asMacroLexicalContext()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"asMacroLexicalContext","kind":"identifier"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax","kind":"typeIdentifier"},{"text":"?","kind":"text"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/Syntax":{"abstract":[{"type":"text","text":"A Syntax node represents a tree of nodes with tokens at the leaves."},{"text":" ","type":"text"},{"type":"text","text":"Each node has accessors for its known children, and allows efficient"},{"text":" ","type":"text"},{"text":"iteration over the children through its ","type":"text"},{"type":"codeVoice","code":"children"},{"text":" property.","type":"text"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Syntax"}],"url":"\/documentation\/macrobuilder\/syntax","title":"Syntax","type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Syntax","kind":"identifier"}],"kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/LabeledExprSyntax/SyntaxProtocol-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprSyntax\/SyntaxProtocol-Implementations","type":"topic","url":"\/documentation\/macrobuilder\/labeledexprsyntax\/syntaxprotocol-implementations","abstract":[],"role":"collectionGroup","title":"SyntaxProtocol Implementations","kind":"article"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/LabeledExprSyntax":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprSyntax","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LabeledExprSyntax","kind":"identifier"}],"navigatorTitle":[{"text":"LabeledExprSyntax","kind":"identifier"}],"type":"topic","title":"LabeledExprSyntax","kind":"symbol","url":"\/documentation\/macrobuilder\/labeledexprsyntax","abstract":[{"text":"An expression that is prefixed by a label.","type":"text"}]}}}