{"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/macrobuilder\/differentiableattributeargumentssyntax\/init(leadingtrivia:_:kindspecifier:_:kindspecifiercomma:_:arguments:_:argumentscomma:_:genericwhereclause:_:trailingtrivia:)"]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DifferentiableAttributeArgumentsSyntax"]]},"metadata":{"fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"text":"leadingTrivia","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax6TriviaV","text":"Trivia","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax015UnexpectedNodesB0V","kind":"typeIdentifier","text":"UnexpectedNodesSyntax"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"kindSpecifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TokenSyntax","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"kind":"text","text":"?, "},{"preciseIdentifier":"s:11SwiftSyntax015UnexpectedNodesB0V","text":"UnexpectedNodesSyntax","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"kindSpecifierComma"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"TokenSyntax","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"text":"?, ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax015UnexpectedNodesB0V","text":"UnexpectedNodesSyntax"},{"text":"?, ","kind":"text"},{"text":"arguments","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"DifferentiabilityWithRespectToArgumentSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax038DifferentiabilityWithRespectToArgumentB0V"},{"text":"?, ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax015UnexpectedNodesB0V","text":"UnexpectedNodesSyntax","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"argumentsComma","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax","kind":"typeIdentifier"},{"kind":"text","text":"?, "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax015UnexpectedNodesB0V","text":"UnexpectedNodesSyntax"},{"kind":"text","text":"?, "},{"text":"genericWhereClause","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax018GenericWhereClauseB0V","text":"GenericWhereClauseSyntax"},{"kind":"text","text":"?, "},{"preciseIdentifier":"s:11SwiftSyntax015UnexpectedNodesB0V","kind":"typeIdentifier","text":"UnexpectedNodesSyntax"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"trailingTrivia"},{"kind":"text","text":": "},{"text":"Trivia","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax6TriviaV"},{"kind":"text","text":"?)"}],"roleHeading":"Initializer","role":"symbol","symbolKind":"init","modules":[{"name":"MacroBuilder"}],"title":"init(leadingTrivia:_:kindSpecifier:_:kindSpecifierComma:_:arguments:_:argumentsComma:_:genericWhereClause:_:trailingTrivia:)","externalID":"s:11SwiftSyntax032DifferentiableAttributeArgumentsB0V13leadingTrivia_13kindSpecifier_0hI5Comma_9arguments_0kJ0_18genericWhereClause_08trailingG0AcA0G0VSg_AA015UnexpectedNodesB0VSgAA05TokenB0VSgApspA038DifferentiabilityWithRespectToArgumentB0VSgApspA07GenericmnB0VSgApMtcfc"},"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DifferentiableAttributeArgumentsSyntax\/init(leadingTrivia:_:kindSpecifier:_:kindSpecifierComma:_:arguments:_:argumentsComma:_:genericWhereClause:_:trailingTrivia:)"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"init","kind":"keyword"},{"kind":"text","text":"("},{"text":"leadingTrivia","kind":"externalParam"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Trivia","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax6TriviaV","text":"Trivia"},{"kind":"text","text":"? = nil, "},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"unexpectedBeforeKindSpecifier"},{"kind":"text","text":": "},{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/UnexpectedNodesSyntax","text":"UnexpectedNodesSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax015UnexpectedNodesB0V"},{"text":"? = nil, ","kind":"text"},{"kind":"externalParam","text":"kindSpecifier"},{"kind":"text","text":": "},{"text":"TokenSyntax","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TokenSyntax","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"text":"? = nil, ","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"unexpectedBetweenKindSpecifierAndKindSpecifierComma"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax015UnexpectedNodesB0V","text":"UnexpectedNodesSyntax","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/UnexpectedNodesSyntax"},{"text":"? = nil, ","kind":"text"},{"text":"kindSpecifierComma","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TokenSyntax","text":"TokenSyntax","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"kind":"text","text":"? = nil, "},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"unexpectedBetweenKindSpecifierCommaAndArguments"},{"text":": ","kind":"text"},{"text":"UnexpectedNodesSyntax","preciseIdentifier":"s:11SwiftSyntax015UnexpectedNodesB0V","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/UnexpectedNodesSyntax"},{"kind":"text","text":"? = nil, "},{"text":"arguments","kind":"externalParam"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DifferentiabilityWithRespectToArgumentSyntax","preciseIdentifier":"s:11SwiftSyntax038DifferentiabilityWithRespectToArgumentB0V","kind":"typeIdentifier","text":"DifferentiabilityWithRespectToArgumentSyntax"},{"text":"? = nil, ","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"unexpectedBetweenArgumentsAndArgumentsComma"},{"kind":"text","text":": "},{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/UnexpectedNodesSyntax","text":"UnexpectedNodesSyntax","preciseIdentifier":"s:11SwiftSyntax015UnexpectedNodesB0V","kind":"typeIdentifier"},{"text":"? = nil, ","kind":"text"},{"text":"argumentsComma","kind":"externalParam"},{"kind":"text","text":": "},{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TokenSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax"},{"kind":"text","text":"? = nil, "},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"text":"unexpectedBetweenArgumentsCommaAndGenericWhereClause","kind":"internalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax015UnexpectedNodesB0V","text":"UnexpectedNodesSyntax","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/UnexpectedNodesSyntax"},{"text":"? = nil, ","kind":"text"},{"text":"genericWhereClause","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax018GenericWhereClauseB0V","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/GenericWhereClauseSyntax","text":"GenericWhereClauseSyntax","kind":"typeIdentifier"},{"text":"? = nil, ","kind":"text"},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"unexpectedAfterGenericWhereClause"},{"text":": ","kind":"text"},{"text":"UnexpectedNodesSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax015UnexpectedNodesB0V","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/UnexpectedNodesSyntax"},{"kind":"text","text":"? = nil, "},{"text":"trailingTrivia","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Trivia","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Trivia","preciseIdentifier":"s:11SwiftSyntax6TriviaV"},{"text":"? = nil)","kind":"text"}],"languages":["swift"]}]},{"parameters":[{"content":[{"inlineContent":[{"text":"Trivia to be prepended to the leading trivia of the nodeâ€™s first token. If the node is empty, there is no token to attach the trivia to and the parameter is ignored.","type":"text"}],"type":"paragraph"}],"name":"leadingTrivia"},{"content":[{"inlineContent":[{"text":"The differentiability kind, if it exists.","type":"text"}],"type":"paragraph"}],"name":"kindSpecifier"},{"name":"kindSpecifierComma","content":[{"type":"paragraph","inlineContent":[{"text":"The comma following the differentiability kind, if it exists.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"The differentiability arguments, if any exists.","type":"text"}]}],"name":"arguments"},{"content":[{"inlineContent":[{"type":"text","text":"The comma following the differentiability arguments clause, if it exists."}],"type":"paragraph"}],"name":"argumentsComma"},{"name":"genericWhereClause","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A "},{"code":"where","type":"codeVoice"},{"type":"text","text":" clause that places additional constraints on generic parameters like "},{"type":"codeVoice","code":"where T: Differentiable"},{"type":"text","text":"."}]}]},{"name":"trailingTrivia","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Trivia to be appended to the trailing trivia of the nodeâ€™s last token. If the node is empty, there is no token to attach the trivia to and the parameter is ignored."}]}]}],"kind":"parameters"}],"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/TokenSyntax":{"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TokenSyntax","kind":"identifier"}],"url":"\/documentation\/macrobuilder\/tokensyntax","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TokenSyntax"}],"abstract":[{"text":"A Syntax node representing a single token.","type":"text"}],"title":"TokenSyntax","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TokenSyntax","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/DifferentiableAttributeArgumentsSyntax/init(leadingTrivia:_:kindSpecifier:_:kindSpecifierComma:_:arguments:_:argumentsComma:_:genericWhereClause:_:trailingTrivia:)":{"fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"leadingTrivia"},{"text":": ","kind":"text"},{"text":"Trivia","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax6TriviaV"},{"kind":"text","text":"?, "},{"text":"UnexpectedNodesSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax015UnexpectedNodesB0V"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"kindSpecifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax015UnexpectedNodesB0V","text":"UnexpectedNodesSyntax"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"kindSpecifierComma"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax"},{"kind":"text","text":"?, "},{"preciseIdentifier":"s:11SwiftSyntax015UnexpectedNodesB0V","text":"UnexpectedNodesSyntax","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"arguments"},{"text":": ","kind":"text"},{"text":"DifferentiabilityWithRespectToArgumentSyntax","preciseIdentifier":"s:11SwiftSyntax038DifferentiabilityWithRespectToArgumentB0V","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax015UnexpectedNodesB0V","text":"UnexpectedNodesSyntax"},{"kind":"text","text":"?, "},{"text":"argumentsComma","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"TokenSyntax","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"kind":"typeIdentifier","text":"UnexpectedNodesSyntax","preciseIdentifier":"s:11SwiftSyntax015UnexpectedNodesB0V"},{"text":"?, ","kind":"text"},{"text":"genericWhereClause","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"GenericWhereClauseSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax018GenericWhereClauseB0V"},{"text":"?, ","kind":"text"},{"kind":"typeIdentifier","text":"UnexpectedNodesSyntax","preciseIdentifier":"s:11SwiftSyntax015UnexpectedNodesB0V"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"trailingTrivia"},{"kind":"text","text":": "},{"text":"Trivia","preciseIdentifier":"s:11SwiftSyntax6TriviaV","kind":"typeIdentifier"},{"kind":"text","text":"?)"}],"role":"symbol","abstract":[],"type":"topic","kind":"symbol","url":"\/documentation\/macrobuilder\/differentiableattributeargumentssyntax\/init(leadingtrivia:_:kindspecifier:_:kindspecifiercomma:_:arguments:_:argumentscomma:_:genericwhereclause:_:trailingtrivia:)","title":"init(leadingTrivia:_:kindSpecifier:_:kindSpecifierComma:_:arguments:_:argumentsComma:_:genericWhereClause:_:trailingTrivia:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DifferentiableAttributeArgumentsSyntax\/init(leadingTrivia:_:kindSpecifier:_:kindSpecifierComma:_:arguments:_:argumentsComma:_:genericWhereClause:_:trailingTrivia:)"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/GenericWhereClauseSyntax":{"type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"GenericWhereClauseSyntax"}],"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/GenericWhereClauseSyntax","title":"GenericWhereClauseSyntax","abstract":[{"text":"A ","type":"text"},{"code":"where","type":"codeVoice"},{"type":"text","text":" clause that places additional constraints on generic parameters like "},{"code":"where Element: Hashable","type":"codeVoice"},{"text":".","type":"text"}],"url":"\/documentation\/macrobuilder\/genericwhereclausesyntax","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"GenericWhereClauseSyntax"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/DifferentiableAttributeArgumentsSyntax":{"type":"topic","role":"symbol","abstract":[{"text":"The arguments for the ","type":"text"},{"type":"codeVoice","code":"@differentiable"},{"text":" attribute: an optional differentiability kind, an optional differentiability parameter clause, and an optional â€˜whereâ€™ clause.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DifferentiableAttributeArgumentsSyntax","kind":"symbol","title":"DifferentiableAttributeArgumentsSyntax","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DifferentiableAttributeArgumentsSyntax"}],"navigatorTitle":[{"kind":"identifier","text":"DifferentiableAttributeArgumentsSyntax"}],"url":"\/documentation\/macrobuilder\/differentiableattributeargumentssyntax"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/DifferentiabilityWithRespectToArgumentSyntax":{"type":"topic","url":"\/documentation\/macrobuilder\/differentiabilitywithrespecttoargumentsyntax","abstract":[{"text":"A clause containing differentiability parameters.","type":"text"}],"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DifferentiabilityWithRespectToArgumentSyntax","kind":"symbol","title":"DifferentiabilityWithRespectToArgumentSyntax","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"DifferentiabilityWithRespectToArgumentSyntax"}],"navigatorTitle":[{"kind":"identifier","text":"DifferentiabilityWithRespectToArgumentSyntax"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/UnexpectedNodesSyntax":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"UnexpectedNodesSyntax","kind":"identifier"}],"url":"\/documentation\/macrobuilder\/unexpectednodessyntax","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"UnexpectedNodesSyntax"}],"abstract":[{"text":"A collection of syntax nodes that occurred in the source code but could not be used to form a valid syntax tree.","type":"text"}],"title":"UnexpectedNodesSyntax","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/UnexpectedNodesSyntax","kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/Trivia":{"type":"topic","url":"\/documentation\/macrobuilder\/trivia","role":"symbol","abstract":[{"type":"text","text":"Trivia represent pieces of the source code that are not relevant to represent"},{"type":"text","text":" "},{"text":"its semantic structure.","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"Trivia","kind":"identifier"}],"title":"Trivia","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Trivia","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Trivia","kind":"identifier"}]}}}