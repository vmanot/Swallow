{"schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DifferentiableAttributeArgumentsSyntax\/as(_:)-5zifi"},"deprecationSummary":[{"inlineContent":[{"type":"text","text":"Use `Syntax.init` for upcasting."}],"type":"paragraph"}],"kind":"symbol","metadata":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"`as`","kind":"identifier"},{"kind":"text","text":"("},{"text":"Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"text":".Type) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"text":"?","kind":"text"}],"roleHeading":"Instance Method","role":"symbol","externalID":"s:11SwiftSyntax0B8ProtocolPAAE2asyAA0B0VSgAFmF::SYNTHESIZED::s:11SwiftSyntax032DifferentiableAttributeArgumentsB0V","title":"as(_:)","platforms":[],"extendedModule":"SwiftSyntax","symbolKind":"method","modules":[{"relatedModules":["SwiftSyntax"],"name":"MacroBuilder"}]},"variants":[{"paths":["\/documentation\/macrobuilder\/differentiableattributeargumentssyntax\/as(_:)-5zifi"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"Attempts to upcast the current syntax node to "},{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax","isActive":true,"type":"reference"},{"text":" node.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DifferentiableAttributeArgumentsSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DifferentiableAttributeArgumentsSyntax\/SyntaxProtocol-Implementations"]]},"sections":[],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"`as`"},{"kind":"text","text":"("},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"syntaxType"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax","text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Syntax","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"kind":"text","text":"?"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"content","content":[{"text":"Return Value","type":"heading","anchor":"return-value","level":2},{"inlineContent":[{"type":"text","text":"The "},{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax","isActive":true,"type":"reference"},{"text":" node created from the current syntax node, as the node can always be upcast to ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax"},{"text":" node.","type":"text"}],"type":"paragraph"}]},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","level":2,"type":"heading"},{"type":"aside","style":"note","content":[{"inlineContent":[{"text":"This method overloads the general ","type":"text"},{"type":"codeVoice","code":"as"},{"type":"text","text":" method and is marked deprecated to produce a warning"},{"text":" ","type":"text"},{"type":"text","text":"informing the user the upcast should be performed using the base node’s initializer."}],"type":"paragraph"}],"name":"Note"}]}],"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/DifferentiableAttributeArgumentsSyntax":{"type":"topic","role":"symbol","abstract":[{"text":"The arguments for the ","type":"text"},{"type":"codeVoice","code":"@differentiable"},{"text":" attribute: an optional differentiability kind, an optional differentiability parameter clause, and an optional ‘where’ clause.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DifferentiableAttributeArgumentsSyntax","kind":"symbol","title":"DifferentiableAttributeArgumentsSyntax","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DifferentiableAttributeArgumentsSyntax"}],"navigatorTitle":[{"kind":"identifier","text":"DifferentiableAttributeArgumentsSyntax"}],"url":"\/documentation\/macrobuilder\/differentiableattributeargumentssyntax"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/DifferentiableAttributeArgumentsSyntax/SyntaxProtocol-Implementations":{"abstract":[],"role":"collectionGroup","type":"topic","title":"SyntaxProtocol Implementations","kind":"article","url":"\/documentation\/macrobuilder\/differentiableattributeargumentssyntax\/syntaxprotocol-implementations","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DifferentiableAttributeArgumentsSyntax\/SyntaxProtocol-Implementations"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/DifferentiableAttributeArgumentsSyntax/as(_:)-5zifi":{"kind":"symbol","title":"as(_:)","deprecated":true,"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DifferentiableAttributeArgumentsSyntax\/as(_:)-5zifi","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"`as`","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax"},{"text":".Type) -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"abstract":[{"type":"text","text":"Attempts to upcast the current syntax node to "},{"type":"reference","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax","isActive":true},{"type":"text","text":" node."}],"role":"symbol","url":"\/documentation\/macrobuilder\/differentiableattributeargumentssyntax\/as(_:)-5zifi","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/Syntax":{"abstract":[{"type":"text","text":"A Syntax node represents a tree of nodes with tokens at the leaves."},{"text":" ","type":"text"},{"type":"text","text":"Each node has accessors for its known children, and allows efficient"},{"text":" ","type":"text"},{"text":"iteration over the children through its ","type":"text"},{"type":"codeVoice","code":"children"},{"text":" property.","type":"text"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Syntax"}],"url":"\/documentation\/macrobuilder\/syntax","title":"Syntax","type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Syntax","kind":"identifier"}],"kind":"symbol"}}}