{"deprecationSummary":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This cast will always succeed"}]}],"sections":[],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"`is`","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"syntaxType","kind":"internalParam"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"level":2,"type":"heading","anchor":"return-value","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"code":"true","type":"codeVoice"},{"type":"text","text":" since the node is already of its own type."}]}]},{"content":[{"level":2,"anchor":"discussion","text":"Discussion","type":"heading"},{"name":"Note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This method overloads the general "},{"type":"codeVoice","code":"is"},{"type":"text","text":" method and is marked as deprecated to produce a warning,"},{"type":"text","text":" "},{"text":"informing the user that the cast will always succeed.","type":"text"}]}],"style":"note","type":"aside"}],"kind":"content"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DifferentiableAttributeArgumentsSyntax\/is(_:)-5p6x8"},"abstract":[{"text":"Checks if the current syntax node can be cast to its own type.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DifferentiableAttributeArgumentsSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DifferentiableAttributeArgumentsSyntax\/SyntaxProtocol-Implementations"]]},"kind":"symbol","schemaVersion":{"minor":3,"major":0,"patch":0},"metadata":{"role":"symbol","title":"is(_:)","platforms":[],"externalID":"s:11SwiftSyntax0B8ProtocolPAAE2isySbxmF::SYNTHESIZED::s:11SwiftSyntax032DifferentiableAttributeArgumentsB0V","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"`is`"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":".Type) -> "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"modules":[{"name":"MacroBuilder","relatedModules":["SwiftSyntax"]}],"symbolKind":"method","roleHeading":"Instance Method","extendedModule":"SwiftSyntax"},"variants":[{"paths":["\/documentation\/macrobuilder\/differentiableattributeargumentssyntax\/is(_:)-5p6x8"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/DifferentiableAttributeArgumentsSyntax/is(_:)-5p6x8":{"kind":"symbol","title":"is(_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"`is`"},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Checks if the current syntax node can be cast to its own type."}],"url":"\/documentation\/macrobuilder\/differentiableattributeargumentssyntax\/is(_:)-5p6x8","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DifferentiableAttributeArgumentsSyntax\/is(_:)-5p6x8","type":"topic","deprecated":true},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/DifferentiableAttributeArgumentsSyntax/SyntaxProtocol-Implementations":{"abstract":[],"role":"collectionGroup","type":"topic","title":"SyntaxProtocol Implementations","kind":"article","url":"\/documentation\/macrobuilder\/differentiableattributeargumentssyntax\/syntaxprotocol-implementations","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DifferentiableAttributeArgumentsSyntax\/SyntaxProtocol-Implementations"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/DifferentiableAttributeArgumentsSyntax":{"type":"topic","role":"symbol","abstract":[{"text":"The arguments for the ","type":"text"},{"type":"codeVoice","code":"@differentiable"},{"text":" attribute: an optional differentiability kind, an optional differentiability parameter clause, and an optional ‘where’ clause.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DifferentiableAttributeArgumentsSyntax","kind":"symbol","title":"DifferentiableAttributeArgumentsSyntax","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DifferentiableAttributeArgumentsSyntax"}],"navigatorTitle":[{"kind":"identifier","text":"DifferentiableAttributeArgumentsSyntax"}],"url":"\/documentation\/macrobuilder\/differentiableattributeargumentssyntax"}}}