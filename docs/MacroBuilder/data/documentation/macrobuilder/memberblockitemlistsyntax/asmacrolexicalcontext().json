{"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/MemberBlockItemListSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/MemberBlockItemListSyntax\/SyntaxProtocol-Implementations"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"asMacroLexicalContext","kind":"identifier"},{"text":"() -> ","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax","text":"Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"text":"?","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}]},{"content":[{"text":"Discussion","type":"heading","anchor":"discussion","level":2},{"type":"paragraph","inlineContent":[{"text":"Returns ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":" for any syntax node that isn’t a lexical context."}]}],"kind":"content"}],"sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"role":"symbol","symbolKind":"method","extendedModule":"SwiftSyntax","roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asMacroLexicalContext","kind":"identifier"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"modules":[{"relatedModules":["SwiftSyntax"],"name":"MacroBuilder"}],"title":"asMacroLexicalContext()","externalID":"s:11SwiftSyntax0B8ProtocolP0aB6MacrosE21asMacroLexicalContextAA0B0VSgyF::SYNTHESIZED::s:11SwiftSyntax019MemberBlockItemListB0V"},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/macrobuilder\/memberblockitemlistsyntax\/asmacrolexicalcontext()"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/MemberBlockItemListSyntax\/asMacroLexicalContext()"},"abstract":[{"text":"If this syntax node acts as a lexical context from the perspective","type":"text"},{"text":" ","type":"text"},{"text":"of a macro, return a new syntax node based on this node that strips all","type":"text"},{"type":"text","text":" "},{"text":"information that isn’t supposed to be exposed as a lexical context, such","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"as function bodies or the members of types\/extensions."}],"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/MemberBlockItemListSyntax":{"type":"topic","navigatorTitle":[{"kind":"identifier","text":"MemberBlockItemListSyntax"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"MemberBlockItemListSyntax","kind":"identifier"}],"kind":"symbol","abstract":[],"role":"symbol","title":"MemberBlockItemListSyntax","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/MemberBlockItemListSyntax","url":"\/documentation\/macrobuilder\/memberblockitemlistsyntax"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/MemberBlockItemListSyntax/SyntaxProtocol-Implementations":{"kind":"article","role":"collectionGroup","title":"SyntaxProtocol Implementations","type":"topic","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/MemberBlockItemListSyntax\/SyntaxProtocol-Implementations","url":"\/documentation\/macrobuilder\/memberblockitemlistsyntax\/syntaxprotocol-implementations"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/Syntax":{"abstract":[{"type":"text","text":"A Syntax node represents a tree of nodes with tokens at the leaves."},{"text":" ","type":"text"},{"type":"text","text":"Each node has accessors for its known children, and allows efficient"},{"text":" ","type":"text"},{"text":"iteration over the children through its ","type":"text"},{"type":"codeVoice","code":"children"},{"text":" property.","type":"text"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Syntax"}],"url":"\/documentation\/macrobuilder\/syntax","title":"Syntax","type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Syntax","kind":"identifier"}],"kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/MemberBlockItemListSyntax/asMacroLexicalContext()":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/MemberBlockItemListSyntax\/asMacroLexicalContext()","abstract":[{"type":"text","text":"If this syntax node acts as a lexical context from the perspective"},{"type":"text","text":" "},{"text":"of a macro, return a new syntax node based on this node that strips all","type":"text"},{"type":"text","text":" "},{"type":"text","text":"information that isn’t supposed to be exposed as a lexical context, such"},{"text":" ","type":"text"},{"type":"text","text":"as function bodies or the members of types\/extensions."}],"title":"asMacroLexicalContext()","kind":"symbol","type":"topic","url":"\/documentation\/macrobuilder\/memberblockitemlistsyntax\/asmacrolexicalcontext()","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"asMacroLexicalContext"},{"text":"() -> ","kind":"text"},{"text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier"},{"kind":"text","text":"?"}]}}}