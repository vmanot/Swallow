{"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"externalID":"s:11SwiftSyntax0B8ProtocolPAAE02asC0yAA013WithCodeBlockB0_pSgAaE_pmF::SYNTHESIZED::s:11SwiftSyntax015PackElementExprB0V","roleHeading":"Instance Method","extendedModule":"SwiftSyntax","modules":[{"relatedModules":["SwiftSyntax"],"name":"MacroBuilder"}],"title":"asProtocol(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"text":"((any ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P","text":"WithCodeBlockSyntax","kind":"typeIdentifier"},{"kind":"text","text":").Type) -> (any "},{"kind":"typeIdentifier","text":"WithCodeBlockSyntax","preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P"},{"kind":"text","text":")?"}],"role":"symbol","symbolKind":"method"},"sections":[],"kind":"symbol","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithCodeBlockSyntax"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":": (any "},{"preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P","text":"WithCodeBlockSyntax","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/WithCodeBlockSyntax"},{"text":").Type) -> (any ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P","text":"WithCodeBlockSyntax","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/WithCodeBlockSyntax","kind":"typeIdentifier"},{"text":")?","kind":"text"}]}],"kind":"declarations"}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackElementExprSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackElementExprSyntax\/SyntaxProtocol-Implementations"]]},"variants":[{"paths":["\/documentation\/macrobuilder\/packelementexprsyntax\/asprotocol(_:)-5aboz"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackElementExprSyntax\/asProtocol(_:)-5aboz"},"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/PackElementExprSyntax/SyntaxProtocol-Implementations":{"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackElementExprSyntax\/SyntaxProtocol-Implementations","abstract":[],"url":"\/documentation\/macrobuilder\/packelementexprsyntax\/syntaxprotocol-implementations","kind":"article","role":"collectionGroup","title":"SyntaxProtocol Implementations"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/PackElementExprSyntax":{"title":"PackElementExprSyntax","type":"topic","kind":"symbol","url":"\/documentation\/macrobuilder\/packelementexprsyntax","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackElementExprSyntax","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"PackElementExprSyntax","kind":"identifier"}],"navigatorTitle":[{"text":"PackElementExprSyntax","kind":"identifier"}],"role":"symbol","abstract":[{"text":"A pack element expression spelled with ","type":"text"},{"code":"each","type":"codeVoice"},{"type":"text","text":"."}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/PackElementExprSyntax/asProtocol(_:)-5aboz":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"asProtocol"},{"kind":"text","text":"((any "},{"kind":"typeIdentifier","text":"WithCodeBlockSyntax","preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P"},{"text":").Type) -> (any ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P","text":"WithCodeBlockSyntax"},{"text":")?","kind":"text"}],"kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithCodeBlockSyntax"},{"text":". Otherwise return ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"type":"topic","title":"asProtocol(_:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PackElementExprSyntax\/asProtocol(_:)-5aboz","url":"\/documentation\/macrobuilder\/packelementexprsyntax\/asprotocol(_:)-5aboz"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/WithCodeBlockSyntax":{"type":"topic","title":"WithCodeBlockSyntax","url":"\/documentation\/macrobuilder\/withcodeblocksyntax","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"WithCodeBlockSyntax"}],"navigatorTitle":[{"kind":"identifier","text":"WithCodeBlockSyntax"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/WithCodeBlockSyntax","abstract":[]}}}