{"sections":[],"variants":[{"paths":["\/documentation\/macrobuilder\/inoutexprsyntax\/unexpectedbetweenampersandandexpression"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"unexpectedBetweenAmpersandAndExpression"},{"kind":"text","text":": "},{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/UnexpectedNodesSyntax","preciseIdentifier":"s:11SwiftSyntax015UnexpectedNodesB0V","kind":"typeIdentifier","text":"UnexpectedNodesSyntax"},{"text":"? { ","kind":"text"},{"kind":"keyword","text":"get"},{"kind":"text","text":" "},{"text":"set","kind":"keyword"},{"text":" }","kind":"text"}]}],"kind":"declarations"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/InOutExprSyntax\/unexpectedBetweenAmpersandAndExpression","interfaceLanguage":"swift"},"kind":"symbol","metadata":{"role":"symbol","modules":[{"name":"MacroBuilder"}],"externalID":"s:11SwiftSyntax09InOutExprB0V39unexpectedBetweenAmpersandAndExpressionAA015UnexpectedNodesB0VSgvp","symbolKind":"property","roleHeading":"Instance Property","title":"unexpectedBetweenAmpersandAndExpression","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unexpectedBetweenAmpersandAndExpression","kind":"identifier"},{"text":": ","kind":"text"},{"text":"UnexpectedNodesSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax015UnexpectedNodesB0V"},{"text":"?","kind":"text"}]},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/InOutExprSyntax"]]},"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/InOutExprSyntax/unexpectedBetweenAmpersandAndExpression":{"title":"unexpectedBetweenAmpersandAndExpression","url":"\/documentation\/macrobuilder\/inoutexprsyntax\/unexpectedbetweenampersandandexpression","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/InOutExprSyntax\/unexpectedBetweenAmpersandAndExpression","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unexpectedBetweenAmpersandAndExpression","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax015UnexpectedNodesB0V","text":"UnexpectedNodesSyntax","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"abstract":[],"type":"topic","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/UnexpectedNodesSyntax":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"UnexpectedNodesSyntax","kind":"identifier"}],"url":"\/documentation\/macrobuilder\/unexpectednodessyntax","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"UnexpectedNodesSyntax"}],"abstract":[{"text":"A collection of syntax nodes that occurred in the source code but could not be used to form a valid syntax tree.","type":"text"}],"title":"UnexpectedNodesSyntax","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/UnexpectedNodesSyntax","kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/InOutExprSyntax":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/InOutExprSyntax","url":"\/documentation\/macrobuilder\/inoutexprsyntax","kind":"symbol","abstract":[{"type":"text","text":"An expression prefixed with "},{"code":"&","type":"codeVoice"},{"type":"text","text":" to pass an argument to an "},{"type":"codeVoice","code":"inout"},{"text":" parameter.","type":"text"}],"type":"topic","title":"InOutExprSyntax","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"InOutExprSyntax"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"InOutExprSyntax","kind":"identifier"}]}}}