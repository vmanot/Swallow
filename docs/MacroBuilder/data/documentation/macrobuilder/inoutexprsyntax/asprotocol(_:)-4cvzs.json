{"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"asProtocol"},{"kind":"text","text":"((any "},{"text":"BracedSyntax","preciseIdentifier":"s:11SwiftSyntax06BracedB0P","kind":"typeIdentifier"},{"kind":"text","text":").Type) -> (any "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax06BracedB0P","text":"BracedSyntax"},{"text":")?","kind":"text"}],"extendedModule":"SwiftSyntax","role":"symbol","title":"asProtocol(_:)","roleHeading":"Instance Method","modules":[{"name":"MacroBuilder","relatedModules":["SwiftSyntax"]}],"externalID":"s:11SwiftSyntax0B8ProtocolPAAE02asC0yAA06BracedB0_pSgAaE_pmF::SYNTHESIZED::s:11SwiftSyntax09InOutExprB0V","symbolKind":"method"},"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"BracedSyntax"},{"text":". Otherwise return ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"sections":[],"identifier":{"url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/InOutExprSyntax\/asProtocol(_:)-4cvzs","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/InOutExprSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/InOutExprSyntax\/SyntaxProtocol-Implementations"]]},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"_"},{"text":": (any ","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BracedSyntax","text":"BracedSyntax","preciseIdentifier":"s:11SwiftSyntax06BracedB0P","kind":"typeIdentifier"},{"text":").Type) -> (any ","kind":"text"},{"kind":"typeIdentifier","text":"BracedSyntax","preciseIdentifier":"s:11SwiftSyntax06BracedB0P","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BracedSyntax"},{"kind":"text","text":")?"}],"platforms":["macOS"]}],"kind":"declarations"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/macrobuilder\/inoutexprsyntax\/asprotocol(_:)-4cvzs"]}],"kind":"symbol","references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/InOutExprSyntax/SyntaxProtocol-Implementations":{"url":"\/documentation\/macrobuilder\/inoutexprsyntax\/syntaxprotocol-implementations","role":"collectionGroup","type":"topic","title":"SyntaxProtocol Implementations","abstract":[],"kind":"article","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/InOutExprSyntax\/SyntaxProtocol-Implementations"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/InOutExprSyntax/asProtocol(_:)-4cvzs":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"((any "},{"preciseIdentifier":"s:11SwiftSyntax06BracedB0P","kind":"typeIdentifier","text":"BracedSyntax"},{"text":").Type) -> (any ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax06BracedB0P","text":"BracedSyntax","kind":"typeIdentifier"},{"text":")?","kind":"text"}],"title":"asProtocol(_:)","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"BracedSyntax"},{"text":". Otherwise return ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/InOutExprSyntax\/asProtocol(_:)-4cvzs","kind":"symbol","role":"symbol","url":"\/documentation\/macrobuilder\/inoutexprsyntax\/asprotocol(_:)-4cvzs","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/InOutExprSyntax":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/InOutExprSyntax","url":"\/documentation\/macrobuilder\/inoutexprsyntax","kind":"symbol","abstract":[{"type":"text","text":"An expression prefixed with "},{"code":"&","type":"codeVoice"},{"type":"text","text":" to pass an argument to an "},{"type":"codeVoice","code":"inout"},{"text":" parameter.","type":"text"}],"type":"topic","title":"InOutExprSyntax","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"InOutExprSyntax"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"InOutExprSyntax","kind":"identifier"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BracedSyntax":{"url":"\/documentation\/macrobuilder\/bracedsyntax","title":"BracedSyntax","navigatorTitle":[{"text":"BracedSyntax","kind":"identifier"}],"role":"symbol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BracedSyntax","kind":"identifier"}],"abstract":[{"text":"\/ Automatically generated by generate-swift-syntax","type":"text"},{"text":" ","type":"text"},{"text":"\/ Do not edit directly!","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BracedSyntax","kind":"symbol"}}}