{"sections":[],"identifier":{"url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/AvailabilityLabeledArgumentSyntax\/Value-swift.enum\/cast(_:)-64kpn","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"cast"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"text":"syntaxType","kind":"internalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax","text":"Syntax"},{"text":".Type) -> ","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax","kind":"typeIdentifier","text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V"}],"platforms":["macOS"],"languages":["swift"]}]},{"content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"inlineContent":[{"type":"text","text":"The "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax"},{"type":"text","text":" node created from the current syntax node, as the node can always be upcast to "},{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax","isActive":true,"type":"reference"},{"text":" node.","type":"text"}],"type":"paragraph"}],"kind":"content"},{"kind":"content","content":[{"level":2,"type":"heading","anchor":"discussion","text":"Discussion"},{"content":[{"inlineContent":[{"type":"text","text":"This method overloads the general "},{"type":"codeVoice","code":"as"},{"type":"text","text":" method and is marked deprecated to produce a warning"},{"text":" ","type":"text"},{"text":"informing the user the upcast should be performed using the base nodeâ€™s initializer.","type":"text"}],"type":"paragraph"}],"name":"Note","type":"aside","style":"note"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/macrobuilder\/availabilitylabeledargumentsyntax\/value-swift.enum\/cast(_:)-64kpn"]}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/AvailabilityLabeledArgumentSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/AvailabilityLabeledArgumentSyntax\/Value-swift.enum","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/AvailabilityLabeledArgumentSyntax\/Value-swift.enum\/SyntaxProtocol-Implementations"]]},"deprecationSummary":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use `Syntax.init` for upcasting."}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","abstract":[{"type":"text","text":"Force-cast the current syntax node to "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax"},{"type":"text","text":" node.."}],"metadata":{"roleHeading":"Instance Method","extendedModule":"SwiftSyntax","platforms":[],"title":"cast(_:)","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"cast","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax"},{"text":".Type) -> ","kind":"text"},{"text":"Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"}],"modules":[{"relatedModules":["SwiftSyntax"],"name":"MacroBuilder"}],"role":"symbol","externalID":"s:11SwiftSyntax0B8ProtocolPAAE4castyAA0B0VAFmF::SYNTHESIZED::s:11SwiftSyntax027AvailabilityLabeledArgumentB0V5ValueO"},"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/AvailabilityLabeledArgumentSyntax/Value-swift.enum":{"kind":"symbol","title":"AvailabilityLabeledArgumentSyntax.Value","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Value"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/AvailabilityLabeledArgumentSyntax\/Value-swift.enum","type":"topic","abstract":[],"navigatorTitle":[{"kind":"identifier","text":"Value"}],"url":"\/documentation\/macrobuilder\/availabilitylabeledargumentsyntax\/value-swift.enum","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/Syntax":{"abstract":[{"type":"text","text":"A Syntax node represents a tree of nodes with tokens at the leaves."},{"text":" ","type":"text"},{"type":"text","text":"Each node has accessors for its known children, and allows efficient"},{"text":" ","type":"text"},{"text":"iteration over the children through its ","type":"text"},{"type":"codeVoice","code":"children"},{"text":" property.","type":"text"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Syntax"}],"url":"\/documentation\/macrobuilder\/syntax","title":"Syntax","type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Syntax","kind":"identifier"}],"kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/AvailabilityLabeledArgumentSyntax":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AvailabilityLabeledArgumentSyntax"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/AvailabilityLabeledArgumentSyntax","url":"\/documentation\/macrobuilder\/availabilitylabeledargumentsyntax","navigatorTitle":[{"kind":"identifier","text":"AvailabilityLabeledArgumentSyntax"}],"kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"An argument to an "},{"type":"codeVoice","code":"@available"},{"type":"text","text":" attribute that consists of a label and a value, e.g. "},{"type":"codeVoice","code":"message: \"This has been deprecated\""},{"text":".","type":"text"}],"title":"AvailabilityLabeledArgumentSyntax","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/AvailabilityLabeledArgumentSyntax/Value-swift.enum/SyntaxProtocol-Implementations":{"abstract":[],"kind":"article","role":"collectionGroup","type":"topic","url":"\/documentation\/macrobuilder\/availabilitylabeledargumentsyntax\/value-swift.enum\/syntaxprotocol-implementations","title":"SyntaxProtocol Implementations","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/AvailabilityLabeledArgumentSyntax\/Value-swift.enum\/SyntaxProtocol-Implementations"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/AvailabilityLabeledArgumentSyntax/Value-swift.enum/cast(_:)-64kpn":{"deprecated":true,"title":"cast(_:)","role":"symbol","url":"\/documentation\/macrobuilder\/availabilitylabeledargumentsyntax\/value-swift.enum\/cast(_:)-64kpn","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/AvailabilityLabeledArgumentSyntax\/Value-swift.enum\/cast(_:)-64kpn","abstract":[{"type":"text","text":"Force-cast the current syntax node to "},{"isActive":true,"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax","type":"reference"},{"type":"text","text":" node.."}],"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"cast"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"kind":"text","text":".Type) -> "},{"preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax","kind":"typeIdentifier"}],"kind":"symbol"}}}