{"schemaVersion":{"minor":3,"patch":0,"major":0},"variants":[{"paths":["\/documentation\/macrobuilder\/availabilitylabeledargumentsyntax\/allmacrolexicalcontexts(enclosingsyntax:)"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"text":"Return an array of enclosing lexical contexts for the purpose of macros,","type":"text"},{"text":" ","type":"text"},{"text":"from the innermost enclosing lexical context (first in the array) to the","type":"text"},{"text":" ","type":"text"},{"text":"outermost. If this syntax node itself is a lexical context, it will be","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the innermost lexical context."}],"kind":"symbol","sections":[],"identifier":{"url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/AvailabilityLabeledArgumentSyntax\/allMacroLexicalContexts(enclosingSyntax:)","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"allMacroLexicalContexts","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"enclosingSyntax"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Syntax","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"text":") -> ","kind":"text"},{"text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax"},{"kind":"text","text":"? = { _ in nil }) -> ["},{"text":"Syntax","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"kind":"text","text":"]"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"name":"enclosingSyntax","content":[{"type":"paragraph","inlineContent":[{"text":"Provides a parent node when the operation","type":"text"},{"text":" ","type":"text"},{"text":"has reached the outermost syntax node (i.e., it has no parent), allowing","type":"text"},{"text":" ","type":"text"},{"text":"the caller to provide a new syntax node that can continue the walk","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"to collect additional lexical contexts, e.g., from outer macro"},{"type":"text","text":" "},{"type":"text","text":"expansions."}]}]}]},{"kind":"content","content":[{"level":2,"text":"Return Value","anchor":"return-value","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The array of enclosing lexical contexts."}]}]}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/AvailabilityLabeledArgumentSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/AvailabilityLabeledArgumentSyntax\/SyntaxProtocol-Implementations"]]},"metadata":{"modules":[{"name":"MacroBuilder","relatedModules":["SwiftSyntax"]}],"externalID":"s:11SwiftSyntax0B8ProtocolP0aB6MacrosE23allMacroLexicalContexts09enclosingB0SayAA0B0VGAHSgAHXE_tF::SYNTHESIZED::s:11SwiftSyntax027AvailabilityLabeledArgumentB0V","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"allMacroLexicalContexts"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"enclosingSyntax"},{"kind":"text","text":": ("},{"text":"Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax"},{"text":"?) -> [","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax"},{"kind":"text","text":"]"}],"roleHeading":"Instance Method","title":"allMacroLexicalContexts(enclosingSyntax:)","symbolKind":"method","role":"symbol","extendedModule":"SwiftSyntax"},"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/Syntax":{"abstract":[{"type":"text","text":"A Syntax node represents a tree of nodes with tokens at the leaves."},{"text":" ","type":"text"},{"type":"text","text":"Each node has accessors for its known children, and allows efficient"},{"text":" ","type":"text"},{"text":"iteration over the children through its ","type":"text"},{"type":"codeVoice","code":"children"},{"text":" property.","type":"text"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Syntax"}],"url":"\/documentation\/macrobuilder\/syntax","title":"Syntax","type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Syntax","kind":"identifier"}],"kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/AvailabilityLabeledArgumentSyntax/SyntaxProtocol-Implementations":{"role":"collectionGroup","type":"topic","kind":"article","title":"SyntaxProtocol Implementations","abstract":[],"url":"\/documentation\/macrobuilder\/availabilitylabeledargumentsyntax\/syntaxprotocol-implementations","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/AvailabilityLabeledArgumentSyntax\/SyntaxProtocol-Implementations"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/AvailabilityLabeledArgumentSyntax/allMacroLexicalContexts(enclosingSyntax:)":{"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/AvailabilityLabeledArgumentSyntax\/allMacroLexicalContexts(enclosingSyntax:)","url":"\/documentation\/macrobuilder\/availabilitylabeledargumentsyntax\/allmacrolexicalcontexts(enclosingsyntax:)","title":"allMacroLexicalContexts(enclosingSyntax:)","abstract":[{"text":"Return an array of enclosing lexical contexts for the purpose of macros,","type":"text"},{"text":" ","type":"text"},{"text":"from the innermost enclosing lexical context (first in the array) to the","type":"text"},{"type":"text","text":" "},{"text":"outermost. If this syntax node itself is a lexical context, it will be","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the innermost lexical context."}],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"allMacroLexicalContexts","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"enclosingSyntax"},{"kind":"text","text":": ("},{"preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier","text":"Syntax"},{"text":") -> ","kind":"text"},{"text":"Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"kind":"text","text":"?) -> ["},{"preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier","text":"Syntax"},{"text":"]","kind":"text"}],"type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/AvailabilityLabeledArgumentSyntax":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AvailabilityLabeledArgumentSyntax"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/AvailabilityLabeledArgumentSyntax","url":"\/documentation\/macrobuilder\/availabilitylabeledargumentsyntax","navigatorTitle":[{"kind":"identifier","text":"AvailabilityLabeledArgumentSyntax"}],"kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"An argument to an "},{"type":"codeVoice","code":"@available"},{"type":"text","text":" attribute that consists of a label and a value, e.g. "},{"type":"codeVoice","code":"message: \"This has been deprecated\""},{"text":".","type":"text"}],"title":"AvailabilityLabeledArgumentSyntax","type":"topic"}}}