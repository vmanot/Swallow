{"metadata":{"roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"`as`"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax04TypeB0V","text":"TypeSyntax"},{"text":".Type) -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax04TypeB0V","text":"TypeSyntax","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"title":"as(_:)","extendedModule":"SwiftSyntax","modules":[{"relatedModules":["SwiftSyntax"],"name":"MacroBuilder"}],"role":"symbol","platforms":[],"externalID":"s:11SwiftSyntax04TypeB8ProtocolPAAE2asyAA0cB0VSgAFmF","symbolKind":"method"},"schemaVersion":{"minor":3,"major":0,"patch":0},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TypeSyntaxProtocol"]]},"sections":[],"abstract":[{"text":"Attempts to upcast the current syntax node to its base node type (","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TypeSyntax"},{"type":"text","text":")."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"`as`"},{"kind":"text","text":"("},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"syntaxType","kind":"internalParam"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TypeSyntax","preciseIdentifier":"s:11SwiftSyntax04TypeB0V","text":"TypeSyntax","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax04TypeB0V","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TypeSyntax","text":"TypeSyntax","kind":"typeIdentifier"},{"text":"?","kind":"text"}]}]},{"content":[{"type":"heading","text":"Return Value","level":2,"anchor":"return-value"},{"type":"paragraph","inlineContent":[{"text":"The base node created from the current syntax node, as the node can always be upcast to its base type.","type":"text"}]}],"kind":"content"}],"deprecationSummary":[{"inlineContent":[{"type":"text","text":"Use `TypeSyntax.init` for upcasting"}],"type":"paragraph"}],"variants":[{"paths":["\/documentation\/macrobuilder\/typesyntaxprotocol\/as(_:)-5qpsq"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TypeSyntaxProtocol\/as(_:)-5qpsq","interfaceLanguage":"swift"},"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/TypeSyntaxProtocol/as(_:)-5qpsq":{"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TypeSyntaxProtocol\/as(_:)-5qpsq","kind":"symbol","role":"symbol","abstract":[{"text":"Attempts to upcast the current syntax node to its base node type (","type":"text"},{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TypeSyntax","isActive":true,"type":"reference"},{"text":").","type":"text"}],"deprecated":true,"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"`as`","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax04TypeB0V","text":"TypeSyntax","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax04TypeB0V","text":"TypeSyntax","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"title":"as(_:)","url":"\/documentation\/macrobuilder\/typesyntaxprotocol\/as(_:)-5qpsq"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/TypeSyntax":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"TypeSyntax","kind":"identifier"}],"url":"\/documentation\/macrobuilder\/typesyntax","title":"TypeSyntax","navigatorTitle":[{"text":"TypeSyntax","kind":"identifier"}],"abstract":[],"kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TypeSyntax"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/TypeSyntaxProtocol":{"url":"\/documentation\/macrobuilder\/typesyntaxprotocol","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"TypeSyntaxProtocol","kind":"identifier"}],"type":"topic","title":"TypeSyntaxProtocol","abstract":[{"text":"Protocol to which all ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TypeSyntax"},{"type":"text","text":" nodes conform."}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"TypeSyntaxProtocol"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TypeSyntaxProtocol"}}}