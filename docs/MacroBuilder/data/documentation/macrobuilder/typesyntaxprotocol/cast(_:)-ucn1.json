{"sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"cast"},{"kind":"text","text":"<"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"syntaxType"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":".Type) -> "},{"text":"S","kind":"typeIdentifier"},{"text":" ","kind":"text"},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"S"},{"text":" : ","kind":"text"},{"text":"SyntaxProtocol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxProtocol","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP","kind":"typeIdentifier"}],"languages":["swift"]}]},{"kind":"content","content":[{"level":2,"text":"Return Value","anchor":"return-value","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"An instance of the specialized type.","type":"text"}]}]},{"content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"name":"Warning","style":"warning","type":"aside","content":[{"inlineContent":[{"type":"text","text":"This function will crash if the cast is not possible. Use "},{"type":"codeVoice","code":"as"},{"text":" to safely attempt a cast.","type":"text"}],"type":"paragraph"}]},{"style":"note","type":"aside","name":"Note","content":[{"inlineContent":[{"text":"In most cases, this is casting a ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TypeSyntaxProtocol"},{"text":" to a node that is not a","type":"text"},{"type":"text","text":" "},{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TypeSyntaxProtocol","isActive":true,"type":"reference"},{"type":"text","text":", which will always fail. If the "},{"code":"syntaxType","type":"codeVoice"},{"type":"text","text":" argument is a generic type,"},{"type":"text","text":" "},{"text":"constrain it to ","type":"text"},{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TypeSyntaxProtocol","type":"reference","isActive":true},{"type":"text","text":" instead of "},{"isActive":true,"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxProtocol","type":"reference"},{"text":".","type":"text"}],"type":"paragraph"}]}],"kind":"content"}],"deprecationSummary":[{"inlineContent":[{"text":"Type argument should be part of the 'TypeSyntaxProtocol' hierarchy","type":"text"}],"type":"paragraph"}],"metadata":{"symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cast","kind":"identifier"},{"kind":"text","text":"<"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","text":"S"}],"extendedModule":"SwiftSyntax","role":"symbol","roleHeading":"Instance Method","modules":[{"relatedModules":["SwiftSyntax"],"name":"MacroBuilder"}],"externalID":"s:11SwiftSyntax04TypeB8ProtocolPAAE4castyqd__qd__mAA0bD0Rd__lF","platforms":[],"title":"cast(_:)"},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TypeSyntaxProtocol"]]},"abstract":[{"text":"Force-casts the current syntax node to a given node type from a base node protocol hierarchy other than","type":"text"},{"text":" ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TypeSyntaxProtocol"},{"type":"text","text":"."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/macrobuilder\/typesyntaxprotocol\/cast(_:)-ucn1"]}],"identifier":{"url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TypeSyntaxProtocol\/cast(_:)-ucn1","interfaceLanguage":"swift"},"kind":"symbol","references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/TypeSyntaxProtocol/cast(_:)-ucn1":{"role":"symbol","url":"\/documentation\/macrobuilder\/typesyntaxprotocol\/cast(_:)-ucn1","deprecated":true,"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"cast"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"S"},{"text":">(","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"kind":"typeIdentifier","text":"S"}],"type":"topic","abstract":[{"type":"text","text":"Force-casts the current syntax node to a given node type from a base node protocol hierarchy other than"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TypeSyntaxProtocol","isActive":true},{"type":"text","text":"."}],"title":"cast(_:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TypeSyntaxProtocol\/cast(_:)-ucn1","kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/TypeSyntaxProtocol":{"url":"\/documentation\/macrobuilder\/typesyntaxprotocol","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"TypeSyntaxProtocol","kind":"identifier"}],"type":"topic","title":"TypeSyntaxProtocol","abstract":[{"text":"Protocol to which all ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TypeSyntax"},{"type":"text","text":" nodes conform."}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"TypeSyntaxProtocol"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TypeSyntaxProtocol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/TypeSyntax":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"TypeSyntax","kind":"identifier"}],"url":"\/documentation\/macrobuilder\/typesyntax","title":"TypeSyntax","navigatorTitle":[{"text":"TypeSyntax","kind":"identifier"}],"abstract":[],"kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TypeSyntax"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SyntaxProtocol":{"title":"SyntaxProtocol","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxProtocol","navigatorTitle":[{"text":"SyntaxProtocol","kind":"identifier"}],"abstract":[{"text":"Provide common functionality for specialized syntax nodes. Extend this","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"protocol to provide common functionality for all syntax nodes."}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"SyntaxProtocol","kind":"identifier"}],"type":"topic","role":"symbol","url":"\/documentation\/macrobuilder\/syntaxprotocol"}}}