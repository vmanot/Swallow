{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TypeSyntaxProtocol\/is(_:)-9yb0b"},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"`is`","kind":"identifier"},{"kind":"text","text":"<"},{"text":"S","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"syntaxType"},{"text":": ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"kind":"text","text":".Type) -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":" "},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"text":"S","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"SyntaxProtocol","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxProtocol","kind":"typeIdentifier"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"content","content":[{"text":"Return Value","anchor":"return-value","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"type":"codeVoice","code":"true"},{"type":"text","text":" if the node can be cast, "},{"code":"false","type":"codeVoice"},{"type":"text","text":" otherwise."}]}]},{"kind":"content","content":[{"text":"Discussion","type":"heading","anchor":"discussion","level":2},{"type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"In most cases, this is comparing a ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TypeSyntaxProtocol","isActive":true},{"type":"text","text":" to a node that is not a"},{"text":" ","type":"text"},{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TypeSyntaxProtocol","isActive":true,"type":"reference"},{"type":"text","text":", which will always fail. If the "},{"type":"codeVoice","code":"syntaxType"},{"text":" argument is a generic type,","type":"text"},{"type":"text","text":" "},{"text":"constrain it to ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TypeSyntaxProtocol","isActive":true},{"type":"text","text":" instead of "},{"type":"reference","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxProtocol","isActive":true},{"type":"text","text":"."}]}],"name":"Note","style":"note"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/macrobuilder\/typesyntaxprotocol\/is(_:)-9yb0b"]}],"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TypeSyntaxProtocol"]]},"sections":[],"deprecationSummary":[{"inlineContent":[{"text":"Type argument should be part of the 'TypeSyntaxProtocol' hierarchy","type":"text"}],"type":"paragraph"}],"abstract":[{"text":"Checks if the current syntax node can be cast to a given node type from a base node protocol hierarchy other","type":"text"},{"type":"text","text":" "},{"text":"than ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TypeSyntaxProtocol"},{"type":"text","text":"."}],"metadata":{"title":"is(_:)","extendedModule":"SwiftSyntax","role":"symbol","modules":[{"relatedModules":["SwiftSyntax"],"name":"MacroBuilder"}],"roleHeading":"Instance Method","platforms":[],"externalID":"s:11SwiftSyntax04TypeB8ProtocolPAAE2isySbqd__mAA0bD0Rd__lF","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"`is`","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"S"},{"text":">(","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"symbolKind":"method"},"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/TypeSyntaxProtocol":{"url":"\/documentation\/macrobuilder\/typesyntaxprotocol","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"TypeSyntaxProtocol","kind":"identifier"}],"type":"topic","title":"TypeSyntaxProtocol","abstract":[{"text":"Protocol to which all ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TypeSyntax"},{"type":"text","text":" nodes conform."}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"TypeSyntaxProtocol"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TypeSyntaxProtocol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/TypeSyntaxProtocol/is(_:)-9yb0b":{"url":"\/documentation\/macrobuilder\/typesyntaxprotocol\/is(_:)-9yb0b","abstract":[{"text":"Checks if the current syntax node can be cast to a given node type from a base node protocol hierarchy other","type":"text"},{"text":" ","type":"text"},{"text":"than ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TypeSyntaxProtocol"},{"text":".","type":"text"}],"role":"symbol","type":"topic","kind":"symbol","title":"is(_:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TypeSyntaxProtocol\/is(_:)-9yb0b","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"`is`","kind":"identifier"},{"kind":"text","text":"<"},{"text":"S","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"S","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"deprecated":true},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/TypeSyntax":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"TypeSyntax","kind":"identifier"}],"url":"\/documentation\/macrobuilder\/typesyntax","title":"TypeSyntax","navigatorTitle":[{"text":"TypeSyntax","kind":"identifier"}],"abstract":[],"kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TypeSyntax"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SyntaxProtocol":{"title":"SyntaxProtocol","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxProtocol","navigatorTitle":[{"text":"SyntaxProtocol","kind":"identifier"}],"abstract":[{"text":"Provide common functionality for specialized syntax nodes. Extend this","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"protocol to provide common functionality for all syntax nodes."}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"SyntaxProtocol","kind":"identifier"}],"type":"topic","role":"symbol","url":"\/documentation\/macrobuilder\/syntaxprotocol"}}}