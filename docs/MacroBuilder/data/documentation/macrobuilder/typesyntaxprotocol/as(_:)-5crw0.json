{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/macrobuilder\/typesyntaxprotocol\/as(_:)-5crw0"]}],"abstract":[{"type":"text","text":"Attempts to cast the current syntax node to a given node type from the a base node protocol hierarchy other than"},{"text":" ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TypeSyntaxProtocol"},{"text":".","type":"text"}],"metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"`as`","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"text":"S","kind":"typeIdentifier"},{"kind":"text","text":".Type) -> "},{"text":"S","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"title":"as(_:)","modules":[{"relatedModules":["SwiftSyntax"],"name":"MacroBuilder"}],"extendedModule":"SwiftSyntax","role":"symbol","platforms":[],"roleHeading":"Instance Method","externalID":"s:11SwiftSyntax04TypeB8ProtocolPAAE2asyqd__Sgqd__mAA0bD0Rd__lF","symbolKind":"method"},"deprecationSummary":[{"inlineContent":[{"text":"Type argument should be part of the 'TypeSyntaxProtocol' hierarchy","type":"text"}],"type":"paragraph"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TypeSyntaxProtocol\/as(_:)-5crw0","interfaceLanguage":"swift"},"sections":[],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TypeSyntaxProtocol"]]},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"`as`"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"S"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"syntaxType"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":"? "},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxProtocol","text":"SyntaxProtocol","kind":"typeIdentifier"}],"languages":["swift"]}],"kind":"declarations"},{"content":[{"type":"heading","anchor":"return-value","text":"Return Value","level":2},{"inlineContent":[{"type":"text","text":"An instance of the specialized type, or "},{"type":"codeVoice","code":"nil"},{"text":" if the cast fails.","type":"text"}],"type":"paragraph"}],"kind":"content"},{"content":[{"text":"Discussion","type":"heading","anchor":"discussion","level":2},{"style":"note","name":"Note","type":"aside","content":[{"inlineContent":[{"text":"In most cases, this is casting a ","type":"text"},{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TypeSyntaxProtocol","isActive":true,"type":"reference"},{"text":" to a node that is not a","type":"text"},{"type":"text","text":" "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TypeSyntaxProtocol"},{"type":"text","text":", which will always fail. If the "},{"type":"codeVoice","code":"syntaxType"},{"type":"text","text":" argument is a generic type,"},{"type":"text","text":" "},{"text":"constrain it to ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TypeSyntaxProtocol"},{"type":"text","text":" instead of "},{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxProtocol","type":"reference","isActive":true},{"type":"text","text":"."}],"type":"paragraph"}]}],"kind":"content"}],"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/TypeSyntax":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"TypeSyntax","kind":"identifier"}],"url":"\/documentation\/macrobuilder\/typesyntax","title":"TypeSyntax","navigatorTitle":[{"text":"TypeSyntax","kind":"identifier"}],"abstract":[],"kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TypeSyntax"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SyntaxProtocol":{"title":"SyntaxProtocol","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxProtocol","navigatorTitle":[{"text":"SyntaxProtocol","kind":"identifier"}],"abstract":[{"text":"Provide common functionality for specialized syntax nodes. Extend this","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"protocol to provide common functionality for all syntax nodes."}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"SyntaxProtocol","kind":"identifier"}],"type":"topic","role":"symbol","url":"\/documentation\/macrobuilder\/syntaxprotocol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/TypeSyntaxProtocol/as(_:)-5crw0":{"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TypeSyntaxProtocol\/as(_:)-5crw0","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Attempts to cast the current syntax node to a given node type from the a base node protocol hierarchy other than"},{"text":" ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TypeSyntaxProtocol","isActive":true},{"type":"text","text":"."}],"deprecated":true,"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"`as`"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"text":"S","kind":"typeIdentifier"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":"?"}],"title":"as(_:)","url":"\/documentation\/macrobuilder\/typesyntaxprotocol\/as(_:)-5crw0"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/TypeSyntaxProtocol":{"url":"\/documentation\/macrobuilder\/typesyntaxprotocol","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"TypeSyntaxProtocol","kind":"identifier"}],"type":"topic","title":"TypeSyntaxProtocol","abstract":[{"text":"Protocol to which all ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TypeSyntax"},{"type":"text","text":" nodes conform."}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"TypeSyntaxProtocol"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TypeSyntaxProtocol"}}}