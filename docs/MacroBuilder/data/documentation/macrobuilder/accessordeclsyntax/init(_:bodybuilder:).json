{"metadata":{"title":"init(_:bodyBuilder:)","roleHeading":"Initializer","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"SyntaxNodeString","kind":"typeIdentifier","preciseIdentifier":"s:18SwiftSyntaxBuilder0B10NodeStringV"},{"kind":"text","text":", "},{"text":"bodyBuilder","kind":"externalParam"},{"text":": () ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"CodeBlockItemListSyntax","preciseIdentifier":"s:11SwiftSyntax017CodeBlockItemListB0V","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"DeclSyntaxProtocol"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"modules":[{"relatedModules":["SwiftSyntax"],"name":"MacroBuilder"}],"externalID":"s:11SwiftSyntax021WithOptionalCodeBlockB0P0aB7BuilderAA04DeclB8ProtocolRzrlE_04bodyG0xAD0B10NodeStringV_AA0ef8ItemListB0VyKXEtKcfc::SYNTHESIZED::s:11SwiftSyntax012AccessorDeclB0V","extendedModule":"SwiftSyntax","symbolKind":"init"},"sections":[],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"header"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxNodeString","preciseIdentifier":"s:18SwiftSyntaxBuilder0B10NodeStringV","kind":"typeIdentifier","text":"SyntaxNodeString"},{"kind":"text","text":", "},{"kind":"attribute","text":"@"},{"text":"CodeBlockItemListBuilder","kind":"attribute","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/CodeBlockItemListBuilder","preciseIdentifier":"s:18SwiftSyntaxBuilder017CodeBlockItemListC0V"},{"text":" ","kind":"text"},{"text":"bodyBuilder","kind":"externalParam"},{"kind":"text","text":": () "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:11SwiftSyntax017CodeBlockItemListB0V","kind":"typeIdentifier","text":"CodeBlockItemListSyntax","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/CodeBlockItemListSyntax"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"}],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","text":"Discussion","anchor":"discussion","level":2},{"type":"paragraph","inlineContent":[{"text":"For example, you can construct","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["func addOne(_ base: Int) -> Int {","  return base + 1","}"]},{"inlineContent":[{"type":"text","text":"using this call"}],"type":"paragraph"},{"code":["try FunctionDeclSyntax(\"func addOne(_ base: Int) -> Int\") {","  ExprSyntax(\"return base + 1\")","}"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"text":"Throws an error if ","type":"text"},{"type":"codeVoice","code":"header"},{"text":" defines a different node type than the type the initializer is called on. E.g. if calling ","type":"text"},{"code":"try FunctionDeclSyntax(\"init\") {}","type":"codeVoice"}],"type":"paragraph"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/macrobuilder\/accessordeclsyntax\/init(_:bodybuilder:)"]}],"identifier":{"url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/AccessorDeclSyntax\/init(_:bodyBuilder:)","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/AccessorDeclSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/AccessorDeclSyntax\/WithOptionalCodeBlockSyntax-Implementations"]]},"kind":"symbol","abstract":[{"type":"text","text":"Constructs a syntax node where "},{"type":"codeVoice","code":"header"},{"type":"text","text":" builds the text of the node before the body in braces and "},{"type":"codeVoice","code":"bodyBuilder"},{"text":" is used to build the node’s body.","type":"text"}],"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/CodeBlockItemListBuilder":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"CodeBlockItemListBuilder","kind":"identifier"}],"url":"\/documentation\/macrobuilder\/codeblockitemlistbuilder","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/CodeBlockItemListBuilder","navigatorTitle":[{"text":"CodeBlockItemListBuilder","kind":"identifier"}],"type":"topic","role":"symbol","kind":"symbol","title":"CodeBlockItemListBuilder"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/AccessorDeclSyntax":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AccessorDeclSyntax"}],"abstract":[],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"AccessorDeclSyntax"}],"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/AccessorDeclSyntax","kind":"symbol","url":"\/documentation\/macrobuilder\/accessordeclsyntax","title":"AccessorDeclSyntax"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/CodeBlockItemListSyntax":{"navigatorTitle":[{"text":"CodeBlockItemListSyntax","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/CodeBlockItemListSyntax","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CodeBlockItemListSyntax"}],"url":"\/documentation\/macrobuilder\/codeblockitemlistsyntax","type":"topic","abstract":[],"role":"symbol","title":"CodeBlockItemListSyntax","kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/AccessorDeclSyntax/init(_:bodyBuilder:)":{"kind":"symbol","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"SyntaxNodeString","preciseIdentifier":"s:18SwiftSyntaxBuilder0B10NodeStringV"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"bodyBuilder"},{"kind":"text","text":": () "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"CodeBlockItemListSyntax","preciseIdentifier":"s:11SwiftSyntax017CodeBlockItemListB0V","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"}],"abstract":[{"text":"Constructs a syntax node where ","type":"text"},{"type":"codeVoice","code":"header"},{"type":"text","text":" builds the text of the node before the body in braces and "},{"type":"codeVoice","code":"bodyBuilder"},{"type":"text","text":" is used to build the node’s body."}],"type":"topic","role":"symbol","title":"init(_:bodyBuilder:)","url":"\/documentation\/macrobuilder\/accessordeclsyntax\/init(_:bodybuilder:)","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Self","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"DeclSyntaxProtocol"},{"type":"text","text":"."}]},"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/AccessorDeclSyntax\/init(_:bodyBuilder:)"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SyntaxNodeString":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxNodeString","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"SyntaxNodeString","kind":"identifier"}],"navigatorTitle":[{"text":"SyntaxNodeString","kind":"identifier"}],"kind":"symbol","title":"SyntaxNodeString","role":"symbol","type":"topic","abstract":[{"type":"text","text":"A type that is expressible by string interpolation the same way that syntax"},{"type":"text","text":" "},{"type":"text","text":"nodes are, but instead of producing a node, it stores the string interpolation"},{"text":" ","type":"text"},{"type":"text","text":"text."}],"url":"\/documentation\/macrobuilder\/syntaxnodestring"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/AccessorDeclSyntax/WithOptionalCodeBlockSyntax-Implementations":{"role":"collectionGroup","kind":"article","type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/AccessorDeclSyntax\/WithOptionalCodeBlockSyntax-Implementations","abstract":[],"title":"WithOptionalCodeBlockSyntax Implementations","url":"\/documentation\/macrobuilder\/accessordeclsyntax\/withoptionalcodeblocksyntax-implementations"}}}