{"deprecationSummary":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This cast will always fail"}]}],"variants":[{"paths":["\/documentation\/macrobuilder\/ifexprsyntax\/elsebody-swift.enum\/is(_:)-2bhdr"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/IfExprSyntax\/ElseBody-swift.enum\/is(_:)-2bhdr"},"metadata":{"extendedModule":"SwiftSyntax","title":"is(_:)","role":"symbol","modules":[{"name":"MacroBuilder","relatedModules":["SwiftSyntax"]}],"platforms":[],"symbolKind":"method","externalID":"s:11SwiftSyntax0B12ChildChoicesPAAE2isySbqd__mAA0B8ProtocolRd__lF::SYNTHESIZED::s:11SwiftSyntax06IfExprB0V8ElseBodyO","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"`is`"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"S"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"S"},{"text":".Type) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"roleHeading":"Instance Method"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/IfExprSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/IfExprSyntax\/ElseBody-swift.enum","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/IfExprSyntax\/ElseBody-swift.enum\/SyntaxChildChoices-Implementations"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"abstract":[{"type":"text","text":"Checks if the current "},{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxChildChoices","type":"reference","isActive":true},{"text":" instance can be cast to a given specialized syntax type.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"`is`"},{"kind":"text","text":"<"},{"text":"S","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"syntaxType"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":" "},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"S"},{"text":" : ","kind":"text"},{"text":"SyntaxProtocol","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxProtocol","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"content","content":[{"level":2,"type":"heading","anchor":"return-value","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"code":"true","type":"codeVoice"},{"type":"text","text":" if the node can be cast, "},{"code":"false","type":"codeVoice"},{"text":" otherwise.","type":"text"}]}]},{"content":[{"type":"heading","anchor":"discussion","text":"Discussion","level":2},{"style":"note","type":"aside","name":"Note","content":[{"inlineContent":[{"type":"text","text":"This method is marked as deprecated because it is advised not to use it for unrelated casts."}],"type":"paragraph"}]}],"kind":"content"}],"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/IfExprSyntax/ElseBody-swift.enum/SyntaxChildChoices-Implementations":{"kind":"article","type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/IfExprSyntax\/ElseBody-swift.enum\/SyntaxChildChoices-Implementations","abstract":[],"url":"\/documentation\/macrobuilder\/ifexprsyntax\/elsebody-swift.enum\/syntaxchildchoices-implementations","title":"SyntaxChildChoices Implementations","role":"collectionGroup"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/IfExprSyntax/ElseBody-swift.enum":{"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ElseBody","kind":"identifier"}],"url":"\/documentation\/macrobuilder\/ifexprsyntax\/elsebody-swift.enum","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/IfExprSyntax\/ElseBody-swift.enum","abstract":[],"navigatorTitle":[{"text":"ElseBody","kind":"identifier"}],"type":"topic","role":"symbol","kind":"symbol","title":"IfExprSyntax.ElseBody"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/IfExprSyntax":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"IfExprSyntax"}],"url":"\/documentation\/macrobuilder\/ifexprsyntax","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/IfExprSyntax","abstract":[],"navigatorTitle":[{"text":"IfExprSyntax","kind":"identifier"}],"type":"topic","role":"symbol","kind":"symbol","title":"IfExprSyntax"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/IfExprSyntax/ElseBody-swift.enum/is(_:)-2bhdr":{"deprecated":true,"title":"is(_:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/IfExprSyntax\/ElseBody-swift.enum\/is(_:)-2bhdr","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"`is`","kind":"identifier"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":".Type) -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Checks if the current "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxChildChoices"},{"type":"text","text":" instance can be cast to a given specialized syntax type."}],"type":"topic","url":"\/documentation\/macrobuilder\/ifexprsyntax\/elsebody-swift.enum\/is(_:)-2bhdr","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SyntaxProtocol":{"title":"SyntaxProtocol","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxProtocol","navigatorTitle":[{"text":"SyntaxProtocol","kind":"identifier"}],"abstract":[{"text":"Provide common functionality for specialized syntax nodes. Extend this","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"protocol to provide common functionality for all syntax nodes."}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"SyntaxProtocol","kind":"identifier"}],"type":"topic","role":"symbol","url":"\/documentation\/macrobuilder\/syntaxprotocol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SyntaxChildChoices":{"url":"\/documentation\/macrobuilder\/syntaxchildchoices","navigatorTitle":[{"text":"SyntaxChildChoices","kind":"identifier"}],"abstract":[{"type":"text","text":"Protocol for the enums nested inside "},{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax","type":"reference","isActive":true},{"type":"text","text":" nodes that enumerate all the"},{"type":"text","text":" "},{"type":"text","text":"possible types a child node might have."}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxChildChoices","kind":"symbol","title":"SyntaxChildChoices","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SyntaxChildChoices","kind":"identifier"}],"role":"symbol","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/Syntax":{"abstract":[{"type":"text","text":"A Syntax node represents a tree of nodes with tokens at the leaves."},{"text":" ","type":"text"},{"type":"text","text":"Each node has accessors for its known children, and allows efficient"},{"text":" ","type":"text"},{"text":"iteration over the children through its ","type":"text"},{"type":"codeVoice","code":"children"},{"text":" property.","type":"text"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Syntax"}],"url":"\/documentation\/macrobuilder\/syntax","title":"Syntax","type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Syntax","kind":"identifier"}],"kind":"symbol"}}}