{"sections":[],"metadata":{"externalID":"s:11SwiftSyntax0B8ProtocolPAAE02asC0yAA014WithAttributesB0_pSgAaE_pmF::SYNTHESIZED::s:11SwiftSyntax015CatchClauseListB0V","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"kind":"text","text":"((any "},{"preciseIdentifier":"s:11SwiftSyntax014WithAttributesB0P","text":"WithAttributesSyntax","kind":"typeIdentifier"},{"text":").Type) -> (any ","kind":"text"},{"kind":"typeIdentifier","text":"WithAttributesSyntax","preciseIdentifier":"s:11SwiftSyntax014WithAttributesB0P"},{"text":")?","kind":"text"}],"title":"asProtocol(_:)","extendedModule":"SwiftSyntax","role":"symbol","modules":[{"name":"MacroBuilder","relatedModules":["SwiftSyntax"]}],"roleHeading":"Instance Method","symbolKind":"method"},"abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithAttributesSyntax"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/macrobuilder\/catchclauselistsyntax\/asprotocol(_:)-8clbc"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/CatchClauseListSyntax\/asProtocol(_:)-8clbc"},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"kind":"text","text":": (any "},{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/WithAttributesSyntax","text":"WithAttributesSyntax","preciseIdentifier":"s:11SwiftSyntax014WithAttributesB0P","kind":"typeIdentifier"},{"kind":"text","text":").Type) -> (any "},{"preciseIdentifier":"s:11SwiftSyntax014WithAttributesB0P","text":"WithAttributesSyntax","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/WithAttributesSyntax"},{"kind":"text","text":")?"}],"languages":["swift"]}],"kind":"declarations"}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/CatchClauseListSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/CatchClauseListSyntax\/SyntaxProtocol-Implementations"]]},"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/CatchClauseListSyntax/SyntaxProtocol-Implementations":{"title":"SyntaxProtocol Implementations","abstract":[],"role":"collectionGroup","kind":"article","type":"topic","url":"\/documentation\/macrobuilder\/catchclauselistsyntax\/syntaxprotocol-implementations","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/CatchClauseListSyntax\/SyntaxProtocol-Implementations"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/CatchClauseListSyntax":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/CatchClauseListSyntax","navigatorTitle":[{"kind":"identifier","text":"CatchClauseListSyntax"}],"title":"CatchClauseListSyntax","url":"\/documentation\/macrobuilder\/catchclauselistsyntax","kind":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CatchClauseListSyntax"}],"role":"symbol","abstract":[]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/CatchClauseListSyntax/asProtocol(_:)-8clbc":{"abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"WithAttributesSyntax"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"((any "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax014WithAttributesB0P","text":"WithAttributesSyntax"},{"kind":"text","text":").Type) -> (any "},{"text":"WithAttributesSyntax","preciseIdentifier":"s:11SwiftSyntax014WithAttributesB0P","kind":"typeIdentifier"},{"text":")?","kind":"text"}],"title":"asProtocol(_:)","role":"symbol","type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/CatchClauseListSyntax\/asProtocol(_:)-8clbc","url":"\/documentation\/macrobuilder\/catchclauselistsyntax\/asprotocol(_:)-8clbc","kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/WithAttributesSyntax":{"role":"symbol","abstract":[],"title":"WithAttributesSyntax","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/WithAttributesSyntax","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"WithAttributesSyntax"}],"type":"topic","url":"\/documentation\/macrobuilder\/withattributessyntax","navigatorTitle":[{"kind":"identifier","text":"WithAttributesSyntax"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"}}}