{"metadata":{"roleHeading":"Instance Property","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"previousToken","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"title":"previousToken","role":"symbol","modules":[{"relatedModules":["SwiftSyntax"],"name":"MacroBuilder"}],"extendedModule":"SwiftSyntax","platforms":[],"externalID":"s:11SwiftSyntax0B8ProtocolPAAE13previousTokenAA0eB0VSgvp","symbolKind":"property"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"previousToken"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TokenSyntax","kind":"typeIdentifier"},{"kind":"text","text":"? { "},{"kind":"keyword","text":"get"},{"text":" }","kind":"text"}],"platforms":["macOS"]}]}],"deprecationSummary":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use previousToken(viewMode:) instead"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxProtocol\/previousToken"},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/macrobuilder\/syntaxprotocol\/previoustoken"]}],"sections":[],"schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxProtocol"]]},"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/TokenSyntax":{"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TokenSyntax","kind":"identifier"}],"url":"\/documentation\/macrobuilder\/tokensyntax","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TokenSyntax"}],"abstract":[{"text":"A Syntax node representing a single token.","type":"text"}],"title":"TokenSyntax","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TokenSyntax","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SyntaxProtocol":{"title":"SyntaxProtocol","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxProtocol","navigatorTitle":[{"text":"SyntaxProtocol","kind":"identifier"}],"abstract":[{"text":"Provide common functionality for specialized syntax nodes. Extend this","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"protocol to provide common functionality for all syntax nodes."}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"SyntaxProtocol","kind":"identifier"}],"type":"topic","role":"symbol","url":"\/documentation\/macrobuilder\/syntaxprotocol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SyntaxProtocol/previousToken":{"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"previousToken"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","kind":"typeIdentifier","text":"TokenSyntax"},{"kind":"text","text":"?"}],"kind":"symbol","url":"\/documentation\/macrobuilder\/syntaxprotocol\/previoustoken","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxProtocol\/previousToken","title":"previousToken","role":"symbol","deprecated":true,"type":"topic"}}}