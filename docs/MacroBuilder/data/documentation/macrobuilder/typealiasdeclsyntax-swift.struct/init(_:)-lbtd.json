{"metadata":{"roleHeading":"Initializer","symbolKind":"init","modules":[{"name":"MacroBuilder","relatedModules":["SwiftSyntaxBuilder"]}],"role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:18SwiftSyntaxBuilder0B10NodeStringV","text":"SyntaxNodeString"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"}],"extendedModule":"SwiftSyntaxBuilder","title":"init(_:)","externalID":"s:18SwiftSyntaxBuilder04DeclB9ParseablePAAEyxAA0B10NodeStringVKcfc::SYNTHESIZED::s:11SwiftSyntax013TypeAliasDeclB0V"},"variants":[{"paths":["\/documentation\/macrobuilder\/typealiasdeclsyntax-swift.struct\/init(_:)-lbtd"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"abstract":[{"type":"text","text":"Create a syntax node from the given string interpolation."}],"identifier":{"url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TypeAliasDeclSyntax-swift.struct\/init(_:)-lbtd","interfaceLanguage":"swift"},"kind":"symbol","primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"text":"init","kind":"keyword"},{"kind":"text","text":"("},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"stringInterpolation","kind":"internalParam"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxNodeString","kind":"typeIdentifier","preciseIdentifier":"s:18SwiftSyntaxBuilder0B10NodeStringV","text":"SyntaxNodeString"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"This initializer throws if the syntax node was not able to be parsed as","type":"text"},{"text":" ","type":"text"},{"text":"this type, e.g. when calling ","type":"text"},{"code":"ClassDeclSyntax(\"actor Foo {})","type":"codeVoice"},{"text":".","type":"text"}]},{"inlineContent":[{"type":"text","text":"If there are syntax errors in the string, the initializer will return a"},{"text":" ","type":"text"},{"type":"text","text":"node that contains errors without throwing."}],"type":"paragraph"}]}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TypeAliasDeclSyntax-swift.struct","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TypeAliasDeclSyntax-swift.struct\/DeclSyntaxParseable-Implementations"]]},"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/TypeAliasDeclSyntax-swift.struct/DeclSyntaxParseable-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TypeAliasDeclSyntax-swift.struct\/DeclSyntaxParseable-Implementations","type":"topic","url":"\/documentation\/macrobuilder\/typealiasdeclsyntax-swift.struct\/declsyntaxparseable-implementations","abstract":[],"role":"collectionGroup","kind":"article","title":"DeclSyntaxParseable Implementations"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/TypeAliasDeclSyntax-swift.struct":{"navigatorTitle":[{"kind":"identifier","text":"TypeAliasDeclSyntax"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TypeAliasDeclSyntax-swift.struct","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TypeAliasDeclSyntax"}],"url":"\/documentation\/macrobuilder\/typealiasdeclsyntax-swift.struct","type":"topic","abstract":[],"role":"symbol","title":"TypeAliasDeclSyntax","kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SyntaxNodeString":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxNodeString","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"SyntaxNodeString","kind":"identifier"}],"navigatorTitle":[{"text":"SyntaxNodeString","kind":"identifier"}],"kind":"symbol","title":"SyntaxNodeString","role":"symbol","type":"topic","abstract":[{"type":"text","text":"A type that is expressible by string interpolation the same way that syntax"},{"type":"text","text":" "},{"type":"text","text":"nodes are, but instead of producing a node, it stores the string interpolation"},{"text":" ","type":"text"},{"type":"text","text":"text."}],"url":"\/documentation\/macrobuilder\/syntaxnodestring"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/TypeAliasDeclSyntax-swift.struct/init(_:)-lbtd":{"kind":"symbol","abstract":[{"text":"Create a syntax node from the given string interpolation.","type":"text"}],"url":"\/documentation\/macrobuilder\/typealiasdeclsyntax-swift.struct\/init(_:)-lbtd","role":"symbol","type":"topic","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"SyntaxNodeString","kind":"typeIdentifier","preciseIdentifier":"s:18SwiftSyntaxBuilder0B10NodeStringV"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"}],"title":"init(_:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TypeAliasDeclSyntax-swift.struct\/init(_:)-lbtd"}}}