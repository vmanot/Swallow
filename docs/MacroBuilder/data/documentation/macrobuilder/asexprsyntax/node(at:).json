{"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"node"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"at"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"syntaxIdentifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B10IdentifierV","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxIdentifier","text":"SyntaxIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax","text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"kind":"text","text":"?"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","level":2,"type":"heading"},{"inlineContent":[{"text":"If the identifier references a node from a different tree (ie. one that has a different root ID in the","type":"text"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxIdentifier"},{"type":"text","text":") or if no node with the given identifier is a child of this syntax node, returns "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."}],"type":"paragraph"}]}],"metadata":{"symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"node","kind":"identifier"},{"text":"(","kind":"text"},{"text":"at","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B10IdentifierV","text":"SyntaxIdentifier"},{"text":") -> ","kind":"text"},{"text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"externalID":"s:11SwiftSyntax0B8ProtocolPAAE4node2atAA0B0VSgAA0B10IdentifierV_tF::SYNTHESIZED::s:11SwiftSyntax06AsExprB0V","role":"symbol","extendedModule":"SwiftSyntax","modules":[{"name":"MacroBuilder","relatedModules":["SwiftSyntax"]}],"roleHeading":"Instance Method","title":"node(at:)"},"abstract":[{"type":"text","text":"If the node with the given "},{"type":"codeVoice","code":"syntaxIdentifier"},{"type":"text","text":" is a (recursive) child of this node, return the node with that"},{"type":"text","text":" "},{"type":"text","text":"identifier."}],"sections":[],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/AsExprSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/AsExprSyntax\/SyntaxProtocol-Implementations"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/macrobuilder\/asexprsyntax\/node(at:)"]}],"kind":"symbol","schemaVersion":{"minor":3,"major":0,"patch":0},"identifier":{"url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/AsExprSyntax\/node(at:)","interfaceLanguage":"swift"},"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/Syntax":{"abstract":[{"type":"text","text":"A Syntax node represents a tree of nodes with tokens at the leaves."},{"text":" ","type":"text"},{"type":"text","text":"Each node has accessors for its known children, and allows efficient"},{"text":" ","type":"text"},{"text":"iteration over the children through its ","type":"text"},{"type":"codeVoice","code":"children"},{"text":" property.","type":"text"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Syntax"}],"url":"\/documentation\/macrobuilder\/syntax","title":"Syntax","type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Syntax","kind":"identifier"}],"kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/AsExprSyntax/node(at:)":{"url":"\/documentation\/macrobuilder\/asexprsyntax\/node(at:)","title":"node(at:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"node"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"at"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax0B10IdentifierV","text":"SyntaxIdentifier","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax"},{"text":"?","kind":"text"}],"type":"topic","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/AsExprSyntax\/node(at:)","abstract":[{"type":"text","text":"If the node with the given "},{"type":"codeVoice","code":"syntaxIdentifier"},{"type":"text","text":" is a (recursive) child of this node, return the node with that"},{"type":"text","text":" "},{"text":"identifier.","type":"text"}],"kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SyntaxIdentifier":{"kind":"symbol","url":"\/documentation\/macrobuilder\/syntaxidentifier","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SyntaxIdentifier","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxIdentifier","type":"topic","abstract":[{"type":"text","text":"Provides a stable and unique identity for "},{"isActive":true,"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax","type":"reference"},{"type":"text","text":" nodes."}],"navigatorTitle":[{"kind":"identifier","text":"SyntaxIdentifier"}],"title":"SyntaxIdentifier"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/AsExprSyntax":{"url":"\/documentation\/macrobuilder\/asexprsyntax","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/AsExprSyntax","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"The cast of an expressison to a different type."}],"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsExprSyntax"}],"title":"AsExprSyntax","navigatorTitle":[{"kind":"identifier","text":"AsExprSyntax"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/AsExprSyntax/SyntaxProtocol-Implementations":{"url":"\/documentation\/macrobuilder\/asexprsyntax\/syntaxprotocol-implementations","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/AsExprSyntax\/SyntaxProtocol-Implementations","kind":"article","role":"collectionGroup","title":"SyntaxProtocol Implementations","abstract":[],"type":"topic"}}}