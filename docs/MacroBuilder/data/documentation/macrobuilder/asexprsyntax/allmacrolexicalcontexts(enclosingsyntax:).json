{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/AsExprSyntax\/allMacroLexicalContexts(enclosingSyntax:)"},"sections":[],"schemaVersion":{"patch":0,"minor":3,"major":0},"kind":"symbol","metadata":{"extendedModule":"SwiftSyntax","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"allMacroLexicalContexts"},{"kind":"text","text":"("},{"text":"enclosingSyntax","kind":"externalParam"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax","kind":"typeIdentifier"},{"kind":"text","text":"?) -> ["},{"text":"Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"text":"]","kind":"text"}],"modules":[{"relatedModules":["SwiftSyntax"],"name":"MacroBuilder"}],"externalID":"s:11SwiftSyntax0B8ProtocolP0aB6MacrosE23allMacroLexicalContexts09enclosingB0SayAA0B0VGAHSgAHXE_tF::SYNTHESIZED::s:11SwiftSyntax06AsExprB0V","title":"allMacroLexicalContexts(enclosingSyntax:)","role":"symbol","roleHeading":"Instance Method"},"abstract":[{"type":"text","text":"Return an array of enclosing lexical contexts for the purpose of macros,"},{"type":"text","text":" "},{"text":"from the innermost enclosing lexical context (first in the array) to the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"outermost. If this syntax node itself is a lexical context, it will be"},{"text":" ","type":"text"},{"text":"the innermost lexical context.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"allMacroLexicalContexts"},{"kind":"text","text":"("},{"kind":"externalParam","text":"enclosingSyntax"},{"text":": (","kind":"text"},{"text":"Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax"},{"text":") -> ","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax","text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier"},{"kind":"text","text":"? = { _ in nil }) -> ["},{"kind":"typeIdentifier","text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax"},{"text":"]","kind":"text"}]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Provides a parent node when the operation","type":"text"},{"type":"text","text":" "},{"type":"text","text":"has reached the outermost syntax node (i.e., it has no parent), allowing"},{"text":" ","type":"text"},{"type":"text","text":"the caller to provide a new syntax node that can continue the walk"},{"type":"text","text":" "},{"text":"to collect additional lexical contexts, e.g., from outer macro","type":"text"},{"type":"text","text":" "},{"text":"expansions.","type":"text"}]}],"name":"enclosingSyntax"}]},{"kind":"content","content":[{"type":"heading","anchor":"return-value","text":"Return Value","level":2},{"inlineContent":[{"type":"text","text":"The array of enclosing lexical contexts."}],"type":"paragraph"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/macrobuilder\/asexprsyntax\/allmacrolexicalcontexts(enclosingsyntax:)"]}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/AsExprSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/AsExprSyntax\/SyntaxProtocol-Implementations"]]},"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/AsExprSyntax/allMacroLexicalContexts(enclosingSyntax:)":{"url":"\/documentation\/macrobuilder\/asexprsyntax\/allmacrolexicalcontexts(enclosingsyntax:)","title":"allMacroLexicalContexts(enclosingSyntax:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"allMacroLexicalContexts"},{"text":"(","kind":"text"},{"text":"enclosingSyntax","kind":"externalParam"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"kind":"text","text":"?) -> ["},{"preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"type":"topic","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/AsExprSyntax\/allMacroLexicalContexts(enclosingSyntax:)","abstract":[{"type":"text","text":"Return an array of enclosing lexical contexts for the purpose of macros,"},{"type":"text","text":" "},{"type":"text","text":"from the innermost enclosing lexical context (first in the array) to the"},{"type":"text","text":" "},{"type":"text","text":"outermost. If this syntax node itself is a lexical context, it will be"},{"text":" ","type":"text"},{"text":"the innermost lexical context.","type":"text"}],"kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/AsExprSyntax/SyntaxProtocol-Implementations":{"url":"\/documentation\/macrobuilder\/asexprsyntax\/syntaxprotocol-implementations","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/AsExprSyntax\/SyntaxProtocol-Implementations","kind":"article","role":"collectionGroup","title":"SyntaxProtocol Implementations","abstract":[],"type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/AsExprSyntax":{"url":"\/documentation\/macrobuilder\/asexprsyntax","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/AsExprSyntax","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"The cast of an expressison to a different type."}],"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsExprSyntax"}],"title":"AsExprSyntax","navigatorTitle":[{"kind":"identifier","text":"AsExprSyntax"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/Syntax":{"abstract":[{"type":"text","text":"A Syntax node represents a tree of nodes with tokens at the leaves."},{"text":" ","type":"text"},{"type":"text","text":"Each node has accessors for its known children, and allows efficient"},{"text":" ","type":"text"},{"text":"iteration over the children through its ","type":"text"},{"type":"codeVoice","code":"children"},{"text":" property.","type":"text"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Syntax"}],"url":"\/documentation\/macrobuilder\/syntax","title":"Syntax","type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Syntax","kind":"identifier"}],"kind":"symbol"}}}