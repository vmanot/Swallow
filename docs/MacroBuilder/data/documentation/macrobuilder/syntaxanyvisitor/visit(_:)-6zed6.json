{"kind":"symbol","abstract":[{"text":"Visiting ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax","isActive":true},{"type":"text","text":" specifically."}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"override","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"visit"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"node"},{"text":": ","kind":"text"},{"text":"ExprListSyntax","preciseIdentifier":"s:11SwiftSyntax08ExprListB0V","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxVisitorContinueKind","preciseIdentifier":"s:11SwiftSyntax0B19VisitorContinueKindO","kind":"typeIdentifier","text":"SyntaxVisitorContinueKind"}],"platforms":["macOS"]}],"kind":"declarations"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The node we are visiting.","type":"text"}]}],"name":"node"}],"kind":"parameters"},{"kind":"content","content":[{"text":"Return Value","level":2,"anchor":"return-value","type":"heading"},{"inlineContent":[{"type":"text","text":"How should we continue visiting."}],"type":"paragraph"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/macrobuilder\/syntaxanyvisitor\/visit(_:)-6zed6"]}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxAnyVisitor"]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxAnyVisitor\/visit(_:)-6zed6"},"metadata":{"role":"symbol","title":"visit(_:)","symbolKind":"method","roleHeading":"Instance Method","modules":[{"name":"MacroBuilder"}],"externalID":"s:11SwiftSyntax0B10AnyVisitorC5visityAA0bD12ContinueKindOAA08ExprListB0VF","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"visit"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax08ExprListB0V","text":"ExprListSyntax","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"SyntaxVisitorContinueKind","preciseIdentifier":"s:11SwiftSyntax0B19VisitorContinueKindO"}]},"sections":[],"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/Syntax":{"abstract":[{"type":"text","text":"A Syntax node represents a tree of nodes with tokens at the leaves."},{"text":" ","type":"text"},{"type":"text","text":"Each node has accessors for its known children, and allows efficient"},{"text":" ","type":"text"},{"text":"iteration over the children through its ","type":"text"},{"type":"codeVoice","code":"children"},{"text":" property.","type":"text"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Syntax"}],"url":"\/documentation\/macrobuilder\/syntax","title":"Syntax","type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Syntax","kind":"identifier"}],"kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SyntaxAnyVisitor/visit(_:)-6zed6":{"url":"\/documentation\/macrobuilder\/syntaxanyvisitor\/visit(_:)-6zed6","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxAnyVisitor\/visit(_:)-6zed6","title":"visit(_:)","abstract":[{"text":"Visiting ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax","isActive":true},{"type":"text","text":" specifically."}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"visit","kind":"identifier"},{"kind":"text","text":"("},{"text":"ExprListSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax08ExprListB0V"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B19VisitorContinueKindO","kind":"typeIdentifier","text":"SyntaxVisitorContinueKind"}],"kind":"symbol","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SequenceExprSyntax":{"url":"\/documentation\/macrobuilder\/sequenceexprsyntax","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SequenceExprSyntax","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"SequenceExprSyntax","kind":"identifier"}],"title":"SequenceExprSyntax","abstract":[{"type":"text","text":"A flat list of expressions before operator folding using the "},{"type":"codeVoice","code":"SwiftOperators"},{"type":"text","text":" library."}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SequenceExprSyntax","kind":"identifier"}],"type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SyntaxVisitor":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"SyntaxVisitor"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxVisitor","title":"SyntaxVisitor","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"SyntaxVisitor","kind":"identifier"}],"url":"\/documentation\/macrobuilder\/syntaxvisitor","role":"symbol","abstract":[],"type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprListSyntax":{"url":"\/documentation\/macrobuilder\/exprlistsyntax","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"ExprListSyntax","kind":"identifier"}],"title":"ExprListSyntax","abstract":[{"text":"A list of expressions connected by operators. This list is contained by a ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SequenceExprSyntax"},{"type":"text","text":"."}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"ExprListSyntax","kind":"identifier"}],"type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SyntaxVisitorContinueKind":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxVisitorContinueKind","navigatorTitle":[{"text":"SyntaxVisitorContinueKind","kind":"identifier"}],"title":"SyntaxVisitorContinueKind","url":"\/documentation\/macrobuilder\/syntaxvisitorcontinuekind","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SyntaxVisitorContinueKind"}],"role":"symbol","abstract":[{"text":"The enum describes how the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxVisitor"},{"type":"text","text":" should continue after visiting"},{"text":" ","type":"text"},{"type":"text","text":"the current node."}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SyntaxAnyVisitor":{"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxAnyVisitor","kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SyntaxAnyVisitor","kind":"identifier"}],"url":"\/documentation\/macrobuilder\/syntaxanyvisitor","type":"topic","title":"SyntaxAnyVisitor","navigatorTitle":[{"text":"SyntaxAnyVisitor","kind":"identifier"}],"abstract":[{"text":"A ","type":"text"},{"code":"SyntaxVisitor","type":"codeVoice"},{"type":"text","text":" that can visit the nodes as generic "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax"},{"text":" values.","type":"text"}]}}}