{"sections":[],"kind":"symbol","primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"override","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"visitPost"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"text":"node","kind":"internalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax030SimpleStringLiteralSegmentListB0V","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax","text":"SimpleStringLiteralSegmentListSyntax","kind":"typeIdentifier"},{"text":")","kind":"text"}],"platforms":["macOS"]}],"kind":"declarations"},{"content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"node: the node we just finished visiting."}]}]}]}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/macrobuilder\/syntaxanyvisitor\/visitpost(_:)-4hr04"]}],"identifier":{"url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxAnyVisitor\/visitPost(_:)-4hr04","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxAnyVisitor"]]},"abstract":[{"type":"text","text":"The function called after visiting "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax"},{"text":" and its descendants.","type":"text"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"modules":[{"name":"MacroBuilder"}],"symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"visitPost"},{"text":"(","kind":"text"},{"text":"SimpleStringLiteralSegmentListSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax030SimpleStringLiteralSegmentListB0V"},{"kind":"text","text":")"}],"role":"symbol","title":"visitPost(_:)","externalID":"s:11SwiftSyntax0B10AnyVisitorC9visitPostyyAA030SimpleStringLiteralSegmentListB0VF","roleHeading":"Instance Method"},"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SyntaxAnyVisitor":{"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxAnyVisitor","kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SyntaxAnyVisitor","kind":"identifier"}],"url":"\/documentation\/macrobuilder\/syntaxanyvisitor","type":"topic","title":"SyntaxAnyVisitor","navigatorTitle":[{"text":"SyntaxAnyVisitor","kind":"identifier"}],"abstract":[{"text":"A ","type":"text"},{"code":"SyntaxVisitor","type":"codeVoice"},{"type":"text","text":" that can visit the nodes as generic "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax"},{"text":" values.","type":"text"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SimpleStringLiteralSegmentListSyntax":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax","url":"\/documentation\/macrobuilder\/simplestringliteralsegmentlistsyntax","kind":"symbol","abstract":[{"text":"String literal segments that only can contain non string interpolated or extended escaped strings","type":"text"}],"type":"topic","title":"SimpleStringLiteralSegmentListSyntax","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"SimpleStringLiteralSegmentListSyntax"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SimpleStringLiteralSegmentListSyntax"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SyntaxAnyVisitor/visitPost(_:)-4hr04":{"abstract":[{"type":"text","text":"The function called after visiting "},{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SimpleStringLiteralSegmentListSyntax","isActive":true,"type":"reference"},{"text":" and its descendants.","type":"text"}],"title":"visitPost(_:)","url":"\/documentation\/macrobuilder\/syntaxanyvisitor\/visitpost(_:)-4hr04","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxAnyVisitor\/visitPost(_:)-4hr04","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"visitPost","kind":"identifier"},{"kind":"text","text":"("},{"text":"SimpleStringLiteralSegmentListSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax030SimpleStringLiteralSegmentListB0V"},{"text":")","kind":"text"}],"role":"symbol","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/Syntax":{"abstract":[{"type":"text","text":"A Syntax node represents a tree of nodes with tokens at the leaves."},{"text":" ","type":"text"},{"type":"text","text":"Each node has accessors for its known children, and allows efficient"},{"text":" ","type":"text"},{"text":"iteration over the children through its ","type":"text"},{"type":"codeVoice","code":"children"},{"text":" property.","type":"text"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Syntax"}],"url":"\/documentation\/macrobuilder\/syntax","title":"Syntax","type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Syntax","kind":"identifier"}],"kind":"symbol"}}}