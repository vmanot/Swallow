{"abstract":[{"text":"Whether the tree contained by this layout has any","type":"text"}],"metadata":{"modules":[{"relatedModules":["SwiftSyntax"],"name":"MacroBuilder"}],"role":"symbol","roleHeading":"Instance Property","extendedModule":"SwiftSyntax","symbolKind":"property","externalID":"s:11SwiftSyntax0B8ProtocolPAAE8hasErrorSbvp::SYNTHESIZED::s:11SwiftSyntax025DifferentiabilityArgumentB0V","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"hasError","kind":"identifier"},{"kind":"text","text":": "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"title":"hasError"},"kind":"symbol","sections":[],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"hasError","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":" { ","kind":"text"},{"kind":"keyword","text":"get"},{"text":" }","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","anchor":"discussion","text":"Discussion","level":2},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"missing nodes or","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"unexpected nodes or","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"tokens with a ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TokenDiagnostic"},{"type":"text","text":" of severity "},{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TokenDiagnostic\/Severity-swift.enum\/error","type":"reference","isActive":true},{"type":"text","text":"."}]}]}]}]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"variants":[{"paths":["\/documentation\/macrobuilder\/differentiabilityargumentsyntax\/haserror"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DifferentiabilityArgumentSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DifferentiabilityArgumentSyntax\/SyntaxProtocol-Implementations"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DifferentiabilityArgumentSyntax\/hasError"},"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/DifferentiabilityArgumentSyntax":{"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DifferentiabilityArgumentSyntax"}],"title":"DifferentiabilityArgumentSyntax","abstract":[{"type":"text","text":"A differentiability argument: either the “self” identifier, a function parameter name, or a function parameter index."}],"navigatorTitle":[{"text":"DifferentiabilityArgumentSyntax","kind":"identifier"}],"url":"\/documentation\/macrobuilder\/differentiabilityargumentsyntax","type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DifferentiabilityArgumentSyntax"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/DifferentiabilityArgumentSyntax/SyntaxProtocol-Implementations":{"abstract":[],"title":"SyntaxProtocol Implementations","role":"collectionGroup","type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DifferentiabilityArgumentSyntax\/SyntaxProtocol-Implementations","kind":"article","url":"\/documentation\/macrobuilder\/differentiabilityargumentsyntax\/syntaxprotocol-implementations"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/DifferentiabilityArgumentSyntax/hasError":{"abstract":[{"type":"text","text":"Whether the tree contained by this layout has any"}],"type":"topic","url":"\/documentation\/macrobuilder\/differentiabilityargumentsyntax\/haserror","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"hasError"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"title":"hasError","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DifferentiabilityArgumentSyntax\/hasError","role":"symbol","kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/TokenDiagnostic":{"type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"TokenDiagnostic"}],"role":"symbol","abstract":[{"text":"If the token has an error that’s inherent to the token itself and not its","type":"text"},{"text":" ","type":"text"},{"text":"surrounding structure, this defines the type of the error.","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"byteOffset"},{"type":"text","text":" specifies at which offset the error occurred."}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TokenDiagnostic","title":"TokenDiagnostic","url":"\/documentation\/macrobuilder\/tokendiagnostic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"TokenDiagnostic","kind":"identifier"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/TokenDiagnostic/Severity-swift.enum/error":{"kind":"symbol","role":"symbol","title":"TokenDiagnostic.Severity.error","abstract":[],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TokenDiagnostic\/Severity-swift.enum\/error","url":"\/documentation\/macrobuilder\/tokendiagnostic\/severity-swift.enum\/error","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"text":"error","kind":"identifier"}]}}}