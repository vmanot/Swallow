{"metadata":{"modules":[{"relatedModules":["SwiftSyntax"],"name":"MacroBuilder"}],"role":"symbol","extendedModule":"SwiftSyntax","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"allMacroLexicalContexts","kind":"identifier"},{"text":"(","kind":"text"},{"text":"enclosingSyntax","kind":"externalParam"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"kind":"text","text":"?) -> ["},{"preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"roleHeading":"Instance Method","title":"allMacroLexicalContexts(enclosingSyntax:)","externalID":"s:11SwiftSyntax0B8ProtocolP0aB6MacrosE23allMacroLexicalContexts09enclosingB0SayAA0B0VGAHSgAHXE_tF::SYNTHESIZED::s:11SwiftSyntax024ExposeAttributeArgumentsB0V"},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExposeAttributeArgumentsSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExposeAttributeArgumentsSyntax\/SyntaxProtocol-Implementations"]]},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/macrobuilder\/exposeattributeargumentssyntax\/allmacrolexicalcontexts(enclosingsyntax:)"]}],"identifier":{"url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExposeAttributeArgumentsSyntax\/allMacroLexicalContexts(enclosingSyntax:)","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"abstract":[{"text":"Return an array of enclosing lexical contexts for the purpose of macros,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"from the innermost enclosing lexical context (first in the array) to the"},{"text":" ","type":"text"},{"text":"outermost. If this syntax node itself is a lexical context, it will be","type":"text"},{"text":" ","type":"text"},{"text":"the innermost lexical context.","type":"text"}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"allMacroLexicalContexts","kind":"identifier"},{"text":"(","kind":"text"},{"text":"enclosingSyntax","kind":"externalParam"},{"kind":"text","text":": ("},{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier","text":"Syntax"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax"},{"kind":"text","text":"? = { _ in nil }) -> ["},{"preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax"},{"kind":"text","text":"]"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Provides a parent node when the operation","type":"text"},{"type":"text","text":" "},{"type":"text","text":"has reached the outermost syntax node (i.e., it has no parent), allowing"},{"type":"text","text":" "},{"text":"the caller to provide a new syntax node that can continue the walk","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"to collect additional lexical contexts, e.g., from outer macro"},{"type":"text","text":" "},{"type":"text","text":"expansions."}]}],"name":"enclosingSyntax"}]},{"kind":"content","content":[{"level":2,"type":"heading","anchor":"return-value","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The array of enclosing lexical contexts."}]}]}],"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExposeAttributeArgumentsSyntax":{"type":"topic","navigatorTitle":[{"kind":"identifier","text":"ExposeAttributeArgumentsSyntax"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ExposeAttributeArgumentsSyntax","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"The arguments for the ‘@_expose’ attribute"}],"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExposeAttributeArgumentsSyntax","url":"\/documentation\/macrobuilder\/exposeattributeargumentssyntax","title":"ExposeAttributeArgumentsSyntax"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExposeAttributeArgumentsSyntax/allMacroLexicalContexts(enclosingSyntax:)":{"url":"\/documentation\/macrobuilder\/exposeattributeargumentssyntax\/allmacrolexicalcontexts(enclosingsyntax:)","type":"topic","abstract":[{"text":"Return an array of enclosing lexical contexts for the purpose of macros,","type":"text"},{"text":" ","type":"text"},{"text":"from the innermost enclosing lexical context (first in the array) to the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"outermost. If this syntax node itself is a lexical context, it will be"},{"type":"text","text":" "},{"text":"the innermost lexical context.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExposeAttributeArgumentsSyntax\/allMacroLexicalContexts(enclosingSyntax:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"allMacroLexicalContexts","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"enclosingSyntax"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax"},{"text":") -> ","kind":"text"},{"text":"Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"text":"?) -> [","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax"},{"text":"]","kind":"text"}],"title":"allMacroLexicalContexts(enclosingSyntax:)","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExposeAttributeArgumentsSyntax/SyntaxProtocol-Implementations":{"abstract":[],"url":"\/documentation\/macrobuilder\/exposeattributeargumentssyntax\/syntaxprotocol-implementations","title":"SyntaxProtocol Implementations","role":"collectionGroup","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExposeAttributeArgumentsSyntax\/SyntaxProtocol-Implementations","type":"topic","kind":"article"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/Syntax":{"abstract":[{"type":"text","text":"A Syntax node represents a tree of nodes with tokens at the leaves."},{"text":" ","type":"text"},{"type":"text","text":"Each node has accessors for its known children, and allows efficient"},{"text":" ","type":"text"},{"text":"iteration over the children through its ","type":"text"},{"type":"codeVoice","code":"children"},{"text":" property.","type":"text"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Syntax"}],"url":"\/documentation\/macrobuilder\/syntax","title":"Syntax","type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Syntax","kind":"identifier"}],"kind":"symbol"}}}