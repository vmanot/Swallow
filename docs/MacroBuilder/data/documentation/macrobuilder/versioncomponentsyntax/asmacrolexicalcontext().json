{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/VersionComponentSyntax\/asMacroLexicalContext()"},"abstract":[{"type":"text","text":"If this syntax node acts as a lexical context from the perspective"},{"type":"text","text":" "},{"type":"text","text":"of a macro, return a new syntax node based on this node that strips all"},{"type":"text","text":" "},{"text":"information that isn’t supposed to be exposed as a lexical context, such","type":"text"},{"text":" ","type":"text"},{"text":"as function bodies or the members of types\/extensions.","type":"text"}],"kind":"symbol","sections":[],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/VersionComponentSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/VersionComponentSyntax\/SyntaxProtocol-Implementations"]]},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asMacroLexicalContext"},{"text":"() -> ","kind":"text"},{"text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax"},{"text":"?","kind":"text"}]}],"kind":"declarations"},{"kind":"content","content":[{"anchor":"discussion","type":"heading","text":"Discussion","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Returns "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" for any syntax node that isn’t a lexical context."}]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/macrobuilder\/versioncomponentsyntax\/asmacrolexicalcontext()"]}],"metadata":{"externalID":"s:11SwiftSyntax0B8ProtocolP0aB6MacrosE21asMacroLexicalContextAA0B0VSgyF::SYNTHESIZED::s:11SwiftSyntax016VersionComponentB0V","title":"asMacroLexicalContext()","symbolKind":"method","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"asMacroLexicalContext","kind":"identifier"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"kind":"text","text":"?"}],"extendedModule":"SwiftSyntax","role":"symbol","modules":[{"relatedModules":["SwiftSyntax"],"name":"MacroBuilder"}]},"schemaVersion":{"minor":3,"major":0,"patch":0},"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/Syntax":{"abstract":[{"type":"text","text":"A Syntax node represents a tree of nodes with tokens at the leaves."},{"text":" ","type":"text"},{"type":"text","text":"Each node has accessors for its known children, and allows efficient"},{"text":" ","type":"text"},{"text":"iteration over the children through its ","type":"text"},{"type":"codeVoice","code":"children"},{"text":" property.","type":"text"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Syntax"}],"url":"\/documentation\/macrobuilder\/syntax","title":"Syntax","type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Syntax","kind":"identifier"}],"kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/VersionComponentSyntax":{"title":"VersionComponentSyntax","type":"topic","kind":"symbol","url":"\/documentation\/macrobuilder\/versioncomponentsyntax","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/VersionComponentSyntax","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"VersionComponentSyntax","kind":"identifier"}],"navigatorTitle":[{"text":"VersionComponentSyntax","kind":"identifier"}],"role":"symbol","abstract":[{"text":"An element to represent a single component in a version, like ","type":"text"},{"type":"codeVoice","code":".1"},{"text":".","type":"text"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/VersionComponentSyntax/SyntaxProtocol-Implementations":{"role":"collectionGroup","abstract":[],"kind":"article","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/VersionComponentSyntax\/SyntaxProtocol-Implementations","title":"SyntaxProtocol Implementations","type":"topic","url":"\/documentation\/macrobuilder\/versioncomponentsyntax\/syntaxprotocol-implementations"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/VersionComponentSyntax/asMacroLexicalContext()":{"type":"topic","abstract":[{"type":"text","text":"If this syntax node acts as a lexical context from the perspective"},{"text":" ","type":"text"},{"type":"text","text":"of a macro, return a new syntax node based on this node that strips all"},{"type":"text","text":" "},{"text":"information that isn’t supposed to be exposed as a lexical context, such","type":"text"},{"type":"text","text":" "},{"text":"as function bodies or the members of types\/extensions.","type":"text"}],"url":"\/documentation\/macrobuilder\/versioncomponentsyntax\/asmacrolexicalcontext()","role":"symbol","kind":"symbol","title":"asMacroLexicalContext()","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/VersionComponentSyntax\/asMacroLexicalContext()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"asMacroLexicalContext"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax"},{"text":"?","kind":"text"}]}}}