{"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"asProtocol"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"text":": (any ","kind":"text"},{"text":"WithOptionalCodeBlockSyntax","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/WithOptionalCodeBlockSyntax","preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P"},{"text":").Type) -> (any ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/WithOptionalCodeBlockSyntax","text":"WithOptionalCodeBlockSyntax","kind":"typeIdentifier"},{"text":")?","kind":"text"}],"platforms":["macOS"]}]}],"abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithOptionalCodeBlockSyntax"},{"text":". Otherwise return ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/macrobuilder\/genericparameterlistsyntax\/asprotocol(_:)-2tp1s"]}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/GenericParameterListSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/GenericParameterListSyntax\/SyntaxProtocol-Implementations"]]},"metadata":{"extendedModule":"SwiftSyntax","role":"symbol","roleHeading":"Instance Method","symbolKind":"method","title":"asProtocol(_:)","modules":[{"relatedModules":["SwiftSyntax"],"name":"MacroBuilder"}],"externalID":"s:11SwiftSyntax0B8ProtocolPAAE02asC0yAA021WithOptionalCodeBlockB0_pSgAaE_pmF::SYNTHESIZED::s:11SwiftSyntax020GenericParameterListB0V","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"text":"((any ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P","text":"WithOptionalCodeBlockSyntax"},{"kind":"text","text":").Type) -> (any "},{"preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P","kind":"typeIdentifier","text":"WithOptionalCodeBlockSyntax"},{"text":")?","kind":"text"}]},"kind":"symbol","identifier":{"url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/GenericParameterListSyntax\/asProtocol(_:)-2tp1s","interfaceLanguage":"swift"},"sections":[],"schemaVersion":{"major":0,"patch":0,"minor":3},"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/WithOptionalCodeBlockSyntax":{"abstract":[],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"WithOptionalCodeBlockSyntax","kind":"identifier"}],"navigatorTitle":[{"text":"WithOptionalCodeBlockSyntax","kind":"identifier"}],"role":"symbol","url":"\/documentation\/macrobuilder\/withoptionalcodeblocksyntax","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/WithOptionalCodeBlockSyntax","type":"topic","title":"WithOptionalCodeBlockSyntax","kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/GenericParameterListSyntax/SyntaxProtocol-Implementations":{"url":"\/documentation\/macrobuilder\/genericparameterlistsyntax\/syntaxprotocol-implementations","title":"SyntaxProtocol Implementations","type":"topic","kind":"article","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/GenericParameterListSyntax\/SyntaxProtocol-Implementations","role":"collectionGroup"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/GenericParameterListSyntax":{"type":"topic","abstract":[],"kind":"symbol","role":"symbol","navigatorTitle":[{"text":"GenericParameterListSyntax","kind":"identifier"}],"url":"\/documentation\/macrobuilder\/genericparameterlistsyntax","title":"GenericParameterListSyntax","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"GenericParameterListSyntax"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/GenericParameterListSyntax"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/GenericParameterListSyntax/asProtocol(_:)-2tp1s":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/GenericParameterListSyntax\/asProtocol(_:)-2tp1s","role":"symbol","url":"\/documentation\/macrobuilder\/genericparameterlistsyntax\/asprotocol(_:)-2tp1s","kind":"symbol","title":"asProtocol(_:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"asProtocol"},{"kind":"text","text":"((any "},{"preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P","text":"WithOptionalCodeBlockSyntax","kind":"typeIdentifier"},{"text":").Type) -> (any ","kind":"text"},{"kind":"typeIdentifier","text":"WithOptionalCodeBlockSyntax","preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P"},{"kind":"text","text":")?"}],"abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"code":"WithOptionalCodeBlockSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}]}}}