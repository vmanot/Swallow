{"kind":"symbol","abstract":[{"text":"Converts the given specialized node to this type. Returns ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":" if the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"conversion is not possible."}],"metadata":{"fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"?(some "},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP","text":"SyntaxProtocol","kind":"typeIdentifier"},{"text":")","kind":"text"}],"externalID":"s:11SwiftSyntax015GenericArgumentB0VyACSgxhcAA0B8ProtocolRzlufc","roleHeading":"Initializer","symbolKind":"init","modules":[{"name":"MacroBuilder"}],"title":"init(_:)","role":"symbol"},"identifier":{"url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/GenericArgumentSyntax\/init(_:)-6n1ej","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"?("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"text":"node","kind":"internalParam"},{"text":": some ","kind":"text"},{"text":"SyntaxProtocol","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxProtocol"},{"text":")","kind":"text"}],"platforms":["macOS"]}],"kind":"declarations"}],"sections":[],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/GenericArgumentSyntax"]]},"schemaVersion":{"patch":0,"minor":3,"major":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/macrobuilder\/genericargumentsyntax\/init(_:)-6n1ej"]}],"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/GenericArgumentSyntax/init(_:)-6n1ej":{"kind":"symbol","abstract":[{"type":"text","text":"Converts the given specialized node to this type. Returns "},{"type":"codeVoice","code":"nil"},{"text":" if the","type":"text"},{"text":" ","type":"text"},{"text":"conversion is not possible.","type":"text"}],"type":"topic","title":"init(_:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/GenericArgumentSyntax\/init(_:)-6n1ej","url":"\/documentation\/macrobuilder\/genericargumentsyntax\/init(_:)-6n1ej","fragments":[{"text":"init","kind":"identifier"},{"text":"?(some ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP","text":"SyntaxProtocol"},{"kind":"text","text":")"}],"role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SyntaxProtocol":{"title":"SyntaxProtocol","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxProtocol","navigatorTitle":[{"text":"SyntaxProtocol","kind":"identifier"}],"abstract":[{"text":"Provide common functionality for specialized syntax nodes. Extend this","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"protocol to provide common functionality for all syntax nodes."}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"SyntaxProtocol","kind":"identifier"}],"type":"topic","role":"symbol","url":"\/documentation\/macrobuilder\/syntaxprotocol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/GenericArgumentSyntax":{"title":"GenericArgumentSyntax","abstract":[],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"GenericArgumentSyntax"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/GenericArgumentSyntax","kind":"symbol","url":"\/documentation\/macrobuilder\/genericargumentsyntax","navigatorTitle":[{"kind":"identifier","text":"GenericArgumentSyntax"}]}}}