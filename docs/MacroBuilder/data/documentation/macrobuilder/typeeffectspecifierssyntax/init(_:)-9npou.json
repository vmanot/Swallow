{"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"init"},{"text":"?<","kind":"text"},{"kind":"genericParameter","text":"S"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"node","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":"?) ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"SyntaxProtocol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxProtocol","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP"}],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"discussion","text":"Discussion","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"Returns "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" if the conversion isnâ€™t possible, or if the provided node is "},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/macrobuilder\/typeeffectspecifierssyntax\/init(_:)-9npou"]}],"identifier":{"url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TypeEffectSpecifiersSyntax\/init(_:)-9npou","interfaceLanguage":"swift"},"kind":"symbol","schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"abstract":[{"text":"Initializes a new instance of the conforming type from a given specialized syntax node.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TypeEffectSpecifiersSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TypeEffectSpecifiersSyntax\/SyntaxProtocol-Implementations"]]},"metadata":{"modules":[{"name":"MacroBuilder","relatedModules":["SwiftSyntax"]}],"title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"?<"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":"?)"}],"roleHeading":"Initializer","externalID":"s:11SwiftSyntax0B8ProtocolPAAEyxSgqd__SgcAaBRd__lufc::SYNTHESIZED::s:11SwiftSyntax020TypeEffectSpecifiersB0V","extendedModule":"SwiftSyntax","symbolKind":"init","role":"symbol"},"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SyntaxProtocol":{"title":"SyntaxProtocol","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxProtocol","navigatorTitle":[{"text":"SyntaxProtocol","kind":"identifier"}],"abstract":[{"text":"Provide common functionality for specialized syntax nodes. Extend this","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"protocol to provide common functionality for all syntax nodes."}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"SyntaxProtocol","kind":"identifier"}],"type":"topic","role":"symbol","url":"\/documentation\/macrobuilder\/syntaxprotocol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/TypeEffectSpecifiersSyntax/SyntaxProtocol-Implementations":{"abstract":[],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TypeEffectSpecifiersSyntax\/SyntaxProtocol-Implementations","type":"topic","url":"\/documentation\/macrobuilder\/typeeffectspecifierssyntax\/syntaxprotocol-implementations","role":"collectionGroup","title":"SyntaxProtocol Implementations","kind":"article"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/TypeEffectSpecifiersSyntax/init(_:)-9npou":{"url":"\/documentation\/macrobuilder\/typeeffectspecifierssyntax\/init(_:)-9npou","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TypeEffectSpecifiersSyntax\/init(_:)-9npou","fragments":[{"kind":"identifier","text":"init"},{"text":"?<","kind":"text"},{"text":"S","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"S","kind":"typeIdentifier"},{"kind":"text","text":"?)"}],"title":"init(_:)","kind":"symbol","type":"topic","role":"symbol","abstract":[{"type":"text","text":"Initializes a new instance of the conforming type from a given specialized syntax node."}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/TypeEffectSpecifiersSyntax":{"abstract":[],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TypeEffectSpecifiersSyntax","type":"topic","url":"\/documentation\/macrobuilder\/typeeffectspecifierssyntax","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"TypeEffectSpecifiersSyntax"}],"title":"TypeEffectSpecifiersSyntax","navigatorTitle":[{"kind":"identifier","text":"TypeEffectSpecifiersSyntax"}],"kind":"symbol"}}}