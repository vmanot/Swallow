{"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"?<"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"node"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":"?) "},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxProtocol","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP","kind":"typeIdentifier","text":"SyntaxProtocol"}],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"content","content":[{"anchor":"discussion","text":"Discussion","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Returns "},{"code":"nil","type":"codeVoice"},{"text":" if the conversion isnâ€™t possible, or if the provided node is ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."}]}]}],"sections":[],"metadata":{"externalID":"s:11SwiftSyntax0B8ProtocolPAAEyxSgqd__SgcAaBRd__lufc::SYNTHESIZED::s:11SwiftSyntax010SwitchCaseB0V","fragments":[{"text":"init","kind":"identifier"},{"text":"?<","kind":"text"},{"text":"S","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"S","kind":"typeIdentifier"},{"text":"?)","kind":"text"}],"symbolKind":"init","modules":[{"name":"MacroBuilder","relatedModules":["SwiftSyntax"]}],"extendedModule":"SwiftSyntax","title":"init(_:)","roleHeading":"Initializer","role":"symbol"},"identifier":{"url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SwitchCaseSyntax\/init(_:)-8ey6x","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SwitchCaseSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SwitchCaseSyntax\/SyntaxProtocol-Implementations"]]},"abstract":[{"type":"text","text":"Initializes a new instance of the conforming type from a given specialized syntax node."}],"schemaVersion":{"patch":0,"minor":3,"major":0},"kind":"symbol","variants":[{"paths":["\/documentation\/macrobuilder\/switchcasesyntax\/init(_:)-8ey6x"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SyntaxProtocol":{"title":"SyntaxProtocol","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxProtocol","navigatorTitle":[{"text":"SyntaxProtocol","kind":"identifier"}],"abstract":[{"text":"Provide common functionality for specialized syntax nodes. Extend this","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"protocol to provide common functionality for all syntax nodes."}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"SyntaxProtocol","kind":"identifier"}],"type":"topic","role":"symbol","url":"\/documentation\/macrobuilder\/syntaxprotocol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SwitchCaseSyntax":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SwitchCaseSyntax","url":"\/documentation\/macrobuilder\/switchcasesyntax","kind":"symbol","title":"SwitchCaseSyntax","type":"topic","abstract":[],"role":"symbol","navigatorTitle":[{"text":"SwitchCaseSyntax","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SwitchCaseSyntax"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SwitchCaseSyntax/init(_:)-8ey6x":{"role":"symbol","url":"\/documentation\/macrobuilder\/switchcasesyntax\/init(_:)-8ey6x","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SwitchCaseSyntax\/init(_:)-8ey6x","type":"topic","abstract":[{"text":"Initializes a new instance of the conforming type from a given specialized syntax node.","type":"text"}],"kind":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"?<"},{"text":"S","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":"?)"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SwitchCaseSyntax/SyntaxProtocol-Implementations":{"url":"\/documentation\/macrobuilder\/switchcasesyntax\/syntaxprotocol-implementations","role":"collectionGroup","type":"topic","title":"SyntaxProtocol Implementations","abstract":[],"kind":"article","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SwitchCaseSyntax\/SyntaxProtocol-Implementations"}}}