{"metadata":{"roleHeading":"Initializer","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:18SwiftSyntaxBuilder0B10NodeStringV","text":"SyntaxNodeString","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"statementsBuilder","kind":"externalParam"},{"text":": () ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax017CodeBlockItemListB0V","text":"CodeBlockItemListSyntax"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"}],"title":"init(_:statementsBuilder:)","modules":[{"relatedModules":["SwiftSyntax"],"name":"MacroBuilder"}],"extendedModule":"SwiftSyntax","role":"symbol","externalID":"s:11SwiftSyntax010SwitchCaseB0V0aB7BuilderE_010statementsE0AcD0B10NodeStringV_AA017CodeBlockItemListB0VyKXEtKcfc","symbolKind":"init"},"identifier":{"url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SwitchCaseSyntax\/init(_:statementsBuilder:)","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"kind":"symbol","abstract":[{"text":"Constructs a case item where ","type":"text"},{"type":"codeVoice","code":"header"},{"text":" includes the text between the ","type":"text"},{"type":"codeVoice","code":"case"},{"text":" keyword and the ","type":"text"},{"type":"codeVoice","code":":"},{"type":"text","text":" (both inclusive) and "},{"type":"codeVoice","code":"statementsBuilder"},{"type":"text","text":" can be used to build the statements inside the case item."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"init","kind":"keyword"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"text":"header","kind":"internalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:18SwiftSyntaxBuilder0B10NodeStringV","kind":"typeIdentifier","text":"SyntaxNodeString","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxNodeString"},{"kind":"text","text":", "},{"kind":"attribute","text":"@"},{"kind":"attribute","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/CodeBlockItemListBuilder","preciseIdentifier":"s:18SwiftSyntaxBuilder017CodeBlockItemListC0V","text":"CodeBlockItemListBuilder"},{"kind":"text","text":" "},{"text":"statementsBuilder","kind":"externalParam"},{"kind":"text","text":": () "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/CodeBlockItemListSyntax","preciseIdentifier":"s:11SwiftSyntax017CodeBlockItemListB0V","text":"CodeBlockItemListSyntax","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"}],"languages":["swift"],"platforms":["macOS"]}]},{"content":[{"text":"Discussion","level":2,"anchor":"discussion","type":"heading"},{"inlineContent":[{"text":"For example, you can construct","type":"text"}],"type":"paragraph"},{"code":["default:","  return nil"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"using this call","type":"text"}]},{"code":["try SwitchCaseSyntax(\"default:\") {","  StmtSyntax(\"return\")","}"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"type":"text","text":"Throws an error if "},{"code":"header","type":"codeVoice"},{"type":"text","text":" does not start a switch case item. E.g. if calling "},{"code":"try SwitchCaseSyntax(\"func foo\") {}","type":"codeVoice"}],"type":"paragraph"}],"kind":"content"}],"variants":[{"paths":["\/documentation\/macrobuilder\/switchcasesyntax\/init(_:statementsbuilder:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SwitchCaseSyntax"]]},"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SwitchCaseSyntax/init(_:statementsBuilder:)":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SwitchCaseSyntax\/init(_:statementsBuilder:)","url":"\/documentation\/macrobuilder\/switchcasesyntax\/init(_:statementsbuilder:)","role":"symbol","abstract":[{"type":"text","text":"Constructs a case item where "},{"code":"header","type":"codeVoice"},{"type":"text","text":" includes the text between the "},{"code":"case","type":"codeVoice"},{"type":"text","text":" keyword and the "},{"type":"codeVoice","code":":"},{"type":"text","text":" (both inclusive) and "},{"code":"statementsBuilder","type":"codeVoice"},{"text":" can be used to build the statements inside the case item.","type":"text"}],"kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"text":"SyntaxNodeString","preciseIdentifier":"s:18SwiftSyntaxBuilder0B10NodeStringV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"statementsBuilder"},{"text":": () ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"CodeBlockItemListSyntax","preciseIdentifier":"s:11SwiftSyntax017CodeBlockItemListB0V","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"}],"title":"init(_:statementsBuilder:)","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SwitchCaseSyntax":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SwitchCaseSyntax","url":"\/documentation\/macrobuilder\/switchcasesyntax","kind":"symbol","title":"SwitchCaseSyntax","type":"topic","abstract":[],"role":"symbol","navigatorTitle":[{"text":"SwitchCaseSyntax","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SwitchCaseSyntax"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/CodeBlockItemListBuilder":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"CodeBlockItemListBuilder","kind":"identifier"}],"url":"\/documentation\/macrobuilder\/codeblockitemlistbuilder","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/CodeBlockItemListBuilder","navigatorTitle":[{"text":"CodeBlockItemListBuilder","kind":"identifier"}],"type":"topic","role":"symbol","kind":"symbol","title":"CodeBlockItemListBuilder"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SyntaxNodeString":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxNodeString","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"SyntaxNodeString","kind":"identifier"}],"navigatorTitle":[{"text":"SyntaxNodeString","kind":"identifier"}],"kind":"symbol","title":"SyntaxNodeString","role":"symbol","type":"topic","abstract":[{"type":"text","text":"A type that is expressible by string interpolation the same way that syntax"},{"type":"text","text":" "},{"type":"text","text":"nodes are, but instead of producing a node, it stores the string interpolation"},{"text":" ","type":"text"},{"type":"text","text":"text."}],"url":"\/documentation\/macrobuilder\/syntaxnodestring"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/CodeBlockItemListSyntax":{"navigatorTitle":[{"text":"CodeBlockItemListSyntax","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/CodeBlockItemListSyntax","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CodeBlockItemListSyntax"}],"url":"\/documentation\/macrobuilder\/codeblockitemlistsyntax","type":"topic","abstract":[],"role":"symbol","title":"CodeBlockItemListSyntax","kind":"symbol"}}}