{"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SpecializeAvailabilityArgumentSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SpecializeAvailabilityArgumentSyntax\/Hashable-Implementations"]]},"kind":"symbol","abstract":[{"text":"Memoize the result of the execution of a predicate for the ","type":"text"},{"type":"codeVoice","code":"Hashable"},{"text":" receiver.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"memoize","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"text":"with","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"cache"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"MemoizationCache"},{"kind":"text","text":"? = MemoizationCache.shared, "},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"keyPath"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s7KeyPathC","text":"KeyPath","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"languages":["swift"],"platforms":["macOS"]}]},{"parameters":[{"name":"cache","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The shared cache to use; "},{"code":"nil","type":"codeVoice"},{"text":" disables caching and simply returns the result of ","type":"text"},{"type":"codeVoice","code":"predicate"},{"type":"text","text":" directly"}]}]}],"kind":"parameters"},{"content":[{"level":2,"text":"Return Value","anchor":"return-value","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The result from the "},{"code":"predicate","type":"codeVoice"},{"type":"text","text":", either a previously cached value, or the result of executing the "},{"type":"codeVoice","code":"predicate"}]}],"kind":"content"},{"content":[{"level":2,"text":"Discussion","type":"heading","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"The source subject (the receiver) and the result object (the return value) should be value types, and the ","type":"text"},{"code":"predicate","type":"codeVoice"},{"type":"text","text":" must be a "},{"type":"emphasis","inlineContent":[{"text":"pure","type":"text"}]},{"text":" function that captures ","type":"text"},{"inlineContent":[{"type":"text","text":"no state"}],"type":"emphasis"},{"type":"text","text":", in that:"}]},{"type":"orderedList","items":[{"content":[{"inlineContent":[{"text":"Its return value is the same for the same arguments (no variation with local static variables, non-local variables, mutable reference arguments or input streams from I\/O devices).","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Its evaluation has no side effects (no mutation of local static variables, non-local variables, mutable reference arguments or I\/O streams).","type":"text"}],"type":"paragraph"}]}]},{"name":"Note","content":[{"inlineContent":[{"type":"text","text":"The calling functionâ€™s source file and line are used as the cache key, so care must be taken to avoid having multiple calls to "},{"type":"codeVoice","code":"memoize"},{"type":"text","text":" occur from a single line of source code."}],"type":"paragraph"}],"type":"aside","style":"note"},{"style":"note","type":"aside","name":"Throws","content":[{"inlineContent":[{"text":"Re-Throws and errors from ","type":"text"},{"code":"predicate","type":"codeVoice"}],"type":"paragraph"}]},{"name":"Complexity","content":[{"inlineContent":[{"text":"Around O(1) for a successful cache hit, otherwise the complexity of the keyPath execution","type":"text"}],"type":"paragraph"}],"style":"note","type":"aside"}],"kind":"content"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SpecializeAvailabilityArgumentSyntax\/memoize(with:_:)-7ron4"},"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"memoize","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"MemoizationCache"},{"kind":"text","text":"?, "},{"text":"KeyPath","preciseIdentifier":"s:s7KeyPathC","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"T"}],"symbolKind":"method","modules":[{"name":"MacroBuilder","relatedModules":["Swift"]}],"externalID":"s:SH7SwallowE7memoize4with_qd__AA6_CacheCyAA011MemoizationD3KeyVypGSg_s0F4PathCyxqd__GtlF::SYNTHESIZED::s:11SwiftSyntax030SpecializeAvailabilityArgumentB0V","extendedModule":"Swift","role":"symbol","title":"memoize(with:_:)","roleHeading":"Instance Method"},"sections":[],"schemaVersion":{"minor":3,"patch":0,"major":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/macrobuilder\/specializeavailabilityargumentsyntax\/memoize(with:_:)-7ron4"]}],"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SpecializeAvailabilityArgumentSyntax":{"kind":"symbol","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SpecializeAvailabilityArgumentSyntax"}],"title":"SpecializeAvailabilityArgumentSyntax","abstract":[{"text":"The availability argument for the _specialize attribute","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"SpecializeAvailabilityArgumentSyntax"}],"url":"\/documentation\/macrobuilder\/specializeavailabilityargumentsyntax","type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SpecializeAvailabilityArgumentSyntax"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SpecializeAvailabilityArgumentSyntax/memoize(with:_:)-7ron4":{"role":"symbol","url":"\/documentation\/macrobuilder\/specializeavailabilityargumentsyntax\/memoize(with:_:)-7ron4","kind":"symbol","abstract":[{"type":"text","text":"Memoize the result of the execution of a predicate for the "},{"type":"codeVoice","code":"Hashable"},{"text":" receiver.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"memoize","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"with"},{"text":": ","kind":"text"},{"text":"MemoizationCache","kind":"typeIdentifier"},{"kind":"text","text":"?, "},{"kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC","text":"KeyPath"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"T","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"title":"memoize(with:_:)","type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SpecializeAvailabilityArgumentSyntax\/memoize(with:_:)-7ron4"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SpecializeAvailabilityArgumentSyntax/Hashable-Implementations":{"kind":"article","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SpecializeAvailabilityArgumentSyntax\/Hashable-Implementations","title":"Hashable Implementations","url":"\/documentation\/macrobuilder\/specializeavailabilityargumentsyntax\/hashable-implementations","type":"topic","abstract":[],"role":"collectionGroup"}}}