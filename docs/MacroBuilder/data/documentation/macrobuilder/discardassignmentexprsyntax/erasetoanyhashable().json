{"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DiscardAssignmentExprSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DiscardAssignmentExprSyntax\/Hashable-Implementations"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"eraseToAnyHashable","kind":"identifier"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"AnyHashable","preciseIdentifier":"s:s11AnyHashableV"}]}]}],"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"text":"Wraps this ","type":"text"},{"code":"Hashable","type":"codeVoice"},{"type":"text","text":" with a type-eraser."}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DiscardAssignmentExprSyntax\/eraseToAnyHashable()"},"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"eraseToAnyHashable"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:s11AnyHashableV","text":"AnyHashable","kind":"typeIdentifier"}],"modules":[{"name":"MacroBuilder","relatedModules":["Swift"]}],"title":"eraseToAnyHashable()","roleHeading":"Instance Method","externalID":"s:SH7SwallowE18eraseToAnyHashables0dE0VyF::SYNTHESIZED::s:11SwiftSyntax021DiscardAssignmentExprB0V","role":"symbol","extendedModule":"Swift","symbolKind":"method"},"variants":[{"paths":["\/documentation\/macrobuilder\/discardassignmentexprsyntax\/erasetoanyhashable()"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/DiscardAssignmentExprSyntax/Hashable-Implementations":{"abstract":[],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DiscardAssignmentExprSyntax\/Hashable-Implementations","type":"topic","role":"collectionGroup","title":"Hashable Implementations","kind":"article","url":"\/documentation\/macrobuilder\/discardassignmentexprsyntax\/hashable-implementations"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/DiscardAssignmentExprSyntax":{"abstract":[{"type":"text","text":"A "},{"code":"_","type":"codeVoice"},{"text":" that discards a value inside an assignment.","type":"text"}],"url":"\/documentation\/macrobuilder\/discardassignmentexprsyntax","navigatorTitle":[{"text":"DiscardAssignmentExprSyntax","kind":"identifier"}],"title":"DiscardAssignmentExprSyntax","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DiscardAssignmentExprSyntax","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"DiscardAssignmentExprSyntax"}],"type":"topic","kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/DiscardAssignmentExprSyntax/eraseToAnyHashable()":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"eraseToAnyHashable"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s11AnyHashableV","text":"AnyHashable"}],"kind":"symbol","title":"eraseToAnyHashable()","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DiscardAssignmentExprSyntax\/eraseToAnyHashable()","abstract":[{"text":"Wraps this ","type":"text"},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":" with a type-eraser."}],"role":"symbol","type":"topic","url":"\/documentation\/macrobuilder\/discardassignmentexprsyntax\/erasetoanyhashable()"}}}