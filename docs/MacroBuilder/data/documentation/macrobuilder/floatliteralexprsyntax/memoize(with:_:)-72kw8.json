{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/FloatLiteralExprSyntax\/memoize(with:_:)-72kw8"},"kind":"symbol","variants":[{"paths":["\/documentation\/macrobuilder\/floatliteralexprsyntax\/memoize(with:_:)-72kw8"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/FloatLiteralExprSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/FloatLiteralExprSyntax\/Hashable-Implementations"]]},"sections":[],"metadata":{"symbolKind":"method","roleHeading":"Instance Method","modules":[{"relatedModules":["Swift"],"name":"MacroBuilder"}],"externalID":"s:SH7SwallowE7memoize4with_qd__AA6_CacheCyAA011MemoizationD3KeyVypGSg_s0F4PathCyxqd__GtlF::SYNTHESIZED::s:11SwiftSyntax016FloatLiteralExprB0V","role":"symbol","title":"memoize(with:_:)","extendedModule":"Swift","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"memoize","kind":"identifier"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"text":"MemoizationCache","kind":"typeIdentifier"},{"kind":"text","text":"?, "},{"preciseIdentifier":"s:s7KeyPathC","text":"KeyPath","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">) -> "},{"text":"T","kind":"typeIdentifier"}]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"memoize"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"with"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"cache"},{"text":": ","kind":"text"},{"text":"MemoizationCache","kind":"typeIdentifier"},{"text":"? = MemoizationCache.shared, ","kind":"text"},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"keyPath","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"KeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","text":"T"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"name":"cache","content":[{"inlineContent":[{"type":"text","text":"The shared cache to use; "},{"code":"nil","type":"codeVoice"},{"type":"text","text":" disables caching and simply returns the result of "},{"type":"codeVoice","code":"predicate"},{"type":"text","text":" directly"}],"type":"paragraph"}]}]},{"kind":"content","content":[{"level":2,"type":"heading","anchor":"return-value","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The result from the "},{"code":"predicate","type":"codeVoice"},{"text":", either a previously cached value, or the result of executing the ","type":"text"},{"type":"codeVoice","code":"predicate"}]}]},{"kind":"content","content":[{"level":2,"text":"Discussion","type":"heading","anchor":"discussion"},{"inlineContent":[{"text":"The source subject (the receiver) and the result object (the return value) should be value types, and the ","type":"text"},{"type":"codeVoice","code":"predicate"},{"type":"text","text":" must be a "},{"type":"emphasis","inlineContent":[{"type":"text","text":"pure"}]},{"text":" function that captures ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"no state"}]},{"text":", in that:","type":"text"}],"type":"paragraph"},{"type":"orderedList","items":[{"content":[{"inlineContent":[{"text":"Its return value is the same for the same arguments (no variation with local static variables, non-local variables, mutable reference arguments or input streams from I\/O devices).","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Its evaluation has no side effects (no mutation of local static variables, non-local variables, mutable reference arguments or I\/O streams)."}]}]}]},{"type":"aside","content":[{"inlineContent":[{"type":"text","text":"The calling functionâ€™s source file and line are used as the cache key, so care must be taken to avoid having multiple calls to "},{"type":"codeVoice","code":"memoize"},{"text":" occur from a single line of source code.","type":"text"}],"type":"paragraph"}],"style":"note","name":"Note"},{"name":"Throws","type":"aside","style":"note","content":[{"inlineContent":[{"text":"Re-Throws and errors from ","type":"text"},{"code":"predicate","type":"codeVoice"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Around O(1) for a successful cache hit, otherwise the complexity of the keyPath execution"}]}],"name":"Complexity","type":"aside","style":"note"}]}],"abstract":[{"text":"Memoize the result of the execution of a predicate for the ","type":"text"},{"type":"codeVoice","code":"Hashable"},{"text":" receiver.","type":"text"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/FloatLiteralExprSyntax/Hashable-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/FloatLiteralExprSyntax\/Hashable-Implementations","role":"collectionGroup","title":"Hashable Implementations","url":"\/documentation\/macrobuilder\/floatliteralexprsyntax\/hashable-implementations","kind":"article","type":"topic","abstract":[]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/FloatLiteralExprSyntax/memoize(with:_:)-72kw8":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/FloatLiteralExprSyntax\/memoize(with:_:)-72kw8","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"memoize","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"with","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"MemoizationCache","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"KeyPath","preciseIdentifier":"s:s7KeyPathC","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"T"}],"url":"\/documentation\/macrobuilder\/floatliteralexprsyntax\/memoize(with:_:)-72kw8","type":"topic","abstract":[{"type":"text","text":"Memoize the result of the execution of a predicate for the "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":" receiver."}],"title":"memoize(with:_:)","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/FloatLiteralExprSyntax":{"url":"\/documentation\/macrobuilder\/floatliteralexprsyntax","navigatorTitle":[{"kind":"identifier","text":"FloatLiteralExprSyntax"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/FloatLiteralExprSyntax","abstract":[],"kind":"symbol","title":"FloatLiteralExprSyntax","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"FloatLiteralExprSyntax","kind":"identifier"}],"role":"symbol","type":"topic"}}}