{"kind":"symbol","variants":[{"paths":["\/documentation\/macrobuilder\/differentiabilitywithrespecttoargumentsyntax\/allmacrolexicalcontexts(enclosingsyntax:)"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"title":"allMacroLexicalContexts(enclosingSyntax:)","extendedModule":"SwiftSyntax","symbolKind":"method","modules":[{"name":"MacroBuilder","relatedModules":["SwiftSyntax"]}],"externalID":"s:11SwiftSyntax0B8ProtocolP0aB6MacrosE23allMacroLexicalContexts09enclosingB0SayAA0B0VGAHSgAHXE_tF::SYNTHESIZED::s:11SwiftSyntax038DifferentiabilityWithRespectToArgumentB0V","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"allMacroLexicalContexts","kind":"identifier"},{"kind":"text","text":"("},{"text":"enclosingSyntax","kind":"externalParam"},{"kind":"text","text":": ("},{"text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax"},{"text":"?) -> [","kind":"text"},{"kind":"typeIdentifier","text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"kind":"text","text":"]"}],"roleHeading":"Instance Method"},"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"allMacroLexicalContexts"},{"text":"(","kind":"text"},{"text":"enclosingSyntax","kind":"externalParam"},{"kind":"text","text":": ("},{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Syntax","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"kind":"text","text":"? = { _ in nil }) -> ["},{"preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier","text":"Syntax","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax"},{"kind":"text","text":"]"}]}]},{"parameters":[{"name":"enclosingSyntax","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Provides a parent node when the operation"},{"text":" ","type":"text"},{"type":"text","text":"has reached the outermost syntax node (i.e., it has no parent), allowing"},{"text":" ","type":"text"},{"text":"the caller to provide a new syntax node that can continue the walk","type":"text"},{"text":" ","type":"text"},{"text":"to collect additional lexical contexts, e.g., from outer macro","type":"text"},{"type":"text","text":" "},{"type":"text","text":"expansions."}]}]}],"kind":"parameters"},{"content":[{"anchor":"return-value","type":"heading","level":2,"text":"Return Value"},{"inlineContent":[{"text":"The array of enclosing lexical contexts.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DifferentiabilityWithRespectToArgumentSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DifferentiabilityWithRespectToArgumentSyntax\/SyntaxProtocol-Implementations"]]},"identifier":{"url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DifferentiabilityWithRespectToArgumentSyntax\/allMacroLexicalContexts(enclosingSyntax:)","interfaceLanguage":"swift"},"abstract":[{"text":"Return an array of enclosing lexical contexts for the purpose of macros,","type":"text"},{"text":" ","type":"text"},{"text":"from the innermost enclosing lexical context (first in the array) to the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"outermost. If this syntax node itself is a lexical context, it will be"},{"text":" ","type":"text"},{"text":"the innermost lexical context.","type":"text"}],"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/DifferentiabilityWithRespectToArgumentSyntax/allMacroLexicalContexts(enclosingSyntax:)":{"url":"\/documentation\/macrobuilder\/differentiabilitywithrespecttoargumentsyntax\/allmacrolexicalcontexts(enclosingsyntax:)","abstract":[{"text":"Return an array of enclosing lexical contexts for the purpose of macros,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"from the innermost enclosing lexical context (first in the array) to the"},{"text":" ","type":"text"},{"type":"text","text":"outermost. If this syntax node itself is a lexical context, it will be"},{"text":" ","type":"text"},{"type":"text","text":"the innermost lexical context."}],"type":"topic","title":"allMacroLexicalContexts(enclosingSyntax:)","kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"allMacroLexicalContexts","kind":"identifier"},{"text":"(","kind":"text"},{"text":"enclosingSyntax","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"text":"?) -> [","kind":"text"},{"text":"Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"text":"]","kind":"text"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DifferentiabilityWithRespectToArgumentSyntax\/allMacroLexicalContexts(enclosingSyntax:)"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/DifferentiabilityWithRespectToArgumentSyntax/SyntaxProtocol-Implementations":{"abstract":[],"role":"collectionGroup","type":"topic","title":"SyntaxProtocol Implementations","kind":"article","url":"\/documentation\/macrobuilder\/differentiabilitywithrespecttoargumentsyntax\/syntaxprotocol-implementations","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DifferentiabilityWithRespectToArgumentSyntax\/SyntaxProtocol-Implementations"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/DifferentiabilityWithRespectToArgumentSyntax":{"type":"topic","url":"\/documentation\/macrobuilder\/differentiabilitywithrespecttoargumentsyntax","abstract":[{"text":"A clause containing differentiability parameters.","type":"text"}],"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DifferentiabilityWithRespectToArgumentSyntax","kind":"symbol","title":"DifferentiabilityWithRespectToArgumentSyntax","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"DifferentiabilityWithRespectToArgumentSyntax"}],"navigatorTitle":[{"kind":"identifier","text":"DifferentiabilityWithRespectToArgumentSyntax"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/Syntax":{"abstract":[{"type":"text","text":"A Syntax node represents a tree of nodes with tokens at the leaves."},{"text":" ","type":"text"},{"type":"text","text":"Each node has accessors for its known children, and allows efficient"},{"text":" ","type":"text"},{"text":"iteration over the children through its ","type":"text"},{"type":"codeVoice","code":"children"},{"text":" property.","type":"text"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Syntax"}],"url":"\/documentation\/macrobuilder\/syntax","title":"Syntax","type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Syntax","kind":"identifier"}],"kind":"symbol"}}}