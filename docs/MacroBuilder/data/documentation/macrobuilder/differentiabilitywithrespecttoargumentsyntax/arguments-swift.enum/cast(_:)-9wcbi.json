{"schemaVersion":{"minor":3,"major":0,"patch":0},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DifferentiabilityWithRespectToArgumentSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/SyntaxProtocol-Implementations"]]},"abstract":[{"text":"Force-casts the current syntax node to its own type.","type":"text"}],"variants":[{"paths":["\/documentation\/macrobuilder\/differentiabilitywithrespecttoargumentsyntax\/arguments-swift.enum\/cast(_:)-9wcbi"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/cast(_:)-9wcbi","interfaceLanguage":"swift"},"deprecationSummary":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This cast will always succeed"}]}],"metadata":{"symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"cast"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"text":".Type) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"platforms":[],"roleHeading":"Instance Method","modules":[{"name":"MacroBuilder","relatedModules":["SwiftSyntax"]}],"externalID":"s:11SwiftSyntax0B8ProtocolPAAE4castyxxmF::SYNTHESIZED::s:11SwiftSyntax038DifferentiabilityWithRespectToArgumentB0V9ArgumentsO","extendedModule":"SwiftSyntax","role":"symbol","title":"cast(_:)"},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"cast"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"syntaxType","kind":"internalParam"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":".Type) -> "},{"text":"Self","kind":"typeIdentifier"}]}],"kind":"declarations"},{"kind":"content","content":[{"text":"Return Value","type":"heading","level":2,"anchor":"return-value"},{"type":"paragraph","inlineContent":[{"text":"The current syntax node.","type":"text"}]}]},{"kind":"content","content":[{"anchor":"discussion","type":"heading","text":"Discussion","level":2},{"name":"Note","type":"aside","style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This method overloads the general "},{"type":"codeVoice","code":"cast"},{"type":"text","text":" method and is marked as deprecated to produce a warning,"},{"type":"text","text":" "},{"type":"text","text":"informing the user that the cast will always succeed."}]}]}]}],"kind":"symbol","sections":[],"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/DifferentiabilityWithRespectToArgumentSyntax/Arguments-swift.enum/cast(_:)-9wcbi":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"cast","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","text":"Self"}],"deprecated":true,"type":"topic","kind":"symbol","url":"\/documentation\/macrobuilder\/differentiabilitywithrespecttoargumentsyntax\/arguments-swift.enum\/cast(_:)-9wcbi","abstract":[{"type":"text","text":"Force-casts the current syntax node to its own type."}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/cast(_:)-9wcbi","title":"cast(_:)"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/DifferentiabilityWithRespectToArgumentSyntax/Arguments-swift.enum":{"role":"symbol","kind":"symbol","abstract":[],"type":"topic","url":"\/documentation\/macrobuilder\/differentiabilitywithrespecttoargumentsyntax\/arguments-swift.enum","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"Arguments","kind":"identifier"}],"navigatorTitle":[{"text":"Arguments","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum","title":"DifferentiabilityWithRespectToArgumentSyntax.Arguments"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/DifferentiabilityWithRespectToArgumentSyntax":{"type":"topic","url":"\/documentation\/macrobuilder\/differentiabilitywithrespecttoargumentsyntax","abstract":[{"text":"A clause containing differentiability parameters.","type":"text"}],"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DifferentiabilityWithRespectToArgumentSyntax","kind":"symbol","title":"DifferentiabilityWithRespectToArgumentSyntax","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"DifferentiabilityWithRespectToArgumentSyntax"}],"navigatorTitle":[{"kind":"identifier","text":"DifferentiabilityWithRespectToArgumentSyntax"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/DifferentiabilityWithRespectToArgumentSyntax/Arguments-swift.enum/SyntaxProtocol-Implementations":{"kind":"article","role":"collectionGroup","title":"SyntaxProtocol Implementations","abstract":[],"url":"\/documentation\/macrobuilder\/differentiabilitywithrespecttoargumentsyntax\/arguments-swift.enum\/syntaxprotocol-implementations","type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DifferentiabilityWithRespectToArgumentSyntax\/Arguments-swift.enum\/SyntaxProtocol-Implementations"}}}