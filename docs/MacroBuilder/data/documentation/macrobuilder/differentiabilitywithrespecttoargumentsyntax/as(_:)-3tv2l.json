{"identifier":{"url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DifferentiabilityWithRespectToArgumentSyntax\/as(_:)-3tv2l","interfaceLanguage":"swift"},"metadata":{"externalID":"s:11SwiftSyntax0B8ProtocolPAAE2asyqd__Sgqd__mAaBRd__lF::SYNTHESIZED::s:11SwiftSyntax038DifferentiabilityWithRespectToArgumentB0V","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"`as`"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"S"},{"text":">(","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"extendedModule":"SwiftSyntax","roleHeading":"Instance Method","symbolKind":"method","role":"symbol","title":"as(_:)","modules":[{"name":"MacroBuilder","relatedModules":["SwiftSyntax"]}]},"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"type":"text","text":"Attempts to cast the current syntax node to a given specialized syntax type."}],"variants":[{"paths":["\/documentation\/macrobuilder\/differentiabilitywithrespecttoargumentsyntax\/as(_:)-3tv2l"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"`as`"},{"kind":"text","text":"<"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"syntaxType"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"S"},{"text":".Type) -> ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":"? ","kind":"text"},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"text":"SyntaxProtocol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxProtocol","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP"}],"platforms":["macOS"]}],"kind":"declarations"},{"content":[{"text":"Return Value","level":2,"type":"heading","anchor":"return-value"},{"inlineContent":[{"text":"An instance of the specialized type, or ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":" if the cast fails.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"sections":[],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DifferentiabilityWithRespectToArgumentSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DifferentiabilityWithRespectToArgumentSyntax\/SyntaxProtocol-Implementations"]]},"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/DifferentiabilityWithRespectToArgumentSyntax/as(_:)-3tv2l":{"abstract":[{"type":"text","text":"Attempts to cast the current syntax node to a given specialized syntax type."}],"url":"\/documentation\/macrobuilder\/differentiabilitywithrespecttoargumentsyntax\/as(_:)-3tv2l","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"`as`","kind":"identifier"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"S"},{"text":".Type) -> ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"type":"topic","role":"symbol","title":"as(_:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DifferentiabilityWithRespectToArgumentSyntax\/as(_:)-3tv2l"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/DifferentiabilityWithRespectToArgumentSyntax/SyntaxProtocol-Implementations":{"abstract":[],"role":"collectionGroup","type":"topic","title":"SyntaxProtocol Implementations","kind":"article","url":"\/documentation\/macrobuilder\/differentiabilitywithrespecttoargumentsyntax\/syntaxprotocol-implementations","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DifferentiabilityWithRespectToArgumentSyntax\/SyntaxProtocol-Implementations"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SyntaxProtocol":{"title":"SyntaxProtocol","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxProtocol","navigatorTitle":[{"text":"SyntaxProtocol","kind":"identifier"}],"abstract":[{"text":"Provide common functionality for specialized syntax nodes. Extend this","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"protocol to provide common functionality for all syntax nodes."}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"SyntaxProtocol","kind":"identifier"}],"type":"topic","role":"symbol","url":"\/documentation\/macrobuilder\/syntaxprotocol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/DifferentiabilityWithRespectToArgumentSyntax":{"type":"topic","url":"\/documentation\/macrobuilder\/differentiabilitywithrespecttoargumentsyntax","abstract":[{"text":"A clause containing differentiability parameters.","type":"text"}],"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DifferentiabilityWithRespectToArgumentSyntax","kind":"symbol","title":"DifferentiabilityWithRespectToArgumentSyntax","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"DifferentiabilityWithRespectToArgumentSyntax"}],"navigatorTitle":[{"kind":"identifier","text":"DifferentiabilityWithRespectToArgumentSyntax"}]}}}