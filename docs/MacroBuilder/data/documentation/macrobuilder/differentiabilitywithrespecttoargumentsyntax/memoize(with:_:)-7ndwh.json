{"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DifferentiabilityWithRespectToArgumentSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DifferentiabilityWithRespectToArgumentSyntax\/Hashable-Implementations"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DifferentiabilityWithRespectToArgumentSyntax\/memoize(with:_:)-7ndwh"},"kind":"symbol","sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/macrobuilder\/differentiabilitywithrespecttoargumentsyntax\/memoize(with:_:)-7ndwh"]}],"abstract":[{"text":"Memoize the result of the execution of a predicate for the ","type":"text"},{"code":"Hashable","type":"codeVoice"},{"type":"text","text":" receiver."}],"schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"roleHeading":"Instance Method","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"memoize","kind":"identifier"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"with","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"MemoizationCache"},{"kind":"text","text":"?, "},{"preciseIdentifier":"s:s7KeyPathC","text":"KeyPath","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">) -> "},{"text":"T","kind":"typeIdentifier"}],"modules":[{"name":"MacroBuilder","relatedModules":["Swift"]}],"role":"symbol","externalID":"s:SH7SwallowE7memoize4with_qd__AA6_CacheCyAA011MemoizationD3KeyVypGSg_s0F4PathCyxqd__GtlF::SYNTHESIZED::s:11SwiftSyntax038DifferentiabilityWithRespectToArgumentB0V","extendedModule":"Swift","title":"memoize(with:_:)"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"memoize","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"text":"with","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"cache"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"MemoizationCache"},{"kind":"text","text":"? = MemoizationCache.shared, "},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"keyPath","kind":"internalParam"},{"kind":"text","text":": "},{"text":"KeyPath","preciseIdentifier":"s:s7KeyPathC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"T","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","text":"T"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"text":"The shared cache to use; ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":" disables caching and simply returns the result of "},{"type":"codeVoice","code":"predicate"},{"text":" directly","type":"text"}],"type":"paragraph"}],"name":"cache"}]},{"content":[{"type":"heading","anchor":"return-value","text":"Return Value","level":2},{"type":"paragraph","inlineContent":[{"text":"The result from the ","type":"text"},{"type":"codeVoice","code":"predicate"},{"type":"text","text":", either a previously cached value, or the result of executing the "},{"type":"codeVoice","code":"predicate"}]}],"kind":"content"},{"kind":"content","content":[{"level":2,"anchor":"discussion","text":"Discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"The source subject (the receiver) and the result object (the return value) should be value types, and the ","type":"text"},{"code":"predicate","type":"codeVoice"},{"text":" must be a ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"pure"}]},{"type":"text","text":" function that captures "},{"type":"emphasis","inlineContent":[{"text":"no state","type":"text"}]},{"text":", in that:","type":"text"}]},{"type":"orderedList","items":[{"content":[{"inlineContent":[{"text":"Its return value is the same for the same arguments (no variation with local static variables, non-local variables, mutable reference arguments or input streams from I\/O devices).","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Its evaluation has no side effects (no mutation of local static variables, non-local variables, mutable reference arguments or I\/O streams)."}],"type":"paragraph"}]}]},{"type":"aside","style":"note","content":[{"type":"paragraph","inlineContent":[{"text":"The calling functionâ€™s source file and line are used as the cache key, so care must be taken to avoid having multiple calls to ","type":"text"},{"type":"codeVoice","code":"memoize"},{"text":" occur from a single line of source code.","type":"text"}]}],"name":"Note"},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"text":"Re-Throws and errors from ","type":"text"},{"code":"predicate","type":"codeVoice"}]}],"type":"aside","name":"Throws"},{"type":"aside","name":"Complexity","content":[{"inlineContent":[{"type":"text","text":"Around O(1) for a successful cache hit, otherwise the complexity of the keyPath execution"}],"type":"paragraph"}],"style":"note"}]}],"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/DifferentiabilityWithRespectToArgumentSyntax/memoize(with:_:)-7ndwh":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DifferentiabilityWithRespectToArgumentSyntax\/memoize(with:_:)-7ndwh","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"memoize","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"MemoizationCache"},{"text":"?, ","kind":"text"},{"text":"KeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">) -> "},{"text":"T","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Memoize the result of the execution of a predicate for the "},{"code":"Hashable","type":"codeVoice"},{"type":"text","text":" receiver."}],"type":"topic","kind":"symbol","role":"symbol","title":"memoize(with:_:)","url":"\/documentation\/macrobuilder\/differentiabilitywithrespecttoargumentsyntax\/memoize(with:_:)-7ndwh"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/DifferentiabilityWithRespectToArgumentSyntax/Hashable-Implementations":{"url":"\/documentation\/macrobuilder\/differentiabilitywithrespecttoargumentsyntax\/hashable-implementations","kind":"article","role":"collectionGroup","title":"Hashable Implementations","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DifferentiabilityWithRespectToArgumentSyntax\/Hashable-Implementations","type":"topic","abstract":[]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/DifferentiabilityWithRespectToArgumentSyntax":{"type":"topic","url":"\/documentation\/macrobuilder\/differentiabilitywithrespecttoargumentsyntax","abstract":[{"text":"A clause containing differentiability parameters.","type":"text"}],"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DifferentiabilityWithRespectToArgumentSyntax","kind":"symbol","title":"DifferentiabilityWithRespectToArgumentSyntax","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"DifferentiabilityWithRespectToArgumentSyntax"}],"navigatorTitle":[{"kind":"identifier","text":"DifferentiabilityWithRespectToArgumentSyntax"}]}}}