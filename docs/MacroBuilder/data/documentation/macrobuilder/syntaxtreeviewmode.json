{"relationshipsSections":[{"kind":"relationships","type":"conformsTo","title":"Conforms To","identifiers":["doc:\/\/com.swallow.documentation.MacroBuilder\/SQ","doc:\/\/com.swallow.documentation.MacroBuilder\/SH","doc:\/\/com.swallow.documentation.MacroBuilder\/s8SendableP"]}],"variants":[{"paths":["\/documentation\/macrobuilder\/syntaxtreeviewmode"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder"]]},"schemaVersion":{"patch":0,"minor":3,"major":0},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"SyntaxTreeViewMode","kind":"identifier"}]}],"kind":"declarations"}],"identifier":{"url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxTreeViewMode","interfaceLanguage":"swift"},"kind":"symbol","abstract":[{"text":"Specifies how missing and unexpected nodes should be handled when traversing","type":"text"},{"type":"text","text":" "},{"text":"a syntax tree.","type":"text"}],"metadata":{"title":"SyntaxTreeViewMode","roleHeading":"Enumeration","symbolKind":"enum","role":"symbol","modules":[{"name":"MacroBuilder"}],"externalID":"s:11SwiftSyntax0B12TreeViewModeO","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SyntaxTreeViewMode","kind":"identifier"}],"navigatorTitle":[{"text":"SyntaxTreeViewMode","kind":"identifier"}]},"topicSections":[{"generated":true,"identifiers":["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxTreeViewMode\/all","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxTreeViewMode\/fixedUp","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxTreeViewMode\/sourceAccurate"],"title":"Enumeration Cases","anchor":"Enumeration-Cases"},{"identifiers":["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxTreeViewMode\/Equatable-Implementations","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxTreeViewMode\/Equatable-Implementations","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxTreeViewMode\/Hashable-Implementations"],"anchor":"Default-Implementations","generated":true,"title":"Default Implementations"}],"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SyntaxTreeViewMode/fixedUp":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxTreeViewMode\/fixedUp","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"fixedUp","kind":"identifier"}],"role":"symbol","title":"SyntaxTreeViewMode.fixedUp","abstract":[{"type":"text","text":"Views the syntax tree with fixes applied, that is missing nodes will be"},{"text":" ","type":"text"},{"type":"text","text":"visited but unexpected nodes will be skipped."},{"type":"text","text":" "},{"text":"This views the tree in a way thatâ€™s closer to being syntactical correct","type":"text"},{"type":"text","text":" "},{"type":"text","text":"and should be used for structural analysis of the syntax tree."}],"type":"topic","url":"\/documentation\/macrobuilder\/syntaxtreeviewmode\/fixedup","kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SyntaxTreeViewMode/sourceAccurate":{"title":"SyntaxTreeViewMode.sourceAccurate","role":"symbol","type":"topic","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"sourceAccurate"}],"url":"\/documentation\/macrobuilder\/syntaxtreeviewmode\/sourceaccurate","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxTreeViewMode\/sourceAccurate","kind":"symbol","abstract":[{"text":"Visit the tree in a way that reproduces the original source code.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Missing nodes will not be visited, unexpected nodes will be visited."},{"text":" ","type":"text"},{"text":"This mode is useful for source code transformations like a formatter.","type":"text"}]},"doc://com.swallow.documentation.MacroBuilder/SH":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/SH","title":"Swift.Hashable","type":"unresolvable"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SyntaxTreeViewMode":{"kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"SyntaxTreeViewMode","kind":"identifier"}],"url":"\/documentation\/macrobuilder\/syntaxtreeviewmode","type":"topic","navigatorTitle":[{"text":"SyntaxTreeViewMode","kind":"identifier"}],"abstract":[{"type":"text","text":"Specifies how missing and unexpected nodes should be handled when traversing"},{"type":"text","text":" "},{"type":"text","text":"a syntax tree."}],"title":"SyntaxTreeViewMode","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxTreeViewMode","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/s8SendableP":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/s8SendableP","title":"Swift.Sendable","type":"unresolvable"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SyntaxTreeViewMode/Equatable-Implementations":{"role":"collectionGroup","url":"\/documentation\/macrobuilder\/syntaxtreeviewmode\/equatable-implementations","title":"Equatable Implementations","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxTreeViewMode\/Equatable-Implementations","type":"topic","abstract":[],"kind":"article"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SyntaxTreeViewMode/all":{"title":"SyntaxTreeViewMode.all","role":"symbol","type":"topic","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"all","kind":"identifier"}],"url":"\/documentation\/macrobuilder\/syntaxtreeviewmode\/all","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxTreeViewMode\/all","kind":"symbol","abstract":[{"text":"Both missing and unexpected nodes will be traversed.","type":"text"}]},"doc://com.swallow.documentation.MacroBuilder/SQ":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/SQ","title":"Swift.Equatable","type":"unresolvable"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SyntaxTreeViewMode/Hashable-Implementations":{"title":"Hashable Implementations","role":"collectionGroup","type":"topic","url":"\/documentation\/macrobuilder\/syntaxtreeviewmode\/hashable-implementations","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxTreeViewMode\/Hashable-Implementations","kind":"article","abstract":[]}}}