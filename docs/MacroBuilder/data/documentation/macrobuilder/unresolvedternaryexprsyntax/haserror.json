{"sections":[],"metadata":{"role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"hasError"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"title":"hasError","symbolKind":"property","modules":[{"relatedModules":["SwiftSyntax"],"name":"MacroBuilder"}],"extendedModule":"SwiftSyntax","roleHeading":"Instance Property","externalID":"s:11SwiftSyntax0B8ProtocolPAAE8hasErrorSbvp::SYNTHESIZED::s:11SwiftSyntax021UnresolvedTernaryExprB0V"},"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/UnresolvedTernaryExprSyntax\/hasError"},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"hasError","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":" { ","kind":"text"},{"text":"get","kind":"keyword"},{"kind":"text","text":" }"}]}]},{"kind":"content","content":[{"text":"Discussion","type":"heading","anchor":"discussion","level":2},{"items":[{"content":[{"inlineContent":[{"text":"missing nodes or","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"unexpected nodes or","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"tokens with a "},{"type":"reference","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TokenDiagnostic","isActive":true},{"text":" of severity ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TokenDiagnostic\/Severity-swift.enum\/error","isActive":true},{"type":"text","text":"."}]}]}],"type":"unorderedList"}]}],"variants":[{"paths":["\/documentation\/macrobuilder\/unresolvedternaryexprsyntax\/haserror"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/UnresolvedTernaryExprSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/UnresolvedTernaryExprSyntax\/SyntaxProtocol-Implementations"]]},"abstract":[{"type":"text","text":"Whether the tree contained by this layout has any"}],"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/UnresolvedTernaryExprSyntax":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/UnresolvedTernaryExprSyntax","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UnresolvedTernaryExprSyntax","kind":"identifier"}],"url":"\/documentation\/macrobuilder\/unresolvedternaryexprsyntax","type":"topic","navigatorTitle":[{"text":"UnresolvedTernaryExprSyntax","kind":"identifier"}],"kind":"symbol","role":"symbol","title":"UnresolvedTernaryExprSyntax","abstract":[{"text":"The middle section of a ternary operator between ","type":"text"},{"code":"?","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":":"},{"type":"text","text":"."}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/UnresolvedTernaryExprSyntax/SyntaxProtocol-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/UnresolvedTernaryExprSyntax\/SyntaxProtocol-Implementations","url":"\/documentation\/macrobuilder\/unresolvedternaryexprsyntax\/syntaxprotocol-implementations","type":"topic","kind":"article","role":"collectionGroup","title":"SyntaxProtocol Implementations","abstract":[]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/UnresolvedTernaryExprSyntax/hasError":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/UnresolvedTernaryExprSyntax\/hasError","type":"topic","abstract":[{"type":"text","text":"Whether the tree contained by this layout has any"}],"role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"hasError","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"title":"hasError","url":"\/documentation\/macrobuilder\/unresolvedternaryexprsyntax\/haserror","kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/TokenDiagnostic":{"type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"TokenDiagnostic"}],"role":"symbol","abstract":[{"text":"If the token has an error thatâ€™s inherent to the token itself and not its","type":"text"},{"text":" ","type":"text"},{"text":"surrounding structure, this defines the type of the error.","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"byteOffset"},{"type":"text","text":" specifies at which offset the error occurred."}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TokenDiagnostic","title":"TokenDiagnostic","url":"\/documentation\/macrobuilder\/tokendiagnostic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"TokenDiagnostic","kind":"identifier"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/TokenDiagnostic/Severity-swift.enum/error":{"kind":"symbol","role":"symbol","title":"TokenDiagnostic.Severity.error","abstract":[],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TokenDiagnostic\/Severity-swift.enum\/error","url":"\/documentation\/macrobuilder\/tokendiagnostic\/severity-swift.enum\/error","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"text":"error","kind":"identifier"}]}}}