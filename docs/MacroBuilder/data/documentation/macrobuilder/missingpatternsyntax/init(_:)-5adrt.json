{"schemaVersion":{"minor":3,"major":0,"patch":0},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/MissingPatternSyntax"]]},"abstract":[{"type":"text","text":"Converts the given specialized node to this type. Returns "},{"code":"nil","type":"codeVoice"},{"type":"text","text":" if the"},{"type":"text","text":" "},{"text":"conversion is not possible.","type":"text"}],"identifier":{"url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/MissingPatternSyntax\/init(_:)-5adrt","interfaceLanguage":"swift"},"kind":"symbol","sections":[],"variants":[{"paths":["\/documentation\/macrobuilder\/missingpatternsyntax\/init(_:)-5adrt"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"?("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"node"},{"text":": some ","kind":"text"},{"kind":"typeIdentifier","text":"SyntaxProtocol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxProtocol","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP"},{"text":")","kind":"text"}],"languages":["swift"]}],"kind":"declarations"}],"metadata":{"title":"init(_:)","roleHeading":"Initializer","role":"symbol","modules":[{"name":"MacroBuilder"}],"externalID":"s:11SwiftSyntax014MissingPatternB0VyACSgxhcAA0B8ProtocolRzlufc","symbolKind":"init","fragments":[{"kind":"identifier","text":"init"},{"text":"?(some ","kind":"text"},{"text":"SyntaxProtocol","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP","kind":"typeIdentifier"},{"kind":"text","text":")"}]},"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/MissingPatternSyntax":{"kind":"symbol","abstract":[{"text":"In case the source code is missing a pattern, this node stands in place of the missing pattern.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"MissingPatternSyntax"}],"role":"symbol","title":"MissingPatternSyntax","navigatorTitle":[{"text":"MissingPatternSyntax","kind":"identifier"}],"type":"topic","url":"\/documentation\/macrobuilder\/missingpatternsyntax","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/MissingPatternSyntax"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/MissingPatternSyntax/init(_:)-5adrt":{"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"?(some "},{"text":"SyntaxProtocol","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP"},{"kind":"text","text":")"}],"role":"symbol","type":"topic","url":"\/documentation\/macrobuilder\/missingpatternsyntax\/init(_:)-5adrt","title":"init(_:)","abstract":[{"text":"Converts the given specialized node to this type. Returns ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":" if the"},{"type":"text","text":" "},{"type":"text","text":"conversion is not possible."}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/MissingPatternSyntax\/init(_:)-5adrt","kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SyntaxProtocol":{"title":"SyntaxProtocol","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxProtocol","navigatorTitle":[{"text":"SyntaxProtocol","kind":"identifier"}],"abstract":[{"text":"Provide common functionality for specialized syntax nodes. Extend this","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"protocol to provide common functionality for all syntax nodes."}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"SyntaxProtocol","kind":"identifier"}],"type":"topic","role":"symbol","url":"\/documentation\/macrobuilder\/syntaxprotocol"}}}