{"identifier":{"url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ClosureExprSyntax\/allMacroLexicalContexts(enclosingSyntax:)","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/macrobuilder\/closureexprsyntax\/allmacrolexicalcontexts(enclosingsyntax:)"]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"sections":[],"metadata":{"roleHeading":"Instance Method","symbolKind":"method","modules":[{"name":"MacroBuilder","relatedModules":["SwiftSyntax"]}],"externalID":"s:11SwiftSyntax0B8ProtocolP0aB6MacrosE23allMacroLexicalContexts09enclosingB0SayAA0B0VGAHSgAHXE_tF::SYNTHESIZED::s:11SwiftSyntax011ClosureExprB0V","title":"allMacroLexicalContexts(enclosingSyntax:)","role":"symbol","extendedModule":"SwiftSyntax","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"allMacroLexicalContexts"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"enclosingSyntax"},{"kind":"text","text":": ("},{"text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax"},{"kind":"text","text":"?) -> ["},{"text":"Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"text":"]","kind":"text"}]},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ClosureExprSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ClosureExprSyntax\/SyntaxProtocol-Implementations"]]},"abstract":[{"text":"Return an array of enclosing lexical contexts for the purpose of macros,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"from the innermost enclosing lexical context (first in the array) to the"},{"text":" ","type":"text"},{"type":"text","text":"outermost. If this syntax node itself is a lexical context, it will be"},{"text":" ","type":"text"},{"type":"text","text":"the innermost lexical context."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"allMacroLexicalContexts"},{"kind":"text","text":"("},{"kind":"externalParam","text":"enclosingSyntax"},{"kind":"text","text":": ("},{"text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax"},{"text":") -> ","kind":"text"},{"text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax"},{"text":"? = { _ in nil }) -> [","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B0V","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax","kind":"typeIdentifier","text":"Syntax"},{"text":"]","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}]},{"parameters":[{"name":"enclosingSyntax","content":[{"inlineContent":[{"text":"Provides a parent node when the operation","type":"text"},{"text":" ","type":"text"},{"text":"has reached the outermost syntax node (i.e., it has no parent), allowing","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the caller to provide a new syntax node that can continue the walk"},{"type":"text","text":" "},{"type":"text","text":"to collect additional lexical contexts, e.g., from outer macro"},{"text":" ","type":"text"},{"type":"text","text":"expansions."}],"type":"paragraph"}]}],"kind":"parameters"},{"kind":"content","content":[{"level":2,"type":"heading","anchor":"return-value","text":"Return Value"},{"inlineContent":[{"text":"The array of enclosing lexical contexts.","type":"text"}],"type":"paragraph"}]}],"kind":"symbol","references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ClosureExprSyntax/SyntaxProtocol-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ClosureExprSyntax\/SyntaxProtocol-Implementations","abstract":[],"role":"collectionGroup","url":"\/documentation\/macrobuilder\/closureexprsyntax\/syntaxprotocol-implementations","type":"topic","title":"SyntaxProtocol Implementations","kind":"article"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ClosureExprSyntax":{"url":"\/documentation\/macrobuilder\/closureexprsyntax","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ClosureExprSyntax"}],"type":"topic","title":"ClosureExprSyntax","abstract":[],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ClosureExprSyntax"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ClosureExprSyntax"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ClosureExprSyntax/allMacroLexicalContexts(enclosingSyntax:)":{"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ClosureExprSyntax\/allMacroLexicalContexts(enclosingSyntax:)","title":"allMacroLexicalContexts(enclosingSyntax:)","abstract":[{"text":"Return an array of enclosing lexical contexts for the purpose of macros,","type":"text"},{"type":"text","text":" "},{"text":"from the innermost enclosing lexical context (first in the array) to the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"outermost. If this syntax node itself is a lexical context, it will be"},{"type":"text","text":" "},{"text":"the innermost lexical context.","type":"text"}],"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"allMacroLexicalContexts"},{"kind":"text","text":"("},{"text":"enclosingSyntax","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier"},{"text":"?) -> [","kind":"text"},{"text":"Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"text":"]","kind":"text"}],"url":"\/documentation\/macrobuilder\/closureexprsyntax\/allmacrolexicalcontexts(enclosingsyntax:)","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/Syntax":{"abstract":[{"type":"text","text":"A Syntax node represents a tree of nodes with tokens at the leaves."},{"text":" ","type":"text"},{"type":"text","text":"Each node has accessors for its known children, and allows efficient"},{"text":" ","type":"text"},{"text":"iteration over the children through its ","type":"text"},{"type":"codeVoice","code":"children"},{"text":" property.","type":"text"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Syntax"}],"url":"\/documentation\/macrobuilder\/syntax","title":"Syntax","type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Syntax","kind":"identifier"}],"kind":"symbol"}}}