{"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PrecedenceGroupAssignmentSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PrecedenceGroupAssignmentSyntax\/Hashable-Implementations"]]},"identifier":{"url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PrecedenceGroupAssignmentSyntax\/memoize(with:_:)-7othk","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"memoize"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"with"},{"text":" ","kind":"text"},{"text":"cache","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"MemoizationCache"},{"text":"? = MemoizationCache.shared, ","kind":"text"},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"keyPath","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"KeyPath","preciseIdentifier":"s:s7KeyPathC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"text":"T","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"The shared cache to use; "},{"code":"nil","type":"codeVoice"},{"text":" disables caching and simply returns the result of ","type":"text"},{"type":"codeVoice","code":"predicate"},{"type":"text","text":" directly"}],"type":"paragraph"}],"name":"cache"}]},{"content":[{"type":"heading","text":"Return Value","level":2,"anchor":"return-value"},{"type":"paragraph","inlineContent":[{"text":"The result from the ","type":"text"},{"type":"codeVoice","code":"predicate"},{"text":", either a previously cached value, or the result of executing the ","type":"text"},{"code":"predicate","type":"codeVoice"}]}],"kind":"content"},{"kind":"content","content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"inlineContent":[{"type":"text","text":"The source subject (the receiver) and the result object (the return value) should be value types, and the "},{"type":"codeVoice","code":"predicate"},{"type":"text","text":" must be a "},{"inlineContent":[{"text":"pure","type":"text"}],"type":"emphasis"},{"type":"text","text":" function that captures "},{"inlineContent":[{"text":"no state","type":"text"}],"type":"emphasis"},{"type":"text","text":", in that:"}],"type":"paragraph"},{"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Its return value is the same for the same arguments (no variation with local static variables, non-local variables, mutable reference arguments or input streams from I\/O devices)."}]}]},{"content":[{"inlineContent":[{"text":"Its evaluation has no side effects (no mutation of local static variables, non-local variables, mutable reference arguments or I\/O streams).","type":"text"}],"type":"paragraph"}]}]},{"content":[{"inlineContent":[{"text":"The calling functionâ€™s source file and line are used as the cache key, so care must be taken to avoid having multiple calls to ","type":"text"},{"code":"memoize","type":"codeVoice"},{"type":"text","text":" occur from a single line of source code."}],"type":"paragraph"}],"type":"aside","style":"note","name":"Note"},{"content":[{"inlineContent":[{"type":"text","text":"Re-Throws and errors from "},{"type":"codeVoice","code":"predicate"}],"type":"paragraph"}],"type":"aside","name":"Throws","style":"note"},{"type":"aside","name":"Complexity","style":"note","content":[{"type":"paragraph","inlineContent":[{"text":"Around O(1) for a successful cache hit, otherwise the complexity of the keyPath execution","type":"text"}]}]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/macrobuilder\/precedencegroupassignmentsyntax\/memoize(with:_:)-7othk"]}],"abstract":[{"text":"Memoize the result of the execution of a predicate for the ","type":"text"},{"type":"codeVoice","code":"Hashable"},{"text":" receiver.","type":"text"}],"kind":"symbol","metadata":{"roleHeading":"Instance Method","externalID":"s:SH7SwallowE7memoize4with_qd__AA6_CacheCyAA011MemoizationD3KeyVypGSg_s0F4PathCyxqd__GtlF::SYNTHESIZED::s:11SwiftSyntax025PrecedenceGroupAssignmentB0V","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"memoize","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"MemoizationCache","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"KeyPath","preciseIdentifier":"s:s7KeyPathC","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"extendedModule":"Swift","symbolKind":"method","title":"memoize(with:_:)","modules":[{"name":"MacroBuilder","relatedModules":["Swift"]}],"role":"symbol"},"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/PrecedenceGroupAssignmentSyntax":{"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"PrecedenceGroupAssignmentSyntax"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PrecedenceGroupAssignmentSyntax","abstract":[{"type":"text","text":"Specifies the precedence of an operator when used in an operation that includes optional chaining."}],"title":"PrecedenceGroupAssignmentSyntax","role":"symbol","navigatorTitle":[{"text":"PrecedenceGroupAssignmentSyntax","kind":"identifier"}],"url":"\/documentation\/macrobuilder\/precedencegroupassignmentsyntax","kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/PrecedenceGroupAssignmentSyntax/memoize(with:_:)-7othk":{"url":"\/documentation\/macrobuilder\/precedencegroupassignmentsyntax\/memoize(with:_:)-7othk","kind":"symbol","title":"memoize(with:_:)","type":"topic","role":"symbol","abstract":[{"text":"Memoize the result of the execution of a predicate for the ","type":"text"},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":" receiver."}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"memoize","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"with","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"MemoizationCache"},{"text":"?, ","kind":"text"},{"text":"KeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PrecedenceGroupAssignmentSyntax\/memoize(with:_:)-7othk"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/PrecedenceGroupAssignmentSyntax/Hashable-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/PrecedenceGroupAssignmentSyntax\/Hashable-Implementations","url":"\/documentation\/macrobuilder\/precedencegroupassignmentsyntax\/hashable-implementations","kind":"article","abstract":[],"type":"topic","title":"Hashable Implementations","role":"collectionGroup"}}}