{"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"code":"FreestandingMacroExpansionSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/FunctionCallExprSyntax\/asProtocol(_:)-f0fq"},"variants":[{"paths":["\/documentation\/macrobuilder\/functioncallexprsyntax\/asprotocol(_:)-f0fq"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/FunctionCallExprSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/FunctionCallExprSyntax\/SyntaxProtocol-Implementations"]]},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"_"},{"text":": (any ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P","text":"FreestandingMacroExpansionSyntax","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/FreestandingMacroExpansionSyntax","kind":"typeIdentifier"},{"text":").Type) -> (any ","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/FreestandingMacroExpansionSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P","text":"FreestandingMacroExpansionSyntax"},{"text":")?","kind":"text"}],"languages":["swift"]}],"kind":"declarations"}],"kind":"symbol","sections":[],"metadata":{"roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"((any "},{"text":"FreestandingMacroExpansionSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P"},{"kind":"text","text":").Type) -> (any "},{"text":"FreestandingMacroExpansionSyntax","preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P","kind":"typeIdentifier"},{"kind":"text","text":")?"}],"title":"asProtocol(_:)","modules":[{"name":"MacroBuilder","relatedModules":["SwiftSyntax"]}],"extendedModule":"SwiftSyntax","role":"symbol","externalID":"s:11SwiftSyntax0B8ProtocolPAAE02asC0yAA026FreestandingMacroExpansionB0_pSgAaE_pmF::SYNTHESIZED::s:11SwiftSyntax016FunctionCallExprB0V","symbolKind":"method"},"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/FreestandingMacroExpansionSyntax":{"type":"topic","navigatorTitle":[{"kind":"identifier","text":"FreestandingMacroExpansionSyntax"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FreestandingMacroExpansionSyntax","kind":"identifier"}],"kind":"symbol","abstract":[],"role":"symbol","url":"\/documentation\/macrobuilder\/freestandingmacroexpansionsyntax","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/FreestandingMacroExpansionSyntax","title":"FreestandingMacroExpansionSyntax"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/FunctionCallExprSyntax/SyntaxProtocol-Implementations":{"abstract":[],"role":"collectionGroup","url":"\/documentation\/macrobuilder\/functioncallexprsyntax\/syntaxprotocol-implementations","title":"SyntaxProtocol Implementations","kind":"article","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/FunctionCallExprSyntax\/SyntaxProtocol-Implementations","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/FunctionCallExprSyntax":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/FunctionCallExprSyntax","kind":"symbol","type":"topic","title":"FunctionCallExprSyntax","url":"\/documentation\/macrobuilder\/functioncallexprsyntax","abstract":[],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"FunctionCallExprSyntax"}],"role":"symbol","navigatorTitle":[{"text":"FunctionCallExprSyntax","kind":"identifier"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/FunctionCallExprSyntax/asProtocol(_:)-f0fq":{"kind":"symbol","url":"\/documentation\/macrobuilder\/functioncallexprsyntax\/asprotocol(_:)-f0fq","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"kind":"text","text":"((any "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P","text":"FreestandingMacroExpansionSyntax"},{"text":").Type) -> (any ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P","text":"FreestandingMacroExpansionSyntax","kind":"typeIdentifier"},{"kind":"text","text":")?"}],"title":"asProtocol(_:)","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"code":"FreestandingMacroExpansionSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/FunctionCallExprSyntax\/asProtocol(_:)-f0fq","type":"topic"}}}