{"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asMacroLexicalContext"},{"text":"() -> ","kind":"text"},{"text":"Syntax","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"text":"?","kind":"text"}],"platforms":["macOS"]}],"kind":"declarations"},{"content":[{"anchor":"discussion","text":"Discussion","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"text":"Returns ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":" for any syntax node that isn’t a lexical context."}]}],"kind":"content"}],"sections":[],"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"type":"text","text":"If this syntax node acts as a lexical context from the perspective"},{"type":"text","text":" "},{"text":"of a macro, return a new syntax node based on this node that strips all","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"information that isn’t supposed to be exposed as a lexical context, such"},{"text":" ","type":"text"},{"type":"text","text":"as function bodies or the members of types\/extensions."}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TupleTypeSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TupleTypeSyntax\/SyntaxProtocol-Implementations"]]},"variants":[{"paths":["\/documentation\/macrobuilder\/tupletypesyntax\/asmacrolexicalcontext()"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"extendedModule":"SwiftSyntax","symbolKind":"method","role":"symbol","title":"asMacroLexicalContext()","externalID":"s:11SwiftSyntax0B8ProtocolP0aB6MacrosE21asMacroLexicalContextAA0B0VSgyF::SYNTHESIZED::s:11SwiftSyntax09TupleTypeB0V","modules":[{"relatedModules":["SwiftSyntax"],"name":"MacroBuilder"}],"roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asMacroLexicalContext","kind":"identifier"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax","kind":"typeIdentifier"},{"text":"?","kind":"text"}]},"identifier":{"url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TupleTypeSyntax\/asMacroLexicalContext()","interfaceLanguage":"swift"},"kind":"symbol","references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/TupleTypeSyntax":{"kind":"symbol","role":"symbol","abstract":[],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TupleTypeSyntax"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TupleTypeSyntax","type":"topic","title":"TupleTypeSyntax","url":"\/documentation\/macrobuilder\/tupletypesyntax","navigatorTitle":[{"kind":"identifier","text":"TupleTypeSyntax"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/TupleTypeSyntax/asMacroLexicalContext()":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asMacroLexicalContext","kind":"identifier"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"kind":"symbol","role":"symbol","title":"asMacroLexicalContext()","url":"\/documentation\/macrobuilder\/tupletypesyntax\/asmacrolexicalcontext()","type":"topic","abstract":[{"type":"text","text":"If this syntax node acts as a lexical context from the perspective"},{"type":"text","text":" "},{"type":"text","text":"of a macro, return a new syntax node based on this node that strips all"},{"type":"text","text":" "},{"text":"information that isn’t supposed to be exposed as a lexical context, such","type":"text"},{"text":" ","type":"text"},{"text":"as function bodies or the members of types\/extensions.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TupleTypeSyntax\/asMacroLexicalContext()"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/TupleTypeSyntax/SyntaxProtocol-Implementations":{"url":"\/documentation\/macrobuilder\/tupletypesyntax\/syntaxprotocol-implementations","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TupleTypeSyntax\/SyntaxProtocol-Implementations","abstract":[],"kind":"article","title":"SyntaxProtocol Implementations","role":"collectionGroup","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/Syntax":{"abstract":[{"type":"text","text":"A Syntax node represents a tree of nodes with tokens at the leaves."},{"text":" ","type":"text"},{"type":"text","text":"Each node has accessors for its known children, and allows efficient"},{"text":" ","type":"text"},{"text":"iteration over the children through its ","type":"text"},{"type":"codeVoice","code":"children"},{"text":" property.","type":"text"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Syntax"}],"url":"\/documentation\/macrobuilder\/syntax","title":"Syntax","type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Syntax","kind":"identifier"}],"kind":"symbol"}}}