{"identifier":{"url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"patch":0,"minor":3},"metadata":{"navigatorTitle":[{"kind":"identifier","text":"BooleanLiteralExprSyntax"}],"externalID":"s:11SwiftSyntax018BooleanLiteralExprB0V","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"BooleanLiteralExprSyntax"}],"title":"BooleanLiteralExprSyntax","symbolKind":"struct","role":"symbol","modules":[{"name":"MacroBuilder"}],"roleHeading":"Structure"},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder"]]},"topicSections":[{"title":"Initializers","anchor":"Initializers","generated":true,"identifiers":["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/init(_:)-6jezb","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/init(_:)-9iga8","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/init(leadingTrivia:_:booleanLiteral:_:trailingTrivia:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/init(leadingTrivia:_:literal:_:trailingTrivia:)"]},{"title":"Instance Properties","anchor":"Instance-Properties","identifiers":["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/booleanLiteral","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/literal","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/unexpectedAfterBooleanLiteral","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/unexpectedAfterLiteral","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/unexpectedBeforeBooleanLiteral","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/unexpectedBeforeLiteral"],"generated":true},{"identifiers":["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/structure"],"anchor":"Type-Properties","generated":true,"title":"Type Properties"},{"anchor":"Default-Implementations","identifiers":["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/CustomReflectable-Implementations","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/Equatable-Implementations","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/Equatable-Implementations","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/ExprSyntaxProtocol-Implementations","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/ExpressibleByBooleanLiteral-Implementations","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/Hashable-Implementations","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/Hashable-Implementations","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/SyntaxProtocol-Implementations"],"generated":true,"title":"Default Implementations"}],"relationshipsSections":[{"title":"Conforms To","identifiers":["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprSyntaxProtocol","doc:\/\/com.swallow.documentation.MacroBuilder\/s8CopyableP","doc:\/\/com.swallow.documentation.MacroBuilder\/s28CustomDebugStringConvertibleP","doc:\/\/com.swallow.documentation.MacroBuilder\/s17CustomReflectableP","doc:\/\/com.swallow.documentation.MacroBuilder\/s23CustomStringConvertibleP","doc:\/\/com.swallow.documentation.MacroBuilder\/SQ","doc:\/\/com.swallow.documentation.MacroBuilder\/s27ExpressibleByBooleanLiteralP","doc:\/\/com.swallow.documentation.MacroBuilder\/SH","doc:\/\/com.swallow.documentation.MacroBuilder\/s8SendableP","doc:\/\/com.swallow.documentation.MacroBuilder\/s20TextOutputStreamableP","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxHashable","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxProtocol"],"type":"conformsTo","kind":"relationships"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"BooleanLiteralExprSyntax","kind":"identifier"}],"languages":["swift"]}]},{"kind":"content","content":[{"anchor":"Children","level":3,"text":"Children","type":"heading"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"literal"},{"type":"text","text":": ("},{"type":"codeVoice","code":"true"},{"text":" | ","type":"text"},{"type":"codeVoice","code":"false"},{"type":"text","text":")"}]}]}],"type":"unorderedList"}]}],"kind":"symbol","variants":[{"paths":["\/documentation\/macrobuilder\/booleanliteralexprsyntax"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BooleanLiteralExprSyntax/ExpressibleByBooleanLiteral-Implementations":{"role":"collectionGroup","title":"ExpressibleByBooleanLiteral Implementations","url":"\/documentation\/macrobuilder\/booleanliteralexprsyntax\/expressiblebybooleanliteral-implementations","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/ExpressibleByBooleanLiteral-Implementations","kind":"article","type":"topic","abstract":[]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BooleanLiteralExprSyntax/literal":{"type":"topic","url":"\/documentation\/macrobuilder\/booleanliteralexprsyntax\/literal","abstract":[],"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"literal","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/literal","title":"literal","role":"symbol","kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/s28CustomDebugStringConvertibleP":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/s28CustomDebugStringConvertibleP","type":"unresolvable","title":"Swift.CustomDebugStringConvertible"},"doc://com.swallow.documentation.MacroBuilder/s20TextOutputStreamableP":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/s20TextOutputStreamableP","type":"unresolvable","title":"Swift.TextOutputStreamable"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BooleanLiteralExprSyntax/unexpectedBeforeLiteral":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/unexpectedBeforeLiteral","url":"\/documentation\/macrobuilder\/booleanliteralexprsyntax\/unexpectedbeforeliteral","role":"symbol","abstract":[],"kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"unexpectedBeforeLiteral","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax015UnexpectedNodesB0V","text":"UnexpectedNodesSyntax","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"title":"unexpectedBeforeLiteral","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SyntaxHashable":{"url":"\/documentation\/macrobuilder\/syntaxhashable","type":"topic","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxHashable","role":"symbol","navigatorTitle":[{"text":"SyntaxHashable","kind":"identifier"}],"title":"SyntaxHashable","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SyntaxHashable","kind":"identifier"}],"abstract":[{"type":"text","text":"Protocol that provides a common Hashable implementation for all syntax nodes"}]},"doc://com.swallow.documentation.MacroBuilder/SQ":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/SQ","type":"unresolvable","title":"Swift.Equatable"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BooleanLiteralExprSyntax/unexpectedAfterBooleanLiteral":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/unexpectedAfterBooleanLiteral","url":"\/documentation\/macrobuilder\/booleanliteralexprsyntax\/unexpectedafterbooleanliteral","role":"symbol","abstract":[],"deprecated":true,"kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"unexpectedAfterBooleanLiteral"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax015UnexpectedNodesB0V","kind":"typeIdentifier","text":"UnexpectedNodesSyntax"},{"text":"?","kind":"text"}],"title":"unexpectedAfterBooleanLiteral","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BooleanLiteralExprSyntax":{"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"BooleanLiteralExprSyntax","kind":"identifier"}],"title":"BooleanLiteralExprSyntax","abstract":[],"navigatorTitle":[{"text":"BooleanLiteralExprSyntax","kind":"identifier"}],"url":"\/documentation\/macrobuilder\/booleanliteralexprsyntax","type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax"},"doc://com.swallow.documentation.MacroBuilder/s27ExpressibleByBooleanLiteralP":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/s27ExpressibleByBooleanLiteralP","type":"unresolvable","title":"Swift.ExpressibleByBooleanLiteral"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprSyntax":{"url":"\/documentation\/macrobuilder\/exprsyntax","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"ExprSyntax","kind":"identifier"}],"type":"topic","title":"ExprSyntax","abstract":[],"kind":"symbol","navigatorTitle":[{"text":"ExprSyntax","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprSyntax"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BooleanLiteralExprSyntax/init(_:)-9iga8":{"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/init(_:)-9iga8","kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":")","kind":"text"}],"role":"symbol","url":"\/documentation\/macrobuilder\/booleanliteralexprsyntax\/init(_:)-9iga8","abstract":[],"title":"init(_:)"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BooleanLiteralExprSyntax/Equatable-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/Equatable-Implementations","abstract":[],"role":"collectionGroup","kind":"article","url":"\/documentation\/macrobuilder\/booleanliteralexprsyntax\/equatable-implementations","title":"Equatable Implementations","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/SH":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/SH","type":"unresolvable","title":"Swift.Hashable"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BooleanLiteralExprSyntax/ExprSyntaxProtocol-Implementations":{"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/ExprSyntaxProtocol-Implementations","title":"ExprSyntaxProtocol Implementations","abstract":[],"url":"\/documentation\/macrobuilder\/booleanliteralexprsyntax\/exprsyntaxprotocol-implementations","kind":"article","role":"collectionGroup"},"doc://com.swallow.documentation.MacroBuilder/s17CustomReflectableP":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/s17CustomReflectableP","type":"unresolvable","title":"Swift.CustomReflectable"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BooleanLiteralExprSyntax/Hashable-Implementations":{"abstract":[],"url":"\/documentation\/macrobuilder\/booleanliteralexprsyntax\/hashable-implementations","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/Hashable-Implementations","kind":"article","type":"topic","role":"collectionGroup","title":"Hashable Implementations"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BooleanLiteralExprSyntax/SyntaxProtocol-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/SyntaxProtocol-Implementations","title":"SyntaxProtocol Implementations","abstract":[],"type":"topic","role":"collectionGroup","url":"\/documentation\/macrobuilder\/booleanliteralexprsyntax\/syntaxprotocol-implementations","kind":"article"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BooleanLiteralExprSyntax/booleanLiteral":{"kind":"symbol","abstract":[],"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/booleanLiteral","title":"booleanLiteral","deprecated":true,"type":"topic","url":"\/documentation\/macrobuilder\/booleanliteralexprsyntax\/booleanliteral","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"booleanLiteral"},{"text":": ","kind":"text"},{"text":"TokenSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BooleanLiteralExprSyntax/CustomReflectable-Implementations":{"abstract":[],"url":"\/documentation\/macrobuilder\/booleanliteralexprsyntax\/customreflectable-implementations","role":"collectionGroup","title":"CustomReflectable Implementations","type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/CustomReflectable-Implementations","kind":"article"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BooleanLiteralExprSyntax/unexpectedBeforeBooleanLiteral":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/unexpectedBeforeBooleanLiteral","url":"\/documentation\/macrobuilder\/booleanliteralexprsyntax\/unexpectedbeforebooleanliteral","role":"symbol","abstract":[],"deprecated":true,"kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"unexpectedBeforeBooleanLiteral","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax015UnexpectedNodesB0V","text":"UnexpectedNodesSyntax","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"title":"unexpectedBeforeBooleanLiteral","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BooleanLiteralExprSyntax/init(leadingTrivia:_:booleanLiteral:_:trailingTrivia:)":{"deprecated":true,"kind":"symbol","abstract":[],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/init(leadingTrivia:_:booleanLiteral:_:trailingTrivia:)","title":"init(leadingTrivia:_:booleanLiteral:_:trailingTrivia:)","url":"\/documentation\/macrobuilder\/booleanliteralexprsyntax\/init(leadingtrivia:_:booleanliteral:_:trailingtrivia:)","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"leadingTrivia"},{"text":": ","kind":"text"},{"text":"Trivia","preciseIdentifier":"s:11SwiftSyntax6TriviaV","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"kind":"typeIdentifier","text":"UnexpectedNodesSyntax","preciseIdentifier":"s:11SwiftSyntax015UnexpectedNodesB0V"},{"kind":"text","text":"?, "},{"text":"booleanLiteral","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","kind":"typeIdentifier","text":"TokenSyntax"},{"text":", ","kind":"text"},{"text":"UnexpectedNodesSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax015UnexpectedNodesB0V"},{"text":"?, ","kind":"text"},{"text":"trailingTrivia","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Trivia","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax6TriviaV"},{"text":"?)","kind":"text"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BooleanLiteralExprSyntax/init(leadingTrivia:_:literal:_:trailingTrivia:)":{"title":"init(leadingTrivia:_:literal:_:trailingTrivia:)","abstract":[],"url":"\/documentation\/macrobuilder\/booleanliteralexprsyntax\/init(leadingtrivia:_:literal:_:trailingtrivia:)","type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/init(leadingTrivia:_:literal:_:trailingTrivia:)","role":"symbol","kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"text":"leadingTrivia","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax6TriviaV","text":"Trivia","kind":"typeIdentifier"},{"kind":"text","text":"?, "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax015UnexpectedNodesB0V","text":"UnexpectedNodesSyntax"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"literal"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"TokenSyntax","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax015UnexpectedNodesB0V","kind":"typeIdentifier","text":"UnexpectedNodesSyntax"},{"kind":"text","text":"?, "},{"text":"trailingTrivia","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Trivia","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax6TriviaV"},{"text":"?)","kind":"text"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BooleanLiteralExprSyntax/init(_:)-6jezb":{"type":"topic","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/init(_:)-6jezb","title":"init(_:)","abstract":[{"type":"text","text":"Converts the given specialized node to this type. Returns "},{"type":"codeVoice","code":"nil"},{"text":" if the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"conversion is not possible."}],"role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"text":"?(some ","kind":"text"},{"kind":"typeIdentifier","text":"SyntaxProtocol","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP"},{"kind":"text","text":")"}],"url":"\/documentation\/macrobuilder\/booleanliteralexprsyntax\/init(_:)-6jezb"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BooleanLiteralExprSyntax/structure":{"abstract":[{"type":"text","text":"The statically allowed structure of the syntax node."}],"kind":"symbol","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"kind":"identifier","text":"structure"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B13NodeStructureO","text":"SyntaxNodeStructure","kind":"typeIdentifier"}],"type":"topic","url":"\/documentation\/macrobuilder\/booleanliteralexprsyntax\/structure","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/structure","title":"structure"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/BooleanLiteralExprSyntax/unexpectedAfterLiteral":{"type":"topic","url":"\/documentation\/macrobuilder\/booleanliteralexprsyntax\/unexpectedafterliteral","abstract":[],"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"unexpectedAfterLiteral"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax015UnexpectedNodesB0V","kind":"typeIdentifier","text":"UnexpectedNodesSyntax"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/BooleanLiteralExprSyntax\/unexpectedAfterLiteral","title":"unexpectedAfterLiteral","role":"symbol","kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SyntaxProtocol":{"title":"SyntaxProtocol","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxProtocol","navigatorTitle":[{"text":"SyntaxProtocol","kind":"identifier"}],"abstract":[{"text":"Provide common functionality for specialized syntax nodes. Extend this","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"protocol to provide common functionality for all syntax nodes."}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"SyntaxProtocol","kind":"identifier"}],"type":"topic","role":"symbol","url":"\/documentation\/macrobuilder\/syntaxprotocol"},"doc://com.swallow.documentation.MacroBuilder/s8CopyableP":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/s8CopyableP","type":"unresolvable","title":"Swift.Copyable"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprSyntaxProtocol":{"type":"topic","url":"\/documentation\/macrobuilder\/exprsyntaxprotocol","abstract":[{"text":"Protocol to which all ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprSyntax"},{"type":"text","text":" nodes conform."}],"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprSyntaxProtocol","kind":"symbol","title":"ExprSyntaxProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ExprSyntaxProtocol"}],"navigatorTitle":[{"text":"ExprSyntaxProtocol","kind":"identifier"}]},"doc://com.swallow.documentation.MacroBuilder/s23CustomStringConvertibleP":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/s23CustomStringConvertibleP","type":"unresolvable","title":"Swift.CustomStringConvertible"},"doc://com.swallow.documentation.MacroBuilder/s8SendableP":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/s8SendableP","type":"unresolvable","title":"Swift.Sendable"}}}