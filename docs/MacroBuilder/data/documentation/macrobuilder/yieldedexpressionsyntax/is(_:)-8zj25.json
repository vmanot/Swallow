{"sections":[],"metadata":{"role":"symbol","modules":[{"name":"MacroBuilder","relatedModules":["SwiftSyntax"]}],"extendedModule":"SwiftSyntax","roleHeading":"Instance Method","externalID":"s:11SwiftSyntax0B8ProtocolPAAE2isySbqd__mAaBRd__lF::SYNTHESIZED::s:11SwiftSyntax017YieldedExpressionB0V","title":"is(_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"`is`"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"symbolKind":"method"},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/YieldedExpressionSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/YieldedExpressionSyntax\/SyntaxProtocol-Implementations"]]},"kind":"symbol","identifier":{"url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/YieldedExpressionSyntax\/is(_:)-8zj25","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Checks if the current syntax node can be cast to a given specialized syntax type."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"`is`"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"S"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"syntaxType"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":".Type) -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":" ","kind":"text"},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"text":"S","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxProtocol","text":"SyntaxProtocol","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP"}],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"return-value","level":2,"text":"Return Value","type":"heading"},{"inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"true"},{"type":"text","text":" if the node can be cast, "},{"type":"codeVoice","code":"false"},{"text":" otherwise.","type":"text"}],"type":"paragraph"}]}],"variants":[{"paths":["\/documentation\/macrobuilder\/yieldedexpressionsyntax\/is(_:)-8zj25"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/YieldedExpressionSyntax/is(_:)-8zj25":{"kind":"symbol","title":"is(_:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/YieldedExpressionSyntax\/is(_:)-8zj25","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"`is`"},{"kind":"text","text":"<"},{"text":"S","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"url":"\/documentation\/macrobuilder\/yieldedexpressionsyntax\/is(_:)-8zj25","type":"topic","abstract":[{"type":"text","text":"Checks if the current syntax node can be cast to a given specialized syntax type."}],"role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/YieldedExpressionSyntax":{"navigatorTitle":[{"text":"YieldedExpressionSyntax","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/YieldedExpressionSyntax","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"YieldedExpressionSyntax"}],"url":"\/documentation\/macrobuilder\/yieldedexpressionsyntax","type":"topic","kind":"symbol","abstract":[],"title":"YieldedExpressionSyntax","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SyntaxProtocol":{"title":"SyntaxProtocol","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxProtocol","navigatorTitle":[{"text":"SyntaxProtocol","kind":"identifier"}],"abstract":[{"text":"Provide common functionality for specialized syntax nodes. Extend this","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"protocol to provide common functionality for all syntax nodes."}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"SyntaxProtocol","kind":"identifier"}],"type":"topic","role":"symbol","url":"\/documentation\/macrobuilder\/syntaxprotocol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/YieldedExpressionSyntax/SyntaxProtocol-Implementations":{"title":"SyntaxProtocol Implementations","url":"\/documentation\/macrobuilder\/yieldedexpressionsyntax\/syntaxprotocol-implementations","role":"collectionGroup","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/YieldedExpressionSyntax\/SyntaxProtocol-Implementations","abstract":[],"type":"topic","kind":"article"}}}