{"schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"`as`","kind":"identifier"},{"kind":"text","text":"<"},{"text":"S","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"syntaxType","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"S"},{"text":".Type) -> ","kind":"text"},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":"? "},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxProtocol","text":"SyntaxProtocol","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP"}],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"content","content":[{"text":"Return Value","anchor":"return-value","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"An instance of the specialized syntax type, or "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" if the cast fails."}]}]},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"text":"This method is marked as deprecated because it is advised not to use it for unrelated casts.","type":"text"}]}],"type":"aside","name":"Note"}]}],"identifier":{"url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/Element\/as(_:)-6qhbp","interfaceLanguage":"swift"},"deprecationSummary":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This cast will always fail"}]}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/Element","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/Element\/SyntaxChildChoices-Implementations"]]},"abstract":[{"text":"Attempts to cast the current ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxChildChoices"},{"text":" instance to a given specialized syntax type.","type":"text"}],"metadata":{"roleHeading":"Instance Method","modules":[{"relatedModules":["SwiftSyntax"],"name":"MacroBuilder"}],"title":"as(_:)","role":"symbol","symbolKind":"method","extendedModule":"SwiftSyntax","platforms":[],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"`as`"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"text":"S","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"externalID":"s:11SwiftSyntax0B12ChildChoicesPAAE2asyqd__Sgqd__mAA0B8ProtocolRd__lF::SYNTHESIZED::s:11SwiftSyntax024StringLiteralSegmentListB0V7ElementO"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/macrobuilder\/stringliteralsegmentlistsyntax\/element\/as(_:)-6qhbp"]}],"sections":[],"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StringLiteralSegmentListSyntax/Element/as(_:)-6qhbp":{"role":"symbol","kind":"symbol","abstract":[{"text":"Attempts to cast the current ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxChildChoices","isActive":true},{"type":"text","text":" instance to a given specialized syntax type."}],"url":"\/documentation\/macrobuilder\/stringliteralsegmentlistsyntax\/element\/as(_:)-6qhbp","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"`as`","kind":"identifier"},{"kind":"text","text":"<"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"S"},{"text":".Type) -> ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"deprecated":true,"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/Element\/as(_:)-6qhbp","title":"as(_:)"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SyntaxProtocol":{"title":"SyntaxProtocol","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxProtocol","navigatorTitle":[{"text":"SyntaxProtocol","kind":"identifier"}],"abstract":[{"text":"Provide common functionality for specialized syntax nodes. Extend this","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"protocol to provide common functionality for all syntax nodes."}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"SyntaxProtocol","kind":"identifier"}],"type":"topic","role":"symbol","url":"\/documentation\/macrobuilder\/syntaxprotocol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StringLiteralSegmentListSyntax/Element/SyntaxChildChoices-Implementations":{"abstract":[],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/Element\/SyntaxChildChoices-Implementations","role":"collectionGroup","kind":"article","type":"topic","title":"SyntaxChildChoices Implementations","url":"\/documentation\/macrobuilder\/stringliteralsegmentlistsyntax\/element\/syntaxchildchoices-implementations"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/Syntax":{"abstract":[{"type":"text","text":"A Syntax node represents a tree of nodes with tokens at the leaves."},{"text":" ","type":"text"},{"type":"text","text":"Each node has accessors for its known children, and allows efficient"},{"text":" ","type":"text"},{"text":"iteration over the children through its ","type":"text"},{"type":"codeVoice","code":"children"},{"text":" property.","type":"text"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Syntax"}],"url":"\/documentation\/macrobuilder\/syntax","title":"Syntax","type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Syntax","kind":"identifier"}],"kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StringLiteralSegmentListSyntax/Element":{"kind":"symbol","navigatorTitle":[{"text":"Element","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/Element","title":"StringLiteralSegmentListSyntax.Element","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Element"}],"url":"\/documentation\/macrobuilder\/stringliteralsegmentlistsyntax\/element","role":"symbol","abstract":[],"type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SyntaxChildChoices":{"url":"\/documentation\/macrobuilder\/syntaxchildchoices","navigatorTitle":[{"text":"SyntaxChildChoices","kind":"identifier"}],"abstract":[{"type":"text","text":"Protocol for the enums nested inside "},{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax","type":"reference","isActive":true},{"type":"text","text":" nodes that enumerate all the"},{"type":"text","text":" "},{"type":"text","text":"possible types a child node might have."}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxChildChoices","kind":"symbol","title":"SyntaxChildChoices","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SyntaxChildChoices","kind":"identifier"}],"role":"symbol","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StringLiteralSegmentListSyntax":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"StringLiteralSegmentListSyntax","kind":"identifier"}],"role":"symbol","kind":"symbol","abstract":[],"url":"\/documentation\/macrobuilder\/stringliteralsegmentlistsyntax","title":"StringLiteralSegmentListSyntax","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax","navigatorTitle":[{"text":"StringLiteralSegmentListSyntax","kind":"identifier"}],"type":"topic"}}}