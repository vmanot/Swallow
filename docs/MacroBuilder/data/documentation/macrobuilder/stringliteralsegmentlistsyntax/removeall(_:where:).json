{"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"removeAll"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":".Type, ","kind":"text"},{"kind":"externalParam","text":"where"},{"text":": (","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"}],"extendedModule":"SwiftSyntax","role":"symbol","externalID":"s:11SwiftSyntax0B10CollectionP0aB9UtilitiesE9removeAll_5whereyqd__m_Sbqd__KXEtKAA0B8ProtocolRd__lF::SYNTHESIZED::s:11SwiftSyntax024StringLiteralSegmentListB0V","roleHeading":"Instance Method","modules":[{"name":"MacroBuilder","relatedModules":["SwiftSyntax"]}],"title":"removeAll(_:where:)","symbolKind":"method"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"mutating"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"removeAll","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"type"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":".Type, ","kind":"text"},{"kind":"externalParam","text":"where"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"shouldBeRemoved"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"kind":"text","text":" "},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":" : "},{"text":"SyntaxProtocol","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxProtocol","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP"}]}]}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/SyntaxCollection-Implementations"]]},"sections":[],"kind":"symbol","variants":[{"paths":["\/documentation\/macrobuilder\/stringliteralsegmentlistsyntax\/removeall(_:where:)"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"identifier":{"url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/removeAll(_:where:)","interfaceLanguage":"swift"},"abstract":[{"text":"Inherited from ","type":"text"},{"code":"SyntaxCollection.removeAll(_:where:)","type":"codeVoice"},{"text":".","type":"text"}],"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StringLiteralSegmentListSyntax/SyntaxCollection-Implementations":{"title":"SyntaxCollection Implementations","abstract":[],"role":"collectionGroup","type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/SyntaxCollection-Implementations","url":"\/documentation\/macrobuilder\/stringliteralsegmentlistsyntax\/syntaxcollection-implementations","kind":"article"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StringLiteralSegmentListSyntax/removeAll(_:where:)":{"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"removeAll","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":".Type, "},{"text":"where","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/removeAll(_:where:)","url":"\/documentation\/macrobuilder\/stringliteralsegmentlistsyntax\/removeall(_:where:)","title":"removeAll(_:where:)","abstract":[]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StringLiteralSegmentListSyntax":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"StringLiteralSegmentListSyntax","kind":"identifier"}],"role":"symbol","kind":"symbol","abstract":[],"url":"\/documentation\/macrobuilder\/stringliteralsegmentlistsyntax","title":"StringLiteralSegmentListSyntax","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax","navigatorTitle":[{"text":"StringLiteralSegmentListSyntax","kind":"identifier"}],"type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SyntaxProtocol":{"title":"SyntaxProtocol","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxProtocol","navigatorTitle":[{"text":"SyntaxProtocol","kind":"identifier"}],"abstract":[{"text":"Provide common functionality for specialized syntax nodes. Extend this","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"protocol to provide common functionality for all syntax nodes."}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"SyntaxProtocol","kind":"identifier"}],"type":"topic","role":"symbol","url":"\/documentation\/macrobuilder\/syntaxprotocol"}}}