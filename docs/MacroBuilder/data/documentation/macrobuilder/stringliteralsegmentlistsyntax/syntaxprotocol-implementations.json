{"metadata":{"roleHeading":"API Collection","modules":[{"name":"MacroBuilder"}],"title":"SyntaxProtocol Implementations","role":"collectionGroup"},"topicSections":[{"identifiers":["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/init(_:)-3jvw","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/init(_:)-518v0","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/init(validating:)"],"title":"Initializers","anchor":"Initializers","generated":true},{"title":"Instance Properties","generated":true,"identifiers":["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/byteRange","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/byteSize","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/byteSizeAfterTrimmingTrivia","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/contentLength","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/debugDescription","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/description","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/detached","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/endPosition","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/endPositionBeforeTrailingTrivia","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/firstToken","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/hasError","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/hasMaximumNestingLevelOverflow","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/hasParent","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/hasSequenceExpr","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/hasWarning","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/id","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/index","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/isImplicit","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/keyPathInParent","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/kind","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/lastToken","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/leadingTrivia","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/leadingTriviaLength","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/nextToken","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/parent","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/position","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/positionAfterSkippingLeadingTrivia","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/previousToken","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/root","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/syntaxNodeType","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/syntaxTextBytes","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/totalByteRange","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/totalLength","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/trailingTrivia","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/trailingTriviaLength","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/trimmed","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/trimmedByteRange","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/trimmedDescription","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/trimmedLength"],"anchor":"Instance-Properties"},{"generated":true,"identifiers":["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/allMacroLexicalContexts(enclosingSyntax:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/as(_:)-3filq","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/as(_:)-9scak","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/as(_:)-hs5o","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/asMacroLexicalContext()","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/asProtocol(_:)-16i6b","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/asProtocol(_:)-1aipi","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/asProtocol(_:)-1kh1e","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/asProtocol(_:)-1xozj","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/asProtocol(_:)-23o4w","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/asProtocol(_:)-2nn1b","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/asProtocol(_:)-30tuq","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/asProtocol(_:)-3oro2","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/asProtocol(_:)-465ta","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/asProtocol(_:)-4kvyj","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/asProtocol(_:)-4t36w","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/asProtocol(_:)-51ssx","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/asProtocol(_:)-9oxu2","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/asProtocol(_:)-9wwhd","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/cast(_:)-5cjak","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/cast(_:)-7zfgh","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/cast(_:)-8no2m","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/children(viewMode:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/debugDescription(includeTrivia:converter:mark:indentString:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/detach()","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/endLocation(converter:afterTrailingTrivia:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/expand(macroSpecs:contextGenerator:indentationWidth:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/expand(macros:contextGenerator:indentationWidth:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/expand(macros:in:indentationWidth:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/firstToken(viewMode:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/formatted(using:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/is(_:)-1v7ip","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/is(_:)-2xb9l","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/is(_:)-9fhuo","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/isProtocol(_:)-2uf8v","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/isProtocol(_:)-427m5","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/isProtocol(_:)-4ust","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/isProtocol(_:)-6353z","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/isProtocol(_:)-66uuk","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/isProtocol(_:)-6fwca","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/isProtocol(_:)-6mjt0","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/isProtocol(_:)-78ion","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/isProtocol(_:)-7cr93","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/isProtocol(_:)-7iy9z","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/isProtocol(_:)-7n2gt","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/isProtocol(_:)-80m07","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/isProtocol(_:)-8fy3a","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/isProtocol(_:)-8zd7q","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/lastToken(viewMode:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/map(_:_:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/modifying(_:_:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/nextToken(viewMode:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/node(at:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/previousToken(viewMode:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/startLocation(converter:afterLeadingTrivia:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/token(at:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/tokens(viewMode:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/trimmed(matching:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/trimmedDescription(matching:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/with(_:_:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/write(to:)"],"title":"Instance Methods","anchor":"Instance-Methods"},{"generated":true,"anchor":"Type-Properties","title":"Type Properties","identifiers":["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/structure"]}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/macrobuilder\/stringliteralsegmentlistsyntax\/syntaxprotocol-implementations"]}],"kind":"article","identifier":{"url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/SyntaxProtocol-Implementations","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SyntaxChildren":{"title":"SyntaxChildren","abstract":[{"text":"Collection that contains the present child ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax","type":"reference"},{"type":"text","text":" nodes of the given node."}],"url":"\/documentation\/macrobuilder\/syntaxchildren","role":"symbol","navigatorTitle":[{"text":"SyntaxChildren","kind":"identifier"}],"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SyntaxChildren","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxChildren"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StringLiteralSegmentListSyntax/totalLength":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/totalLength","kind":"symbol","title":"totalLength","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"totalLength","kind":"identifier"},{"kind":"text","text":": "},{"text":"SourceLength","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"The length of this node including all of its trivia."}],"role":"symbol","url":"\/documentation\/macrobuilder\/stringliteralsegmentlistsyntax\/totallength"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StringLiteralSegmentListSyntax/startLocation(converter:afterLeadingTrivia:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"startLocation","kind":"identifier"},{"text":"(","kind":"text"},{"text":"converter","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC","text":"SourceLocationConverter"},{"kind":"text","text":", "},{"text":"afterLeadingTrivia","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"SourceLocation","preciseIdentifier":"s:11SwiftSyntax14SourceLocationV"}],"role":"symbol","type":"topic","url":"\/documentation\/macrobuilder\/stringliteralsegmentlistsyntax\/startlocation(converter:afterleadingtrivia:)","title":"startLocation(converter:afterLeadingTrivia:)","abstract":[{"type":"text","text":"The starting location, in the provided file, of this Syntax node."}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/startLocation(converter:afterLeadingTrivia:)","kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StringLiteralSegmentListSyntax/firstToken":{"deprecated":true,"type":"topic","abstract":[],"url":"\/documentation\/macrobuilder\/stringliteralsegmentlistsyntax\/firsttoken","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/firstToken","kind":"symbol","title":"firstToken","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"firstToken"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"TokenSyntax","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"kind":"text","text":"?"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StringLiteralSegmentListSyntax/write(to:)":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/write(to:)","abstract":[{"type":"text","text":"Prints the raw value of this node to the provided stream."}],"url":"\/documentation\/macrobuilder\/stringliteralsegmentlistsyntax\/write(to:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"write"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Target"},{"kind":"text","text":">("},{"text":"to","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Target","kind":"typeIdentifier"},{"kind":"text","text":")"}],"kind":"symbol","title":"write(to:)","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StringLiteralSegmentListSyntax/totalByteRange":{"abstract":[{"text":"The byte source range of this node including leading and trailing trivia.","type":"text"}],"type":"topic","role":"symbol","title":"totalByteRange","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"totalByteRange","kind":"identifier"},{"text":": ","kind":"text"},{"text":"ByteSourceRange","preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangeV","kind":"typeIdentifier"}],"kind":"symbol","url":"\/documentation\/macrobuilder\/stringliteralsegmentlistsyntax\/totalbyterange","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/totalByteRange"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StringLiteralSegmentListSyntax/init(_:)-3jvw":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/init(_:)-3jvw","abstract":[{"text":"Initializes a new instance of the conforming type from a given specialized syntax node.","type":"text"}],"url":"\/documentation\/macrobuilder\/stringliteralsegmentlistsyntax\/init(_:)-3jvw","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"?<","kind":"text"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":"?)"}],"kind":"symbol","title":"init(_:)","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StringLiteralSegmentListSyntax/asProtocol(_:)-4kvyj":{"abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"text":" ","type":"text"},{"code":"WithTrailingCommaSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"type":"topic","role":"symbol","title":"asProtocol(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"((any "},{"kind":"typeIdentifier","text":"WithTrailingCommaSyntax","preciseIdentifier":"s:11SwiftSyntax017WithTrailingCommaB0P"},{"text":").Type) -> (any ","kind":"text"},{"text":"WithTrailingCommaSyntax","preciseIdentifier":"s:11SwiftSyntax017WithTrailingCommaB0P","kind":"typeIdentifier"},{"text":")?","kind":"text"}],"kind":"symbol","url":"\/documentation\/macrobuilder\/stringliteralsegmentlistsyntax\/asprotocol(_:)-4kvyj","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/asProtocol(_:)-4kvyj"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StringLiteralSegmentListSyntax/asMacroLexicalContext()":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/asMacroLexicalContext()","abstract":[{"type":"text","text":"If this syntax node acts as a lexical context from the perspective"},{"text":" ","type":"text"},{"text":"of a macro, return a new syntax node based on this node that strips all","type":"text"},{"type":"text","text":" "},{"type":"text","text":"information that isn’t supposed to be exposed as a lexical context, such"},{"type":"text","text":" "},{"type":"text","text":"as function bodies or the members of types\/extensions."}],"url":"\/documentation\/macrobuilder\/stringliteralsegmentlistsyntax\/asmacrolexicalcontext()","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"asMacroLexicalContext","kind":"identifier"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"kind":"symbol","title":"asMacroLexicalContext()","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StringLiteralSegmentListSyntax/asProtocol(_:)-23o4w":{"abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"code":"WithGenericParametersSyntax","type":"codeVoice"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"type":"topic","role":"symbol","title":"asProtocol(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"text":"((any ","kind":"text"},{"text":"WithGenericParametersSyntax","preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P","kind":"typeIdentifier"},{"text":").Type) -> (any ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P","text":"WithGenericParametersSyntax"},{"kind":"text","text":")?"}],"kind":"symbol","url":"\/documentation\/macrobuilder\/stringliteralsegmentlistsyntax\/asprotocol(_:)-23o4w","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/asProtocol(_:)-23o4w"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StringLiteralSegmentListSyntax/expand(macros:contextGenerator:indentationWidth:)":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/expand(macros:contextGenerator:indentationWidth:)","abstract":[],"url":"\/documentation\/macrobuilder\/stringliteralsegmentlistsyntax\/expand(macros:contextgenerator:indentationwidth:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"expand","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Context","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"macros"},{"kind":"text","text":": ["},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"kind":"text","text":" : any "},{"preciseIdentifier":"s:17SwiftSyntaxMacros5MacroP","kind":"typeIdentifier","text":"Macro"},{"kind":"text","text":".Type], "},{"text":"contextGenerator","kind":"externalParam"},{"text":": (","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Context","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"indentationWidth","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax6TriviaV","text":"Trivia","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier"}],"kind":"symbol","title":"expand(macros:contextGenerator:indentationWidth:)","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StringLiteralSegmentListSyntax/is(_:)-2xb9l":{"abstract":[{"text":"Checks if the current syntax node can be cast to a given specialized syntax type.","type":"text"}],"type":"topic","role":"symbol","title":"is(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"`is`","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"S"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"S"},{"text":".Type) -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"kind":"symbol","url":"\/documentation\/macrobuilder\/stringliteralsegmentlistsyntax\/is(_:)-2xb9l","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/is(_:)-2xb9l"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StringLiteralSegmentListSyntax/asProtocol(_:)-51ssx":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/asProtocol(_:)-51ssx","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"code":"WithStatementsSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"url":"\/documentation\/macrobuilder\/stringliteralsegmentlistsyntax\/asprotocol(_:)-51ssx","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"kind":"text","text":"((any "},{"text":"WithStatementsSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax014WithStatementsB0P"},{"text":").Type) -> (any ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax014WithStatementsB0P","text":"WithStatementsSyntax","kind":"typeIdentifier"},{"text":")?","kind":"text"}],"kind":"symbol","title":"asProtocol(_:)","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StringLiteralSegmentListSyntax/isProtocol(_:)-4ust":{"role":"symbol","title":"isProtocol(_:)","type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/isProtocol(_:)-4ust","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"isProtocol"},{"kind":"text","text":"((any "},{"kind":"typeIdentifier","text":"FreestandingMacroExpansionSyntax","preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P"},{"text":").Type) -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"FreestandingMacroExpansionSyntax"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"url":"\/documentation\/macrobuilder\/stringliteralsegmentlistsyntax\/isprotocol(_:)-4ust","kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StringLiteralSegmentListSyntax/isProtocol(_:)-427m5":{"abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithTrailingCommaSyntax"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"type":"topic","role":"symbol","title":"isProtocol(_:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"isProtocol"},{"kind":"text","text":"((any "},{"text":"WithTrailingCommaSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax017WithTrailingCommaB0P"},{"text":").Type) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"kind":"symbol","url":"\/documentation\/macrobuilder\/stringliteralsegmentlistsyntax\/isprotocol(_:)-427m5","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/isProtocol(_:)-427m5"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StringLiteralSegmentListSyntax/trimmed(matching:)":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/trimmed(matching:)","abstract":[{"text":"A copy of this node with pieces that match ","type":"text"},{"type":"codeVoice","code":"matching"},{"type":"text","text":" trimmed from the"},{"text":" ","type":"text"},{"type":"text","text":"leading trivia of the first token and trailing trivia of the last token."}],"url":"\/documentation\/macrobuilder\/stringliteralsegmentlistsyntax\/trimmed(matching:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"trimmed","kind":"identifier"},{"text":"(","kind":"text"},{"text":"matching","kind":"externalParam"},{"kind":"text","text":": ("},{"text":"TriviaPiece","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax11TriviaPieceO"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"kind":"symbol","title":"trimmed(matching:)","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StringLiteralSegmentListSyntax/trailingTriviaLength":{"abstract":[{"text":"The length this node’s trailing trivia takes up spelled out in source.","type":"text"}],"type":"topic","role":"symbol","title":"trailingTriviaLength","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"trailingTriviaLength","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV","text":"SourceLength"}],"kind":"symbol","url":"\/documentation\/macrobuilder\/stringliteralsegmentlistsyntax\/trailingtrivialength","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/trailingTriviaLength"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StringLiteralSegmentListSyntax/sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)","abstract":[{"text":"The source range, in the provided file, of this Syntax node.","type":"text"}],"url":"\/documentation\/macrobuilder\/stringliteralsegmentlistsyntax\/sourcerange(converter:afterleadingtrivia:aftertrailingtrivia:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"sourceRange","kind":"identifier"},{"text":"(","kind":"text"},{"text":"converter","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"SourceLocationConverter","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"afterLeadingTrivia"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"afterTrailingTrivia"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") -> ","kind":"text"},{"text":"SourceRange","preciseIdentifier":"s:11SwiftSyntax11SourceRangeV","kind":"typeIdentifier"}],"kind":"symbol","title":"sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StringLiteralSegmentListSyntax/isProtocol(_:)-8fy3a":{"abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"WithModifiersSyntax"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"type":"topic","role":"symbol","title":"isProtocol(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"isProtocol"},{"text":"((any ","kind":"text"},{"text":"WithModifiersSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013WithModifiersB0P"},{"text":").Type) -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"kind":"symbol","url":"\/documentation\/macrobuilder\/stringliteralsegmentlistsyntax\/isprotocol(_:)-8fy3a","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/isProtocol(_:)-8fy3a"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StringLiteralSegmentListSyntax/children(viewMode:)":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/children(viewMode:)","abstract":[{"text":"A sequence over the children of this node.","type":"text"}],"url":"\/documentation\/macrobuilder\/stringliteralsegmentlistsyntax\/children(viewmode:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"children","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"viewMode"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","text":"SyntaxTreeViewMode","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"SyntaxChildren","preciseIdentifier":"s:11SwiftSyntax0B8ChildrenV"}],"kind":"symbol","title":"children(viewMode:)","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StringLiteralSegmentListSyntax/trimmedDescription(matching:)":{"abstract":[{"type":"text","text":"The description of this node with pieces that match "},{"type":"codeVoice","code":"matching"},{"type":"text","text":" removed"},{"type":"text","text":" "},{"type":"text","text":"from the leading trivia of the first token and trailing trivia of the"},{"type":"text","text":" "},{"type":"text","text":"last token."}],"type":"topic","role":"symbol","title":"trimmedDescription(matching:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"trimmedDescription","kind":"identifier"},{"text":"(","kind":"text"},{"text":"matching","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"TriviaPiece","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax11TriviaPieceO"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"}],"kind":"symbol","url":"\/documentation\/macrobuilder\/stringliteralsegmentlistsyntax\/trimmeddescription(matching:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/trimmedDescription(matching:)"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StringLiteralSegmentListSyntax/leadingTriviaLength":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/leadingTriviaLength","abstract":[{"text":"The length this node’s leading trivia takes up spelled out in source.","type":"text"}],"url":"\/documentation\/macrobuilder\/stringliteralsegmentlistsyntax\/leadingtrivialength","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"leadingTriviaLength","kind":"identifier"},{"text":": ","kind":"text"},{"text":"SourceLength","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV","kind":"typeIdentifier"}],"kind":"symbol","title":"leadingTriviaLength","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StringLiteralSegmentListSyntax/with(_:_:)":{"abstract":[{"type":"text","text":"Returns a new syntax node that has the child at "},{"code":"keyPath","type":"codeVoice"},{"type":"text","text":" replaced by"},{"type":"text","text":" "},{"type":"codeVoice","code":"value"},{"text":".","type":"text"}],"type":"topic","role":"symbol","title":"with(_:_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"with","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:s15WritableKeyPathC","kind":"typeIdentifier","text":"WritableKeyPath"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">, "},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"kind":"symbol","url":"\/documentation\/macrobuilder\/stringliteralsegmentlistsyntax\/with(_:_:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/with(_:_:)"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/TokenDiagnostic":{"type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"TokenDiagnostic"}],"role":"symbol","abstract":[{"text":"If the token has an error that’s inherent to the token itself and not its","type":"text"},{"text":" ","type":"text"},{"text":"surrounding structure, this defines the type of the error.","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"byteOffset"},{"type":"text","text":" specifies at which offset the error occurred."}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TokenDiagnostic","title":"TokenDiagnostic","url":"\/documentation\/macrobuilder\/tokendiagnostic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"TokenDiagnostic","kind":"identifier"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StringLiteralSegmentListSyntax/keyPathInParent":{"url":"\/documentation\/macrobuilder\/stringliteralsegmentlistsyntax\/keypathinparent","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/keyPathInParent","role":"symbol","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"keyPathInParent","kind":"identifier"},{"kind":"text","text":": "},{"text":"AnyKeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s10AnyKeyPathC"},{"text":"?","kind":"text"}],"kind":"symbol","abstract":[],"title":"keyPathInParent"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StringLiteralSegmentListSyntax/allMacroLexicalContexts(enclosingSyntax:)":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/allMacroLexicalContexts(enclosingSyntax:)","abstract":[{"text":"Return an array of enclosing lexical contexts for the purpose of macros,","type":"text"},{"text":" ","type":"text"},{"text":"from the innermost enclosing lexical context (first in the array) to the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"outermost. If this syntax node itself is a lexical context, it will be"},{"type":"text","text":" "},{"type":"text","text":"the innermost lexical context."}],"url":"\/documentation\/macrobuilder\/stringliteralsegmentlistsyntax\/allmacrolexicalcontexts(enclosingsyntax:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"allMacroLexicalContexts","kind":"identifier"},{"text":"(","kind":"text"},{"text":"enclosingSyntax","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax"},{"text":"?) -> [","kind":"text"},{"text":"Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"text":"]","kind":"text"}],"kind":"symbol","title":"allMacroLexicalContexts(enclosingSyntax:)","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StringLiteralSegmentListSyntax/cast(_:)-5cjak":{"abstract":[{"type":"text","text":"Force-casts the current syntax node to a given specialized syntax type."}],"type":"topic","role":"symbol","title":"cast(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"cast"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"text":"S","kind":"typeIdentifier"}],"kind":"symbol","url":"\/documentation\/macrobuilder\/stringliteralsegmentlistsyntax\/cast(_:)-5cjak","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/cast(_:)-5cjak"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StringLiteralSegmentListSyntax/hasWarning":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/hasWarning","abstract":[{"type":"text","text":"Whether the tree contained by this layout has any tokens with a"},{"type":"text","text":" "},{"isActive":true,"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TokenDiagnostic","type":"reference"},{"text":" of severity ","type":"text"},{"type":"codeVoice","code":"warning"},{"text":".","type":"text"}],"url":"\/documentation\/macrobuilder\/stringliteralsegmentlistsyntax\/haswarning","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"hasWarning","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"kind":"symbol","title":"hasWarning","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StringLiteralSegmentListSyntax/root":{"abstract":[{"type":"text","text":"The root of the tree in which this node resides."}],"type":"topic","role":"symbol","title":"root","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"root","kind":"identifier"},{"kind":"text","text":": "},{"text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier"}],"kind":"symbol","url":"\/documentation\/macrobuilder\/stringliteralsegmentlistsyntax\/root","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/root"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StringLiteralSegmentListSyntax/byteSize":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/byteSize","abstract":[{"text":"The textual byte length of this node including leading and trailing trivia.","type":"text"}],"url":"\/documentation\/macrobuilder\/stringliteralsegmentlistsyntax\/bytesize","role":"symbol","deprecated":true,"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"byteSize","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"}],"kind":"symbol","title":"byteSize","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StringLiteralSegmentListSyntax/isProtocol(_:)-80m07":{"abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"MissingNodeSyntax"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"type":"topic","role":"symbol","title":"isProtocol(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"text":"((any ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax011MissingNodeB0P","text":"MissingNodeSyntax","kind":"typeIdentifier"},{"kind":"text","text":").Type) -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"kind":"symbol","url":"\/documentation\/macrobuilder\/stringliteralsegmentlistsyntax\/isprotocol(_:)-80m07","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/isProtocol(_:)-80m07"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StringLiteralSegmentListSyntax/as(_:)-hs5o":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/as(_:)-hs5o","abstract":[{"type":"text","text":"Attempts to upcast the current syntax node to "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax"},{"type":"text","text":" node."}],"url":"\/documentation\/macrobuilder\/stringliteralsegmentlistsyntax\/as(_:)-hs5o","role":"symbol","deprecated":true,"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"`as`","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier"},{"kind":"text","text":".Type) -> "},{"text":"Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"text":"?","kind":"text"}],"kind":"symbol","title":"as(_:)","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StringLiteralSegmentListSyntax/nextToken(viewMode:)":{"abstract":[{"type":"text","text":"Recursively walks through the tree to find the next token semantically"},{"type":"text","text":" "},{"text":"after this node.","type":"text"}],"type":"topic","role":"symbol","title":"nextToken(viewMode:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"nextToken","kind":"identifier"},{"text":"(","kind":"text"},{"text":"viewMode","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","kind":"typeIdentifier","text":"SyntaxTreeViewMode"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"kind":"symbol","url":"\/documentation\/macrobuilder\/stringliteralsegmentlistsyntax\/nexttoken(viewmode:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/nextToken(viewMode:)"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StringLiteralSegmentListSyntax/leadingTrivia":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/leadingTrivia","abstract":[{"type":"text","text":"The leading trivia of this syntax node."}],"url":"\/documentation\/macrobuilder\/stringliteralsegmentlistsyntax\/leadingtrivia","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"leadingTrivia"},{"text":": ","kind":"text"},{"text":"Trivia","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax6TriviaV"}],"kind":"symbol","title":"leadingTrivia","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StringLiteralSegmentListSyntax/byteSizeAfterTrimmingTrivia":{"abstract":[{"type":"text","text":"The textual byte length of this node excluding leading and trailing trivia."}],"type":"topic","role":"symbol","deprecated":true,"title":"byteSizeAfterTrimmingTrivia","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"byteSizeAfterTrimmingTrivia"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"}],"kind":"symbol","url":"\/documentation\/macrobuilder\/stringliteralsegmentlistsyntax\/bytesizeaftertrimmingtrivia","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/byteSizeAfterTrimmingTrivia"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StringLiteralSegmentListSyntax/map(_:_:)":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/map(_:_:)","abstract":[],"url":"\/documentation\/macrobuilder\/stringliteralsegmentlistsyntax\/map(_:_:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"map"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:s15WritableKeyPathC","text":"WritableKeyPath","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":">, (","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"kind":"symbol","title":"map(_:_:)","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StringLiteralSegmentListSyntax/asProtocol(_:)-16i6b":{"abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"code":"WithAttributesSyntax","type":"codeVoice"},{"text":". Otherwise return ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"type":"topic","role":"symbol","title":"asProtocol(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"text":"((any ","kind":"text"},{"text":"WithAttributesSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax014WithAttributesB0P"},{"text":").Type) -> (any ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax014WithAttributesB0P","text":"WithAttributesSyntax","kind":"typeIdentifier"},{"text":")?","kind":"text"}],"kind":"symbol","url":"\/documentation\/macrobuilder\/stringliteralsegmentlistsyntax\/asprotocol(_:)-16i6b","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/asProtocol(_:)-16i6b"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StringLiteralSegmentListSyntax/index":{"abstract":[{"text":"The index of this node in a ","type":"text"},{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxChildren","type":"reference","isActive":true},{"type":"text","text":" collection."}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/index","url":"\/documentation\/macrobuilder\/stringliteralsegmentlistsyntax\/index","role":"symbol","deprecated":true,"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"index"},{"kind":"text","text":": "},{"text":"SyntaxChildrenIndex","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B13ChildrenIndexV"}],"type":"topic","kind":"symbol","title":"index"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StringLiteralSegmentListSyntax/node(at:)":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/node(at:)","abstract":[{"type":"text","text":"If the node with the given "},{"code":"syntaxIdentifier","type":"codeVoice"},{"text":" is a (recursive) child of this node, return the node with that","type":"text"},{"text":" ","type":"text"},{"text":"identifier.","type":"text"}],"url":"\/documentation\/macrobuilder\/stringliteralsegmentlistsyntax\/node(at:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"node","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"at"},{"kind":"text","text":": "},{"text":"SyntaxIdentifier","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B10IdentifierV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"text":"?","kind":"text"}],"kind":"symbol","title":"node(at:)","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StringLiteralSegmentListSyntax/hasError":{"abstract":[{"text":"Whether the tree contained by this layout has any","type":"text"}],"type":"topic","role":"symbol","title":"hasError","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"hasError","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"kind":"symbol","url":"\/documentation\/macrobuilder\/stringliteralsegmentlistsyntax\/haserror","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/hasError"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StringLiteralSegmentListSyntax/previousToken(viewMode:)":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/previousToken(viewMode:)","abstract":[{"type":"text","text":"Recursively walks through the tree to find the token semantically before"},{"type":"text","text":" "},{"text":"this node.","type":"text"}],"url":"\/documentation\/macrobuilder\/stringliteralsegmentlistsyntax\/previoustoken(viewmode:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"previousToken","kind":"identifier"},{"text":"(","kind":"text"},{"text":"viewMode","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","text":"SyntaxTreeViewMode"},{"text":") -> ","kind":"text"},{"text":"TokenSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"text":"?","kind":"text"}],"kind":"symbol","title":"previousToken(viewMode:)","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StringLiteralSegmentListSyntax/as(_:)-9scak":{"abstract":[{"text":"Attempts to cast the current syntax node to a given specialized syntax type.","type":"text"}],"type":"topic","role":"symbol","title":"as(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"`as`"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","text":"S"},{"text":"?","kind":"text"}],"kind":"symbol","url":"\/documentation\/macrobuilder\/stringliteralsegmentlistsyntax\/as(_:)-9scak","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/as(_:)-9scak"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StringLiteralSegmentListSyntax/asProtocol(_:)-1xozj":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/asProtocol(_:)-1xozj","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"text":" ","type":"text"},{"code":"FreestandingMacroExpansionSyntax","type":"codeVoice"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"url":"\/documentation\/macrobuilder\/stringliteralsegmentlistsyntax\/asprotocol(_:)-1xozj","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"((any "},{"kind":"typeIdentifier","text":"FreestandingMacroExpansionSyntax","preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P"},{"text":").Type) -> (any ","kind":"text"},{"text":"FreestandingMacroExpansionSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P"},{"text":")?","kind":"text"}],"kind":"symbol","title":"asProtocol(_:)","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StringLiteralSegmentListSyntax/trailingTrivia":{"url":"\/documentation\/macrobuilder\/stringliteralsegmentlistsyntax\/trailingtrivia","type":"topic","abstract":[{"type":"text","text":"The trailing trivia of this syntax node."}],"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/trailingTrivia","kind":"symbol","title":"trailingTrivia","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"trailingTrivia","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax6TriviaV","text":"Trivia"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StringLiteralSegmentListSyntax/byteRange":{"abstract":[],"type":"topic","role":"symbol","deprecated":true,"title":"byteRange","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"byteRange","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ByteSourceRange","preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangeV"}],"kind":"symbol","url":"\/documentation\/macrobuilder\/stringliteralsegmentlistsyntax\/byterange","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/byteRange"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StringLiteralSegmentListSyntax/formatted(using:)":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/formatted(using:)","abstract":[],"url":"\/documentation\/macrobuilder\/stringliteralsegmentlistsyntax\/formatted(using:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"formatted","kind":"identifier"},{"text":"(","kind":"text"},{"text":"using","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"BasicFormat","kind":"typeIdentifier","preciseIdentifier":"s:16SwiftBasicFormat0bC0C"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax"}],"kind":"symbol","title":"formatted(using:)","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StringLiteralSegmentListSyntax/is(_:)-9fhuo":{"abstract":[{"text":"Checks if the current syntax node can be upcast to ","type":"text"},{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax","type":"reference","isActive":true},{"text":" node.","type":"text"}],"type":"topic","role":"symbol","deprecated":true,"title":"is(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"`is`","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"kind":"text","text":".Type) -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"kind":"symbol","url":"\/documentation\/macrobuilder\/stringliteralsegmentlistsyntax\/is(_:)-9fhuo","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/is(_:)-9fhuo"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StringLiteralSegmentListSyntax/init(_:)-518v0":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/init(_:)-518v0","abstract":[{"type":"text","text":"Converts the given specialized node to this type. Returns "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" if the"},{"text":" ","type":"text"},{"type":"text","text":"conversion is not possible."}],"url":"\/documentation\/macrobuilder\/stringliteralsegmentlistsyntax\/init(_:)-518v0","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Children","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"Children"},{"text":")","kind":"text"}],"kind":"symbol","title":"init(_:)","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StringLiteralSegmentListSyntax/parent":{"abstract":[{"type":"text","text":"The parent of this syntax node, or "},{"code":"nil","type":"codeVoice"},{"text":" if this node is the root.","type":"text"}],"type":"topic","role":"symbol","title":"parent","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parent","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"kind":"symbol","url":"\/documentation\/macrobuilder\/stringliteralsegmentlistsyntax\/parent","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/parent"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StringLiteralSegmentListSyntax/isProtocol(_:)-2uf8v":{"title":"isProtocol(_:)","kind":"symbol","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithCodeBlockSyntax"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"url":"\/documentation\/macrobuilder\/stringliteralsegmentlistsyntax\/isprotocol(_:)-2uf8v","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/isProtocol(_:)-2uf8v","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"text":"((any ","kind":"text"},{"text":"WithCodeBlockSyntax","preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P","kind":"typeIdentifier"},{"kind":"text","text":").Type) -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StringLiteralSegmentListSyntax/init(validating:)":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/init(validating:)","abstract":[{"type":"text","text":"If "},{"code":"node","type":"codeVoice"},{"type":"text","text":" has contains no syntax errors, return "},{"type":"codeVoice","code":"node"},{"text":", otherwise","type":"text"},{"text":" ","type":"text"},{"text":"throw an error with diagnostics describing the syntax errors.","type":"text"}],"url":"\/documentation\/macrobuilder\/stringliteralsegmentlistsyntax\/init(validating:)","role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"validating"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"}],"kind":"symbol","title":"init(validating:)","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StringLiteralSegmentListSyntax/trimmedByteRange":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"trimmedByteRange","kind":"identifier"},{"kind":"text","text":": "},{"text":"ByteSourceRange","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangeV"}],"title":"trimmedByteRange","role":"symbol","url":"\/documentation\/macrobuilder\/stringliteralsegmentlistsyntax\/trimmedbyterange","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/trimmedByteRange","kind":"symbol","type":"topic","abstract":[{"text":"The byte source range of this node excluding leading and trailing trivia.","type":"text"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StringLiteralSegmentListSyntax/syntaxTextBytes":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/syntaxTextBytes","abstract":[{"text":"Retrieve the syntax text as an array of bytes that models the input","type":"text"},{"type":"text","text":" "},{"type":"text","text":"source even in the presence of invalid UTF-8."}],"url":"\/documentation\/macrobuilder\/stringliteralsegmentlistsyntax\/syntaxtextbytes","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"syntaxTextBytes","kind":"identifier"},{"kind":"text","text":": ["},{"text":"UInt8","preciseIdentifier":"s:s5UInt8V","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"kind":"symbol","title":"syntaxTextBytes","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StringLiteralSegmentListSyntax/lastToken(viewMode:)":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"lastToken"},{"kind":"text","text":"("},{"text":"viewMode","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"SyntaxTreeViewMode","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax"},{"kind":"text","text":"?"}],"kind":"symbol","title":"lastToken(viewMode:)","type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/lastToken(viewMode:)","abstract":[{"text":"Returns the last token node that is part of this syntax node.","type":"text"}],"url":"\/documentation\/macrobuilder\/stringliteralsegmentlistsyntax\/lasttoken(viewmode:)"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StringLiteralSegmentListSyntax/asProtocol(_:)-3oro2":{"abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithCodeBlockSyntax"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/asProtocol(_:)-3oro2","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"text":"((any ","kind":"text"},{"text":"WithCodeBlockSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P"},{"text":").Type) -> (any ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P","kind":"typeIdentifier","text":"WithCodeBlockSyntax"},{"text":")?","kind":"text"}],"kind":"symbol","type":"topic","title":"asProtocol(_:)","url":"\/documentation\/macrobuilder\/stringliteralsegmentlistsyntax\/asprotocol(_:)-3oro2"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StringLiteralSegmentListSyntax/hasMaximumNestingLevelOverflow":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"hasMaximumNestingLevelOverflow"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"title":"hasMaximumNestingLevelOverflow","role":"symbol","url":"\/documentation\/macrobuilder\/stringliteralsegmentlistsyntax\/hasmaximumnestingleveloverflow","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/hasMaximumNestingLevelOverflow","kind":"symbol","type":"topic","abstract":[]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StringLiteralSegmentListSyntax/trimmed":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/trimmed","abstract":[{"type":"text","text":"A copy of this node without the leading trivia of the first token in the"},{"text":" ","type":"text"},{"text":"node and the trailing trivia of the last token in the node.","type":"text"}],"url":"\/documentation\/macrobuilder\/stringliteralsegmentlistsyntax\/trimmed","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"trimmed","kind":"identifier"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"}],"kind":"symbol","title":"trimmed","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StringLiteralSegmentListSyntax/trimmedDescription":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"trimmedDescription"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"}],"title":"trimmedDescription","role":"symbol","url":"\/documentation\/macrobuilder\/stringliteralsegmentlistsyntax\/trimmeddescription","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/trimmedDescription","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"The description of this node with leading whitespace of the first token"},{"type":"text","text":" "},{"type":"text","text":"and trailing whitespace of the last token removed."}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StringLiteralSegmentListSyntax/previousToken":{"title":"previousToken","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/previousToken","type":"topic","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"previousToken"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"deprecated":true,"url":"\/documentation\/macrobuilder\/stringliteralsegmentlistsyntax\/previoustoken","abstract":[],"role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StringLiteralSegmentListSyntax/expand(macros:in:indentationWidth:)":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/expand(macros:in:indentationWidth:)","abstract":[],"url":"\/documentation\/macrobuilder\/stringliteralsegmentlistsyntax\/expand(macros:in:indentationwidth:)","role":"symbol","deprecated":true,"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"expand","kind":"identifier"},{"text":"(","kind":"text"},{"text":"macros","kind":"externalParam"},{"kind":"text","text":": ["},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":" : any ","kind":"text"},{"kind":"typeIdentifier","text":"Macro","preciseIdentifier":"s:17SwiftSyntaxMacros5MacroP"},{"text":".Type], ","kind":"text"},{"text":"in","kind":"externalParam"},{"text":": some ","kind":"text"},{"preciseIdentifier":"s:17SwiftSyntaxMacros21MacroExpansionContextP","text":"MacroExpansionContext","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"indentationWidth"},{"text":": ","kind":"text"},{"text":"Trivia","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax6TriviaV"},{"text":"?) -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax","kind":"typeIdentifier"}],"kind":"symbol","title":"expand(macros:in:indentationWidth:)","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StringLiteralSegmentListSyntax/lastToken":{"type":"topic","title":"lastToken","url":"\/documentation\/macrobuilder\/stringliteralsegmentlistsyntax\/lasttoken","deprecated":true,"role":"symbol","abstract":[],"kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"lastToken","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax"},{"kind":"text","text":"?"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/lastToken"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StringLiteralSegmentListSyntax/positionAfterSkippingLeadingTrivia":{"url":"\/documentation\/macrobuilder\/stringliteralsegmentlistsyntax\/positionafterskippingleadingtrivia","role":"symbol","title":"positionAfterSkippingLeadingTrivia","abstract":[{"text":"The absolute position of the starting point of this node, skipping any","type":"text"},{"type":"text","text":" "},{"text":"leading trivia attached to the first token syntax.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/positionAfterSkippingLeadingTrivia","type":"topic","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"positionAfterSkippingLeadingTrivia","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","kind":"typeIdentifier","text":"AbsolutePosition"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StringLiteralSegmentListSyntax/firstToken(viewMode:)":{"url":"\/documentation\/macrobuilder\/stringliteralsegmentlistsyntax\/firsttoken(viewmode:)","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/firstToken(viewMode:)","kind":"symbol","title":"firstToken(viewMode:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"firstToken"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"viewMode"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","text":"SyntaxTreeViewMode","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Returns the first token node that is part of this syntax node."}],"type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StringLiteralSegmentListSyntax/isProtocol(_:)-6fwca":{"url":"\/documentation\/macrobuilder\/stringliteralsegmentlistsyntax\/isprotocol(_:)-6fwca","role":"symbol","title":"isProtocol(_:)","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"WithAttributesSyntax"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/isProtocol(_:)-6fwca","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"((any "},{"text":"WithAttributesSyntax","preciseIdentifier":"s:11SwiftSyntax014WithAttributesB0P","kind":"typeIdentifier"},{"text":").Type) -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StringLiteralSegmentListSyntax/detached":{"abstract":[{"text":"Return this subtree with this node as the root, ie. detach this node","type":"text"},{"type":"text","text":" "},{"type":"text","text":"from its parent."}],"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"detached","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/detached","url":"\/documentation\/macrobuilder\/stringliteralsegmentlistsyntax\/detached","type":"topic","kind":"symbol","title":"detached","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StringLiteralSegmentListSyntax/trimmedLength":{"url":"\/documentation\/macrobuilder\/stringliteralsegmentlistsyntax\/trimmedlength","abstract":[{"text":"The length this node takes up spelled out in the source, excluding its","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"leading or trailing trivia."}],"role":"symbol","type":"topic","kind":"symbol","title":"trimmedLength","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/trimmedLength","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"trimmedLength"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SourceLength","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StringLiteralSegmentListSyntax/position":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"position","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","kind":"typeIdentifier","text":"AbsolutePosition"}],"url":"\/documentation\/macrobuilder\/stringliteralsegmentlistsyntax\/position","title":"position","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/position","role":"symbol","abstract":[{"text":"The absolute position of the starting point of this node. If the first token","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"is with leading trivia, the position points to the start of the leading"},{"type":"text","text":" "},{"type":"text","text":"trivia."}],"type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StringLiteralSegmentListSyntax":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"StringLiteralSegmentListSyntax","kind":"identifier"}],"role":"symbol","kind":"symbol","abstract":[],"url":"\/documentation\/macrobuilder\/stringliteralsegmentlistsyntax","title":"StringLiteralSegmentListSyntax","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax","navigatorTitle":[{"text":"StringLiteralSegmentListSyntax","kind":"identifier"}],"type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StringLiteralSegmentListSyntax/tokens(viewMode:)":{"url":"\/documentation\/macrobuilder\/stringliteralsegmentlistsyntax\/tokens(viewmode:)","abstract":[{"text":"Sequence of tokens that are part of this Syntax node.","type":"text"}],"role":"symbol","type":"topic","kind":"symbol","title":"tokens(viewMode:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/tokens(viewMode:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"tokens","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"viewMode"},{"kind":"text","text":": "},{"text":"SyntaxTreeViewMode","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"TokenSequence","preciseIdentifier":"s:11SwiftSyntax13TokenSequenceV"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StringLiteralSegmentListSyntax/isProtocol(_:)-8zd7q":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"((any "},{"text":"BracedSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax06BracedB0P"},{"kind":"text","text":").Type) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"url":"\/documentation\/macrobuilder\/stringliteralsegmentlistsyntax\/isprotocol(_:)-8zd7q","title":"isProtocol(_:)","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/isProtocol(_:)-8zd7q","role":"symbol","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"code":"BracedSyntax","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StringLiteralSegmentListSyntax/asProtocol(_:)-9oxu2":{"url":"\/documentation\/macrobuilder\/stringliteralsegmentlistsyntax\/asprotocol(_:)-9oxu2","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"code":"EffectSpecifiersSyntax","type":"codeVoice"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"role":"symbol","type":"topic","kind":"symbol","title":"asProtocol(_:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/asProtocol(_:)-9oxu2","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"((any "},{"preciseIdentifier":"s:11SwiftSyntax016EffectSpecifiersB0P","kind":"typeIdentifier","text":"EffectSpecifiersSyntax"},{"kind":"text","text":").Type) -> (any "},{"text":"EffectSpecifiersSyntax","preciseIdentifier":"s:11SwiftSyntax016EffectSpecifiersB0P","kind":"typeIdentifier"},{"kind":"text","text":")?"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/Syntax":{"abstract":[{"type":"text","text":"A Syntax node represents a tree of nodes with tokens at the leaves."},{"text":" ","type":"text"},{"type":"text","text":"Each node has accessors for its known children, and allows efficient"},{"text":" ","type":"text"},{"text":"iteration over the children through its ","type":"text"},{"type":"codeVoice","code":"children"},{"text":" property.","type":"text"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Syntax"}],"url":"\/documentation\/macrobuilder\/syntax","title":"Syntax","type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Syntax","kind":"identifier"}],"kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StringLiteralSegmentListSyntax/cast(_:)-8no2m":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"cast"},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":".Type) -> "},{"text":"Self","kind":"typeIdentifier"}],"url":"\/documentation\/macrobuilder\/stringliteralsegmentlistsyntax\/cast(_:)-8no2m","title":"cast(_:)","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/cast(_:)-8no2m","role":"symbol","deprecated":true,"abstract":[{"type":"text","text":"Force-casts the current syntax node to its own type."}],"type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StringLiteralSegmentListSyntax/hasSequenceExpr":{"url":"\/documentation\/macrobuilder\/stringliteralsegmentlistsyntax\/hassequenceexpr","abstract":[{"type":"text","text":"Whether this tree contains a missing token or unexpected node."}],"role":"symbol","type":"topic","kind":"symbol","title":"hasSequenceExpr","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/hasSequenceExpr","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"hasSequenceExpr","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SyntaxKind/functionDecl":{"url":"\/documentation\/macrobuilder\/syntaxkind\/functiondecl","fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"kind":"identifier","text":"functionDecl"}],"title":"SyntaxKind.functionDecl","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxKind\/functionDecl","role":"symbol","type":"topic","kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StringLiteralSegmentListSyntax/isImplicit":{"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isImplicit"},{"kind":"text","text":": "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"url":"\/documentation\/macrobuilder\/stringliteralsegmentlistsyntax\/isimplicit","title":"isImplicit","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/isImplicit","role":"symbol","deprecated":true,"abstract":[{"text":"When isImplicit is true, the syntax node doesn’t include any","type":"text"},{"type":"text","text":" "},{"type":"text","text":"underlying tokens, e.g. an empty CodeBlockItemList."}],"type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StringLiteralSegmentListSyntax/asProtocol(_:)-30tuq":{"url":"\/documentation\/macrobuilder\/stringliteralsegmentlistsyntax\/asprotocol(_:)-30tuq","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"code":"NamedDeclSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"role":"symbol","type":"topic","kind":"symbol","title":"asProtocol(_:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/asProtocol(_:)-30tuq","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"asProtocol"},{"text":"((any ","kind":"text"},{"text":"NamedDeclSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax09NamedDeclB0P"},{"kind":"text","text":").Type) -> (any "},{"preciseIdentifier":"s:11SwiftSyntax09NamedDeclB0P","kind":"typeIdentifier","text":"NamedDeclSyntax"},{"text":")?","kind":"text"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StringLiteralSegmentListSyntax/isProtocol(_:)-6353z":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"isProtocol"},{"text":"((any ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P","text":"WithOptionalCodeBlockSyntax"},{"kind":"text","text":").Type) -> "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"url":"\/documentation\/macrobuilder\/stringliteralsegmentlistsyntax\/isprotocol(_:)-6353z","title":"isProtocol(_:)","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/isProtocol(_:)-6353z","role":"symbol","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"code":"WithOptionalCodeBlockSyntax","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StringLiteralSegmentListSyntax/nextToken":{"url":"\/documentation\/macrobuilder\/stringliteralsegmentlistsyntax\/nexttoken","abstract":[],"role":"symbol","type":"topic","kind":"symbol","title":"nextToken","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/nextToken","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"nextToken","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","kind":"typeIdentifier","text":"TokenSyntax"},{"text":"?","kind":"text"}],"deprecated":true},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StringLiteralSegmentListSyntax/expand(macroSpecs:contextGenerator:indentationWidth:)":{"title":"expand(macroSpecs:contextGenerator:indentationWidth:)","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/expand(macroSpecs:contextGenerator:indentationWidth:)","type":"topic","kind":"symbol","url":"\/documentation\/macrobuilder\/stringliteralsegmentlistsyntax\/expand(macrospecs:contextgenerator:indentationwidth:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"expand"},{"kind":"text","text":"<"},{"text":"Context","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"macroSpecs"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:25SwiftSyntaxMacroExpansion0C4SpecV","kind":"typeIdentifier","text":"MacroSpec"},{"text":"], ","kind":"text"},{"text":"contextGenerator","kind":"externalParam"},{"kind":"text","text":": ("},{"text":"Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Context"},{"kind":"text","text":", "},{"text":"indentationWidth","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Trivia","preciseIdentifier":"s:11SwiftSyntax6TriviaV","kind":"typeIdentifier"},{"kind":"text","text":"?) -> "},{"text":"Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"}],"abstract":[]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StringLiteralSegmentListSyntax/token(at:)":{"title":"token(at:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/token(at:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"token"},{"kind":"text","text":"("},{"kind":"externalParam","text":"at"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","text":"AbsolutePosition"},{"text":") -> ","kind":"text"},{"text":"TokenSyntax","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Find the syntax token at the given absolute position within this"},{"type":"text","text":" "},{"text":"syntax node or any of its children.","type":"text"}],"type":"topic","url":"\/documentation\/macrobuilder\/stringliteralsegmentlistsyntax\/token(at:)","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StringLiteralSegmentListSyntax/modifying(_:_:)":{"title":"modifying(_:_:)","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/modifying(_:_:)","type":"topic","kind":"symbol","url":"\/documentation\/macrobuilder\/stringliteralsegmentlistsyntax\/modifying(_:_:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"modifying","kind":"identifier"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s15WritableKeyPathC","text":"WritableKeyPath"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"T"},{"text":">, (","kind":"text"},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"abstract":[]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StringLiteralSegmentListSyntax/detach()":{"deprecated":true,"title":"detach()","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/detach()","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"detach"},{"kind":"text","text":"() -> "},{"text":"Self","kind":"typeIdentifier"}],"abstract":[],"type":"topic","url":"\/documentation\/macrobuilder\/stringliteralsegmentlistsyntax\/detach()","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StringLiteralSegmentListSyntax/asProtocol(_:)-465ta":{"kind":"symbol","url":"\/documentation\/macrobuilder\/stringliteralsegmentlistsyntax\/asprotocol(_:)-465ta","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/asProtocol(_:)-465ta","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"asProtocol"},{"text":"((any ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P","kind":"typeIdentifier","text":"WithOptionalCodeBlockSyntax"},{"kind":"text","text":").Type) -> (any "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P","text":"WithOptionalCodeBlockSyntax"},{"text":")?","kind":"text"}],"title":"asProtocol(_:)","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"code":"WithOptionalCodeBlockSyntax","type":"codeVoice"},{"text":". Otherwise return ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StringLiteralSegmentListSyntax/kind":{"title":"kind","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/kind","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"kind"},{"kind":"text","text":": "},{"text":"SyntaxKind","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B4KindO"}],"abstract":[{"type":"text","text":"The kind of the syntax node, e.g. if it is a "},{"type":"reference","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxKind\/functionDecl","isActive":true},{"type":"text","text":"."}],"url":"\/documentation\/macrobuilder\/stringliteralsegmentlistsyntax\/kind","type":"topic","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StringLiteralSegmentListSyntax/endLocation(converter:afterTrailingTrivia:)":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/endLocation(converter:afterTrailingTrivia:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"endLocation"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"converter"},{"text":": ","kind":"text"},{"text":"SourceLocationConverter","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"afterTrailingTrivia"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax14SourceLocationV","text":"SourceLocation","kind":"typeIdentifier"}],"url":"\/documentation\/macrobuilder\/stringliteralsegmentlistsyntax\/endlocation(converter:aftertrailingtrivia:)","abstract":[{"type":"text","text":"The ending location, in the provided file, of this Syntax node."}],"role":"symbol","kind":"symbol","type":"topic","title":"endLocation(converter:afterTrailingTrivia:)"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StringLiteralSegmentListSyntax/asProtocol(_:)-4t36w":{"kind":"symbol","url":"\/documentation\/macrobuilder\/stringliteralsegmentlistsyntax\/asprotocol(_:)-4t36w","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/asProtocol(_:)-4t36w","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"asProtocol"},{"kind":"text","text":"((any "},{"preciseIdentifier":"s:11SwiftSyntax013WithModifiersB0P","text":"WithModifiersSyntax","kind":"typeIdentifier"},{"kind":"text","text":").Type) -> (any "},{"kind":"typeIdentifier","text":"WithModifiersSyntax","preciseIdentifier":"s:11SwiftSyntax013WithModifiersB0P"},{"kind":"text","text":")?"}],"type":"topic","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"code":"WithModifiersSyntax","type":"codeVoice"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"title":"asProtocol(_:)"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StringLiteralSegmentListSyntax/debugDescription(includeTrivia:converter:mark:indentString:)":{"title":"debugDescription(includeTrivia:converter:mark:indentString:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/debugDescription(includeTrivia:converter:mark:indentString:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"debugDescription"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"includeTrivia"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"converter"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC","text":"SourceLocationConverter","kind":"typeIdentifier"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"mark"},{"kind":"text","text":": (any "},{"text":"SyntaxProtocol","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP"},{"kind":"text","text":")?, "},{"text":"indentString","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"}],"abstract":[{"type":"text","text":"Returns a summarized dump of this node."}],"url":"\/documentation\/macrobuilder\/stringliteralsegmentlistsyntax\/debugdescription(includetrivia:converter:mark:indentstring:)","type":"topic","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StringLiteralSegmentListSyntax/id":{"kind":"symbol","url":"\/documentation\/macrobuilder\/stringliteralsegmentlistsyntax\/id","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/id","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"id"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B10IdentifierV","text":"SyntaxIdentifier","kind":"typeIdentifier"}],"type":"topic","abstract":[{"type":"text","text":"Returns a value representing the unique identity of the node."}],"title":"id"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StringLiteralSegmentListSyntax/isProtocol(_:)-78ion":{"title":"isProtocol(_:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/isProtocol(_:)-78ion","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"kind":"text","text":"((any "},{"preciseIdentifier":"s:11SwiftSyntax09NamedDeclB0P","kind":"typeIdentifier","text":"NamedDeclSyntax"},{"text":").Type) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"NamedDeclSyntax"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"url":"\/documentation\/macrobuilder\/stringliteralsegmentlistsyntax\/isprotocol(_:)-78ion","type":"topic","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StringLiteralSegmentListSyntax/endPositionBeforeTrailingTrivia":{"kind":"symbol","url":"\/documentation\/macrobuilder\/stringliteralsegmentlistsyntax\/endpositionbeforetrailingtrivia","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/endPositionBeforeTrailingTrivia","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"endPositionBeforeTrailingTrivia","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","kind":"typeIdentifier","text":"AbsolutePosition"}],"title":"endPositionBeforeTrailingTrivia","abstract":[{"type":"text","text":"The end position of this node’s content, before any trailing trivia."}],"type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StringLiteralSegmentListSyntax/as(_:)-3filq":{"deprecated":true,"title":"as(_:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/as(_:)-3filq","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"`as`","kind":"identifier"},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":".Type) -> "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Casts the current syntax node to its own type."}],"url":"\/documentation\/macrobuilder\/stringliteralsegmentlistsyntax\/as(_:)-3filq","type":"topic","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StringLiteralSegmentListSyntax/isProtocol(_:)-6mjt0":{"kind":"symbol","url":"\/documentation\/macrobuilder\/stringliteralsegmentlistsyntax\/isprotocol(_:)-6mjt0","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/isProtocol(_:)-6mjt0","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"kind":"text","text":"((any "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax014WithStatementsB0P","text":"WithStatementsSyntax"},{"text":").Type) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"title":"isProtocol(_:)","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithStatementsSyntax"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StringLiteralSegmentListSyntax/asProtocol(_:)-1aipi":{"title":"asProtocol(_:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/asProtocol(_:)-1aipi","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"asProtocol"},{"text":"((any ","kind":"text"},{"text":"BracedSyntax","preciseIdentifier":"s:11SwiftSyntax06BracedB0P","kind":"typeIdentifier"},{"kind":"text","text":").Type) -> (any "},{"kind":"typeIdentifier","text":"BracedSyntax","preciseIdentifier":"s:11SwiftSyntax06BracedB0P"},{"text":")?","kind":"text"}],"abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"code":"BracedSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"url":"\/documentation\/macrobuilder\/stringliteralsegmentlistsyntax\/asprotocol(_:)-1aipi","type":"topic","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StringLiteralSegmentListSyntax/isProtocol(_:)-7n2gt":{"kind":"symbol","url":"\/documentation\/macrobuilder\/stringliteralsegmentlistsyntax\/isprotocol(_:)-7n2gt","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/isProtocol(_:)-7n2gt","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"((any "},{"kind":"typeIdentifier","text":"WithGenericParametersSyntax","preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P"},{"text":").Type) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"type":"topic","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"code":"WithGenericParametersSyntax","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"title":"isProtocol(_:)"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StringLiteralSegmentListSyntax/isProtocol(_:)-7cr93":{"title":"isProtocol(_:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/isProtocol(_:)-7cr93","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"kind":"text","text":"((any "},{"preciseIdentifier":"s:11SwiftSyntax013ParenthesizedB0P","text":"ParenthesizedSyntax","kind":"typeIdentifier"},{"kind":"text","text":").Type) -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"ParenthesizedSyntax"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"url":"\/documentation\/macrobuilder\/stringliteralsegmentlistsyntax\/isprotocol(_:)-7cr93","type":"topic","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StringLiteralSegmentListSyntax/cast(_:)-7zfgh":{"kind":"symbol","url":"\/documentation\/macrobuilder\/stringliteralsegmentlistsyntax\/cast(_:)-7zfgh","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/cast(_:)-7zfgh","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"cast"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier","text":"Syntax"},{"text":".Type) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V"}],"type":"topic","abstract":[{"type":"text","text":"Force-cast the current syntax node to "},{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax","isActive":true,"type":"reference"},{"type":"text","text":" node.."}],"title":"cast(_:)","deprecated":true},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StringLiteralSegmentListSyntax/is(_:)-1v7ip":{"deprecated":true,"title":"is(_:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/is(_:)-1v7ip","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"`is`"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".Type) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Checks if the current syntax node can be cast to its own type."}],"url":"\/documentation\/macrobuilder\/stringliteralsegmentlistsyntax\/is(_:)-1v7ip","type":"topic","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StringLiteralSegmentListSyntax/hasParent":{"kind":"symbol","url":"\/documentation\/macrobuilder\/stringliteralsegmentlistsyntax\/hasparent","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/hasParent","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"hasParent"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"title":"hasParent","abstract":[{"type":"text","text":"Whether or not this node has a parent."}],"type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StringLiteralSegmentListSyntax/asProtocol(_:)-2nn1b":{"title":"asProtocol(_:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/asProtocol(_:)-2nn1b","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"asProtocol"},{"text":"((any ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax013ParenthesizedB0P","text":"ParenthesizedSyntax","kind":"typeIdentifier"},{"kind":"text","text":").Type) -> (any "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013ParenthesizedB0P","text":"ParenthesizedSyntax"},{"kind":"text","text":")?"}],"abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"ParenthesizedSyntax"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"url":"\/documentation\/macrobuilder\/stringliteralsegmentlistsyntax\/asprotocol(_:)-2nn1b","type":"topic","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StringLiteralSegmentListSyntax/isProtocol(_:)-66uuk":{"role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"((any "},{"text":"DeclGroupSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax09DeclGroupB0P"},{"kind":"text","text":").Type) -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"url":"\/documentation\/macrobuilder\/stringliteralsegmentlistsyntax\/isprotocol(_:)-66uuk","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"DeclGroupSyntax"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/isProtocol(_:)-66uuk","kind":"symbol","title":"isProtocol(_:)"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StringLiteralSegmentListSyntax/endPosition":{"kind":"symbol","url":"\/documentation\/macrobuilder\/stringliteralsegmentlistsyntax\/endposition","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/endPosition","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"endPosition","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","text":"AbsolutePosition","kind":"typeIdentifier"}],"title":"endPosition","abstract":[{"text":"The end position of this node, including its trivia.","type":"text"}],"type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StringLiteralSegmentListSyntax/isProtocol(_:)-7iy9z":{"title":"isProtocol(_:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/isProtocol(_:)-7iy9z","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"isProtocol"},{"kind":"text","text":"((any "},{"preciseIdentifier":"s:11SwiftSyntax016EffectSpecifiersB0P","kind":"typeIdentifier","text":"EffectSpecifiersSyntax"},{"text":").Type) -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"EffectSpecifiersSyntax"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"url":"\/documentation\/macrobuilder\/stringliteralsegmentlistsyntax\/isprotocol(_:)-7iy9z","type":"topic","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StringLiteralSegmentListSyntax/asProtocol(_:)-9wwhd":{"kind":"symbol","url":"\/documentation\/macrobuilder\/stringliteralsegmentlistsyntax\/asprotocol(_:)-9wwhd","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/asProtocol(_:)-9wwhd","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"asProtocol"},{"kind":"text","text":"((any "},{"kind":"typeIdentifier","text":"DeclGroupSyntax","preciseIdentifier":"s:11SwiftSyntax09DeclGroupB0P"},{"kind":"text","text":").Type) -> (any "},{"preciseIdentifier":"s:11SwiftSyntax09DeclGroupB0P","kind":"typeIdentifier","text":"DeclGroupSyntax"},{"text":")?","kind":"text"}],"type":"topic","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"DeclGroupSyntax"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"title":"asProtocol(_:)"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StringLiteralSegmentListSyntax/syntaxNodeType":{"title":"syntaxNodeType","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/syntaxNodeType","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"syntaxNodeType","kind":"identifier"},{"kind":"text","text":": any "},{"text":"SyntaxProtocol","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP"},{"kind":"text","text":".Type"}],"abstract":[{"type":"text","text":"The dynamic metatype of the concrete node."}],"url":"\/documentation\/macrobuilder\/stringliteralsegmentlistsyntax\/syntaxnodetype","type":"topic","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StringLiteralSegmentListSyntax/asProtocol(_:)-1kh1e":{"kind":"symbol","url":"\/documentation\/macrobuilder\/stringliteralsegmentlistsyntax\/asprotocol(_:)-1kh1e","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/asProtocol(_:)-1kh1e","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"asProtocol"},{"kind":"text","text":"((any "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax011MissingNodeB0P","text":"MissingNodeSyntax"},{"kind":"text","text":").Type) -> (any "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax011MissingNodeB0P","text":"MissingNodeSyntax"},{"kind":"text","text":")?"}],"type":"topic","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"MissingNodeSyntax"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"title":"asProtocol(_:)"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StringLiteralSegmentListSyntax/debugDescription":{"title":"debugDescription","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/debugDescription","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"debugDescription","kind":"identifier"},{"kind":"text","text":": "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}],"abstract":[{"type":"text","text":"A simple description of this node (ie. its type)."}],"url":"\/documentation\/macrobuilder\/stringliteralsegmentlistsyntax\/debugdescription","type":"topic","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StringLiteralSegmentListSyntax/contentLength":{"abstract":[],"url":"\/documentation\/macrobuilder\/stringliteralsegmentlistsyntax\/contentlength","title":"contentLength","role":"symbol","deprecated":true,"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/contentLength","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"contentLength","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax12SourceLengthV","text":"SourceLength","kind":"typeIdentifier"}],"type":"topic","kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StringLiteralSegmentListSyntax/description":{"role":"symbol","title":"description","type":"topic","kind":"symbol","url":"\/documentation\/macrobuilder\/stringliteralsegmentlistsyntax\/description","abstract":[{"type":"text","text":"A source-accurate description of this node."}],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"description"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/description"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/StringLiteralSegmentListSyntax/structure":{"kind":"symbol","url":"\/documentation\/macrobuilder\/stringliteralsegmentlistsyntax\/structure","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/StringLiteralSegmentListSyntax\/structure","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"structure","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax0B13NodeStructureO","text":"SyntaxNodeStructure","kind":"typeIdentifier"}],"type":"topic","abstract":[{"type":"text","text":"The statically allowed structure of the syntax node."}],"title":"structure"}}}