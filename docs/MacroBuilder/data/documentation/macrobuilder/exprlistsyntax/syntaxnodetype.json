{"variants":[{"paths":["\/documentation\/macrobuilder\/exprlistsyntax\/syntaxnodetype"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"title":"syntaxNodeType","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"syntaxNodeType","kind":"identifier"},{"kind":"text","text":": any "},{"text":"SyntaxProtocol","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP"},{"kind":"text","text":".Type"}],"modules":[{"relatedModules":["SwiftSyntax"],"name":"MacroBuilder"}],"externalID":"s:11SwiftSyntax0B8ProtocolPAAE14syntaxNodeTypeAaB_pXpvp::SYNTHESIZED::s:11SwiftSyntax08ExprListB0V","extendedModule":"SwiftSyntax","roleHeading":"Instance Property","symbolKind":"property"},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/SyntaxProtocol-Implementations"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"syntaxNodeType"},{"text":": any ","kind":"text"},{"text":"SyntaxProtocol","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxProtocol","kind":"typeIdentifier"},{"text":".Type { ","kind":"text"},{"kind":"keyword","text":"get"},{"kind":"text","text":" }"}],"platforms":["macOS"]}]},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"text":"You almost always want to prefer this over ","type":"text"},{"type":"codeVoice","code":"type(of: self)"},{"text":" because if","type":"text"},{"type":"text","text":" "},{"code":"self","type":"codeVoice"},{"type":"text","text":" is a "},{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DeclSyntax","isActive":true,"type":"reference"},{"text":" representing a ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/FunctionDeclSyntax"},{"type":"text","text":","},{"type":"text","text":" "},{"code":"type(of: self)","type":"codeVoice"},{"type":"text","text":" will return "},{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DeclSyntax","isActive":true,"type":"reference"},{"text":", while ","type":"text"},{"type":"codeVoice","code":"syntaxNodeType"},{"text":" looks","type":"text"},{"type":"text","text":" "},{"type":"text","text":"at the dynamic kind of this node and returns "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/FunctionDeclSyntax"},{"text":".","type":"text"}]}]}],"sections":[],"schemaVersion":{"patch":0,"minor":3,"major":0},"identifier":{"url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/syntaxNodeType","interfaceLanguage":"swift"},"kind":"symbol","abstract":[{"type":"text","text":"The dynamic metatype of the concrete node."}],"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/FunctionDeclSyntax":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/FunctionDeclSyntax","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"FunctionDeclSyntax","kind":"identifier"}],"title":"FunctionDeclSyntax","url":"\/documentation\/macrobuilder\/functiondeclsyntax","navigatorTitle":[{"text":"FunctionDeclSyntax","kind":"identifier"}],"type":"topic","abstract":[],"kind":"symbol","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprListSyntax":{"url":"\/documentation\/macrobuilder\/exprlistsyntax","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"ExprListSyntax","kind":"identifier"}],"title":"ExprListSyntax","abstract":[{"text":"A list of expressions connected by operators. This list is contained by a ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SequenceExprSyntax"},{"type":"text","text":"."}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"ExprListSyntax","kind":"identifier"}],"type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SyntaxProtocol":{"title":"SyntaxProtocol","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxProtocol","navigatorTitle":[{"text":"SyntaxProtocol","kind":"identifier"}],"abstract":[{"text":"Provide common functionality for specialized syntax nodes. Extend this","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"protocol to provide common functionality for all syntax nodes."}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"SyntaxProtocol","kind":"identifier"}],"type":"topic","role":"symbol","url":"\/documentation\/macrobuilder\/syntaxprotocol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprListSyntax/syntaxNodeType":{"title":"syntaxNodeType","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/syntaxNodeType","type":"topic","role":"symbol","url":"\/documentation\/macrobuilder\/exprlistsyntax\/syntaxnodetype","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"syntaxNodeType"},{"text":": any ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP","text":"SyntaxProtocol"},{"text":".Type","kind":"text"}],"kind":"symbol","abstract":[{"text":"The dynamic metatype of the concrete node.","type":"text"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SequenceExprSyntax":{"url":"\/documentation\/macrobuilder\/sequenceexprsyntax","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SequenceExprSyntax","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"SequenceExprSyntax","kind":"identifier"}],"title":"SequenceExprSyntax","abstract":[{"type":"text","text":"A flat list of expressions before operator folding using the "},{"type":"codeVoice","code":"SwiftOperators"},{"type":"text","text":" library."}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SequenceExprSyntax","kind":"identifier"}],"type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/DeclSyntax":{"title":"DeclSyntax","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DeclSyntax","navigatorTitle":[{"text":"DeclSyntax","kind":"identifier"}],"abstract":[],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DeclSyntax"}],"type":"topic","role":"symbol","url":"\/documentation\/macrobuilder\/declsyntax"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprListSyntax/SyntaxProtocol-Implementations":{"abstract":[],"role":"collectionGroup","kind":"article","url":"\/documentation\/macrobuilder\/exprlistsyntax\/syntaxprotocol-implementations","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/SyntaxProtocol-Implementations","type":"topic","title":"SyntaxProtocol Implementations"}}}