{"kind":"symbol","abstract":[{"text":"If ","type":"text"},{"type":"codeVoice","code":"node"},{"type":"text","text":" has contains no syntax errors, return "},{"code":"node","type":"codeVoice"},{"text":", otherwise","type":"text"},{"type":"text","text":" "},{"type":"text","text":"throw an error with diagnostics describing the syntax errors."}],"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"text":"validating","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"node"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"type":"heading","anchor":"discussion","text":"Discussion","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"This allows clients to e.g. write "},{"type":"codeVoice","code":"try DeclSyntax(validating: \"struct Foo {}\")"},{"type":"text","text":" "},{"text":"which constructs a ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DeclSyntax","isActive":true},{"text":" thatâ€™s guaranteed to be free of syntax","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"errors."}]}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/SyntaxProtocol-Implementations"]]},"identifier":{"url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/init(validating:)","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/macrobuilder\/exprlistsyntax\/init(validating:)"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"symbolKind":"init","externalID":"s:11SwiftSyntax0B8ProtocolP0aB7BuilderE10validatingxx_tKcfc::SYNTHESIZED::s:11SwiftSyntax08ExprListB0V","title":"init(validating:)","modules":[{"relatedModules":["SwiftSyntax"],"name":"MacroBuilder"}],"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"validating","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"role":"symbol","roleHeading":"Initializer","extendedModule":"SwiftSyntax"},"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SequenceExprSyntax":{"url":"\/documentation\/macrobuilder\/sequenceexprsyntax","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SequenceExprSyntax","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"SequenceExprSyntax","kind":"identifier"}],"title":"SequenceExprSyntax","abstract":[{"type":"text","text":"A flat list of expressions before operator folding using the "},{"type":"codeVoice","code":"SwiftOperators"},{"type":"text","text":" library."}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SequenceExprSyntax","kind":"identifier"}],"type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprListSyntax/init(validating:)":{"type":"topic","title":"init(validating:)","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"validating"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/init(validating:)","abstract":[{"type":"text","text":"If "},{"type":"codeVoice","code":"node"},{"type":"text","text":" has contains no syntax errors, return "},{"type":"codeVoice","code":"node"},{"type":"text","text":", otherwise"},{"text":" ","type":"text"},{"type":"text","text":"throw an error with diagnostics describing the syntax errors."}],"role":"symbol","kind":"symbol","url":"\/documentation\/macrobuilder\/exprlistsyntax\/init(validating:)"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprListSyntax/SyntaxProtocol-Implementations":{"abstract":[],"role":"collectionGroup","kind":"article","url":"\/documentation\/macrobuilder\/exprlistsyntax\/syntaxprotocol-implementations","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/SyntaxProtocol-Implementations","type":"topic","title":"SyntaxProtocol Implementations"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprListSyntax":{"url":"\/documentation\/macrobuilder\/exprlistsyntax","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"ExprListSyntax","kind":"identifier"}],"title":"ExprListSyntax","abstract":[{"text":"A list of expressions connected by operators. This list is contained by a ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SequenceExprSyntax"},{"type":"text","text":"."}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"ExprListSyntax","kind":"identifier"}],"type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/DeclSyntax":{"title":"DeclSyntax","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DeclSyntax","navigatorTitle":[{"text":"DeclSyntax","kind":"identifier"}],"abstract":[],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DeclSyntax"}],"type":"topic","role":"symbol","url":"\/documentation\/macrobuilder\/declsyntax"}}}