{"identifier":{"url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/SyntaxProtocol-Implementations","interfaceLanguage":"swift"},"metadata":{"modules":[{"name":"MacroBuilder"}],"title":"SyntaxProtocol Implementations","role":"collectionGroup","roleHeading":"API Collection"},"variants":[{"paths":["\/documentation\/macrobuilder\/exprlistsyntax\/syntaxprotocol-implementations"],"traits":[{"interfaceLanguage":"swift"}]}],"topicSections":[{"title":"Initializers","anchor":"Initializers","generated":true,"identifiers":["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/init(_:)-2bilx","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/init(_:)-91tcs","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/init(validating:)"]},{"generated":true,"anchor":"Instance-Properties","title":"Instance Properties","identifiers":["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/byteRange","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/byteSize","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/byteSizeAfterTrimmingTrivia","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/contentLength","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/debugDescription","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/description","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/detached","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/endPosition","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/endPositionBeforeTrailingTrivia","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/firstToken","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/hasError","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/hasMaximumNestingLevelOverflow","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/hasParent","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/hasSequenceExpr","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/hasWarning","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/id","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/index","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/isImplicit","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/keyPathInParent","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/kind","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/lastToken","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/leadingTrivia","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/leadingTriviaLength","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/nextToken","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/parent","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/position","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/positionAfterSkippingLeadingTrivia","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/previousToken","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/root","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/syntaxNodeType","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/syntaxTextBytes","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/totalByteRange","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/totalLength","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/trailingTrivia","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/trailingTriviaLength","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/trimmed","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/trimmedByteRange","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/trimmedDescription","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/trimmedLength"]},{"generated":true,"title":"Instance Methods","identifiers":["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/allMacroLexicalContexts(enclosingSyntax:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/as(_:)-2efxs","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/as(_:)-2zfs9","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/as(_:)-7v6yw","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/asMacroLexicalContext()","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/asProtocol(_:)-2e0d6","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/asProtocol(_:)-2m700","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/asProtocol(_:)-4kvwz","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/asProtocol(_:)-56d35","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/asProtocol(_:)-6g6fx","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/asProtocol(_:)-74kd5","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/asProtocol(_:)-7n858","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/asProtocol(_:)-7nvgo","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/asProtocol(_:)-7pui1","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/asProtocol(_:)-7xhd1","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/asProtocol(_:)-8ocb9","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/asProtocol(_:)-913bp","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/asProtocol(_:)-9sgma","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/asProtocol(_:)-m15s","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/cast(_:)-5emu7","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/cast(_:)-61pos","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/cast(_:)-9l7vb","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/children(viewMode:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/debugDescription(includeTrivia:converter:mark:indentString:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/detach()","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/endLocation(converter:afterTrailingTrivia:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/expand(macroSpecs:contextGenerator:indentationWidth:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/expand(macros:contextGenerator:indentationWidth:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/expand(macros:in:indentationWidth:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/firstToken(viewMode:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/formatted(using:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/is(_:)-26xcv","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/is(_:)-2u4ro","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/is(_:)-8dodb","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/isProtocol(_:)-11u9r","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/isProtocol(_:)-187id","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/isProtocol(_:)-1c8d5","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/isProtocol(_:)-3dixv","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/isProtocol(_:)-3eq4r","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/isProtocol(_:)-3ws5v","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/isProtocol(_:)-4mxku","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/isProtocol(_:)-4omf9","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/isProtocol(_:)-54ps3","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/isProtocol(_:)-6ehkm","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/isProtocol(_:)-6qpp4","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/isProtocol(_:)-7ye10","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/isProtocol(_:)-8y3ig","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/isProtocol(_:)-9l2e0","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/lastToken(viewMode:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/map(_:_:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/modifying(_:_:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/nextToken(viewMode:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/node(at:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/previousToken(viewMode:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/startLocation(converter:afterLeadingTrivia:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/token(at:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/tokens(viewMode:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/trimmed(matching:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/trimmedDescription(matching:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/with(_:_:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/write(to:)"],"anchor":"Instance-Methods"},{"title":"Type Properties","anchor":"Type-Properties","generated":true,"identifiers":["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/structure"]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"article","hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax"]]},"sections":[],"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprListSyntax/isProtocol(_:)-1c8d5":{"abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"text":" ","type":"text"},{"code":"FreestandingMacroExpansionSyntax","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"type":"topic","url":"\/documentation\/macrobuilder\/exprlistsyntax\/isprotocol(_:)-1c8d5","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/isProtocol(_:)-1c8d5","role":"symbol","title":"isProtocol(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"text":"((any ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P","text":"FreestandingMacroExpansionSyntax","kind":"typeIdentifier"},{"text":").Type) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprListSyntax/allMacroLexicalContexts(enclosingSyntax:)":{"kind":"symbol","url":"\/documentation\/macrobuilder\/exprlistsyntax\/allmacrolexicalcontexts(enclosingsyntax:)","type":"topic","title":"allMacroLexicalContexts(enclosingSyntax:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"allMacroLexicalContexts","kind":"identifier"},{"text":"(","kind":"text"},{"text":"enclosingSyntax","kind":"externalParam"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"kind":"text","text":") -> "},{"text":"Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"kind":"text","text":"?) -> ["},{"kind":"typeIdentifier","text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"kind":"text","text":"]"}],"abstract":[{"type":"text","text":"Return an array of enclosing lexical contexts for the purpose of macros,"},{"text":" ","type":"text"},{"type":"text","text":"from the innermost enclosing lexical context (first in the array) to the"},{"type":"text","text":" "},{"text":"outermost. If this syntax node itself is a lexical context, it will be","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the innermost lexical context."}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/allMacroLexicalContexts(enclosingSyntax:)","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprListSyntax/position":{"role":"symbol","url":"\/documentation\/macrobuilder\/exprlistsyntax\/position","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/position","kind":"symbol","abstract":[{"text":"The absolute position of the starting point of this node. If the first token","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"is with leading trivia, the position points to the start of the leading"},{"type":"text","text":" "},{"text":"trivia.","type":"text"}],"title":"position","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"position"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","text":"AbsolutePosition"}],"type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprListSyntax/trimmed(matching:)":{"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"trimmed","kind":"identifier"},{"kind":"text","text":"("},{"text":"matching","kind":"externalParam"},{"kind":"text","text":": ("},{"text":"TriviaPiece","preciseIdentifier":"s:11SwiftSyntax11TriviaPieceO","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"abstract":[{"type":"text","text":"A copy of this node with pieces that match "},{"type":"codeVoice","code":"matching"},{"type":"text","text":" trimmed from the"},{"type":"text","text":" "},{"type":"text","text":"leading trivia of the first token and trailing trivia of the last token."}],"kind":"symbol","title":"trimmed(matching:)","role":"symbol","url":"\/documentation\/macrobuilder\/exprlistsyntax\/trimmed(matching:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/trimmed(matching:)"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprListSyntax/formatted(using:)":{"title":"formatted(using:)","abstract":[],"role":"symbol","kind":"symbol","type":"topic","url":"\/documentation\/macrobuilder\/exprlistsyntax\/formatted(using:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"formatted","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"using"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"BasicFormat","preciseIdentifier":"s:16SwiftBasicFormat0bC0C"},{"text":") -> ","kind":"text"},{"text":"Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/formatted(using:)"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprListSyntax/expand(macros:in:indentationWidth:)":{"role":"symbol","deprecated":true,"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"expand","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"macros"},{"kind":"text","text":": ["},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":" : any ","kind":"text"},{"preciseIdentifier":"s:17SwiftSyntaxMacros5MacroP","kind":"typeIdentifier","text":"Macro"},{"text":".Type], ","kind":"text"},{"kind":"externalParam","text":"in"},{"kind":"text","text":": some "},{"preciseIdentifier":"s:17SwiftSyntaxMacros21MacroExpansionContextP","text":"MacroExpansionContext","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"indentationWidth","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax6TriviaV","text":"Trivia","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax"}],"url":"\/documentation\/macrobuilder\/exprlistsyntax\/expand(macros:in:indentationwidth:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/expand(macros:in:indentationWidth:)","type":"topic","kind":"symbol","abstract":[],"title":"expand(macros:in:indentationWidth:)"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprListSyntax/init(_:)-2bilx":{"fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"?<"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":"?)"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/init(_:)-2bilx","url":"\/documentation\/macrobuilder\/exprlistsyntax\/init(_:)-2bilx","role":"symbol","abstract":[{"type":"text","text":"Initializes a new instance of the conforming type from a given specialized syntax node."}],"title":"init(_:)"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprListSyntax/debugDescription":{"type":"topic","url":"\/documentation\/macrobuilder\/exprlistsyntax\/debugdescription","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/debugDescription","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"debugDescription"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"}],"abstract":[{"type":"text","text":"A simple description of this node (ie. its type)."}],"title":"debugDescription","kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprListSyntax":{"url":"\/documentation\/macrobuilder\/exprlistsyntax","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"ExprListSyntax","kind":"identifier"}],"title":"ExprListSyntax","abstract":[{"text":"A list of expressions connected by operators. This list is contained by a ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SequenceExprSyntax"},{"type":"text","text":"."}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"ExprListSyntax","kind":"identifier"}],"type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprListSyntax/write(to:)":{"title":"write(to:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/write(to:)","type":"topic","abstract":[{"text":"Prints the raw value of this node to the provided stream.","type":"text"}],"url":"\/documentation\/macrobuilder\/exprlistsyntax\/write(to:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"write","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Target","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"to","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Target","kind":"typeIdentifier"},{"text":")","kind":"text"}],"role":"symbol","kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprListSyntax/isProtocol(_:)-187id":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"((any "},{"preciseIdentifier":"s:11SwiftSyntax013WithModifiersB0P","text":"WithModifiersSyntax","kind":"typeIdentifier"},{"text":").Type) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"url":"\/documentation\/macrobuilder\/exprlistsyntax\/isprotocol(_:)-187id","role":"symbol","kind":"symbol","title":"isProtocol(_:)","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"code":"WithModifiersSyntax","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/isProtocol(_:)-187id","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprListSyntax/cast(_:)-5emu7":{"abstract":[{"type":"text","text":"Force-cast the current syntax node to "},{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax","isActive":true,"type":"reference"},{"text":" node..","type":"text"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/cast(_:)-5emu7","deprecated":true,"title":"cast(_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"cast","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"text":".Type) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax"}],"url":"\/documentation\/macrobuilder\/exprlistsyntax\/cast(_:)-5emu7","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprListSyntax/hasMaximumNestingLevelOverflow":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/hasMaximumNestingLevelOverflow","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"hasMaximumNestingLevelOverflow"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"title":"hasMaximumNestingLevelOverflow","type":"topic","abstract":[],"role":"symbol","url":"\/documentation\/macrobuilder\/exprlistsyntax\/hasmaximumnestingleveloverflow"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprListSyntax/isProtocol(_:)-4omf9":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/isProtocol(_:)-4omf9","kind":"symbol","type":"topic","url":"\/documentation\/macrobuilder\/exprlistsyntax\/isprotocol(_:)-4omf9","title":"isProtocol(_:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"kind":"text","text":"((any "},{"preciseIdentifier":"s:11SwiftSyntax017WithTrailingCommaB0P","text":"WithTrailingCommaSyntax","kind":"typeIdentifier"},{"text":").Type) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithTrailingCommaSyntax"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprListSyntax/token(at:)":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/token(at:)","title":"token(at:)","abstract":[{"type":"text","text":"Find the syntax token at the given absolute position within this"},{"text":" ","type":"text"},{"type":"text","text":"syntax node or any of its children."}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"token","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"at"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","text":"AbsolutePosition","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"TokenSyntax","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"url":"\/documentation\/macrobuilder\/exprlistsyntax\/token(at:)","type":"topic","kind":"symbol","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprListSyntax/trailingTrivia":{"type":"topic","url":"\/documentation\/macrobuilder\/exprlistsyntax\/trailingtrivia","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/trailingTrivia","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"trailingTrivia"},{"kind":"text","text":": "},{"text":"Trivia","preciseIdentifier":"s:11SwiftSyntax6TriviaV","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"The trailing trivia of this syntax node."}],"title":"trailingTrivia","kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprListSyntax/asProtocol(_:)-913bp":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/asProtocol(_:)-913bp","kind":"symbol","type":"topic","url":"\/documentation\/macrobuilder\/exprlistsyntax\/asprotocol(_:)-913bp","title":"asProtocol(_:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"((any "},{"text":"EffectSpecifiersSyntax","preciseIdentifier":"s:11SwiftSyntax016EffectSpecifiersB0P","kind":"typeIdentifier"},{"text":").Type) -> (any ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax016EffectSpecifiersB0P","text":"EffectSpecifiersSyntax"},{"text":")?","kind":"text"}],"abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"EffectSpecifiersSyntax"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprListSyntax/modifying(_:_:)":{"type":"topic","url":"\/documentation\/macrobuilder\/exprlistsyntax\/modifying(_:_:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/modifying(_:_:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"modifying"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s15WritableKeyPathC","text":"WritableKeyPath"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"T","kind":"typeIdentifier"},{"text":">, (","kind":"text"},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":") "},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"abstract":[],"title":"modifying(_:_:)","kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprListSyntax/startLocation(converter:afterLeadingTrivia:)":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/startLocation(converter:afterLeadingTrivia:)","kind":"symbol","type":"topic","url":"\/documentation\/macrobuilder\/exprlistsyntax\/startlocation(converter:afterleadingtrivia:)","title":"startLocation(converter:afterLeadingTrivia:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"startLocation"},{"kind":"text","text":"("},{"kind":"externalParam","text":"converter"},{"text":": ","kind":"text"},{"text":"SourceLocationConverter","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC"},{"kind":"text","text":", "},{"text":"afterLeadingTrivia","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax14SourceLocationV","text":"SourceLocation"}],"abstract":[{"text":"The starting location, in the provided file, of this Syntax node.","type":"text"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprListSyntax/asProtocol(_:)-2e0d6":{"kind":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"asProtocol"},{"kind":"text","text":"((any "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax09NamedDeclB0P","text":"NamedDeclSyntax"},{"text":").Type) -> (any ","kind":"text"},{"text":"NamedDeclSyntax","preciseIdentifier":"s:11SwiftSyntax09NamedDeclB0P","kind":"typeIdentifier"},{"text":")?","kind":"text"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/asProtocol(_:)-2e0d6","url":"\/documentation\/macrobuilder\/exprlistsyntax\/asprotocol(_:)-2e0d6","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"NamedDeclSyntax"},{"text":". Otherwise return ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"role":"symbol","title":"asProtocol(_:)"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprListSyntax/asProtocol(_:)-56d35":{"url":"\/documentation\/macrobuilder\/exprlistsyntax\/asprotocol(_:)-56d35","kind":"symbol","type":"topic","title":"asProtocol(_:)","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"BracedSyntax"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"kind":"text","text":"((any "},{"text":"BracedSyntax","preciseIdentifier":"s:11SwiftSyntax06BracedB0P","kind":"typeIdentifier"},{"text":").Type) -> (any ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax06BracedB0P","kind":"typeIdentifier","text":"BracedSyntax"},{"text":")?","kind":"text"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/asProtocol(_:)-56d35","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprListSyntax/cast(_:)-9l7vb":{"type":"topic","url":"\/documentation\/macrobuilder\/exprlistsyntax\/cast(_:)-9l7vb","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/cast(_:)-9l7vb","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"cast","kind":"identifier"},{"kind":"text","text":"<"},{"text":"S","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"S","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"kind":"typeIdentifier","text":"S"}],"abstract":[{"text":"Force-casts the current syntax node to a given specialized syntax type.","type":"text"}],"title":"cast(_:)","kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprListSyntax/asProtocol(_:)-7nvgo":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/asProtocol(_:)-7nvgo","kind":"symbol","role":"symbol","type":"topic","url":"\/documentation\/macrobuilder\/exprlistsyntax\/asprotocol(_:)-7nvgo","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"code":"WithAttributesSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"title":"asProtocol(_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"text":"((any ","kind":"text"},{"text":"WithAttributesSyntax","preciseIdentifier":"s:11SwiftSyntax014WithAttributesB0P","kind":"typeIdentifier"},{"text":").Type) -> (any ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax014WithAttributesB0P","text":"WithAttributesSyntax","kind":"typeIdentifier"},{"kind":"text","text":")?"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprListSyntax/keyPathInParent":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/keyPathInParent","kind":"symbol","type":"topic","url":"\/documentation\/macrobuilder\/exprlistsyntax\/keypathinparent","title":"keyPathInParent","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"keyPathInParent","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s10AnyKeyPathC","text":"AnyKeyPath"},{"text":"?","kind":"text"}],"abstract":[]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprListSyntax/isProtocol(_:)-3eq4r":{"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"text":"((any ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P","kind":"typeIdentifier","text":"WithGenericParametersSyntax"},{"kind":"text","text":").Type) -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/isProtocol(_:)-3eq4r","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithGenericParametersSyntax"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"url":"\/documentation\/macrobuilder\/exprlistsyntax\/isprotocol(_:)-3eq4r","kind":"symbol","title":"isProtocol(_:)","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprListSyntax/previousToken(viewMode:)":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/previousToken(viewMode:)","kind":"symbol","role":"symbol","title":"previousToken(viewMode:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"previousToken"},{"kind":"text","text":"("},{"text":"viewMode","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"SyntaxTreeViewMode","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO"},{"text":") -> ","kind":"text"},{"text":"TokenSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"text":"?","kind":"text"}],"type":"topic","url":"\/documentation\/macrobuilder\/exprlistsyntax\/previoustoken(viewmode:)","abstract":[{"type":"text","text":"Recursively walks through the tree to find the token semantically before"},{"type":"text","text":" "},{"text":"this node.","type":"text"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprListSyntax/asProtocol(_:)-7n858":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"((any "},{"text":"FreestandingMacroExpansionSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P"},{"kind":"text","text":").Type) -> (any "},{"preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P","text":"FreestandingMacroExpansionSyntax","kind":"typeIdentifier"},{"kind":"text","text":")?"}],"title":"asProtocol(_:)","kind":"symbol","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"FreestandingMacroExpansionSyntax"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/asProtocol(_:)-7n858","url":"\/documentation\/macrobuilder\/exprlistsyntax\/asprotocol(_:)-7n858","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprListSyntax/isProtocol(_:)-8y3ig":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"text":"((any ","kind":"text"},{"text":"EffectSpecifiersSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax016EffectSpecifiersB0P"},{"kind":"text","text":").Type) -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"role":"symbol","type":"topic","url":"\/documentation\/macrobuilder\/exprlistsyntax\/isprotocol(_:)-8y3ig","title":"isProtocol(_:)","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"code":"EffectSpecifiersSyntax","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/isProtocol(_:)-8y3ig","kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprListSyntax/isProtocol(_:)-54ps3":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/isProtocol(_:)-54ps3","url":"\/documentation\/macrobuilder\/exprlistsyntax\/isprotocol(_:)-54ps3","role":"symbol","title":"isProtocol(_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"text":"((any ","kind":"text"},{"kind":"typeIdentifier","text":"ParenthesizedSyntax","preciseIdentifier":"s:11SwiftSyntax013ParenthesizedB0P"},{"text":").Type) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"type":"topic","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"ParenthesizedSyntax"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprListSyntax/expand(macros:contextGenerator:indentationWidth:)":{"role":"symbol","url":"\/documentation\/macrobuilder\/exprlistsyntax\/expand(macros:contextgenerator:indentationwidth:)","kind":"symbol","type":"topic","title":"expand(macros:contextGenerator:indentationWidth:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/expand(macros:contextGenerator:indentationWidth:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"expand"},{"text":"<","kind":"text"},{"text":"Context","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"macros","kind":"externalParam"},{"kind":"text","text":": ["},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"kind":"text","text":" : any "},{"preciseIdentifier":"s:17SwiftSyntaxMacros5MacroP","kind":"typeIdentifier","text":"Macro"},{"text":".Type], ","kind":"text"},{"text":"contextGenerator","kind":"externalParam"},{"text":": (","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Context"},{"kind":"text","text":", "},{"kind":"externalParam","text":"indentationWidth"},{"text":": ","kind":"text"},{"text":"Trivia","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax6TriviaV"},{"text":"?) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax"}],"abstract":[]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprListSyntax/detached":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/detached","kind":"symbol","title":"detached","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"detached","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"role":"symbol","abstract":[{"type":"text","text":"Return this subtree with this node as the root, ie. detach this node"},{"text":" ","type":"text"},{"text":"from its parent.","type":"text"}],"url":"\/documentation\/macrobuilder\/exprlistsyntax\/detached","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprListSyntax/asProtocol(_:)-m15s":{"abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"code":"WithOptionalCodeBlockSyntax","type":"codeVoice"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"title":"asProtocol(_:)","kind":"symbol","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/asProtocol(_:)-m15s","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"asProtocol"},{"text":"((any ","kind":"text"},{"text":"WithOptionalCodeBlockSyntax","preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P","kind":"typeIdentifier"},{"kind":"text","text":").Type) -> (any "},{"kind":"typeIdentifier","text":"WithOptionalCodeBlockSyntax","preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P"},{"kind":"text","text":")?"}],"type":"topic","url":"\/documentation\/macrobuilder\/exprlistsyntax\/asprotocol(_:)-m15s"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprListSyntax/totalLength":{"abstract":[{"text":"The length of this node including all of its trivia.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/totalLength","kind":"symbol","url":"\/documentation\/macrobuilder\/exprlistsyntax\/totallength","role":"symbol","title":"totalLength","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"totalLength","kind":"identifier"},{"text":": ","kind":"text"},{"text":"SourceLength","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV","kind":"typeIdentifier"}],"type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprListSyntax/syntaxTextBytes":{"abstract":[{"text":"Retrieve the syntax text as an array of bytes that models the input","type":"text"},{"type":"text","text":" "},{"type":"text","text":"source even in the presence of invalid UTF-8."}],"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"syntaxTextBytes"},{"text":": [","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s5UInt8V","text":"UInt8"},{"text":"]","kind":"text"}],"type":"topic","role":"symbol","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/syntaxTextBytes","title":"syntaxTextBytes","url":"\/documentation\/macrobuilder\/exprlistsyntax\/syntaxtextbytes"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprListSyntax/byteSize":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/byteSize","type":"topic","title":"byteSize","role":"symbol","kind":"symbol","deprecated":true,"abstract":[{"text":"The textual byte length of this node including leading and trailing trivia.","type":"text"}],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"byteSize"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"}],"url":"\/documentation\/macrobuilder\/exprlistsyntax\/bytesize"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprListSyntax/asMacroLexicalContext()":{"url":"\/documentation\/macrobuilder\/exprlistsyntax\/asmacrolexicalcontext()","abstract":[{"type":"text","text":"If this syntax node acts as a lexical context from the perspective"},{"type":"text","text":" "},{"type":"text","text":"of a macro, return a new syntax node based on this node that strips all"},{"type":"text","text":" "},{"text":"information that isn’t supposed to be exposed as a lexical context, such","type":"text"},{"text":" ","type":"text"},{"text":"as function bodies or the members of types\/extensions.","type":"text"}],"role":"symbol","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"asMacroLexicalContext","kind":"identifier"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"kind":"text","text":"?"}],"title":"asMacroLexicalContext()","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/asMacroLexicalContext()"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprListSyntax/is(_:)-2u4ro":{"abstract":[{"type":"text","text":"Checks if the current syntax node can be cast to its own type."}],"title":"is(_:)","kind":"symbol","role":"symbol","deprecated":true,"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/is(_:)-2u4ro","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"`is`","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":".Type) -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"type":"topic","url":"\/documentation\/macrobuilder\/exprlistsyntax\/is(_:)-2u4ro"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprListSyntax/debugDescription(includeTrivia:converter:mark:indentString:)":{"abstract":[{"type":"text","text":"Returns a summarized dump of this node."}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/debugDescription(includeTrivia:converter:mark:indentString:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"debugDescription","kind":"identifier"},{"kind":"text","text":"("},{"text":"includeTrivia","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":", "},{"kind":"externalParam","text":"converter"},{"kind":"text","text":": "},{"text":"SourceLocationConverter","preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"mark","kind":"externalParam"},{"text":": (any ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP","kind":"typeIdentifier","text":"SyntaxProtocol"},{"kind":"text","text":")?, "},{"kind":"externalParam","text":"indentString"},{"kind":"text","text":": "},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"}],"title":"debugDescription(includeTrivia:converter:mark:indentString:)","role":"symbol","type":"topic","url":"\/documentation\/macrobuilder\/exprlistsyntax\/debugdescription(includetrivia:converter:mark:indentstring:)"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprListSyntax/asProtocol(_:)-2m700":{"title":"asProtocol(_:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/asProtocol(_:)-2m700","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithCodeBlockSyntax"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"type":"topic","url":"\/documentation\/macrobuilder\/exprlistsyntax\/asprotocol(_:)-2m700","role":"symbol","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"text":"((any ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P","text":"WithCodeBlockSyntax"},{"text":").Type) -> (any ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P","text":"WithCodeBlockSyntax","kind":"typeIdentifier"},{"text":")?","kind":"text"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprListSyntax/isImplicit":{"url":"\/documentation\/macrobuilder\/exprlistsyntax\/isimplicit","kind":"symbol","type":"topic","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isImplicit","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"deprecated":true,"title":"isImplicit","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/isImplicit","abstract":[{"text":"When isImplicit is true, the syntax node doesn’t include any","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"underlying tokens, e.g. an empty CodeBlockItemList."}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprListSyntax/asProtocol(_:)-8ocb9":{"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"asProtocol"},{"text":"((any ","kind":"text"},{"kind":"typeIdentifier","text":"WithTrailingCommaSyntax","preciseIdentifier":"s:11SwiftSyntax017WithTrailingCommaB0P"},{"kind":"text","text":").Type) -> (any "},{"text":"WithTrailingCommaSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax017WithTrailingCommaB0P"},{"kind":"text","text":")?"}],"url":"\/documentation\/macrobuilder\/exprlistsyntax\/asprotocol(_:)-8ocb9","type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/asProtocol(_:)-8ocb9","kind":"symbol","title":"asProtocol(_:)","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"code":"WithTrailingCommaSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprListSyntax/trimmed":{"kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"trimmed"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"}],"title":"trimmed","role":"symbol","type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/trimmed","abstract":[{"type":"text","text":"A copy of this node without the leading trivia of the first token in the"},{"text":" ","type":"text"},{"text":"node and the trailing trivia of the last token in the node.","type":"text"}],"url":"\/documentation\/macrobuilder\/exprlistsyntax\/trimmed"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/Syntax":{"abstract":[{"type":"text","text":"A Syntax node represents a tree of nodes with tokens at the leaves."},{"text":" ","type":"text"},{"type":"text","text":"Each node has accessors for its known children, and allows efficient"},{"text":" ","type":"text"},{"text":"iteration over the children through its ","type":"text"},{"type":"codeVoice","code":"children"},{"text":" property.","type":"text"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Syntax"}],"url":"\/documentation\/macrobuilder\/syntax","title":"Syntax","type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Syntax","kind":"identifier"}],"kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprListSyntax/description":{"url":"\/documentation\/macrobuilder\/exprlistsyntax\/description","abstract":[{"text":"A source-accurate description of this node.","type":"text"}],"role":"symbol","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"description"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"}],"title":"description","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/description"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprListSyntax/init(validating:)":{"type":"topic","title":"init(validating:)","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"validating"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/init(validating:)","abstract":[{"type":"text","text":"If "},{"type":"codeVoice","code":"node"},{"type":"text","text":" has contains no syntax errors, return "},{"type":"codeVoice","code":"node"},{"type":"text","text":", otherwise"},{"text":" ","type":"text"},{"type":"text","text":"throw an error with diagnostics describing the syntax errors."}],"role":"symbol","kind":"symbol","url":"\/documentation\/macrobuilder\/exprlistsyntax\/init(validating:)"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprListSyntax/trailingTriviaLength":{"url":"\/documentation\/macrobuilder\/exprlistsyntax\/trailingtrivialength","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"trailingTriviaLength","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"SourceLength","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV"}],"title":"trailingTriviaLength","role":"symbol","type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/trailingTriviaLength","abstract":[{"type":"text","text":"The length this node’s trailing trivia takes up spelled out in source."}],"kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprListSyntax/asProtocol(_:)-7pui1":{"title":"asProtocol(_:)","role":"symbol","kind":"symbol","type":"topic","url":"\/documentation\/macrobuilder\/exprlistsyntax\/asprotocol(_:)-7pui1","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"text":"((any ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax011MissingNodeB0P","text":"MissingNodeSyntax"},{"text":").Type) -> (any ","kind":"text"},{"text":"MissingNodeSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax011MissingNodeB0P"},{"kind":"text","text":")?"}],"abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"code":"MissingNodeSyntax","type":"codeVoice"},{"text":". Otherwise return ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/asProtocol(_:)-7pui1"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprListSyntax/isProtocol(_:)-4mxku":{"abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"text":" ","type":"text"},{"code":"NamedDeclSyntax","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"title":"isProtocol(_:)","kind":"symbol","url":"\/documentation\/macrobuilder\/exprlistsyntax\/isprotocol(_:)-4mxku","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"((any "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax09NamedDeclB0P","text":"NamedDeclSyntax"},{"kind":"text","text":").Type) -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/isProtocol(_:)-4mxku","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprListSyntax/root":{"abstract":[{"type":"text","text":"The root of the tree in which this node resides."}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/root","url":"\/documentation\/macrobuilder\/exprlistsyntax\/root","type":"topic","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"root"},{"text":": ","kind":"text"},{"text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier"}],"title":"root","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SyntaxKind/functionDecl":{"url":"\/documentation\/macrobuilder\/syntaxkind\/functiondecl","fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"kind":"identifier","text":"functionDecl"}],"title":"SyntaxKind.functionDecl","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxKind\/functionDecl","role":"symbol","type":"topic","kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprListSyntax/asProtocol(_:)-7xhd1":{"kind":"symbol","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"code":"WithModifiersSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"title":"asProtocol(_:)","url":"\/documentation\/macrobuilder\/exprlistsyntax\/asprotocol(_:)-7xhd1","type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/asProtocol(_:)-7xhd1","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"text":"((any ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013WithModifiersB0P","text":"WithModifiersSyntax"},{"kind":"text","text":").Type) -> (any "},{"text":"WithModifiersSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013WithModifiersB0P"},{"text":")?","kind":"text"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprListSyntax/sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)":{"url":"\/documentation\/macrobuilder\/exprlistsyntax\/sourcerange(converter:afterleadingtrivia:aftertrailingtrivia:)","title":"sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)","type":"topic","abstract":[{"type":"text","text":"The source range, in the provided file, of this Syntax node."}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"sourceRange"},{"kind":"text","text":"("},{"text":"converter","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC","text":"SourceLocationConverter"},{"text":", ","kind":"text"},{"text":"afterLeadingTrivia","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":", "},{"text":"afterTrailingTrivia","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":") -> ","kind":"text"},{"text":"SourceRange","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax11SourceRangeV"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprListSyntax/nextToken(viewMode:)":{"url":"\/documentation\/macrobuilder\/exprlistsyntax\/nexttoken(viewmode:)","abstract":[{"type":"text","text":"Recursively walks through the tree to find the next token semantically"},{"type":"text","text":" "},{"text":"after this node.","type":"text"}],"role":"symbol","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"nextToken"},{"kind":"text","text":"("},{"kind":"externalParam","text":"viewMode"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"SyntaxTreeViewMode","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax"},{"text":"?","kind":"text"}],"title":"nextToken(viewMode:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/nextToken(viewMode:)"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprListSyntax/hasParent":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/hasParent","kind":"symbol","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"hasParent","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"type":"topic","title":"hasParent","url":"\/documentation\/macrobuilder\/exprlistsyntax\/hasparent","abstract":[{"type":"text","text":"Whether or not this node has a parent."}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprListSyntax/id":{"type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"id","kind":"identifier"},{"kind":"text","text":": "},{"text":"SyntaxIdentifier","preciseIdentifier":"s:11SwiftSyntax0B10IdentifierV","kind":"typeIdentifier"}],"title":"id","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/id","url":"\/documentation\/macrobuilder\/exprlistsyntax\/id","abstract":[{"text":"Returns a value representing the unique identity of the node.","type":"text"}],"role":"symbol","kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprListSyntax/leadingTrivia":{"url":"\/documentation\/macrobuilder\/exprlistsyntax\/leadingtrivia","title":"leadingTrivia","type":"topic","abstract":[{"type":"text","text":"The leading trivia of this syntax node."}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/leadingTrivia","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"leadingTrivia"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Trivia","preciseIdentifier":"s:11SwiftSyntax6TriviaV"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprListSyntax/asProtocol(_:)-6g6fx":{"abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"text":" ","type":"text"},{"code":"WithStatementsSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"text":"((any ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax014WithStatementsB0P","text":"WithStatementsSyntax"},{"kind":"text","text":").Type) -> (any "},{"preciseIdentifier":"s:11SwiftSyntax014WithStatementsB0P","kind":"typeIdentifier","text":"WithStatementsSyntax"},{"text":")?","kind":"text"}],"title":"asProtocol(_:)","role":"symbol","type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/asProtocol(_:)-6g6fx","kind":"symbol","url":"\/documentation\/macrobuilder\/exprlistsyntax\/asprotocol(_:)-6g6fx"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprListSyntax/asProtocol(_:)-4kvwz":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/asProtocol(_:)-4kvwz","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"text":"((any ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P","text":"WithGenericParametersSyntax","kind":"typeIdentifier"},{"kind":"text","text":").Type) -> (any "},{"preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P","kind":"typeIdentifier","text":"WithGenericParametersSyntax"},{"text":")?","kind":"text"}],"url":"\/documentation\/macrobuilder\/exprlistsyntax\/asprotocol(_:)-4kvwz","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"code":"WithGenericParametersSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"role":"symbol","kind":"symbol","type":"topic","title":"asProtocol(_:)"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprListSyntax/as(_:)-2efxs":{"url":"\/documentation\/macrobuilder\/exprlistsyntax\/as(_:)-2efxs","abstract":[{"type":"text","text":"Attempts to cast the current syntax node to a given specialized syntax type."}],"role":"symbol","type":"topic","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"`as`"},{"kind":"text","text":"<"},{"text":"S","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"S","kind":"typeIdentifier"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":"?"}],"title":"as(_:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/as(_:)-2efxs"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprListSyntax/isProtocol(_:)-3ws5v":{"url":"\/documentation\/macrobuilder\/exprlistsyntax\/isprotocol(_:)-3ws5v","type":"topic","kind":"symbol","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/isProtocol(_:)-3ws5v","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"text":"((any ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax06BracedB0P","text":"BracedSyntax"},{"kind":"text","text":").Type) -> "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"title":"isProtocol(_:)","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"code":"BracedSyntax","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprListSyntax/expand(macroSpecs:contextGenerator:indentationWidth:)":{"url":"\/documentation\/macrobuilder\/exprlistsyntax\/expand(macrospecs:contextgenerator:indentationwidth:)","abstract":[],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"expand"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Context"},{"kind":"text","text":">("},{"text":"macroSpecs","kind":"externalParam"},{"text":": [","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:25SwiftSyntaxMacroExpansion0C4SpecV","text":"MacroSpec"},{"text":"], ","kind":"text"},{"text":"contextGenerator","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Context","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"indentationWidth","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Trivia","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax6TriviaV"},{"text":"?) -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier","text":"Syntax"}],"kind":"symbol","type":"topic","title":"expand(macroSpecs:contextGenerator:indentationWidth:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/expand(macroSpecs:contextGenerator:indentationWidth:)"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprListSyntax/syntaxNodeType":{"title":"syntaxNodeType","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/syntaxNodeType","type":"topic","role":"symbol","url":"\/documentation\/macrobuilder\/exprlistsyntax\/syntaxnodetype","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"syntaxNodeType"},{"text":": any ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP","text":"SyntaxProtocol"},{"text":".Type","kind":"text"}],"kind":"symbol","abstract":[{"text":"The dynamic metatype of the concrete node.","type":"text"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprListSyntax/isProtocol(_:)-9l2e0":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"text":"((any ","kind":"text"},{"text":"WithStatementsSyntax","preciseIdentifier":"s:11SwiftSyntax014WithStatementsB0P","kind":"typeIdentifier"},{"text":").Type) -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/isProtocol(_:)-9l2e0","url":"\/documentation\/macrobuilder\/exprlistsyntax\/isprotocol(_:)-9l2e0","title":"isProtocol(_:)","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithStatementsSyntax"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprListSyntax/structure":{"title":"structure","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"structure","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"SyntaxNodeStructure","preciseIdentifier":"s:11SwiftSyntax0B13NodeStructureO"}],"abstract":[{"text":"The statically allowed structure of the syntax node.","type":"text"}],"role":"symbol","kind":"symbol","url":"\/documentation\/macrobuilder\/exprlistsyntax\/structure","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/structure","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprListSyntax/trimmedLength":{"type":"topic","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/trimmedLength","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"trimmedLength","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax12SourceLengthV","text":"SourceLength","kind":"typeIdentifier"}],"url":"\/documentation\/macrobuilder\/exprlistsyntax\/trimmedlength","abstract":[{"text":"The length this node takes up spelled out in the source, excluding its","type":"text"},{"text":" ","type":"text"},{"text":"leading or trailing trivia.","type":"text"}],"kind":"symbol","title":"trimmedLength"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprListSyntax/totalByteRange":{"title":"totalByteRange","abstract":[{"text":"The byte source range of this node including leading and trailing trivia.","type":"text"}],"role":"symbol","type":"topic","kind":"symbol","url":"\/documentation\/macrobuilder\/exprlistsyntax\/totalbyterange","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"totalByteRange"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangeV","text":"ByteSourceRange","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/totalByteRange"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprListSyntax/leadingTriviaLength":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/leadingTriviaLength","url":"\/documentation\/macrobuilder\/exprlistsyntax\/leadingtrivialength","kind":"symbol","role":"symbol","title":"leadingTriviaLength","abstract":[{"text":"The length this node’s leading trivia takes up spelled out in source.","type":"text"}],"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"leadingTriviaLength","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax12SourceLengthV","kind":"typeIdentifier","text":"SourceLength"}],"type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprListSyntax/cast(_:)-61pos":{"type":"topic","deprecated":true,"abstract":[{"text":"Force-casts the current syntax node to its own type.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/cast(_:)-61pos","kind":"symbol","url":"\/documentation\/macrobuilder\/exprlistsyntax\/cast(_:)-61pos","role":"symbol","title":"cast(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cast","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":".Type) -> "},{"text":"Self","kind":"typeIdentifier"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprListSyntax/endLocation(converter:afterTrailingTrivia:)":{"url":"\/documentation\/macrobuilder\/exprlistsyntax\/endlocation(converter:aftertrailingtrivia:)","title":"endLocation(converter:afterTrailingTrivia:)","abstract":[{"text":"The ending location, in the provided file, of this Syntax node.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/endLocation(converter:afterTrailingTrivia:)","role":"symbol","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"endLocation","kind":"identifier"},{"kind":"text","text":"("},{"text":"converter","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"SourceLocationConverter","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC"},{"kind":"text","text":", "},{"kind":"externalParam","text":"afterTrailingTrivia"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax14SourceLocationV","text":"SourceLocation","kind":"typeIdentifier"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprListSyntax/index":{"abstract":[{"text":"The index of this node in a ","type":"text"},{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxChildren","type":"reference","isActive":true},{"text":" collection.","type":"text"}],"kind":"symbol","deprecated":true,"type":"topic","title":"index","url":"\/documentation\/macrobuilder\/exprlistsyntax\/index","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/index","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"index"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B13ChildrenIndexV","text":"SyntaxChildrenIndex"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprListSyntax/init(_:)-91tcs":{"abstract":[{"type":"text","text":"Converts the given specialized node to this type. Returns "},{"code":"nil","type":"codeVoice"},{"type":"text","text":" if the"},{"type":"text","text":" "},{"type":"text","text":"conversion is not possible."}],"kind":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Children"},{"text":">(","kind":"text"},{"text":"Children","kind":"typeIdentifier"},{"kind":"text","text":")"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/init(_:)-91tcs","url":"\/documentation\/macrobuilder\/exprlistsyntax\/init(_:)-91tcs","type":"topic","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprListSyntax/endPositionBeforeTrailingTrivia":{"kind":"symbol","role":"symbol","title":"endPositionBeforeTrailingTrivia","type":"topic","abstract":[{"text":"The end position of this node’s content, before any trailing trivia.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/endPositionBeforeTrailingTrivia","url":"\/documentation\/macrobuilder\/exprlistsyntax\/endpositionbeforetrailingtrivia","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"endPositionBeforeTrailingTrivia","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","text":"AbsolutePosition","kind":"typeIdentifier"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprListSyntax/isProtocol(_:)-11u9r":{"abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"code":"WithAttributesSyntax","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"url":"\/documentation\/macrobuilder\/exprlistsyntax\/isprotocol(_:)-11u9r","kind":"symbol","type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"text":"((any ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax014WithAttributesB0P","text":"WithAttributesSyntax","kind":"typeIdentifier"},{"text":").Type) -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"title":"isProtocol(_:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/isProtocol(_:)-11u9r"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprListSyntax/previousToken":{"kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"previousToken"},{"kind":"text","text":": "},{"text":"TokenSyntax","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"deprecated":true,"title":"previousToken","role":"symbol","type":"topic","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/previousToken","url":"\/documentation\/macrobuilder\/exprlistsyntax\/previoustoken"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprListSyntax/as(_:)-2zfs9":{"type":"topic","deprecated":true,"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"`as`","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Casts the current syntax node to its own type."}],"role":"symbol","title":"as(_:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/as(_:)-2zfs9","url":"\/documentation\/macrobuilder\/exprlistsyntax\/as(_:)-2zfs9","kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprListSyntax/hasError":{"title":"hasError","abstract":[{"text":"Whether the tree contained by this layout has any","type":"text"}],"role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"hasError","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"type":"topic","url":"\/documentation\/macrobuilder\/exprlistsyntax\/haserror","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/hasError"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprListSyntax/byteRange":{"type":"topic","deprecated":true,"abstract":[],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/byteRange","kind":"symbol","url":"\/documentation\/macrobuilder\/exprlistsyntax\/byterange","role":"symbol","title":"byteRange","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"byteRange"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangeV","text":"ByteSourceRange"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprListSyntax/positionAfterSkippingLeadingTrivia":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/positionAfterSkippingLeadingTrivia","abstract":[{"text":"The absolute position of the starting point of this node, skipping any","type":"text"},{"type":"text","text":" "},{"type":"text","text":"leading trivia attached to the first token syntax."}],"url":"\/documentation\/macrobuilder\/exprlistsyntax\/positionafterskippingleadingtrivia","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"positionAfterSkippingLeadingTrivia","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","text":"AbsolutePosition","kind":"typeIdentifier"}],"role":"symbol","title":"positionAfterSkippingLeadingTrivia","kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprListSyntax/asProtocol(_:)-74kd5":{"type":"topic","title":"asProtocol(_:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/asProtocol(_:)-74kd5","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"code":"DeclGroupSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"url":"\/documentation\/macrobuilder\/exprlistsyntax\/asprotocol(_:)-74kd5","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"((any "},{"preciseIdentifier":"s:11SwiftSyntax09DeclGroupB0P","kind":"typeIdentifier","text":"DeclGroupSyntax"},{"text":").Type) -> (any ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax09DeclGroupB0P","text":"DeclGroupSyntax"},{"text":")?","kind":"text"}],"role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprListSyntax/contentLength":{"kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"contentLength"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax12SourceLengthV","text":"SourceLength","kind":"typeIdentifier"}],"deprecated":true,"title":"contentLength","role":"symbol","type":"topic","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/contentLength","url":"\/documentation\/macrobuilder\/exprlistsyntax\/contentlength"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprListSyntax/children(viewMode:)":{"role":"symbol","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"children","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"viewMode"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","text":"SyntaxTreeViewMode","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:11SwiftSyntax0B8ChildrenV","kind":"typeIdentifier","text":"SyntaxChildren"}],"url":"\/documentation\/macrobuilder\/exprlistsyntax\/children(viewmode:)","title":"children(viewMode:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/children(viewMode:)","abstract":[{"text":"A sequence over the children of this node.","type":"text"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprListSyntax/isProtocol(_:)-7ye10":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/isProtocol(_:)-7ye10","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"text":" ","type":"text"},{"code":"WithCodeBlockSyntax","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"title":"isProtocol(_:)","type":"topic","role":"symbol","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"text":"((any ","kind":"text"},{"text":"WithCodeBlockSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P"},{"kind":"text","text":").Type) -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"url":"\/documentation\/macrobuilder\/exprlistsyntax\/isprotocol(_:)-7ye10"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprListSyntax/as(_:)-7v6yw":{"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"`as`","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier"},{"kind":"text","text":".Type) -> "},{"text":"Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"text":"?","kind":"text"}],"role":"symbol","abstract":[{"type":"text","text":"Attempts to upcast the current syntax node to "},{"isActive":true,"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax","type":"reference"},{"type":"text","text":" node."}],"url":"\/documentation\/macrobuilder\/exprlistsyntax\/as(_:)-7v6yw","deprecated":true,"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/as(_:)-7v6yw","title":"as(_:)","kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprListSyntax/with(_:_:)":{"url":"\/documentation\/macrobuilder\/exprlistsyntax\/with(_:_:)","type":"topic","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"with"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"WritableKeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s15WritableKeyPathC"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">, "},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"}],"title":"with(_:_:)","abstract":[{"type":"text","text":"Returns a new syntax node that has the child at "},{"type":"codeVoice","code":"keyPath"},{"text":" replaced by","type":"text"},{"type":"text","text":" "},{"code":"value","type":"codeVoice"},{"text":".","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/with(_:_:)"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprListSyntax/is(_:)-8dodb":{"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/is(_:)-8dodb","title":"is(_:)","role":"symbol","deprecated":true,"abstract":[{"type":"text","text":"Checks if the current syntax node can be upcast to "},{"type":"reference","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax","isActive":true},{"type":"text","text":" node."}],"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"`is`","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"url":"\/documentation\/macrobuilder\/exprlistsyntax\/is(_:)-8dodb"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprListSyntax/firstToken":{"deprecated":true,"kind":"symbol","title":"firstToken","abstract":[],"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"firstToken"},{"text":": ","kind":"text"},{"text":"TokenSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"text":"?","kind":"text"}],"role":"symbol","url":"\/documentation\/macrobuilder\/exprlistsyntax\/firsttoken","type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/firstToken"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprListSyntax/isProtocol(_:)-6ehkm":{"type":"topic","role":"symbol","title":"isProtocol(_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"kind":"text","text":"((any "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P","text":"WithOptionalCodeBlockSyntax"},{"kind":"text","text":").Type) -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/isProtocol(_:)-6ehkm","url":"\/documentation\/macrobuilder\/exprlistsyntax\/isprotocol(_:)-6ehkm","kind":"symbol","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"code":"WithOptionalCodeBlockSyntax","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprListSyntax/endPosition":{"title":"endPosition","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/endPosition","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"endPosition","kind":"identifier"},{"kind":"text","text":": "},{"text":"AbsolutePosition","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV"}],"type":"topic","role":"symbol","url":"\/documentation\/macrobuilder\/exprlistsyntax\/endposition","abstract":[{"type":"text","text":"The end position of this node, including its trivia."}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprListSyntax/hasWarning":{"type":"topic","abstract":[{"type":"text","text":"Whether the tree contained by this layout has any tokens with a"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TokenDiagnostic","isActive":true},{"text":" of severity ","type":"text"},{"type":"codeVoice","code":"warning"},{"type":"text","text":"."}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/hasWarning","kind":"symbol","url":"\/documentation\/macrobuilder\/exprlistsyntax\/haswarning","role":"symbol","title":"hasWarning","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"hasWarning","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SyntaxChildren":{"title":"SyntaxChildren","abstract":[{"text":"Collection that contains the present child ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax","type":"reference"},{"type":"text","text":" nodes of the given node."}],"url":"\/documentation\/macrobuilder\/syntaxchildren","role":"symbol","navigatorTitle":[{"text":"SyntaxChildren","kind":"identifier"}],"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SyntaxChildren","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxChildren"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/TokenDiagnostic":{"type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"TokenDiagnostic"}],"role":"symbol","abstract":[{"text":"If the token has an error that’s inherent to the token itself and not its","type":"text"},{"text":" ","type":"text"},{"text":"surrounding structure, this defines the type of the error.","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"byteOffset"},{"type":"text","text":" specifies at which offset the error occurred."}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TokenDiagnostic","title":"TokenDiagnostic","url":"\/documentation\/macrobuilder\/tokendiagnostic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"TokenDiagnostic","kind":"identifier"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprListSyntax/isProtocol(_:)-3dixv":{"url":"\/documentation\/macrobuilder\/exprlistsyntax\/isprotocol(_:)-3dixv","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"code":"MissingNodeSyntax","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"role":"symbol","kind":"symbol","type":"topic","title":"isProtocol(_:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/isProtocol(_:)-3dixv","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"text":"((any ","kind":"text"},{"kind":"typeIdentifier","text":"MissingNodeSyntax","preciseIdentifier":"s:11SwiftSyntax011MissingNodeB0P"},{"kind":"text","text":").Type) -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprListSyntax/kind":{"kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"kind","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B4KindO","text":"SyntaxKind"}],"title":"kind","role":"symbol","type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/kind","url":"\/documentation\/macrobuilder\/exprlistsyntax\/kind","abstract":[{"text":"The kind of the syntax node, e.g. if it is a ","type":"text"},{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxKind\/functionDecl","type":"reference","isActive":true},{"text":".","type":"text"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprListSyntax/is(_:)-26xcv":{"type":"topic","title":"is(_:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/is(_:)-26xcv","url":"\/documentation\/macrobuilder\/exprlistsyntax\/is(_:)-26xcv","kind":"symbol","role":"symbol","abstract":[{"text":"Checks if the current syntax node can be cast to a given specialized syntax type.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"`is`"},{"kind":"text","text":"<"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"kind":"text","text":".Type) -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprListSyntax/asProtocol(_:)-9sgma":{"type":"topic","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"type":"text","text":" "},{"code":"ParenthesizedSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/asProtocol(_:)-9sgma","title":"asProtocol(_:)","url":"\/documentation\/macrobuilder\/exprlistsyntax\/asprotocol(_:)-9sgma","role":"symbol","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"text":"((any ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax013ParenthesizedB0P","text":"ParenthesizedSyntax","kind":"typeIdentifier"},{"text":").Type) -> (any ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax013ParenthesizedB0P","text":"ParenthesizedSyntax","kind":"typeIdentifier"},{"kind":"text","text":")?"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprListSyntax/byteSizeAfterTrimmingTrivia":{"type":"topic","deprecated":true,"title":"byteSizeAfterTrimmingTrivia","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"byteSizeAfterTrimmingTrivia","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"}],"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/byteSizeAfterTrimmingTrivia","url":"\/documentation\/macrobuilder\/exprlistsyntax\/bytesizeaftertrimmingtrivia","kind":"symbol","abstract":[{"type":"text","text":"The textual byte length of this node excluding leading and trailing trivia."}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprListSyntax/isProtocol(_:)-6qpp4":{"abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"code":"DeclGroupSyntax","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"role":"symbol","kind":"symbol","url":"\/documentation\/macrobuilder\/exprlistsyntax\/isprotocol(_:)-6qpp4","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"text":"((any ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax09DeclGroupB0P","text":"DeclGroupSyntax","kind":"typeIdentifier"},{"text":").Type) -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/isProtocol(_:)-6qpp4","type":"topic","title":"isProtocol(_:)"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprListSyntax/trimmedDescription":{"kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"trimmedDescription","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"}],"title":"trimmedDescription","role":"symbol","type":"topic","abstract":[{"text":"The description of this node with leading whitespace of the first token","type":"text"},{"type":"text","text":" "},{"text":"and trailing whitespace of the last token removed.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/trimmedDescription","url":"\/documentation\/macrobuilder\/exprlistsyntax\/trimmeddescription"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprListSyntax/nextToken":{"type":"topic","deprecated":true,"abstract":[],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/nextToken","kind":"symbol","url":"\/documentation\/macrobuilder\/exprlistsyntax\/nexttoken","role":"symbol","title":"nextToken","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"nextToken"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax"},{"text":"?","kind":"text"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprListSyntax/lastToken":{"abstract":[],"role":"symbol","url":"\/documentation\/macrobuilder\/exprlistsyntax\/lasttoken","title":"lastToken","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"lastToken","kind":"identifier"},{"text":": ","kind":"text"},{"text":"TokenSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"text":"?","kind":"text"}],"type":"topic","kind":"symbol","deprecated":true,"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/lastToken"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SequenceExprSyntax":{"url":"\/documentation\/macrobuilder\/sequenceexprsyntax","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SequenceExprSyntax","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"SequenceExprSyntax","kind":"identifier"}],"title":"SequenceExprSyntax","abstract":[{"type":"text","text":"A flat list of expressions before operator folding using the "},{"type":"codeVoice","code":"SwiftOperators"},{"type":"text","text":" library."}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SequenceExprSyntax","kind":"identifier"}],"type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprListSyntax/firstToken(viewMode:)":{"title":"firstToken(viewMode:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/firstToken(viewMode:)","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Returns the first token node that is part of this syntax node."}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"firstToken","kind":"identifier"},{"text":"(","kind":"text"},{"text":"viewMode","kind":"externalParam"},{"kind":"text","text":": "},{"text":"SyntaxTreeViewMode","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"url":"\/documentation\/macrobuilder\/exprlistsyntax\/firsttoken(viewmode:)","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprListSyntax/node(at:)":{"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"node","kind":"identifier"},{"kind":"text","text":"("},{"text":"at","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B10IdentifierV","text":"SyntaxIdentifier"},{"text":") -> ","kind":"text"},{"text":"Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"kind":"text","text":"?"}],"title":"node(at:)","role":"symbol","type":"topic","abstract":[{"type":"text","text":"If the node with the given "},{"type":"codeVoice","code":"syntaxIdentifier"},{"text":" is a (recursive) child of this node, return the node with that","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"identifier."}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/node(at:)","url":"\/documentation\/macrobuilder\/exprlistsyntax\/node(at:)"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprListSyntax/parent":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/parent","kind":"symbol","title":"parent","abstract":[{"text":"The parent of this syntax node, or ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":" if this node is the root.","type":"text"}],"url":"\/documentation\/macrobuilder\/exprlistsyntax\/parent","type":"topic","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"parent"},{"kind":"text","text":": "},{"text":"Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"kind":"text","text":"?"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprListSyntax/tokens(viewMode:)":{"kind":"symbol","title":"tokens(viewMode:)","type":"topic","url":"\/documentation\/macrobuilder\/exprlistsyntax\/tokens(viewmode:)","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/tokens(viewMode:)","abstract":[{"text":"Sequence of tokens that are part of this Syntax node.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"tokens"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"viewMode"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SyntaxTreeViewMode","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO"},{"text":") -> ","kind":"text"},{"text":"TokenSequence","preciseIdentifier":"s:11SwiftSyntax13TokenSequenceV","kind":"typeIdentifier"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprListSyntax/detach()":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"detach"},{"text":"() -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"kind":"symbol","url":"\/documentation\/macrobuilder\/exprlistsyntax\/detach()","deprecated":true,"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/detach()","title":"detach()","role":"symbol","abstract":[]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprListSyntax/trimmedByteRange":{"url":"\/documentation\/macrobuilder\/exprlistsyntax\/trimmedbyterange","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/trimmedByteRange","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"trimmedByteRange"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangeV","text":"ByteSourceRange","kind":"typeIdentifier"}],"abstract":[{"text":"The byte source range of this node excluding leading and trailing trivia.","type":"text"}],"role":"symbol","kind":"symbol","title":"trimmedByteRange"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprListSyntax/trimmedDescription(matching:)":{"url":"\/documentation\/macrobuilder\/exprlistsyntax\/trimmeddescription(matching:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/trimmedDescription(matching:)","type":"topic","abstract":[{"type":"text","text":"The description of this node with pieces that match "},{"code":"matching","type":"codeVoice"},{"text":" removed","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"from the leading trivia of the first token and trailing trivia of the"},{"text":" ","type":"text"},{"type":"text","text":"last token."}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"trimmedDescription","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"matching"},{"text":": (","kind":"text"},{"text":"TriviaPiece","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax11TriviaPieceO"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}],"kind":"symbol","title":"trimmedDescription(matching:)","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprListSyntax/map(_:_:)":{"kind":"symbol","title":"map(_:_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"map"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"text":"WritableKeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s15WritableKeyPathC"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":">, ("},{"text":"T","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"text":"Self","kind":"typeIdentifier"}],"abstract":[],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/map(_:_:)","url":"\/documentation\/macrobuilder\/exprlistsyntax\/map(_:_:)","type":"topic","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprListSyntax/hasSequenceExpr":{"role":"symbol","abstract":[{"text":"Whether this tree contains a missing token or unexpected node.","type":"text"}],"url":"\/documentation\/macrobuilder\/exprlistsyntax\/hassequenceexpr","title":"hasSequenceExpr","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/hasSequenceExpr","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"hasSequenceExpr","kind":"identifier"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/ExprListSyntax/lastToken(viewMode:)":{"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"lastToken","kind":"identifier"},{"text":"(","kind":"text"},{"text":"viewMode","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"SyntaxTreeViewMode","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"kind":"symbol","title":"lastToken(viewMode:)","abstract":[{"type":"text","text":"Returns the last token node that is part of this syntax node."}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/ExprListSyntax\/lastToken(viewMode:)","role":"symbol","url":"\/documentation\/macrobuilder\/exprlistsyntax\/lasttoken(viewmode:)"}}}