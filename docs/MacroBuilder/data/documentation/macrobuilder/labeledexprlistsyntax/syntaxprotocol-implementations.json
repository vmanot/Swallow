{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/macrobuilder\/labeledexprlistsyntax\/syntaxprotocol-implementations"]}],"topicSections":[{"generated":true,"title":"Initializers","identifiers":["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/init(_:)-1n8gf","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/init(_:)-9aj9o","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/init(validating:)"],"anchor":"Initializers"},{"generated":true,"title":"Instance Properties","identifiers":["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/byteRange","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/byteSize","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/byteSizeAfterTrimmingTrivia","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/contentLength","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/debugDescription","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/description","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/detached","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/endPosition","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/endPositionBeforeTrailingTrivia","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/firstToken","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/hasError","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/hasMaximumNestingLevelOverflow","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/hasParent","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/hasSequenceExpr","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/hasWarning","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/id","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/index","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/isImplicit","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/keyPathInParent","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/kind","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/lastToken","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/leadingTrivia","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/leadingTriviaLength","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/nextToken","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/parent","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/position","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/positionAfterSkippingLeadingTrivia","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/previousToken","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/root","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/syntaxNodeType","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/syntaxTextBytes","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/totalByteRange","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/totalLength","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/trailingTrivia","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/trailingTriviaLength","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/trimmed","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/trimmedByteRange","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/trimmedDescription","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/trimmedLength"],"anchor":"Instance-Properties"},{"generated":true,"identifiers":["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/allMacroLexicalContexts(enclosingSyntax:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/as(_:)-2yc95","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/as(_:)-7jzci","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/as(_:)-8cqwn","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/asMacroLexicalContext()","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/asProtocol(_:)-158oy","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/asProtocol(_:)-1wrbl","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/asProtocol(_:)-2hpg0","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/asProtocol(_:)-2xl8j","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/asProtocol(_:)-3ycg4","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/asProtocol(_:)-5vxij","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/asProtocol(_:)-71vl3","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/asProtocol(_:)-7fanc","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/asProtocol(_:)-843df","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/asProtocol(_:)-8z8xw","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/asProtocol(_:)-95hit","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/asProtocol(_:)-lvk4","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/asProtocol(_:)-utsm","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/asProtocol(_:)-wr8n","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/cast(_:)-4qom7","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/cast(_:)-5sp8e","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/cast(_:)-8sraq","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/children(viewMode:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/debugDescription(includeTrivia:converter:mark:indentString:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/detach()","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/endLocation(converter:afterTrailingTrivia:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/expand(macroSpecs:contextGenerator:indentationWidth:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/expand(macros:contextGenerator:indentationWidth:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/expand(macros:in:indentationWidth:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/firstToken(viewMode:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/formatted(using:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/is(_:)-670me","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/is(_:)-6mec8","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/is(_:)-7dzxo","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/isProtocol(_:)-1rctq","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/isProtocol(_:)-1rdpm","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/isProtocol(_:)-3kf9u","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/isProtocol(_:)-3w6cr","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/isProtocol(_:)-4l4t","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/isProtocol(_:)-4oq5s","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/isProtocol(_:)-5lix","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/isProtocol(_:)-5xu78","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/isProtocol(_:)-73exq","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/isProtocol(_:)-7nnhq","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/isProtocol(_:)-8ab2m","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/isProtocol(_:)-9iq63","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/isProtocol(_:)-9nkdg","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/isProtocol(_:)-caiv","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/lastToken(viewMode:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/map(_:_:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/modifying(_:_:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/nextToken(viewMode:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/node(at:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/previousToken(viewMode:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/startLocation(converter:afterLeadingTrivia:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/token(at:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/tokens(viewMode:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/trimmed(matching:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/trimmedDescription(matching:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/with(_:_:)","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/write(to:)"],"title":"Instance Methods","anchor":"Instance-Methods"},{"identifiers":["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/structure"],"title":"Type Properties","anchor":"Type-Properties","generated":true}],"kind":"article","metadata":{"title":"SyntaxProtocol Implementations","modules":[{"name":"MacroBuilder"}],"roleHeading":"API Collection","role":"collectionGroup"},"schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax"]]},"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/SyntaxProtocol-Implementations"},"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/LabeledExprListSyntax/previousToken":{"role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"previousToken","kind":"identifier"},{"text":": ","kind":"text"},{"text":"TokenSyntax","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"url":"\/documentation\/macrobuilder\/labeledexprlistsyntax\/previoustoken","title":"previousToken","type":"topic","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/previousToken","deprecated":true,"abstract":[]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/LabeledExprListSyntax/is(_:)-6mec8":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/is(_:)-6mec8","url":"\/documentation\/macrobuilder\/labeledexprlistsyntax\/is(_:)-6mec8","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"`is`","kind":"identifier"},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"type":"topic","deprecated":true,"kind":"symbol","title":"is(_:)","abstract":[{"text":"Checks if the current syntax node can be cast to its own type.","type":"text"}],"role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/LabeledExprListSyntax/keyPathInParent":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/keyPathInParent","abstract":[],"type":"topic","kind":"symbol","title":"keyPathInParent","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"keyPathInParent","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"AnyKeyPath","preciseIdentifier":"s:s10AnyKeyPathC"},{"text":"?","kind":"text"}],"role":"symbol","url":"\/documentation\/macrobuilder\/labeledexprlistsyntax\/keypathinparent"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/LabeledExprListSyntax/nextToken":{"abstract":[],"kind":"symbol","type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/nextToken","role":"symbol","deprecated":true,"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"nextToken"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax"},{"text":"?","kind":"text"}],"title":"nextToken","url":"\/documentation\/macrobuilder\/labeledexprlistsyntax\/nexttoken"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/LabeledExprListSyntax/asProtocol(_:)-843df":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/asProtocol(_:)-843df","url":"\/documentation\/macrobuilder\/labeledexprlistsyntax\/asprotocol(_:)-843df","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"text":"((any ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax06BracedB0P","kind":"typeIdentifier","text":"BracedSyntax"},{"kind":"text","text":").Type) -> (any "},{"text":"BracedSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax06BracedB0P"},{"text":")?","kind":"text"}],"type":"topic","kind":"symbol","title":"asProtocol(_:)","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"BracedSyntax"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/LabeledExprListSyntax/leadingTriviaLength":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/leadingTriviaLength","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"leadingTriviaLength"},{"text":": ","kind":"text"},{"text":"SourceLength","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV"}],"url":"\/documentation\/macrobuilder\/labeledexprlistsyntax\/leadingtrivialength","type":"topic","abstract":[{"text":"The length this node’s leading trivia takes up spelled out in source.","type":"text"}],"title":"leadingTriviaLength","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/LabeledExprListSyntax/cast(_:)-4qom7":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/cast(_:)-4qom7","url":"\/documentation\/macrobuilder\/labeledexprlistsyntax\/cast(_:)-4qom7","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"cast"},{"kind":"text","text":"<"},{"text":"S","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"S","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"text":"S","kind":"typeIdentifier"}],"type":"topic","kind":"symbol","title":"cast(_:)","abstract":[{"text":"Force-casts the current syntax node to a given specialized syntax type.","type":"text"}],"role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/LabeledExprListSyntax/children(viewMode:)":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/children(viewMode:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"children","kind":"identifier"},{"kind":"text","text":"("},{"text":"viewMode","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","text":"SyntaxTreeViewMode"},{"text":") -> ","kind":"text"},{"text":"SyntaxChildren","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ChildrenV"}],"url":"\/documentation\/macrobuilder\/labeledexprlistsyntax\/children(viewmode:)","type":"topic","abstract":[{"text":"A sequence over the children of this node.","type":"text"}],"title":"children(viewMode:)","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/LabeledExprListSyntax/nextToken(viewMode:)":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/nextToken(viewMode:)","url":"\/documentation\/macrobuilder\/labeledexprlistsyntax\/nexttoken(viewmode:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"nextToken","kind":"identifier"},{"kind":"text","text":"("},{"text":"viewMode","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"SyntaxTreeViewMode","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","kind":"typeIdentifier","text":"TokenSyntax"},{"text":"?","kind":"text"}],"type":"topic","kind":"symbol","title":"nextToken(viewMode:)","abstract":[{"text":"Recursively walks through the tree to find the next token semantically","type":"text"},{"type":"text","text":" "},{"type":"text","text":"after this node."}],"role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/LabeledExprListSyntax/isProtocol(_:)-8ab2m":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/isProtocol(_:)-8ab2m","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"((any "},{"text":"WithGenericParametersSyntax","preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P","kind":"typeIdentifier"},{"kind":"text","text":").Type) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"url":"\/documentation\/macrobuilder\/labeledexprlistsyntax\/isprotocol(_:)-8ab2m","type":"topic","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"code":"WithGenericParametersSyntax","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"title":"isProtocol(_:)","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/LabeledExprListSyntax/trimmedLength":{"type":"topic","abstract":[{"text":"The length this node takes up spelled out in the source, excluding its","type":"text"},{"text":" ","type":"text"},{"text":"leading or trailing trivia.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/trimmedLength","role":"symbol","url":"\/documentation\/macrobuilder\/labeledexprlistsyntax\/trimmedlength","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"trimmedLength","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SourceLength","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV"}],"kind":"symbol","title":"trimmedLength"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/LabeledExprListSyntax/debugDescription":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/debugDescription","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"debugDescription","kind":"identifier"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"}],"url":"\/documentation\/macrobuilder\/labeledexprlistsyntax\/debugdescription","type":"topic","abstract":[{"text":"A simple description of this node (ie. its type).","type":"text"}],"title":"debugDescription","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/LabeledExprListSyntax/formatted(using:)":{"kind":"symbol","title":"formatted(using:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"formatted","kind":"identifier"},{"text":"(","kind":"text"},{"text":"using","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:16SwiftBasicFormat0bC0C","kind":"typeIdentifier","text":"BasicFormat"},{"kind":"text","text":") -> "},{"text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier"}],"role":"symbol","url":"\/documentation\/macrobuilder\/labeledexprlistsyntax\/formatted(using:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/formatted(using:)","type":"topic","abstract":[]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/LabeledExprListSyntax/as(_:)-2yc95":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/as(_:)-2yc95","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"`as`","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"text":"?","kind":"text"}],"deprecated":true,"url":"\/documentation\/macrobuilder\/labeledexprlistsyntax\/as(_:)-2yc95","type":"topic","abstract":[{"text":"Attempts to upcast the current syntax node to ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax","type":"reference"},{"text":" node.","type":"text"}],"title":"as(_:)","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/LabeledExprListSyntax/asProtocol(_:)-1wrbl":{"role":"symbol","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"WithGenericParametersSyntax"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/asProtocol(_:)-1wrbl","url":"\/documentation\/macrobuilder\/labeledexprlistsyntax\/asprotocol(_:)-1wrbl","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"text":"((any ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P","text":"WithGenericParametersSyntax","kind":"typeIdentifier"},{"text":").Type) -> (any ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax021WithGenericParametersB0P","text":"WithGenericParametersSyntax"},{"kind":"text","text":")?"}],"type":"topic","title":"asProtocol(_:)","kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/LabeledExprListSyntax/endPosition":{"kind":"symbol","title":"endPosition","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"endPosition","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AbsolutePosition","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV"}],"role":"symbol","url":"\/documentation\/macrobuilder\/labeledexprlistsyntax\/endposition","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/endPosition","type":"topic","abstract":[{"text":"The end position of this node, including its trivia.","type":"text"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/LabeledExprListSyntax/init(validating:)":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/init(validating:)","kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"validating","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"}],"url":"\/documentation\/macrobuilder\/labeledexprlistsyntax\/init(validating:)","type":"topic","abstract":[{"text":"If ","type":"text"},{"code":"node","type":"codeVoice"},{"type":"text","text":" has contains no syntax errors, return "},{"code":"node","type":"codeVoice"},{"text":", otherwise","type":"text"},{"text":" ","type":"text"},{"text":"throw an error with diagnostics describing the syntax errors.","type":"text"}],"title":"init(validating:)","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/LabeledExprListSyntax/init(_:)-1n8gf":{"kind":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"text":"?<","kind":"text"},{"text":"S","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":"?)"}],"role":"symbol","url":"\/documentation\/macrobuilder\/labeledexprlistsyntax\/init(_:)-1n8gf","type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/init(_:)-1n8gf","abstract":[{"text":"Initializes a new instance of the conforming type from a given specialized syntax node.","type":"text"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/LabeledExprListSyntax/is(_:)-670me":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/is(_:)-670me","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"`is`","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"text":".Type) -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"deprecated":true,"url":"\/documentation\/macrobuilder\/labeledexprlistsyntax\/is(_:)-670me","type":"topic","abstract":[{"text":"Checks if the current syntax node can be upcast to ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax","type":"reference"},{"text":" node.","type":"text"}],"title":"is(_:)","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/LabeledExprListSyntax/asProtocol(_:)-158oy":{"kind":"symbol","title":"asProtocol(_:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"asProtocol"},{"text":"((any ","kind":"text"},{"text":"WithModifiersSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013WithModifiersB0P"},{"text":").Type) -> (any ","kind":"text"},{"text":"WithModifiersSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013WithModifiersB0P"},{"kind":"text","text":")?"}],"role":"symbol","url":"\/documentation\/macrobuilder\/labeledexprlistsyntax\/asprotocol(_:)-158oy","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/asProtocol(_:)-158oy","type":"topic","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"text":" ","type":"text"},{"code":"WithModifiersSyntax","type":"codeVoice"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/LabeledExprListSyntax/asProtocol(_:)-71vl3":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/asProtocol(_:)-71vl3","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"text":"((any ","kind":"text"},{"text":"EffectSpecifiersSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax016EffectSpecifiersB0P"},{"kind":"text","text":").Type) -> (any "},{"kind":"typeIdentifier","text":"EffectSpecifiersSyntax","preciseIdentifier":"s:11SwiftSyntax016EffectSpecifiersB0P"},{"text":")?","kind":"text"}],"url":"\/documentation\/macrobuilder\/labeledexprlistsyntax\/asprotocol(_:)-71vl3","type":"topic","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"text":" ","type":"text"},{"code":"EffectSpecifiersSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"title":"asProtocol(_:)","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/LabeledExprListSyntax/isProtocol(_:)-5lix":{"kind":"symbol","title":"isProtocol(_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"((any "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P","text":"WithCodeBlockSyntax"},{"text":").Type) -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"role":"symbol","url":"\/documentation\/macrobuilder\/labeledexprlistsyntax\/isprotocol(_:)-5lix","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/isProtocol(_:)-5lix","type":"topic","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"text":" ","type":"text"},{"code":"WithCodeBlockSyntax","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/LabeledExprListSyntax/index":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/index","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"index"},{"text":": ","kind":"text"},{"text":"SyntaxChildrenIndex","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B13ChildrenIndexV"}],"deprecated":true,"url":"\/documentation\/macrobuilder\/labeledexprlistsyntax\/index","type":"topic","abstract":[{"text":"The index of this node in a ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxChildren"},{"text":" collection.","type":"text"}],"title":"index","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/LabeledExprListSyntax/trimmed":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/trimmed","url":"\/documentation\/macrobuilder\/labeledexprlistsyntax\/trimmed","kind":"symbol","role":"symbol","title":"trimmed","abstract":[{"type":"text","text":"A copy of this node without the leading trivia of the first token in the"},{"type":"text","text":" "},{"type":"text","text":"node and the trailing trivia of the last token in the node."}],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"trimmed"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"}],"type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/LabeledExprListSyntax/node(at:)":{"kind":"symbol","title":"node(at:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"node","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"at"},{"text":": ","kind":"text"},{"text":"SyntaxIdentifier","preciseIdentifier":"s:11SwiftSyntax0B10IdentifierV","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"role":"symbol","url":"\/documentation\/macrobuilder\/labeledexprlistsyntax\/node(at:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/node(at:)","type":"topic","abstract":[{"text":"If the node with the given ","type":"text"},{"type":"codeVoice","code":"syntaxIdentifier"},{"text":" is a (recursive) child of this node, return the node with that","type":"text"},{"type":"text","text":" "},{"type":"text","text":"identifier."}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/LabeledExprListSyntax/as(_:)-7jzci":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/as(_:)-7jzci","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"`as`","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":"?","kind":"text"}],"deprecated":true,"url":"\/documentation\/macrobuilder\/labeledexprlistsyntax\/as(_:)-7jzci","type":"topic","abstract":[{"type":"text","text":"Casts the current syntax node to its own type."}],"title":"as(_:)","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/LabeledExprListSyntax/position":{"role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"position","kind":"identifier"},{"kind":"text","text":": "},{"text":"AbsolutePosition","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","kind":"typeIdentifier"}],"kind":"symbol","abstract":[{"type":"text","text":"The absolute position of the starting point of this node. If the first token"},{"type":"text","text":" "},{"type":"text","text":"is with leading trivia, the position points to the start of the leading"},{"text":" ","type":"text"},{"text":"trivia.","type":"text"}],"type":"topic","url":"\/documentation\/macrobuilder\/labeledexprlistsyntax\/position","title":"position","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/position"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/LabeledExprListSyntax/hasParent":{"url":"\/documentation\/macrobuilder\/labeledexprlistsyntax\/hasparent","abstract":[{"text":"Whether or not this node has a parent.","type":"text"}],"role":"symbol","kind":"symbol","type":"topic","title":"hasParent","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/hasParent","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"hasParent"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/LabeledExprListSyntax/syntaxNodeType":{"role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"syntaxNodeType","kind":"identifier"},{"text":": any ","kind":"text"},{"text":"SyntaxProtocol","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP"},{"kind":"text","text":".Type"}],"kind":"symbol","abstract":[{"text":"The dynamic metatype of the concrete node.","type":"text"}],"type":"topic","url":"\/documentation\/macrobuilder\/labeledexprlistsyntax\/syntaxnodetype","title":"syntaxNodeType","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/syntaxNodeType"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/LabeledExprListSyntax/trimmedByteRange":{"abstract":[{"text":"The byte source range of this node excluding leading and trailing trivia.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/trimmedByteRange","type":"topic","role":"symbol","kind":"symbol","title":"trimmedByteRange","url":"\/documentation\/macrobuilder\/labeledexprlistsyntax\/trimmedbyterange","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"trimmedByteRange"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangeV","text":"ByteSourceRange"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/LabeledExprListSyntax/isProtocol(_:)-4l4t":{"role":"symbol","title":"isProtocol(_:)","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/isProtocol(_:)-4l4t","url":"\/documentation\/macrobuilder\/labeledexprlistsyntax\/isprotocol(_:)-4l4t","type":"topic","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithModifiersSyntax"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"((any "},{"text":"WithModifiersSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013WithModifiersB0P"},{"kind":"text","text":").Type) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SyntaxChildren":{"title":"SyntaxChildren","abstract":[{"text":"Collection that contains the present child ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax","type":"reference"},{"type":"text","text":" nodes of the given node."}],"url":"\/documentation\/macrobuilder\/syntaxchildren","role":"symbol","navigatorTitle":[{"text":"SyntaxChildren","kind":"identifier"}],"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SyntaxChildren","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxChildren"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/LabeledExprListSyntax/with(_:_:)":{"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"with"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"text":"WritableKeyPath","preciseIdentifier":"s:s15WritableKeyPathC","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","text":"T"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Returns a new syntax node that has the child at "},{"type":"codeVoice","code":"keyPath"},{"text":" replaced by","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"value"},{"text":".","type":"text"}],"role":"symbol","title":"with(_:_:)","url":"\/documentation\/macrobuilder\/labeledexprlistsyntax\/with(_:_:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/with(_:_:)","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/LabeledExprListSyntax/cast(_:)-8sraq":{"url":"\/documentation\/macrobuilder\/labeledexprlistsyntax\/cast(_:)-8sraq","abstract":[{"text":"Force-cast the current syntax node to ","type":"text"},{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax","isActive":true,"type":"reference"},{"type":"text","text":" node.."}],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"cast","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"text":".Type) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax"}],"kind":"symbol","type":"topic","deprecated":true,"title":"cast(_:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/cast(_:)-8sraq"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/LabeledExprListSyntax/expand(macros:in:indentationWidth:)":{"role":"symbol","deprecated":true,"abstract":[],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/expand(macros:in:indentationWidth:)","kind":"symbol","title":"expand(macros:in:indentationWidth:)","url":"\/documentation\/macrobuilder\/labeledexprlistsyntax\/expand(macros:in:indentationwidth:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"expand"},{"kind":"text","text":"("},{"kind":"externalParam","text":"macros"},{"text":": [","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":" : any ","kind":"text"},{"kind":"typeIdentifier","text":"Macro","preciseIdentifier":"s:17SwiftSyntaxMacros5MacroP"},{"text":".Type], ","kind":"text"},{"kind":"externalParam","text":"in"},{"text":": some ","kind":"text"},{"preciseIdentifier":"s:17SwiftSyntaxMacros21MacroExpansionContextP","text":"MacroExpansionContext","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"indentationWidth"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Trivia","preciseIdentifier":"s:11SwiftSyntax6TriviaV"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax"}],"type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/LabeledExprListSyntax/positionAfterSkippingLeadingTrivia":{"url":"\/documentation\/macrobuilder\/labeledexprlistsyntax\/positionafterskippingleadingtrivia","type":"topic","role":"symbol","kind":"symbol","title":"positionAfterSkippingLeadingTrivia","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"positionAfterSkippingLeadingTrivia"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV","kind":"typeIdentifier","text":"AbsolutePosition"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/positionAfterSkippingLeadingTrivia","abstract":[{"type":"text","text":"The absolute position of the starting point of this node, skipping any"},{"text":" ","type":"text"},{"text":"leading trivia attached to the first token syntax.","type":"text"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/LabeledExprListSyntax/byteRange":{"url":"\/documentation\/macrobuilder\/labeledexprlistsyntax\/byterange","abstract":[],"role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"byteRange"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangeV","text":"ByteSourceRange"}],"kind":"symbol","type":"topic","deprecated":true,"title":"byteRange","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/byteRange"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/LabeledExprListSyntax/root":{"abstract":[{"type":"text","text":"The root of the tree in which this node resides."}],"url":"\/documentation\/macrobuilder\/labeledexprlistsyntax\/root","type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/root","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"root"},{"text":": ","kind":"text"},{"text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier"}],"title":"root","kind":"symbol","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/LabeledExprListSyntax/trailingTriviaLength":{"url":"\/documentation\/macrobuilder\/labeledexprlistsyntax\/trailingtrivialength","type":"topic","role":"symbol","kind":"symbol","title":"trailingTriviaLength","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"trailingTriviaLength","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax12SourceLengthV","kind":"typeIdentifier","text":"SourceLength"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/trailingTriviaLength","abstract":[{"text":"The length this node’s trailing trivia takes up spelled out in source.","type":"text"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/LabeledExprListSyntax/kind":{"url":"\/documentation\/macrobuilder\/labeledexprlistsyntax\/kind","abstract":[{"text":"The kind of the syntax node, e.g. if it is a ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxKind\/functionDecl","isActive":true},{"text":".","type":"text"}],"role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"kind"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B4KindO","text":"SyntaxKind","kind":"typeIdentifier"}],"kind":"symbol","type":"topic","title":"kind","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/kind"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/LabeledExprListSyntax/description":{"url":"\/documentation\/macrobuilder\/labeledexprlistsyntax\/description","type":"topic","role":"symbol","kind":"symbol","title":"description","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"description"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/description","abstract":[{"type":"text","text":"A source-accurate description of this node."}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/LabeledExprListSyntax/asProtocol(_:)-2xl8j":{"role":"symbol","url":"\/documentation\/macrobuilder\/labeledexprlistsyntax\/asprotocol(_:)-2xl8j","kind":"symbol","type":"topic","title":"asProtocol(_:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/asProtocol(_:)-2xl8j","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"((any "},{"kind":"typeIdentifier","text":"ParenthesizedSyntax","preciseIdentifier":"s:11SwiftSyntax013ParenthesizedB0P"},{"text":").Type) -> (any ","kind":"text"},{"text":"ParenthesizedSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013ParenthesizedB0P"},{"kind":"text","text":")?"}],"abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"code":"ParenthesizedSyntax","type":"codeVoice"},{"text":". Otherwise return ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/LabeledExprListSyntax/init(_:)-9aj9o":{"url":"\/documentation\/macrobuilder\/labeledexprlistsyntax\/init(_:)-9aj9o","abstract":[{"type":"text","text":"Converts the given specialized node to this type. Returns "},{"code":"nil","type":"codeVoice"},{"text":" if the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"conversion is not possible."}],"role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Children"},{"text":">(","kind":"text"},{"text":"Children","kind":"typeIdentifier"},{"kind":"text","text":")"}],"kind":"symbol","type":"topic","title":"init(_:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/init(_:)-9aj9o"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/LabeledExprListSyntax/parent":{"url":"\/documentation\/macrobuilder\/labeledexprlistsyntax\/parent","type":"topic","role":"symbol","kind":"symbol","title":"parent","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"parent","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/parent","abstract":[{"text":"The parent of this syntax node, or ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":" if this node is the root.","type":"text"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/LabeledExprListSyntax/asProtocol(_:)-5vxij":{"url":"\/documentation\/macrobuilder\/labeledexprlistsyntax\/asprotocol(_:)-5vxij","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"text":" ","type":"text"},{"code":"WithCodeBlockSyntax","type":"codeVoice"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"((any "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P","text":"WithCodeBlockSyntax"},{"text":").Type) -> (any ","kind":"text"},{"text":"WithCodeBlockSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax013WithCodeBlockB0P"},{"text":")?","kind":"text"}],"kind":"symbol","type":"topic","title":"asProtocol(_:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/asProtocol(_:)-5vxij"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/LabeledExprListSyntax/isProtocol(_:)-7nnhq":{"url":"\/documentation\/macrobuilder\/labeledexprlistsyntax\/isprotocol(_:)-7nnhq","type":"topic","role":"symbol","kind":"symbol","title":"isProtocol(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"isProtocol"},{"text":"((any ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax014WithStatementsB0P","kind":"typeIdentifier","text":"WithStatementsSyntax"},{"kind":"text","text":").Type) -> "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/isProtocol(_:)-7nnhq","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"code":"WithStatementsSyntax","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/LabeledExprListSyntax/sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)":{"url":"\/documentation\/macrobuilder\/labeledexprlistsyntax\/sourcerange(converter:afterleadingtrivia:aftertrailingtrivia:)","abstract":[{"type":"text","text":"The source range, in the provided file, of this Syntax node."}],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"sourceRange","kind":"identifier"},{"text":"(","kind":"text"},{"text":"converter","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC","text":"SourceLocationConverter"},{"kind":"text","text":", "},{"text":"afterLeadingTrivia","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":", "},{"kind":"externalParam","text":"afterTrailingTrivia"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:11SwiftSyntax11SourceRangeV","text":"SourceRange","kind":"typeIdentifier"}],"kind":"symbol","type":"topic","title":"sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/sourceRange(converter:afterLeadingTrivia:afterTrailingTrivia:)"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/LabeledExprListSyntax/lastToken":{"url":"\/documentation\/macrobuilder\/labeledexprlistsyntax\/lasttoken","type":"topic","role":"symbol","kind":"symbol","title":"lastToken","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"lastToken","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","kind":"typeIdentifier","text":"TokenSyntax"},{"kind":"text","text":"?"}],"deprecated":true,"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/lastToken","abstract":[]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/LabeledExprListSyntax/asProtocol(_:)-wr8n":{"url":"\/documentation\/macrobuilder\/labeledexprlistsyntax\/asprotocol(_:)-wr8n","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"text":" ","type":"text"},{"code":"WithAttributesSyntax","type":"codeVoice"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"asProtocol"},{"text":"((any ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax014WithAttributesB0P","text":"WithAttributesSyntax","kind":"typeIdentifier"},{"text":").Type) -> (any ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax014WithAttributesB0P","text":"WithAttributesSyntax","kind":"typeIdentifier"},{"kind":"text","text":")?"}],"kind":"symbol","type":"topic","title":"asProtocol(_:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/asProtocol(_:)-wr8n"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/LabeledExprListSyntax/isProtocol(_:)-1rctq":{"url":"\/documentation\/macrobuilder\/labeledexprlistsyntax\/isprotocol(_:)-1rctq","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"NamedDeclSyntax"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"role":"symbol","type":"topic","kind":"symbol","title":"isProtocol(_:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/isProtocol(_:)-1rctq","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"kind":"text","text":"((any "},{"preciseIdentifier":"s:11SwiftSyntax09NamedDeclB0P","text":"NamedDeclSyntax","kind":"typeIdentifier"},{"kind":"text","text":").Type) -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/LabeledExprListSyntax/isProtocol(_:)-3w6cr":{"abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"MissingNodeSyntax"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"url":"\/documentation\/macrobuilder\/labeledexprlistsyntax\/isprotocol(_:)-3w6cr","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"text":"((any ","kind":"text"},{"text":"MissingNodeSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax011MissingNodeB0P"},{"text":").Type) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"kind":"symbol","type":"topic","title":"isProtocol(_:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/isProtocol(_:)-3w6cr"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/LabeledExprListSyntax/isProtocol(_:)-9nkdg":{"url":"\/documentation\/macrobuilder\/labeledexprlistsyntax\/isprotocol(_:)-9nkdg","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"ParenthesizedSyntax"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"role":"symbol","type":"topic","kind":"symbol","title":"isProtocol(_:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/isProtocol(_:)-9nkdg","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"kind":"text","text":"((any "},{"preciseIdentifier":"s:11SwiftSyntax013ParenthesizedB0P","text":"ParenthesizedSyntax","kind":"typeIdentifier"},{"kind":"text","text":").Type) -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/LabeledExprListSyntax/totalLength":{"abstract":[{"text":"The length of this node including all of its trivia.","type":"text"}],"url":"\/documentation\/macrobuilder\/labeledexprlistsyntax\/totallength","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"totalLength"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax12SourceLengthV","text":"SourceLength","kind":"typeIdentifier"}],"kind":"symbol","type":"topic","title":"totalLength","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/totalLength"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/LabeledExprListSyntax/syntaxTextBytes":{"url":"\/documentation\/macrobuilder\/labeledexprlistsyntax\/syntaxtextbytes","abstract":[{"type":"text","text":"Retrieve the syntax text as an array of bytes that models the input"},{"type":"text","text":" "},{"text":"source even in the presence of invalid UTF-8.","type":"text"}],"role":"symbol","type":"topic","kind":"symbol","title":"syntaxTextBytes","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/syntaxTextBytes","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"syntaxTextBytes","kind":"identifier"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","preciseIdentifier":"s:s5UInt8V","text":"UInt8"},{"text":"]","kind":"text"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/LabeledExprListSyntax/asProtocol(_:)-2hpg0":{"abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"code":"WithStatementsSyntax","type":"codeVoice"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"url":"\/documentation\/macrobuilder\/labeledexprlistsyntax\/asprotocol(_:)-2hpg0","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asProtocol","kind":"identifier"},{"text":"((any ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax014WithStatementsB0P","text":"WithStatementsSyntax"},{"text":").Type) -> (any ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax014WithStatementsB0P","kind":"typeIdentifier","text":"WithStatementsSyntax"},{"kind":"text","text":")?"}],"kind":"symbol","type":"topic","title":"asProtocol(_:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/asProtocol(_:)-2hpg0"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/LabeledExprListSyntax/is(_:)-7dzxo":{"kind":"symbol","type":"topic","url":"\/documentation\/macrobuilder\/labeledexprlistsyntax\/is(_:)-7dzxo","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"`is`","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"text":"S","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"role":"symbol","title":"is(_:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/is(_:)-7dzxo","abstract":[{"text":"Checks if the current syntax node can be cast to a given specialized syntax type.","type":"text"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/LabeledExprListSyntax/startLocation(converter:afterLeadingTrivia:)":{"type":"topic","abstract":[{"type":"text","text":"The starting location, in the provided file, of this Syntax node."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"startLocation","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"converter"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"SourceLocationConverter","preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC"},{"kind":"text","text":", "},{"text":"afterLeadingTrivia","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:11SwiftSyntax14SourceLocationV","text":"SourceLocation","kind":"typeIdentifier"}],"role":"symbol","url":"\/documentation\/macrobuilder\/labeledexprlistsyntax\/startlocation(converter:afterleadingtrivia:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/startLocation(converter:afterLeadingTrivia:)","title":"startLocation(converter:afterLeadingTrivia:)"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/LabeledExprListSyntax/trimmedDescription(matching:)":{"url":"\/documentation\/macrobuilder\/labeledexprlistsyntax\/trimmeddescription(matching:)","abstract":[{"text":"The description of this node with pieces that match ","type":"text"},{"code":"matching","type":"codeVoice"},{"text":" removed","type":"text"},{"type":"text","text":" "},{"text":"from the leading trivia of the first token and trailing trivia of the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"last token."}],"role":"symbol","type":"topic","kind":"symbol","title":"trimmedDescription(matching:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/trimmedDescription(matching:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"trimmedDescription"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"matching"},{"text":": (","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax11TriviaPieceO","kind":"typeIdentifier","text":"TriviaPiece"},{"kind":"text","text":") -> "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/LabeledExprListSyntax/endPositionBeforeTrailingTrivia":{"abstract":[{"type":"text","text":"The end position of this node’s content, before any trailing trivia."}],"url":"\/documentation\/macrobuilder\/labeledexprlistsyntax\/endpositionbeforetrailingtrivia","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"endPositionBeforeTrailingTrivia"},{"kind":"text","text":": "},{"text":"AbsolutePosition","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV"}],"kind":"symbol","type":"topic","title":"endPositionBeforeTrailingTrivia","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/endPositionBeforeTrailingTrivia"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/LabeledExprListSyntax/hasWarning":{"url":"\/documentation\/macrobuilder\/labeledexprlistsyntax\/haswarning","abstract":[{"text":"Whether the tree contained by this layout has any tokens with a","type":"text"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TokenDiagnostic","isActive":true},{"text":" of severity ","type":"text"},{"code":"warning","type":"codeVoice"},{"type":"text","text":"."}],"role":"symbol","type":"topic","kind":"symbol","title":"hasWarning","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/hasWarning","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"hasWarning"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/LabeledExprListSyntax/detached":{"abstract":[{"type":"text","text":"Return this subtree with this node as the root, ie. detach this node"},{"type":"text","text":" "},{"text":"from its parent.","type":"text"}],"url":"\/documentation\/macrobuilder\/labeledexprlistsyntax\/detached","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"detached","kind":"identifier"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"}],"kind":"symbol","type":"topic","title":"detached","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/detached"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/LabeledExprListSyntax/byteSizeAfterTrimmingTrivia":{"url":"\/documentation\/macrobuilder\/labeledexprlistsyntax\/bytesizeaftertrimmingtrivia","abstract":[{"text":"The textual byte length of this node excluding leading and trailing trivia.","type":"text"}],"role":"symbol","type":"topic","kind":"symbol","title":"byteSizeAfterTrimmingTrivia","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/byteSizeAfterTrimmingTrivia","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"byteSizeAfterTrimmingTrivia"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"}],"deprecated":true},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/LabeledExprListSyntax/asProtocol(_:)-7fanc":{"abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"MissingNodeSyntax"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"url":"\/documentation\/macrobuilder\/labeledexprlistsyntax\/asprotocol(_:)-7fanc","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"text":"((any ","kind":"text"},{"text":"MissingNodeSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax011MissingNodeB0P"},{"text":").Type) -> (any ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax011MissingNodeB0P","text":"MissingNodeSyntax"},{"text":")?","kind":"text"}],"kind":"symbol","type":"topic","title":"asProtocol(_:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/asProtocol(_:)-7fanc"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/TokenDiagnostic":{"type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"TokenDiagnostic"}],"role":"symbol","abstract":[{"text":"If the token has an error that’s inherent to the token itself and not its","type":"text"},{"text":" ","type":"text"},{"text":"surrounding structure, this defines the type of the error.","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"byteOffset"},{"type":"text","text":" specifies at which offset the error occurred."}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/TokenDiagnostic","title":"TokenDiagnostic","url":"\/documentation\/macrobuilder\/tokendiagnostic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"TokenDiagnostic","kind":"identifier"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/LabeledExprListSyntax/isProtocol(_:)-4oq5s":{"url":"\/documentation\/macrobuilder\/labeledexprlistsyntax\/isprotocol(_:)-4oq5s","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"code":"EffectSpecifiersSyntax","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"role":"symbol","type":"topic","kind":"symbol","title":"isProtocol(_:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/isProtocol(_:)-4oq5s","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"((any "},{"text":"EffectSpecifiersSyntax","preciseIdentifier":"s:11SwiftSyntax016EffectSpecifiersB0P","kind":"typeIdentifier"},{"kind":"text","text":").Type) -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/LabeledExprListSyntax/lastToken(viewMode:)":{"abstract":[{"type":"text","text":"Returns the last token node that is part of this syntax node."}],"url":"\/documentation\/macrobuilder\/labeledexprlistsyntax\/lasttoken(viewmode:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"lastToken"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"viewMode"},{"kind":"text","text":": "},{"text":"SyntaxTreeViewMode","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO"},{"text":") -> ","kind":"text"},{"text":"TokenSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"text":"?","kind":"text"}],"kind":"symbol","type":"topic","title":"lastToken(viewMode:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/lastToken(viewMode:)"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/LabeledExprListSyntax/expand(macros:contextGenerator:indentationWidth:)":{"url":"\/documentation\/macrobuilder\/labeledexprlistsyntax\/expand(macros:contextgenerator:indentationwidth:)","abstract":[],"role":"symbol","type":"topic","kind":"symbol","title":"expand(macros:contextGenerator:indentationWidth:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/expand(macros:contextGenerator:indentationWidth:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"expand","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Context"},{"kind":"text","text":">("},{"text":"macros","kind":"externalParam"},{"kind":"text","text":": ["},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"kind":"text","text":" : any "},{"preciseIdentifier":"s:17SwiftSyntaxMacros5MacroP","text":"Macro","kind":"typeIdentifier"},{"kind":"text","text":".Type], "},{"text":"contextGenerator","kind":"externalParam"},{"kind":"text","text":": ("},{"preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Context"},{"kind":"text","text":", "},{"text":"indentationWidth","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax6TriviaV","text":"Trivia"},{"text":"?) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/LabeledExprListSyntax/trimmedDescription":{"abstract":[{"text":"The description of this node with leading whitespace of the first token","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and trailing whitespace of the last token removed."}],"url":"\/documentation\/macrobuilder\/labeledexprlistsyntax\/trimmeddescription","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"trimmedDescription","kind":"identifier"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}],"kind":"symbol","type":"topic","title":"trimmedDescription","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/trimmedDescription"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/LabeledExprListSyntax/firstToken":{"url":"\/documentation\/macrobuilder\/labeledexprlistsyntax\/firsttoken","abstract":[],"role":"symbol","type":"topic","kind":"symbol","title":"firstToken","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/firstToken","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"firstToken","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V","text":"TokenSyntax"},{"kind":"text","text":"?"}],"deprecated":true},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/LabeledExprListSyntax/contentLength":{"abstract":[],"url":"\/documentation\/macrobuilder\/labeledexprlistsyntax\/contentlength","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"contentLength","kind":"identifier"},{"text":": ","kind":"text"},{"text":"SourceLength","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax12SourceLengthV"}],"kind":"symbol","type":"topic","deprecated":true,"title":"contentLength","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/contentLength"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/LabeledExprListSyntax/byteSize":{"url":"\/documentation\/macrobuilder\/labeledexprlistsyntax\/bytesize","abstract":[{"type":"text","text":"The textual byte length of this node including leading and trailing trivia."}],"role":"symbol","type":"topic","kind":"symbol","title":"byteSize","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/byteSize","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"byteSize"},{"kind":"text","text":": "},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"}],"deprecated":true},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/LabeledExprListSyntax/asProtocol(_:)-lvk4":{"abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithTrailingCommaSyntax"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"url":"\/documentation\/macrobuilder\/labeledexprlistsyntax\/asprotocol(_:)-lvk4","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"asProtocol"},{"text":"((any ","kind":"text"},{"text":"WithTrailingCommaSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax017WithTrailingCommaB0P"},{"kind":"text","text":").Type) -> (any "},{"kind":"typeIdentifier","text":"WithTrailingCommaSyntax","preciseIdentifier":"s:11SwiftSyntax017WithTrailingCommaB0P"},{"kind":"text","text":")?"}],"kind":"symbol","type":"topic","title":"asProtocol(_:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/asProtocol(_:)-lvk4"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/LabeledExprListSyntax/write(to:)":{"url":"\/documentation\/macrobuilder\/labeledexprlistsyntax\/write(to:)","abstract":[{"type":"text","text":"Prints the raw value of this node to the provided stream."}],"role":"symbol","type":"topic","kind":"symbol","title":"write(to:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/write(to:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"write","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Target"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"to"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Target","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/LabeledExprListSyntax/map(_:_:)":{"title":"map(_:_:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/map(_:_:)","role":"symbol","kind":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"map"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"preciseIdentifier":"s:s15WritableKeyPathC","kind":"typeIdentifier","text":"WritableKeyPath"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"T","kind":"typeIdentifier"},{"text":">, (","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Self","kind":"typeIdentifier"}],"url":"\/documentation\/macrobuilder\/labeledexprlistsyntax\/map(_:_:)","abstract":[]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/LabeledExprListSyntax/trimmed(matching:)":{"kind":"symbol","type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"trimmed"},{"kind":"text","text":"("},{"kind":"externalParam","text":"matching"},{"kind":"text","text":": ("},{"preciseIdentifier":"s:11SwiftSyntax11TriviaPieceO","kind":"typeIdentifier","text":"TriviaPiece"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"abstract":[{"text":"A copy of this node with pieces that match ","type":"text"},{"type":"codeVoice","code":"matching"},{"type":"text","text":" trimmed from the"},{"type":"text","text":" "},{"type":"text","text":"leading trivia of the first token and trailing trivia of the last token."}],"title":"trimmed(matching:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/trimmed(matching:)","url":"\/documentation\/macrobuilder\/labeledexprlistsyntax\/trimmed(matching:)"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/Syntax":{"abstract":[{"type":"text","text":"A Syntax node represents a tree of nodes with tokens at the leaves."},{"text":" ","type":"text"},{"type":"text","text":"Each node has accessors for its known children, and allows efficient"},{"text":" ","type":"text"},{"text":"iteration over the children through its ","type":"text"},{"type":"codeVoice","code":"children"},{"text":" property.","type":"text"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Syntax"}],"url":"\/documentation\/macrobuilder\/syntax","title":"Syntax","type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/Syntax","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Syntax","kind":"identifier"}],"kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/LabeledExprListSyntax/isProtocol(_:)-9iq63":{"abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"type":"text","text":" "},{"code":"BracedSyntax","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"url":"\/documentation\/macrobuilder\/labeledexprlistsyntax\/isprotocol(_:)-9iq63","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"((any "},{"text":"BracedSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax06BracedB0P"},{"kind":"text","text":").Type) -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"kind":"symbol","type":"topic","title":"isProtocol(_:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/isProtocol(_:)-9iq63"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/LabeledExprListSyntax/isProtocol(_:)-5xu78":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/isProtocol(_:)-5xu78","abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"WithAttributesSyntax"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"url":"\/documentation\/macrobuilder\/labeledexprlistsyntax\/isprotocol(_:)-5xu78","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"text":"((any ","kind":"text"},{"text":"WithAttributesSyntax","preciseIdentifier":"s:11SwiftSyntax014WithAttributesB0P","kind":"typeIdentifier"},{"text":").Type) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"role":"symbol","title":"isProtocol(_:)","kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/LabeledExprListSyntax/asProtocol(_:)-utsm":{"url":"\/documentation\/macrobuilder\/labeledexprlistsyntax\/asprotocol(_:)-utsm","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"code":"WithOptionalCodeBlockSyntax","type":"codeVoice"},{"text":". Otherwise return ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"role":"symbol","type":"topic","kind":"symbol","title":"asProtocol(_:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/asProtocol(_:)-utsm","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"kind":"text","text":"((any "},{"text":"WithOptionalCodeBlockSyntax","preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P","kind":"typeIdentifier"},{"kind":"text","text":").Type) -> (any "},{"preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P","text":"WithOptionalCodeBlockSyntax","kind":"typeIdentifier"},{"kind":"text","text":")?"}]},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/LabeledExprListSyntax/asProtocol(_:)-95hit":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/asProtocol(_:)-95hit","type":"topic","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"FreestandingMacroExpansionSyntax"},{"type":"text","text":". Otherwise return "},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"title":"asProtocol(_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asProtocol"},{"kind":"text","text":"((any "},{"kind":"typeIdentifier","text":"FreestandingMacroExpansionSyntax","preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P"},{"text":").Type) -> (any ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P","text":"FreestandingMacroExpansionSyntax","kind":"typeIdentifier"},{"kind":"text","text":")?"}],"url":"\/documentation\/macrobuilder\/labeledexprlistsyntax\/asprotocol(_:)-95hit","role":"symbol","kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/LabeledExprListSyntax/as(_:)-8cqwn":{"kind":"symbol","abstract":[{"type":"text","text":"Attempts to cast the current syntax node to a given specialized syntax type."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"`as`"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"S"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"S"},{"text":".Type) -> ","kind":"text"},{"kind":"typeIdentifier","text":"S"},{"text":"?","kind":"text"}],"url":"\/documentation\/macrobuilder\/labeledexprlistsyntax\/as(_:)-8cqwn","role":"symbol","type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/as(_:)-8cqwn","title":"as(_:)"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/LabeledExprListSyntax/asMacroLexicalContext()":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asMacroLexicalContext"},{"text":"() -> ","kind":"text"},{"text":"Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"kind":"text","text":"?"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/asMacroLexicalContext()","abstract":[{"type":"text","text":"If this syntax node acts as a lexical context from the perspective"},{"text":" ","type":"text"},{"text":"of a macro, return a new syntax node based on this node that strips all","type":"text"},{"type":"text","text":" "},{"type":"text","text":"information that isn’t supposed to be exposed as a lexical context, such"},{"text":" ","type":"text"},{"type":"text","text":"as function bodies or the members of types\/extensions."}],"type":"topic","url":"\/documentation\/macrobuilder\/labeledexprlistsyntax\/asmacrolexicalcontext()","role":"symbol","title":"asMacroLexicalContext()","kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/LabeledExprListSyntax/leadingTrivia":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/leadingTrivia","type":"topic","abstract":[{"type":"text","text":"The leading trivia of this syntax node."}],"title":"leadingTrivia","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"leadingTrivia"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax6TriviaV","text":"Trivia"}],"url":"\/documentation\/macrobuilder\/labeledexprlistsyntax\/leadingtrivia","role":"symbol","kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/LabeledExprListSyntax/id":{"kind":"symbol","abstract":[{"type":"text","text":"Returns a value representing the unique identity of the node."}],"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"id","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax0B10IdentifierV","text":"SyntaxIdentifier","kind":"typeIdentifier"}],"url":"\/documentation\/macrobuilder\/labeledexprlistsyntax\/id","role":"symbol","type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/id","title":"id"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/LabeledExprListSyntax/firstToken(viewMode:)":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/firstToken(viewMode:)","type":"topic","abstract":[{"type":"text","text":"Returns the first token node that is part of this syntax node."}],"title":"firstToken(viewMode:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"firstToken"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"viewMode"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","text":"SyntaxTreeViewMode"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax05TokenB0V","kind":"typeIdentifier","text":"TokenSyntax"},{"text":"?","kind":"text"}],"url":"\/documentation\/macrobuilder\/labeledexprlistsyntax\/firsttoken(viewmode:)","role":"symbol","kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/LabeledExprListSyntax/tokens(viewMode:)":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/tokens(viewMode:)","type":"topic","abstract":[{"text":"Sequence of tokens that are part of this Syntax node.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"tokens"},{"text":"(","kind":"text"},{"text":"viewMode","kind":"externalParam"},{"kind":"text","text":": "},{"text":"SyntaxTreeViewMode","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"TokenSequence","preciseIdentifier":"s:11SwiftSyntax13TokenSequenceV"}],"title":"tokens(viewMode:)","url":"\/documentation\/macrobuilder\/labeledexprlistsyntax\/tokens(viewmode:)"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/LabeledExprListSyntax/previousToken(viewMode:)":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/previousToken(viewMode:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"previousToken"},{"kind":"text","text":"("},{"text":"viewMode","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"SyntaxTreeViewMode","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO"},{"text":") -> ","kind":"text"},{"text":"TokenSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"kind":"text","text":"?"}],"url":"\/documentation\/macrobuilder\/labeledexprlistsyntax\/previoustoken(viewmode:)","kind":"symbol","role":"symbol","title":"previousToken(viewMode:)","abstract":[{"text":"Recursively walks through the tree to find the token semantically before","type":"text"},{"text":" ","type":"text"},{"text":"this node.","type":"text"}],"type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/LabeledExprListSyntax/isProtocol(_:)-3kf9u":{"type":"topic","kind":"symbol","title":"isProtocol(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"kind":"text","text":"((any "},{"preciseIdentifier":"s:11SwiftSyntax09DeclGroupB0P","kind":"typeIdentifier","text":"DeclGroupSyntax"},{"text":").Type) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"text":" ","type":"text"},{"code":"DeclGroupSyntax","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"Note that this will incur an existential conversion.","type":"text"}],"url":"\/documentation\/macrobuilder\/labeledexprlistsyntax\/isprotocol(_:)-3kf9u","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/isProtocol(_:)-3kf9u"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/LabeledExprListSyntax/totalByteRange":{"kind":"symbol","type":"topic","title":"totalByteRange","url":"\/documentation\/macrobuilder\/labeledexprlistsyntax\/totalbyterange","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"totalByteRange"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax15ByteSourceRangeV","kind":"typeIdentifier","text":"ByteSourceRange"}],"role":"symbol","abstract":[{"type":"text","text":"The byte source range of this node including leading and trailing trivia."}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/totalByteRange"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/LabeledExprListSyntax/cast(_:)-5sp8e":{"type":"topic","deprecated":true,"kind":"symbol","title":"cast(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"cast"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".Type) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Force-casts the current syntax node to its own type."}],"url":"\/documentation\/macrobuilder\/labeledexprlistsyntax\/cast(_:)-5sp8e","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/cast(_:)-5sp8e"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/LabeledExprListSyntax/trailingTrivia":{"kind":"symbol","type":"topic","title":"trailingTrivia","url":"\/documentation\/macrobuilder\/labeledexprlistsyntax\/trailingtrivia","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"trailingTrivia","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Trivia","preciseIdentifier":"s:11SwiftSyntax6TriviaV","kind":"typeIdentifier"}],"role":"symbol","abstract":[{"text":"The trailing trivia of this syntax node.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/trailingTrivia"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/LabeledExprListSyntax/isProtocol(_:)-caiv":{"title":"isProtocol(_:)","kind":"symbol","url":"\/documentation\/macrobuilder\/labeledexprlistsyntax\/isprotocol(_:)-caiv","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"isProtocol"},{"kind":"text","text":"((any "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax021WithOptionalCodeBlockB0P","text":"WithOptionalCodeBlockSyntax"},{"kind":"text","text":").Type) -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"role":"symbol","type":"topic","abstract":[{"type":"text","text":"Check whether the non-type erased version of this syntax node conforms to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"WithOptionalCodeBlockSyntax"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Note that this will incur an existential conversion."}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/isProtocol(_:)-caiv"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/LabeledExprListSyntax/modifying(_:_:)":{"type":"topic","kind":"symbol","title":"modifying(_:_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"modifying"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s15WritableKeyPathC","text":"WritableKeyPath"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":">, ("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"text":"T","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") "},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"abstract":[],"url":"\/documentation\/macrobuilder\/labeledexprlistsyntax\/modifying(_:_:)","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/modifying(_:_:)"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/LabeledExprListSyntax/expand(macroSpecs:contextGenerator:indentationWidth:)":{"kind":"symbol","type":"topic","title":"expand(macroSpecs:contextGenerator:indentationWidth:)","url":"\/documentation\/macrobuilder\/labeledexprlistsyntax\/expand(macrospecs:contextgenerator:indentationwidth:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"expand","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Context","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"macroSpecs","kind":"externalParam"},{"text":": [","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:25SwiftSyntaxMacroExpansion0C4SpecV","text":"MacroSpec"},{"kind":"text","text":"], "},{"text":"contextGenerator","kind":"externalParam"},{"text":": (","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Context","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"indentationWidth"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax6TriviaV","kind":"typeIdentifier","text":"Trivia"},{"kind":"text","text":"?) -> "},{"preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier","text":"Syntax"}],"role":"symbol","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/expand(macroSpecs:contextGenerator:indentationWidth:)"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/LabeledExprListSyntax/isImplicit":{"type":"topic","deprecated":true,"kind":"symbol","title":"isImplicit","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"isImplicit"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"When isImplicit is true, the syntax node doesn’t include any"},{"type":"text","text":" "},{"type":"text","text":"underlying tokens, e.g. an empty CodeBlockItemList."}],"url":"\/documentation\/macrobuilder\/labeledexprlistsyntax\/isimplicit","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/isImplicit"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/LabeledExprListSyntax/endLocation(converter:afterTrailingTrivia:)":{"abstract":[{"type":"text","text":"The ending location, in the provided file, of this Syntax node."}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/endLocation(converter:afterTrailingTrivia:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"endLocation","kind":"identifier"},{"text":"(","kind":"text"},{"text":"converter","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"SourceLocationConverter","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"afterTrailingTrivia"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax14SourceLocationV","text":"SourceLocation"}],"role":"symbol","kind":"symbol","title":"endLocation(converter:afterTrailingTrivia:)","url":"\/documentation\/macrobuilder\/labeledexprlistsyntax\/endlocation(converter:aftertrailingtrivia:)"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/LabeledExprListSyntax/debugDescription(includeTrivia:converter:mark:indentString:)":{"kind":"symbol","type":"topic","title":"debugDescription(includeTrivia:converter:mark:indentString:)","url":"\/documentation\/macrobuilder\/labeledexprlistsyntax\/debugdescription(includetrivia:converter:mark:indentstring:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"debugDescription","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"includeTrivia"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"text":", ","kind":"text"},{"text":"converter","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax23SourceLocationConverterC","text":"SourceLocationConverter"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"mark"},{"text":": (any ","kind":"text"},{"text":"SyntaxProtocol","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP"},{"text":")?, ","kind":"text"},{"text":"indentString","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"text":") -> ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}],"role":"symbol","abstract":[{"type":"text","text":"Returns a summarized dump of this node."}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/debugDescription(includeTrivia:converter:mark:indentString:)"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/LabeledExprListSyntax/isProtocol(_:)-73exq":{"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/isProtocol(_:)-73exq","title":"isProtocol(_:)","role":"symbol","url":"\/documentation\/macrobuilder\/labeledexprlistsyntax\/isprotocol(_:)-73exq","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isProtocol","kind":"identifier"},{"text":"((any ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax026FreestandingMacroExpansionB0P","text":"FreestandingMacroExpansionSyntax"},{"kind":"text","text":").Type) -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"FreestandingMacroExpansionSyntax"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"type":"topic","kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/LabeledExprListSyntax/token(at:)":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"token"},{"text":"(","kind":"text"},{"text":"at","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"AbsolutePosition","preciseIdentifier":"s:11SwiftSyntax16AbsolutePositionV"},{"kind":"text","text":") -> "},{"text":"TokenSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax05TokenB0V"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/token(at:)","title":"token(at:)","kind":"symbol","type":"topic","abstract":[{"text":"Find the syntax token at the given absolute position within this","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"syntax node or any of its children."}],"url":"\/documentation\/macrobuilder\/labeledexprlistsyntax\/token(at:)"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/LabeledExprListSyntax/hasMaximumNestingLevelOverflow":{"type":"topic","kind":"symbol","title":"hasMaximumNestingLevelOverflow","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"hasMaximumNestingLevelOverflow","kind":"identifier"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"abstract":[],"url":"\/documentation\/macrobuilder\/labeledexprlistsyntax\/hasmaximumnestingleveloverflow","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/hasMaximumNestingLevelOverflow"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/LabeledExprListSyntax/allMacroLexicalContexts(enclosingSyntax:)":{"kind":"symbol","type":"topic","title":"allMacroLexicalContexts(enclosingSyntax:)","url":"\/documentation\/macrobuilder\/labeledexprlistsyntax\/allmacrolexicalcontexts(enclosingsyntax:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"allMacroLexicalContexts"},{"kind":"text","text":"("},{"kind":"externalParam","text":"enclosingSyntax"},{"text":": (","kind":"text"},{"text":"Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"kind":"text","text":"?) -> ["},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax"},{"text":"]","kind":"text"}],"role":"symbol","abstract":[{"type":"text","text":"Return an array of enclosing lexical contexts for the purpose of macros,"},{"type":"text","text":" "},{"type":"text","text":"from the innermost enclosing lexical context (first in the array) to the"},{"type":"text","text":" "},{"type":"text","text":"outermost. If this syntax node itself is a lexical context, it will be"},{"text":" ","type":"text"},{"text":"the innermost lexical context.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/allMacroLexicalContexts(enclosingSyntax:)"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/LabeledExprListSyntax/isProtocol(_:)-1rdpm":{"type":"topic","kind":"symbol","title":"isProtocol(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isProtocol"},{"kind":"text","text":"((any "},{"kind":"typeIdentifier","text":"WithTrailingCommaSyntax","preciseIdentifier":"s:11SwiftSyntax017WithTrailingCommaB0P"},{"text":").Type) -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"abstract":[{"text":"Check whether the non-type erased version of this syntax node conforms to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"WithTrailingCommaSyntax"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"url":"\/documentation\/macrobuilder\/labeledexprlistsyntax\/isprotocol(_:)-1rdpm","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/isProtocol(_:)-1rdpm"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SyntaxKind/functionDecl":{"url":"\/documentation\/macrobuilder\/syntaxkind\/functiondecl","fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"kind":"identifier","text":"functionDecl"}],"title":"SyntaxKind.functionDecl","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxKind\/functionDecl","role":"symbol","type":"topic","kind":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/LabeledExprListSyntax":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"LabeledExprListSyntax"}],"navigatorTitle":[{"text":"LabeledExprListSyntax","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax","abstract":[],"kind":"symbol","title":"LabeledExprListSyntax","url":"\/documentation\/macrobuilder\/labeledexprlistsyntax","type":"topic","role":"symbol"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/LabeledExprListSyntax/detach()":{"kind":"symbol","type":"topic","title":"detach()","url":"\/documentation\/macrobuilder\/labeledexprlistsyntax\/detach()","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"detach","kind":"identifier"},{"kind":"text","text":"() -> "},{"text":"Self","kind":"typeIdentifier"}],"deprecated":true,"role":"symbol","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/detach()"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/LabeledExprListSyntax/structure":{"type":"topic","kind":"symbol","title":"structure","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"structure","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B13NodeStructureO","text":"SyntaxNodeStructure","kind":"typeIdentifier"}],"abstract":[{"text":"The statically allowed structure of the syntax node.","type":"text"}],"url":"\/documentation\/macrobuilder\/labeledexprlistsyntax\/structure","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/structure"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/LabeledExprListSyntax/asProtocol(_:)-8z8xw":{"kind":"symbol","type":"topic","title":"asProtocol(_:)","url":"\/documentation\/macrobuilder\/labeledexprlistsyntax\/asprotocol(_:)-8z8xw","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"asProtocol"},{"text":"((any ","kind":"text"},{"text":"DeclGroupSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax09DeclGroupB0P"},{"text":").Type) -> (any ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax09DeclGroupB0P","text":"DeclGroupSyntax"},{"kind":"text","text":")?"}],"role":"symbol","abstract":[{"text":"Return the non-type erased version of this syntax node if it conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"DeclGroupSyntax"},{"text":". Otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that this will incur an existential conversion."}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/asProtocol(_:)-8z8xw"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/LabeledExprListSyntax/hasSequenceExpr":{"type":"topic","kind":"symbol","title":"hasSequenceExpr","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"hasSequenceExpr"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Whether this tree contains a missing token or unexpected node."}],"url":"\/documentation\/macrobuilder\/labeledexprlistsyntax\/hassequenceexpr","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/hasSequenceExpr"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/LabeledExprListSyntax/asProtocol(_:)-3ycg4":{"kind":"symbol","type":"topic","title":"asProtocol(_:)","url":"\/documentation\/macrobuilder\/labeledexprlistsyntax\/asprotocol(_:)-3ycg4","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"asProtocol","kind":"identifier"},{"text":"((any ","kind":"text"},{"text":"NamedDeclSyntax","preciseIdentifier":"s:11SwiftSyntax09NamedDeclB0P","kind":"typeIdentifier"},{"kind":"text","text":").Type) -> (any "},{"kind":"typeIdentifier","text":"NamedDeclSyntax","preciseIdentifier":"s:11SwiftSyntax09NamedDeclB0P"},{"kind":"text","text":")?"}],"role":"symbol","abstract":[{"type":"text","text":"Return the non-type erased version of this syntax node if it conforms to"},{"text":" ","type":"text"},{"code":"NamedDeclSyntax","type":"codeVoice"},{"type":"text","text":". Otherwise return "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Note that this will incur an existential conversion.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/asProtocol(_:)-3ycg4"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/LabeledExprListSyntax/hasError":{"type":"topic","kind":"symbol","title":"hasError","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"hasError","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"abstract":[{"text":"Whether the tree contained by this layout has any","type":"text"}],"url":"\/documentation\/macrobuilder\/labeledexprlistsyntax\/haserror","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/LabeledExprListSyntax\/hasError"}}}