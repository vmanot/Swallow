{"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SpecializeAttributeArgumentListSyntax\/memoize(with:_:)-7gz5l"},"abstract":[{"type":"text","text":"Memoize the result of the execution of a predicate for the "},{"code":"Hashable","type":"codeVoice"},{"text":" receiver.","type":"text"}],"variants":[{"paths":["\/documentation\/macrobuilder\/specializeattributeargumentlistsyntax\/memoize(with:_:)-7gz5l"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"metadata":{"externalID":"s:SH7SwallowE7memoize4with_qd__AA6_CacheCyAA011MemoizationD3KeyVypGSg_s0F4PathCyxqd__GtlF::SYNTHESIZED::s:11SwiftSyntax031SpecializeAttributeArgumentListB0V","modules":[{"name":"MacroBuilder","relatedModules":["Swift"]}],"roleHeading":"Instance Method","title":"memoize(with:_:)","extendedModule":"Swift","role":"symbol","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"memoize"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"text":"with","kind":"externalParam"},{"kind":"text","text":": "},{"text":"MemoizationCache","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"KeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"text":"T","kind":"typeIdentifier"}]},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SpecializeAttributeArgumentListSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SpecializeAttributeArgumentListSyntax\/Hashable-Implementations"]]},"kind":"symbol","primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"memoize","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"with"},{"text":" ","kind":"text"},{"text":"cache","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"MemoizationCache"},{"kind":"text","text":"? = MemoizationCache.shared, "},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"keyPath"},{"kind":"text","text":": "},{"text":"KeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","text":"T"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"text":"The shared cache to use; ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":" disables caching and simply returns the result of "},{"code":"predicate","type":"codeVoice"},{"type":"text","text":" directly"}],"type":"paragraph"}],"name":"cache"}]},{"content":[{"type":"heading","level":2,"text":"Return Value","anchor":"return-value"},{"inlineContent":[{"type":"text","text":"The result from the "},{"type":"codeVoice","code":"predicate"},{"text":", either a previously cached value, or the result of executing the ","type":"text"},{"type":"codeVoice","code":"predicate"}],"type":"paragraph"}],"kind":"content"},{"kind":"content","content":[{"level":2,"type":"heading","text":"Discussion","anchor":"discussion"},{"inlineContent":[{"text":"The source subject (the receiver) and the result object (the return value) should be value types, and the ","type":"text"},{"type":"codeVoice","code":"predicate"},{"type":"text","text":" must be a "},{"type":"emphasis","inlineContent":[{"text":"pure","type":"text"}]},{"type":"text","text":" function that captures "},{"type":"emphasis","inlineContent":[{"text":"no state","type":"text"}]},{"type":"text","text":", in that:"}],"type":"paragraph"},{"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Its return value is the same for the same arguments (no variation with local static variables, non-local variables, mutable reference arguments or input streams from I\/O devices)."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Its evaluation has no side effects (no mutation of local static variables, non-local variables, mutable reference arguments or I\/O streams).","type":"text"}]}]}]},{"type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"The calling functionâ€™s source file and line are used as the cache key, so care must be taken to avoid having multiple calls to ","type":"text"},{"type":"codeVoice","code":"memoize"},{"type":"text","text":" occur from a single line of source code."}]}],"name":"Note","style":"note"},{"type":"aside","name":"Throws","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Re-Throws and errors from "},{"code":"predicate","type":"codeVoice"}]}],"style":"note"},{"name":"Complexity","style":"note","type":"aside","content":[{"inlineContent":[{"text":"Around O(1) for a successful cache hit, otherwise the complexity of the keyPath execution","type":"text"}],"type":"paragraph"}]}]}],"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SpecializeAttributeArgumentListSyntax":{"url":"\/documentation\/macrobuilder\/specializeattributeargumentlistsyntax","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"SpecializeAttributeArgumentListSyntax","kind":"identifier"}],"kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"A collection of arguments for the "},{"type":"codeVoice","code":"@_specialize"},{"text":" attribute","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SpecializeAttributeArgumentListSyntax","navigatorTitle":[{"kind":"identifier","text":"SpecializeAttributeArgumentListSyntax"}],"title":"SpecializeAttributeArgumentListSyntax"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SpecializeAttributeArgumentListSyntax/memoize(with:_:)-7gz5l":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"memoize","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"with"},{"text":": ","kind":"text"},{"text":"MemoizationCache","kind":"typeIdentifier"},{"kind":"text","text":"?, "},{"kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC","text":"KeyPath"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"T"}],"abstract":[{"type":"text","text":"Memoize the result of the execution of a predicate for the "},{"code":"Hashable","type":"codeVoice"},{"text":" receiver.","type":"text"}],"kind":"symbol","title":"memoize(with:_:)","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SpecializeAttributeArgumentListSyntax\/memoize(with:_:)-7gz5l","url":"\/documentation\/macrobuilder\/specializeattributeargumentlistsyntax\/memoize(with:_:)-7gz5l","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SpecializeAttributeArgumentListSyntax/Hashable-Implementations":{"role":"collectionGroup","title":"Hashable Implementations","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SpecializeAttributeArgumentListSyntax\/Hashable-Implementations","url":"\/documentation\/macrobuilder\/specializeattributeargumentlistsyntax\/hashable-implementations","abstract":[],"kind":"article","type":"topic"}}}