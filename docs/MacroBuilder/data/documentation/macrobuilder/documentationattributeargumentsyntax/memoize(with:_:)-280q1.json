{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DocumentationAttributeArgumentSyntax\/memoize(with:_:)-280q1"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"memoize"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"with"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"cache"},{"text":": ","kind":"text"},{"text":"MemoizationCache","kind":"typeIdentifier"},{"kind":"text","text":"? = MemoizationCache.shared, "},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"keyPath"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"KeyPath","preciseIdentifier":"s:s7KeyPathC"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"T","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}]}]},{"kind":"parameters","parameters":[{"name":"cache","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The shared cache to use; "},{"code":"nil","type":"codeVoice"},{"type":"text","text":" disables caching and simply returns the result of "},{"code":"predicate","type":"codeVoice"},{"type":"text","text":" directly"}]}]}]},{"kind":"content","content":[{"type":"heading","anchor":"return-value","text":"Return Value","level":2},{"inlineContent":[{"text":"The result from the ","type":"text"},{"type":"codeVoice","code":"predicate"},{"type":"text","text":", either a previously cached value, or the result of executing the "},{"type":"codeVoice","code":"predicate"}],"type":"paragraph"}]},{"content":[{"anchor":"discussion","type":"heading","text":"Discussion","level":2},{"inlineContent":[{"text":"The source subject (the receiver) and the result object (the return value) should be value types, and the ","type":"text"},{"type":"codeVoice","code":"predicate"},{"type":"text","text":" must be a "},{"type":"emphasis","inlineContent":[{"type":"text","text":"pure"}]},{"text":" function that captures ","type":"text"},{"inlineContent":[{"text":"no state","type":"text"}],"type":"emphasis"},{"type":"text","text":", in that:"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Its return value is the same for the same arguments (no variation with local static variables, non-local variables, mutable reference arguments or input streams from I\/O devices).","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Its evaluation has no side effects (no mutation of local static variables, non-local variables, mutable reference arguments or I\/O streams)."}]}]}],"type":"orderedList"},{"type":"aside","name":"Note","style":"note","content":[{"inlineContent":[{"text":"The calling functionâ€™s source file and line are used as the cache key, so care must be taken to avoid having multiple calls to ","type":"text"},{"code":"memoize","type":"codeVoice"},{"text":" occur from a single line of source code.","type":"text"}],"type":"paragraph"}]},{"type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"Re-Throws and errors from ","type":"text"},{"code":"predicate","type":"codeVoice"}]}],"style":"note","name":"Throws"},{"name":"Complexity","style":"note","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Around O(1) for a successful cache hit, otherwise the complexity of the keyPath execution"}]}]}],"kind":"content"}],"kind":"symbol","metadata":{"symbolKind":"method","roleHeading":"Instance Method","externalID":"s:SH7SwallowE7memoize4with_qd__AA6_CacheCyAA011MemoizationD3KeyVypGSg_s0F4PathCyxqd__GtlF::SYNTHESIZED::s:11SwiftSyntax030DocumentationAttributeArgumentB0V","extendedModule":"Swift","modules":[{"name":"MacroBuilder","relatedModules":["Swift"]}],"title":"memoize(with:_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"memoize","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"MemoizationCache"},{"text":"?, ","kind":"text"},{"preciseIdentifier":"s:s7KeyPathC","text":"KeyPath","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"text":"T","kind":"typeIdentifier"}],"role":"symbol"},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DocumentationAttributeArgumentSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DocumentationAttributeArgumentSyntax\/Hashable-Implementations"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"text":"Memoize the result of the execution of a predicate for the ","type":"text"},{"code":"Hashable","type":"codeVoice"},{"type":"text","text":" receiver."}],"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/macrobuilder\/documentationattributeargumentsyntax\/memoize(with:_:)-280q1"]}],"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/DocumentationAttributeArgumentSyntax/memoize(with:_:)-280q1":{"title":"memoize(with:_:)","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"memoize"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"with","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"MemoizationCache"},{"text":"?, ","kind":"text"},{"text":"KeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"url":"\/documentation\/macrobuilder\/documentationattributeargumentsyntax\/memoize(with:_:)-280q1","kind":"symbol","abstract":[{"text":"Memoize the result of the execution of a predicate for the ","type":"text"},{"code":"Hashable","type":"codeVoice"},{"type":"text","text":" receiver."}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DocumentationAttributeArgumentSyntax\/memoize(with:_:)-280q1"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/DocumentationAttributeArgumentSyntax":{"type":"topic","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"DocumentationAttributeArgumentSyntax","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"DocumentationAttributeArgumentSyntax"}],"abstract":[],"title":"DocumentationAttributeArgumentSyntax","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DocumentationAttributeArgumentSyntax","url":"\/documentation\/macrobuilder\/documentationattributeargumentsyntax"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/DocumentationAttributeArgumentSyntax/Hashable-Implementations":{"role":"collectionGroup","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DocumentationAttributeArgumentSyntax\/Hashable-Implementations","abstract":[],"title":"Hashable Implementations","url":"\/documentation\/macrobuilder\/documentationattributeargumentsyntax\/hashable-implementations","kind":"article","type":"topic"}}}