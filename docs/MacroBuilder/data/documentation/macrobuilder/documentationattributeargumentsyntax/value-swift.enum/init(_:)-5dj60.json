{"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"init"},{"text":"?<","kind":"text"},{"kind":"genericParameter","text":"S"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"node"},{"text":": ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"kind":"text","text":"?) "},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"text":"S","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxProtocol","text":"SyntaxProtocol","preciseIdentifier":"s:11SwiftSyntax0B8ProtocolP"}]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"text":"Discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Returns "},{"type":"codeVoice","code":"nil"},{"text":" if the conversion isnâ€™t possible, or if the provided node is ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."}]}]}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DocumentationAttributeArgumentSyntax","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DocumentationAttributeArgumentSyntax\/Value-swift.enum","doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DocumentationAttributeArgumentSyntax\/Value-swift.enum\/SyntaxProtocol-Implementations"]]},"variants":[{"paths":["\/documentation\/macrobuilder\/documentationattributeargumentsyntax\/value-swift.enum\/init(_:)-5dj60"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"metadata":{"externalID":"s:11SwiftSyntax0B8ProtocolPAAEyxSgqd__SgcAaBRd__lufc::SYNTHESIZED::s:11SwiftSyntax030DocumentationAttributeArgumentB0V5ValueO","title":"init(_:)","modules":[{"name":"MacroBuilder","relatedModules":["SwiftSyntax"]}],"roleHeading":"Initializer","symbolKind":"init","role":"symbol","extendedModule":"SwiftSyntax","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"?<"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":"?)","kind":"text"}]},"sections":[],"abstract":[{"type":"text","text":"Initializes a new instance of the conforming type from a given specialized syntax node."}],"identifier":{"url":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DocumentationAttributeArgumentSyntax\/Value-swift.enum\/init(_:)-5dj60","interfaceLanguage":"swift"},"references":{"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/DocumentationAttributeArgumentSyntax/Value-swift.enum/init(_:)-5dj60":{"kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"?<"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"S"},{"text":"?)","kind":"text"}],"title":"init(_:)","type":"topic","role":"symbol","url":"\/documentation\/macrobuilder\/documentationattributeargumentsyntax\/value-swift.enum\/init(_:)-5dj60","abstract":[{"text":"Initializes a new instance of the conforming type from a given specialized syntax node.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DocumentationAttributeArgumentSyntax\/Value-swift.enum\/init(_:)-5dj60"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder":{"url":"\/documentation\/macrobuilder","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder","abstract":[],"role":"collection","kind":"symbol","title":"MacroBuilder","type":"topic"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/DocumentationAttributeArgumentSyntax/Value-swift.enum/SyntaxProtocol-Implementations":{"url":"\/documentation\/macrobuilder\/documentationattributeargumentsyntax\/value-swift.enum\/syntaxprotocol-implementations","role":"collectionGroup","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DocumentationAttributeArgumentSyntax\/Value-swift.enum\/SyntaxProtocol-Implementations","abstract":[],"type":"topic","title":"SyntaxProtocol Implementations","kind":"article"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/DocumentationAttributeArgumentSyntax":{"type":"topic","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"DocumentationAttributeArgumentSyntax","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"DocumentationAttributeArgumentSyntax"}],"abstract":[],"title":"DocumentationAttributeArgumentSyntax","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DocumentationAttributeArgumentSyntax","url":"\/documentation\/macrobuilder\/documentationattributeargumentsyntax"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/DocumentationAttributeArgumentSyntax/Value-swift.enum":{"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"Value","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"Value","kind":"identifier"}],"abstract":[],"title":"DocumentationAttributeArgumentSyntax.Value","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/DocumentationAttributeArgumentSyntax\/Value-swift.enum","url":"\/documentation\/macrobuilder\/documentationattributeargumentsyntax\/value-swift.enum"},"doc://com.swallow.documentation.MacroBuilder/documentation/MacroBuilder/SyntaxProtocol":{"title":"SyntaxProtocol","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.MacroBuilder\/documentation\/MacroBuilder\/SyntaxProtocol","navigatorTitle":[{"text":"SyntaxProtocol","kind":"identifier"}],"abstract":[{"text":"Provide common functionality for specialized syntax nodes. Extend this","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"protocol to provide common functionality for all syntax nodes."}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"SyntaxProtocol","kind":"identifier"}],"type":"topic","role":"symbol","url":"\/documentation\/macrobuilder\/syntaxprotocol"}}}