{"metadata":{"modules":[{"name":"FoundationX"}],"roleHeading":"API Collection","role":"collectionGroup","title":"Decodable Implementations"},"schemaVersion":{"major":0,"minor":3,"patch":0},"topicSections":[{"generated":true,"anchor":"Initializers","identifiers":["doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/PredicateExpressions\/NotEqual\/init(from:)"],"title":"Initializers"},{"generated":true,"identifiers":["doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/PredicateExpressions\/NotEqual\/decode(from:)","doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/PredicateExpressions\/NotEqual\/decode(from:forKey:)","doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/PredicateExpressions\/NotEqual\/decodeIfPresent(from:)-65ort","doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/PredicateExpressions\/NotEqual\/decodeIfPresent(from:)-7mk8n","doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/PredicateExpressions\/NotEqual\/decodeIfPresent(from:forKey:)"],"title":"Type Methods","anchor":"Type-Methods"}],"variants":[{"paths":["\/documentation\/foundationx\/predicateexpressions\/notequal\/decodable-implementations"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"article","identifier":{"url":"doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/PredicateExpressions\/NotEqual\/Decodable-Implementations","interfaceLanguage":"swift"},"sections":[],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX","doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/PredicateExpressions","doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/PredicateExpressions\/NotEqual"]]},"references":{"doc://com.swallow.documentation.FoundationX/documentation/FoundationX/PredicateExpressions/NotEqual/decodeIfPresent(from:forKey:)":{"url":"\/documentation\/foundationx\/predicateexpressions\/notequal\/decodeifpresent(from:forkey:)","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"decodeIfPresent","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Container","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"from","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Container","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"forKey"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Container"},{"text":".","kind":"text"},{"preciseIdentifier":"s:s30KeyedDecodingContainerProtocolP3KeyQa","text":"Key","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"type":"topic","kind":"symbol","role":"symbol","title":"decodeIfPresent(from:forKey:)","identifier":"doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/PredicateExpressions\/NotEqual\/decodeIfPresent(from:forKey:)","abstract":[]},"doc://com.swallow.documentation.FoundationX/documentation/FoundationX/PredicateExpressions":{"kind":"symbol","abstract":[],"fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"PredicateExpressions","kind":"identifier"}],"url":"\/documentation\/foundationx\/predicateexpressions","identifier":"doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/PredicateExpressions","title":"PredicateExpressions","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"PredicateExpressions"}],"type":"topic"},"doc://com.swallow.documentation.FoundationX/documentation/FoundationX/PredicateExpressions/NotEqual/decodeIfPresent(from:)-65ort":{"identifier":"doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/PredicateExpressions\/NotEqual\/decodeIfPresent(from:)-65ort","type":"topic","kind":"symbol","role":"symbol","title":"decodeIfPresent(from:)","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"decodeIfPresent"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Container"},{"text":">(","kind":"text"},{"text":"from","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Container"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"url":"\/documentation\/foundationx\/predicateexpressions\/notequal\/decodeifpresent(from:)-65ort","abstract":[]},"doc://com.swallow.documentation.FoundationX/documentation/FoundationX":{"abstract":[],"kind":"symbol","title":"FoundationX","identifier":"doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX","url":"\/documentation\/foundationx","role":"collection","type":"topic"},"doc://com.swallow.documentation.FoundationX/documentation/FoundationX/PredicateExpressions/NotEqual/init(from:)":{"title":"init(from:)","kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"from"},{"kind":"text","text":": any "},{"kind":"typeIdentifier","preciseIdentifier":"s:s7DecoderP","text":"Decoder"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"role":"symbol","url":"\/documentation\/foundationx\/predicateexpressions\/notequal\/init(from:)","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"LHS","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"PredicateExpression"},{"text":", ","type":"text"},{"code":"LHS","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Decodable"},{"text":", ","type":"text"},{"code":"LHS","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Encodable","type":"codeVoice"},{"type":"text","text":", "},{"code":"RHS","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"PredicateExpression"},{"text":", ","type":"text"},{"code":"RHS","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Decodable"},{"text":", ","type":"text"},{"type":"codeVoice","code":"RHS"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Encodable"},{"type":"text","text":", "},{"code":"LHS.Output","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Equatable"},{"text":", and ","type":"text"},{"type":"codeVoice","code":"LHS.Output"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"RHS.Output"},{"type":"text","text":"."}]},"type":"topic","identifier":"doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/PredicateExpressions\/NotEqual\/init(from:)","abstract":[]},"doc://com.swallow.documentation.FoundationX/documentation/FoundationX/PredicateExpressions/NotEqual/decode(from:)":{"title":"decode(from:)","type":"topic","kind":"symbol","url":"\/documentation\/foundationx\/predicateexpressions\/notequal\/decode(from:)","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"decode"},{"kind":"text","text":"<"},{"text":"Container","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"from"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Container","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"}],"identifier":"doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/PredicateExpressions\/NotEqual\/decode(from:)","abstract":[],"role":"symbol"},"doc://com.swallow.documentation.FoundationX/documentation/FoundationX/PredicateExpressions/NotEqual/decode(from:forKey:)":{"abstract":[],"role":"symbol","url":"\/documentation\/foundationx\/predicateexpressions\/notequal\/decode(from:forkey:)","title":"decode(from:forKey:)","type":"topic","identifier":"doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/PredicateExpressions\/NotEqual\/decode(from:forKey:)","kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"decode","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Container"},{"kind":"text","text":">("},{"text":"from","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Container"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"forKey"},{"text":": ","kind":"text"},{"text":"Container","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Key","preciseIdentifier":"s:s30KeyedDecodingContainerProtocolP3KeyQa","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"}]},"doc://com.swallow.documentation.FoundationX/documentation/FoundationX/PredicateExpressions/NotEqual":{"identifier":"doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/PredicateExpressions\/NotEqual","kind":"symbol","type":"topic","url":"\/documentation\/foundationx\/predicateexpressions\/notequal","title":"PredicateExpressions.NotEqual","role":"symbol","abstract":[],"navigatorTitle":[{"kind":"identifier","text":"NotEqual"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"NotEqual","kind":"identifier"}]},"doc://com.swallow.documentation.FoundationX/documentation/FoundationX/PredicateExpressions/NotEqual/decodeIfPresent(from:)-7mk8n":{"abstract":[],"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"decodeIfPresent","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Container"},{"kind":"text","text":">("},{"text":"from","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Container"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/PredicateExpressions\/NotEqual\/decodeIfPresent(from:)-7mk8n","title":"decodeIfPresent(from:)","role":"symbol","type":"topic","url":"\/documentation\/foundationx\/predicateexpressions\/notequal\/decodeifpresent(from:)-7mk8n"}}}