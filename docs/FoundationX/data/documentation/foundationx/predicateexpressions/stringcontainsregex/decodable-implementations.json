{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/PredicateExpressions\/StringContainsRegex\/Decodable-Implementations"},"metadata":{"modules":[{"name":"FoundationX"}],"roleHeading":"API Collection","title":"Decodable Implementations","role":"collectionGroup"},"sections":[],"kind":"article","topicSections":[{"title":"Initializers","anchor":"Initializers","identifiers":["doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/PredicateExpressions\/StringContainsRegex\/init(from:)"],"generated":true},{"anchor":"Type-Methods","identifiers":["doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/PredicateExpressions\/StringContainsRegex\/decode(from:)","doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/PredicateExpressions\/StringContainsRegex\/decode(from:forKey:)","doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/PredicateExpressions\/StringContainsRegex\/decodeIfPresent(from:)-84wgv","doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/PredicateExpressions\/StringContainsRegex\/decodeIfPresent(from:)-cfgo","doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/PredicateExpressions\/StringContainsRegex\/decodeIfPresent(from:forKey:)"],"generated":true,"title":"Type Methods"}],"variants":[{"paths":["\/documentation\/foundationx\/predicateexpressions\/stringcontainsregex\/decodable-implementations"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX","doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/PredicateExpressions","doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/PredicateExpressions\/StringContainsRegex"]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"references":{"doc://com.swallow.documentation.FoundationX/documentation/FoundationX":{"abstract":[],"kind":"symbol","title":"FoundationX","identifier":"doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX","url":"\/documentation\/foundationx","role":"collection","type":"topic"},"doc://com.swallow.documentation.FoundationX/documentation/FoundationX/PredicateExpressions/StringContainsRegex/decodeIfPresent(from:forKey:)":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"decodeIfPresent"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Container"},{"kind":"text","text":">("},{"text":"from","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Container","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"forKey"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Container"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Key","preciseIdentifier":"s:s30KeyedDecodingContainerProtocolP3KeyQa"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Self","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/PredicateExpressions\/StringContainsRegex\/decodeIfPresent(from:forKey:)","kind":"symbol","type":"topic","url":"\/documentation\/foundationx\/predicateexpressions\/stringcontainsregex\/decodeifpresent(from:forkey:)","abstract":[],"title":"decodeIfPresent(from:forKey:)"},"doc://com.swallow.documentation.FoundationX/documentation/FoundationX/PredicateExpressions/StringContainsRegex/decodeIfPresent(from:)-84wgv":{"abstract":[],"url":"\/documentation\/foundationx\/predicateexpressions\/stringcontainsregex\/decodeifpresent(from:)-84wgv","title":"decodeIfPresent(from:)","role":"symbol","type":"topic","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"decodeIfPresent","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Container","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"from"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Container"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/PredicateExpressions\/StringContainsRegex\/decodeIfPresent(from:)-84wgv","kind":"symbol"},"doc://com.swallow.documentation.FoundationX/documentation/FoundationX/PredicateExpressions/StringContainsRegex/decode(from:forKey:)":{"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"decode","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Container"},{"text":">(","kind":"text"},{"text":"from","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Container"},{"kind":"text","text":", "},{"text":"forKey","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Container","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:s30KeyedDecodingContainerProtocolP3KeyQa","text":"Key"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Self","kind":"typeIdentifier"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/PredicateExpressions\/StringContainsRegex\/decode(from:forKey:)","role":"symbol","title":"decode(from:forKey:)","abstract":[],"type":"topic","url":"\/documentation\/foundationx\/predicateexpressions\/stringcontainsregex\/decode(from:forkey:)"},"doc://com.swallow.documentation.FoundationX/documentation/FoundationX/PredicateExpressions/StringContainsRegex":{"type":"topic","identifier":"doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/PredicateExpressions\/StringContainsRegex","title":"PredicateExpressions.StringContainsRegex","navigatorTitle":[{"text":"StringContainsRegex","kind":"identifier"}],"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"StringContainsRegex","kind":"identifier"}],"url":"\/documentation\/foundationx\/predicateexpressions\/stringcontainsregex","abstract":[]},"doc://com.swallow.documentation.FoundationX/documentation/FoundationX/PredicateExpressions/StringContainsRegex/decode(from:)":{"identifier":"doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/PredicateExpressions\/StringContainsRegex\/decode(from:)","kind":"symbol","role":"symbol","title":"decode(from:)","abstract":[],"url":"\/documentation\/foundationx\/predicateexpressions\/stringcontainsregex\/decode(from:)","type":"topic","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"decode"},{"text":"<","kind":"text"},{"text":"Container","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"from","kind":"externalParam"},{"kind":"text","text":": "},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Container"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Self","kind":"typeIdentifier"}]},"doc://com.swallow.documentation.FoundationX/documentation/FoundationX/PredicateExpressions":{"kind":"symbol","abstract":[],"fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"PredicateExpressions","kind":"identifier"}],"url":"\/documentation\/foundationx\/predicateexpressions","identifier":"doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/PredicateExpressions","title":"PredicateExpressions","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"PredicateExpressions"}],"type":"topic"},"doc://com.swallow.documentation.FoundationX/documentation/FoundationX/PredicateExpressions/StringContainsRegex/init(from:)":{"title":"init(from:)","type":"topic","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"from"},{"text":": any ","kind":"text"},{"text":"Decoder","kind":"typeIdentifier","preciseIdentifier":"s:s7DecoderP"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"}],"role":"symbol","url":"\/documentation\/foundationx\/predicateexpressions\/stringcontainsregex\/init(from:)","kind":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Subject"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"PredicateExpression"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Subject"},{"text":" conforms to ","type":"text"},{"code":"Decodable","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"Subject"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Encodable"},{"text":", ","type":"text"},{"code":"Regex","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"PredicateExpression","type":"codeVoice"},{"type":"text","text":", "},{"code":"Regex","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Decodable"},{"type":"text","text":", "},{"code":"Regex","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Encodable"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Subject.Output"},{"type":"text","text":" conforms to "},{"code":"BidirectionalCollection","type":"codeVoice"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Regex.Output"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"RegexComponent"},{"type":"text","text":", and "},{"code":"Subject.Output.SubSequence","type":"codeVoice"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Substring"},{"type":"text","text":"."}]},"identifier":"doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/PredicateExpressions\/StringContainsRegex\/init(from:)","abstract":[]},"doc://com.swallow.documentation.FoundationX/documentation/FoundationX/PredicateExpressions/StringContainsRegex/decodeIfPresent(from:)-cfgo":{"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"decodeIfPresent"},{"text":"<","kind":"text"},{"text":"Container","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"from","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"text":"Container","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/PredicateExpressions\/StringContainsRegex\/decodeIfPresent(from:)-cfgo","kind":"symbol","type":"topic","url":"\/documentation\/foundationx\/predicateexpressions\/stringcontainsregex\/decodeifpresent(from:)-cfgo","abstract":[],"title":"decodeIfPresent(from:)"}}}