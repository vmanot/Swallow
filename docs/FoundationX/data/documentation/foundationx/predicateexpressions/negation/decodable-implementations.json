{"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/PredicateExpressions\/Negation\/Decodable-Implementations"},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX","doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/PredicateExpressions","doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/PredicateExpressions\/Negation"]]},"topicSections":[{"generated":true,"anchor":"Initializers","title":"Initializers","identifiers":["doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/PredicateExpressions\/Negation\/init(from:)"]},{"anchor":"Type-Methods","title":"Type Methods","generated":true,"identifiers":["doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/PredicateExpressions\/Negation\/decode(from:)","doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/PredicateExpressions\/Negation\/decode(from:forKey:)","doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/PredicateExpressions\/Negation\/decodeIfPresent(from:)-4xhl7","doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/PredicateExpressions\/Negation\/decodeIfPresent(from:)-9y0jv","doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/PredicateExpressions\/Negation\/decodeIfPresent(from:forKey:)"]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"kind":"article","variants":[{"paths":["\/documentation\/foundationx\/predicateexpressions\/negation\/decodable-implementations"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"roleHeading":"API Collection","modules":[{"name":"FoundationX"}],"role":"collectionGroup","title":"Decodable Implementations"},"references":{"doc://com.swallow.documentation.FoundationX/documentation/FoundationX/PredicateExpressions/Negation/decodeIfPresent(from:)-9y0jv":{"url":"\/documentation\/foundationx\/predicateexpressions\/negation\/decodeifpresent(from:)-9y0jv","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"decodeIfPresent"},{"text":"<","kind":"text"},{"text":"Container","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"from"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Container"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"?"}],"identifier":"doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/PredicateExpressions\/Negation\/decodeIfPresent(from:)-9y0jv","abstract":[],"kind":"symbol","role":"symbol","type":"topic","title":"decodeIfPresent(from:)"},"doc://com.swallow.documentation.FoundationX/documentation/FoundationX/PredicateExpressions/Negation":{"navigatorTitle":[{"kind":"identifier","text":"Negation"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/PredicateExpressions\/Negation","abstract":[],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Negation"}],"type":"topic","url":"\/documentation\/foundationx\/predicateexpressions\/negation","role":"symbol","title":"PredicateExpressions.Negation"},"doc://com.swallow.documentation.FoundationX/documentation/FoundationX/PredicateExpressions/Negation/decodeIfPresent(from:)-4xhl7":{"abstract":[],"kind":"symbol","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"decodeIfPresent","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Container","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"from","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"text":"Container","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"url":"\/documentation\/foundationx\/predicateexpressions\/negation\/decodeifpresent(from:)-4xhl7","identifier":"doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/PredicateExpressions\/Negation\/decodeIfPresent(from:)-4xhl7","title":"decodeIfPresent(from:)"},"doc://com.swallow.documentation.FoundationX/documentation/FoundationX":{"abstract":[],"kind":"symbol","title":"FoundationX","identifier":"doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX","url":"\/documentation\/foundationx","role":"collection","type":"topic"},"doc://com.swallow.documentation.FoundationX/documentation/FoundationX/PredicateExpressions/Negation/decodeIfPresent(from:forKey:)":{"url":"\/documentation\/foundationx\/predicateexpressions\/negation\/decodeifpresent(from:forkey:)","type":"topic","identifier":"doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/PredicateExpressions\/Negation\/decodeIfPresent(from:forKey:)","role":"symbol","title":"decodeIfPresent(from:forKey:)","kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"decodeIfPresent","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Container"},{"kind":"text","text":">("},{"kind":"externalParam","text":"from"},{"text":": ","kind":"text"},{"text":"Container","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"forKey","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Container","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:s30KeyedDecodingContainerProtocolP3KeyQa","text":"Key"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"Self","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"abstract":[]},"doc://com.swallow.documentation.FoundationX/documentation/FoundationX/PredicateExpressions":{"kind":"symbol","abstract":[],"fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"PredicateExpressions","kind":"identifier"}],"url":"\/documentation\/foundationx\/predicateexpressions","identifier":"doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/PredicateExpressions","title":"PredicateExpressions","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"PredicateExpressions"}],"type":"topic"},"doc://com.swallow.documentation.FoundationX/documentation/FoundationX/PredicateExpressions/Negation/decode(from:)":{"type":"topic","title":"decode(from:)","identifier":"doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/PredicateExpressions\/Negation\/decode(from:)","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"decode"},{"text":"<","kind":"text"},{"text":"Container","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"from"},{"kind":"text","text":": "},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Container","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"url":"\/documentation\/foundationx\/predicateexpressions\/negation\/decode(from:)","role":"symbol","abstract":[]},"doc://com.swallow.documentation.FoundationX/documentation/FoundationX/PredicateExpressions/Negation/decode(from:forKey:)":{"url":"\/documentation\/foundationx\/predicateexpressions\/negation\/decode(from:forkey:)","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"decode","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Container","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"from"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Container"},{"text":", ","kind":"text"},{"text":"forKey","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Container"},{"text":".","kind":"text"},{"text":"Key","preciseIdentifier":"s:s30KeyedDecodingContainerProtocolP3KeyQa","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"abstract":[],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/PredicateExpressions\/Negation\/decode(from:forKey:)","title":"decode(from:forKey:)","type":"topic"},"doc://com.swallow.documentation.FoundationX/documentation/FoundationX/PredicateExpressions/Negation/init(from:)":{"identifier":"doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/PredicateExpressions\/Negation\/init(from:)","kind":"symbol","url":"\/documentation\/foundationx\/predicateexpressions\/negation\/init(from:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"from"},{"text":": any ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s7DecoderP","text":"Decoder"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"role":"symbol","abstract":[],"conformance":{"constraints":[{"code":"Wrapped","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"PredicateExpression","type":"codeVoice"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Wrapped"},{"type":"text","text":" conforms to "},{"code":"Decodable","type":"codeVoice"},{"type":"text","text":", "},{"code":"Wrapped","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Encodable"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Wrapped.Output"},{"text":" is ","type":"text"},{"code":"Bool","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"type":"topic","title":"init(from:)"}}}