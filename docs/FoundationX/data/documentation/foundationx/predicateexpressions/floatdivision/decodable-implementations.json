{"schemaVersion":{"patch":0,"minor":3,"major":0},"kind":"article","sections":[],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX","doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/PredicateExpressions","doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/PredicateExpressions\/FloatDivision"]]},"variants":[{"paths":["\/documentation\/foundationx\/predicateexpressions\/floatdivision\/decodable-implementations"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/PredicateExpressions\/FloatDivision\/Decodable-Implementations"},"metadata":{"roleHeading":"API Collection","modules":[{"name":"FoundationX"}],"role":"collectionGroup","title":"Decodable Implementations"},"topicSections":[{"anchor":"Initializers","generated":true,"title":"Initializers","identifiers":["doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/PredicateExpressions\/FloatDivision\/init(from:)"]},{"title":"Type Methods","anchor":"Type-Methods","generated":true,"identifiers":["doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/PredicateExpressions\/FloatDivision\/decode(from:)","doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/PredicateExpressions\/FloatDivision\/decode(from:forKey:)","doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/PredicateExpressions\/FloatDivision\/decodeIfPresent(from:)-7sttv","doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/PredicateExpressions\/FloatDivision\/decodeIfPresent(from:)-9e00b","doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/PredicateExpressions\/FloatDivision\/decodeIfPresent(from:forKey:)"]}],"references":{"doc://com.swallow.documentation.FoundationX/documentation/FoundationX/PredicateExpressions/FloatDivision/decodeIfPresent(from:)-7sttv":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/PredicateExpressions\/FloatDivision\/decodeIfPresent(from:)-7sttv","type":"topic","url":"\/documentation\/foundationx\/predicateexpressions\/floatdivision\/decodeifpresent(from:)-7sttv","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"decodeIfPresent"},{"text":"<","kind":"text"},{"text":"Container","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"from"},{"kind":"text","text":": "},{"text":"Container","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"?"}],"abstract":[],"title":"decodeIfPresent(from:)"},"doc://com.swallow.documentation.FoundationX/documentation/FoundationX/PredicateExpressions":{"kind":"symbol","abstract":[],"fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"PredicateExpressions","kind":"identifier"}],"url":"\/documentation\/foundationx\/predicateexpressions","identifier":"doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/PredicateExpressions","title":"PredicateExpressions","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"PredicateExpressions"}],"type":"topic"},"doc://com.swallow.documentation.FoundationX/documentation/FoundationX/PredicateExpressions/FloatDivision":{"navigatorTitle":[{"text":"FloatDivision","kind":"identifier"}],"title":"PredicateExpressions.FloatDivision","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"FloatDivision","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/PredicateExpressions\/FloatDivision","role":"symbol","abstract":[],"url":"\/documentation\/foundationx\/predicateexpressions\/floatdivision","type":"topic"},"doc://com.swallow.documentation.FoundationX/documentation/FoundationX/PredicateExpressions/FloatDivision/init(from:)":{"url":"\/documentation\/foundationx\/predicateexpressions\/floatdivision\/init(from:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"text":"from","kind":"externalParam"},{"text":": any ","kind":"text"},{"text":"Decoder","preciseIdentifier":"s:s7DecoderP","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"conformance":{"constraints":[{"code":"LHS","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"PredicateExpression"},{"text":", ","type":"text"},{"type":"codeVoice","code":"LHS"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Decodable"},{"type":"text","text":", "},{"type":"codeVoice","code":"LHS"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Encodable"},{"type":"text","text":", "},{"type":"codeVoice","code":"RHS"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"PredicateExpression"},{"text":", ","type":"text"},{"type":"codeVoice","code":"RHS"},{"type":"text","text":" conforms to "},{"code":"Decodable","type":"codeVoice"},{"text":", ","type":"text"},{"type":"codeVoice","code":"RHS"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Encodable"},{"text":", ","type":"text"},{"type":"codeVoice","code":"LHS.Output"},{"type":"text","text":" conforms to "},{"code":"FloatingPoint","type":"codeVoice"},{"type":"text","text":", and "},{"type":"codeVoice","code":"LHS.Output"},{"text":" is ","type":"text"},{"code":"RHS.Output","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/PredicateExpressions\/FloatDivision\/init(from:)","title":"init(from:)","role":"symbol","type":"topic","abstract":[]},"doc://com.swallow.documentation.FoundationX/documentation/FoundationX/PredicateExpressions/FloatDivision/decodeIfPresent(from:)-9e00b":{"abstract":[],"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"decodeIfPresent","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Container"},{"kind":"text","text":">("},{"kind":"externalParam","text":"from"},{"text":": ","kind":"text"},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Container"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":"?","kind":"text"}],"title":"decodeIfPresent(from:)","url":"\/documentation\/foundationx\/predicateexpressions\/floatdivision\/decodeifpresent(from:)-9e00b","type":"topic","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/PredicateExpressions\/FloatDivision\/decodeIfPresent(from:)-9e00b","kind":"symbol"},"doc://com.swallow.documentation.FoundationX/documentation/FoundationX":{"abstract":[],"kind":"symbol","title":"FoundationX","identifier":"doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX","url":"\/documentation\/foundationx","role":"collection","type":"topic"},"doc://com.swallow.documentation.FoundationX/documentation/FoundationX/PredicateExpressions/FloatDivision/decode(from:)":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/PredicateExpressions\/FloatDivision\/decode(from:)","type":"topic","url":"\/documentation\/foundationx\/predicateexpressions\/floatdivision\/decode(from:)","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"decode","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Container","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"from","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Container"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"abstract":[],"title":"decode(from:)"},"doc://com.swallow.documentation.FoundationX/documentation/FoundationX/PredicateExpressions/FloatDivision/decode(from:forKey:)":{"url":"\/documentation\/foundationx\/predicateexpressions\/floatdivision\/decode(from:forkey:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"decode"},{"kind":"text","text":"<"},{"text":"Container","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"from","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Container","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"forKey","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Container","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Key","kind":"typeIdentifier","preciseIdentifier":"s:s30KeyedDecodingContainerProtocolP3KeyQa"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"Self","kind":"typeIdentifier"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/PredicateExpressions\/FloatDivision\/decode(from:forKey:)","title":"decode(from:forKey:)","role":"symbol","type":"topic","abstract":[]},"doc://com.swallow.documentation.FoundationX/documentation/FoundationX/PredicateExpressions/FloatDivision/decodeIfPresent(from:forKey:)":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/PredicateExpressions\/FloatDivision\/decodeIfPresent(from:forKey:)","type":"topic","url":"\/documentation\/foundationx\/predicateexpressions\/floatdivision\/decodeifpresent(from:forkey:)","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"decodeIfPresent","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Container","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"from","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Container","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"forKey","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Container","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:s30KeyedDecodingContainerProtocolP3KeyQa","kind":"typeIdentifier","text":"Key"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"abstract":[],"title":"decodeIfPresent(from:forKey:)"}}}