{"kind":"article","schemaVersion":{"patch":0,"minor":3,"major":0},"identifier":{"url":"doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/PredicateExpressions\/SequenceAllSatisfy\/Decodable-Implementations","interfaceLanguage":"swift"},"metadata":{"title":"Decodable Implementations","roleHeading":"API Collection","role":"collectionGroup","modules":[{"name":"FoundationX"}]},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX","doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/PredicateExpressions","doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/PredicateExpressions\/SequenceAllSatisfy"]]},"topicSections":[{"title":"Initializers","generated":true,"identifiers":["doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/PredicateExpressions\/SequenceAllSatisfy\/init(from:)"],"anchor":"Initializers"},{"title":"Type Methods","anchor":"Type-Methods","identifiers":["doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/PredicateExpressions\/SequenceAllSatisfy\/decode(from:)","doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/PredicateExpressions\/SequenceAllSatisfy\/decode(from:forKey:)","doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/PredicateExpressions\/SequenceAllSatisfy\/decodeIfPresent(from:)-5rsd9","doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/PredicateExpressions\/SequenceAllSatisfy\/decodeIfPresent(from:)-7t19j","doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/PredicateExpressions\/SequenceAllSatisfy\/decodeIfPresent(from:forKey:)"],"generated":true}],"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/foundationx\/predicateexpressions\/sequenceallsatisfy\/decodable-implementations"]}],"references":{"doc://com.swallow.documentation.FoundationX/documentation/FoundationX/PredicateExpressions/SequenceAllSatisfy":{"title":"PredicateExpressions.SequenceAllSatisfy","type":"topic","identifier":"doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/PredicateExpressions\/SequenceAllSatisfy","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"SequenceAllSatisfy","kind":"identifier"}],"url":"\/documentation\/foundationx\/predicateexpressions\/sequenceallsatisfy","navigatorTitle":[{"text":"SequenceAllSatisfy","kind":"identifier"}],"role":"symbol","abstract":[]},"doc://com.swallow.documentation.FoundationX/documentation/FoundationX/PredicateExpressions":{"kind":"symbol","abstract":[],"fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"PredicateExpressions","kind":"identifier"}],"url":"\/documentation\/foundationx\/predicateexpressions","identifier":"doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/PredicateExpressions","title":"PredicateExpressions","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"PredicateExpressions"}],"type":"topic"},"doc://com.swallow.documentation.FoundationX/documentation/FoundationX":{"abstract":[],"kind":"symbol","title":"FoundationX","identifier":"doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX","url":"\/documentation\/foundationx","role":"collection","type":"topic"},"doc://com.swallow.documentation.FoundationX/documentation/FoundationX/PredicateExpressions/SequenceAllSatisfy/decode(from:)":{"url":"\/documentation\/foundationx\/predicateexpressions\/sequenceallsatisfy\/decode(from:)","type":"topic","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/PredicateExpressions\/SequenceAllSatisfy\/decode(from:)","role":"symbol","title":"decode(from:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"decode"},{"text":"<","kind":"text"},{"text":"Container","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"from"},{"text":": ","kind":"text"},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"text":"Container","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"kind":"symbol"},"doc://com.swallow.documentation.FoundationX/documentation/FoundationX/PredicateExpressions/SequenceAllSatisfy/decode(from:forKey:)":{"url":"\/documentation\/foundationx\/predicateexpressions\/sequenceallsatisfy\/decode(from:forkey:)","role":"symbol","title":"decode(from:forKey:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"decode","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Container","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"from"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Container"},{"kind":"text","text":", "},{"text":"forKey","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Container"},{"text":".","kind":"text"},{"text":"Key","preciseIdentifier":"s:s30KeyedDecodingContainerProtocolP3KeyQa","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"kind":"symbol","abstract":[],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/PredicateExpressions\/SequenceAllSatisfy\/decode(from:forKey:)"},"doc://com.swallow.documentation.FoundationX/documentation/FoundationX/PredicateExpressions/SequenceAllSatisfy/decodeIfPresent(from:)-5rsd9":{"identifier":"doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/PredicateExpressions\/SequenceAllSatisfy\/decodeIfPresent(from:)-5rsd9","abstract":[],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"decodeIfPresent","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Container","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"from","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"text":"Container","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"title":"decodeIfPresent(from:)","url":"\/documentation\/foundationx\/predicateexpressions\/sequenceallsatisfy\/decodeifpresent(from:)-5rsd9","type":"topic","kind":"symbol","role":"symbol"},"doc://com.swallow.documentation.FoundationX/documentation/FoundationX/PredicateExpressions/SequenceAllSatisfy/decodeIfPresent(from:)-7t19j":{"role":"symbol","type":"topic","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"decodeIfPresent","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Container","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"from","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Container","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":"?","kind":"text"}],"title":"decodeIfPresent(from:)","identifier":"doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/PredicateExpressions\/SequenceAllSatisfy\/decodeIfPresent(from:)-7t19j","url":"\/documentation\/foundationx\/predicateexpressions\/sequenceallsatisfy\/decodeifpresent(from:)-7t19j","abstract":[]},"doc://com.swallow.documentation.FoundationX/documentation/FoundationX/PredicateExpressions/SequenceAllSatisfy/init(from:)":{"kind":"symbol","url":"\/documentation\/foundationx\/predicateexpressions\/sequenceallsatisfy\/init(from:)","type":"topic","abstract":[],"title":"init(from:)","identifier":"doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/PredicateExpressions\/SequenceAllSatisfy\/init(from:)","role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"text":"from","kind":"externalParam"},{"text":": any ","kind":"text"},{"text":"Decoder","preciseIdentifier":"s:s7DecoderP","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"conformance":{"constraints":[{"type":"codeVoice","code":"LHS"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"PredicateExpression"},{"text":", ","type":"text"},{"code":"LHS","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Decodable","type":"codeVoice"},{"type":"text","text":", "},{"code":"LHS","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Encodable","type":"codeVoice"},{"text":", ","type":"text"},{"type":"codeVoice","code":"RHS"},{"type":"text","text":" conforms to "},{"code":"PredicateExpression","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"RHS"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Decodable"},{"type":"text","text":", "},{"code":"RHS","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Encodable"},{"type":"text","text":", "},{"type":"codeVoice","code":"LHS.Output"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Sequence"},{"type":"text","text":", and "},{"type":"codeVoice","code":"RHS.Output"},{"text":" is ","type":"text"},{"code":"Bool","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]}},"doc://com.swallow.documentation.FoundationX/documentation/FoundationX/PredicateExpressions/SequenceAllSatisfy/decodeIfPresent(from:forKey:)":{"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"decodeIfPresent","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Container","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"from","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Container"},{"kind":"text","text":", "},{"kind":"externalParam","text":"forKey"},{"text":": ","kind":"text"},{"text":"Container","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s30KeyedDecodingContainerProtocolP3KeyQa","text":"Key"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"?"}],"abstract":[],"kind":"symbol","type":"topic","identifier":"doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/PredicateExpressions\/SequenceAllSatisfy\/decodeIfPresent(from:forKey:)","title":"decodeIfPresent(from:forKey:)","role":"symbol","url":"\/documentation\/foundationx\/predicateexpressions\/sequenceallsatisfy\/decodeifpresent(from:forkey:)"}}}