{"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NSLocalizedString","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"text":"key","kind":"internalParam"},{"kind":"text","text":": "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"tableName"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"text":"? = nil, ","kind":"text"},{"text":"bundle","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bundle","identifier":"doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/Bundle","preciseIdentifier":"c:objc(cs)NSBundle","kind":"typeIdentifier"},{"text":" = Bundle.main, ","kind":"text"},{"kind":"externalParam","text":"value"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"text":" = \"\", ","kind":"text"},{"text":"comment","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"}],"platforms":["macOS"]}]},{"parameters":[{"name":"key","content":[{"inlineContent":[{"text":"An identifying value used to reference a localized string.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Don’t use the empty string as a key. Values keyed by the empty string will"},{"text":" ","type":"text"},{"type":"text","text":"not be localized."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"The name of the table containing the localized string"},{"type":"text","text":" "},{"text":"identified by ","type":"text"},{"code":"key","type":"codeVoice"},{"type":"text","text":". This is the prefix of the strings file—a file with"},{"text":" ","type":"text"},{"type":"text","text":"the "},{"type":"codeVoice","code":".strings"},{"text":" extension—containing the localized values. If ","type":"text"},{"type":"codeVoice","code":"tableName"},{"type":"text","text":" "},{"text":"is ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":" or the empty string, the "},{"type":"codeVoice","code":"Localizable"},{"type":"text","text":" table is used."}],"type":"paragraph"}],"name":"tableName"},{"content":[{"type":"paragraph","inlineContent":[{"text":"The bundle containing the table’s strings file. The main","type":"text"},{"type":"text","text":" "},{"type":"text","text":"bundle is used by default."}]}],"name":"bundle"},{"content":[{"inlineContent":[{"type":"text","text":"A user-visible string to return when the localized string"},{"type":"text","text":" "},{"text":"for ","type":"text"},{"code":"key","type":"codeVoice"},{"text":" cannot be found in the table. If ","type":"text"},{"type":"codeVoice","code":"value"},{"type":"text","text":" is the empty string,"},{"type":"text","text":" "},{"code":"key","type":"codeVoice"},{"text":" would be returned instead.","type":"text"}],"type":"paragraph"}],"name":"value"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A note to the translator describing the context where"},{"text":" ","type":"text"},{"text":"the localized string is presented to the user.","type":"text"}]}],"name":"comment"}],"kind":"parameters"},{"kind":"content","content":[{"anchor":"return-value","level":2,"text":"Return Value","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A localized version of the string designated by "},{"type":"codeVoice","code":"key"},{"type":"text","text":" in the"},{"type":"text","text":" "},{"type":"text","text":"table identified by "},{"type":"codeVoice","code":"tableName"},{"text":". If the localized string for ","type":"text"},{"code":"key","type":"codeVoice"},{"type":"text","text":" cannot"},{"text":" ","type":"text"},{"text":"be found within the table, ","type":"text"},{"code":"value","type":"codeVoice"},{"text":" is returned. However, ","type":"text"},{"type":"codeVoice","code":"key"},{"type":"text","text":" is returned"},{"text":" ","type":"text"},{"type":"text","text":"instead when "},{"code":"value","type":"codeVoice"},{"text":" is the empty string.","type":"text"}]}]},{"content":[{"level":2,"anchor":"Export-Localizations-with-Xcode","type":"heading","text":"Export Localizations with Xcode"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Xcode can read through a project’s code to find invocations of"},{"type":"text","text":" "},{"code":"NSLocalizedString(_:tableName:bundle:value:comment:)","type":"codeVoice"},{"type":"text","text":" and automatically"},{"type":"text","text":" "},{"text":"generate the appropriate strings files for the project’s base localization.","type":"text"}]},{"inlineContent":[{"text":"In Xcode, open the project file and, in the ","type":"text"},{"code":"Edit","type":"codeVoice"},{"type":"text","text":" menu, select"},{"type":"text","text":" "},{"code":"Export for Localization","type":"codeVoice"},{"type":"text","text":". This will generate an XLIFF bundle containing"},{"text":" ","type":"text"},{"type":"text","text":"strings files derived from your code along with other localizable assets."},{"type":"text","text":" "},{"code":"xcodebuild","type":"codeVoice"},{"type":"text","text":" can also be used to generate the localization bundle from the"},{"text":" ","type":"text"},{"text":"command line with the ","type":"text"},{"code":"exportLocalizations","type":"codeVoice"},{"text":" option.","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":["xcodebuild -exportLocalizations -project <projectname>.xcodeproj \\","                                -localizationPath <path>"]},{"inlineContent":[{"type":"text","text":"These bundles can be sent to translators for localization, and then"},{"text":" ","type":"text"},{"type":"text","text":"reimported into your Xcode project. In Xcode, open the project file. In the"},{"text":" ","type":"text"},{"code":"Edit","type":"codeVoice"},{"type":"text","text":" menu, select "},{"code":"Import Localizations...","type":"codeVoice"},{"text":", and select the XLIFF","type":"text"},{"type":"text","text":" "},{"type":"text","text":"folder to import. You can also use "},{"code":"xcodebuild","type":"codeVoice"},{"text":" to import localizations with","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the "},{"type":"codeVoice","code":"importLocalizations"},{"type":"text","text":" option."}],"type":"paragraph"},{"syntax":null,"type":"codeListing","code":["xcodebuild -importLocalizations -project <projectname>.xcodeproj \\","                                -localizationPath <path>"]},{"text":"Choose Meaningful Keys","type":"heading","level":2,"anchor":"Choose-Meaningful-Keys"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Words can often have multiple different meanings depending on the context"},{"text":" ","type":"text"},{"type":"text","text":"in which they’re used. For example, the word “Book” can be used as a noun—a"},{"type":"text","text":" "},{"type":"text","text":"printed literary work—and it can be used as a verb—the action of making a"},{"text":" ","type":"text"},{"type":"text","text":"reservation. Words with different meanings which share the same spelling are"},{"text":" ","type":"text"},{"text":"heteronyms.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"Different languages often have different heteronyms. “Book” in English is","type":"text"},{"type":"text","text":" "},{"text":"one such heteronym, but that’s not so in French, where the noun translates","type":"text"},{"type":"text","text":" "},{"text":"to “Livre”, and the verb translates to “Réserver”. For this reason, it’s","type":"text"},{"type":"text","text":" "},{"text":"important make sure that each use of the same phrase is translated","type":"text"},{"type":"text","text":" "},{"text":"appropriately for its context by assigning unique keys to each phrase and","type":"text"},{"text":" ","type":"text"},{"text":"adding a description comment describing how that phrase is used.","type":"text"}]},{"code":["NSLocalizedString(\"book-tag-title\", value: \"Book\", comment: \"\"\"","noun: A label attached to literary items in the library.","\"\"\")","","NSLocalizedString(\"book-button-title\", value: \"Book\", comment: \"\"\"","verb: Title of the button that makes a reservation.","\"\"\")"],"type":"codeListing","syntax":null},{"anchor":"Use-Only-String-Literals","level":2,"type":"heading","text":"Use Only String Literals"},{"type":"paragraph","inlineContent":[{"type":"text","text":"String literal values must be used with "},{"code":"key","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"tableName"},{"text":", ","type":"text"},{"type":"codeVoice","code":"value"},{"text":", and","type":"text"},{"text":" ","type":"text"},{"code":"comment","type":"codeVoice"},{"text":".","type":"text"}]},{"inlineContent":[{"text":"Xcode does not evaluate interpolated strings and string variables when","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"generating strings files from code. Attempting to localize a string using"},{"type":"text","text":" "},{"type":"text","text":"those language features will cause Xcode to export something that resembles"},{"type":"text","text":" "},{"type":"text","text":"the original code expression instead of its expected value at runtime."},{"type":"text","text":" "},{"text":"Translators would then translate that exported value—leaving","type":"text"},{"type":"text","text":" "},{"text":"international users with a localized string containing code.","type":"text"}],"type":"paragraph"},{"code":["\/\/ Translators will see \"1 + 1 = (1 + 1)\".","\/\/ International users will see a localization \"1 + 1 = (1 + 1)\".","let localizedString = NSLocalizedString(\"string-interpolation\",","                                        value: \"1 + 1 = \\(1 + 1)\"","                                        comment: \"A math equation.\")"],"syntax":null,"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"To dynamically insert values within localized strings, set "},{"type":"codeVoice","code":"value"},{"type":"text","text":" to a"},{"text":" ","type":"text"},{"type":"text","text":"format string, and use "},{"code":"String.localizedStringWithFormat(_:_:)","type":"codeVoice"},{"type":"text","text":" to insert"},{"text":" ","type":"text"},{"type":"text","text":"those values."}]},{"type":"codeListing","syntax":null,"code":["\/\/ Translators will see \"1 + 1 = %d\" (they know what \"%d\" means).","\/\/ International users will see a localization of \"1 + 1 = 2\".","let format = NSLocalizedString(\"string-literal\",","                               value: \"1 + 1 = %d\",","                               comment: \"A math equation.\")","let localizedString = String.localizedStringWithFormat(format, (1 + 1))"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Multiline string literals are technically supported, but will result in"},{"text":" ","type":"text"},{"text":"unexpected behavior during internationalization. A newline will be inserted","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"before and after the body of text within the string, and translators will"},{"type":"text","text":" "},{"text":"likely preserve those in their internationalizations.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"To preserve some of the aesthetics of having newlines in the string mirrored"},{"text":" ","type":"text"},{"type":"text","text":"in their code representation, string literal concatenation with the "},{"type":"codeVoice","code":"+"},{"type":"text","text":" "},{"type":"text","text":"operator can be used."}]},{"syntax":null,"type":"codeListing","code":["NSLocalizedString(\"multiline-string-literal\",","                  value: \"\"\"","This multiline string literal won't work as expected.","An extra newline is added to the beginning and end of the string.","\"\"\",","                  comment: \"The description of a sample of code.\")","","NSLocalizedString(\"string-literal-contatenation\",","                  value: \"This string literal concatenated with\"","                       + \"this other string literal works just fine.\",","                  comment: \"The description of a sample of code.\")"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Since comments aren’t localized, multiline string literals can be safely"},{"type":"text","text":" "},{"type":"text","text":"used with "},{"type":"codeVoice","code":"comment"},{"type":"text","text":"."}]},{"type":"heading","level":2,"anchor":"Work-with-Manually-Managed-Strings","text":"Work with Manually Managed Strings"},{"inlineContent":[{"text":"If having Xcode generate strings files from code isn’t desired behavior,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"call "},{"code":"Bundle.localizedString(forKey:value:table:)","type":"codeVoice"},{"type":"text","text":" instead."}],"type":"paragraph"},{"code":["let greeting = Bundle.localizedString(forKey: \"program-greeting\",","                                      value: \"Hello, World!\",","                                      table: \"Localization\")"],"type":"codeListing","syntax":null},{"type":"paragraph","inlineContent":[{"text":"However, this requires the manual creation and management of that table’s","type":"text"},{"text":" ","type":"text"},{"text":"strings file.","type":"text"}]},{"syntax":null,"type":"codeListing","code":["\/* Localization.strings *\/","","\/* A friendly greeting to the user when the program starts. *\/","\"program-greeting\" = \"Hello, World!\";"]},{"style":"note","name":"Note","content":[{"inlineContent":[{"type":"text","text":"Although "},{"type":"codeVoice","code":"NSLocalizedString(_:tableName:bundle:value:comment:)"},{"type":"text","text":" "},{"type":"text","text":"and "},{"code":"Bundle.localizedString(forKey:value:table:)","type":"codeVoice"},{"type":"text","text":" can be used in a project"},{"text":" ","type":"text"},{"type":"text","text":"at the same time, data from manually managed strings files will be"},{"type":"text","text":" "},{"text":"overwritten by Xcode when their table is also used to look up localized","type":"text"},{"text":" ","type":"text"},{"text":"strings with ","type":"text"},{"code":"NSLocalizedString(_:tableName:bundle:value:comment:)","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}],"type":"aside"}],"kind":"content"}],"kind":"symbol","metadata":{"roleHeading":"Function","modules":[{"name":"FoundationX"}],"title":"NSLocalizedString(_:tableName:bundle:value:comment:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NSLocalizedString","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":", "},{"text":"tableName","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":"?, "},{"text":"bundle","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"c:objc(cs)NSBundle","kind":"typeIdentifier","text":"Bundle"},{"kind":"text","text":", "},{"kind":"externalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"comment"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"}],"role":"symbol","symbolKind":"func","externalID":"s:10Foundation17NSLocalizedString_9tableName6bundle5value7commentS2S_SSSgSo8NSBundleCS2StF","platforms":[{"introducedAt":"8.0","beta":false,"name":"iOS","unavailable":false,"deprecated":false},{"name":"macOS","beta":false,"introducedAt":"10.10","deprecated":false,"unavailable":false},{"introducedAt":"9.0","beta":false,"name":"tvOS","deprecated":false,"unavailable":false},{"beta":false,"deprecated":false,"name":"watchOS","introducedAt":"2.0","unavailable":false}]},"sections":[],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX"]]},"variants":[{"paths":["\/documentation\/foundationx\/nslocalizedstring(_:tablename:bundle:value:comment:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/NSLocalizedString(_:tableName:bundle:value:comment:)"},"schemaVersion":{"major":0,"patch":0,"minor":3},"abstract":[{"type":"text","text":"Returns the localized version of a string."}],"references":{"doc://com.swallow.documentation.FoundationX/documentation/FoundationX":{"abstract":[],"kind":"symbol","title":"FoundationX","identifier":"doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX","url":"\/documentation\/foundationx","role":"collection","type":"topic"},"doc://com.swallow.documentation.FoundationX/documentation/FoundationX/Bundle":{"type":"topic","kind":"symbol","title":"Bundle","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Bundle"}],"identifier":"doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/Bundle","abstract":[],"url":"\/documentation\/foundationx\/bundle","navigatorTitle":[{"text":"Bundle","kind":"identifier"}],"role":"symbol"},"doc://com.swallow.documentation.FoundationX/documentation/FoundationX/NSLocalizedString(_:tableName:bundle:value:comment:)":{"abstract":[{"type":"text","text":"Returns the localized version of a string."}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/NSLocalizedString(_:tableName:bundle:value:comment:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"NSLocalizedString"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"tableName","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"kind":"text","text":"?, "},{"text":"bundle","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSBundle","text":"Bundle"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"value"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"comment"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"}],"type":"topic","title":"NSLocalizedString(_:tableName:bundle:value:comment:)","url":"\/documentation\/foundationx\/nslocalizedstring(_:tablename:bundle:value:comment:)"}}}