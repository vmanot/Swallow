{"variants":[{"paths":["\/documentation\/foundationx\/personnamecomponents\/formatstyle\/decodable-implementations"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"topicSections":[{"title":"Type Methods","generated":true,"identifiers":["doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/PersonNameComponents\/FormatStyle\/decode(from:)","doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/PersonNameComponents\/FormatStyle\/decode(from:forKey:)","doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/PersonNameComponents\/FormatStyle\/decodeIfPresent(from:)-79qfy","doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/PersonNameComponents\/FormatStyle\/decodeIfPresent(from:)-886yz","doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/PersonNameComponents\/FormatStyle\/decodeIfPresent(from:forKey:)"],"anchor":"Type-Methods"}],"metadata":{"title":"Decodable Implementations","role":"collectionGroup","modules":[{"name":"FoundationX"}],"roleHeading":"API Collection"},"identifier":{"url":"doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/PersonNameComponents\/FormatStyle\/Decodable-Implementations","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX","doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/PersonNameComponents","doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/PersonNameComponents\/FormatStyle"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"article","references":{"doc://com.swallow.documentation.FoundationX/documentation/FoundationX/PersonNameComponents/FormatStyle/decodeIfPresent(from:)-79qfy":{"type":"topic","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"decodeIfPresent","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Container","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"from"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"text":"Container","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"title":"decodeIfPresent(from:)","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/PersonNameComponents\/FormatStyle\/decodeIfPresent(from:)-79qfy","url":"\/documentation\/foundationx\/personnamecomponents\/formatstyle\/decodeifpresent(from:)-79qfy","abstract":[],"kind":"symbol"},"doc://com.swallow.documentation.FoundationX/documentation/FoundationX/PersonNameComponents/FormatStyle":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"FormatStyle","kind":"identifier"}],"role":"symbol","title":"PersonNameComponents.FormatStyle","identifier":"doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/PersonNameComponents\/FormatStyle","type":"topic","kind":"symbol","url":"\/documentation\/foundationx\/personnamecomponents\/formatstyle","navigatorTitle":[{"kind":"identifier","text":"FormatStyle"}],"abstract":[]},"doc://com.swallow.documentation.FoundationX/documentation/FoundationX/PersonNameComponents/FormatStyle/decode(from:forKey:)":{"identifier":"doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/PersonNameComponents\/FormatStyle\/decode(from:forKey:)","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"decode"},{"kind":"text","text":"<"},{"text":"Container","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"from","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Container","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"forKey"},{"text":": ","kind":"text"},{"text":"Container","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Key","preciseIdentifier":"s:s30KeyedDecodingContainerProtocolP3KeyQa"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"title":"decode(from:forKey:)","kind":"symbol","url":"\/documentation\/foundationx\/personnamecomponents\/formatstyle\/decode(from:forkey:)","type":"topic","abstract":[]},"doc://com.swallow.documentation.FoundationX/documentation/FoundationX/PersonNameComponents/FormatStyle/decodeIfPresent(from:)-886yz":{"identifier":"doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/PersonNameComponents\/FormatStyle\/decodeIfPresent(from:)-886yz","kind":"symbol","type":"topic","url":"\/documentation\/foundationx\/personnamecomponents\/formatstyle\/decodeifpresent(from:)-886yz","abstract":[],"title":"decodeIfPresent(from:)","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"decodeIfPresent"},{"text":"<","kind":"text"},{"text":"Container","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"from"},{"text":": ","kind":"text"},{"text":"Container","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"role":"symbol"},"doc://com.swallow.documentation.FoundationX/documentation/FoundationX/PersonNameComponents/FormatStyle/decodeIfPresent(from:forKey:)":{"identifier":"doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/PersonNameComponents\/FormatStyle\/decodeIfPresent(from:forKey:)","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"decodeIfPresent","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Container"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"from"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Container"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"forKey"},{"kind":"text","text":": "},{"text":"Container","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:s30KeyedDecodingContainerProtocolP3KeyQa","kind":"typeIdentifier","text":"Key"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"Self","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"title":"decodeIfPresent(from:forKey:)","kind":"symbol","url":"\/documentation\/foundationx\/personnamecomponents\/formatstyle\/decodeifpresent(from:forkey:)","type":"topic","abstract":[]},"doc://com.swallow.documentation.FoundationX/documentation/FoundationX/PersonNameComponents":{"abstract":[],"title":"PersonNameComponents","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PersonNameComponents","kind":"identifier"}],"url":"\/documentation\/foundationx\/personnamecomponents","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/PersonNameComponents","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PersonNameComponents"}]},"doc://com.swallow.documentation.FoundationX/documentation/FoundationX":{"abstract":[],"kind":"symbol","title":"FoundationX","identifier":"doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX","url":"\/documentation\/foundationx","role":"collection","type":"topic"},"doc://com.swallow.documentation.FoundationX/documentation/FoundationX/PersonNameComponents/FormatStyle/decode(from:)":{"type":"topic","identifier":"doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/PersonNameComponents\/FormatStyle\/decode(from:)","url":"\/documentation\/foundationx\/personnamecomponents\/formatstyle\/decode(from:)","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"decode","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Container","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"from"},{"kind":"text","text":": "},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Container","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"title":"decode(from:)","role":"symbol","abstract":[],"kind":"symbol"}}}