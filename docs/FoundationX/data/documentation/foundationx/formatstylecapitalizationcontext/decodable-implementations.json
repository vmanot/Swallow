{"metadata":{"modules":[{"name":"FoundationX"}],"roleHeading":"API Collection","role":"collectionGroup","title":"Decodable Implementations"},"kind":"article","schemaVersion":{"major":0,"minor":3,"patch":0},"topicSections":[{"identifiers":["doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/FormatStyleCapitalizationContext\/decode(from:)","doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/FormatStyleCapitalizationContext\/decode(from:forKey:)","doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/FormatStyleCapitalizationContext\/decodeIfPresent(from:)-3xlt2","doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/FormatStyleCapitalizationContext\/decodeIfPresent(from:)-5hm1w","doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/FormatStyleCapitalizationContext\/decodeIfPresent(from:forKey:)"],"generated":true,"anchor":"Type-Methods","title":"Type Methods"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/foundationx\/formatstylecapitalizationcontext\/decodable-implementations"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/FormatStyleCapitalizationContext\/Decodable-Implementations"},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX","doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/FormatStyleCapitalizationContext"]]},"sections":[],"references":{"doc://com.swallow.documentation.FoundationX/documentation/FoundationX/FormatStyleCapitalizationContext/decode(from:forKey:)":{"url":"\/documentation\/foundationx\/formatstylecapitalizationcontext\/decode(from:forkey:)","abstract":[],"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"decode"},{"text":"<","kind":"text"},{"text":"Container","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"from"},{"kind":"text","text":": "},{"text":"Container","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"forKey","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Container","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s30KeyedDecodingContainerProtocolP3KeyQa","text":"Key"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Self","kind":"typeIdentifier"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/FormatStyleCapitalizationContext\/decode(from:forKey:)","title":"decode(from:forKey:)"},"doc://com.swallow.documentation.FoundationX/documentation/FoundationX/FormatStyleCapitalizationContext/decodeIfPresent(from:)-5hm1w":{"kind":"symbol","title":"decodeIfPresent(from:)","type":"topic","abstract":[],"url":"\/documentation\/foundationx\/formatstylecapitalizationcontext\/decodeifpresent(from:)-5hm1w","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/FormatStyleCapitalizationContext\/decodeIfPresent(from:)-5hm1w","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"decodeIfPresent","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Container","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"from"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"text":"Container","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"?"}]},"doc://com.swallow.documentation.FoundationX/documentation/FoundationX/FormatStyleCapitalizationContext":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"FormatStyleCapitalizationContext"}],"title":"FormatStyleCapitalizationContext","identifier":"doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/FormatStyleCapitalizationContext","abstract":[],"type":"topic","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"FormatStyleCapitalizationContext"}],"url":"\/documentation\/foundationx\/formatstylecapitalizationcontext"},"doc://com.swallow.documentation.FoundationX/documentation/FoundationX":{"abstract":[],"kind":"symbol","title":"FoundationX","identifier":"doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX","url":"\/documentation\/foundationx","role":"collection","type":"topic"},"doc://com.swallow.documentation.FoundationX/documentation/FoundationX/FormatStyleCapitalizationContext/decodeIfPresent(from:)-3xlt2":{"identifier":"doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/FormatStyleCapitalizationContext\/decodeIfPresent(from:)-3xlt2","type":"topic","url":"\/documentation\/foundationx\/formatstylecapitalizationcontext\/decodeifpresent(from:)-3xlt2","kind":"symbol","abstract":[],"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"decodeIfPresent","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Container","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"from","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Container"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"?"}],"role":"symbol","title":"decodeIfPresent(from:)"},"doc://com.swallow.documentation.FoundationX/documentation/FoundationX/FormatStyleCapitalizationContext/decode(from:)":{"abstract":[],"url":"\/documentation\/foundationx\/formatstylecapitalizationcontext\/decode(from:)","role":"symbol","title":"decode(from:)","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/FormatStyleCapitalizationContext\/decode(from:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"decode","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Container","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"from"},{"kind":"text","text":": "},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Container"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"}],"type":"topic"},"doc://com.swallow.documentation.FoundationX/documentation/FoundationX/FormatStyleCapitalizationContext/decodeIfPresent(from:forKey:)":{"role":"symbol","kind":"symbol","url":"\/documentation\/foundationx\/formatstylecapitalizationcontext\/decodeifpresent(from:forkey:)","abstract":[],"title":"decodeIfPresent(from:forKey:)","type":"topic","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"decodeIfPresent","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Container","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"from","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Container","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"forKey","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Container"},{"text":".","kind":"text"},{"text":"Key","kind":"typeIdentifier","preciseIdentifier":"s:s30KeyedDecodingContainerProtocolP3KeyQa"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"identifier":"doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/FormatStyleCapitalizationContext\/decodeIfPresent(from:forKey:)"}}}