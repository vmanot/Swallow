{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/Date\/ParseStrategy\/RegexComponent-Implementations"},"metadata":{"modules":[{"name":"FoundationX"}],"roleHeading":"API Collection","role":"collectionGroup","title":"RegexComponent Implementations"},"topicSections":[{"anchor":"Instance-Properties","generated":true,"title":"Instance Properties","identifiers":["doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/Date\/ParseStrategy\/regex"]},{"title":"Type Aliases","identifiers":["doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/Date\/ParseStrategy\/DateStyle","doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/Date\/ParseStrategy\/RegexOutput","doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/Date\/ParseStrategy\/TimeStyle"],"anchor":"Type-Aliases","generated":true},{"anchor":"Type-Methods","identifiers":["doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/Date\/ParseStrategy\/date(_:locale:timeZone:calendar:)","doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/Date\/ParseStrategy\/date(format:locale:timeZone:calendar:twoDigitStartDate:)","doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/Date\/ParseStrategy\/dateTime(date:time:locale:timeZone:calendar:)"],"generated":true,"title":"Type Methods"}],"kind":"article","hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX","doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/Date","doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/Date\/ParseStrategy"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/foundationx\/date\/parsestrategy\/regexcomponent-implementations"]}],"references":{"doc://com.swallow.documentation.FoundationX/documentation/FoundationX":{"abstract":[],"kind":"symbol","title":"FoundationX","identifier":"doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX","url":"\/documentation\/foundationx","role":"collection","type":"topic"},"doc://com.swallow.documentation.FoundationX/documentation/FoundationX/Date/ParseStrategy":{"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ParseStrategy","kind":"identifier"}],"url":"\/documentation\/foundationx\/date\/parsestrategy","navigatorTitle":[{"kind":"identifier","text":"ParseStrategy"}],"identifier":"doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/Date\/ParseStrategy","role":"symbol","abstract":[{"text":"Options for parsing string representations of dates to create a ","type":"text"},{"code":"Date","type":"codeVoice"},{"text":" instance.","type":"text"}],"title":"Date.ParseStrategy","type":"topic"},"doc://com.swallow.documentation.FoundationX/documentation/FoundationX/Date/ParseStrategy/dateTime(date:time:locale:timeZone:calendar:)":{"identifier":"doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/Date\/ParseStrategy\/dateTime(date:time:locale:timeZone:calendar:)","role":"symbol","title":"dateTime(date:time:locale:timeZone:calendar:)","kind":"symbol","url":"\/documentation\/foundationx\/date\/parsestrategy\/datetime(date:time:locale:timezone:calendar:)","type":"topic","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"dateTime","kind":"identifier"},{"kind":"text","text":"("},{"text":"date","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Date","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DateV"},{"kind":"text","text":"."},{"text":"FormatStyle","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DateV11FormatStyleV"},{"text":".","kind":"text"},{"text":"DateStyle","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DateV11FormatStyleV0bD0V"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"time"},{"kind":"text","text":": "},{"text":"Date","preciseIdentifier":"s:10Foundation4DateV","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DateV11FormatStyleV","text":"FormatStyle"},{"text":".","kind":"text"},{"text":"TimeStyle","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DateV11FormatStyleV04TimeD0V"},{"kind":"text","text":", "},{"text":"locale","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Locale","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation6LocaleV"},{"text":", ","kind":"text"},{"text":"timeZone","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"TimeZone","preciseIdentifier":"s:10Foundation8TimeZoneV"},{"text":", ","kind":"text"},{"text":"calendar","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10Foundation8CalendarV","kind":"typeIdentifier","text":"Calendar"},{"text":"?) -> ","kind":"text"},{"preciseIdentifier":"s:10Foundation4DateV","text":"Date","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"ParseStrategy","preciseIdentifier":"s:10Foundation4DateV13ParseStrategyV"}],"conformance":{"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Date.ParseStrategy","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"abstract":[{"type":"text","text":"Creates a regex component to match a localized date and time string and capture the string as a "},{"code":"Date","type":"codeVoice"},{"text":". The date string is expected to follow the format of what ","type":"text"},{"type":"codeVoice","code":"Date.FormatStyle(date:time:locale:calendar:)"},{"type":"text","text":" produces."}]},"doc://com.swallow.documentation.FoundationX/documentation/FoundationX/Date/ParseStrategy/DateStyle":{"identifier":"doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/Date\/ParseStrategy\/DateStyle","kind":"symbol","abstract":[],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Self"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Date.ParseStrategy"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"title":"Date.ParseStrategy.DateStyle","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"text":"DateStyle","kind":"identifier"}],"url":"\/documentation\/foundationx\/date\/parsestrategy\/datestyle","navigatorTitle":[{"text":"DateStyle","kind":"identifier"}]},"doc://com.swallow.documentation.FoundationX/documentation/FoundationX/Date/ParseStrategy/date(format:locale:timeZone:calendar:twoDigitStartDate:)":{"type":"topic","identifier":"doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/Date\/ParseStrategy\/date(format:locale:timeZone:calendar:twoDigitStartDate:)","abstract":[{"text":"Creates a regex component to match a localized date string following the specified format and capture the string as a ","type":"text"},{"code":"Date","type":"codeVoice"},{"text":".","type":"text"}],"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"date","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"format"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Date","preciseIdentifier":"s:10Foundation4DateV"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DateV12FormatStringV","text":"FormatString"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"locale"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation6LocaleV","text":"Locale"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"timeZone"},{"kind":"text","text":": "},{"text":"TimeZone","preciseIdentifier":"s:10Foundation8TimeZoneV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"calendar"},{"text":": ","kind":"text"},{"text":"Calendar","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation8CalendarV"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"twoDigitStartDate"},{"text":": ","kind":"text"},{"text":"Date","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DateV"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Date.ParseStrategy"},{"type":"text","text":"."}]},"kind":"symbol","title":"date(format:locale:timeZone:calendar:twoDigitStartDate:)","role":"symbol","url":"\/documentation\/foundationx\/date\/parsestrategy\/date(format:locale:timezone:calendar:twodigitstartdate:)"},"doc://com.swallow.documentation.FoundationX/documentation/FoundationX/Date":{"identifier":"doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/Date","abstract":[{"type":"codeVoice","code":"Date"},{"type":"text","text":" represents a single point in time."}],"type":"topic","title":"Date","url":"\/documentation\/foundationx\/date","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Date"}],"navigatorTitle":[{"kind":"identifier","text":"Date"}],"role":"symbol","kind":"symbol"},"doc://com.swallow.documentation.FoundationX/documentation/FoundationX/Date/ParseStrategy/date(_:locale:timeZone:calendar:)":{"identifier":"doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/Date\/ParseStrategy\/date(_:locale:timeZone:calendar:)","role":"symbol","title":"date(_:locale:timeZone:calendar:)","abstract":[{"text":"Creates a regex component to match a localized date string and capture the string as a ","type":"text"},{"code":"Date","type":"codeVoice"},{"text":". The string is expected to follow the format of what ","type":"text"},{"type":"codeVoice","code":"Date.FormatStyle(date:locale:calendar:)"},{"type":"text","text":" produces. "},{"code":"Date","type":"codeVoice"},{"type":"text","text":" created by this regex component would be at 00:00:00 in the specified time zone."}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"date","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DateV","text":"Date"},{"kind":"text","text":"."},{"preciseIdentifier":"s:10Foundation4DateV11FormatStyleV","text":"FormatStyle","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"DateStyle","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DateV11FormatStyleV0bD0V"},{"kind":"text","text":", "},{"text":"locale","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Locale","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation6LocaleV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"timeZone"},{"text":": ","kind":"text"},{"text":"TimeZone","preciseIdentifier":"s:10Foundation8TimeZoneV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"calendar","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation8CalendarV","text":"Calendar"},{"text":"?) -> ","kind":"text"},{"text":"Date","preciseIdentifier":"s:10Foundation4DateV","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DateV13ParseStrategyV","text":"ParseStrategy"}],"kind":"symbol","type":"topic","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Date.ParseStrategy"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"url":"\/documentation\/foundationx\/date\/parsestrategy\/date(_:locale:timezone:calendar:)"},"doc://com.swallow.documentation.FoundationX/documentation/FoundationX/Date/ParseStrategy/RegexOutput":{"kind":"symbol","abstract":[],"role":"symbol","title":"Date.ParseStrategy.RegexOutput","type":"topic","url":"\/documentation\/foundationx\/date\/parsestrategy\/regexoutput","navigatorTitle":[{"text":"RegexOutput","kind":"identifier"}],"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RegexOutput","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/Date\/ParseStrategy\/RegexOutput"},"doc://com.swallow.documentation.FoundationX/documentation/FoundationX/Date/ParseStrategy/TimeStyle":{"identifier":"doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/Date\/ParseStrategy\/TimeStyle","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TimeStyle"}],"title":"Date.ParseStrategy.TimeStyle","kind":"symbol","url":"\/documentation\/foundationx\/date\/parsestrategy\/timestyle","type":"topic","role":"symbol","abstract":[],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" is "},{"code":"Date.ParseStrategy","type":"codeVoice"},{"text":".","type":"text"}]},"navigatorTitle":[{"text":"TimeStyle","kind":"identifier"}]},"doc://com.swallow.documentation.FoundationX/documentation/FoundationX/Date/ParseStrategy/regex":{"abstract":[],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.FoundationX\/documentation\/FoundationX\/Date\/ParseStrategy\/regex","title":"regex","url":"\/documentation\/foundationx\/date\/parsestrategy\/regex","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"regex","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:17_StringProcessing5RegexV","text":"Regex","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"RegexOutput","kind":"typeIdentifier","preciseIdentifier":"s:17_StringProcessing14RegexComponentP0C6OutputQa"},{"kind":"text","text":">"}]}}}