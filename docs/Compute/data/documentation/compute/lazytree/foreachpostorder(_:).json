{"variants":[{"paths":["\/documentation\/compute\/lazytree\/foreachpostorder(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"forEachPostOrder","kind":"identifier"},{"kind":"text","text":"("},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"body"},{"kind":"text","text":": ("},{"text":"TreeValue","preciseIdentifier":"s:7Compute12TreeProtocolP0B5ValueQa","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/TreeProtocol\/TreeValue"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"}],"sections":[],"abstract":[{"type":"text","text":"Inherited from "},{"code":"RecursiveTreeProtocol.forEachPostOrder(_:)","type":"codeVoice"},{"type":"text","text":"."}],"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyTree\/forEachPostOrder(_:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyTree","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyTree\/RecursiveTreeProtocol-Implementations"]]},"metadata":{"roleHeading":"Instance Method","role":"symbol","externalID":"s:7Compute21RecursiveTreeProtocolPAAE16forEachPostOrderyyy0C5ValueQzXEF::SYNTHESIZED::s:7Compute8LazyTreeV","symbolKind":"method","modules":[{"name":"Compute"}],"extendedModule":"Compute","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"forEachPostOrder","kind":"identifier"},{"text":"((","kind":"text"},{"kind":"typeIdentifier","text":"TreeValue","preciseIdentifier":"s:7Compute12TreeProtocolP0B5ValueQa"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"text":")","kind":"text"}],"title":"forEachPostOrder(_:)"},"kind":"symbol","references":{"doc://com.swallow.documentation.Compute/documentation/Compute/LazyTree/forEachPostOrder(_:)":{"kind":"symbol","type":"topic","url":"\/documentation\/compute\/lazytree\/foreachpostorder(_:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"forEachPostOrder"},{"kind":"text","text":"(("},{"preciseIdentifier":"s:7Compute12TreeProtocolP0B5ValueQa","text":"TreeValue","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"kind":"text","text":")"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyTree\/forEachPostOrder(_:)","abstract":[],"title":"forEachPostOrder(_:)","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/LazyTree/RecursiveTreeProtocol-Implementations":{"type":"topic","title":"RecursiveTreeProtocol Implementations","url":"\/documentation\/compute\/lazytree\/recursivetreeprotocol-implementations","abstract":[],"kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyTree\/RecursiveTreeProtocol-Implementations","role":"collectionGroup"},"doc://com.swallow.documentation.Compute/documentation/Compute/TreeProtocol/TreeValue":{"url":"\/documentation\/compute\/treeprotocol\/treevalue","type":"topic","title":"TreeValue","fragments":[{"text":"associatedtype","kind":"keyword"},{"kind":"text","text":" "},{"text":"TreeValue","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/TreeProtocol\/TreeValue","kind":"symbol","abstract":[{"text":"The type of value stored in each node of the tree.","type":"text"}],"required":true,"role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/LazyTree":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LazyTree","kind":"identifier"}],"kind":"symbol","title":"LazyTree","abstract":[],"role":"symbol","type":"topic","navigatorTitle":[{"text":"LazyTree","kind":"identifier"}],"url":"\/documentation\/compute\/lazytree","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyTree"},"doc://com.swallow.documentation.Compute/documentation/Compute/Void":{"abstract":[{"text":"The return type of functions that donâ€™t explicitly specify a return type,","type":"text"},{"text":" ","type":"text"},{"text":"that is, an empty tuple ","type":"text"},{"type":"codeVoice","code":"()"},{"type":"text","text":"."}],"type":"topic","title":"Void","url":"\/documentation\/compute\/void","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Void"}],"navigatorTitle":[{"text":"Void","kind":"identifier"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Void"}}}