{"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/MutableRecursiveTree"]]},"kind":"symbol","schemaVersion":{"minor":3,"major":0,"patch":0},"variants":[{"paths":["\/documentation\/compute\/mutablerecursivetree\/appendchild(value:)"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"extendedModule":"Compute","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"appendChild","kind":"identifier"},{"text":"(","kind":"text"},{"text":"value","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Compute12TreeProtocolP0B5ValueQa","kind":"typeIdentifier","text":"TreeValue"},{"kind":"text","text":")"}],"role":"symbol","roleHeading":"Instance Method","modules":[{"name":"Compute"}],"title":"appendChild(value:)","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"HomogenousTree"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Children"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"RangeReplaceableCollection"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"externalID":"s:7Compute20MutableRecursiveTreePA2A010HomogenousD0RzSm8ChildrenAA0D8ProtocolPRpzrlE11appendChild5valuey0D5ValueAGQz_tAA013ConstructibleD0RzrlF"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"mutating","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"appendChild","kind":"identifier"},{"text":"(","kind":"text"},{"text":"value","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Compute12TreeProtocolP0B5ValueQa","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/TreeProtocol\/TreeValue","text":"TreeValue"},{"kind":"text","text":") "},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ConstructibleTree","preciseIdentifier":"s:7Compute17ConstructibleTreeP","kind":"typeIdentifier","text":"ConstructibleTree"}]}]}],"sections":[],"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/MutableRecursiveTree\/appendChild(value:)","interfaceLanguage":"swift"},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/MutableRecursiveTree/appendChild(value:)":{"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"HomogenousTree"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Children"},{"text":" conforms to ","type":"text"},{"code":"RangeReplaceableCollection","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"appendChild"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"value"},{"kind":"text","text":": "},{"text":"TreeValue","kind":"typeIdentifier","preciseIdentifier":"s:7Compute12TreeProtocolP0B5ValueQa"},{"text":")","kind":"text"}],"url":"\/documentation\/compute\/mutablerecursivetree\/appendchild(value:)","type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/MutableRecursiveTree\/appendChild(value:)","role":"symbol","title":"appendChild(value:)","abstract":[],"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/MutableRecursiveTree":{"type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"MutableRecursiveTree"}],"url":"\/documentation\/compute\/mutablerecursivetree","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"MutableRecursiveTree","kind":"identifier"}],"abstract":[{"type":"text","text":"A mutable tree."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/MutableRecursiveTree","title":"MutableRecursiveTree"},"doc://com.swallow.documentation.Compute/documentation/Compute/TreeProtocol/TreeValue":{"url":"\/documentation\/compute\/treeprotocol\/treevalue","type":"topic","title":"TreeValue","fragments":[{"text":"associatedtype","kind":"keyword"},{"kind":"text","text":" "},{"text":"TreeValue","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/TreeProtocol\/TreeValue","kind":"symbol","abstract":[{"text":"The type of value stored in each node of the tree.","type":"text"}],"required":true,"role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/ConstructibleTree":{"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ConstructibleTree"}],"role":"symbol","abstract":[{"type":"text","text":"A tree that can be constructed from a value and a list of children."}],"navigatorTitle":[{"kind":"identifier","text":"ConstructibleTree"}],"title":"ConstructibleTree","type":"topic","url":"\/documentation\/compute\/constructibletree","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ConstructibleTree"}}}