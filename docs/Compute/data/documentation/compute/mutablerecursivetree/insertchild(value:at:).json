{"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/MutableRecursiveTree"]]},"schemaVersion":{"major":0,"patch":0,"minor":3},"kind":"symbol","identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/MutableRecursiveTree\/insertChild(value:at:)","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"mutating"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"insertChild"},{"kind":"text","text":"("},{"text":"value","kind":"externalParam"},{"kind":"text","text":": "},{"text":"TreeValue","preciseIdentifier":"s:7Compute12TreeProtocolP0B5ValueQa","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/TreeProtocol\/TreeValue"},{"kind":"text","text":", "},{"text":"at","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"index","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Compute12TreeProtocolP8ChildrenQa","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/TreeProtocol\/Children-swift.associatedtype","text":"Children"},{"text":".","kind":"text"},{"text":"Index","kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/Index"},{"kind":"text","text":") "},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ConstructibleTree","kind":"typeIdentifier","preciseIdentifier":"s:7Compute17ConstructibleTreeP","text":"ConstructibleTree"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"}],"metadata":{"modules":[{"name":"Compute"}],"role":"symbol","conformance":{"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"code":"HomogenousTree","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Children"},{"type":"text","text":" conforms to "},{"code":"RangeReplaceableCollection","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"title":"insertChild(value:at:)","roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"insertChild","kind":"identifier"},{"text":"(","kind":"text"},{"text":"value","kind":"externalParam"},{"kind":"text","text":": "},{"text":"TreeValue","preciseIdentifier":"s:7Compute12TreeProtocolP0B5ValueQa","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"at","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Compute12TreeProtocolP8ChildrenQa","text":"Children","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Index","preciseIdentifier":"s:Sl5IndexQa","kind":"typeIdentifier"},{"text":")","kind":"text"}],"extendedModule":"Compute","externalID":"s:7Compute20MutableRecursiveTreePA2A010HomogenousD0RzSm8ChildrenAA0D8ProtocolPRpzrlE11insertChild5value2aty0D5ValueAGQz_AeG_5IndexSlQZtAA013ConstructibleD0RzrlF","symbolKind":"method"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/mutablerecursivetree\/insertchild(value:at:)"]}],"sections":[],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Collection/Index":{"url":"\/documentation\/compute\/collection\/index","required":true,"role":"symbol","title":"Index","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Index","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"Comparable","preciseIdentifier":"s:SL","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"A type that represents a position in the collection."}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/Index","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/ConstructibleTree":{"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ConstructibleTree"}],"role":"symbol","abstract":[{"type":"text","text":"A tree that can be constructed from a value and a list of children."}],"navigatorTitle":[{"kind":"identifier","text":"ConstructibleTree"}],"title":"ConstructibleTree","type":"topic","url":"\/documentation\/compute\/constructibletree","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ConstructibleTree"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/MutableRecursiveTree":{"type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"MutableRecursiveTree"}],"url":"\/documentation\/compute\/mutablerecursivetree","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"MutableRecursiveTree","kind":"identifier"}],"abstract":[{"type":"text","text":"A mutable tree."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/MutableRecursiveTree","title":"MutableRecursiveTree"},"doc://com.swallow.documentation.Compute/documentation/Compute/TreeProtocol/TreeValue":{"url":"\/documentation\/compute\/treeprotocol\/treevalue","type":"topic","title":"TreeValue","fragments":[{"text":"associatedtype","kind":"keyword"},{"kind":"text","text":" "},{"text":"TreeValue","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/TreeProtocol\/TreeValue","kind":"symbol","abstract":[{"text":"The type of value stored in each node of the tree.","type":"text"}],"required":true,"role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/TreeProtocol/Children-swift.associatedtype":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/TreeProtocol\/Children-swift.associatedtype","abstract":[{"type":"text","text":"The type of sequence that represents the children of a node in the tree."}],"url":"\/documentation\/compute\/treeprotocol\/children-swift.associatedtype","title":"Children","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"associatedtype"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Children"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:ST","text":"Sequence","kind":"typeIdentifier"}],"required":true,"role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/MutableRecursiveTree/insertChild(value:at:)":{"kind":"symbol","title":"insertChild(value:at:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"insertChild","kind":"identifier"},{"kind":"text","text":"("},{"text":"value","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Compute12TreeProtocolP0B5ValueQa","text":"TreeValue"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"at"},{"text":": ","kind":"text"},{"text":"Children","kind":"typeIdentifier","preciseIdentifier":"s:7Compute12TreeProtocolP8ChildrenQa"},{"text":".","kind":"text"},{"preciseIdentifier":"s:Sl5IndexQa","kind":"typeIdentifier","text":"Index"},{"kind":"text","text":")"}],"abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/MutableRecursiveTree\/insertChild(value:at:)","conformance":{"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"code":"HomogenousTree","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"Children","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"RangeReplaceableCollection","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"url":"\/documentation\/compute\/mutablerecursivetree\/insertchild(value:at:)","role":"symbol","type":"topic"}}}