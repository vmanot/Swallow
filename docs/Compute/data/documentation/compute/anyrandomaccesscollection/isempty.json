{"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isEmpty"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bool","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":" { "},{"text":"get","kind":"keyword"},{"text":" }","kind":"text"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"level":2,"text":"Discussion","anchor":"discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"When you need to check whether your collection is empty, use the","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"isEmpty"},{"type":"text","text":" property instead of checking that the "},{"type":"codeVoice","code":"count"},{"type":"text","text":" property is"},{"text":" ","type":"text"},{"text":"equal to zero. For collections that donâ€™t conform to","type":"text"},{"text":" ","type":"text"},{"code":"RandomAccessCollection","type":"codeVoice"},{"text":", accessing the ","type":"text"},{"code":"count","type":"codeVoice"},{"type":"text","text":" property iterates"},{"text":" ","type":"text"},{"type":"text","text":"through the elements of the collection."}]},{"type":"codeListing","syntax":null,"code":["let horseName = \"Silver\"","if horseName.isEmpty {","    print(\"My horse has no name.\")","} else {","    print(\"Hi ho, \\(horseName)!\")","}","\/\/ Prints \"Hi ho, Silver!\")"]},{"name":"Complexity","style":"note","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"O(1)"}]}]}]}],"sections":[],"kind":"symbol","schemaVersion":{"minor":3,"major":0,"patch":0},"abstract":[{"text":"A Boolean value indicating whether the collection is empty.","type":"text"}],"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyRandomAccessCollection\/isEmpty","interfaceLanguage":"swift"},"metadata":{"roleHeading":"Instance Property","modules":[{"relatedModules":["Swift"],"name":"Compute"}],"extendedModule":"Swift","symbolKind":"property","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isEmpty","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"title":"isEmpty","externalID":"s:SlsE7isEmptySbvp::SYNTHESIZED::s:s25AnyRandomAccessCollectionV"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/anyrandomaccesscollection\/isempty"]}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyRandomAccessCollection","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyRandomAccessCollection\/Collection-Implementations"]]},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/AnyRandomAccessCollection/Collection-Implementations":{"url":"\/documentation\/compute\/anyrandomaccesscollection\/collection-implementations","type":"topic","kind":"article","role":"collectionGroup","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyRandomAccessCollection\/Collection-Implementations","abstract":[],"title":"Collection Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/Bool":{"url":"\/documentation\/compute\/bool","role":"symbol","title":"Bool","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Bool","kind":"identifier"}],"abstract":[{"type":"text","text":"A value type whose instances are either "},{"type":"codeVoice","code":"true"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"false"},{"text":".","type":"text"}],"navigatorTitle":[{"text":"Bool","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bool","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/AnyRandomAccessCollection":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyRandomAccessCollection","title":"AnyRandomAccessCollection","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AnyRandomAccessCollection"}],"kind":"symbol","url":"\/documentation\/compute\/anyrandomaccesscollection","abstract":[{"type":"text","text":"A type-erased wrapper over any collection with indices that"},{"type":"text","text":" "},{"text":"support random access traversal.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyRandomAccessCollection"}],"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/AnyRandomAccessCollection/isEmpty":{"title":"isEmpty","type":"topic","kind":"symbol","role":"symbol","abstract":[{"text":"A Boolean value indicating whether the collection is empty.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyRandomAccessCollection\/isEmpty","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"isEmpty","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"url":"\/documentation\/compute\/anyrandomaccesscollection\/isempty"}}}