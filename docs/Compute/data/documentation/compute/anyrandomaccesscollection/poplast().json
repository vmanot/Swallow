{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/anyrandomaccesscollection\/poplast()"]}],"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyRandomAccessCollection\/popLast()","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyRandomAccessCollection","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyRandomAccessCollection\/BidirectionalCollection-Implementations"]]},"abstract":[{"type":"text","text":"Removes and returns the last element of the collection."}],"schemaVersion":{"major":0,"patch":0,"minor":3},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"mutating"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"popLast","kind":"identifier"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Element","preciseIdentifier":"s:ST7ElementQa","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"content","content":[{"text":"Return Value","anchor":"return-value","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"The last element of the collection if the collection has one"},{"type":"text","text":" "},{"type":"text","text":"or more elements; otherwise, "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."}],"type":"paragraph"}]},{"content":[{"level":2,"text":"Discussion","anchor":"discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"You can use ","type":"text"},{"type":"codeVoice","code":"popLast()"},{"type":"text","text":" to remove the last element of a collection that"},{"text":" ","type":"text"},{"text":"might be empty. The ","type":"text"},{"code":"removeLast()","type":"codeVoice"},{"type":"text","text":" method must be used only on a"},{"type":"text","text":" "},{"type":"text","text":"nonempty collection."}]},{"style":"note","content":[{"inlineContent":[{"type":"text","text":"O(1)"}],"type":"paragraph"}],"name":"Complexity","type":"aside"}],"kind":"content"}],"metadata":{"externalID":"s:SKs11SubSequenceQzRszrlE7popLast7ElementQzSgyF::SYNTHESIZED::s:s25AnyRandomAccessCollectionV","extendedModule":"Swift","title":"popLast()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"popLast","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:ST7ElementQa"},{"text":"?","kind":"text"}],"modules":[{"relatedModules":["Swift"],"name":"Compute"}],"roleHeading":"Instance Method","role":"symbol","symbolKind":"method","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" is "},{"code":"Self.SubSequence","type":"codeVoice"},{"type":"text","text":"."}]}},"sections":[],"kind":"symbol","references":{"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/AnyRandomAccessCollection":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyRandomAccessCollection","title":"AnyRandomAccessCollection","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AnyRandomAccessCollection"}],"kind":"symbol","url":"\/documentation\/compute\/anyrandomaccesscollection","abstract":[{"type":"text","text":"A type-erased wrapper over any collection with indices that"},{"type":"text","text":" "},{"text":"support random access traversal.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyRandomAccessCollection"}],"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/AnyRandomAccessCollection/popLast()":{"kind":"symbol","title":"popLast()","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"popLast","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"kind":"text","text":"?"}],"url":"\/documentation\/compute\/anyrandomaccesscollection\/poplast()","role":"symbol","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Self.SubSequence"},{"type":"text","text":"."}]},"abstract":[{"type":"text","text":"Removes and returns the last element of the collection."}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyRandomAccessCollection\/popLast()"},"doc://com.swallow.documentation.Compute/documentation/Compute/AnyRandomAccessCollection/BidirectionalCollection-Implementations":{"title":"BidirectionalCollection Implementations","abstract":[],"url":"\/documentation\/compute\/anyrandomaccesscollection\/bidirectionalcollection-implementations","type":"topic","role":"collectionGroup","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyRandomAccessCollection\/BidirectionalCollection-Implementations","kind":"article"},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence/Element":{"type":"topic","required":true,"abstract":[{"type":"text","text":"A type representing the sequenceâ€™s elements."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"symbol","url":"\/documentation\/compute\/sequence\/element","role":"symbol","title":"Element","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"identifier"}]}}}