{"schemaVersion":{"minor":3,"major":0,"patch":0},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyRandomAccessCollection","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyRandomAccessCollection\/Sequence-Implementations"]]},"abstract":[{"type":"text","text":"Returns the elements of the sequence, sorted."}],"metadata":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"sorted"},{"text":"() -> [","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:ST7ElementQa","text":"Element","kind":"typeIdentifier"},{"kind":"text","text":"]"}],"modules":[{"name":"Compute","relatedModules":["Swift"]}],"symbolKind":"method","conformance":{"constraints":[{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"code":"Comparable","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"roleHeading":"Instance Method","extendedModule":"Swift","title":"sorted()","externalID":"s:STsSL7ElementRpzrlE6sortedSayABGyF::SYNTHESIZED::s:s25AnyRandomAccessCollectionV"},"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyRandomAccessCollection\/sorted()","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/anyrandomaccesscollection\/sorted()"]}],"kind":"symbol","sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"sorted","kind":"identifier"},{"text":"() -> [","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element"},{"kind":"text","text":"]"}],"platforms":["macOS"]}]},{"content":[{"type":"heading","text":"Return Value","anchor":"return-value","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"A sorted array of the sequence’s elements."}]}],"kind":"content"},{"kind":"content","content":[{"text":"Discussion","level":2,"anchor":"discussion","type":"heading"},{"inlineContent":[{"type":"text","text":"You can sort any sequence of elements that conform to the "},{"type":"codeVoice","code":"Comparable"},{"type":"text","text":" "},{"text":"protocol by calling this method. Elements are sorted in ascending order.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Here’s an example of sorting a list of students’ names. Strings in Swift"},{"type":"text","text":" "},{"type":"text","text":"conform to the "},{"type":"codeVoice","code":"Comparable"},{"text":" protocol, so the names are sorted in","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"ascending order according to the less-than operator ("},{"code":"<","type":"codeVoice"},{"text":").","type":"text"}],"type":"paragraph"},{"syntax":null,"type":"codeListing","code":["let students: Set = [\"Kofi\", \"Abena\", \"Peter\", \"Kweku\", \"Akosua\"]","let sortedStudents = students.sorted()","print(sortedStudents)","\/\/ Prints \"[\"Abena\", \"Akosua\", \"Kofi\", \"Kweku\", \"Peter\"]\""]},{"inlineContent":[{"type":"text","text":"To sort the elements of your sequence in descending order, pass the"},{"text":" ","type":"text"},{"text":"greater-than operator (","type":"text"},{"code":">","type":"codeVoice"},{"text":") to the ","type":"text"},{"type":"codeVoice","code":"sorted(by:)"},{"type":"text","text":" method."}],"type":"paragraph"},{"syntax":null,"code":["let descendingStudents = students.sorted(by: >)","print(descendingStudents)","\/\/ Prints \"[\"Peter\", \"Kweku\", \"Kofi\", \"Akosua\", \"Abena\"]\""],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"The sorting algorithm is guaranteed to be stable. A stable sort"},{"text":" ","type":"text"},{"text":"preserves the relative order of elements that compare as equal.","type":"text"}],"type":"paragraph"},{"type":"aside","content":[{"inlineContent":[{"text":"O(","type":"text"},{"type":"emphasis","inlineContent":[{"text":"n","type":"text"}]},{"text":" log ","type":"text"},{"inlineContent":[{"text":"n","type":"text"}],"type":"emphasis"},{"type":"text","text":"), where "},{"type":"emphasis","inlineContent":[{"type":"text","text":"n"}]},{"type":"text","text":" is the length of the sequence."}],"type":"paragraph"}],"style":"note","name":"Complexity"}]}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/AnyRandomAccessCollection/sorted()":{"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"sorted"},{"kind":"text","text":"() -> ["},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"kind":"text","text":"]"}],"url":"\/documentation\/compute\/anyrandomaccesscollection\/sorted()","abstract":[{"text":"Returns the elements of the sequence, sorted.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyRandomAccessCollection\/sorted()","title":"sorted()","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Element"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Comparable"},{"type":"text","text":"."}]},"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/AnyRandomAccessCollection":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyRandomAccessCollection","title":"AnyRandomAccessCollection","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AnyRandomAccessCollection"}],"kind":"symbol","url":"\/documentation\/compute\/anyrandomaccesscollection","abstract":[{"type":"text","text":"A type-erased wrapper over any collection with indices that"},{"type":"text","text":" "},{"text":"support random access traversal.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyRandomAccessCollection"}],"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence/Element":{"type":"topic","required":true,"abstract":[{"type":"text","text":"A type representing the sequence’s elements."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"symbol","url":"\/documentation\/compute\/sequence\/element","role":"symbol","title":"Element","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/AnyRandomAccessCollection/Sequence-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyRandomAccessCollection\/Sequence-Implementations","title":"Sequence Implementations","role":"collectionGroup","kind":"article","url":"\/documentation\/compute\/anyrandomaccesscollection\/sequence-implementations","abstract":[],"type":"topic"}}}