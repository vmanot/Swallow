{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyIndex\/.._(_:_:)"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"..<","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"minimum","kind":"internalParam"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"maximum","kind":"internalParam"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sn","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Range","kind":"typeIdentifier","text":"Range"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"The lower bound for the range."}],"type":"paragraph"}],"name":"minimum"},{"name":"maximum","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The upper bound for the range."}]}]}]},{"kind":"content","content":[{"type":"heading","anchor":"discussion","text":"Discussion","level":2},{"inlineContent":[{"type":"text","text":"Use the half-open range operator ("},{"code":"..<","type":"codeVoice"},{"text":") to create a range of any type","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"that conforms to the "},{"type":"codeVoice","code":"Comparable"},{"type":"text","text":" protocol. This example creates a"},{"text":" ","type":"text"},{"type":"codeVoice","code":"Range<Double>"},{"type":"text","text":" from zero up to, but not including, 5.0."}],"type":"paragraph"},{"syntax":null,"type":"codeListing","code":["let lessThanFive = 0.0..<5.0","print(lessThanFive.contains(3.14))  \/\/ Prints \"true\"","print(lessThanFive.contains(5.0))   \/\/ Prints \"false\""]},{"type":"aside","name":"Precondition","content":[{"inlineContent":[{"text":"","type":"text"},{"code":"minimum <= maximum","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}],"style":"note"}]}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyIndex","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyIndex\/Comparable-Implementations"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"roleHeading":"Operator","role":"symbol","symbolKind":"op","extendedModule":"Swift","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"..<"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sn","text":"Range","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}],"modules":[{"relatedModules":["Swift"],"name":"Compute"}],"title":"..<(_:_:)","externalID":"s:SLsE3zzloiySnyxGx_xtFZ::SYNTHESIZED::s:s8AnyIndexV"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/anyindex\/'.._(_:_:)"]}],"kind":"symbol","sections":[],"abstract":[{"type":"text","text":"Returns a half-open range that contains its lower bound but not its upper"},{"text":" ","type":"text"},{"text":"bound.","type":"text"}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/AnyIndex/.._(_:_:)":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyIndex\/.._(_:_:)","role":"symbol","type":"topic","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"..<","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sn","text":"Range","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"url":"\/documentation\/compute\/anyindex\/'.._(_:_:)","abstract":[{"text":"Returns a half-open range that contains its lower bound but not its upper","type":"text"},{"type":"text","text":" "},{"text":"bound.","type":"text"}],"title":"..<(_:_:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/AnyIndex":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"AnyIndex","kind":"identifier"}],"url":"\/documentation\/compute\/anyindex","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyIndex","role":"symbol","abstract":[{"text":"A wrapper over an underlying index that hides the specific underlying type.","type":"text"}],"navigatorTitle":[{"text":"AnyIndex","kind":"identifier"}],"type":"topic","title":"AnyIndex"},"doc://com.swallow.documentation.Compute/documentation/Compute/Range":{"kind":"symbol","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Range","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Range","url":"\/documentation\/compute\/range","abstract":[{"text":"A half-open interval from a lower bound up to, but not including, an upper","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"bound."}],"navigatorTitle":[{"text":"Range","kind":"identifier"}],"title":"Range"},"doc://com.swallow.documentation.Compute/documentation/Compute/AnyIndex/Comparable-Implementations":{"type":"topic","kind":"article","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyIndex\/Comparable-Implementations","title":"Comparable Implementations","role":"collectionGroup","url":"\/documentation\/compute\/anyindex\/comparable-implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"}}}