{"abstract":[{"type":"text","text":"Returns an index that is the specified distance from the given index,"},{"type":"text","text":" "},{"type":"text","text":"unless that distance is beyond a given limiting index."}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CollectionOfOne\/index(_:offsetBy:limitedBy:)"},"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"title":"index(_:offsetBy:limitedBy:)","symbolKind":"method","roleHeading":"Instance Method","extendedModule":"Swift","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"index"},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Index","preciseIdentifier":"s:Sl5IndexQa","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"offsetBy"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":", ","kind":"text"},{"text":"limitedBy","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa","text":"Index"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Index","kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa"},{"text":"?","kind":"text"}],"modules":[{"name":"Compute","relatedModules":["Swift"]}],"externalID":"s:SksE5index_8offsetBy07limitedC05IndexQzSgAE_SiAEtF::SYNTHESIZED::s:s15CollectionOfOneV"},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CollectionOfOne","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CollectionOfOne\/RandomAccessCollection-Implementations"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"index","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"i","kind":"internalParam"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/Index","preciseIdentifier":"s:Sl5IndexQa","text":"Index","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"offsetBy","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"distance","kind":"internalParam"},{"kind":"text","text":": "},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"limitedBy"},{"text":" ","kind":"text"},{"text":"limit","kind":"internalParam"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/Index","kind":"typeIdentifier","text":"Index","preciseIdentifier":"s:Sl5IndexQa"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa","text":"Index","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/Index"},{"kind":"text","text":"?"}],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"name":"i","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A valid index of the array."}]}]},{"name":"distance","content":[{"type":"paragraph","inlineContent":[{"text":"The distance to offset ","type":"text"},{"code":"i","type":"codeVoice"},{"type":"text","text":"."}]}]},{"name":"limit","content":[{"inlineContent":[{"type":"text","text":"A valid index of the collection to use as a limit. If"},{"text":" ","type":"text"},{"type":"codeVoice","code":"distance > 0"},{"type":"text","text":", "},{"code":"limit","type":"codeVoice"},{"type":"text","text":" should be greater than "},{"code":"i","type":"codeVoice"},{"type":"text","text":" to have any"},{"type":"text","text":" "},{"text":"effect. Likewise, if ","type":"text"},{"code":"distance < 0","type":"codeVoice"},{"type":"text","text":", "},{"code":"limit","type":"codeVoice"},{"text":" should be less than ","type":"text"},{"code":"i","type":"codeVoice"},{"text":" ","type":"text"},{"text":"to have any effect.","type":"text"}],"type":"paragraph"}]}]},{"kind":"content","content":[{"anchor":"return-value","type":"heading","text":"Return Value","level":2},{"type":"paragraph","inlineContent":[{"text":"An index offset by ","type":"text"},{"code":"distance","type":"codeVoice"},{"text":" from the index ","type":"text"},{"type":"codeVoice","code":"i"},{"text":", unless that","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"index would be beyond "},{"code":"limit","type":"codeVoice"},{"type":"text","text":" in the direction of movement. In that"},{"type":"text","text":" "},{"text":"case, the method returns ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."}]}]},{"content":[{"anchor":"discussion","level":2,"text":"Discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"The following example obtains an index advanced four positions from an","type":"text"},{"text":" ","type":"text"},{"text":"array’s starting index and then prints the element at that position. The","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"operation doesn’t require going beyond the limiting "},{"code":"numbers.endIndex","type":"codeVoice"},{"text":" ","type":"text"},{"type":"text","text":"value, so it succeeds."}]},{"type":"codeListing","code":["let numbers = [10, 20, 30, 40, 50]","let i = numbers.index(numbers.startIndex, offsetBy: 4)","print(numbers[i])","\/\/ Prints \"50\""],"syntax":null},{"inlineContent":[{"type":"text","text":"The next example attempts to retrieve an index ten positions from"},{"type":"text","text":" "},{"type":"codeVoice","code":"numbers.startIndex"},{"type":"text","text":", but fails, because that distance is beyond the"},{"text":" ","type":"text"},{"text":"index passed as ","type":"text"},{"code":"limit","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"},{"syntax":null,"type":"codeListing","code":["let j = numbers.index(numbers.startIndex,","                      offsetBy: 10,","                      limitedBy: numbers.endIndex)","print(j)","\/\/ Prints \"nil\""]},{"inlineContent":[{"type":"text","text":"The value passed as "},{"code":"distance","type":"codeVoice"},{"text":" must not offset ","type":"text"},{"type":"codeVoice","code":"i"},{"type":"text","text":" beyond the bounds of"},{"type":"text","text":" "},{"type":"text","text":"the collection, unless the index passed as "},{"type":"codeVoice","code":"limit"},{"text":" prevents offsetting","type":"text"},{"type":"text","text":" "},{"type":"text","text":"beyond those bounds."}],"type":"paragraph"},{"type":"aside","name":"Complexity","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"O(1)"}]}],"style":"note"}],"kind":"content"}],"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/collectionofone\/index(_:offsetby:limitedby:)"]}],"sections":[],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/CollectionOfOne":{"abstract":[{"text":"A collection containing a single element.","type":"text"}],"kind":"symbol","url":"\/documentation\/compute\/collectionofone","navigatorTitle":[{"kind":"identifier","text":"CollectionOfOne"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CollectionOfOne","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"CollectionOfOne"}],"title":"CollectionOfOne"},"doc://com.swallow.documentation.Compute/documentation/Compute/CollectionOfOne/RandomAccessCollection-Implementations":{"type":"topic","url":"\/documentation\/compute\/collectionofone\/randomaccesscollection-implementations","kind":"article","role":"collectionGroup","title":"RandomAccessCollection Implementations","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CollectionOfOne\/RandomAccessCollection-Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/Collection/Index":{"url":"\/documentation\/compute\/collection\/index","required":true,"role":"symbol","title":"Index","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Index","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"Comparable","preciseIdentifier":"s:SL","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"A type that represents a position in the collection."}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/Index","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","abstract":[{"type":"text","text":"A signed integer value type."}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Int","kind":"identifier"}],"navigatorTitle":[{"text":"Int","kind":"identifier"}],"title":"Int","url":"\/documentation\/compute\/int","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/CollectionOfOne/index(_:offsetBy:limitedBy:)":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CollectionOfOne\/index(_:offsetBy:limitedBy:)","url":"\/documentation\/compute\/collectionofone\/index(_:offsetby:limitedby:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"index","kind":"identifier"},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa","text":"Index"},{"kind":"text","text":", "},{"text":"offsetBy","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":", ","kind":"text"},{"text":"limitedBy","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Index","preciseIdentifier":"s:Sl5IndexQa","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Index","preciseIdentifier":"s:Sl5IndexQa","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"type":"topic","kind":"symbol","role":"symbol","title":"index(_:offsetBy:limitedBy:)","abstract":[{"text":"Returns an index that is the specified distance from the given index,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"unless that distance is beyond a given limiting index."}]},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"}}}