{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/collectionofone\/partition(by:)-1s0cl"]}],"metadata":{"extendedModule":"Swift","conformance":{"constraints":[{"code":"Self","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"BidirectionalCollection","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"symbolKind":"method","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"partition"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"by"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa","text":"Index"}],"externalID":"s:SMsSKRzrlE9partition2by5IndexSlQzSb7ElementSTQzKXE_tKF::SYNTHESIZED::s:s15CollectionOfOneV","title":"partition(by:)","roleHeading":"Instance Method","modules":[{"relatedModules":["Swift"],"name":"Compute"}]},"sections":[],"schemaVersion":{"major":0,"patch":0,"minor":3},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CollectionOfOne\/partition(by:)-1s0cl"},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CollectionOfOne","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CollectionOfOne\/MutableCollection-Implementations"]]},"abstract":[{"type":"text","text":"Reorders the elements of the collection such that all the elements"},{"text":" ","type":"text"},{"type":"text","text":"that match the given predicate are after all the elements that don’t"},{"type":"text","text":" "},{"text":"match.","type":"text"}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"mutating","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"partition"},{"kind":"text","text":"("},{"kind":"externalParam","text":"by"},{"kind":"text","text":" "},{"kind":"internalParam","text":"belongsInSecondPartition"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:ST7ElementQa","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bool","preciseIdentifier":"s:Sb"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:Sl5IndexQa","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/Index","text":"Index"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"belongsInSecondPartition","content":[{"type":"paragraph","inlineContent":[{"text":"A predicate used to partition","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the collection. All elements satisfying this predicate are ordered"},{"text":" ","type":"text"},{"type":"text","text":"after all elements not satisfying it."}]}]}]},{"kind":"content","content":[{"level":2,"type":"heading","anchor":"return-value","text":"Return Value"},{"type":"paragraph","inlineContent":[{"text":"The index of the first element in the reordered collection","type":"text"},{"type":"text","text":" "},{"type":"text","text":"that matches "},{"code":"belongsInSecondPartition","type":"codeVoice"},{"text":". If no elements in the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"collection match "},{"type":"codeVoice","code":"belongsInSecondPartition"},{"text":", the returned index is","type":"text"},{"type":"text","text":" "},{"type":"text","text":"equal to the collection’s "},{"type":"codeVoice","code":"endIndex"},{"type":"text","text":"."}]}]},{"kind":"content","content":[{"anchor":"discussion","type":"heading","text":"Discussion","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"After partitioning a collection, there is a pivot index "},{"code":"p","type":"codeVoice"},{"text":" where","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"no element before "},{"code":"p","type":"codeVoice"},{"type":"text","text":" satisfies the "},{"type":"codeVoice","code":"belongsInSecondPartition"},{"type":"text","text":" "},{"type":"text","text":"predicate and every element at or after "},{"type":"codeVoice","code":"p"},{"type":"text","text":" satisfies"},{"text":" ","type":"text"},{"type":"codeVoice","code":"belongsInSecondPartition"},{"text":". This operation isn’t guaranteed to be","type":"text"},{"text":" ","type":"text"},{"text":"stable, so the relative ordering of elements within the partitions might","type":"text"},{"text":" ","type":"text"},{"text":"change.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"In the following example, an array of numbers is partitioned by a"},{"type":"text","text":" "},{"type":"text","text":"predicate that matches elements greater than 30."}]},{"code":["var numbers = [30, 40, 20, 30, 30, 60, 10]","let p = numbers.partition(by: { $0 > 30 })","\/\/ p == 5","\/\/ numbers == [30, 10, 20, 30, 30, 60, 40]"],"syntax":null,"type":"codeListing"},{"inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"numbers"},{"type":"text","text":" array is now arranged in two partitions. The first"},{"text":" ","type":"text"},{"type":"text","text":"partition, "},{"type":"codeVoice","code":"numbers[..<p]"},{"text":", is made up of the elements that","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"are not greater than 30. The second partition, "},{"code":"numbers[p...]","type":"codeVoice"},{"text":",","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"is made up of the elements that "},{"type":"emphasis","inlineContent":[{"type":"text","text":"are"}]},{"text":" greater than 30.","type":"text"}],"type":"paragraph"},{"code":["let first = numbers[..<p]","\/\/ first == [30, 10, 20, 30, 30]","let second = numbers[p...]","\/\/ second == [60, 40]"],"type":"codeListing","syntax":null},{"type":"paragraph","inlineContent":[{"text":"Note that the order of elements in both partitions changed.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"That is, "},{"type":"codeVoice","code":"40"},{"type":"text","text":" appears before "},{"type":"codeVoice","code":"60"},{"text":" in the original collection,","type":"text"},{"text":" ","type":"text"},{"text":"but, after calling ","type":"text"},{"type":"codeVoice","code":"partition(by:)"},{"text":", ","type":"text"},{"code":"60","type":"codeVoice"},{"text":" appears before ","type":"text"},{"type":"codeVoice","code":"40"},{"text":".","type":"text"}]},{"type":"aside","style":"note","name":"Complexity","content":[{"inlineContent":[{"text":"O(","type":"text"},{"inlineContent":[{"type":"text","text":"n"}],"type":"emphasis"},{"text":"), where ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"n","type":"text"}]},{"type":"text","text":" is the length of the collection."}],"type":"paragraph"}]}]}],"kind":"symbol","references":{"doc://com.swallow.documentation.Compute/documentation/Compute/CollectionOfOne/MutableCollection-Implementations":{"abstract":[],"title":"MutableCollection Implementations","role":"collectionGroup","type":"topic","kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CollectionOfOne\/MutableCollection-Implementations","url":"\/documentation\/compute\/collectionofone\/mutablecollection-implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/Collection/Index":{"url":"\/documentation\/compute\/collection\/index","required":true,"role":"symbol","title":"Index","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Index","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"Comparable","preciseIdentifier":"s:SL","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"A type that represents a position in the collection."}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/Index","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/CollectionOfOne":{"abstract":[{"text":"A collection containing a single element.","type":"text"}],"kind":"symbol","url":"\/documentation\/compute\/collectionofone","navigatorTitle":[{"kind":"identifier","text":"CollectionOfOne"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CollectionOfOne","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"CollectionOfOne"}],"title":"CollectionOfOne"},"doc://com.swallow.documentation.Compute/documentation/Compute/CollectionOfOne/partition(by:)-1s0cl":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CollectionOfOne\/partition(by:)-1s0cl","kind":"symbol","type":"topic","abstract":[{"text":"Reorders the elements of the collection such that all the elements","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"that match the given predicate are after all the elements that don’t"},{"type":"text","text":" "},{"text":"match.","type":"text"}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Self","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"BidirectionalCollection"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"title":"partition(by:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"partition"},{"kind":"text","text":"("},{"kind":"externalParam","text":"by"},{"text":": (","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Index","kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa"}],"url":"\/documentation\/compute\/collectionofone\/partition(by:)-1s0cl"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Bool":{"url":"\/documentation\/compute\/bool","role":"symbol","title":"Bool","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Bool","kind":"identifier"}],"abstract":[{"type":"text","text":"A value type whose instances are either "},{"type":"codeVoice","code":"true"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"false"},{"text":".","type":"text"}],"navigatorTitle":[{"text":"Bool","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bool","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence/Element":{"type":"topic","required":true,"abstract":[{"type":"text","text":"A type representing the sequence’s elements."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"symbol","url":"\/documentation\/compute\/sequence\/element","role":"symbol","title":"Element","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"identifier"}]}}}