{"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMDMask\/._(_:_:)-75fbk","interfaceLanguage":"swift"},"metadata":{"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":".|","kind":"identifier"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:s8SIMDMaskV","text":"SIMDMask"},{"kind":"text","text":"<"},{"text":"Storage","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"SIMDMask","preciseIdentifier":"s:s8SIMDMaskV"},{"text":"<","kind":"text"},{"text":"Storage","kind":"typeIdentifier"},{"text":">","kind":"text"}],"role":"symbol","externalID":"s:s8SIMDMaskV2zooiyAByxGAD_SbtFZ","modules":[{"name":"Compute","relatedModules":["Swift"]}],"title":".|(_:_:)","symbolKind":"op","extendedModule":"Swift","roleHeading":"Operator","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Storage"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"SIMD"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Storage.Scalar"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"FixedWidthInteger"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Storage.Scalar"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"SignedInteger"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]}},"sections":[],"abstract":[{"text":"A vector mask that is the pointwise logical disjunction of the inputs.","type":"text"}],"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/simdmask\/'._(_:_:)-75fbk"]}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMDMask"]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":".|","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"internalParam","text":"a"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMDMask","text":"SIMDMask","preciseIdentifier":"s:s8SIMDMaskV"},{"text":"<","kind":"text"},{"text":"Storage","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"text":"b","kind":"internalParam"},{"kind":"text","text":": "},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bool","preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"SIMDMask","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMDMask","kind":"typeIdentifier","preciseIdentifier":"s:s8SIMDMaskV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Storage"},{"text":">","kind":"text"}]}]},{"content":[{"level":2,"type":"heading","text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Equivalent to "},{"code":"b ? SIMDMask(repeating: true) : a","type":"codeVoice"}]}],"kind":"content"}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Bool":{"url":"\/documentation\/compute\/bool","role":"symbol","title":"Bool","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Bool","kind":"identifier"}],"abstract":[{"type":"text","text":"A value type whose instances are either "},{"type":"codeVoice","code":"true"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"false"},{"text":".","type":"text"}],"navigatorTitle":[{"text":"Bool","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bool","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMDMask":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SIMDMask"}],"role":"symbol","title":"SIMDMask","abstract":[],"url":"\/documentation\/compute\/simdmask","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMDMask","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SIMDMask"}]},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMDMask/._(_:_:)-75fbk":{"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":".|"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"preciseIdentifier":"s:s8SIMDMaskV","text":"SIMDMask","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Storage","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"SIMDMask","preciseIdentifier":"s:s8SIMDMaskV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Storage"},{"text":">","kind":"text"}],"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMDMask\/._(_:_:)-75fbk","url":"\/documentation\/compute\/simdmask\/'._(_:_:)-75fbk","title":".|(_:_:)","type":"topic","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Storage"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"SIMD"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Storage.Scalar"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"FixedWidthInteger"},{"text":", and ","type":"text"},{"code":"Storage.Scalar","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"SignedInteger","type":"codeVoice"},{"type":"text","text":"."}]},"kind":"symbol","abstract":[{"text":"A vector mask that is the pointwise logical disjunction of the inputs.","type":"text"}]}}}