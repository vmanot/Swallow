{"metadata":{"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":".|"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"SIMDMask","kind":"typeIdentifier","preciseIdentifier":"s:s8SIMDMaskV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Storage"},{"text":">, ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s8SIMDMaskV","text":"SIMDMask"},{"kind":"text","text":"<"},{"text":"Storage","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"SIMDMask","preciseIdentifier":"s:s8SIMDMaskV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Storage"},{"text":">","kind":"text"}],"modules":[{"relatedModules":["Swift"],"name":"Compute"}],"roleHeading":"Operator","role":"symbol","extendedModule":"Swift","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Storage"},{"text":" is ","type":"text"},{"code":"SIMD8<Int32>","type":"codeVoice"},{"text":".","type":"text"}]},"title":".|(_:_:)","symbolKind":"op","externalID":"s:s8SIMDMaskVss5SIMD8Vys5Int32VGRszrlE2zooiyAByAGGAI_AItFZ"},"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":".|","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"a","kind":"internalParam"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMDMask","kind":"typeIdentifier","preciseIdentifier":"s:s8SIMDMaskV","text":"SIMDMask"},{"kind":"text","text":"<"},{"text":"Storage","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"text":"b","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"SIMDMask","kind":"typeIdentifier","preciseIdentifier":"s:s8SIMDMaskV","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMDMask"},{"kind":"text","text":"<"},{"text":"Storage","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMDMask","preciseIdentifier":"s:s8SIMDMaskV","text":"SIMDMask"},{"text":"<","kind":"text"},{"text":"Storage","kind":"typeIdentifier"},{"text":">","kind":"text"}]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"Equivalent to:","type":"text"}]},{"type":"codeListing","syntax":null,"code":["var result = SIMDMask<SIMD8<Int32>>()","for i in result.indices {","  result[i] = a[i] || b[i]","}"]},{"type":"paragraph","inlineContent":[{"text":"Note that unlike the scalar ","type":"text"},{"code":"||","type":"codeVoice"},{"type":"text","text":" operator, the SIMD "},{"code":".|","type":"codeVoice"},{"type":"text","text":" operator"},{"type":"text","text":" "},{"text":"always fully evaluates both arguments.","type":"text"}]}]}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMDMask"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/simdmask\/'._(_:_:)-2ihng"]}],"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMDMask\/._(_:_:)-2ihng","interfaceLanguage":"swift"},"sections":[],"abstract":[{"type":"text","text":"A vector mask that is the pointwise logical disjunction of the inputs."}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/SIMDMask/._(_:_:)-2ihng":{"role":"symbol","type":"topic","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Storage"},{"type":"text","text":" is "},{"code":"SIMD8<Int32>","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":".|"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"SIMDMask","preciseIdentifier":"s:s8SIMDMaskV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Storage"},{"text":">, ","kind":"text"},{"preciseIdentifier":"s:s8SIMDMaskV","text":"SIMDMask","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Storage"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s8SIMDMaskV","text":"SIMDMask"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Storage"},{"text":">","kind":"text"}],"kind":"symbol","abstract":[{"text":"A vector mask that is the pointwise logical disjunction of the inputs.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMDMask\/._(_:_:)-2ihng","title":".|(_:_:)","url":"\/documentation\/compute\/simdmask\/'._(_:_:)-2ihng"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMDMask":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SIMDMask"}],"role":"symbol","title":"SIMDMask","abstract":[],"url":"\/documentation\/compute\/simdmask","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMDMask","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SIMDMask"}]}}}