{"schemaVersion":{"patch":0,"major":0,"minor":3},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"forEachPostOrder"},{"kind":"text","text":"("},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"body"},{"kind":"text","text":": ("},{"text":"TreeValue","preciseIdentifier":"s:7Compute12TreeProtocolP0B5ValueQa","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/TreeProtocol\/TreeValue","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Void","kind":"typeIdentifier"},{"kind":"text","text":")"}]}],"kind":"declarations"}],"metadata":{"externalID":"s:7Compute21RecursiveTreeProtocolPAAE16forEachPostOrderyyy0C5ValueQzXEF::SYNTHESIZED::s:7Compute7AnyTreeV","modules":[{"name":"Compute"}],"extendedModule":"Compute","title":"forEachPostOrder(_:)","symbolKind":"method","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"forEachPostOrder","kind":"identifier"},{"text":"((","kind":"text"},{"preciseIdentifier":"s:7Compute12TreeProtocolP0B5ValueQa","kind":"typeIdentifier","text":"TreeValue"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"kind":"text","text":")"}],"role":"symbol"},"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyTree\/forEachPostOrder(_:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"RecursiveTreeProtocol.forEachPostOrder(_:)"},{"text":".","type":"text"}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyTree","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyTree\/RecursiveTreeProtocol-Implementations"]]},"variants":[{"paths":["\/documentation\/compute\/anytree\/foreachpostorder(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Void":{"abstract":[{"text":"The return type of functions that donâ€™t explicitly specify a return type,","type":"text"},{"text":" ","type":"text"},{"text":"that is, an empty tuple ","type":"text"},{"type":"codeVoice","code":"()"},{"type":"text","text":"."}],"type":"topic","title":"Void","url":"\/documentation\/compute\/void","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Void"}],"navigatorTitle":[{"text":"Void","kind":"identifier"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Void"},"doc://com.swallow.documentation.Compute/documentation/Compute/AnyTree/forEachPostOrder(_:)":{"kind":"symbol","title":"forEachPostOrder(_:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"forEachPostOrder","kind":"identifier"},{"text":"((","kind":"text"},{"preciseIdentifier":"s:7Compute12TreeProtocolP0B5ValueQa","kind":"typeIdentifier","text":"TreeValue"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"kind":"text","text":")"}],"url":"\/documentation\/compute\/anytree\/foreachpostorder(_:)","role":"symbol","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyTree\/forEachPostOrder(_:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/TreeProtocol/TreeValue":{"url":"\/documentation\/compute\/treeprotocol\/treevalue","type":"topic","title":"TreeValue","fragments":[{"text":"associatedtype","kind":"keyword"},{"kind":"text","text":" "},{"text":"TreeValue","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/TreeProtocol\/TreeValue","kind":"symbol","abstract":[{"text":"The type of value stored in each node of the tree.","type":"text"}],"required":true,"role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/AnyTree/RecursiveTreeProtocol-Implementations":{"url":"\/documentation\/compute\/anytree\/recursivetreeprotocol-implementations","abstract":[],"role":"collectionGroup","type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyTree\/RecursiveTreeProtocol-Implementations","kind":"article","title":"RecursiveTreeProtocol Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/AnyTree":{"navigatorTitle":[{"kind":"identifier","text":"AnyTree"}],"type":"topic","title":"AnyTree","url":"\/documentation\/compute\/anytree","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AnyTree"}],"abstract":[],"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyTree"}}}