{"kind":"symbol","topicSections":[{"identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&*(_:_:)-10d5p","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&*(_:_:)-1xcvq","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&*(_:_:)-24w7p","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&*(_:_:)-4nfb3","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&*(_:_:)-51nvg","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&*(_:_:)-59umb","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&*(_:_:)-5ehsq","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&*(_:_:)-6maed","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&*(_:_:)-6tid","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&*(_:_:)-8r7y1","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&*=(_:_:)-2t3nr","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&*=(_:_:)-2z0s7","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&*=(_:_:)-4rx0a","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&*=(_:_:)-5zxuu","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&*=(_:_:)-72dnf","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&*=(_:_:)-7hc0h","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&*=(_:_:)-8nfzb","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&*=(_:_:)-90j9c","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&*=(_:_:)-99rfz","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&*=(_:_:)-9rpr2","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&+(_:_:)-1itt5","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&+(_:_:)-3btse","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&+(_:_:)-3e43c","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&+(_:_:)-3gdux","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&+(_:_:)-4mxpb","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&+(_:_:)-58lvj","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&+(_:_:)-7y0wz","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&+(_:_:)-823au","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&+(_:_:)-9wssy","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&+(_:_:)-w70d","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&+=(_:_:)-15cet","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&+=(_:_:)-1o0yg","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&+=(_:_:)-1v816","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&+=(_:_:)-4s3z5","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&+=(_:_:)-63764","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&+=(_:_:)-6d53x","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&+=(_:_:)-7s5ki","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&+=(_:_:)-86txd","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&+=(_:_:)-8zbds","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&+=(_:_:)-rmc","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&-(_:_:)-1fnzi","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&-(_:_:)-2e698","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&-(_:_:)-378x","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&-(_:_:)-3di3j","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&-(_:_:)-4a5qw","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&-(_:_:)-67lsa","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&-(_:_:)-7kezr","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&-(_:_:)-97vnn","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&-(_:_:)-9833k","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&-(_:_:)-pwyk","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&-=(_:_:)-39zko","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&-=(_:_:)-4juf3","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&-=(_:_:)-546j7","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&-=(_:_:)-61zaw","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&-=(_:_:)-6en0q","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&-=(_:_:)-767vd","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&-=(_:_:)-8rceb","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&-=(_:_:)-9huay","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&-=(_:_:)-gu6o","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&-=(_:_:)-nlqy","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/.!=(_:_:)-21n3w","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/.!=(_:_:)-26sgl","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/.!=(_:_:)-4pl1l","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/.!=(_:_:)-52pgf","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/.!=(_:_:)-5m9ya","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/.!=(_:_:)-6ia6g","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/.!=(_:_:)-6njpp","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/.!=(_:_:)-7xxuv","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/.!=(_:_:)-8270q","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/.!=(_:_:)-8nprl","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/.!=(_:_:)-92bkt","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/.!=(_:_:)-9u20d","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/.!=(_:_:)-9vk8l","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/.==(_:_:)-14vwl","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/.==(_:_:)-1d4ef","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/.==(_:_:)-2j8za","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/.==(_:_:)-33cdt","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/.==(_:_:)-506zi","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/.==(_:_:)-5kd05","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/.==(_:_:)-60n8s","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/.==(_:_:)-6tfjq","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/.==(_:_:)-7a71z","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/.==(_:_:)-8u9ke","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/.==(_:_:)-93khl","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/.==(_:_:)-958fg","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/.==(_:_:)-rk9i","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._(_:_:)-147jo","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._(_:_:)-19g1c","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._(_:_:)-1goth","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._(_:_:)-21g9y","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._(_:_:)-2iysy","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._(_:_:)-3cu0a","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._(_:_:)-3qif7","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._(_:_:)-4421f","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._(_:_:)-45fh5","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._(_:_:)-49uz","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._(_:_:)-532p4","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._(_:_:)-5muzp","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._(_:_:)-5xye0","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._(_:_:)-672ev","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._(_:_:)-6in31","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._(_:_:)-73r8","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._(_:_:)-87jt","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._(_:_:)-89h8r","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._(_:_:)-8n114","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._(_:_:)-8vya7","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._(_:_:)-92tlq","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._(_:_:)-9e393","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._(_:_:)-9u1rq","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._(_:_:)-n7x0","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._(_:_:)-o3rx","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._(_:_:)-x09f","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._=(_:_:)-11ora","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._=(_:_:)-18zfw","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._=(_:_:)-1jbkk","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._=(_:_:)-21kci","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._=(_:_:)-226zc","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._=(_:_:)-2375k","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._=(_:_:)-2bc16","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._=(_:_:)-2ofnf","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._=(_:_:)-2uri4","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._=(_:_:)-2vp6k","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._=(_:_:)-2xrmp","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._=(_:_:)-2xto","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._=(_:_:)-37mit","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._=(_:_:)-3x944","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._=(_:_:)-46gd9","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._=(_:_:)-523s9","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._=(_:_:)-5or10","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._=(_:_:)-64het","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._=(_:_:)-69fm2","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._=(_:_:)-6fsyy","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._=(_:_:)-6u29t","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._=(_:_:)-6wunc","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._=(_:_:)-74z9a","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._=(_:_:)-crv1","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._=(_:_:)-relh","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._=(_:_:)-y30q"],"generated":true,"title":"Operators","anchor":"Operators"},{"generated":true,"title":"Initializers","identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/init()","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/init(_:)-5imow","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/init(_:)-8g4gm","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/init(_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/init(_:rounding:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/init(clamping:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/init(lowHalf:highHalf:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/init(truncatingIfNeeded:)"],"anchor":"Initializers"},{"identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/evenHalf","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/hashValue","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/highHalf","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/lowHalf","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/oddHalf","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/scalarCount"],"anchor":"Instance-Properties","title":"Instance Properties","generated":true},{"identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/subscript(_:)"],"title":"Subscripts","generated":true,"anchor":"Subscripts"},{"anchor":"Type-Aliases","generated":true,"identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/ArrayLiteralElement","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/MaskStorage"],"title":"Type Aliases"},{"title":"Default Implementations","generated":true,"anchor":"Default-Implementations","identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/CustomDebugStringConvertible-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/Decodable-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/Encodable-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/Equatable-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/Hashable-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/SIMD-Implementations"]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/simd32"]}],"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32"},"abstract":[{"type":"text","text":"A vector of 32 scalar values."}],"relationshipsSections":[{"type":"conformsTo","kind":"relationships","title":"Conforms To","identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BitwiseCopyable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Copyable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CustomDebugStringConvertible","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CustomStringConvertible","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Decodable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Encodable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Equatable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ExpressibleByArrayLiteral","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Hashable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD-swift.protocol","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMDStorage","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sendable"]}],"metadata":{"role":"symbol","modules":[{"name":"Compute"}],"title":"SIMD32","roleHeading":"Structure","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"SIMD32"}],"externalID":"s:s6SIMD32V","symbolKind":"struct","navigatorTitle":[{"kind":"identifier","text":"SIMD32"}]},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"@frozen","kind":"attribute"},{"text":" ","kind":"text"},{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"SIMD32","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Scalar"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Scalar"},{"kind":"text","text":" : "},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMDScalar","text":"SIMDScalar","preciseIdentifier":"s:s10SIMDScalarP","kind":"typeIdentifier"}],"platforms":["macOS"]}],"kind":"declarations"}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/&*(_:_:)-10d5p":{"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"type":"text","text":" is "},{"type":"codeVoice","code":"UInt"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&*(_:_:)-10d5p","url":"\/documentation\/compute\/simd32\/&*(_:_:)-10d5p","type":"topic","abstract":[{"text":"The pointwise wrapping product of two vectors.","type":"text"}],"role":"symbol","title":"&*(_:_:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"&*","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"SIMD32","preciseIdentifier":"s:s6SIMD32V"},{"kind":"text","text":"<"},{"text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"preciseIdentifier":"s:s6SIMD32V","kind":"typeIdentifier","text":"SIMD32"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"preciseIdentifier":"s:s6SIMD32V","kind":"typeIdentifier","text":"SIMD32"},{"kind":"text","text":"<"},{"text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":">"}],"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/&+(_:_:)-823au":{"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&+(_:_:)-823au","url":"\/documentation\/compute\/simd32\/&+(_:_:)-823au","abstract":[{"type":"text","text":"The wrapping sum of two vectors."}],"title":"&+(_:_:)","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"&+","kind":"identifier"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"SIMD32","preciseIdentifier":"s:s6SIMD32V"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Scalar"},{"kind":"text","text":">, "},{"text":"SIMD32","preciseIdentifier":"s:s6SIMD32V","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V","text":"SIMD32"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">","kind":"text"}],"type":"topic","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Scalar"},{"type":"text","text":" is "},{"code":"UInt32","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/&-=(_:_:)-546j7":{"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Scalar"},{"text":" is ","type":"text"},{"code":"UInt64","type":"codeVoice"},{"type":"text","text":"."}]},"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&-=(_:_:)-546j7","url":"\/documentation\/compute\/simd32\/&-=(_:_:)-546j7","type":"topic","abstract":[{"text":"Updates the left hand side with the wrapping difference of the two","type":"text"},{"text":" ","type":"text"},{"text":"vectors.","type":"text"}],"role":"symbol","title":"&-=(_:_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"&-=","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"preciseIdentifier":"s:s6SIMD32V","text":"SIMD32","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"preciseIdentifier":"s:s6SIMD32V","kind":"typeIdentifier","text":"SIMD32"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Scalar"},{"kind":"text","text":">)"}],"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/.==(_:_:)-33cdt":{"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/.==(_:_:)-33cdt","url":"\/documentation\/compute\/simd32\/'.==(_:_:)-33cdt","abstract":[{"type":"text","text":"A vector mask with the result of a pointwise equality comparison."}],"title":".==(_:_:)","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":".==","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:s6SIMD32V","kind":"typeIdentifier","text":"SIMD32"},{"kind":"text","text":"<"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"SIMD32","preciseIdentifier":"s:s6SIMD32V","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s8SIMDMaskV","text":"SIMDMask"},{"kind":"text","text":"<"},{"text":"SIMD32","kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Scalar"},{"kind":"text","text":">."},{"text":"MaskStorage","kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V11MaskStoragea"},{"kind":"text","text":">"}],"type":"topic","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Int64"},{"text":".","type":"text"}]},"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/highHalf":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/highHalf","url":"\/documentation\/compute\/simd32\/highhalf","type":"topic","abstract":[{"type":"text","text":"A half-length vector made up of the high elements of the vector."}],"role":"symbol","title":"highHalf","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"highHalf","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s6SIMD16V","kind":"typeIdentifier","text":"SIMD16"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Scalar"},{"text":">","kind":"text"}],"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/._=(_:_:)-6fsyy":{"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._=(_:_:)-6fsyy","url":"\/documentation\/compute\/simd32\/'._=(_:_:)-6fsyy","abstract":[{"text":"A vector mask with the result of a pointwise less-than-or-equal-to comparison.","type":"text"}],"title":".<=(_:_:)","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":".<=","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"preciseIdentifier":"s:s6SIMD32V","text":"SIMD32","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Scalar"},{"text":">, ","kind":"text"},{"text":"SIMD32","kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Scalar"},{"kind":"text","text":">) -> "},{"text":"SIMDMask","kind":"typeIdentifier","preciseIdentifier":"s:s8SIMDMaskV"},{"text":"<","kind":"text"},{"text":"SIMD32","preciseIdentifier":"s:s6SIMD32V","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":">."},{"preciseIdentifier":"s:s6SIMD32V11MaskStoragea","kind":"typeIdentifier","text":"MaskStorage"},{"text":">","kind":"text"}],"type":"topic","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Scalar"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Double"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/&+=(_:_:)-15cet":{"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Int32","type":"codeVoice"},{"type":"text","text":"."}]},"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&+=(_:_:)-15cet","url":"\/documentation\/compute\/simd32\/&+=(_:_:)-15cet","type":"topic","abstract":[{"type":"text","text":"Updates the left hand side with the wrapping sum of the two"},{"text":" ","type":"text"},{"type":"text","text":"vectors."}],"role":"symbol","title":"&+=(_:_:)","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"&+=","kind":"identifier"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SIMD32","preciseIdentifier":"s:s6SIMD32V","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V","text":"SIMD32"},{"kind":"text","text":"<"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">)","kind":"text"}],"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/subscript(_:)":{"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/subscript(_:)","url":"\/documentation\/compute\/simd32\/subscript(_:)","abstract":[{"text":"Accesses the scalar at the specified position.","type":"text"}],"title":"subscript(_:)","fragments":[{"text":"subscript","kind":"keyword"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":") -> "},{"text":"Scalar","kind":"typeIdentifier"}],"type":"topic","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/&-=(_:_:)-gu6o":{"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Scalar"},{"text":" is ","type":"text"},{"code":"UInt32","type":"codeVoice"},{"type":"text","text":"."}]},"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&-=(_:_:)-gu6o","url":"\/documentation\/compute\/simd32\/&-=(_:_:)-gu6o","type":"topic","abstract":[{"text":"Updates the left hand side with the wrapping difference of the two","type":"text"},{"type":"text","text":" "},{"text":"vectors.","type":"text"}],"role":"symbol","title":"&-=(_:_:)","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"&-=","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"preciseIdentifier":"s:s6SIMD32V","text":"SIMD32","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Scalar"},{"text":">, ","kind":"text"},{"kind":"typeIdentifier","text":"SIMD32","preciseIdentifier":"s:s6SIMD32V"},{"kind":"text","text":"<"},{"text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":">)"}],"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/&-(_:_:)-97vnn":{"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&-(_:_:)-97vnn","url":"\/documentation\/compute\/simd32\/&-(_:_:)-97vnn","abstract":[{"type":"text","text":"The wrapping difference of two vectors."}],"title":"&-(_:_:)","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"&-"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:s6SIMD32V","kind":"typeIdentifier","text":"SIMD32"},{"kind":"text","text":"<"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"SIMD32","preciseIdentifier":"s:s6SIMD32V","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V","text":"SIMD32"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Scalar"},{"text":">","kind":"text"}],"type":"topic","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Int8"},{"type":"text","text":"."}]},"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/._=(_:_:)-226zc":{"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Scalar"},{"text":" is ","type":"text"},{"code":"UInt32","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._=(_:_:)-226zc","url":"\/documentation\/compute\/simd32\/'._=(_:_:)-226zc","type":"topic","abstract":[{"text":"A vector mask with the result of a pointwise greater-than-or-equal-to comparison.","type":"text"}],"role":"symbol","title":".>=(_:_:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":".>="},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V","text":"SIMD32"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Scalar"},{"text":">, ","kind":"text"},{"text":"SIMD32","preciseIdentifier":"s:s6SIMD32V","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"SIMDMask","kind":"typeIdentifier","preciseIdentifier":"s:s8SIMDMaskV"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:s6SIMD32V","kind":"typeIdentifier","text":"SIMD32"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":">."},{"text":"MaskStorage","preciseIdentifier":"s:s6SIMD32V11MaskStoragea","kind":"typeIdentifier"},{"kind":"text","text":">"}],"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Hashable":{"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Hashable"}],"title":"Hashable","navigatorTitle":[{"text":"Hashable","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"A type that can be hashed into a "},{"type":"codeVoice","code":"Hasher"},{"type":"text","text":" to produce an integer hash value."}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Hashable","url":"\/documentation\/compute\/hashable","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/._=(_:_:)-3x944":{"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._=(_:_:)-3x944","url":"\/documentation\/compute\/simd32\/'._=(_:_:)-3x944","abstract":[{"type":"text","text":"A vector mask with the result of a pointwise less-than-or-equal-to comparison."}],"title":".<=(_:_:)","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":".<="},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"preciseIdentifier":"s:s6SIMD32V","text":"SIMD32","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"SIMD32","kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Scalar"},{"kind":"text","text":">) -> "},{"text":"SIMDMask","kind":"typeIdentifier","preciseIdentifier":"s:s8SIMDMaskV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V","text":"SIMD32"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Scalar"},{"text":">.","kind":"text"},{"preciseIdentifier":"s:s6SIMD32V11MaskStoragea","text":"MaskStorage","kind":"typeIdentifier"},{"kind":"text","text":">"}],"type":"topic","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Int8"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/&*(_:_:)-1xcvq":{"conformance":{"constraints":[{"code":"Scalar","type":"codeVoice"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Int16"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&*(_:_:)-1xcvq","url":"\/documentation\/compute\/simd32\/&*(_:_:)-1xcvq","type":"topic","abstract":[{"text":"The pointwise wrapping product of two vectors.","type":"text"}],"role":"symbol","title":"&*(_:_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"&*"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"preciseIdentifier":"s:s6SIMD32V","text":"SIMD32","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Scalar"},{"text":">, ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V","text":"SIMD32"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V","text":"SIMD32"},{"kind":"text","text":"<"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">","kind":"text"}],"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/._=(_:_:)-21kci":{"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._=(_:_:)-21kci","url":"\/documentation\/compute\/simd32\/'._=(_:_:)-21kci","abstract":[{"text":"A vector mask with the result of a pointwise greater-than-or-equal-to comparison.","type":"text"}],"title":".>=(_:_:)","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":".>=","kind":"identifier"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"text":"SIMD32","kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V"},{"kind":"text","text":"<"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V","text":"SIMD32"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Scalar"},{"text":">) -> ","kind":"text"},{"preciseIdentifier":"s:s8SIMDMaskV","kind":"typeIdentifier","text":"SIMDMask"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"SIMD32","preciseIdentifier":"s:s6SIMD32V"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"text":"MaskStorage","preciseIdentifier":"s:s6SIMD32V11MaskStoragea","kind":"typeIdentifier"},{"text":">","kind":"text"}],"type":"topic","conformance":{"constraints":[{"code":"Scalar","type":"codeVoice"},{"type":"text","text":" is "},{"type":"codeVoice","code":"UInt64"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/.!=(_:_:)-6ia6g":{"conformance":{"constraints":[{"code":"Scalar","type":"codeVoice"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Float"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/.!=(_:_:)-6ia6g","url":"\/documentation\/compute\/simd32\/'.!=(_:_:)-6ia6g","type":"topic","abstract":[{"text":"A vector mask with the result of a pointwise inequality comparison.","type":"text"}],"role":"symbol","title":".!=(_:_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":".!="},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"SIMD32","preciseIdentifier":"s:s6SIMD32V","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"kind":"typeIdentifier","text":"SIMD32","preciseIdentifier":"s:s6SIMD32V"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Scalar"},{"text":">) -> ","kind":"text"},{"preciseIdentifier":"s:s8SIMDMaskV","kind":"typeIdentifier","text":"SIMDMask"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V","text":"SIMD32"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":">."},{"text":"MaskStorage","kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V11MaskStoragea"},{"kind":"text","text":">"}],"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/&+(_:_:)-58lvj":{"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&+(_:_:)-58lvj","url":"\/documentation\/compute\/simd32\/&+(_:_:)-58lvj","abstract":[{"type":"text","text":"The wrapping sum of two vectors."}],"title":"&+(_:_:)","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"&+"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"text":"SIMD32","kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Scalar"},{"kind":"text","text":">, "},{"text":"SIMD32","kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"preciseIdentifier":"s:s6SIMD32V","text":"SIMD32","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Scalar"},{"text":">","kind":"text"}],"type":"topic","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"type":"text","text":" is "},{"code":"UInt","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/.==(_:_:)-60n8s":{"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Int","type":"codeVoice"},{"text":".","type":"text"}]},"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/.==(_:_:)-60n8s","url":"\/documentation\/compute\/simd32\/'.==(_:_:)-60n8s","type":"topic","abstract":[{"type":"text","text":"A vector mask with the result of a pointwise equality comparison."}],"role":"symbol","title":".==(_:_:)","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":".==","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"preciseIdentifier":"s:s6SIMD32V","kind":"typeIdentifier","text":"SIMD32"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"preciseIdentifier":"s:s6SIMD32V","text":"SIMD32","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"preciseIdentifier":"s:s8SIMDMaskV","kind":"typeIdentifier","text":"SIMDMask"},{"kind":"text","text":"<"},{"text":"SIMD32","kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V"},{"kind":"text","text":"<"},{"text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":">."},{"preciseIdentifier":"s:s6SIMD32V11MaskStoragea","text":"MaskStorage","kind":"typeIdentifier"},{"text":">","kind":"text"}],"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/._=(_:_:)-64het":{"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._=(_:_:)-64het","url":"\/documentation\/compute\/simd32\/'._=(_:_:)-64het","abstract":[{"type":"text","text":"A vector mask with the result of a pointwise greater-than-or-equal-to comparison."}],"title":".>=(_:_:)","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":".>=","kind":"identifier"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"SIMD32","preciseIdentifier":"s:s6SIMD32V"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"SIMD32","preciseIdentifier":"s:s6SIMD32V","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"text":"SIMDMask","preciseIdentifier":"s:s8SIMDMaskV","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"SIMD32","kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V"},{"kind":"text","text":"<"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"kind":"typeIdentifier","text":"MaskStorage","preciseIdentifier":"s:s6SIMD32V11MaskStoragea"},{"kind":"text","text":">"}],"type":"topic","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Scalar"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Float"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/.!=(_:_:)-21n3w":{"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"UInt","type":"codeVoice"},{"type":"text","text":"."}]},"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/.!=(_:_:)-21n3w","url":"\/documentation\/compute\/simd32\/'.!=(_:_:)-21n3w","type":"topic","abstract":[{"text":"A vector mask with the result of a pointwise inequality comparison.","type":"text"}],"role":"symbol","title":".!=(_:_:)","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":".!=","kind":"identifier"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"SIMD32","preciseIdentifier":"s:s6SIMD32V"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"text":"SIMD32","kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V"},{"kind":"text","text":"<"},{"text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"text":"SIMDMask","kind":"typeIdentifier","preciseIdentifier":"s:s8SIMDMaskV"},{"text":"<","kind":"text"},{"text":"SIMD32","preciseIdentifier":"s:s6SIMD32V","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"kind":"typeIdentifier","text":"MaskStorage","preciseIdentifier":"s:s6SIMD32V11MaskStoragea"},{"kind":"text","text":">"}],"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/.==(_:_:)-93khl":{"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/.==(_:_:)-93khl","url":"\/documentation\/compute\/simd32\/'.==(_:_:)-93khl","abstract":[{"type":"text","text":"A vector mask with the result of a pointwise equality comparison."}],"title":".==(_:_:)","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":".==","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:s6SIMD32V","kind":"typeIdentifier","text":"SIMD32"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Scalar"},{"text":">, ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V","text":"SIMD32"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s8SIMDMaskV","text":"SIMDMask"},{"kind":"text","text":"<"},{"text":"SIMD32","kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Scalar"},{"text":">.","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V11MaskStoragea","text":"MaskStorage"},{"kind":"text","text":">"}],"type":"topic","conformance":{"constraints":[{"code":"Scalar","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Float16","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/&-=(_:_:)-8rceb":{"conformance":{"constraints":[{"code":"Scalar","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"UInt","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&-=(_:_:)-8rceb","url":"\/documentation\/compute\/simd32\/&-=(_:_:)-8rceb","type":"topic","abstract":[{"type":"text","text":"Updates the left hand side with the wrapping difference of the two"},{"type":"text","text":" "},{"text":"vectors.","type":"text"}],"role":"symbol","title":"&-=(_:_:)","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"&-="},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"text":"SIMD32","kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Scalar"},{"kind":"text","text":">, "},{"text":"SIMD32","kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Scalar"},{"text":">)","kind":"text"}],"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/init(_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:)":{"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/init(_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:)","url":"\/documentation\/compute\/simd32\/init(_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:)","abstract":[{"text":"Creates a new vector from the given elements.","type":"text"}],"title":"init(_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:)","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Scalar"},{"kind":"text","text":", "},{"text":"Scalar","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Scalar"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Scalar"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Scalar"},{"text":", ","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Scalar"},{"text":", ","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Scalar","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Scalar"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Scalar"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Scalar"},{"kind":"text","text":", "},{"text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Scalar"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Scalar"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Scalar"},{"text":", ","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Scalar","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Scalar"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Scalar"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Scalar"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Scalar"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Scalar"},{"kind":"text","text":", "},{"text":"Scalar","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Scalar"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Scalar"},{"kind":"text","text":")"}],"type":"topic","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/._(_:_:)-9e393":{"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Scalar"},{"type":"text","text":" is "},{"code":"UInt32","type":"codeVoice"},{"text":".","type":"text"}]},"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._(_:_:)-9e393","url":"\/documentation\/compute\/simd32\/'._(_:_:)-9e393","type":"topic","abstract":[{"text":"A vector mask with the result of a pointwise greater-than comparison.","type":"text"}],"role":"symbol","title":".>(_:_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":".>","kind":"identifier"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"preciseIdentifier":"s:s6SIMD32V","kind":"typeIdentifier","text":"SIMD32"},{"kind":"text","text":"<"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V","text":"SIMD32"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Scalar"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"SIMDMask","preciseIdentifier":"s:s8SIMDMaskV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V","text":"SIMD32"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":">."},{"preciseIdentifier":"s:s6SIMD32V11MaskStoragea","text":"MaskStorage","kind":"typeIdentifier"},{"kind":"text","text":">"}],"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/._(_:_:)-5muzp":{"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._(_:_:)-5muzp","url":"\/documentation\/compute\/simd32\/'._(_:_:)-5muzp","abstract":[{"type":"text","text":"A vector mask with the result of a pointwise greater-than comparison."}],"title":".>(_:_:)","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":".>"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"preciseIdentifier":"s:s6SIMD32V","kind":"typeIdentifier","text":"SIMD32"},{"kind":"text","text":"<"},{"text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"preciseIdentifier":"s:s6SIMD32V","text":"SIMD32","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Scalar"},{"kind":"text","text":">) -> "},{"preciseIdentifier":"s:s8SIMDMaskV","kind":"typeIdentifier","text":"SIMDMask"},{"text":"<","kind":"text"},{"text":"SIMD32","kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V"},{"kind":"text","text":"<"},{"text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":">."},{"kind":"typeIdentifier","text":"MaskStorage","preciseIdentifier":"s:s6SIMD32V11MaskStoragea"},{"kind":"text","text":">"}],"type":"topic","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Scalar"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Int64"},{"type":"text","text":"."}]},"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/&+(_:_:)-3e43c":{"abstract":[{"text":"The wrapping sum of two vectors.","type":"text"}],"type":"topic","url":"\/documentation\/compute\/simd32\/&+(_:_:)-3e43c","role":"symbol","kind":"symbol","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Scalar"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Int64"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&+(_:_:)-3e43c","title":"&+(_:_:)","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"&+","kind":"identifier"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"text":"SIMD32","kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V"},{"kind":"text","text":"<"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"SIMD32","preciseIdentifier":"s:s6SIMD32V","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Scalar"},{"text":">) -> ","kind":"text"},{"preciseIdentifier":"s:s6SIMD32V","text":"SIMD32","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">","kind":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/._=(_:_:)-6wunc":{"conformance":{"constraints":[{"code":"Scalar","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Int16","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._=(_:_:)-6wunc","url":"\/documentation\/compute\/simd32\/'._=(_:_:)-6wunc","type":"topic","abstract":[{"text":"A vector mask with the result of a pointwise less-than-or-equal-to comparison.","type":"text"}],"role":"symbol","title":".<=(_:_:)","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":".<="},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"SIMD32","preciseIdentifier":"s:s6SIMD32V"},{"kind":"text","text":"<"},{"text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"text":"SIMD32","kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Scalar"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s8SIMDMaskV","text":"SIMDMask"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s6SIMD32V","text":"SIMD32","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":">."},{"preciseIdentifier":"s:s6SIMD32V11MaskStoragea","kind":"typeIdentifier","text":"MaskStorage"},{"kind":"text","text":">"}],"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/._(_:_:)-9u1rq":{"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._(_:_:)-9u1rq","url":"\/documentation\/compute\/simd32\/'._(_:_:)-9u1rq","abstract":[{"type":"text","text":"A vector mask with the result of a pointwise greater-than comparison."}],"title":".>(_:_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":".>","kind":"identifier"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"preciseIdentifier":"s:s6SIMD32V","kind":"typeIdentifier","text":"SIMD32"},{"kind":"text","text":"<"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"kind":"typeIdentifier","text":"SIMD32","preciseIdentifier":"s:s6SIMD32V"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Scalar"},{"kind":"text","text":">) -> "},{"preciseIdentifier":"s:s8SIMDMaskV","kind":"typeIdentifier","text":"SIMDMask"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"SIMD32","preciseIdentifier":"s:s6SIMD32V"},{"kind":"text","text":"<"},{"text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":">."},{"text":"MaskStorage","kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V11MaskStoragea"},{"kind":"text","text":">"}],"type":"topic","conformance":{"constraints":[{"type":"codeVoice","code":"Scalar"},{"text":" is ","type":"text"},{"code":"Int","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/init(lowHalf:highHalf:)":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/init(lowHalf:highHalf:)","url":"\/documentation\/compute\/simd32\/init(lowhalf:highhalf:)","type":"topic","abstract":[{"text":"Creates a new vector from two half-length vectors.","type":"text"}],"role":"symbol","title":"init(lowHalf:highHalf:)","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"text":"lowHalf","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s6SIMD16V","text":"SIMD16","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Scalar"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"highHalf"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD16V","text":"SIMD16"},{"kind":"text","text":"<"},{"text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":">)"}],"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/&*=(_:_:)-90j9c":{"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&*=(_:_:)-90j9c","url":"\/documentation\/compute\/simd32\/&*=(_:_:)-90j9c","abstract":[{"text":"Updates the left hand side with the pointwise wrapping product of two","type":"text"},{"text":" ","type":"text"},{"text":"vectors.","type":"text"}],"title":"&*=(_:_:)","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"&*="},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:s6SIMD32V","text":"SIMD32","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Scalar"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V","text":"SIMD32"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Scalar"},{"text":">)","kind":"text"}],"type":"topic","conformance":{"constraints":[{"type":"codeVoice","code":"Scalar"},{"type":"text","text":" is "},{"code":"Int64","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/&*=(_:_:)-4rx0a":{"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Scalar"},{"text":" is ","type":"text"},{"code":"UInt8","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&*=(_:_:)-4rx0a","url":"\/documentation\/compute\/simd32\/&*=(_:_:)-4rx0a","type":"topic","abstract":[{"type":"text","text":"Updates the left hand side with the pointwise wrapping product of two"},{"type":"text","text":" "},{"type":"text","text":"vectors."}],"role":"symbol","title":"&*=(_:_:)","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"&*=","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V","text":"SIMD32"},{"kind":"text","text":"<"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V","text":"SIMD32"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Scalar"},{"kind":"text","text":">)"}],"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Encodable":{"url":"\/documentation\/compute\/encodable","navigatorTitle":[{"text":"Encodable","kind":"identifier"}],"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"Encodable","kind":"identifier"}],"abstract":[{"text":"A type that can encode itself to an external representation.","type":"text"}],"type":"topic","title":"Encodable","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Encodable"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/._=(_:_:)-crv1":{"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._=(_:_:)-crv1","url":"\/documentation\/compute\/simd32\/'._=(_:_:)-crv1","abstract":[{"text":"A vector mask with the result of a pointwise greater-than-or-equal-to comparison.","type":"text"}],"title":".>=(_:_:)","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":".>=","kind":"identifier"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"SIMD32","preciseIdentifier":"s:s6SIMD32V"},{"kind":"text","text":"<"},{"text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"text":"SIMD32","kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V"},{"kind":"text","text":"<"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s8SIMDMaskV","text":"SIMDMask"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s6SIMD32V","kind":"typeIdentifier","text":"SIMD32"},{"kind":"text","text":"<"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"preciseIdentifier":"s:s6SIMD32V11MaskStoragea","kind":"typeIdentifier","text":"MaskStorage"},{"text":">","kind":"text"}],"type":"topic","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Scalar"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Float16"},{"type":"text","text":"."}]},"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/BitwiseCopyable":{"navigatorTitle":[{"kind":"identifier","text":"BitwiseCopyable"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"SIMDScalar"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Scalar.SIMD32Storage"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"BitwiseCopyable"},{"type":"text","text":"."}]},"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BitwiseCopyable","url":"\/documentation\/compute\/bitwisecopyable","type":"topic","abstract":[],"role":"symbol","title":"BitwiseCopyable","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"BitwiseCopyable"}],"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/&-(_:_:)-7kezr":{"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&-(_:_:)-7kezr","url":"\/documentation\/compute\/simd32\/&-(_:_:)-7kezr","abstract":[{"type":"text","text":"The wrapping difference of two vectors."}],"title":"&-(_:_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"&-","kind":"identifier"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"text":"SIMD32","preciseIdentifier":"s:s6SIMD32V","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Scalar"},{"text":">, ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V","text":"SIMD32"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Scalar"},{"text":">) -> ","kind":"text"},{"preciseIdentifier":"s:s6SIMD32V","text":"SIMD32","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":">"}],"type":"topic","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Int64"},{"text":".","type":"text"}]},"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/._=(_:_:)-2uri4":{"conformance":{"constraints":[{"code":"Scalar","type":"codeVoice"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Int16"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._=(_:_:)-2uri4","url":"\/documentation\/compute\/simd32\/'._=(_:_:)-2uri4","type":"topic","abstract":[{"type":"text","text":"A vector mask with the result of a pointwise greater-than-or-equal-to comparison."}],"role":"symbol","title":".>=(_:_:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":".>="},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"text":"SIMD32","kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V"},{"kind":"text","text":"<"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V","text":"SIMD32"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Scalar"},{"text":">) -> ","kind":"text"},{"preciseIdentifier":"s:s8SIMDMaskV","kind":"typeIdentifier","text":"SIMDMask"},{"text":"<","kind":"text"},{"text":"SIMD32","preciseIdentifier":"s:s6SIMD32V","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Scalar"},{"text":">.","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V11MaskStoragea","text":"MaskStorage"},{"kind":"text","text":">"}],"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/&+(_:_:)-w70d":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&+(_:_:)-w70d","kind":"symbol","abstract":[{"text":"The wrapping sum of two vectors.","type":"text"}],"role":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Int"},{"text":".","type":"text"}]},"title":"&+(_:_:)","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"&+"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"preciseIdentifier":"s:s6SIMD32V","text":"SIMD32","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Scalar"},{"text":">, ","kind":"text"},{"preciseIdentifier":"s:s6SIMD32V","kind":"typeIdentifier","text":"SIMD32"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Scalar"},{"text":">) -> ","kind":"text"},{"preciseIdentifier":"s:s6SIMD32V","text":"SIMD32","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":">"}],"url":"\/documentation\/compute\/simd32\/&+(_:_:)-w70d","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/&+=(_:_:)-86txd":{"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&+=(_:_:)-86txd","url":"\/documentation\/compute\/simd32\/&+=(_:_:)-86txd","abstract":[{"text":"Updates the left hand side with the wrapping sum of the two","type":"text"},{"type":"text","text":" "},{"type":"text","text":"vectors."}],"title":"&+=(_:_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"&+="},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"preciseIdentifier":"s:s6SIMD32V","text":"SIMD32","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Scalar"},{"text":">, ","kind":"text"},{"kind":"typeIdentifier","text":"SIMD32","preciseIdentifier":"s:s6SIMD32V"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Scalar"},{"kind":"text","text":">)"}],"type":"topic","conformance":{"constraints":[{"type":"codeVoice","code":"Scalar"},{"type":"text","text":" is "},{"type":"codeVoice","code":"UInt64"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/&+(_:_:)-9wssy":{"conformance":{"constraints":[{"code":"Scalar","type":"codeVoice"},{"type":"text","text":" is "},{"code":"UInt64","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&+(_:_:)-9wssy","url":"\/documentation\/compute\/simd32\/&+(_:_:)-9wssy","type":"topic","abstract":[{"text":"The wrapping sum of two vectors.","type":"text"}],"role":"symbol","title":"&+(_:_:)","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"&+"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V","text":"SIMD32"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Scalar"},{"text":">, ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V","text":"SIMD32"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"text":"SIMD32","kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V"},{"kind":"text","text":"<"},{"text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":">"}],"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/&-(_:_:)-4a5qw":{"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&-(_:_:)-4a5qw","url":"\/documentation\/compute\/simd32\/&-(_:_:)-4a5qw","abstract":[{"text":"The wrapping difference of two vectors.","type":"text"}],"title":"&-(_:_:)","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"&-","kind":"identifier"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"text":"SIMD32","kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V"},{"kind":"text","text":"<"},{"text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V","text":"SIMD32"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Scalar"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"SIMD32","preciseIdentifier":"s:s6SIMD32V"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Scalar"},{"text":">","kind":"text"}],"type":"topic","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"type":"text","text":" is "},{"type":"codeVoice","code":"UInt16"},{"type":"text","text":"."}]},"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/._=(_:_:)-69fm2":{"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Float16","type":"codeVoice"},{"text":".","type":"text"}]},"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._=(_:_:)-69fm2","url":"\/documentation\/compute\/simd32\/'._=(_:_:)-69fm2","type":"topic","abstract":[{"type":"text","text":"A vector mask with the result of a pointwise less-than-or-equal-to comparison."}],"role":"symbol","title":".<=(_:_:)","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":".<="},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V","text":"SIMD32"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Scalar"},{"kind":"text","text":">, "},{"preciseIdentifier":"s:s6SIMD32V","kind":"typeIdentifier","text":"SIMD32"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Scalar"},{"kind":"text","text":">) -> "},{"text":"SIMDMask","kind":"typeIdentifier","preciseIdentifier":"s:s8SIMDMaskV"},{"kind":"text","text":"<"},{"text":"SIMD32","kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V"},{"kind":"text","text":"<"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V11MaskStoragea","text":"MaskStorage"},{"text":">","kind":"text"}],"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/._(_:_:)-672ev":{"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._(_:_:)-672ev","url":"\/documentation\/compute\/simd32\/'._(_:_:)-672ev","abstract":[{"type":"text","text":"A vector mask with the result of a pointwise less-than comparison."}],"title":".<(_:_:)","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":".<","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V","text":"SIMD32"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Scalar"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","text":"SIMD32","preciseIdentifier":"s:s6SIMD32V"},{"kind":"text","text":"<"},{"text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"text":"SIMDMask","kind":"typeIdentifier","preciseIdentifier":"s:s8SIMDMaskV"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s6SIMD32V","kind":"typeIdentifier","text":"SIMD32"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Scalar"},{"text":">.","kind":"text"},{"preciseIdentifier":"s:s6SIMD32V11MaskStoragea","kind":"typeIdentifier","text":"MaskStorage"},{"text":">","kind":"text"}],"type":"topic","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Scalar"},{"text":" is ","type":"text"},{"code":"Int16","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/._(_:_:)-x09f":{"title":".<(_:_:)","kind":"symbol","url":"\/documentation\/compute\/simd32\/'._(_:_:)-x09f","role":"symbol","abstract":[{"type":"text","text":"A vector mask with the result of a pointwise less-than comparison."}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":".<"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"SIMD32","kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V"},{"kind":"text","text":"<"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"SIMD32","kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Scalar"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s8SIMDMaskV","text":"SIMDMask"},{"kind":"text","text":"<"},{"text":"SIMD32","preciseIdentifier":"s:s6SIMD32V","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"preciseIdentifier":"s:s6SIMD32V11MaskStoragea","text":"MaskStorage","kind":"typeIdentifier"},{"text":">","kind":"text"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Scalar"},{"type":"text","text":" is "},{"code":"Int","type":"codeVoice"},{"type":"text","text":"."}]},"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._(_:_:)-x09f"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/.==(_:_:)-958fg":{"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Int8"},{"type":"text","text":"."}]},"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/.==(_:_:)-958fg","type":"topic","title":".==(_:_:)","role":"symbol","url":"\/documentation\/compute\/simd32\/'.==(_:_:)-958fg","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":".=="},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:s6SIMD32V","kind":"typeIdentifier","text":"SIMD32"},{"kind":"text","text":"<"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V","text":"SIMD32"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Scalar"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s8SIMDMaskV","text":"SIMDMask"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V","text":"SIMD32"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":">."},{"kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V11MaskStoragea","text":"MaskStorage"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"A vector mask with the result of a pointwise equality comparison."}]},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/&*=(_:_:)-72dnf":{"role":"symbol","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"&*=","kind":"identifier"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"text":"SIMD32","kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Scalar"},{"text":">, ","kind":"text"},{"text":"SIMD32","kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">)","kind":"text"}],"title":"&*=(_:_:)","url":"\/documentation\/compute\/simd32\/&*=(_:_:)-72dnf","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Int8"},{"type":"text","text":"."}]},"abstract":[{"type":"text","text":"Updates the left hand side with the pointwise wrapping product of two"},{"type":"text","text":" "},{"type":"text","text":"vectors."}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&*=(_:_:)-72dnf"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/&-=(_:_:)-767vd":{"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Scalar"},{"text":" is ","type":"text"},{"code":"Int","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&-=(_:_:)-767vd","type":"topic","title":"&-=(_:_:)","role":"symbol","url":"\/documentation\/compute\/simd32\/&-=(_:_:)-767vd","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"&-="},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V","text":"SIMD32"},{"kind":"text","text":"<"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"preciseIdentifier":"s:s6SIMD32V","text":"SIMD32","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">)","kind":"text"}],"abstract":[{"type":"text","text":"Updates the left hand side with the wrapping difference of the two"},{"text":" ","type":"text"},{"type":"text","text":"vectors."}]},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/&*(_:_:)-51nvg":{"role":"symbol","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"&*"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:s6SIMD32V","kind":"typeIdentifier","text":"SIMD32"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"SIMD32","preciseIdentifier":"s:s6SIMD32V","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V","text":"SIMD32"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Scalar"},{"kind":"text","text":">"}],"title":"&*(_:_:)","url":"\/documentation\/compute\/simd32\/&*(_:_:)-51nvg","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Scalar"},{"type":"text","text":" is "},{"code":"UInt64","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"abstract":[{"type":"text","text":"The pointwise wrapping product of two vectors."}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&*(_:_:)-51nvg"},"doc://com.swallow.documentation.Compute/documentation/Compute/Equatable":{"abstract":[{"text":"A type that can be compared for value equality.","type":"text"}],"type":"topic","title":"Equatable","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Equatable"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Equatable","role":"symbol","url":"\/documentation\/compute\/equatable","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Equatable","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/.!=(_:_:)-4pl1l":{"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Scalar"},{"type":"text","text":" is "},{"code":"Int","type":"codeVoice"},{"text":".","type":"text"}]},"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/.!=(_:_:)-4pl1l","type":"topic","title":".!=(_:_:)","role":"symbol","url":"\/documentation\/compute\/simd32\/'.!=(_:_:)-4pl1l","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":".!=","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"preciseIdentifier":"s:s6SIMD32V","text":"SIMD32","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Scalar"},{"text":">, ","kind":"text"},{"preciseIdentifier":"s:s6SIMD32V","text":"SIMD32","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Scalar"},{"text":">) -> ","kind":"text"},{"preciseIdentifier":"s:s8SIMDMaskV","kind":"typeIdentifier","text":"SIMDMask"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V","text":"SIMD32"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Scalar"},{"text":">.","kind":"text"},{"text":"MaskStorage","preciseIdentifier":"s:s6SIMD32V11MaskStoragea","kind":"typeIdentifier"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"A vector mask with the result of a pointwise inequality comparison."}]},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/&*(_:_:)-24w7p":{"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"&*"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V","text":"SIMD32"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"SIMD32","kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"text":"SIMD32","kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Scalar"},{"text":">","kind":"text"}],"title":"&*(_:_:)","url":"\/documentation\/compute\/simd32\/&*(_:_:)-24w7p","conformance":{"constraints":[{"type":"codeVoice","code":"Scalar"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"UInt8"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"abstract":[{"text":"The pointwise wrapping product of two vectors.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&*(_:_:)-24w7p"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/._=(_:_:)-46gd9":{"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Scalar"},{"text":" is ","type":"text"},{"code":"UInt32","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._=(_:_:)-46gd9","type":"topic","title":".<=(_:_:)","role":"symbol","url":"\/documentation\/compute\/simd32\/'._=(_:_:)-46gd9","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":".<=","kind":"identifier"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V","text":"SIMD32"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Scalar"},{"text":">, ","kind":"text"},{"preciseIdentifier":"s:s6SIMD32V","text":"SIMD32","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Scalar"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","text":"SIMDMask","preciseIdentifier":"s:s8SIMDMaskV"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s6SIMD32V","text":"SIMD32","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"preciseIdentifier":"s:s6SIMD32V11MaskStoragea","text":"MaskStorage","kind":"typeIdentifier"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"A vector mask with the result of a pointwise less-than-or-equal-to comparison."}]},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/&*=(_:_:)-2z0s7":{"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&*=(_:_:)-2z0s7","title":"&*=(_:_:)","abstract":[{"text":"Updates the left hand side with the pointwise wrapping product of two","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"vectors."}],"role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"&*=","kind":"identifier"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V","text":"SIMD32"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"text":"SIMD32","preciseIdentifier":"s:s6SIMD32V","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Scalar"},{"kind":"text","text":">)"}],"kind":"symbol","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Scalar"},{"text":" is ","type":"text"},{"code":"Int16","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"url":"\/documentation\/compute\/simd32\/&*=(_:_:)-2z0s7"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/&-=(_:_:)-4juf3":{"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"&-=","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SIMD32","kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Scalar"},{"text":">, ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V","text":"SIMD32"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":">)"}],"title":"&-=(_:_:)","url":"\/documentation\/compute\/simd32\/&-=(_:_:)-4juf3","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"type":"text","text":" is "},{"type":"codeVoice","code":"UInt8"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"abstract":[{"type":"text","text":"Updates the left hand side with the wrapping difference of the two"},{"text":" ","type":"text"},{"type":"text","text":"vectors."}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&-=(_:_:)-4juf3"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/Encodable-Implementations":{"abstract":[],"type":"topic","role":"collectionGroup","kind":"article","title":"Encodable Implementations","url":"\/documentation\/compute\/simd32\/encodable-implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/Encodable-Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/._=(_:_:)-18zfw":{"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"type":"text","text":" is "},{"code":"UInt","type":"codeVoice"},{"type":"text","text":"."}]},"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._=(_:_:)-18zfw","type":"topic","title":".<=(_:_:)","role":"symbol","url":"\/documentation\/compute\/simd32\/'._=(_:_:)-18zfw","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":".<="},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V","text":"SIMD32"},{"kind":"text","text":"<"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V","text":"SIMD32"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Scalar"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","text":"SIMDMask","preciseIdentifier":"s:s8SIMDMaskV"},{"text":"<","kind":"text"},{"text":"SIMD32","kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":">."},{"text":"MaskStorage","kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V11MaskStoragea"},{"text":">","kind":"text"}],"abstract":[{"type":"text","text":"A vector mask with the result of a pointwise less-than-or-equal-to comparison."}]},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/.==(_:_:)-6tfjq":{"role":"symbol","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":".==","kind":"identifier"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"text":"SIMD32","kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Scalar"},{"kind":"text","text":">, "},{"text":"SIMD32","kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"SIMDMask","preciseIdentifier":"s:s8SIMDMaskV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"SIMD32","preciseIdentifier":"s:s6SIMD32V","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":">."},{"kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V11MaskStoragea","text":"MaskStorage"},{"kind":"text","text":">"}],"title":".==(_:_:)","url":"\/documentation\/compute\/simd32\/'.==(_:_:)-6tfjq","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Scalar"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Float"},{"text":".","type":"text"}]},"abstract":[{"text":"A vector mask with the result of a pointwise equality comparison.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/.==(_:_:)-6tfjq"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/ArrayLiteralElement":{"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/ArrayLiteralElement","type":"topic","title":"SIMD32.ArrayLiteralElement","role":"symbol","url":"\/documentation\/compute\/simd32\/arrayliteralelement","fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ArrayLiteralElement"}],"navigatorTitle":[{"kind":"identifier","text":"ArrayLiteralElement"}],"abstract":[{"text":"The type of the elements of an array literal.","type":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/&+=(_:_:)-63764":{"abstract":[{"type":"text","text":"Updates the left hand side with the wrapping sum of the two"},{"type":"text","text":" "},{"type":"text","text":"vectors."}],"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"&+=","kind":"identifier"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:s6SIMD32V","text":"SIMD32","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"SIMD32","kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Scalar"},{"kind":"text","text":">)"}],"url":"\/documentation\/compute\/simd32\/&+=(_:_:)-63764","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&+=(_:_:)-63764","kind":"symbol","title":"&+=(_:_:)","role":"symbol","type":"topic","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Scalar"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Int"},{"text":".","type":"text"}]}},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/&*=(_:_:)-2t3nr":{"role":"symbol","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"&*=","kind":"identifier"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"text":"SIMD32","kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"preciseIdentifier":"s:s6SIMD32V","kind":"typeIdentifier","text":"SIMD32"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Scalar"},{"text":">)","kind":"text"}],"title":"&*=(_:_:)","url":"\/documentation\/compute\/simd32\/&*=(_:_:)-2t3nr","conformance":{"constraints":[{"type":"codeVoice","code":"Scalar"},{"text":" is ","type":"text"},{"code":"Int","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"abstract":[{"text":"Updates the left hand side with the pointwise wrapping product of two","type":"text"},{"type":"text","text":" "},{"type":"text","text":"vectors."}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&*=(_:_:)-2t3nr"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/&+=(_:_:)-rmc":{"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"type":"text","text":" is "},{"code":"UInt8","type":"codeVoice"},{"text":".","type":"text"}]},"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&+=(_:_:)-rmc","type":"topic","title":"&+=(_:_:)","role":"symbol","url":"\/documentation\/compute\/simd32\/&+=(_:_:)-rmc","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"&+=","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:s6SIMD32V","text":"SIMD32","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Scalar"},{"kind":"text","text":">, "},{"text":"SIMD32","preciseIdentifier":"s:s6SIMD32V","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Scalar"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Updates the left hand side with the wrapping sum of the two"},{"text":" ","type":"text"},{"text":"vectors.","type":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/._=(_:_:)-2ofnf":{"role":"symbol","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":".>=","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"preciseIdentifier":"s:s6SIMD32V","kind":"typeIdentifier","text":"SIMD32"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"text":"SIMD32","kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Scalar"},{"text":">) -> ","kind":"text"},{"text":"SIMDMask","kind":"typeIdentifier","preciseIdentifier":"s:s8SIMDMaskV"},{"kind":"text","text":"<"},{"text":"SIMD32","kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V"},{"kind":"text","text":"<"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V11MaskStoragea","text":"MaskStorage"},{"text":">","kind":"text"}],"title":".>=(_:_:)","url":"\/documentation\/compute\/simd32\/'._=(_:_:)-2ofnf","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Scalar"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Int8"},{"type":"text","text":"."}]},"abstract":[{"type":"text","text":"A vector mask with the result of a pointwise greater-than-or-equal-to comparison."}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._=(_:_:)-2ofnf"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/._(_:_:)-6in31":{"conformance":{"constraints":[{"code":"Scalar","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Double","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._(_:_:)-6in31","type":"topic","title":".>(_:_:)","role":"symbol","url":"\/documentation\/compute\/simd32\/'._(_:_:)-6in31","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":".>"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V","text":"SIMD32"},{"kind":"text","text":"<"},{"text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"preciseIdentifier":"s:s6SIMD32V","kind":"typeIdentifier","text":"SIMD32"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Scalar"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s8SIMDMaskV","text":"SIMDMask"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V","text":"SIMD32"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"text":"MaskStorage","kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V11MaskStoragea"},{"text":">","kind":"text"}],"abstract":[{"text":"A vector mask with the result of a pointwise greater-than comparison.","type":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/&-(_:_:)-3di3j":{"role":"symbol","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"&-"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V","text":"SIMD32"},{"kind":"text","text":"<"},{"text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V","text":"SIMD32"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Scalar"},{"text":">) -> ","kind":"text"},{"text":"SIMD32","kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V"},{"kind":"text","text":"<"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">","kind":"text"}],"title":"&-(_:_:)","url":"\/documentation\/compute\/simd32\/&-(_:_:)-3di3j","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Scalar"},{"type":"text","text":" is "},{"code":"UInt","type":"codeVoice"},{"text":".","type":"text"}]},"abstract":[{"text":"The wrapping difference of two vectors.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&-(_:_:)-3di3j"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/.==(_:_:)-5kd05":{"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Scalar"},{"text":" is ","type":"text"},{"code":"Int32","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/.==(_:_:)-5kd05","type":"topic","title":".==(_:_:)","role":"symbol","url":"\/documentation\/compute\/simd32\/'.==(_:_:)-5kd05","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":".=="},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"SIMD32","kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Scalar"},{"kind":"text","text":">, "},{"preciseIdentifier":"s:s6SIMD32V","kind":"typeIdentifier","text":"SIMD32"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"SIMDMask","preciseIdentifier":"s:s8SIMDMaskV"},{"text":"<","kind":"text"},{"text":"SIMD32","kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"preciseIdentifier":"s:s6SIMD32V11MaskStoragea","text":"MaskStorage","kind":"typeIdentifier"},{"text":">","kind":"text"}],"abstract":[{"type":"text","text":"A vector mask with the result of a pointwise equality comparison."}]},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/&+=(_:_:)-6d53x":{"role":"symbol","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"&+="},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:s6SIMD32V","kind":"typeIdentifier","text":"SIMD32"},{"kind":"text","text":"<"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V","text":"SIMD32"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Scalar"},{"text":">)","kind":"text"}],"title":"&+=(_:_:)","url":"\/documentation\/compute\/simd32\/&+=(_:_:)-6d53x","conformance":{"constraints":[{"type":"codeVoice","code":"Scalar"},{"type":"text","text":" is "},{"code":"Int64","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"abstract":[{"type":"text","text":"Updates the left hand side with the wrapping sum of the two"},{"text":" ","type":"text"},{"text":"vectors.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&+=(_:_:)-6d53x"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/._(_:_:)-89h8r":{"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Int16","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._(_:_:)-89h8r","type":"topic","title":".>(_:_:)","role":"symbol","url":"\/documentation\/compute\/simd32\/'._(_:_:)-89h8r","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":".>"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V","text":"SIMD32"},{"kind":"text","text":"<"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"SIMD32","kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Scalar"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s8SIMDMaskV","text":"SIMDMask"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:s6SIMD32V","kind":"typeIdentifier","text":"SIMD32"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Scalar"},{"kind":"text","text":">."},{"text":"MaskStorage","preciseIdentifier":"s:s6SIMD32V11MaskStoragea","kind":"typeIdentifier"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"A vector mask with the result of a pointwise greater-than comparison."}]},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/.!=(_:_:)-7xxuv":{"role":"symbol","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":".!="},{"kind":"text","text":" "},{"kind":"text","text":"("},{"preciseIdentifier":"s:s6SIMD32V","text":"SIMD32","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"SIMD32","preciseIdentifier":"s:s6SIMD32V","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Scalar"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s8SIMDMaskV","text":"SIMDMask"},{"text":"<","kind":"text"},{"text":"SIMD32","kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"preciseIdentifier":"s:s6SIMD32V11MaskStoragea","text":"MaskStorage","kind":"typeIdentifier"},{"kind":"text","text":">"}],"title":".!=(_:_:)","url":"\/documentation\/compute\/simd32\/'.!=(_:_:)-7xxuv","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Int32","type":"codeVoice"},{"type":"text","text":"."}]},"abstract":[{"type":"text","text":"A vector mask with the result of a pointwise inequality comparison."}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/.!=(_:_:)-7xxuv"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/._=(_:_:)-2375k":{"abstract":[{"text":"A vector mask with the result of a pointwise greater-than-or-equal-to comparison.","type":"text"}],"type":"topic","url":"\/documentation\/compute\/simd32\/'._=(_:_:)-2375k","role":"symbol","kind":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Scalar"},{"text":" is ","type":"text"},{"code":"Double","type":"codeVoice"},{"type":"text","text":"."}]},"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._=(_:_:)-2375k","title":".>=(_:_:)","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":".>=","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"SIMD32","preciseIdentifier":"s:s6SIMD32V","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Scalar"},{"kind":"text","text":">, "},{"preciseIdentifier":"s:s6SIMD32V","text":"SIMD32","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"SIMDMask","kind":"typeIdentifier","preciseIdentifier":"s:s8SIMDMaskV"},{"text":"<","kind":"text"},{"text":"SIMD32","kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Scalar"},{"text":">.","kind":"text"},{"preciseIdentifier":"s:s6SIMD32V11MaskStoragea","text":"MaskStorage","kind":"typeIdentifier"},{"kind":"text","text":">"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/._=(_:_:)-2xto":{"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"UInt8"},{"type":"text","text":"."}]},"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._=(_:_:)-2xto","type":"topic","title":".>=(_:_:)","role":"symbol","url":"\/documentation\/compute\/simd32\/'._=(_:_:)-2xto","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":".>=","kind":"identifier"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V","text":"SIMD32"},{"kind":"text","text":"<"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"preciseIdentifier":"s:s6SIMD32V","text":"SIMD32","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Scalar"},{"kind":"text","text":">) -> "},{"text":"SIMDMask","kind":"typeIdentifier","preciseIdentifier":"s:s8SIMDMaskV"},{"kind":"text","text":"<"},{"text":"SIMD32","preciseIdentifier":"s:s6SIMD32V","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"text":"MaskStorage","kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V11MaskStoragea"},{"text":">","kind":"text"}],"abstract":[{"type":"text","text":"A vector mask with the result of a pointwise greater-than-or-equal-to comparison."}]},"doc://com.swallow.documentation.Compute/documentation/Compute/CustomDebugStringConvertible":{"kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"CustomDebugStringConvertible","kind":"identifier"}],"title":"CustomDebugStringConvertible","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"SIMDScalar"},{"text":".","type":"text"}]},"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CustomDebugStringConvertible","abstract":[{"type":"text","text":"A type with a customized textual representation suitable for debugging"},{"text":" ","type":"text"},{"text":"purposes.","type":"text"}],"url":"\/documentation\/compute\/customdebugstringconvertible","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"CustomDebugStringConvertible"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/._(_:_:)-8vya7":{"role":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Scalar"},{"type":"text","text":" is "},{"code":"Float16","type":"codeVoice"},{"text":".","type":"text"}]},"type":"topic","title":".<(_:_:)","abstract":[{"text":"A vector mask with the result of a pointwise less-than comparison.","type":"text"}],"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":".<"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"text":"SIMD32","kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"SIMD32","kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"SIMDMask","preciseIdentifier":"s:s8SIMDMaskV","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"SIMD32","preciseIdentifier":"s:s6SIMD32V"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Scalar"},{"kind":"text","text":">."},{"text":"MaskStorage","kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V11MaskStoragea"},{"text":">","kind":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._(_:_:)-8vya7","kind":"symbol","url":"\/documentation\/compute\/simd32\/'._(_:_:)-8vya7"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/&*(_:_:)-8r7y1":{"role":"symbol","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"&*","kind":"identifier"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"preciseIdentifier":"s:s6SIMD32V","text":"SIMD32","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"preciseIdentifier":"s:s6SIMD32V","text":"SIMD32","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Scalar"},{"kind":"text","text":">) -> "},{"preciseIdentifier":"s:s6SIMD32V","kind":"typeIdentifier","text":"SIMD32"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Scalar"},{"text":">","kind":"text"}],"title":"&*(_:_:)","url":"\/documentation\/compute\/simd32\/&*(_:_:)-8r7y1","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Scalar"},{"text":" is ","type":"text"},{"code":"Int","type":"codeVoice"},{"text":".","type":"text"}]},"abstract":[{"text":"The pointwise wrapping product of two vectors.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&*(_:_:)-8r7y1"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/&*(_:_:)-5ehsq":{"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Int8"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&*(_:_:)-5ehsq","type":"topic","title":"&*(_:_:)","role":"symbol","url":"\/documentation\/compute\/simd32\/&*(_:_:)-5ehsq","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"&*","kind":"identifier"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V","text":"SIMD32"},{"kind":"text","text":"<"},{"text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"text":"SIMD32","preciseIdentifier":"s:s6SIMD32V","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"SIMD32","preciseIdentifier":"s:s6SIMD32V"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Scalar"},{"text":">","kind":"text"}],"abstract":[{"type":"text","text":"The pointwise wrapping product of two vectors."}]},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"SIMD32","kind":"identifier"}],"title":"SIMD32","navigatorTitle":[{"kind":"identifier","text":"SIMD32"}],"type":"topic","abstract":[{"type":"text","text":"A vector of 32 scalar values."}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32","url":"\/documentation\/compute\/simd32","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/&*=(_:_:)-5zxuu":{"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"&*=","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"preciseIdentifier":"s:s6SIMD32V","kind":"typeIdentifier","text":"SIMD32"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"SIMD32","kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":">)"}],"title":"&*=(_:_:)","url":"\/documentation\/compute\/simd32\/&*=(_:_:)-5zxuu","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"UInt32","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"abstract":[{"text":"Updates the left hand side with the pointwise wrapping product of two","type":"text"},{"type":"text","text":" "},{"text":"vectors.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&*=(_:_:)-5zxuu"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/._=(_:_:)-11ora":{"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Int64","type":"codeVoice"},{"text":".","type":"text"}]},"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._=(_:_:)-11ora","type":"topic","title":".<=(_:_:)","role":"symbol","url":"\/documentation\/compute\/simd32\/'._=(_:_:)-11ora","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":".<=","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:s6SIMD32V","kind":"typeIdentifier","text":"SIMD32"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Scalar"},{"text":">, ","kind":"text"},{"preciseIdentifier":"s:s6SIMD32V","text":"SIMD32","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"preciseIdentifier":"s:s8SIMDMaskV","text":"SIMDMask","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V","text":"SIMD32"},{"kind":"text","text":"<"},{"text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":">."},{"text":"MaskStorage","preciseIdentifier":"s:s6SIMD32V11MaskStoragea","kind":"typeIdentifier"},{"text":">","kind":"text"}],"abstract":[{"text":"A vector mask with the result of a pointwise less-than-or-equal-to comparison.","type":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/._(_:_:)-532p4":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._(_:_:)-532p4","kind":"symbol","abstract":[{"text":"A vector mask with the result of a pointwise less-than comparison.","type":"text"}],"role":"symbol","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Int8","type":"codeVoice"},{"text":".","type":"text"}]},"title":".<(_:_:)","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":".<"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:s6SIMD32V","kind":"typeIdentifier","text":"SIMD32"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Scalar"},{"text":">, ","kind":"text"},{"text":"SIMD32","kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V"},{"kind":"text","text":"<"},{"text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"preciseIdentifier":"s:s8SIMDMaskV","text":"SIMDMask","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V","text":"SIMD32"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"preciseIdentifier":"s:s6SIMD32V11MaskStoragea","text":"MaskStorage","kind":"typeIdentifier"},{"kind":"text","text":">"}],"url":"\/documentation\/compute\/simd32\/'._(_:_:)-532p4","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/&-(_:_:)-1fnzi":{"role":"symbol","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"&-"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"preciseIdentifier":"s:s6SIMD32V","text":"SIMD32","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"preciseIdentifier":"s:s6SIMD32V","text":"SIMD32","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Scalar"},{"kind":"text","text":">) -> "},{"preciseIdentifier":"s:s6SIMD32V","kind":"typeIdentifier","text":"SIMD32"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">","kind":"text"}],"title":"&-(_:_:)","url":"\/documentation\/compute\/simd32\/&-(_:_:)-1fnzi","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Scalar"},{"type":"text","text":" is "},{"code":"UInt32","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"abstract":[{"text":"The wrapping difference of two vectors.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&-(_:_:)-1fnzi"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/._=(_:_:)-2vp6k":{"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Int","type":"codeVoice"},{"text":".","type":"text"}]},"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._=(_:_:)-2vp6k","type":"topic","title":".>=(_:_:)","role":"symbol","url":"\/documentation\/compute\/simd32\/'._=(_:_:)-2vp6k","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":".>="},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"preciseIdentifier":"s:s6SIMD32V","text":"SIMD32","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","text":"SIMD32","preciseIdentifier":"s:s6SIMD32V"},{"kind":"text","text":"<"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"SIMDMask","kind":"typeIdentifier","preciseIdentifier":"s:s8SIMDMaskV"},{"text":"<","kind":"text"},{"text":"SIMD32","preciseIdentifier":"s:s6SIMD32V","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Scalar"},{"kind":"text","text":">."},{"preciseIdentifier":"s:s6SIMD32V11MaskStoragea","kind":"typeIdentifier","text":"MaskStorage"},{"text":">","kind":"text"}],"abstract":[{"text":"A vector mask with the result of a pointwise greater-than-or-equal-to comparison.","type":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/.!=(_:_:)-8nprl":{"role":"symbol","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":".!=","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"SIMD32","kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","text":"SIMD32","preciseIdentifier":"s:s6SIMD32V"},{"kind":"text","text":"<"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"preciseIdentifier":"s:s8SIMDMaskV","text":"SIMDMask","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V","text":"SIMD32"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Scalar"},{"kind":"text","text":">."},{"kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V11MaskStoragea","text":"MaskStorage"},{"text":">","kind":"text"}],"title":".!=(_:_:)","url":"\/documentation\/compute\/simd32\/'.!=(_:_:)-8nprl","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"UInt8","type":"codeVoice"},{"text":".","type":"text"}]},"abstract":[{"text":"A vector mask with the result of a pointwise inequality comparison.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/.!=(_:_:)-8nprl"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/&-=(_:_:)-nlqy":{"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Int64"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&-=(_:_:)-nlqy","type":"topic","title":"&-=(_:_:)","role":"symbol","url":"\/documentation\/compute\/simd32\/&-=(_:_:)-nlqy","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"&-=","kind":"identifier"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"SIMD32","preciseIdentifier":"s:s6SIMD32V"},{"kind":"text","text":"<"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"SIMD32","preciseIdentifier":"s:s6SIMD32V","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Scalar"},{"kind":"text","text":">)"}],"abstract":[{"text":"Updates the left hand side with the wrapping difference of the two","type":"text"},{"text":" ","type":"text"},{"text":"vectors.","type":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/init(_:)-8g4gm":{"role":"symbol","kind":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Other"},{"kind":"text","text":">("},{"text":"SIMD32","kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V"},{"text":"<","kind":"text"},{"text":"Other","kind":"typeIdentifier"},{"text":">)","kind":"text"}],"title":"init(_:)","url":"\/documentation\/compute\/simd32\/init(_:)-8g4gm","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"BinaryFloatingPoint","type":"codeVoice"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"SIMDScalar"},{"type":"text","text":"."}]},"abstract":[{"text":"Creates a new vector from the given vector of integers.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/init(_:)-8g4gm"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/._(_:_:)-5xye0":{"conformance":{"constraints":[{"type":"codeVoice","code":"Scalar"},{"type":"text","text":" is "},{"code":"Float16","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._(_:_:)-5xye0","type":"topic","title":".>(_:_:)","role":"symbol","url":"\/documentation\/compute\/simd32\/'._(_:_:)-5xye0","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":".>","kind":"identifier"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"SIMD32","preciseIdentifier":"s:s6SIMD32V"},{"kind":"text","text":"<"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"SIMD32","preciseIdentifier":"s:s6SIMD32V","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Scalar"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s8SIMDMaskV","text":"SIMDMask"},{"kind":"text","text":"<"},{"text":"SIMD32","preciseIdentifier":"s:s6SIMD32V","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":">."},{"preciseIdentifier":"s:s6SIMD32V11MaskStoragea","text":"MaskStorage","kind":"typeIdentifier"},{"text":">","kind":"text"}],"abstract":[{"text":"A vector mask with the result of a pointwise greater-than comparison.","type":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/init()":{"role":"symbol","kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"title":"init()","url":"\/documentation\/compute\/simd32\/init()","abstract":[{"text":"Creates a vector with zero in all lanes.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/init()"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/._(_:_:)-21g9y":{"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Int64"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._(_:_:)-21g9y","type":"topic","title":".<(_:_:)","role":"symbol","url":"\/documentation\/compute\/simd32\/'._(_:_:)-21g9y","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":".<","kind":"identifier"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V","text":"SIMD32"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Scalar"},{"text":">, ","kind":"text"},{"text":"SIMD32","preciseIdentifier":"s:s6SIMD32V","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"SIMDMask","preciseIdentifier":"s:s8SIMDMaskV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V","text":"SIMD32"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V11MaskStoragea","text":"MaskStorage"},{"kind":"text","text":">"}],"abstract":[{"text":"A vector mask with the result of a pointwise less-than comparison.","type":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/&+(_:_:)-7y0wz":{"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"&+","kind":"identifier"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"SIMD32","preciseIdentifier":"s:s6SIMD32V"},{"kind":"text","text":"<"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"SIMD32","preciseIdentifier":"s:s6SIMD32V","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Scalar"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V","text":"SIMD32"},{"kind":"text","text":"<"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">","kind":"text"}],"title":"&+(_:_:)","url":"\/documentation\/compute\/simd32\/&+(_:_:)-7y0wz","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Scalar"},{"text":" is ","type":"text"},{"code":"Int8","type":"codeVoice"},{"type":"text","text":"."}]},"abstract":[{"text":"The wrapping sum of two vectors.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&+(_:_:)-7y0wz"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/&*(_:_:)-4nfb3":{"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Int32","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&*(_:_:)-4nfb3","type":"topic","title":"&*(_:_:)","role":"symbol","url":"\/documentation\/compute\/simd32\/&*(_:_:)-4nfb3","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"&*","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"SIMD32","preciseIdentifier":"s:s6SIMD32V","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Scalar"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","text":"SIMD32","preciseIdentifier":"s:s6SIMD32V"},{"kind":"text","text":"<"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"preciseIdentifier":"s:s6SIMD32V","text":"SIMD32","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Scalar"},{"kind":"text","text":">"}],"abstract":[{"text":"The pointwise wrapping product of two vectors.","type":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/._=(_:_:)-74z9a":{"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":".<=","kind":"identifier"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"SIMD32","preciseIdentifier":"s:s6SIMD32V"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Scalar"},{"text":">, ","kind":"text"},{"text":"SIMD32","preciseIdentifier":"s:s6SIMD32V","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Scalar"},{"text":">) -> ","kind":"text"},{"text":"SIMDMask","preciseIdentifier":"s:s8SIMDMaskV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s6SIMD32V","kind":"typeIdentifier","text":"SIMD32"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":">."},{"kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V11MaskStoragea","text":"MaskStorage"},{"kind":"text","text":">"}],"title":".<=(_:_:)","url":"\/documentation\/compute\/simd32\/'._=(_:_:)-74z9a","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Scalar"},{"type":"text","text":" is "},{"code":"Float","type":"codeVoice"},{"text":".","type":"text"}]},"abstract":[{"text":"A vector mask with the result of a pointwise less-than-or-equal-to comparison.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._=(_:_:)-74z9a"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/._=(_:_:)-2bc16":{"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"UInt16"},{"type":"text","text":"."}]},"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._=(_:_:)-2bc16","type":"topic","title":".>=(_:_:)","role":"symbol","url":"\/documentation\/compute\/simd32\/'._=(_:_:)-2bc16","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":".>="},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V","text":"SIMD32"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Scalar"},{"text":">, ","kind":"text"},{"text":"SIMD32","preciseIdentifier":"s:s6SIMD32V","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"preciseIdentifier":"s:s8SIMDMaskV","text":"SIMDMask","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:s6SIMD32V","text":"SIMD32","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":">."},{"kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V11MaskStoragea","text":"MaskStorage"},{"kind":"text","text":">"}],"abstract":[{"text":"A vector mask with the result of a pointwise greater-than-or-equal-to comparison.","type":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/&+=(_:_:)-1o0yg":{"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"&+="},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"text":"SIMD32","preciseIdentifier":"s:s6SIMD32V","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Scalar"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V","text":"SIMD32"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":">)"}],"title":"&+=(_:_:)","url":"\/documentation\/compute\/simd32\/&+=(_:_:)-1o0yg","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Int8","type":"codeVoice"},{"type":"text","text":"."}]},"abstract":[{"text":"Updates the left hand side with the wrapping sum of the two","type":"text"},{"type":"text","text":" "},{"text":"vectors.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&+=(_:_:)-1o0yg"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/&*(_:_:)-6maed":{"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Int64","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&*(_:_:)-6maed","type":"topic","title":"&*(_:_:)","role":"symbol","url":"\/documentation\/compute\/simd32\/&*(_:_:)-6maed","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"&*"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"preciseIdentifier":"s:s6SIMD32V","text":"SIMD32","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Scalar"},{"text":">, ","kind":"text"},{"text":"SIMD32","preciseIdentifier":"s:s6SIMD32V","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Scalar"},{"kind":"text","text":">) -> "},{"text":"SIMD32","preciseIdentifier":"s:s6SIMD32V","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Scalar"},{"text":">","kind":"text"}],"abstract":[{"text":"The pointwise wrapping product of two vectors.","type":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/._(_:_:)-3cu0a":{"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":".<","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V","text":"SIMD32"},{"kind":"text","text":"<"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"SIMD32","kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"text":"SIMDMask","kind":"typeIdentifier","preciseIdentifier":"s:s8SIMDMaskV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V","text":"SIMD32"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Scalar"},{"kind":"text","text":">."},{"kind":"typeIdentifier","text":"MaskStorage","preciseIdentifier":"s:s6SIMD32V11MaskStoragea"},{"text":">","kind":"text"}],"title":".<(_:_:)","url":"\/documentation\/compute\/simd32\/'._(_:_:)-3cu0a","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Scalar"},{"text":" is ","type":"text"},{"code":"UInt32","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"abstract":[{"type":"text","text":"A vector mask with the result of a pointwise less-than comparison."}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._(_:_:)-3cu0a"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/&-(_:_:)-67lsa":{"role":"symbol","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"&-"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"text":"SIMD32","preciseIdentifier":"s:s6SIMD32V","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Scalar"},{"kind":"text","text":">, "},{"preciseIdentifier":"s:s6SIMD32V","text":"SIMD32","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V","text":"SIMD32"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Scalar"},{"kind":"text","text":">"}],"title":"&-(_:_:)","url":"\/documentation\/compute\/simd32\/&-(_:_:)-67lsa","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Int","type":"codeVoice"},{"text":".","type":"text"}]},"abstract":[{"text":"The wrapping difference of two vectors.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&-(_:_:)-67lsa"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/._=(_:_:)-2xrmp":{"conformance":{"constraints":[{"type":"codeVoice","code":"Scalar"},{"text":" is ","type":"text"},{"code":"Int32","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._=(_:_:)-2xrmp","type":"topic","title":".<=(_:_:)","role":"symbol","url":"\/documentation\/compute\/simd32\/'._=(_:_:)-2xrmp","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":".<=","kind":"identifier"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"SIMD32","preciseIdentifier":"s:s6SIMD32V"},{"kind":"text","text":"<"},{"text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","text":"SIMD32","preciseIdentifier":"s:s6SIMD32V"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Scalar"},{"text":">) -> ","kind":"text"},{"preciseIdentifier":"s:s8SIMDMaskV","kind":"typeIdentifier","text":"SIMDMask"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:s6SIMD32V","text":"SIMD32","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Scalar"},{"kind":"text","text":">."},{"kind":"typeIdentifier","text":"MaskStorage","preciseIdentifier":"s:s6SIMD32V11MaskStoragea"},{"text":">","kind":"text"}],"abstract":[{"text":"A vector mask with the result of a pointwise less-than-or-equal-to comparison.","type":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/&-(_:_:)-pwyk":{"role":"symbol","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"&-","kind":"identifier"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"preciseIdentifier":"s:s6SIMD32V","kind":"typeIdentifier","text":"SIMD32"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Scalar"},{"text":">, ","kind":"text"},{"kind":"typeIdentifier","text":"SIMD32","preciseIdentifier":"s:s6SIMD32V"},{"kind":"text","text":"<"},{"text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"SIMD32","preciseIdentifier":"s:s6SIMD32V"},{"kind":"text","text":"<"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">","kind":"text"}],"title":"&-(_:_:)","url":"\/documentation\/compute\/simd32\/&-(_:_:)-pwyk","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"UInt64"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"abstract":[{"text":"The wrapping difference of two vectors.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&-(_:_:)-pwyk"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/.==(_:_:)-1d4ef":{"role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"A vector mask with the result of a pointwise equality comparison."}],"type":"topic","url":"\/documentation\/compute\/simd32\/'.==(_:_:)-1d4ef","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/.==(_:_:)-1d4ef","title":".==(_:_:)","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Scalar"},{"type":"text","text":" is "},{"type":"codeVoice","code":"UInt32"},{"text":".","type":"text"}]},"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":".=="},{"kind":"text","text":" "},{"kind":"text","text":"("},{"preciseIdentifier":"s:s6SIMD32V","text":"SIMD32","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Scalar"},{"text":">, ","kind":"text"},{"text":"SIMD32","kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s8SIMDMaskV","text":"SIMDMask"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:s6SIMD32V","text":"SIMD32","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":">."},{"kind":"typeIdentifier","text":"MaskStorage","preciseIdentifier":"s:s6SIMD32V11MaskStoragea"},{"text":">","kind":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/&*(_:_:)-59umb":{"conformance":{"constraints":[{"code":"Scalar","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"UInt16","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&*(_:_:)-59umb","type":"topic","title":"&*(_:_:)","role":"symbol","url":"\/documentation\/compute\/simd32\/&*(_:_:)-59umb","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"&*","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"SIMD32","preciseIdentifier":"s:s6SIMD32V","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Scalar"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","text":"SIMD32","preciseIdentifier":"s:s6SIMD32V"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Scalar"},{"kind":"text","text":">) -> "},{"text":"SIMD32","preciseIdentifier":"s:s6SIMD32V","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":">"}],"abstract":[{"text":"The pointwise wrapping product of two vectors.","type":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/._(_:_:)-2iysy":{"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":".>"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"SIMD32","preciseIdentifier":"s:s6SIMD32V"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Scalar"},{"text":">, ","kind":"text"},{"text":"SIMD32","preciseIdentifier":"s:s6SIMD32V","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Scalar"},{"text":">) -> ","kind":"text"},{"preciseIdentifier":"s:s8SIMDMaskV","kind":"typeIdentifier","text":"SIMDMask"},{"text":"<","kind":"text"},{"text":"SIMD32","preciseIdentifier":"s:s6SIMD32V","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V11MaskStoragea","text":"MaskStorage"},{"text":">","kind":"text"}],"title":".>(_:_:)","url":"\/documentation\/compute\/simd32\/'._(_:_:)-2iysy","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"UInt16","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"abstract":[{"text":"A vector mask with the result of a pointwise greater-than comparison.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._(_:_:)-2iysy"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/SIMD-Implementations":{"title":"SIMD Implementations","type":"topic","abstract":[],"kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/SIMD-Implementations","url":"\/documentation\/compute\/simd32\/simd-implementations","role":"collectionGroup"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/&-=(_:_:)-39zko":{"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Int16"},{"type":"text","text":"."}]},"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&-=(_:_:)-39zko","type":"topic","title":"&-=(_:_:)","role":"symbol","url":"\/documentation\/compute\/simd32\/&-=(_:_:)-39zko","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"&-="},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SIMD32","preciseIdentifier":"s:s6SIMD32V","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"text":"SIMD32","kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V"},{"kind":"text","text":"<"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">)","kind":"text"}],"abstract":[{"text":"Updates the left hand side with the wrapping difference of the two","type":"text"},{"type":"text","text":" "},{"text":"vectors.","type":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/scalarCount":{"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"scalarCount","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"}],"title":"scalarCount","url":"\/documentation\/compute\/simd32\/scalarcount","abstract":[{"text":"The number of scalars in the vector.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/scalarCount"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/._(_:_:)-o3rx":{"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"UInt16","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._(_:_:)-o3rx","type":"topic","title":".<(_:_:)","role":"symbol","url":"\/documentation\/compute\/simd32\/'._(_:_:)-o3rx","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":".<"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"text":"SIMD32","preciseIdentifier":"s:s6SIMD32V","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"preciseIdentifier":"s:s6SIMD32V","text":"SIMD32","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"text":"SIMDMask","kind":"typeIdentifier","preciseIdentifier":"s:s8SIMDMaskV"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:s6SIMD32V","text":"SIMD32","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Scalar"},{"kind":"text","text":">."},{"kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V11MaskStoragea","text":"MaskStorage"},{"text":">","kind":"text"}],"abstract":[{"text":"A vector mask with the result of a pointwise less-than comparison.","type":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Copyable":{"role":"symbol","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Copyable"}],"title":"Copyable","url":"\/documentation\/compute\/copyable","conformance":{"constraints":[{"code":"Scalar","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"SIMDScalar","type":"codeVoice"},{"type":"text","text":" and "},{"code":"Scalar.SIMD32Storage","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"BitwiseCopyable","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"abstract":[{"text":"A type whose values can be implicitly or explicitly copied.","type":"text"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"Copyable"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Copyable"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/.==(_:_:)-14vwl":{"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"UInt","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/.==(_:_:)-14vwl","type":"topic","title":".==(_:_:)","role":"symbol","url":"\/documentation\/compute\/simd32\/'.==(_:_:)-14vwl","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":".==","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:s6SIMD32V","text":"SIMD32","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"text":"SIMD32","kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Scalar"},{"text":">) -> ","kind":"text"},{"text":"SIMDMask","preciseIdentifier":"s:s8SIMDMaskV","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"SIMD32","kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Scalar"},{"text":">.","kind":"text"},{"preciseIdentifier":"s:s6SIMD32V11MaskStoragea","text":"MaskStorage","kind":"typeIdentifier"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"A vector mask with the result of a pointwise equality comparison."}]},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/&-=(_:_:)-6en0q":{"role":"symbol","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"&-="},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"text":"SIMD32","kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V"},{"kind":"text","text":"<"},{"text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"preciseIdentifier":"s:s6SIMD32V","text":"SIMD32","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">)","kind":"text"}],"title":"&-=(_:_:)","url":"\/documentation\/compute\/simd32\/&-=(_:_:)-6en0q","conformance":{"constraints":[{"code":"Scalar","type":"codeVoice"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Int32"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"abstract":[{"type":"text","text":"Updates the left hand side with the wrapping difference of the two"},{"text":" ","type":"text"},{"type":"text","text":"vectors."}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&-=(_:_:)-6en0q"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/._(_:_:)-3qif7":{"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"UInt64","type":"codeVoice"},{"text":".","type":"text"}]},"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._(_:_:)-3qif7","type":"topic","title":".<(_:_:)","role":"symbol","url":"\/documentation\/compute\/simd32\/'._(_:_:)-3qif7","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":".<","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"preciseIdentifier":"s:s6SIMD32V","kind":"typeIdentifier","text":"SIMD32"},{"kind":"text","text":"<"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"SIMD32","preciseIdentifier":"s:s6SIMD32V","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Scalar"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","text":"SIMDMask","preciseIdentifier":"s:s8SIMDMaskV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"SIMD32","preciseIdentifier":"s:s6SIMD32V"},{"kind":"text","text":"<"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"preciseIdentifier":"s:s6SIMD32V11MaskStoragea","kind":"typeIdentifier","text":"MaskStorage"},{"text":">","kind":"text"}],"abstract":[{"type":"text","text":"A vector mask with the result of a pointwise less-than comparison."}]},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/.!=(_:_:)-6njpp":{"role":"symbol","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":".!="},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"SIMD32","preciseIdentifier":"s:s6SIMD32V"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Scalar"},{"text":">, ","kind":"text"},{"text":"SIMD32","preciseIdentifier":"s:s6SIMD32V","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"preciseIdentifier":"s:s8SIMDMaskV","kind":"typeIdentifier","text":"SIMDMask"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"SIMD32","preciseIdentifier":"s:s6SIMD32V"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":">."},{"kind":"typeIdentifier","text":"MaskStorage","preciseIdentifier":"s:s6SIMD32V11MaskStoragea"},{"kind":"text","text":">"}],"title":".!=(_:_:)","url":"\/documentation\/compute\/simd32\/'.!=(_:_:)-6njpp","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Double","type":"codeVoice"},{"text":".","type":"text"}]},"abstract":[{"type":"text","text":"A vector mask with the result of a pointwise inequality comparison."}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/.!=(_:_:)-6njpp"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/&+=(_:_:)-1v816":{"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"UInt16","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&+=(_:_:)-1v816","type":"topic","title":"&+=(_:_:)","role":"symbol","url":"\/documentation\/compute\/simd32\/&+=(_:_:)-1v816","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"&+=","kind":"identifier"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:s6SIMD32V","text":"SIMD32","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V","text":"SIMD32"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">)","kind":"text"}],"abstract":[{"type":"text","text":"Updates the left hand side with the wrapping sum of the two"},{"text":" ","type":"text"},{"text":"vectors.","type":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/._(_:_:)-147jo":{"role":"symbol","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":".>","kind":"identifier"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"preciseIdentifier":"s:s6SIMD32V","text":"SIMD32","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"preciseIdentifier":"s:s6SIMD32V","kind":"typeIdentifier","text":"SIMD32"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Scalar"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s8SIMDMaskV","text":"SIMDMask"},{"kind":"text","text":"<"},{"text":"SIMD32","preciseIdentifier":"s:s6SIMD32V","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V11MaskStoragea","text":"MaskStorage"},{"kind":"text","text":">"}],"title":".>(_:_:)","url":"\/documentation\/compute\/simd32\/'._(_:_:)-147jo","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Float"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"abstract":[{"text":"A vector mask with the result of a pointwise greater-than comparison.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._(_:_:)-147jo"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/&*=(_:_:)-8nfzb":{"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Scalar"},{"type":"text","text":" is "},{"code":"Int32","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&*=(_:_:)-8nfzb","type":"topic","title":"&*=(_:_:)","role":"symbol","url":"\/documentation\/compute\/simd32\/&*=(_:_:)-8nfzb","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"&*=","kind":"identifier"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V","text":"SIMD32"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Scalar"},{"kind":"text","text":">, "},{"text":"SIMD32","preciseIdentifier":"s:s6SIMD32V","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Scalar"},{"kind":"text","text":">)"}],"abstract":[{"text":"Updates the left hand side with the pointwise wrapping product of two","type":"text"},{"type":"text","text":" "},{"text":"vectors.","type":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/MaskStorage":{"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"text":"MaskStorage","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/MaskStorage","abstract":[{"text":"The mask type resulting from pointwise comparisons of this vector type.","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"MaskStorage","kind":"identifier"}],"title":"SIMD32.MaskStorage","role":"symbol","url":"\/documentation\/compute\/simd32\/maskstorage","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/&-(_:_:)-378x":{"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"&-"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V","text":"SIMD32"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Scalar"},{"text":">, ","kind":"text"},{"preciseIdentifier":"s:s6SIMD32V","text":"SIMD32","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Scalar"},{"text":">) -> ","kind":"text"},{"text":"SIMD32","kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Scalar"},{"text":">","kind":"text"}],"title":"&-(_:_:)","url":"\/documentation\/compute\/simd32\/&-(_:_:)-378x","conformance":{"constraints":[{"code":"Scalar","type":"codeVoice"},{"type":"text","text":" is "},{"type":"codeVoice","code":"UInt8"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"abstract":[{"text":"The wrapping difference of two vectors.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&-(_:_:)-378x"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/&+(_:_:)-3btse":{"kind":"symbol","role":"symbol","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"UInt8","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"title":"&+(_:_:)","url":"\/documentation\/compute\/simd32\/&+(_:_:)-3btse","abstract":[{"type":"text","text":"The wrapping sum of two vectors."}],"type":"topic","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"&+"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V","text":"SIMD32"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Scalar"},{"kind":"text","text":">, "},{"preciseIdentifier":"s:s6SIMD32V","text":"SIMD32","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Scalar"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V","text":"SIMD32"},{"kind":"text","text":"<"},{"text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":">"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&+(_:_:)-3btse"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMDStorage":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMDStorage","kind":"symbol","abstract":[{"text":"A type that can function as storage for a SIMD vector type.","type":"text"}],"role":"symbol","title":"SIMDStorage","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"SIMDStorage","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"SIMDStorage"}],"url":"\/documentation\/compute\/simdstorage","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/.==(_:_:)-506zi":{"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"UInt64","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/.==(_:_:)-506zi","type":"topic","title":".==(_:_:)","role":"symbol","url":"\/documentation\/compute\/simd32\/'.==(_:_:)-506zi","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":".==","kind":"identifier"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"text":"SIMD32","kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V"},{"kind":"text","text":"<"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"SIMD32","kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Scalar"},{"text":">) -> ","kind":"text"},{"text":"SIMDMask","preciseIdentifier":"s:s8SIMDMaskV","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"SIMD32","preciseIdentifier":"s:s6SIMD32V","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Scalar"},{"text":">.","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V11MaskStoragea","text":"MaskStorage"},{"kind":"text","text":">"}],"abstract":[{"text":"A vector mask with the result of a pointwise equality comparison.","type":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/._=(_:_:)-6u29t":{"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":".<="},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"text":"SIMD32","preciseIdentifier":"s:s6SIMD32V","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Scalar"},{"kind":"text","text":">, "},{"text":"SIMD32","kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"text":"SIMDMask","kind":"typeIdentifier","preciseIdentifier":"s:s8SIMDMaskV"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:s6SIMD32V","kind":"typeIdentifier","text":"SIMD32"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"kind":"typeIdentifier","text":"MaskStorage","preciseIdentifier":"s:s6SIMD32V11MaskStoragea"},{"text":">","kind":"text"}],"title":".<=(_:_:)","url":"\/documentation\/compute\/simd32\/'._=(_:_:)-6u29t","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"UInt8","type":"codeVoice"},{"text":".","type":"text"}]},"abstract":[{"text":"A vector mask with the result of a pointwise less-than-or-equal-to comparison.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._=(_:_:)-6u29t"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/&+(_:_:)-1itt5":{"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Int32","type":"codeVoice"},{"text":".","type":"text"}]},"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&+(_:_:)-1itt5","type":"topic","title":"&+(_:_:)","role":"symbol","url":"\/documentation\/compute\/simd32\/&+(_:_:)-1itt5","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"&+","kind":"identifier"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"text":"SIMD32","preciseIdentifier":"s:s6SIMD32V","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"preciseIdentifier":"s:s6SIMD32V","text":"SIMD32","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Scalar"},{"text":">) -> ","kind":"text"},{"preciseIdentifier":"s:s6SIMD32V","kind":"typeIdentifier","text":"SIMD32"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">","kind":"text"}],"abstract":[{"text":"The wrapping sum of two vectors.","type":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD-swift.protocol":{"role":"symbol","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"SIMD"}],"navigatorTitle":[{"kind":"identifier","text":"SIMD"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD-swift.protocol","abstract":[{"text":"A SIMD vector of a fixed number of elements.","type":"text"}],"title":"SIMD","url":"\/documentation\/compute\/simd-swift.protocol"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/&*(_:_:)-6tid":{"role":"symbol","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"&*","kind":"identifier"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"preciseIdentifier":"s:s6SIMD32V","text":"SIMD32","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"text":"SIMD32","preciseIdentifier":"s:s6SIMD32V","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Scalar"},{"text":">) -> ","kind":"text"},{"text":"SIMD32","preciseIdentifier":"s:s6SIMD32V","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Scalar"},{"text":">","kind":"text"}],"title":"&*(_:_:)","url":"\/documentation\/compute\/simd32\/&*(_:_:)-6tid","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"UInt32"},{"type":"text","text":"."}]},"abstract":[{"text":"The pointwise wrapping product of two vectors.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&*(_:_:)-6tid"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/.!=(_:_:)-9u20d":{"conformance":{"constraints":[{"code":"Scalar","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Int8","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/.!=(_:_:)-9u20d","type":"topic","title":".!=(_:_:)","role":"symbol","url":"\/documentation\/compute\/simd32\/'.!=(_:_:)-9u20d","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":".!="},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"preciseIdentifier":"s:s6SIMD32V","text":"SIMD32","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"preciseIdentifier":"s:s6SIMD32V","text":"SIMD32","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Scalar"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","text":"SIMDMask","preciseIdentifier":"s:s8SIMDMaskV"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s6SIMD32V","text":"SIMD32","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Scalar"},{"kind":"text","text":">."},{"text":"MaskStorage","kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V11MaskStoragea"},{"kind":"text","text":">"}],"abstract":[{"text":"A vector mask with the result of a pointwise inequality comparison.","type":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/.!=(_:_:)-8270q":{"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"UInt64","type":"codeVoice"},{"text":".","type":"text"}]},"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/.!=(_:_:)-8270q","title":".!=(_:_:)","type":"topic","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":".!=","kind":"identifier"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"SIMD32","preciseIdentifier":"s:s6SIMD32V"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Scalar"},{"kind":"text","text":">, "},{"text":"SIMD32","kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Scalar"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s8SIMDMaskV","text":"SIMDMask"},{"text":"<","kind":"text"},{"text":"SIMD32","kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Scalar"},{"text":">.","kind":"text"},{"preciseIdentifier":"s:s6SIMD32V11MaskStoragea","text":"MaskStorage","kind":"typeIdentifier"},{"text":">","kind":"text"}],"url":"\/documentation\/compute\/simd32\/'.!=(_:_:)-8270q","abstract":[{"text":"A vector mask with the result of a pointwise inequality comparison.","type":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/&+=(_:_:)-8zbds":{"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"&+=","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"preciseIdentifier":"s:s6SIMD32V","text":"SIMD32","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"preciseIdentifier":"s:s6SIMD32V","text":"SIMD32","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":">)"}],"title":"&+=(_:_:)","url":"\/documentation\/compute\/simd32\/&+=(_:_:)-8zbds","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"UInt32","type":"codeVoice"},{"text":".","type":"text"}]},"abstract":[{"text":"Updates the left hand side with the wrapping sum of the two","type":"text"},{"type":"text","text":" "},{"text":"vectors.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&+=(_:_:)-8zbds"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/._=(_:_:)-y30q":{"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Scalar"},{"text":" is ","type":"text"},{"code":"UInt64","type":"codeVoice"},{"text":".","type":"text"}]},"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._=(_:_:)-y30q","type":"topic","title":".<=(_:_:)","role":"symbol","url":"\/documentation\/compute\/simd32\/'._=(_:_:)-y30q","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":".<=","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V","text":"SIMD32"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Scalar"},{"text":">, ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V","text":"SIMD32"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Scalar"},{"text":">) -> ","kind":"text"},{"text":"SIMDMask","preciseIdentifier":"s:s8SIMDMaskV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V","text":"SIMD32"},{"kind":"text","text":"<"},{"text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":">."},{"preciseIdentifier":"s:s6SIMD32V11MaskStoragea","text":"MaskStorage","kind":"typeIdentifier"},{"text":">","kind":"text"}],"abstract":[{"text":"A vector mask with the result of a pointwise less-than-or-equal-to comparison.","type":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/&*=(_:_:)-7hc0h":{"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"&*=","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V","text":"SIMD32"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Scalar"},{"text":">, ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V","text":"SIMD32"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">)","kind":"text"}],"title":"&*=(_:_:)","url":"\/documentation\/compute\/simd32\/&*=(_:_:)-7hc0h","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Scalar"},{"text":" is ","type":"text"},{"code":"UInt","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"abstract":[{"text":"Updates the left hand side with the pointwise wrapping product of two","type":"text"},{"text":" ","type":"text"},{"text":"vectors.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&*=(_:_:)-7hc0h"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/&-=(_:_:)-61zaw":{"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Int8","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&-=(_:_:)-61zaw","type":"topic","title":"&-=(_:_:)","role":"symbol","url":"\/documentation\/compute\/simd32\/&-=(_:_:)-61zaw","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"&-="},{"kind":"text","text":" "},{"kind":"text","text":"("},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SIMD32","preciseIdentifier":"s:s6SIMD32V","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"preciseIdentifier":"s:s6SIMD32V","text":"SIMD32","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":">)"}],"abstract":[{"text":"Updates the left hand side with the wrapping difference of the two","type":"text"},{"text":" ","type":"text"},{"text":"vectors.","type":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMDScalar":{"kind":"symbol","navigatorTitle":[{"text":"SIMDScalar","kind":"identifier"}],"type":"topic","title":"SIMDScalar","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMDScalar","abstract":[{"type":"text","text":"A type that can be used as an element in a SIMD vector."}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SIMDScalar","kind":"identifier"}],"url":"\/documentation\/compute\/simdscalar"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/init(_:)-5imow":{"role":"symbol","kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Other"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V","text":"SIMD32"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Other"},{"text":">)","kind":"text"}],"title":"init(_:)","url":"\/documentation\/compute\/simd32\/init(_:)-5imow","conformance":{"constraints":[{"code":"Scalar","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"BinaryFloatingPoint"},{"text":" and ","type":"text"},{"code":"SIMDScalar","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"abstract":[{"text":"Creates a new vector from the given vector of floating-point values.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/init(_:)-5imow"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/&+=(_:_:)-7s5ki":{"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Int16","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&+=(_:_:)-7s5ki","type":"topic","title":"&+=(_:_:)","role":"symbol","url":"\/documentation\/compute\/simd32\/&+=(_:_:)-7s5ki","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"&+="},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"preciseIdentifier":"s:s6SIMD32V","text":"SIMD32","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"preciseIdentifier":"s:s6SIMD32V","text":"SIMD32","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":">)"}],"abstract":[{"text":"Updates the left hand side with the wrapping sum of the two","type":"text"},{"text":" ","type":"text"},{"text":"vectors.","type":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/&-=(_:_:)-9huay":{"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"&-="},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"text":"SIMD32","preciseIdentifier":"s:s6SIMD32V","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Scalar"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V","text":"SIMD32"},{"kind":"text","text":"<"},{"text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":">)"}],"title":"&-=(_:_:)","url":"\/documentation\/compute\/simd32\/&-=(_:_:)-9huay","conformance":{"constraints":[{"code":"Scalar","type":"codeVoice"},{"type":"text","text":" is "},{"code":"UInt16","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"abstract":[{"text":"Updates the left hand side with the wrapping difference of the two","type":"text"},{"text":" ","type":"text"},{"text":"vectors.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&-=(_:_:)-9huay"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/&+(_:_:)-3gdux":{"conformance":{"constraints":[{"code":"Scalar","type":"codeVoice"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Int16"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&+(_:_:)-3gdux","type":"topic","title":"&+(_:_:)","role":"symbol","url":"\/documentation\/compute\/simd32\/&+(_:_:)-3gdux","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"&+"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V","text":"SIMD32"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Scalar"},{"text":">, ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V","text":"SIMD32"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Scalar"},{"kind":"text","text":">) -> "},{"text":"SIMD32","kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Scalar"},{"text":">","kind":"text"}],"abstract":[{"text":"The wrapping sum of two vectors.","type":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/.==(_:_:)-7a71z":{"role":"symbol","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":".=="},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V","text":"SIMD32"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Scalar"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V","text":"SIMD32"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"preciseIdentifier":"s:s8SIMDMaskV","text":"SIMDMask","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"SIMD32","preciseIdentifier":"s:s6SIMD32V","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Scalar"},{"kind":"text","text":">."},{"preciseIdentifier":"s:s6SIMD32V11MaskStoragea","text":"MaskStorage","kind":"typeIdentifier"},{"kind":"text","text":">"}],"title":".==(_:_:)","url":"\/documentation\/compute\/simd32\/'.==(_:_:)-7a71z","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"type":"text","text":" is "},{"code":"UInt8","type":"codeVoice"},{"type":"text","text":"."}]},"abstract":[{"text":"A vector mask with the result of a pointwise equality comparison.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/.==(_:_:)-7a71z"},"doc://com.swallow.documentation.Compute/documentation/Compute/Sendable":{"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Scalar"},{"text":" conforms to ","type":"text"},{"code":"SIMDScalar","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Scalar","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Sendable","type":"codeVoice"},{"text":", and ","type":"text"},{"code":"Scalar.SIMD32Storage","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Sendable","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sendable","type":"topic","title":"Sendable","role":"symbol","url":"\/documentation\/compute\/sendable","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Sendable","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"Sendable"}],"abstract":[]},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/&-(_:_:)-2e698":{"role":"symbol","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"&-"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"SIMD32","preciseIdentifier":"s:s6SIMD32V"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"SIMD32","kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Scalar"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","text":"SIMD32","preciseIdentifier":"s:s6SIMD32V"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Scalar"},{"kind":"text","text":">"}],"title":"&-(_:_:)","url":"\/documentation\/compute\/simd32\/&-(_:_:)-2e698","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Int32"},{"type":"text","text":"."}]},"abstract":[{"type":"text","text":"The wrapping difference of two vectors."}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&-(_:_:)-2e698"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/.!=(_:_:)-5m9ya":{"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"UInt16","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/.!=(_:_:)-5m9ya","type":"topic","title":".!=(_:_:)","role":"symbol","url":"\/documentation\/compute\/simd32\/'.!=(_:_:)-5m9ya","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":".!="},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V","text":"SIMD32"},{"kind":"text","text":"<"},{"text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"preciseIdentifier":"s:s6SIMD32V","text":"SIMD32","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Scalar"},{"text":">) -> ","kind":"text"},{"text":"SIMDMask","preciseIdentifier":"s:s8SIMDMaskV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s6SIMD32V","text":"SIMD32","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V11MaskStoragea","text":"MaskStorage"},{"text":">","kind":"text"}],"abstract":[{"type":"text","text":"A vector mask with the result of a pointwise inequality comparison."}]},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/&*=(_:_:)-99rfz":{"role":"symbol","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"&*=","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"preciseIdentifier":"s:s6SIMD32V","text":"SIMD32","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V","text":"SIMD32"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Scalar"},{"kind":"text","text":">)"}],"title":"&*=(_:_:)","url":"\/documentation\/compute\/simd32\/&*=(_:_:)-99rfz","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"type":"text","text":" is "},{"code":"UInt16","type":"codeVoice"},{"text":".","type":"text"}]},"abstract":[{"type":"text","text":"Updates the left hand side with the pointwise wrapping product of two"},{"text":" ","type":"text"},{"text":"vectors.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&*=(_:_:)-99rfz"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/Equatable-Implementations":{"kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/Equatable-Implementations","type":"topic","title":"Equatable Implementations","role":"collectionGroup","url":"\/documentation\/compute\/simd32\/equatable-implementations","abstract":[]},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/.==(_:_:)-rk9i":{"role":"symbol","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":".==","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:s6SIMD32V","kind":"typeIdentifier","text":"SIMD32"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Scalar"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V","text":"SIMD32"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Scalar"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","text":"SIMDMask","preciseIdentifier":"s:s8SIMDMaskV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V","text":"SIMD32"},{"kind":"text","text":"<"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"text":"MaskStorage","preciseIdentifier":"s:s6SIMD32V11MaskStoragea","kind":"typeIdentifier"},{"text":">","kind":"text"}],"title":".==(_:_:)","url":"\/documentation\/compute\/simd32\/'.==(_:_:)-rk9i","conformance":{"constraints":[{"code":"Scalar","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"UInt16","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"abstract":[{"text":"A vector mask with the result of a pointwise equality comparison.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/.==(_:_:)-rk9i"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/._=(_:_:)-relh":{"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"type":"text","text":" is "},{"code":"UInt16","type":"codeVoice"},{"text":".","type":"text"}]},"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._=(_:_:)-relh","type":"topic","title":".<=(_:_:)","role":"symbol","url":"\/documentation\/compute\/simd32\/'._=(_:_:)-relh","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":".<=","kind":"identifier"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"preciseIdentifier":"s:s6SIMD32V","text":"SIMD32","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"preciseIdentifier":"s:s6SIMD32V","kind":"typeIdentifier","text":"SIMD32"},{"kind":"text","text":"<"},{"text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"text":"SIMDMask","preciseIdentifier":"s:s8SIMDMaskV","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V","text":"SIMD32"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Scalar"},{"kind":"text","text":">."},{"kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V11MaskStoragea","text":"MaskStorage"},{"kind":"text","text":">"}],"abstract":[{"text":"A vector mask with the result of a pointwise less-than-or-equal-to comparison.","type":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/._(_:_:)-n7x0":{"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":".<"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"text":"SIMD32","preciseIdentifier":"s:s6SIMD32V","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"preciseIdentifier":"s:s6SIMD32V","kind":"typeIdentifier","text":"SIMD32"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"preciseIdentifier":"s:s8SIMDMaskV","text":"SIMDMask","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"SIMD32","preciseIdentifier":"s:s6SIMD32V","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"kind":"typeIdentifier","text":"MaskStorage","preciseIdentifier":"s:s6SIMD32V11MaskStoragea"},{"text":">","kind":"text"}],"title":".<(_:_:)","url":"\/documentation\/compute\/simd32\/'._(_:_:)-n7x0","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Float"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"abstract":[{"text":"A vector mask with the result of a pointwise less-than comparison.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._(_:_:)-n7x0"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/.==(_:_:)-8u9ke":{"conformance":{"constraints":[{"code":"Scalar","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Int16","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/.==(_:_:)-8u9ke","type":"topic","title":".==(_:_:)","role":"symbol","url":"\/documentation\/compute\/simd32\/'.==(_:_:)-8u9ke","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":".==","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"SIMD32","preciseIdentifier":"s:s6SIMD32V","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"SIMD32","kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Scalar"},{"text":">) -> ","kind":"text"},{"text":"SIMDMask","preciseIdentifier":"s:s8SIMDMaskV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"SIMD32","kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Scalar"},{"text":">.","kind":"text"},{"kind":"typeIdentifier","text":"MaskStorage","preciseIdentifier":"s:s6SIMD32V11MaskStoragea"},{"text":">","kind":"text"}],"abstract":[{"text":"A vector mask with the result of a pointwise equality comparison.","type":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/._=(_:_:)-37mit":{"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._=(_:_:)-37mit","role":"symbol","title":".<=(_:_:)","type":"topic","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":".<=","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"SIMD32","preciseIdentifier":"s:s6SIMD32V","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"SIMD32","kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Scalar"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s8SIMDMaskV","text":"SIMDMask"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V","text":"SIMD32"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"text":"MaskStorage","preciseIdentifier":"s:s6SIMD32V11MaskStoragea","kind":"typeIdentifier"},{"kind":"text","text":">"}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Scalar"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Int"},{"type":"text","text":"."}]},"url":"\/documentation\/compute\/simd32\/'._=(_:_:)-37mit","abstract":[{"text":"A vector mask with the result of a pointwise less-than-or-equal-to comparison.","type":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/.!=(_:_:)-26sgl":{"role":"symbol","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":".!="},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"SIMD32","preciseIdentifier":"s:s6SIMD32V","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Scalar"},{"text":">, ","kind":"text"},{"text":"SIMD32","kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"text":"SIMDMask","preciseIdentifier":"s:s8SIMDMaskV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"SIMD32","preciseIdentifier":"s:s6SIMD32V"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"preciseIdentifier":"s:s6SIMD32V11MaskStoragea","text":"MaskStorage","kind":"typeIdentifier"},{"kind":"text","text":">"}],"title":".!=(_:_:)","url":"\/documentation\/compute\/simd32\/'.!=(_:_:)-26sgl","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Scalar"},{"text":" is ","type":"text"},{"code":"Int16","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"abstract":[{"text":"A vector mask with the result of a pointwise inequality comparison.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/.!=(_:_:)-26sgl"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/._(_:_:)-8n114":{"conformance":{"constraints":[{"code":"Scalar","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"UInt64","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._(_:_:)-8n114","type":"topic","title":".>(_:_:)","role":"symbol","url":"\/documentation\/compute\/simd32\/'._(_:_:)-8n114","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":".>"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"preciseIdentifier":"s:s6SIMD32V","kind":"typeIdentifier","text":"SIMD32"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"preciseIdentifier":"s:s6SIMD32V","text":"SIMD32","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","text":"SIMDMask","preciseIdentifier":"s:s8SIMDMaskV"},{"text":"<","kind":"text"},{"text":"SIMD32","kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":">."},{"preciseIdentifier":"s:s6SIMD32V11MaskStoragea","text":"MaskStorage","kind":"typeIdentifier"},{"text":">","kind":"text"}],"abstract":[{"text":"A vector mask with the result of a pointwise greater-than comparison.","type":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/._(_:_:)-4421f":{"role":"symbol","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":".>","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"SIMD32","preciseIdentifier":"s:s6SIMD32V"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"preciseIdentifier":"s:s6SIMD32V","text":"SIMD32","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"preciseIdentifier":"s:s8SIMDMaskV","kind":"typeIdentifier","text":"SIMDMask"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:s6SIMD32V","kind":"typeIdentifier","text":"SIMD32"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Scalar"},{"kind":"text","text":">."},{"kind":"typeIdentifier","text":"MaskStorage","preciseIdentifier":"s:s6SIMD32V11MaskStoragea"},{"kind":"text","text":">"}],"title":".>(_:_:)","url":"\/documentation\/compute\/simd32\/'._(_:_:)-4421f","conformance":{"constraints":[{"type":"codeVoice","code":"Scalar"},{"text":" is ","type":"text"},{"code":"Int32","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"abstract":[{"text":"A vector mask with the result of a pointwise greater-than comparison.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._(_:_:)-4421f"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/init(clamping:)":{"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"FixedWidthInteger"},{"text":" and ","type":"text"},{"code":"SIMDScalar","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/init(clamping:)","type":"topic","title":"init(clamping:)","role":"symbol","url":"\/documentation\/compute\/simd32\/init(clamping:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"text":"Other","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"clamping","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SIMD32","preciseIdentifier":"s:s6SIMD32V"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Other"},{"kind":"text","text":">)"}],"abstract":[{"text":"Creates a new vector from the given vector, clamping the values of the","type":"text"},{"text":" ","type":"text"},{"text":"given vector’s elements if necessary.","type":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Decodable":{"kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"Decodable","kind":"identifier"}],"title":"Decodable","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Decodable","abstract":[{"type":"text","text":"A type that can decode itself from an external representation."}],"url":"\/documentation\/compute\/decodable","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Decodable"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/&+=(_:_:)-4s3z5":{"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"&+="},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"preciseIdentifier":"s:s6SIMD32V","kind":"typeIdentifier","text":"SIMD32"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Scalar"},{"text":">, ","kind":"text"},{"kind":"typeIdentifier","text":"SIMD32","preciseIdentifier":"s:s6SIMD32V"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">)","kind":"text"}],"title":"&+=(_:_:)","url":"\/documentation\/compute\/simd32\/&+=(_:_:)-4s3z5","conformance":{"constraints":[{"code":"Scalar","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"UInt","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"abstract":[{"text":"Updates the left hand side with the wrapping sum of the two","type":"text"},{"text":" ","type":"text"},{"text":"vectors.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&+=(_:_:)-4s3z5"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/._(_:_:)-87jt":{"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Int32","type":"codeVoice"},{"text":".","type":"text"}]},"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._(_:_:)-87jt","type":"topic","title":".<(_:_:)","role":"symbol","url":"\/documentation\/compute\/simd32\/'._(_:_:)-87jt","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":".<"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"SIMD32","preciseIdentifier":"s:s6SIMD32V","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"preciseIdentifier":"s:s6SIMD32V","text":"SIMD32","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"preciseIdentifier":"s:s8SIMDMaskV","kind":"typeIdentifier","text":"SIMDMask"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V","text":"SIMD32"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Scalar"},{"text":">.","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V11MaskStoragea","text":"MaskStorage"},{"kind":"text","text":">"}],"abstract":[{"text":"A vector mask with the result of a pointwise less-than comparison.","type":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/.!=(_:_:)-52pgf":{"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":".!=","kind":"identifier"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"preciseIdentifier":"s:s6SIMD32V","kind":"typeIdentifier","text":"SIMD32"},{"kind":"text","text":"<"},{"text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"preciseIdentifier":"s:s6SIMD32V","text":"SIMD32","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"text":"SIMDMask","preciseIdentifier":"s:s8SIMDMaskV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"SIMD32","kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V"},{"kind":"text","text":"<"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"text":"MaskStorage","preciseIdentifier":"s:s6SIMD32V11MaskStoragea","kind":"typeIdentifier"},{"text":">","kind":"text"}],"title":".!=(_:_:)","url":"\/documentation\/compute\/simd32\/'.!=(_:_:)-52pgf","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Float16","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"abstract":[{"text":"A vector mask with the result of a pointwise inequality comparison.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/.!=(_:_:)-52pgf"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/._(_:_:)-92tlq":{"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"UInt"},{"type":"text","text":"."}]},"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._(_:_:)-92tlq","type":"topic","title":".<(_:_:)","role":"symbol","url":"\/documentation\/compute\/simd32\/'._(_:_:)-92tlq","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":".<","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"SIMD32","kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V","text":"SIMD32"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","text":"SIMDMask","preciseIdentifier":"s:s8SIMDMaskV"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s6SIMD32V","text":"SIMD32","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Scalar"},{"text":">.","kind":"text"},{"preciseIdentifier":"s:s6SIMD32V11MaskStoragea","kind":"typeIdentifier","text":"MaskStorage"},{"kind":"text","text":">"}],"abstract":[{"text":"A vector mask with the result of a pointwise less-than comparison.","type":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/&+(_:_:)-4mxpb":{"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"&+","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"SIMD32","preciseIdentifier":"s:s6SIMD32V"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V","text":"SIMD32"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"SIMD32","kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Scalar"},{"text":">","kind":"text"}],"title":"&+(_:_:)","url":"\/documentation\/compute\/simd32\/&+(_:_:)-4mxpb","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"UInt16"},{"type":"text","text":"."}]},"abstract":[{"text":"The wrapping sum of two vectors.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&+(_:_:)-4mxpb"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/._=(_:_:)-5or10":{"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Scalar"},{"text":" is ","type":"text"},{"code":"Int32","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._=(_:_:)-5or10","type":"topic","title":".>=(_:_:)","role":"symbol","url":"\/documentation\/compute\/simd32\/'._=(_:_:)-5or10","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":".>=","kind":"identifier"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"text":"SIMD32","preciseIdentifier":"s:s6SIMD32V","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"SIMD32","preciseIdentifier":"s:s6SIMD32V","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"text":"SIMDMask","kind":"typeIdentifier","preciseIdentifier":"s:s8SIMDMaskV"},{"text":"<","kind":"text"},{"text":"SIMD32","preciseIdentifier":"s:s6SIMD32V","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"preciseIdentifier":"s:s6SIMD32V11MaskStoragea","text":"MaskStorage","kind":"typeIdentifier"},{"kind":"text","text":">"}],"abstract":[{"text":"A vector mask with the result of a pointwise greater-than-or-equal-to comparison.","type":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/evenHalf":{"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"evenHalf","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"SIMD16","preciseIdentifier":"s:s6SIMD16V"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">","kind":"text"}],"title":"evenHalf","url":"\/documentation\/compute\/simd32\/evenhalf","abstract":[{"text":"A half-length vector made up of the even elements of the vector.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/evenHalf"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/hashValue":{"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/hashValue","type":"topic","title":"hashValue","role":"symbol","url":"\/documentation\/compute\/simd32\/hashvalue","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"hashValue","kind":"identifier"},{"kind":"text","text":": "},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"}],"abstract":[{"text":"The hash value.","type":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/CustomStringConvertible":{"url":"\/documentation\/compute\/customstringconvertible","navigatorTitle":[{"kind":"identifier","text":"CustomStringConvertible"}],"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CustomStringConvertible","kind":"identifier"}],"abstract":[{"text":"A type with a customized textual representation.","type":"text"}],"type":"topic","title":"CustomStringConvertible","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CustomStringConvertible"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/&-(_:_:)-9833k":{"role":"symbol","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"&-","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"SIMD32","preciseIdentifier":"s:s6SIMD32V"},{"kind":"text","text":"<"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"SIMD32","preciseIdentifier":"s:s6SIMD32V","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"text":"SIMD32","preciseIdentifier":"s:s6SIMD32V","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Scalar"},{"text":">","kind":"text"}],"title":"&-(_:_:)","url":"\/documentation\/compute\/simd32\/&-(_:_:)-9833k","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Int16"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"abstract":[{"text":"The wrapping difference of two vectors.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&-(_:_:)-9833k"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/oddHalf":{"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/oddHalf","type":"topic","title":"oddHalf","role":"symbol","url":"\/documentation\/compute\/simd32\/oddhalf","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"oddHalf"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s6SIMD16V","kind":"typeIdentifier","text":"SIMD16"},{"kind":"text","text":"<"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">","kind":"text"}],"abstract":[{"text":"A half-length vector made up of the odd elements of the vector.","type":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/&*=(_:_:)-9rpr2":{"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"&*="},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V","text":"SIMD32"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"SIMD32","preciseIdentifier":"s:s6SIMD32V","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Scalar"},{"kind":"text","text":">)"}],"title":"&*=(_:_:)","url":"\/documentation\/compute\/simd32\/&*=(_:_:)-9rpr2","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"UInt64","type":"codeVoice"},{"text":".","type":"text"}]},"abstract":[{"text":"Updates the left hand side with the pointwise wrapping product of two","type":"text"},{"type":"text","text":" "},{"text":"vectors.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&*=(_:_:)-9rpr2"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/.!=(_:_:)-9vk8l":{"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Int64"},{"type":"text","text":"."}]},"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/.!=(_:_:)-9vk8l","type":"topic","title":".!=(_:_:)","role":"symbol","url":"\/documentation\/compute\/simd32\/'.!=(_:_:)-9vk8l","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":".!="},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:s6SIMD32V","text":"SIMD32","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Scalar"},{"kind":"text","text":">, "},{"preciseIdentifier":"s:s6SIMD32V","text":"SIMD32","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"SIMDMask","preciseIdentifier":"s:s8SIMDMaskV","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"SIMD32","preciseIdentifier":"s:s6SIMD32V","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Scalar"},{"kind":"text","text":">."},{"kind":"typeIdentifier","text":"MaskStorage","preciseIdentifier":"s:s6SIMD32V11MaskStoragea"},{"kind":"text","text":">"}],"abstract":[{"text":"A vector mask with the result of a pointwise inequality comparison.","type":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/Decodable-Implementations":{"role":"collectionGroup","kind":"article","title":"Decodable Implementations","url":"\/documentation\/compute\/simd32\/decodable-implementations","abstract":[],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/Decodable-Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/init(truncatingIfNeeded:)":{"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Scalar"},{"text":" conforms to ","type":"text"},{"code":"FixedWidthInteger","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"SIMDScalar","type":"codeVoice"},{"text":".","type":"text"}]},"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/init(truncatingIfNeeded:)","type":"topic","title":"init(truncatingIfNeeded:)","role":"symbol","url":"\/documentation\/compute\/simd32\/init(truncatingifneeded:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Other"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"truncatingIfNeeded"},{"text":": ","kind":"text"},{"text":"SIMD32","kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V"},{"text":"<","kind":"text"},{"text":"Other","kind":"typeIdentifier"},{"text":">)","kind":"text"}],"abstract":[{"text":"Creates a new vector from the given vector, truncating the bit patterns","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"of the given vector’s elements if necessary."}]},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/._=(_:_:)-1jbkk":{"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":".>=","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V","text":"SIMD32"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Scalar"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V","text":"SIMD32"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","text":"SIMDMask","preciseIdentifier":"s:s8SIMDMaskV"},{"text":"<","kind":"text"},{"text":"SIMD32","kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Scalar"},{"kind":"text","text":">."},{"kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V11MaskStoragea","text":"MaskStorage"},{"text":">","kind":"text"}],"title":".>=(_:_:)","url":"\/documentation\/compute\/simd32\/'._=(_:_:)-1jbkk","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"UInt","type":"codeVoice"},{"text":".","type":"text"}]},"abstract":[{"type":"text","text":"A vector mask with the result of a pointwise greater-than-or-equal-to comparison."}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._=(_:_:)-1jbkk"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/._(_:_:)-49uz":{"url":"\/documentation\/compute\/simd32\/'._(_:_:)-49uz","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":".>","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"SIMD32","kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V","text":"SIMD32"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"preciseIdentifier":"s:s8SIMDMaskV","kind":"typeIdentifier","text":"SIMDMask"},{"text":"<","kind":"text"},{"text":"SIMD32","kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Scalar"},{"kind":"text","text":">."},{"text":"MaskStorage","kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V11MaskStoragea"},{"text":">","kind":"text"}],"abstract":[{"text":"A vector mask with the result of a pointwise greater-than comparison.","type":"text"}],"type":"topic","title":".>(_:_:)","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._(_:_:)-49uz","conformance":{"constraints":[{"type":"codeVoice","code":"Scalar"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"UInt"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]}},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/init(_:rounding:)":{"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"FixedWidthInteger","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"SIMDScalar","type":"codeVoice"},{"type":"text","text":"."}]},"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/init(_:rounding:)","type":"topic","title":"init(_:rounding:)","role":"symbol","url":"\/documentation\/compute\/simd32\/init(_:rounding:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Other"},{"kind":"text","text":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V","text":"SIMD32"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Other"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"rounding"},{"text":": ","kind":"text"},{"text":"FloatingPointRoundingRule","kind":"typeIdentifier","preciseIdentifier":"s:s25FloatingPointRoundingRuleO"},{"text":")","kind":"text"}],"abstract":[{"type":"text","text":"Creates a new vector from the given vector, rounding the given vector’s"},{"text":" ","type":"text"},{"text":"of elements using the specified rounding rule.","type":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/._(_:_:)-73r8":{"role":"symbol","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":".>","kind":"identifier"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V","text":"SIMD32"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Scalar"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","text":"SIMD32","preciseIdentifier":"s:s6SIMD32V"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Scalar"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s8SIMDMaskV","text":"SIMDMask"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V","text":"SIMD32"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Scalar"},{"text":">.","kind":"text"},{"text":"MaskStorage","preciseIdentifier":"s:s6SIMD32V11MaskStoragea","kind":"typeIdentifier"},{"kind":"text","text":">"}],"title":".>(_:_:)","url":"\/documentation\/compute\/simd32\/'._(_:_:)-73r8","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"UInt8","type":"codeVoice"},{"text":".","type":"text"}]},"abstract":[{"text":"A vector mask with the result of a pointwise greater-than comparison.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._(_:_:)-73r8"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/.==(_:_:)-2j8za":{"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Double"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/.==(_:_:)-2j8za","type":"topic","title":".==(_:_:)","role":"symbol","url":"\/documentation\/compute\/simd32\/'.==(_:_:)-2j8za","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":".==","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"SIMD32","preciseIdentifier":"s:s6SIMD32V"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V","text":"SIMD32"},{"kind":"text","text":"<"},{"text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"text":"SIMDMask","kind":"typeIdentifier","preciseIdentifier":"s:s8SIMDMaskV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V","text":"SIMD32"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Scalar"},{"kind":"text","text":">."},{"preciseIdentifier":"s:s6SIMD32V11MaskStoragea","text":"MaskStorage","kind":"typeIdentifier"},{"kind":"text","text":">"}],"abstract":[{"text":"A vector mask with the result of a pointwise equality comparison.","type":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/.!=(_:_:)-92bkt":{"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":".!="},{"kind":"text","text":" "},{"kind":"text","text":"("},{"text":"SIMD32","kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V"},{"kind":"text","text":"<"},{"text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V","text":"SIMD32"},{"kind":"text","text":"<"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","text":"SIMDMask","preciseIdentifier":"s:s8SIMDMaskV"},{"text":"<","kind":"text"},{"text":"SIMD32","preciseIdentifier":"s:s6SIMD32V","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"preciseIdentifier":"s:s6SIMD32V11MaskStoragea","kind":"typeIdentifier","text":"MaskStorage"},{"text":">","kind":"text"}],"title":".!=(_:_:)","url":"\/documentation\/compute\/simd32\/'.!=(_:_:)-92bkt","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Scalar"},{"text":" is ","type":"text"},{"code":"UInt32","type":"codeVoice"},{"type":"text","text":"."}]},"abstract":[{"text":"A vector mask with the result of a pointwise inequality comparison.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/.!=(_:_:)-92bkt"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/lowHalf":{"title":"lowHalf","kind":"symbol","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/lowHalf","abstract":[{"type":"text","text":"A half-length vector made up of the low elements of the vector."}],"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"lowHalf"},{"text":": ","kind":"text"},{"text":"SIMD16","kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD16V"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":">"}],"url":"\/documentation\/compute\/simd32\/lowhalf","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/._(_:_:)-1goth":{"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Scalar"},{"text":" is ","type":"text"},{"code":"Int8","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._(_:_:)-1goth","type":"topic","title":".>(_:_:)","role":"symbol","url":"\/documentation\/compute\/simd32\/'._(_:_:)-1goth","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":".>"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"SIMD32","preciseIdentifier":"s:s6SIMD32V","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"SIMD32","preciseIdentifier":"s:s6SIMD32V","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"text":"SIMDMask","preciseIdentifier":"s:s8SIMDMaskV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V","text":"SIMD32"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Scalar"},{"text":">.","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V11MaskStoragea","text":"MaskStorage"},{"text":">","kind":"text"}],"abstract":[{"text":"A vector mask with the result of a pointwise greater-than comparison.","type":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/._(_:_:)-19g1c":{"role":"symbol","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":".<"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"SIMD32","preciseIdentifier":"s:s6SIMD32V","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"SIMD32","preciseIdentifier":"s:s6SIMD32V","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"text":"SIMDMask","preciseIdentifier":"s:s8SIMDMaskV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"SIMD32","preciseIdentifier":"s:s6SIMD32V"},{"kind":"text","text":"<"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V11MaskStoragea","text":"MaskStorage"},{"text":">","kind":"text"}],"title":".<(_:_:)","url":"\/documentation\/compute\/simd32\/'._(_:_:)-19g1c","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"UInt8"},{"text":".","type":"text"}]},"abstract":[{"text":"A vector mask with the result of a pointwise less-than comparison.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._(_:_:)-19g1c"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/._(_:_:)-45fh5":{"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Double","type":"codeVoice"},{"text":".","type":"text"}]},"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._(_:_:)-45fh5","type":"topic","title":".<(_:_:)","role":"symbol","url":"\/documentation\/compute\/simd32\/'._(_:_:)-45fh5","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":".<","kind":"identifier"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"text":"SIMD32","preciseIdentifier":"s:s6SIMD32V","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"kind":"typeIdentifier","text":"SIMD32","preciseIdentifier":"s:s6SIMD32V"},{"kind":"text","text":"<"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"preciseIdentifier":"s:s8SIMDMaskV","kind":"typeIdentifier","text":"SIMDMask"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s6SIMD32V","text":"SIMD32","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"kind":"typeIdentifier","text":"MaskStorage","preciseIdentifier":"s:s6SIMD32V11MaskStoragea"},{"text":">","kind":"text"}],"abstract":[{"text":"A vector mask with the result of a pointwise less-than comparison.","type":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/._=(_:_:)-523s9":{"role":"symbol","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":".>=","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:s6SIMD32V","kind":"typeIdentifier","text":"SIMD32"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","text":"SIMD32","preciseIdentifier":"s:s6SIMD32V"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"text":"SIMDMask","preciseIdentifier":"s:s8SIMDMaskV","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:s6SIMD32V","kind":"typeIdentifier","text":"SIMD32"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Scalar"},{"kind":"text","text":">."},{"kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V11MaskStoragea","text":"MaskStorage"},{"kind":"text","text":">"}],"title":".>=(_:_:)","url":"\/documentation\/compute\/simd32\/'._=(_:_:)-523s9","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Int64"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"abstract":[{"text":"A vector mask with the result of a pointwise greater-than-or-equal-to comparison.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._=(_:_:)-523s9"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/Hashable-Implementations":{"kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/Hashable-Implementations","type":"topic","title":"Hashable Implementations","role":"collectionGroup","url":"\/documentation\/compute\/simd32\/hashable-implementations","abstract":[]},"doc://com.swallow.documentation.Compute/documentation/Compute/ExpressibleByArrayLiteral":{"kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"ExpressibleByArrayLiteral","kind":"identifier"}],"title":"ExpressibleByArrayLiteral","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ExpressibleByArrayLiteral","abstract":[{"type":"text","text":"A type that can be initialized using an array literal."}],"url":"\/documentation\/compute\/expressiblebyarrayliteral","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ExpressibleByArrayLiteral"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/CustomDebugStringConvertible-Implementations":{"role":"collectionGroup","kind":"article","title":"CustomDebugStringConvertible Implementations","url":"\/documentation\/compute\/simd32\/customdebugstringconvertible-implementations","abstract":[],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/CustomDebugStringConvertible-Implementations"}}}