{"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RecursiveTreeIterators","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RecursiveTreeIterators\/DepthFirstIterator"]]},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"mutating"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"next","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"Tree","kind":"typeIdentifier","preciseIdentifier":"s:7Compute22RecursiveTreeIteratorsO18DepthFirstIteratorV0C0xmfp"},{"text":"?","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"content","content":[{"text":"Return Value","level":2,"anchor":"return-value","type":"heading"},{"inlineContent":[{"type":"text","text":"The next element in the underlying sequence, if a next element"},{"text":" ","type":"text"},{"text":"exists; otherwise, ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"}],"type":"paragraph"}]},{"kind":"content","content":[{"type":"heading","anchor":"discussion","level":2,"text":"Discussion"},{"inlineContent":[{"type":"text","text":"Repeatedly calling this method returns, in order, all the elements of the"},{"type":"text","text":" "},{"text":"underlying sequence. As soon as the sequence has run out of elements, all","type":"text"},{"type":"text","text":" "},{"type":"text","text":"subsequent calls return "},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"You must not call this method if any other copy of this iterator has been","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"advanced with a call to its "},{"type":"codeVoice","code":"next()"},{"text":" method.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"The following example shows how an iterator can be used explicitly to","type":"text"},{"type":"text","text":" "},{"type":"text","text":"emulate a "},{"type":"codeVoice","code":"for"},{"text":"-","type":"text"},{"type":"codeVoice","code":"in"},{"text":" loop. First, retrieve a sequence’s iterator, and","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"then call the iterator’s "},{"type":"codeVoice","code":"next()"},{"type":"text","text":" method until it returns "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."}]},{"type":"codeListing","code":["let numbers = [2, 3, 5, 7]","var numbersIterator = numbers.makeIterator()","","while let num = numbersIterator.next() {","    print(num)","}","\/\/ Prints \"2\"","\/\/ Prints \"3\"","\/\/ Prints \"5\"","\/\/ Prints \"7\""],"syntax":null}]}],"kind":"symbol","metadata":{"title":"next()","roleHeading":"Instance Method","externalID":"s:7Compute22RecursiveTreeIteratorsO18DepthFirstIteratorV4nextxSgyF","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"next","kind":"identifier"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:7Compute22RecursiveTreeIteratorsO18DepthFirstIteratorV0C0xmfp","kind":"typeIdentifier","text":"Tree"},{"kind":"text","text":"?"}],"symbolKind":"method","modules":[{"name":"Compute"}],"role":"symbol"},"schemaVersion":{"patch":0,"minor":3,"major":0},"abstract":[{"type":"text","text":"Advances to the next element and returns it, or "},{"type":"codeVoice","code":"nil"},{"text":" if no next element","type":"text"},{"type":"text","text":" "},{"type":"text","text":"exists."}],"variants":[{"paths":["\/documentation\/compute\/recursivetreeiterators\/depthfirstiterator\/next()"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RecursiveTreeIterators\/DepthFirstIterator\/next()","interfaceLanguage":"swift"},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/RecursiveTreeIterators/DepthFirstIterator":{"navigatorTitle":[{"kind":"identifier","text":"DepthFirstIterator"}],"title":"RecursiveTreeIterators.DepthFirstIterator","abstract":[],"url":"\/documentation\/compute\/recursivetreeiterators\/depthfirstiterator","role":"symbol","type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RecursiveTreeIterators\/DepthFirstIterator","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DepthFirstIterator"}],"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/RecursiveTreeIterators":{"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"RecursiveTreeIterators","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"RecursiveTreeIterators","kind":"identifier"}],"title":"RecursiveTreeIterators","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RecursiveTreeIterators","abstract":[],"url":"\/documentation\/compute\/recursivetreeiterators","role":"symbol","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/RecursiveTreeIterators/DepthFirstIterator/next()":{"role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Advances to the next element and returns it, or "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" if no next element"},{"type":"text","text":" "},{"type":"text","text":"exists."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RecursiveTreeIterators\/DepthFirstIterator\/next()","url":"\/documentation\/compute\/recursivetreeiterators\/depthfirstiterator\/next()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"next"},{"kind":"text","text":"() -> "},{"text":"Tree","kind":"typeIdentifier","preciseIdentifier":"s:7Compute22RecursiveTreeIteratorsO18DepthFirstIteratorV0C0xmfp"},{"text":"?","kind":"text"}],"title":"next()","type":"topic"}}}