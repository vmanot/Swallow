{"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Matrix","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Matrix\/MutableCollection-Implementations"]]},"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Matrix\/withContiguousMutableStorageIfAvailable(_:)"},"abstract":[{"text":"Executes a closure on the collection’s contiguous storage.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/matrix\/withcontiguousmutablestorageifavailable(_:)"]}],"metadata":{"extendedModule":"Swift","title":"withContiguousMutableStorageIfAvailable(_:)","modules":[{"relatedModules":["Swift"],"name":"Compute"}],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"withContiguousMutableStorageIfAvailable","kind":"identifier"},{"kind":"text","text":"<"},{"text":"R","kind":"genericParameter"},{"text":">((","kind":"text"},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"UnsafeMutableBufferPointer","preciseIdentifier":"s:Sr"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:ST7ElementQa","text":"Element","kind":"typeIdentifier"},{"kind":"text","text":">) "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"externalID":"s:SMsE39withContiguousMutableStorageIfAvailableyqd__Sgqd__Sry7ElementQzGzKXEKlF::SYNTHESIZED::s:7Compute6MatrixV","roleHeading":"Instance Method","symbolKind":"method"},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"mutating"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"withContiguousMutableStorageIfAvailable","kind":"identifier"},{"kind":"text","text":"<"},{"text":"R","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"body"},{"text":": (","kind":"text"},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"UnsafeMutableBufferPointer","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableBufferPointer","preciseIdentifier":"s:Sr"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"Element","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","preciseIdentifier":"s:ST7ElementQa"},{"kind":"text","text":">) "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"R"},{"text":") ","kind":"text"},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"R"},{"text":"?","kind":"text"}],"languages":["swift"],"platforms":["macOS"]}]},{"parameters":[{"content":[{"inlineContent":[{"type":"text","text":"A closure that receives an in-out"},{"type":"text","text":" "},{"type":"codeVoice","code":"UnsafeMutableBufferPointer"},{"type":"text","text":" to the collection’s contiguous storage."}],"type":"paragraph"}],"name":"body"}],"kind":"parameters"},{"content":[{"type":"heading","level":2,"anchor":"return-value","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The value returned from "},{"code":"body","type":"codeVoice"},{"type":"text","text":", unless the collection doesn’t"},{"type":"text","text":" "},{"text":"support contiguous storage, in which case the method ignores ","type":"text"},{"type":"codeVoice","code":"body"},{"text":" and","type":"text"},{"type":"text","text":" "},{"text":"returns ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."}]}],"kind":"content"},{"kind":"content","content":[{"level":2,"text":"Discussion","type":"heading","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"This method calls ","type":"text"},{"code":"body(buffer)","type":"codeVoice"},{"type":"text","text":", where "},{"code":"buffer","type":"codeVoice"},{"text":" provides access to the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"contiguous mutable storage of the entire collection. If the contiguous"},{"type":"text","text":" "},{"type":"text","text":"storage doesn’t exist, the collection creates it. If the collection"},{"type":"text","text":" "},{"text":"doesn’t support an internal representation in the form of contiguous","type":"text"},{"type":"text","text":" "},{"type":"text","text":"mutable storage, this method doesn’t call "},{"type":"codeVoice","code":"body"},{"text":" — it immediately","type":"text"},{"type":"text","text":" "},{"text":"returns ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"text":"The optimizer can often eliminate bounds- and uniqueness-checking","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"within an algorithm. When that fails, however, invoking the same"},{"text":" ","type":"text"},{"text":"algorithm on the ","type":"text"},{"type":"codeVoice","code":"buffer"},{"text":" argument may let you trade safety for speed.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Always perform any necessary cleanup in the closure, because the"},{"type":"text","text":" "},{"type":"text","text":"method makes no guarantees about the state of the collection if the"},{"text":" ","type":"text"},{"type":"text","text":"closure throws an error. Your changes to the collection may be absent"},{"type":"text","text":" "},{"type":"text","text":"from the collection after throwing the error, because the closure could"},{"type":"text","text":" "},{"type":"text","text":"receive a temporary copy rather than direct access to the collection’s"},{"type":"text","text":" "},{"type":"text","text":"storage."}]},{"style":"warning","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Your "},{"code":"body","type":"codeVoice"},{"type":"text","text":" closure must not replace "},{"code":"buffer","type":"codeVoice"},{"text":". This leads","type":"text"},{"type":"text","text":" "},{"type":"text","text":"to a crash in all implementations of this method within the standard"},{"type":"text","text":" "},{"type":"text","text":"library."}]}],"type":"aside","name":"Warning"},{"inlineContent":[{"type":"text","text":"Successive calls to this method may provide a different pointer on each"},{"text":" ","type":"text"},{"text":"call. Don’t store ","type":"text"},{"code":"buffer","type":"codeVoice"},{"type":"text","text":" outside of this method."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"A "},{"type":"codeVoice","code":"Collection"},{"type":"text","text":" that provides its own implementation of this method"},{"type":"text","text":" "},{"text":"must provide contiguous storage to its elements in the same order","type":"text"},{"type":"text","text":" "},{"text":"as they appear in the collection. This guarantees that it’s possible to","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"generate contiguous mutable storage to any of its subsequences by slicing"},{"type":"text","text":" "},{"type":"codeVoice","code":"buffer"},{"text":" with a range formed from the distances to the subsequence’s","type":"text"},{"text":" ","type":"text"},{"code":"startIndex","type":"codeVoice"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"endIndex"},{"type":"text","text":", respectively."}],"type":"paragraph"}]}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Matrix":{"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Matrix","title":"Matrix","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Matrix"}],"url":"\/documentation\/compute\/matrix","kind":"symbol","type":"topic","abstract":[],"navigatorTitle":[{"kind":"identifier","text":"Matrix"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeMutableBufferPointer":{"kind":"symbol","url":"\/documentation\/compute\/unsafemutablebufferpointer","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"UnsafeMutableBufferPointer","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"UnsafeMutableBufferPointer"}],"abstract":[{"type":"text","text":"A nonowning collection interface to a buffer of mutable"},{"text":" ","type":"text"},{"text":"elements stored contiguously in memory.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableBufferPointer","title":"UnsafeMutableBufferPointer","type":"topic","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence/Element":{"type":"topic","required":true,"abstract":[{"type":"text","text":"A type representing the sequence’s elements."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"symbol","url":"\/documentation\/compute\/sequence\/element","role":"symbol","title":"Element","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Matrix/withContiguousMutableStorageIfAvailable(_:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"withContiguousMutableStorageIfAvailable"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"R"},{"text":">((","kind":"text"},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:Sr","text":"UnsafeMutableBufferPointer","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"kind":"text","text":">) "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"text":" -> ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"type":"topic","url":"\/documentation\/compute\/matrix\/withcontiguousmutablestorageifavailable(_:)","abstract":[{"type":"text","text":"Executes a closure on the collection’s contiguous storage."}],"kind":"symbol","role":"symbol","title":"withContiguousMutableStorageIfAvailable(_:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Matrix\/withContiguousMutableStorageIfAvailable(_:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/Matrix/MutableCollection-Implementations":{"url":"\/documentation\/compute\/matrix\/mutablecollection-implementations","title":"MutableCollection Implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Matrix\/MutableCollection-Implementations","kind":"article","abstract":[],"type":"topic","role":"collectionGroup"}}}