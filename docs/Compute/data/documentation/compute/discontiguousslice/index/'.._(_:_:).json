{"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/DiscontiguousSlice\/Index\/.._(_:_:)","interfaceLanguage":"swift"},"abstract":[{"text":"Returns a half-open range that contains its lower bound but not its upper","type":"text"},{"text":" ","type":"text"},{"text":"bound.","type":"text"}],"kind":"symbol","schemaVersion":{"minor":3,"patch":0,"major":0},"variants":[{"paths":["\/documentation\/compute\/discontiguousslice\/index\/'.._(_:_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"externalID":"s:SLsE3zzloiySnyxGx_xtFZ::SYNTHESIZED::s:s18DiscontiguousSliceV5IndexV","title":"..<(_:_:)","modules":[{"name":"Compute","relatedModules":["Swift"]}],"roleHeading":"Operator","role":"symbol","extendedModule":"Swift","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"..<","kind":"identifier"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sn","text":"Range","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}],"symbolKind":"op"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"..<"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"kind":"internalParam","text":"minimum"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"maximum","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sn","text":"Range","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Range"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}]}]},{"parameters":[{"content":[{"inlineContent":[{"type":"text","text":"The lower bound for the range."}],"type":"paragraph"}],"name":"minimum"},{"name":"maximum","content":[{"type":"paragraph","inlineContent":[{"text":"The upper bound for the range.","type":"text"}]}]}],"kind":"parameters"},{"kind":"content","content":[{"anchor":"discussion","level":2,"text":"Discussion","type":"heading"},{"inlineContent":[{"type":"text","text":"Use the half-open range operator ("},{"code":"..<","type":"codeVoice"},{"type":"text","text":") to create a range of any type"},{"type":"text","text":" "},{"type":"text","text":"that conforms to the "},{"code":"Comparable","type":"codeVoice"},{"type":"text","text":" protocol. This example creates a"},{"text":" ","type":"text"},{"code":"Range<Double>","type":"codeVoice"},{"text":" from zero up to, but not including, 5.0.","type":"text"}],"type":"paragraph"},{"code":["let lessThanFive = 0.0..<5.0","print(lessThanFive.contains(3.14))  \/\/ Prints \"true\"","print(lessThanFive.contains(5.0))   \/\/ Prints \"false\""],"type":"codeListing","syntax":null},{"type":"aside","name":"Precondition","style":"note","content":[{"inlineContent":[{"text":"","type":"text"},{"type":"codeVoice","code":"minimum <= maximum"},{"text":".","type":"text"}],"type":"paragraph"}]}]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/DiscontiguousSlice","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/DiscontiguousSlice\/Collection-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/DiscontiguousSlice\/Index","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/DiscontiguousSlice\/Index\/Comparable-Implementations"]]},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/DiscontiguousSlice/Index/.._(_:_:)":{"abstract":[{"type":"text","text":"Returns a half-open range that contains its lower bound but not its upper"},{"text":" ","type":"text"},{"type":"text","text":"bound."}],"title":"..<(_:_:)","role":"symbol","type":"topic","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"..<"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Range","kind":"typeIdentifier","preciseIdentifier":"s:Sn"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/DiscontiguousSlice\/Index\/.._(_:_:)","url":"\/documentation\/compute\/discontiguousslice\/index\/'.._(_:_:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/DiscontiguousSlice/Index":{"title":"DiscontiguousSlice.Index","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Index"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/DiscontiguousSlice\/Index","navigatorTitle":[{"text":"Index","kind":"identifier"}],"url":"\/documentation\/compute\/discontiguousslice\/index","abstract":[{"type":"text","text":"A position in a "},{"type":"codeVoice","code":"DiscontiguousSlice"},{"type":"text","text":"."}],"type":"topic","kind":"symbol","role":"symbol","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Base","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Collection"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}]}},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/DiscontiguousSlice/Index/Comparable-Implementations":{"url":"\/documentation\/compute\/discontiguousslice\/index\/comparable-implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/DiscontiguousSlice\/Index\/Comparable-Implementations","role":"collectionGroup","type":"topic","kind":"article","title":"Comparable Implementations","abstract":[]},"doc://com.swallow.documentation.Compute/documentation/Compute/DiscontiguousSlice":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"DiscontiguousSlice"}],"navigatorTitle":[{"text":"DiscontiguousSlice","kind":"identifier"}],"url":"\/documentation\/compute\/discontiguousslice","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/DiscontiguousSlice","title":"DiscontiguousSlice","kind":"symbol","role":"symbol","abstract":[{"text":"A collection wrapper that provides access to the elements of a collection,","type":"text"},{"text":" ","type":"text"},{"text":"indexed by a set of indices.","type":"text"}],"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/DiscontiguousSlice/Collection-Implementations":{"url":"\/documentation\/compute\/discontiguousslice\/collection-implementations","type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/DiscontiguousSlice\/Collection-Implementations","role":"collectionGroup","abstract":[],"title":"Collection Implementations","kind":"article"},"doc://com.swallow.documentation.Compute/documentation/Compute/Range":{"kind":"symbol","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Range","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Range","url":"\/documentation\/compute\/range","abstract":[{"text":"A half-open interval from a lower bound up to, but not including, an upper","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"bound."}],"navigatorTitle":[{"text":"Range","kind":"identifier"}],"title":"Range"}}}