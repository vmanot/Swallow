{"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"endIndex","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyPrefixWhileSequence","preciseIdentifier":"s:s23LazyPrefixWhileSequenceV","text":"LazyPrefixWhileSequence"},{"kind":"text","text":"<"},{"text":"Base","kind":"typeIdentifier"},{"kind":"text","text":">."},{"text":"Index","preciseIdentifier":"s:s23LazyPrefixWhileSequenceVsSlRzrlE5IndexV","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyPrefixWhileSequence\/Index","kind":"typeIdentifier"},{"text":" { ","kind":"text"},{"kind":"keyword","text":"get"},{"text":" }","kind":"text"}]}]},{"content":[{"level":2,"text":"Discussion","type":"heading","anchor":"discussion"},{"inlineContent":[{"text":"When you need a range that includes the last element of a collection, use","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the half-open range operator ("},{"type":"codeVoice","code":"..<"},{"text":") with ","type":"text"},{"type":"codeVoice","code":"endIndex"},{"text":". The ","type":"text"},{"code":"..<","type":"codeVoice"},{"type":"text","text":" operator"},{"type":"text","text":" "},{"type":"text","text":"creates a range that doesn’t include the upper bound, so it’s always"},{"type":"text","text":" "},{"text":"safe to use with ","type":"text"},{"code":"endIndex","type":"codeVoice"},{"text":". For example:","type":"text"}],"type":"paragraph"},{"code":["let numbers = [10, 20, 30, 40, 50]","if let index = numbers.firstIndex(of: 30) {","    print(numbers[index ..< numbers.endIndex])","}","\/\/ Prints \"[30, 40, 50]\""],"type":"codeListing","syntax":null},{"type":"paragraph","inlineContent":[{"text":"If the collection is empty, ","type":"text"},{"type":"codeVoice","code":"endIndex"},{"type":"text","text":" is equal to "},{"type":"codeVoice","code":"startIndex"},{"type":"text","text":"."}]}],"kind":"content"}],"variants":[{"paths":["\/documentation\/compute\/lazyprefixwhilesequence\/endindex"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyPrefixWhileSequence","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyPrefixWhileSequence\/Collection-Implementations"]]},"kind":"symbol","identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyPrefixWhileSequence\/endIndex","interfaceLanguage":"swift"},"metadata":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"endIndex","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s23LazyPrefixWhileSequenceV","text":"LazyPrefixWhileSequence"},{"text":"<","kind":"text"},{"text":"Base","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"preciseIdentifier":"s:s23LazyPrefixWhileSequenceVsSlRzrlE5IndexV","text":"Index","kind":"typeIdentifier"}],"roleHeading":"Instance Property","externalID":"s:s23LazyPrefixWhileSequenceVsSlRzrlE8endIndexABsSlRzrlE0F0Vyx_Gvp","title":"endIndex","modules":[{"name":"Compute","relatedModules":["Swift"]}],"role":"symbol","extendedModule":"Swift","symbolKind":"property","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Base","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Collection"},{"type":"text","text":"."}]}},"sections":[],"abstract":[{"text":"The collection’s “past the end” position—that is, the position one","type":"text"},{"text":" ","type":"text"},{"text":"greater than the last valid subscript argument.","type":"text"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/LazyPrefixWhileSequence/endIndex":{"type":"topic","url":"\/documentation\/compute\/lazyprefixwhilesequence\/endindex","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyPrefixWhileSequence\/endIndex","kind":"symbol","title":"endIndex","conformance":{"constraints":[{"type":"codeVoice","code":"Base"},{"text":" conforms to ","type":"text"},{"code":"Collection","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"abstract":[{"text":"The collection’s “past the end” position—that is, the position one","type":"text"},{"type":"text","text":" "},{"type":"text","text":"greater than the last valid subscript argument."}],"role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"endIndex"},{"text":": ","kind":"text"},{"text":"LazyPrefixWhileSequence","preciseIdentifier":"s:s23LazyPrefixWhileSequenceV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Base","kind":"typeIdentifier"},{"kind":"text","text":">."},{"preciseIdentifier":"s:s23LazyPrefixWhileSequenceVsSlRzrlE5IndexV","kind":"typeIdentifier","text":"Index"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/LazyPrefixWhileSequence/Collection-Implementations":{"title":"Collection Implementations","url":"\/documentation\/compute\/lazyprefixwhilesequence\/collection-implementations","kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyPrefixWhileSequence\/Collection-Implementations","role":"collectionGroup","type":"topic","abstract":[]},"doc://com.swallow.documentation.Compute/documentation/Compute/LazyPrefixWhileSequence/Index":{"url":"\/documentation\/compute\/lazyprefixwhilesequence\/index","kind":"symbol","abstract":[{"type":"text","text":"A position in a "},{"type":"codeVoice","code":"LazyPrefixWhileCollection"},{"type":"text","text":" or"},{"text":" ","type":"text"},{"type":"codeVoice","code":"LazyPrefixWhileBidirectionalCollection"},{"type":"text","text":" instance."}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyPrefixWhileSequence\/Index","title":"LazyPrefixWhileSequence.Index","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Index","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"Index"}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Base","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Collection"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]}},"doc://com.swallow.documentation.Compute/documentation/Compute/LazyPrefixWhileSequence":{"type":"topic","role":"symbol","url":"\/documentation\/compute\/lazyprefixwhilesequence","title":"LazyPrefixWhileSequence","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"LazyPrefixWhileSequence"}],"abstract":[{"type":"text","text":"A sequence whose elements consist of the initial consecutive elements of"},{"text":" ","type":"text"},{"text":"some base sequence that satisfy a given predicate.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"LazyPrefixWhileSequence"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyPrefixWhileSequence"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"}}}