{"relationshipsSections":[{"type":"conformsTo","identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Comparable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Copyable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Equatable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Hashable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sendable"],"kind":"relationships","title":"Conforms To"}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyPrefixWhileSequence","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyPrefixWhileSequence\/Collection-Implementations"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"kind":"symbol","metadata":{"conformance":{"constraints":[{"code":"Base","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Collection","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"roleHeading":"Structure","title":"LazyPrefixWhileSequence.Index","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Index"}],"extendedModule":"Swift","modules":[{"relatedModules":["Swift"],"name":"Compute"}],"symbolKind":"struct","navigatorTitle":[{"kind":"identifier","text":"Index"}],"externalID":"s:s23LazyPrefixWhileSequenceVsSlRzrlE5IndexV","role":"symbol"},"variants":[{"paths":["\/documentation\/compute\/lazyprefixwhilesequence\/index"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"@frozen","kind":"attribute"},{"kind":"text","text":" "},{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Index","kind":"identifier"}],"platforms":["macOS"],"languages":["swift"]}]}],"abstract":[{"text":"A position in a ","type":"text"},{"type":"codeVoice","code":"LazyPrefixWhileCollection"},{"type":"text","text":" or"},{"text":" ","type":"text"},{"type":"codeVoice","code":"LazyPrefixWhileBidirectionalCollection"},{"text":" instance.","type":"text"}],"topicSections":[{"generated":true,"identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyPrefixWhileSequence\/Index\/Comparable-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyPrefixWhileSequence\/Index\/Equatable-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyPrefixWhileSequence\/Index\/Hashable-Implementations"],"title":"Default Implementations","anchor":"Default-Implementations"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyPrefixWhileSequence\/Index"},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/LazyPrefixWhileSequence/Index":{"url":"\/documentation\/compute\/lazyprefixwhilesequence\/index","kind":"symbol","abstract":[{"type":"text","text":"A position in a "},{"type":"codeVoice","code":"LazyPrefixWhileCollection"},{"type":"text","text":" or"},{"text":" ","type":"text"},{"type":"codeVoice","code":"LazyPrefixWhileBidirectionalCollection"},{"type":"text","text":" instance."}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyPrefixWhileSequence\/Index","title":"LazyPrefixWhileSequence.Index","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Index","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"Index"}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Base","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Collection"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]}},"doc://com.swallow.documentation.Compute/documentation/Compute/Hashable":{"type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Hashable"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Hashable","abstract":[{"text":"A type that can be hashed into a ","type":"text"},{"type":"codeVoice","code":"Hasher"},{"text":" to produce an integer hash value.","type":"text"}],"title":"Hashable","role":"symbol","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Base"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Collection"},{"text":" and ","type":"text"},{"code":"Base.Index","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Hashable","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"url":"\/documentation\/compute\/hashable","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"Hashable","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Sendable":{"type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Sendable"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sendable","abstract":[],"title":"Sendable","role":"symbol","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Base"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Collection"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Base.Index"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Sendable"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"url":"\/documentation\/compute\/sendable","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"Sendable","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/LazyPrefixWhileSequence":{"type":"topic","role":"symbol","url":"\/documentation\/compute\/lazyprefixwhilesequence","title":"LazyPrefixWhileSequence","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"LazyPrefixWhileSequence"}],"abstract":[{"type":"text","text":"A sequence whose elements consist of the initial consecutive elements of"},{"text":" ","type":"text"},{"text":"some base sequence that satisfy a given predicate.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"LazyPrefixWhileSequence"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyPrefixWhileSequence"},"doc://com.swallow.documentation.Compute/documentation/Compute/LazyPrefixWhileSequence/Index/Hashable-Implementations":{"abstract":[],"type":"topic","url":"\/documentation\/compute\/lazyprefixwhilesequence\/index\/hashable-implementations","role":"collectionGroup","kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyPrefixWhileSequence\/Index\/Hashable-Implementations","title":"Hashable Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/LazyPrefixWhileSequence/Index/Equatable-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyPrefixWhileSequence\/Index\/Equatable-Implementations","role":"collectionGroup","kind":"article","url":"\/documentation\/compute\/lazyprefixwhilesequence\/index\/equatable-implementations","title":"Equatable Implementations","type":"topic","abstract":[]},"doc://com.swallow.documentation.Compute/documentation/Compute/Copyable":{"role":"symbol","title":"Copyable","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"Copyable","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Copyable","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Base","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Collection"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Base.Index"},{"type":"text","text":" conforms to "},{"code":"Hashable","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"url":"\/documentation\/compute\/copyable","type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Copyable"}],"abstract":[{"text":"A type whose values can be implicitly or explicitly copied.","type":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Comparable":{"type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Comparable"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Comparable","abstract":[{"text":"A type that can be compared using the relational operators ","type":"text"},{"type":"codeVoice","code":"<"},{"type":"text","text":", "},{"type":"codeVoice","code":"<="},{"text":", ","type":"text"},{"code":">=","type":"codeVoice"},{"type":"text","text":","},{"text":" ","type":"text"},{"type":"text","text":"and "},{"code":">","type":"codeVoice"},{"text":".","type":"text"}],"title":"Comparable","role":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Base"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Collection"},{"text":".","type":"text"}]},"url":"\/documentation\/compute\/comparable","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Comparable"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/LazyPrefixWhileSequence/Collection-Implementations":{"title":"Collection Implementations","url":"\/documentation\/compute\/lazyprefixwhilesequence\/collection-implementations","kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyPrefixWhileSequence\/Collection-Implementations","role":"collectionGroup","type":"topic","abstract":[]},"doc://com.swallow.documentation.Compute/documentation/Compute/Equatable":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"Equatable","kind":"identifier"}],"conformance":{"constraints":[{"type":"codeVoice","code":"Base"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Collection"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Base.Index"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Hashable"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"kind":"symbol","url":"\/documentation\/compute\/equatable","navigatorTitle":[{"kind":"identifier","text":"Equatable"}],"role":"symbol","title":"Equatable","abstract":[{"text":"A type that can be compared for value equality.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Equatable"},"doc://com.swallow.documentation.Compute/documentation/Compute/LazyPrefixWhileSequence/Index/Comparable-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyPrefixWhileSequence\/Index\/Comparable-Implementations","url":"\/documentation\/compute\/lazyprefixwhilesequence\/index\/comparable-implementations","abstract":[],"type":"topic","role":"collectionGroup","title":"Comparable Implementations","kind":"article"}}}