{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyPrefixWhileSequence\/removeFirst(_:)-2l1tf"},"abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"Sequence.removeFirst(_:)"},{"type":"text","text":"."}],"metadata":{"symbolKind":"method","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Element","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"_CasePathExtracting"},{"type":"text","text":"."}]},"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"removeFirst","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">("},{"text":"CasePath","kind":"typeIdentifier","preciseIdentifier":"s:7Swallow8CasePathV"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Element","preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">) -> "},{"text":"Value","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"roleHeading":"Instance Method","externalID":"s:ST7SwallowAA19_CasePathExtracting7ElementRpzrlE11removeFirstyqd__SgAA0bC0VyADqd__GSmRzlF::SYNTHESIZED::s:s23LazyPrefixWhileSequenceV","modules":[{"name":"Compute","relatedModules":["Swift"]}],"extendedModule":"Swift","title":"removeFirst(_:)","role":"symbol"},"schemaVersion":{"minor":3,"patch":0,"major":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/lazyprefixwhilesequence\/removefirst(_:)-2l1tf"]}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"mutating","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"removeFirst","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Value"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"casePath"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Swallow8CasePathV","text":"CasePath"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Element","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":"? "},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:Sm","kind":"typeIdentifier","text":"RangeReplaceableCollection","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RangeReplaceableCollection"}]}],"kind":"declarations"}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyPrefixWhileSequence","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyPrefixWhileSequence\/Sequence-Implementations"]]},"sections":[],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/LazyPrefixWhileSequence/removeFirst(_:)-2l1tf":{"title":"removeFirst(_:)","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"_CasePathExtracting"},{"text":".","type":"text"}]},"url":"\/documentation\/compute\/lazyprefixwhilesequence\/removefirst(_:)-2l1tf","type":"topic","abstract":[],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"removeFirst","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"genericParameter"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:7Swallow8CasePathV","kind":"typeIdentifier","text":"CasePath"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"text":", ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Value"},{"text":"?","kind":"text"}],"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyPrefixWhileSequence\/removeFirst(_:)-2l1tf","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/LazyPrefixWhileSequence":{"type":"topic","role":"symbol","url":"\/documentation\/compute\/lazyprefixwhilesequence","title":"LazyPrefixWhileSequence","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"LazyPrefixWhileSequence"}],"abstract":[{"type":"text","text":"A sequence whose elements consist of the initial consecutive elements of"},{"text":" ","type":"text"},{"text":"some base sequence that satisfy a given predicate.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"LazyPrefixWhileSequence"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyPrefixWhileSequence"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence/Element":{"type":"topic","required":true,"abstract":[{"type":"text","text":"A type representing the sequenceâ€™s elements."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"symbol","url":"\/documentation\/compute\/sequence\/element","role":"symbol","title":"Element","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/LazyPrefixWhileSequence/Sequence-Implementations":{"type":"topic","abstract":[],"title":"Sequence Implementations","kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyPrefixWhileSequence\/Sequence-Implementations","role":"collectionGroup","url":"\/documentation\/compute\/lazyprefixwhilesequence\/sequence-implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/RangeReplaceableCollection":{"type":"topic","title":"RangeReplaceableCollection","abstract":[{"text":"A collection that supports replacement of an arbitrary subrange of elements","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"with the elements of another collection."}],"url":"\/documentation\/compute\/rangereplaceablecollection","role":"symbol","kind":"symbol","navigatorTitle":[{"text":"RangeReplaceableCollection","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RangeReplaceableCollection","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"RangeReplaceableCollection","kind":"identifier"}]}}}