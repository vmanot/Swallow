{"kind":"symbol","primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"subscript"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"R"},{"text":">(","kind":"text"},{"kind":"internalParam","text":"r"},{"text":": ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"SubSequence","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/SubSequence","preciseIdentifier":"s:Sl11SubSequenceQa"},{"kind":"text","text":" "},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RangeExpression","kind":"typeIdentifier","text":"RangeExpression","preciseIdentifier":"s:SX"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa","text":"Index","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/Index"},{"text":" == ","kind":"text"},{"kind":"typeIdentifier","text":"R"},{"kind":"text","text":"."},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RangeExpression\/Bound","preciseIdentifier":"s:SX5BoundQa","text":"Bound","kind":"typeIdentifier"},{"text":" { ","kind":"text"},{"kind":"keyword","text":"get"},{"text":" }","kind":"text"}]}],"kind":"declarations"},{"kind":"content","content":[{"text":"Overview","anchor":"overview","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"The range expression is converted to a concrete subrange relative to this"},{"type":"text","text":" "},{"text":"collection. For example, using a ","type":"text"},{"type":"codeVoice","code":"PartialRangeFrom"},{"type":"text","text":" range expression"},{"type":"text","text":" "},{"type":"text","text":"with an array accesses the subrange from the start of the range"},{"type":"text","text":" "},{"text":"expression until the end of the array.","type":"text"}],"type":"paragraph"},{"syntax":null,"type":"codeListing","code":["let streets = [\"Adams\", \"Bryant\", \"Channing\", \"Douglas\", \"Evarts\"]","let streetsSlice = streets[2...]","print(streetsSlice)","\/\/ [\"Channing\", \"Douglas\", \"Evarts\"]"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The accessed slice uses the same indices for the same elements as the"},{"type":"text","text":" "},{"type":"text","text":"original collection uses. This example searches "},{"type":"codeVoice","code":"streetsSlice"},{"type":"text","text":" for one"},{"text":" ","type":"text"},{"text":"of the strings in the slice, and then uses that index in the original","type":"text"},{"type":"text","text":" "},{"text":"array.","type":"text"}]},{"code":["let index = streetsSlice.firstIndex(of: \"Evarts\")    \/\/ 4","print(streets[index!])","\/\/ \"Evarts\""],"type":"codeListing","syntax":null},{"type":"paragraph","inlineContent":[{"type":"text","text":"Always use the slice’s "},{"type":"codeVoice","code":"startIndex"},{"text":" property instead of assuming that its","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"indices start at a particular value. Attempting to access an element by"},{"type":"text","text":" "},{"type":"text","text":"using an index outside the bounds of the slice’s indices may result in a"},{"text":" ","type":"text"},{"text":"runtime error, even if that index is valid for the original collection.","type":"text"}]},{"code":["print(streetsSlice.startIndex)","\/\/ 2","print(streetsSlice[2])","\/\/ \"Channing\"","","print(streetsSlice[0])","\/\/ error: Index out of bounds"],"syntax":null,"type":"codeListing"},{"content":[{"inlineContent":[{"text":"O(1)","type":"text"}],"type":"paragraph"}],"type":"aside","name":"Complexity","style":"note"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/lazyprefixwhilesequence\/subscript(_:)-9tkrc"]}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyPrefixWhileSequence","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyPrefixWhileSequence\/Collection-Implementations"]]},"abstract":[{"type":"text","text":"Accesses the contiguous subrange of the collection’s elements specified"},{"type":"text","text":" "},{"type":"text","text":"by a range expression."}],"schemaVersion":{"major":0,"patch":0,"minor":3},"metadata":{"roleHeading":"Instance Subscript","role":"symbol","modules":[{"name":"Compute","relatedModules":["Swift"]}],"symbolKind":"subscript","fragments":[{"text":"subscript","kind":"keyword"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"R"},{"kind":"text","text":">("},{"text":"R","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sl11SubSequenceQa","text":"SubSequence"}],"extendedModule":"Swift","title":"subscript(_:)","externalID":"s:SlsEy11SubSequenceQzqd__cSXRd__5BoundQyd__5IndexRtzluip::SYNTHESIZED::s:s23LazyPrefixWhileSequenceV"},"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyPrefixWhileSequence\/subscript(_:)-9tkrc"},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/LazyPrefixWhileSequence/Collection-Implementations":{"title":"Collection Implementations","url":"\/documentation\/compute\/lazyprefixwhilesequence\/collection-implementations","kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyPrefixWhileSequence\/Collection-Implementations","role":"collectionGroup","type":"topic","abstract":[]},"doc://com.swallow.documentation.Compute/documentation/Compute/LazyPrefixWhileSequence":{"type":"topic","role":"symbol","url":"\/documentation\/compute\/lazyprefixwhilesequence","title":"LazyPrefixWhileSequence","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"LazyPrefixWhileSequence"}],"abstract":[{"type":"text","text":"A sequence whose elements consist of the initial consecutive elements of"},{"text":" ","type":"text"},{"text":"some base sequence that satisfy a given predicate.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"LazyPrefixWhileSequence"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyPrefixWhileSequence"},"doc://com.swallow.documentation.Compute/documentation/Compute/RangeExpression/Bound":{"role":"symbol","type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RangeExpression\/Bound","title":"Bound","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"Bound"},{"kind":"text","text":" : "},{"text":"Comparable","kind":"typeIdentifier","preciseIdentifier":"s:SL"}],"url":"\/documentation\/compute\/rangeexpression\/bound","required":true,"abstract":[{"text":"The type for which the expression describes a range.","type":"text"}],"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Collection/Index":{"url":"\/documentation\/compute\/collection\/index","required":true,"role":"symbol","title":"Index","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Index","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"Comparable","preciseIdentifier":"s:SL","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"A type that represents a position in the collection."}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/Index","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Collection/SubSequence":{"url":"\/documentation\/compute\/collection\/subsequence","title":"SubSequence","abstract":[{"type":"text","text":"A collection representing a contiguous subrange of this collection’s"},{"type":"text","text":" "},{"text":"elements. The subsequence shares indices with the original collection.","type":"text"}],"type":"topic","kind":"symbol","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SubSequence"},{"kind":"text","text":" : "},{"text":"Collection","preciseIdentifier":"s:Sl","kind":"typeIdentifier"},{"text":" = ","kind":"text"},{"text":"Slice","preciseIdentifier":"s:s5SliceV","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":">","kind":"text"}],"required":true,"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/SubSequence"},"doc://com.swallow.documentation.Compute/documentation/Compute/RangeExpression":{"abstract":[{"text":"A type that can be used to slice a collection.","type":"text"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"RangeExpression","kind":"identifier"}],"url":"\/documentation\/compute\/rangeexpression","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RangeExpression","kind":"symbol","title":"RangeExpression","role":"symbol","type":"topic","navigatorTitle":[{"text":"RangeExpression","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/LazyPrefixWhileSequence/subscript(_:)-9tkrc":{"url":"\/documentation\/compute\/lazyprefixwhilesequence\/subscript(_:)-9tkrc","title":"subscript(_:)","type":"topic","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyPrefixWhileSequence\/subscript(_:)-9tkrc","abstract":[{"text":"Accesses the contiguous subrange of the collection’s elements specified","type":"text"},{"type":"text","text":" "},{"text":"by a range expression.","type":"text"}],"fragments":[{"kind":"keyword","text":"subscript"},{"text":"<","kind":"text"},{"text":"R","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"R"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"SubSequence","preciseIdentifier":"s:Sl11SubSequenceQa","kind":"typeIdentifier"}],"role":"symbol"}}}