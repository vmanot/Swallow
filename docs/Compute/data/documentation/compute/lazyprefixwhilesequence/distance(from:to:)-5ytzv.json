{"kind":"symbol","sections":[],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyPrefixWhileSequence","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyPrefixWhileSequence\/Collection-Implementations"]]},"schemaVersion":{"major":0,"patch":0,"minor":3},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyPrefixWhileSequence\/distance(from:to:)-5ytzv"},"abstract":[{"type":"text","text":"Returns the distance between two indices."}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"distance","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"from"},{"kind":"text","text":" "},{"text":"start","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:Sl5IndexQa","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/Index","text":"Index","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"to","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"end"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/Index","kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa","text":"Index"},{"kind":"text","text":") -> "},{"text":"Int","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","preciseIdentifier":"s:Si"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"start","content":[{"inlineContent":[{"text":"A valid index of the collection.","type":"text"}],"type":"paragraph"}]},{"name":"end","content":[{"inlineContent":[{"text":"Another valid index of the collection. If ","type":"text"},{"code":"end","type":"codeVoice"},{"type":"text","text":" is equal to"},{"type":"text","text":" "},{"code":"start","type":"codeVoice"},{"text":", the result is zero.","type":"text"}],"type":"paragraph"}]}]},{"kind":"content","content":[{"text":"Return Value","anchor":"return-value","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"text":"The distance between ","type":"text"},{"type":"codeVoice","code":"start"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"end"},{"text":". The result can be","type":"text"},{"type":"text","text":" "},{"type":"text","text":"negative only if the collection conforms to the"},{"type":"text","text":" "},{"code":"BidirectionalCollection","type":"codeVoice"},{"type":"text","text":" protocol."}]}]},{"kind":"content","content":[{"anchor":"discussion","text":"Discussion","level":2,"type":"heading"},{"inlineContent":[{"text":"Unless the collection conforms to the ","type":"text"},{"code":"BidirectionalCollection","type":"codeVoice"},{"text":" protocol,","type":"text"},{"text":" ","type":"text"},{"code":"start","type":"codeVoice"},{"type":"text","text":" must be less than or equal to "},{"type":"codeVoice","code":"end"},{"type":"text","text":"."}],"type":"paragraph"},{"name":"Complexity","content":[{"inlineContent":[{"text":"O(1) if the collection conforms to","type":"text"},{"text":" ","type":"text"},{"code":"RandomAccessCollection","type":"codeVoice"},{"text":"; otherwise, O(","type":"text"},{"inlineContent":[{"type":"text","text":"k"}],"type":"emphasis"},{"type":"text","text":"), where "},{"inlineContent":[{"type":"text","text":"k"}],"type":"emphasis"},{"text":" is the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"resulting distance."}],"type":"paragraph"}],"type":"aside","style":"note"}]}],"variants":[{"paths":["\/documentation\/compute\/lazyprefixwhilesequence\/distance(from:to:)-5ytzv"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"symbolKind":"method","role":"symbol","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"distance"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"from"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa","text":"Index"},{"kind":"text","text":", "},{"text":"to","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa","text":"Index"},{"kind":"text","text":") -> "},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"}],"extendedModule":"Swift","modules":[{"relatedModules":["Swift"],"name":"Compute"}],"title":"distance(from:to:)","externalID":"s:SlsE8distance4from2toSi5IndexQz_AEtF::SYNTHESIZED::s:s23LazyPrefixWhileSequenceV"},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Collection/Index":{"url":"\/documentation\/compute\/collection\/index","required":true,"role":"symbol","title":"Index","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Index","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"Comparable","preciseIdentifier":"s:SL","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"A type that represents a position in the collection."}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/Index","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/LazyPrefixWhileSequence":{"type":"topic","role":"symbol","url":"\/documentation\/compute\/lazyprefixwhilesequence","title":"LazyPrefixWhileSequence","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"LazyPrefixWhileSequence"}],"abstract":[{"type":"text","text":"A sequence whose elements consist of the initial consecutive elements of"},{"text":" ","type":"text"},{"text":"some base sequence that satisfy a given predicate.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"LazyPrefixWhileSequence"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyPrefixWhileSequence"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/LazyPrefixWhileSequence/distance(from:to:)-5ytzv":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyPrefixWhileSequence\/distance(from:to:)-5ytzv","url":"\/documentation\/compute\/lazyprefixwhilesequence\/distance(from:to:)-5ytzv","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"distance","kind":"identifier"},{"kind":"text","text":"("},{"text":"from","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Index","kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa"},{"kind":"text","text":", "},{"text":"to","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:Sl5IndexQa","text":"Index","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Returns the distance between two indices."}],"kind":"symbol","title":"distance(from:to:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/LazyPrefixWhileSequence/Collection-Implementations":{"title":"Collection Implementations","url":"\/documentation\/compute\/lazyprefixwhilesequence\/collection-implementations","kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyPrefixWhileSequence\/Collection-Implementations","role":"collectionGroup","type":"topic","abstract":[]},"doc://com.swallow.documentation.Compute/documentation/Compute/Int":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","abstract":[{"type":"text","text":"A signed integer value type."}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Int","kind":"identifier"}],"navigatorTitle":[{"text":"Int","kind":"identifier"}],"title":"Int","url":"\/documentation\/compute\/int","kind":"symbol"}}}