{"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyPrefixWhileSequence","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyPrefixWhileSequence\/Collection-Implementations"]]},"kind":"symbol","schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyPrefixWhileSequence\/map(_:)-69szl","interfaceLanguage":"swift"},"abstract":[{"text":"Returns an array containing the results of mapping the given closure","type":"text"},{"text":" ","type":"text"},{"text":"over the sequence’s elements.","type":"text"}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"map"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"E","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"transform"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","text":"Element"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":"(","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":"("},{"text":"E","kind":"typeIdentifier"},{"text":") -> [","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":"] ","kind":"text"},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"E"},{"text":" : ","kind":"text"},{"text":"Error","kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Error"}],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"transform","content":[{"type":"paragraph","inlineContent":[{"text":"A mapping closure. ","type":"text"},{"type":"codeVoice","code":"transform"},{"type":"text","text":" accepts an"},{"text":" ","type":"text"},{"text":"element of this sequence as its parameter and returns a transformed","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"value of the same or of a different type."}]}]}]},{"kind":"content","content":[{"text":"Return Value","level":2,"type":"heading","anchor":"return-value"},{"inlineContent":[{"text":"An array containing the transformed elements of this","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"sequence."}],"type":"paragraph"}]},{"kind":"content","content":[{"text":"Discussion","type":"heading","anchor":"discussion","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"In this example, "},{"code":"map","type":"codeVoice"},{"text":" is used first to convert the names in the array","type":"text"},{"type":"text","text":" "},{"type":"text","text":"to lowercase strings and then to count their characters."}]},{"syntax":null,"code":["let cast = [\"Vivien\", \"Marlon\", \"Kim\", \"Karl\"]","let lowercaseNames = cast.map { $0.lowercased() }","\/\/ 'lowercaseNames' == [\"vivien\", \"marlon\", \"kim\", \"karl\"]","let letterCounts = cast.map { $0.count }","\/\/ 'letterCounts' == [6, 6, 3, 4]"],"type":"codeListing"}]}],"metadata":{"extendedModule":"Swift","modules":[{"name":"Compute","relatedModules":["Swift"]}],"externalID":"s:SlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lF::SYNTHESIZED::s:s23LazyPrefixWhileSequenceV","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"map","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"E","kind":"genericParameter"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":"(","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"T"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":"(","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"text":") -> [","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":"]"}],"title":"map(_:)","role":"symbol","symbolKind":"method"},"variants":[{"paths":["\/documentation\/compute\/lazyprefixwhilesequence\/map(_:)-69szl"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence/Element":{"type":"topic","required":true,"abstract":[{"type":"text","text":"A type representing the sequence’s elements."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"symbol","url":"\/documentation\/compute\/sequence\/element","role":"symbol","title":"Element","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/LazyPrefixWhileSequence/map(_:)-69szl":{"kind":"symbol","abstract":[{"text":"Returns an array containing the results of mapping the given closure","type":"text"},{"type":"text","text":" "},{"text":"over the sequence’s elements.","type":"text"}],"url":"\/documentation\/compute\/lazyprefixwhilesequence\/map(_:)-69szl","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"map"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"text":", ","kind":"text"},{"text":"E","kind":"genericParameter"},{"text":">((","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":"("},{"text":"E","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"kind":"text","text":"("},{"text":"E","kind":"typeIdentifier"},{"kind":"text","text":") -> ["},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":"]"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyPrefixWhileSequence\/map(_:)-69szl","title":"map(_:)","role":"symbol","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/LazyPrefixWhileSequence":{"type":"topic","role":"symbol","url":"\/documentation\/compute\/lazyprefixwhilesequence","title":"LazyPrefixWhileSequence","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"LazyPrefixWhileSequence"}],"abstract":[{"type":"text","text":"A sequence whose elements consist of the initial consecutive elements of"},{"text":" ","type":"text"},{"text":"some base sequence that satisfy a given predicate.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"LazyPrefixWhileSequence"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyPrefixWhileSequence"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/LazyPrefixWhileSequence/Collection-Implementations":{"title":"Collection Implementations","url":"\/documentation\/compute\/lazyprefixwhilesequence\/collection-implementations","kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyPrefixWhileSequence\/Collection-Implementations","role":"collectionGroup","type":"topic","abstract":[]},"doc://com.swallow.documentation.Compute/documentation/Compute/Error":{"url":"\/documentation\/compute\/error","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Error"}],"navigatorTitle":[{"text":"Error","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Error","type":"topic","role":"symbol","abstract":[{"type":"text","text":"A type representing an error value that can be thrown."}],"kind":"symbol","title":"Error"}}}