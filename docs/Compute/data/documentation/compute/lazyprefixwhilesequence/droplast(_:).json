{"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyPrefixWhileSequence","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyPrefixWhileSequence\/Sequence-Implementations"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"dropLast"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"k","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Int","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":" = 1) -> [","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"text":"]","kind":"text"}],"languages":["swift"]}]},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"return-value","text":"Return Value"},{"type":"paragraph","inlineContent":[{"text":"A sequence leaving off the specified number of elements.","type":"text"}]}]},{"content":[{"type":"heading","anchor":"discussion","level":2,"text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The sequence must be finite. If the number of elements to drop exceeds"},{"type":"text","text":" "},{"text":"the number of elements in the sequence, the result is an empty","type":"text"},{"type":"text","text":" "},{"text":"sequence.","type":"text"}]},{"syntax":null,"code":["let numbers = [1, 2, 3, 4, 5]","print(numbers.dropLast(2))","\/\/ Prints \"[1, 2, 3]\"","print(numbers.dropLast(10))","\/\/ Prints \"[]\""],"type":"codeListing"},{"name":"Complexity","type":"aside","content":[{"inlineContent":[{"type":"text","text":"O("},{"type":"emphasis","inlineContent":[{"type":"text","text":"n"}]},{"type":"text","text":"), where "},{"type":"emphasis","inlineContent":[{"type":"text","text":"n"}]},{"type":"text","text":" is the length of the sequence."}],"type":"paragraph"}],"style":"note"}],"kind":"content"}],"metadata":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"dropLast"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"text":") -> [","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:ST7ElementQa","text":"Element","kind":"typeIdentifier"},{"kind":"text","text":"]"}],"title":"dropLast(_:)","roleHeading":"Instance Method","externalID":"s:STsE8dropLastySay7ElementQzGSiF::SYNTHESIZED::s:s23LazyPrefixWhileSequenceV","role":"symbol","extendedModule":"Swift","modules":[{"name":"Compute","relatedModules":["Swift"]}],"symbolKind":"method"},"abstract":[{"text":"Returns a sequence containing all but the given number of final","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"elements."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/lazyprefixwhilesequence\/droplast(_:)"]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyPrefixWhileSequence\/dropLast(_:)","interfaceLanguage":"swift"},"kind":"symbol","references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence/Element":{"type":"topic","required":true,"abstract":[{"type":"text","text":"A type representing the sequenceâ€™s elements."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"symbol","url":"\/documentation\/compute\/sequence\/element","role":"symbol","title":"Element","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/LazyPrefixWhileSequence/dropLast(_:)":{"abstract":[{"text":"Returns a sequence containing all but the given number of final","type":"text"},{"type":"text","text":" "},{"text":"elements.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyPrefixWhileSequence\/dropLast(_:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"dropLast","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"kind":"text","text":") -> ["},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"text":"]","kind":"text"}],"kind":"symbol","title":"dropLast(_:)","url":"\/documentation\/compute\/lazyprefixwhilesequence\/droplast(_:)","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/LazyPrefixWhileSequence":{"type":"topic","role":"symbol","url":"\/documentation\/compute\/lazyprefixwhilesequence","title":"LazyPrefixWhileSequence","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"LazyPrefixWhileSequence"}],"abstract":[{"type":"text","text":"A sequence whose elements consist of the initial consecutive elements of"},{"text":" ","type":"text"},{"text":"some base sequence that satisfy a given predicate.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"LazyPrefixWhileSequence"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyPrefixWhileSequence"},"doc://com.swallow.documentation.Compute/documentation/Compute/LazyPrefixWhileSequence/Sequence-Implementations":{"type":"topic","abstract":[],"title":"Sequence Implementations","kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyPrefixWhileSequence\/Sequence-Implementations","role":"collectionGroup","url":"\/documentation\/compute\/lazyprefixwhilesequence\/sequence-implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","abstract":[{"type":"text","text":"A signed integer value type."}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Int","kind":"identifier"}],"navigatorTitle":[{"text":"Int","kind":"identifier"}],"title":"Int","url":"\/documentation\/compute\/int","kind":"symbol"}}}