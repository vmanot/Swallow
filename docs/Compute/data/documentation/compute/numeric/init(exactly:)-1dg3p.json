{"metadata":{"conformance":{"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"FixedWidthInteger"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"roleHeading":"Initializer","title":"init(exactly:)","externalID":"s:SZss17FixedWidthIntegerRzrlE7exactlyxSgqd___tcSzRd__lufc","modules":[{"name":"Compute","relatedModules":["Swift"]}],"role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"text":"?<","kind":"text"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"exactly"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":")","kind":"text"}],"extendedModule":"Swift","symbolKind":"init"},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryInteger","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryInteger\/init(exactly:)"],["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Numeric","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Numeric\/init(exactly:)-3m3d5"]]},"abstract":[{"text":"Creates a new instance from the given integer, if it can be represented","type":"text"},{"text":" ","type":"text"},{"text":"exactly.","type":"text"}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"init"},{"text":"?<","kind":"text"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"text":"exactly","kind":"externalParam"},{"kind":"text","text":" "},{"text":"source","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"text":") ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryInteger","kind":"typeIdentifier","text":"BinaryInteger","preciseIdentifier":"s:Sz"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A value to convert to this type of integer."}]}],"name":"source"}],"kind":"parameters"},{"content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"If the value passed as ","type":"text"},{"type":"codeVoice","code":"source"},{"text":" is not representable exactly, the result","type":"text"},{"text":" ","type":"text"},{"text":"is ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":". In the following example, the constant "},{"code":"x","type":"codeVoice"},{"type":"text","text":" is successfully"},{"type":"text","text":" "},{"type":"text","text":"created from a value of "},{"code":"100","type":"codeVoice"},{"text":", while the attempt to initialize the","type":"text"},{"type":"text","text":" "},{"text":"constant ","type":"text"},{"type":"codeVoice","code":"y"},{"text":" from ","type":"text"},{"type":"codeVoice","code":"1_000"},{"type":"text","text":" fails because the "},{"code":"Int8","type":"codeVoice"},{"type":"text","text":" type can represent"},{"type":"text","text":" "},{"type":"codeVoice","code":"127"},{"type":"text","text":" at maximum:"}]},{"code":["let x = Int8(exactly: 100)","\/\/ x == Optional(100)","let y = Int8(exactly: 1_000)","\/\/ y == nil"],"syntax":null,"type":"codeListing"}],"kind":"content"}],"kind":"symbol","identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Numeric\/init(exactly:)-1dg3p","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/compute\/numeric\/init(exactly:)-1dg3p"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"sections":[],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Numeric/init(exactly:)-3m3d5":{"title":"init(exactly:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Numeric\/init(exactly:)-3m3d5","abstract":[{"type":"text","text":"Creates a new instance from the given integer, if it can be represented"},{"text":" ","type":"text"},{"text":"exactly.","type":"text"}],"role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"?<"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"exactly","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"text":")","kind":"text"}],"type":"topic","required":true,"kind":"symbol","defaultImplementations":5,"url":"\/documentation\/compute\/numeric\/init(exactly:)-3m3d5"},"doc://com.swallow.documentation.Compute/documentation/Compute/BinaryInteger/init(exactly:)":{"role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"?<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"text":"exactly","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/compute\/binaryinteger\/init(exactly:)","abstract":[{"text":"Creates an integer from the given floating-point value, if it can be","type":"text"},{"type":"text","text":" "},{"type":"text","text":"represented exactly."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryInteger\/init(exactly:)","type":"topic","required":true,"defaultImplementations":3,"title":"init(exactly:)","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Numeric":{"abstract":[{"type":"text","text":"A type with values that support multiplication."}],"kind":"symbol","url":"\/documentation\/compute\/numeric","navigatorTitle":[{"text":"Numeric","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Numeric","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Numeric"}],"title":"Numeric"},"doc://com.swallow.documentation.Compute/documentation/Compute/Numeric/init(exactly:)-1dg3p":{"type":"topic","role":"symbol","abstract":[{"type":"text","text":"Creates a new instance from the given integer, if it can be represented"},{"type":"text","text":" "},{"type":"text","text":"exactly."}],"kind":"symbol","title":"init(exactly:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"?<"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"exactly","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"text":")","kind":"text"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"code":"FixedWidthInteger","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"url":"\/documentation\/compute\/numeric\/init(exactly:)-1dg3p","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Numeric\/init(exactly:)-1dg3p"},"doc://com.swallow.documentation.Compute/documentation/Compute/BinaryInteger":{"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"BinaryInteger"}],"navigatorTitle":[{"kind":"identifier","text":"BinaryInteger"}],"url":"\/documentation\/compute\/binaryinteger","type":"topic","abstract":[{"type":"text","text":"An integer type with a binary representation."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryInteger","title":"BinaryInteger","kind":"symbol","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"}}}