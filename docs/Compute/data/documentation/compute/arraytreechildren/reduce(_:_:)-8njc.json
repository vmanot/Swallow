{"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArrayTreeChildren","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArrayTreeChildren\/Sequence-Implementations"]]},"kind":"symbol","schemaVersion":{"minor":3,"major":0,"patch":0},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"reduce"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Result"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"initialResult"},{"kind":"text","text":": "},{"text":"Result","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"nextPartialResult","kind":"internalParam"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:ST7ElementQa"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Result"},{"text":") ","kind":"text"},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Result"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"content":[{"inlineContent":[{"type":"text","text":"The value to use as the initial accumulating value."},{"type":"text","text":" "},{"type":"codeVoice","code":"initialResult"},{"type":"text","text":" is passed to "},{"code":"nextPartialResult","type":"codeVoice"},{"text":" the first time the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"closure is executed."}],"type":"paragraph"}],"name":"initialResult"},{"name":"nextPartialResult","content":[{"inlineContent":[{"text":"A closure that combines an accumulating value and","type":"text"},{"type":"text","text":" "},{"text":"an element of the sequence into a new accumulating value, to be used","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"in the next call of the "},{"type":"codeVoice","code":"nextPartialResult"},{"type":"text","text":" closure or returned to"},{"type":"text","text":" "},{"type":"text","text":"the caller."}],"type":"paragraph"}]}],"kind":"parameters"},{"kind":"content","content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The final accumulated value. If the sequence has no elements,"},{"type":"text","text":" "},{"text":"the result is ","type":"text"},{"code":"initialResult","type":"codeVoice"},{"type":"text","text":"."}]}]},{"content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"Use the ","type":"text"},{"code":"reduce(_:_:)","type":"codeVoice"},{"type":"text","text":" method to produce a single value from the elements"},{"text":" ","type":"text"},{"type":"text","text":"of an entire sequence. For example, you can use this method on an array"},{"text":" ","type":"text"},{"type":"text","text":"of numbers to find their sum or product."}]},{"inlineContent":[{"text":"The ","type":"text"},{"type":"codeVoice","code":"nextPartialResult"},{"text":" closure is called sequentially with an","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"accumulating value initialized to "},{"type":"codeVoice","code":"initialResult"},{"type":"text","text":" and each element of"},{"text":" ","type":"text"},{"text":"the sequence. This example shows how to find the sum of an array of","type":"text"},{"type":"text","text":" "},{"type":"text","text":"numbers."}],"type":"paragraph"},{"syntax":null,"type":"codeListing","code":["let numbers = [1, 2, 3, 4]","let numberSum = numbers.reduce(0, { x, y in","    x + y","})","\/\/ numberSum == 10"]},{"type":"paragraph","inlineContent":[{"text":"When ","type":"text"},{"type":"codeVoice","code":"numbers.reduce(_:_:)"},{"type":"text","text":" is called, the following steps occur:"}]},{"items":[{"content":[{"inlineContent":[{"text":"The ","type":"text"},{"code":"nextPartialResult","type":"codeVoice"},{"type":"text","text":" closure is called with "},{"type":"codeVoice","code":"initialResult"},{"text":"—","type":"text"},{"type":"codeVoice","code":"0"},{"type":"text","text":" "},{"type":"text","text":"in this case—and the first element of "},{"code":"numbers","type":"codeVoice"},{"text":", returning the sum:","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"1"},{"text":".","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"The closure is called again repeatedly with the previous call’s return","type":"text"},{"type":"text","text":" "},{"text":"value and each element of the sequence.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"When the sequence is exhausted, the last value returned from the"},{"text":" ","type":"text"},{"type":"text","text":"closure is returned to the caller."}],"type":"paragraph"}]}],"type":"orderedList"},{"type":"paragraph","inlineContent":[{"text":"If the sequence has no elements, ","type":"text"},{"type":"codeVoice","code":"nextPartialResult"},{"type":"text","text":" is never executed"},{"text":" ","type":"text"},{"text":"and ","type":"text"},{"code":"initialResult","type":"codeVoice"},{"text":" is the result of the call to ","type":"text"},{"type":"codeVoice","code":"reduce(_:_:)"},{"type":"text","text":"."}]},{"name":"Complexity","content":[{"inlineContent":[{"type":"text","text":"O("},{"type":"emphasis","inlineContent":[{"text":"n","type":"text"}]},{"text":"), where ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"n"}]},{"text":" is the length of the sequence.","type":"text"}],"type":"paragraph"}],"style":"note","type":"aside"}],"kind":"content"}],"metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"reduce","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Result"},{"text":">(","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"kind":"text","text":", ("},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Element","preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Result","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Result","kind":"typeIdentifier"}],"role":"symbol","externalID":"s:STsE6reduceyqd__qd___qd__qd___7ElementQztKXEtKlF::SYNTHESIZED::s:7Compute17ArrayTreeChildrenV","modules":[{"name":"Compute","relatedModules":["Swift"]}],"title":"reduce(_:_:)","symbolKind":"method","roleHeading":"Instance Method","extendedModule":"Swift"},"variants":[{"paths":["\/documentation\/compute\/arraytreechildren\/reduce(_:_:)-8njc"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArrayTreeChildren\/reduce(_:_:)-8njc"},"sections":[],"abstract":[{"text":"Returns the result of combining the elements of the sequence using the","type":"text"},{"text":" ","type":"text"},{"text":"given closure.","type":"text"}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/ArrayTreeChildren/Sequence-Implementations":{"kind":"article","title":"Sequence Implementations","abstract":[],"role":"collectionGroup","type":"topic","url":"\/documentation\/compute\/arraytreechildren\/sequence-implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArrayTreeChildren\/Sequence-Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/ArrayTreeChildren/reduce(_:_:)-8njc":{"type":"topic","abstract":[{"text":"Returns the result of combining the elements of the sequence using the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"given closure."}],"url":"\/documentation\/compute\/arraytreechildren\/reduce(_:_:)-8njc","role":"symbol","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArrayTreeChildren\/reduce(_:_:)-8njc","title":"reduce(_:_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"reduce","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Result"},{"text":">(","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":", (","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Result"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Result"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/ArrayTreeChildren":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"ArrayTreeChildren","kind":"identifier"}],"title":"ArrayTreeChildren","navigatorTitle":[{"text":"ArrayTreeChildren","kind":"identifier"}],"type":"topic","abstract":[],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArrayTreeChildren","url":"\/documentation\/compute\/arraytreechildren","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence/Element":{"type":"topic","required":true,"abstract":[{"type":"text","text":"A type representing the sequence’s elements."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"symbol","url":"\/documentation\/compute\/sequence\/element","role":"symbol","title":"Element","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"identifier"}]}}}