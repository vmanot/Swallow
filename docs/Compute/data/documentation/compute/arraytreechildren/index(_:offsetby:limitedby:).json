{"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"index","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:Sl5IndexQa","kind":"typeIdentifier","text":"Index"},{"kind":"text","text":", "},{"text":"offsetBy","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"text":"limitedBy","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Index","preciseIdentifier":"s:Sl5IndexQa"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:Sl5IndexQa","text":"Index","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"roleHeading":"Instance Method","externalID":"s:SksE5index_8offsetBy07limitedC05IndexQzSgAE_SiAEtF::SYNTHESIZED::s:7Compute17ArrayTreeChildrenV","modules":[{"relatedModules":["Swift"],"name":"Compute"}],"symbolKind":"method","title":"index(_:offsetBy:limitedBy:)","extendedModule":"Swift","role":"symbol"},"kind":"symbol","abstract":[{"text":"Returns an index that is the specified distance from the given index,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"unless that distance is beyond a given limiting index."}],"sections":[],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArrayTreeChildren","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArrayTreeChildren\/RandomAccessCollection-Implementations"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"index"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"i"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/Index","kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa","text":"Index"},{"text":", ","kind":"text"},{"text":"offsetBy","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"distance"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"limitedBy"},{"kind":"text","text":" "},{"kind":"internalParam","text":"limit"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Index","preciseIdentifier":"s:Sl5IndexQa","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/Index","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Index","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/Index","preciseIdentifier":"s:Sl5IndexQa"},{"kind":"text","text":"?"}]}]},{"parameters":[{"name":"i","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A valid index of the array."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"The distance to offset ","type":"text"},{"code":"i","type":"codeVoice"},{"type":"text","text":"."}]}],"name":"distance"},{"name":"limit","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A valid index of the collection to use as a limit. If"},{"type":"text","text":" "},{"code":"distance > 0","type":"codeVoice"},{"type":"text","text":", "},{"code":"limit","type":"codeVoice"},{"type":"text","text":" should be greater than "},{"code":"i","type":"codeVoice"},{"type":"text","text":" to have any"},{"text":" ","type":"text"},{"text":"effect. Likewise, if ","type":"text"},{"code":"distance < 0","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"limit"},{"type":"text","text":" should be less than "},{"code":"i","type":"codeVoice"},{"type":"text","text":" "},{"text":"to have any effect.","type":"text"}]}]}],"kind":"parameters"},{"content":[{"text":"Return Value","type":"heading","anchor":"return-value","level":2},{"inlineContent":[{"type":"text","text":"An index offset by "},{"type":"codeVoice","code":"distance"},{"type":"text","text":" from the index "},{"type":"codeVoice","code":"i"},{"type":"text","text":", unless that"},{"text":" ","type":"text"},{"type":"text","text":"index would be beyond "},{"type":"codeVoice","code":"limit"},{"type":"text","text":" in the direction of movement. In that"},{"text":" ","type":"text"},{"text":"case, the method returns ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."}],"type":"paragraph"}],"kind":"content"},{"content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"The following example obtains an index advanced four positions from an","type":"text"},{"type":"text","text":" "},{"text":"array’s starting index and then prints the element at that position. The","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"operation doesn’t require going beyond the limiting "},{"type":"codeVoice","code":"numbers.endIndex"},{"type":"text","text":" "},{"text":"value, so it succeeds.","type":"text"}]},{"type":"codeListing","code":["let numbers = [10, 20, 30, 40, 50]","let i = numbers.index(numbers.startIndex, offsetBy: 4)","print(numbers[i])","\/\/ Prints \"50\""],"syntax":null},{"type":"paragraph","inlineContent":[{"text":"The next example attempts to retrieve an index ten positions from","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"numbers.startIndex"},{"type":"text","text":", but fails, because that distance is beyond the"},{"type":"text","text":" "},{"text":"index passed as ","type":"text"},{"code":"limit","type":"codeVoice"},{"type":"text","text":"."}]},{"syntax":null,"code":["let j = numbers.index(numbers.startIndex,","                      offsetBy: 10,","                      limitedBy: numbers.endIndex)","print(j)","\/\/ Prints \"nil\""],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"The value passed as ","type":"text"},{"type":"codeVoice","code":"distance"},{"text":" must not offset ","type":"text"},{"type":"codeVoice","code":"i"},{"type":"text","text":" beyond the bounds of"},{"text":" ","type":"text"},{"text":"the collection, unless the index passed as ","type":"text"},{"type":"codeVoice","code":"limit"},{"text":" prevents offsetting","type":"text"},{"text":" ","type":"text"},{"text":"beyond those bounds.","type":"text"}]},{"style":"note","content":[{"inlineContent":[{"type":"text","text":"O(1)"}],"type":"paragraph"}],"name":"Complexity","type":"aside"}],"kind":"content"}],"variants":[{"paths":["\/documentation\/compute\/arraytreechildren\/index(_:offsetby:limitedby:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArrayTreeChildren\/index(_:offsetBy:limitedBy:)"},"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/ArrayTreeChildren":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"ArrayTreeChildren","kind":"identifier"}],"title":"ArrayTreeChildren","navigatorTitle":[{"text":"ArrayTreeChildren","kind":"identifier"}],"type":"topic","abstract":[],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArrayTreeChildren","url":"\/documentation\/compute\/arraytreechildren","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Collection/Index":{"url":"\/documentation\/compute\/collection\/index","required":true,"role":"symbol","title":"Index","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Index","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"Comparable","preciseIdentifier":"s:SL","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"A type that represents a position in the collection."}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/Index","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","abstract":[{"type":"text","text":"A signed integer value type."}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Int","kind":"identifier"}],"navigatorTitle":[{"text":"Int","kind":"identifier"}],"title":"Int","url":"\/documentation\/compute\/int","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/ArrayTreeChildren/RandomAccessCollection-Implementations":{"abstract":[],"title":"RandomAccessCollection Implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArrayTreeChildren\/RandomAccessCollection-Implementations","kind":"article","type":"topic","role":"collectionGroup","url":"\/documentation\/compute\/arraytreechildren\/randomaccesscollection-implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/ArrayTreeChildren/index(_:offsetBy:limitedBy:)":{"type":"topic","abstract":[{"text":"Returns an index that is the specified distance from the given index,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"unless that distance is beyond a given limiting index."}],"role":"symbol","kind":"symbol","url":"\/documentation\/compute\/arraytreechildren\/index(_:offsetby:limitedby:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArrayTreeChildren\/index(_:offsetBy:limitedBy:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"index","kind":"identifier"},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa","text":"Index"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"offsetBy"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"limitedBy"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa","text":"Index"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:Sl5IndexQa","text":"Index","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"title":"index(_:offsetBy:limitedBy:)"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"}}}