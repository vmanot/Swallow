{"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArrayTreeChildren","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArrayTreeChildren\/MutableCollection-Implementations"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArrayTreeChildren\/partition(by:)-5wexn"},"variants":[{"paths":["\/documentation\/compute\/arraytreechildren\/partition(by:)-5wexn"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"conformance":{"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"BidirectionalCollection"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"partition","kind":"identifier"},{"text":"(","kind":"text"},{"text":"by","kind":"externalParam"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"Element","preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"text":") ","kind":"text"},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa","text":"Index"}],"modules":[{"relatedModules":["Swift"],"name":"Compute"}],"roleHeading":"Instance Method","externalID":"s:SMsSKRzrlE9partition2by5IndexSlQzSb7ElementSTQzKXE_tKF::SYNTHESIZED::s:7Compute17ArrayTreeChildrenV","symbolKind":"method","title":"partition(by:)","extendedModule":"Swift"},"kind":"symbol","abstract":[{"text":"Reorders the elements of the collection such that all the elements","type":"text"},{"type":"text","text":" "},{"type":"text","text":"that match the given predicate are after all the elements that don’t"},{"type":"text","text":" "},{"type":"text","text":"match."}],"schemaVersion":{"major":0,"patch":0,"minor":3},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"mutating","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"partition","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"by"},{"text":" ","kind":"text"},{"text":"belongsInSecondPartition","kind":"internalParam"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:ST7ElementQa","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bool","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Index","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/Index","preciseIdentifier":"s:Sl5IndexQa"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"name":"belongsInSecondPartition","content":[{"inlineContent":[{"type":"text","text":"A predicate used to partition"},{"text":" ","type":"text"},{"type":"text","text":"the collection. All elements satisfying this predicate are ordered"},{"text":" ","type":"text"},{"type":"text","text":"after all elements not satisfying it."}],"type":"paragraph"}]}],"kind":"parameters"},{"kind":"content","content":[{"text":"Return Value","level":2,"anchor":"return-value","type":"heading"},{"inlineContent":[{"type":"text","text":"The index of the first element in the reordered collection"},{"text":" ","type":"text"},{"text":"that matches ","type":"text"},{"code":"belongsInSecondPartition","type":"codeVoice"},{"text":". If no elements in the","type":"text"},{"type":"text","text":" "},{"text":"collection match ","type":"text"},{"type":"codeVoice","code":"belongsInSecondPartition"},{"type":"text","text":", the returned index is"},{"type":"text","text":" "},{"text":"equal to the collection’s ","type":"text"},{"type":"codeVoice","code":"endIndex"},{"type":"text","text":"."}],"type":"paragraph"}]},{"content":[{"level":2,"anchor":"discussion","text":"Discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"After partitioning a collection, there is a pivot index "},{"code":"p","type":"codeVoice"},{"type":"text","text":" where"},{"type":"text","text":" "},{"type":"text","text":"no element before "},{"type":"codeVoice","code":"p"},{"text":" satisfies the ","type":"text"},{"type":"codeVoice","code":"belongsInSecondPartition"},{"type":"text","text":" "},{"text":"predicate and every element at or after ","type":"text"},{"code":"p","type":"codeVoice"},{"type":"text","text":" satisfies"},{"text":" ","type":"text"},{"code":"belongsInSecondPartition","type":"codeVoice"},{"type":"text","text":". This operation isn’t guaranteed to be"},{"type":"text","text":" "},{"text":"stable, so the relative ordering of elements within the partitions might","type":"text"},{"type":"text","text":" "},{"text":"change.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"In the following example, an array of numbers is partitioned by a","type":"text"},{"type":"text","text":" "},{"type":"text","text":"predicate that matches elements greater than 30."}]},{"type":"codeListing","syntax":null,"code":["var numbers = [30, 40, 20, 30, 30, 60, 10]","let p = numbers.partition(by: { $0 > 30 })","\/\/ p == 5","\/\/ numbers == [30, 10, 20, 30, 30, 60, 40]"]},{"inlineContent":[{"text":"The ","type":"text"},{"type":"codeVoice","code":"numbers"},{"text":" array is now arranged in two partitions. The first","type":"text"},{"type":"text","text":" "},{"type":"text","text":"partition, "},{"code":"numbers[..<p]","type":"codeVoice"},{"text":", is made up of the elements that","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"are not greater than 30. The second partition, "},{"type":"codeVoice","code":"numbers[p...]"},{"text":",","type":"text"},{"type":"text","text":" "},{"type":"text","text":"is made up of the elements that "},{"type":"emphasis","inlineContent":[{"type":"text","text":"are"}]},{"text":" greater than 30.","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":["let first = numbers[..<p]","\/\/ first == [30, 10, 20, 30, 30]","let second = numbers[p...]","\/\/ second == [60, 40]"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Note that the order of elements in both partitions changed."},{"text":" ","type":"text"},{"text":"That is, ","type":"text"},{"code":"40","type":"codeVoice"},{"text":" appears before ","type":"text"},{"code":"60","type":"codeVoice"},{"type":"text","text":" in the original collection,"},{"text":" ","type":"text"},{"text":"but, after calling ","type":"text"},{"type":"codeVoice","code":"partition(by:)"},{"text":", ","type":"text"},{"code":"60","type":"codeVoice"},{"type":"text","text":" appears before "},{"type":"codeVoice","code":"40"},{"text":".","type":"text"}]},{"style":"note","name":"Complexity","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"O("},{"type":"emphasis","inlineContent":[{"type":"text","text":"n"}]},{"type":"text","text":"), where "},{"type":"emphasis","inlineContent":[{"type":"text","text":"n"}]},{"type":"text","text":" is the length of the collection."}]}]}],"kind":"content"}],"sections":[],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Collection/Index":{"url":"\/documentation\/compute\/collection\/index","required":true,"role":"symbol","title":"Index","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Index","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"Comparable","preciseIdentifier":"s:SL","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"A type that represents a position in the collection."}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/Index","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Bool":{"url":"\/documentation\/compute\/bool","role":"symbol","title":"Bool","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Bool","kind":"identifier"}],"abstract":[{"type":"text","text":"A value type whose instances are either "},{"type":"codeVoice","code":"true"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"false"},{"text":".","type":"text"}],"navigatorTitle":[{"text":"Bool","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bool","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence/Element":{"type":"topic","required":true,"abstract":[{"type":"text","text":"A type representing the sequence’s elements."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"symbol","url":"\/documentation\/compute\/sequence\/element","role":"symbol","title":"Element","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/ArrayTreeChildren/MutableCollection-Implementations":{"abstract":[],"title":"MutableCollection Implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArrayTreeChildren\/MutableCollection-Implementations","kind":"article","type":"topic","role":"collectionGroup","url":"\/documentation\/compute\/arraytreechildren\/mutablecollection-implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/ArrayTreeChildren/partition(by:)-5wexn":{"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArrayTreeChildren\/partition(by:)-5wexn","type":"topic","url":"\/documentation\/compute\/arraytreechildren\/partition(by:)-5wexn","title":"partition(by:)","abstract":[{"text":"Reorders the elements of the collection such that all the elements","type":"text"},{"type":"text","text":" "},{"text":"that match the given predicate are after all the elements that don’t","type":"text"},{"type":"text","text":" "},{"type":"text","text":"match."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"partition","kind":"identifier"},{"text":"(","kind":"text"},{"text":"by","kind":"externalParam"},{"kind":"text","text":": ("},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:ST7ElementQa"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"text":") ","kind":"text"},{"kind":"keyword","text":"rethrows"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Index","kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa"}],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Self","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"BidirectionalCollection","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/ArrayTreeChildren":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"ArrayTreeChildren","kind":"identifier"}],"title":"ArrayTreeChildren","navigatorTitle":[{"text":"ArrayTreeChildren","kind":"identifier"}],"type":"topic","abstract":[],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArrayTreeChildren","url":"\/documentation\/compute\/arraytreechildren","role":"symbol"}}}