{"abstract":[{"type":"text","text":"Executes a closure on the collection’s contiguous storage."}],"kind":"symbol","variants":[{"paths":["\/documentation\/compute\/arraytreechildren\/withcontiguousmutablestorageifavailable(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"mutating"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"withContiguousMutableStorageIfAvailable","kind":"identifier"},{"kind":"text","text":"<"},{"text":"R","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"body"},{"text":": (","kind":"text"},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sr","text":"UnsafeMutableBufferPointer","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableBufferPointer"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","preciseIdentifier":"s:ST7ElementQa","text":"Element","kind":"typeIdentifier"},{"kind":"text","text":">) "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"R","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"text":"R","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"name":"body","content":[{"type":"paragraph","inlineContent":[{"text":"A closure that receives an in-out","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"UnsafeMutableBufferPointer"},{"type":"text","text":" to the collection’s contiguous storage."}]}]}]},{"kind":"content","content":[{"type":"heading","anchor":"return-value","level":2,"text":"Return Value"},{"inlineContent":[{"text":"The value returned from ","type":"text"},{"type":"codeVoice","code":"body"},{"text":", unless the collection doesn’t","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"support contiguous storage, in which case the method ignores "},{"type":"codeVoice","code":"body"},{"text":" and","type":"text"},{"type":"text","text":" "},{"text":"returns ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."}],"type":"paragraph"}]},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method calls "},{"type":"codeVoice","code":"body(buffer)"},{"type":"text","text":", where "},{"type":"codeVoice","code":"buffer"},{"type":"text","text":" provides access to the"},{"text":" ","type":"text"},{"text":"contiguous mutable storage of the entire collection. If the contiguous","type":"text"},{"type":"text","text":" "},{"type":"text","text":"storage doesn’t exist, the collection creates it. If the collection"},{"type":"text","text":" "},{"type":"text","text":"doesn’t support an internal representation in the form of contiguous"},{"type":"text","text":" "},{"text":"mutable storage, this method doesn’t call ","type":"text"},{"code":"body","type":"codeVoice"},{"text":" — it immediately","type":"text"},{"type":"text","text":" "},{"text":"returns ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The optimizer can often eliminate bounds- and uniqueness-checking"},{"text":" ","type":"text"},{"type":"text","text":"within an algorithm. When that fails, however, invoking the same"},{"type":"text","text":" "},{"type":"text","text":"algorithm on the "},{"type":"codeVoice","code":"buffer"},{"type":"text","text":" argument may let you trade safety for speed."}]},{"inlineContent":[{"type":"text","text":"Always perform any necessary cleanup in the closure, because the"},{"type":"text","text":" "},{"text":"method makes no guarantees about the state of the collection if the","type":"text"},{"type":"text","text":" "},{"text":"closure throws an error. Your changes to the collection may be absent","type":"text"},{"type":"text","text":" "},{"text":"from the collection after throwing the error, because the closure could","type":"text"},{"type":"text","text":" "},{"type":"text","text":"receive a temporary copy rather than direct access to the collection’s"},{"type":"text","text":" "},{"text":"storage.","type":"text"}],"type":"paragraph"},{"name":"Warning","style":"warning","type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"Your ","type":"text"},{"code":"body","type":"codeVoice"},{"text":" closure must not replace ","type":"text"},{"code":"buffer","type":"codeVoice"},{"text":". This leads","type":"text"},{"text":" ","type":"text"},{"text":"to a crash in all implementations of this method within the standard","type":"text"},{"text":" ","type":"text"},{"text":"library.","type":"text"}]}]},{"type":"paragraph","inlineContent":[{"text":"Successive calls to this method may provide a different pointer on each","type":"text"},{"type":"text","text":" "},{"text":"call. Don’t store ","type":"text"},{"type":"codeVoice","code":"buffer"},{"text":" outside of this method.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"A "},{"type":"codeVoice","code":"Collection"},{"text":" that provides its own implementation of this method","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"must provide contiguous storage to its elements in the same order"},{"type":"text","text":" "},{"type":"text","text":"as they appear in the collection. This guarantees that it’s possible to"},{"text":" ","type":"text"},{"text":"generate contiguous mutable storage to any of its subsequences by slicing","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"buffer"},{"text":" with a range formed from the distances to the subsequence’s","type":"text"},{"type":"text","text":" "},{"code":"startIndex","type":"codeVoice"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"endIndex"},{"type":"text","text":", respectively."}]}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArrayTreeChildren\/withContiguousMutableStorageIfAvailable(_:)"},"metadata":{"symbolKind":"method","externalID":"s:SMsE39withContiguousMutableStorageIfAvailableyqd__Sgqd__Sry7ElementQzGzKXEKlF::SYNTHESIZED::s:7Compute17ArrayTreeChildrenV","modules":[{"relatedModules":["Swift"],"name":"Compute"}],"role":"symbol","title":"withContiguousMutableStorageIfAvailable(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"withContiguousMutableStorageIfAvailable","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"R"},{"kind":"text","text":">(("},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sr","text":"UnsafeMutableBufferPointer"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:ST7ElementQa"},{"text":">) ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"R"},{"kind":"text","text":") "},{"text":"rethrows","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"R","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"extendedModule":"Swift","roleHeading":"Instance Method"},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArrayTreeChildren","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArrayTreeChildren\/MutableCollection-Implementations"]]},"schemaVersion":{"minor":3,"major":0,"patch":0},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/ArrayTreeChildren/withContiguousMutableStorageIfAvailable(_:)":{"kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"withContiguousMutableStorageIfAvailable","kind":"identifier"},{"text":"<","kind":"text"},{"text":"R","kind":"genericParameter"},{"text":">((","kind":"text"},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"UnsafeMutableBufferPointer","preciseIdentifier":"s:Sr"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">) "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"R","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"R"},{"text":"?","kind":"text"}],"title":"withContiguousMutableStorageIfAvailable(_:)","type":"topic","url":"\/documentation\/compute\/arraytreechildren\/withcontiguousmutablestorageifavailable(_:)","abstract":[{"type":"text","text":"Executes a closure on the collection’s contiguous storage."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArrayTreeChildren\/withContiguousMutableStorageIfAvailable(_:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeMutableBufferPointer":{"kind":"symbol","url":"\/documentation\/compute\/unsafemutablebufferpointer","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"UnsafeMutableBufferPointer","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"UnsafeMutableBufferPointer"}],"abstract":[{"type":"text","text":"A nonowning collection interface to a buffer of mutable"},{"text":" ","type":"text"},{"text":"elements stored contiguously in memory.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableBufferPointer","title":"UnsafeMutableBufferPointer","type":"topic","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/ArrayTreeChildren":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"ArrayTreeChildren","kind":"identifier"}],"title":"ArrayTreeChildren","navigatorTitle":[{"text":"ArrayTreeChildren","kind":"identifier"}],"type":"topic","abstract":[],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArrayTreeChildren","url":"\/documentation\/compute\/arraytreechildren","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/ArrayTreeChildren/MutableCollection-Implementations":{"abstract":[],"title":"MutableCollection Implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArrayTreeChildren\/MutableCollection-Implementations","kind":"article","type":"topic","role":"collectionGroup","url":"\/documentation\/compute\/arraytreechildren\/mutablecollection-implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence/Element":{"type":"topic","required":true,"abstract":[{"type":"text","text":"A type representing the sequence’s elements."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"symbol","url":"\/documentation\/compute\/sequence\/element","role":"symbol","title":"Element","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"}}}