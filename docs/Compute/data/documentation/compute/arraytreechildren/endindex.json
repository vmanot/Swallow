{"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArrayTreeChildren","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArrayTreeChildren\/Collection-Implementations"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArrayTreeChildren\/endIndex"},"abstract":[{"type":"text","text":"The collection’s “past the end” position—that is, the position one"},{"type":"text","text":" "},{"type":"text","text":"greater than the last valid subscript argument."}],"schemaVersion":{"patch":0,"minor":3,"major":0},"kind":"symbol","metadata":{"role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"endIndex","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Compute17ArrayTreeChildrenV5Indexa","text":"Index","kind":"typeIdentifier"}],"externalID":"s:7Compute17ArrayTreeChildrenV8endIndexSivp","symbolKind":"property","roleHeading":"Instance Property","modules":[{"name":"Compute"}],"title":"endIndex","extendedModule":"Compute"},"sections":[],"variants":[{"paths":["\/documentation\/compute\/arraytreechildren\/endindex"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"endIndex","kind":"identifier"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArrayTreeChildren\/Index","kind":"typeIdentifier","text":"Index","preciseIdentifier":"s:7Compute17ArrayTreeChildrenV5Indexa"},{"kind":"text","text":" { "},{"text":"get","kind":"keyword"},{"text":" }","kind":"text"}],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"When you need a range that includes the last element of a collection, use"},{"text":" ","type":"text"},{"text":"the half-open range operator (","type":"text"},{"code":"..<","type":"codeVoice"},{"text":") with ","type":"text"},{"code":"endIndex","type":"codeVoice"},{"type":"text","text":". The "},{"type":"codeVoice","code":"..<"},{"text":" operator","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"creates a range that doesn’t include the upper bound, so it’s always"},{"text":" ","type":"text"},{"type":"text","text":"safe to use with "},{"type":"codeVoice","code":"endIndex"},{"text":". For example:","type":"text"}]},{"syntax":null,"type":"codeListing","code":["let numbers = [10, 20, 30, 40, 50]","if let index = numbers.firstIndex(of: 30) {","    print(numbers[index ..< numbers.endIndex])","}","\/\/ Prints \"[30, 40, 50]\""]},{"inlineContent":[{"text":"If the collection is empty, ","type":"text"},{"code":"endIndex","type":"codeVoice"},{"type":"text","text":" is equal to "},{"type":"codeVoice","code":"startIndex"},{"type":"text","text":"."}],"type":"paragraph"}]}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/ArrayTreeChildren/endIndex":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArrayTreeChildren\/endIndex","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"endIndex"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Compute17ArrayTreeChildrenV5Indexa","kind":"typeIdentifier","text":"Index"}],"role":"symbol","url":"\/documentation\/compute\/arraytreechildren\/endindex","abstract":[{"type":"text","text":"The collection’s “past the end” position—that is, the position one"},{"text":" ","type":"text"},{"text":"greater than the last valid subscript argument.","type":"text"}],"title":"endIndex"},"doc://com.swallow.documentation.Compute/documentation/Compute/ArrayTreeChildren/Index":{"title":"ArrayTreeChildren.Index","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArrayTreeChildren\/Index","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Index"}],"abstract":[{"text":"A type that represents a position in the collection.","type":"text"}],"url":"\/documentation\/compute\/arraytreechildren\/index","kind":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Index"}]},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/ArrayTreeChildren":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"ArrayTreeChildren","kind":"identifier"}],"title":"ArrayTreeChildren","navigatorTitle":[{"text":"ArrayTreeChildren","kind":"identifier"}],"type":"topic","abstract":[],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArrayTreeChildren","url":"\/documentation\/compute\/arraytreechildren","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/ArrayTreeChildren/Collection-Implementations":{"role":"collectionGroup","title":"Collection Implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArrayTreeChildren\/Collection-Implementations","type":"topic","url":"\/documentation\/compute\/arraytreechildren\/collection-implementations","abstract":[],"kind":"article"}}}