{"schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int32","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int32\/Words-swift.struct","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int32\/Words-swift.struct\/Sequence-Implementations"]]},"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int32\/Words-swift.struct\/flatMap(_:)-7kqh5","interfaceLanguage":"swift"},"metadata":{"externalID":"s:STsE7flatMapySay7ElementQyd__Gqd__ABQzKXEKSTRd__lF::SYNTHESIZED::s:s5Int32V5WordsV","extendedModule":"Swift","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"flatMap"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"SegmentOfResult"},{"kind":"text","text":">(("},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"SegmentOfResult","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> [","kind":"text"},{"kind":"typeIdentifier","text":"SegmentOfResult"},{"text":".","kind":"text"},{"preciseIdentifier":"s:ST7ElementQa","text":"Element","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"title":"flatMap(_:)","modules":[{"relatedModules":["Swift"],"name":"Compute"}],"role":"symbol","roleHeading":"Instance Method","symbolKind":"method"},"kind":"symbol","abstract":[{"type":"text","text":"Returns an array containing the concatenated results of calling the"},{"type":"text","text":" "},{"type":"text","text":"given transformation with each element of this sequence."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"flatMap"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"SegmentOfResult"},{"kind":"text","text":">("},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"transform","kind":"internalParam"},{"kind":"text","text":": ("},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"SegmentOfResult"},{"text":") ","kind":"text"},{"kind":"keyword","text":"rethrows"},{"text":" -> [","kind":"text"},{"kind":"typeIdentifier","text":"SegmentOfResult"},{"text":".","kind":"text"},{"text":"Element","preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element"},{"text":"] ","kind":"text"},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"SegmentOfResult"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence","text":"Sequence","kind":"typeIdentifier","preciseIdentifier":"s:ST"}]}]},{"parameters":[{"name":"transform","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A closure that accepts an element of this"},{"text":" ","type":"text"},{"text":"sequence as its argument and returns a sequence or collection.","type":"text"}]}]}],"kind":"parameters"},{"kind":"content","content":[{"text":"Return Value","type":"heading","level":2,"anchor":"return-value"},{"inlineContent":[{"type":"text","text":"The resulting flattened array."}],"type":"paragraph"}]},{"kind":"content","content":[{"anchor":"discussion","text":"Discussion","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"text":"Use this method to receive a single-level collection when your","type":"text"},{"text":" ","type":"text"},{"text":"transformation produces a sequence or collection for each element.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"In this example, note the difference in the result of using "},{"code":"map","type":"codeVoice"},{"text":" and","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"flatMap"},{"text":" with a transformation that returns an array.","type":"text"}]},{"code":["let numbers = [1, 2, 3, 4]","","let mapped = numbers.map { Array(repeating: $0, count: $0) }","\/\/ [[1], [2, 2], [3, 3, 3], [4, 4, 4, 4]]","","let flatMapped = numbers.flatMap { Array(repeating: $0, count: $0) }","\/\/ [1, 2, 2, 3, 3, 3, 4, 4, 4, 4]"],"syntax":null,"type":"codeListing"},{"inlineContent":[{"text":"In fact, ","type":"text"},{"type":"codeVoice","code":"s.flatMap(transform)"},{"type":"text","text":"  is equivalent to"},{"text":" ","type":"text"},{"code":"Array(s.map(transform).joined())","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"text":"O(","type":"text"},{"inlineContent":[{"text":"m","type":"text"}],"type":"emphasis"},{"type":"text","text":" + "},{"type":"emphasis","inlineContent":[{"type":"text","text":"n"}]},{"type":"text","text":"), where "},{"type":"emphasis","inlineContent":[{"text":"n","type":"text"}]},{"text":" is the length of this sequence","type":"text"},{"type":"text","text":" "},{"text":"and ","type":"text"},{"inlineContent":[{"type":"text","text":"m"}],"type":"emphasis"},{"type":"text","text":" is the length of the result."}]}],"name":"Complexity","type":"aside"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/int32\/words-swift.struct\/flatmap(_:)-7kqh5"]}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Int32/Words-swift.struct":{"url":"\/documentation\/compute\/int32\/words-swift.struct","navigatorTitle":[{"kind":"identifier","text":"Words"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int32\/Words-swift.struct","title":"Int32.Words","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Words","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"A type that represents the words of this integer."}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence":{"url":"\/documentation\/compute\/sequence","navigatorTitle":[{"kind":"identifier","text":"Sequence"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence","title":"Sequence","kind":"symbol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Sequence","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"A type that provides sequential, iterated access to its elements."}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Int32/Words-swift.struct/Sequence-Implementations":{"url":"\/documentation\/compute\/int32\/words-swift.struct\/sequence-implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int32\/Words-swift.struct\/Sequence-Implementations","title":"Sequence Implementations","kind":"article","role":"collectionGroup","type":"topic","abstract":[]},"doc://com.swallow.documentation.Compute/documentation/Compute/Int32/Words-swift.struct/flatMap(_:)-7kqh5":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int32\/Words-swift.struct\/flatMap(_:)-7kqh5","title":"flatMap(_:)","type":"topic","abstract":[{"type":"text","text":"Returns an array containing the concatenated results of calling the"},{"type":"text","text":" "},{"type":"text","text":"given transformation with each element of this sequence."}],"role":"symbol","kind":"symbol","url":"\/documentation\/compute\/int32\/words-swift.struct\/flatmap(_:)-7kqh5","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"flatMap"},{"text":"<","kind":"text"},{"text":"SegmentOfResult","kind":"genericParameter"},{"kind":"text","text":">(("},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"SegmentOfResult","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> ["},{"text":"SegmentOfResult","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier"},{"kind":"text","text":"]"}]},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int32":{"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Int32","kind":"identifier"}],"abstract":[{"text":"A 32-bit signed integer value","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"type."}],"kind":"symbol","navigatorTitle":[{"text":"Int32","kind":"identifier"}],"type":"topic","url":"\/documentation\/compute\/int32","title":"Int32","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int32"},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence/Element":{"type":"topic","required":true,"abstract":[{"type":"text","text":"A type representing the sequenceâ€™s elements."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"symbol","url":"\/documentation\/compute\/sequence\/element","role":"symbol","title":"Element","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"identifier"}]}}}