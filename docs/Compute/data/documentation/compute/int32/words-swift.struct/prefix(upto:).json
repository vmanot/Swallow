{"metadata":{"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"prefix","kind":"identifier"},{"kind":"text","text":"("},{"text":"upTo","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Index","preciseIdentifier":"s:Sl5IndexQa","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"SubSequence","preciseIdentifier":"s:Sl11SubSequenceQa","kind":"typeIdentifier"}],"externalID":"s:SlsE6prefix4upTo11SubSequenceQz5IndexQz_tF::SYNTHESIZED::s:s5Int32V5WordsV","modules":[{"relatedModules":["Swift"],"name":"Compute"}],"extendedModule":"Swift","title":"prefix(upTo:)","symbolKind":"method","roleHeading":"Instance Method"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"prefix","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"upTo"},{"text":" ","kind":"text"},{"text":"end","kind":"internalParam"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/Index","text":"Index","kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/SubSequence","kind":"typeIdentifier","text":"SubSequence","preciseIdentifier":"s:Sl11SubSequenceQa"}],"languages":["swift"]}]},{"parameters":[{"name":"end","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The “past the end” index of the resulting subsequence."},{"text":" ","type":"text"},{"type":"codeVoice","code":"end"},{"type":"text","text":" must be a valid index of the collection."}]}]}],"kind":"parameters"},{"content":[{"level":2,"text":"Return Value","type":"heading","anchor":"return-value"},{"inlineContent":[{"type":"text","text":"A subsequence up to, but not including, the "},{"type":"codeVoice","code":"end"},{"type":"text","text":" position."}],"type":"paragraph"}],"kind":"content"},{"content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"inlineContent":[{"text":"The resulting subsequence ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"does not include"}]},{"type":"text","text":" the element at the position"},{"text":" ","type":"text"},{"code":"end","type":"codeVoice"},{"text":". The following example searches for the index of the number ","type":"text"},{"code":"40","type":"codeVoice"},{"text":" ","type":"text"},{"type":"text","text":"in an array of integers, and then prints the prefix of the array up to,"},{"type":"text","text":" "},{"type":"text","text":"but not including, that index:"}],"type":"paragraph"},{"type":"codeListing","code":["let numbers = [10, 20, 30, 40, 50, 60]","if let i = numbers.firstIndex(of: 40) {","    print(numbers.prefix(upTo: i))","}","\/\/ Prints \"[10, 20, 30]\""],"syntax":null},{"type":"paragraph","inlineContent":[{"text":"Passing the collection’s starting index as the ","type":"text"},{"code":"end","type":"codeVoice"},{"type":"text","text":" parameter results in"},{"type":"text","text":" "},{"type":"text","text":"an empty subsequence."}]},{"code":["print(numbers.prefix(upTo: numbers.startIndex))","\/\/ Prints \"[]\""],"type":"codeListing","syntax":null},{"type":"paragraph","inlineContent":[{"type":"text","text":"Using the "},{"code":"prefix(upTo:)","type":"codeVoice"},{"type":"text","text":" method is equivalent to using a partial"},{"text":" ","type":"text"},{"text":"half-open range as the collection’s subscript. The subscript notation is","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"preferred over "},{"type":"codeVoice","code":"prefix(upTo:)"},{"text":".","type":"text"}]},{"code":["if let i = numbers.firstIndex(of: 40) {","    print(numbers[..<i])","}","\/\/ Prints \"[10, 20, 30]\""],"syntax":null,"type":"codeListing"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"O(1)"}]}],"style":"note","type":"aside","name":"Complexity"}],"kind":"content"}],"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/int32\/words-swift.struct\/prefix(upto:)"]}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int32","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int32\/Words-swift.struct","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int32\/Words-swift.struct\/Collection-Implementations"]]},"sections":[],"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int32\/Words-swift.struct\/prefix(upTo:)","interfaceLanguage":"swift"},"abstract":[{"text":"Returns a subsequence from the start of the collection up to, but not","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"including, the specified position."}],"schemaVersion":{"patch":0,"major":0,"minor":3},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Collection/Index":{"url":"\/documentation\/compute\/collection\/index","required":true,"role":"symbol","title":"Index","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Index","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"Comparable","preciseIdentifier":"s:SL","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"A type that represents a position in the collection."}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/Index","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int32/Words-swift.struct":{"url":"\/documentation\/compute\/int32\/words-swift.struct","navigatorTitle":[{"kind":"identifier","text":"Words"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int32\/Words-swift.struct","title":"Int32.Words","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Words","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"A type that represents the words of this integer."}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Collection/SubSequence":{"url":"\/documentation\/compute\/collection\/subsequence","title":"SubSequence","abstract":[{"type":"text","text":"A collection representing a contiguous subrange of this collection’s"},{"type":"text","text":" "},{"text":"elements. The subsequence shares indices with the original collection.","type":"text"}],"type":"topic","kind":"symbol","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SubSequence"},{"kind":"text","text":" : "},{"text":"Collection","preciseIdentifier":"s:Sl","kind":"typeIdentifier"},{"text":" = ","kind":"text"},{"text":"Slice","preciseIdentifier":"s:s5SliceV","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":">","kind":"text"}],"required":true,"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/SubSequence"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int32/Words-swift.struct/Collection-Implementations":{"kind":"article","type":"topic","title":"Collection Implementations","abstract":[],"url":"\/documentation\/compute\/int32\/words-swift.struct\/collection-implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int32\/Words-swift.struct\/Collection-Implementations","role":"collectionGroup"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int32":{"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Int32","kind":"identifier"}],"abstract":[{"text":"A 32-bit signed integer value","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"type."}],"kind":"symbol","navigatorTitle":[{"text":"Int32","kind":"identifier"}],"type":"topic","url":"\/documentation\/compute\/int32","title":"Int32","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int32"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int32/Words-swift.struct/prefix(upTo:)":{"kind":"symbol","url":"\/documentation\/compute\/int32\/words-swift.struct\/prefix(upto:)","abstract":[{"text":"Returns a subsequence from the start of the collection up to, but not","type":"text"},{"type":"text","text":" "},{"type":"text","text":"including, the specified position."}],"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int32\/Words-swift.struct\/prefix(upTo:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"prefix","kind":"identifier"},{"text":"(","kind":"text"},{"text":"upTo","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Index","kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sl11SubSequenceQa","text":"SubSequence"}],"type":"topic","title":"prefix(upTo:)"}}}