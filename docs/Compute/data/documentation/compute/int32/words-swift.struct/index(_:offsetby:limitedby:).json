{"kind":"symbol","metadata":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"index"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Index","preciseIdentifier":"s:Sl5IndexQa"},{"kind":"text","text":", "},{"kind":"externalParam","text":"offsetBy"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"text":", ","kind":"text"},{"text":"limitedBy","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Index","kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:Sl5IndexQa","text":"Index","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"roleHeading":"Instance Method","externalID":"s:SksE5index_8offsetBy07limitedC05IndexQzSgAE_SiAEtF::SYNTHESIZED::s:s5Int32V5WordsV","modules":[{"relatedModules":["Swift"],"name":"Compute"}],"symbolKind":"method","title":"index(_:offsetBy:limitedBy:)","extendedModule":"Swift","role":"symbol"},"abstract":[{"type":"text","text":"Returns an index that is the specified distance from the given index,"},{"text":" ","type":"text"},{"text":"unless that distance is beyond a given limiting index.","type":"text"}],"sections":[],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int32","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int32\/Words-swift.struct","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int32\/Words-swift.struct\/RandomAccessCollection-Implementations"]]},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"index"},{"kind":"text","text":"("},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"i"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Index","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/Index","preciseIdentifier":"s:Sl5IndexQa"},{"kind":"text","text":", "},{"kind":"externalParam","text":"offsetBy"},{"kind":"text","text":" "},{"kind":"internalParam","text":"distance"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":", "},{"kind":"externalParam","text":"limitedBy"},{"text":" ","kind":"text"},{"text":"limit","kind":"internalParam"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/Index","kind":"typeIdentifier","text":"Index","preciseIdentifier":"s:Sl5IndexQa"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"Index","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/Index","kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa"},{"text":"?","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"i","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A valid index of the array."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"The distance to offset ","type":"text"},{"code":"i","type":"codeVoice"},{"type":"text","text":"."}]}],"name":"distance"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A valid index of the collection to use as a limit. If"},{"text":" ","type":"text"},{"code":"distance > 0","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"limit"},{"text":" should be greater than ","type":"text"},{"type":"codeVoice","code":"i"},{"type":"text","text":" to have any"},{"type":"text","text":" "},{"text":"effect. Likewise, if ","type":"text"},{"type":"codeVoice","code":"distance < 0"},{"type":"text","text":", "},{"code":"limit","type":"codeVoice"},{"text":" should be less than ","type":"text"},{"type":"codeVoice","code":"i"},{"text":" ","type":"text"},{"type":"text","text":"to have any effect."}]}],"name":"limit"}]},{"kind":"content","content":[{"level":2,"type":"heading","text":"Return Value","anchor":"return-value"},{"inlineContent":[{"type":"text","text":"An index offset by "},{"type":"codeVoice","code":"distance"},{"type":"text","text":" from the index "},{"type":"codeVoice","code":"i"},{"text":", unless that","type":"text"},{"type":"text","text":" "},{"type":"text","text":"index would be beyond "},{"type":"codeVoice","code":"limit"},{"text":" in the direction of movement. In that","type":"text"},{"type":"text","text":" "},{"text":"case, the method returns ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}]},{"kind":"content","content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"inlineContent":[{"text":"The following example obtains an index advanced four positions from an","type":"text"},{"type":"text","text":" "},{"type":"text","text":"array’s starting index and then prints the element at that position. The"},{"type":"text","text":" "},{"text":"operation doesn’t require going beyond the limiting ","type":"text"},{"type":"codeVoice","code":"numbers.endIndex"},{"text":" ","type":"text"},{"text":"value, so it succeeds.","type":"text"}],"type":"paragraph"},{"syntax":null,"code":["let numbers = [10, 20, 30, 40, 50]","let i = numbers.index(numbers.startIndex, offsetBy: 4)","print(numbers[i])","\/\/ Prints \"50\""],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The next example attempts to retrieve an index ten positions from"},{"text":" ","type":"text"},{"type":"codeVoice","code":"numbers.startIndex"},{"type":"text","text":", but fails, because that distance is beyond the"},{"type":"text","text":" "},{"text":"index passed as ","type":"text"},{"code":"limit","type":"codeVoice"},{"text":".","type":"text"}]},{"type":"codeListing","syntax":null,"code":["let j = numbers.index(numbers.startIndex,","                      offsetBy: 10,","                      limitedBy: numbers.endIndex)","print(j)","\/\/ Prints \"nil\""]},{"inlineContent":[{"type":"text","text":"The value passed as "},{"type":"codeVoice","code":"distance"},{"type":"text","text":" must not offset "},{"code":"i","type":"codeVoice"},{"text":" beyond the bounds of","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the collection, unless the index passed as "},{"type":"codeVoice","code":"limit"},{"type":"text","text":" prevents offsetting"},{"type":"text","text":" "},{"type":"text","text":"beyond those bounds."}],"type":"paragraph"},{"content":[{"inlineContent":[{"type":"text","text":"O(1)"}],"type":"paragraph"}],"style":"note","name":"Complexity","type":"aside"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/int32\/words-swift.struct\/index(_:offsetby:limitedby:)"]}],"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int32\/Words-swift.struct\/index(_:offsetBy:limitedBy:)","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"patch":0,"major":0},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Collection/Index":{"url":"\/documentation\/compute\/collection\/index","required":true,"role":"symbol","title":"Index","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Index","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"Comparable","preciseIdentifier":"s:SL","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"A type that represents a position in the collection."}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/Index","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int32/Words-swift.struct/index(_:offsetBy:limitedBy:)":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int32\/Words-swift.struct\/index(_:offsetBy:limitedBy:)","title":"index(_:offsetBy:limitedBy:)","role":"symbol","url":"\/documentation\/compute\/int32\/words-swift.struct\/index(_:offsetby:limitedby:)","type":"topic","abstract":[{"type":"text","text":"Returns an index that is the specified distance from the given index,"},{"text":" ","type":"text"},{"text":"unless that distance is beyond a given limiting index.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"index"},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Index","kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa"},{"text":", ","kind":"text"},{"text":"offsetBy","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"limitedBy"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:Sl5IndexQa","text":"Index","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa","text":"Index"},{"kind":"text","text":"?"}],"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int32":{"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Int32","kind":"identifier"}],"abstract":[{"text":"A 32-bit signed integer value","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"type."}],"kind":"symbol","navigatorTitle":[{"text":"Int32","kind":"identifier"}],"type":"topic","url":"\/documentation\/compute\/int32","title":"Int32","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int32"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int32/Words-swift.struct/RandomAccessCollection-Implementations":{"kind":"article","abstract":[],"url":"\/documentation\/compute\/int32\/words-swift.struct\/randomaccesscollection-implementations","role":"collectionGroup","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int32\/Words-swift.struct\/RandomAccessCollection-Implementations","type":"topic","title":"RandomAccessCollection Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int32/Words-swift.struct":{"url":"\/documentation\/compute\/int32\/words-swift.struct","navigatorTitle":[{"kind":"identifier","text":"Words"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int32\/Words-swift.struct","title":"Int32.Words","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Words","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"A type that represents the words of this integer."}]},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","abstract":[{"type":"text","text":"A signed integer value type."}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Int","kind":"identifier"}],"navigatorTitle":[{"text":"Int","kind":"identifier"}],"title":"Int","url":"\/documentation\/compute\/int","kind":"symbol"}}}