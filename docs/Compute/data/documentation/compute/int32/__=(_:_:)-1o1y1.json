{"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int32","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int32\/BinaryInteger-Implementations"]]},"metadata":{"modules":[{"relatedModules":["Swift"],"name":"Compute"}],"extendedModule":"Swift","roleHeading":"Operator","externalID":"s:s17FixedWidthIntegerPsE3ggeoiyyxz_qd__tSzRd__lFZ::SYNTHESIZED::s:s5Int32V","title":">>=(_:_:)","symbolKind":"op","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":">>="},{"kind":"text","text":" "},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Other"},{"kind":"text","text":">("},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Other"},{"text":")","kind":"text"}]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int32\/__=(_:_:)-1o1y1"},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":">>="},{"kind":"text","text":" "},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Other"},{"kind":"text","text":">("},{"kind":"internalParam","text":"lhs"},{"text":": ","kind":"text"},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"internalParam","text":"rhs"},{"text":": ","kind":"text"},{"text":"Other","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Other"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryInteger","text":"BinaryInteger","preciseIdentifier":"s:Sz"}]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"text":"The value to shift.","type":"text"}],"type":"paragraph"}],"name":"lhs"},{"content":[{"inlineContent":[{"text":"The number of bits to shift ","type":"text"},{"type":"codeVoice","code":"lhs"},{"type":"text","text":" to the right."}],"type":"paragraph"}],"name":"rhs"}]},{"content":[{"level":2,"text":"Discussion","anchor":"discussion","type":"heading"},{"inlineContent":[{"text":"The ","type":"text"},{"type":"codeVoice","code":">>="},{"text":" operator performs a ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"smart shift","type":"text"}]},{"type":"text","text":", which defines a result for a"},{"text":" ","type":"text"},{"text":"shift of any value.","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Using a negative value for "},{"code":"rhs","type":"codeVoice"},{"type":"text","text":" performs a left shift using"},{"type":"text","text":" "},{"type":"codeVoice","code":"abs(rhs)"},{"type":"text","text":"."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Using a value for ","type":"text"},{"code":"rhs","type":"codeVoice"},{"type":"text","text":" that is greater than or equal to the bit width"},{"type":"text","text":" "},{"type":"text","text":"of "},{"type":"codeVoice","code":"lhs"},{"text":" is an ","type":"text"},{"inlineContent":[{"type":"text","text":"overshift"}],"type":"emphasis"},{"text":". An overshift results in ","type":"text"},{"code":"-1","type":"codeVoice"},{"type":"text","text":" for a"},{"text":" ","type":"text"},{"text":"negative value of ","type":"text"},{"type":"codeVoice","code":"lhs"},{"text":" or ","type":"text"},{"code":"0","type":"codeVoice"},{"text":" for a nonnegative value.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Using any other value for ","type":"text"},{"type":"codeVoice","code":"rhs"},{"type":"text","text":" performs a right shift on "},{"type":"codeVoice","code":"lhs"},{"type":"text","text":" by that"},{"type":"text","text":" "},{"text":"amount.","type":"text"}]}]}]},{"type":"paragraph","inlineContent":[{"text":"The following example defines ","type":"text"},{"code":"x","type":"codeVoice"},{"text":" as an instance of ","type":"text"},{"type":"codeVoice","code":"UInt8"},{"type":"text","text":", an 8-bit,"},{"type":"text","text":" "},{"type":"text","text":"unsigned integer type. If you use "},{"type":"codeVoice","code":"2"},{"type":"text","text":" as the right-hand-side value in an"},{"text":" ","type":"text"},{"type":"text","text":"operation on "},{"type":"codeVoice","code":"x"},{"type":"text","text":", the value is shifted right by two bits."}]},{"code":["var x: UInt8 = 30                 \/\/ 0b00011110","x >>= 2","\/\/ x == 7                         \/\/ 0b00000111"],"type":"codeListing","syntax":null},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you use "},{"type":"codeVoice","code":"11"},{"text":" as ","type":"text"},{"code":"rhs","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"x"},{"text":" is overshifted such that all of its bits","type":"text"},{"type":"text","text":" "},{"type":"text","text":"are set to zero."}]},{"type":"codeListing","code":["var y: UInt8 = 30                 \/\/ 0b00011110","y >>= 11","\/\/ y == 0                         \/\/ 0b00000000"],"syntax":null},{"inlineContent":[{"type":"text","text":"Using a negative value as "},{"code":"rhs","type":"codeVoice"},{"type":"text","text":" is the same as performing a left shift"},{"text":" ","type":"text"},{"text":"using ","type":"text"},{"type":"codeVoice","code":"abs(rhs)"},{"text":".","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":["var a: UInt8 = 30                 \/\/ 0b00011110","a >>= -3","\/\/ a == 240                       \/\/ 0b11110000","","var b: UInt8 = 30                 \/\/ 0b00011110","b <<= 3","\/\/ b == 240                       \/\/ 0b11110000"],"syntax":null},{"type":"paragraph","inlineContent":[{"text":"Right shift operations on negative values “fill in” the high bits with","type":"text"},{"type":"text","text":" "},{"type":"text","text":"ones instead of zeros."}]},{"syntax":null,"type":"codeListing","code":["var q: Int8 = -30                 \/\/ 0b11100010","q >>= 2","\/\/ q == -8                        \/\/ 0b11111000","","var r: Int8 = -30                 \/\/ 0b11100010","r >>= 11","\/\/ r == -1                        \/\/ 0b11111111"]}],"kind":"content"}],"abstract":[{"text":"Stores the result of shifting a value’s binary representation the","type":"text"},{"type":"text","text":" "},{"text":"specified number of digits to the right in the left-hand-side variable.","type":"text"}],"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/int32\/__=(_:_:)-1o1y1"]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int32":{"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Int32","kind":"identifier"}],"abstract":[{"text":"A 32-bit signed integer value","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"type."}],"kind":"symbol","navigatorTitle":[{"text":"Int32","kind":"identifier"}],"type":"topic","url":"\/documentation\/compute\/int32","title":"Int32","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int32"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int32/BinaryInteger-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int32\/BinaryInteger-Implementations","url":"\/documentation\/compute\/int32\/binaryinteger-implementations","abstract":[],"type":"topic","title":"BinaryInteger Implementations","role":"collectionGroup","kind":"article"},"doc://com.swallow.documentation.Compute/documentation/Compute/BinaryInteger":{"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"BinaryInteger"}],"navigatorTitle":[{"kind":"identifier","text":"BinaryInteger"}],"url":"\/documentation\/compute\/binaryinteger","type":"topic","abstract":[{"type":"text","text":"An integer type with a binary representation."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryInteger","title":"BinaryInteger","kind":"symbol","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int32/__=(_:_:)-1o1y1":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int32\/__=(_:_:)-1o1y1","role":"symbol","type":"topic","title":">>=(_:_:)","url":"\/documentation\/compute\/int32\/__=(_:_:)-1o1y1","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":">>="},{"text":" ","kind":"text"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Other"},{"text":">(","kind":"text"},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Other","kind":"typeIdentifier"},{"text":")","kind":"text"}],"kind":"symbol","abstract":[{"type":"text","text":"Stores the result of shifting a value’s binary representation the"},{"type":"text","text":" "},{"type":"text","text":"specified number of digits to the right in the left-hand-side variable."}]}}}