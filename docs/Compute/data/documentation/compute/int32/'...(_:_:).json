{"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","sections":[],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"...","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"internalParam","text":"minimum"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"internalParam","text":"maximum"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"ClosedRange","kind":"typeIdentifier","preciseIdentifier":"s:SN","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ClosedRange"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"minimum","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The lower bound for the range."}]}]},{"name":"maximum","content":[{"inlineContent":[{"type":"text","text":"The upper bound for the range."}],"type":"paragraph"}]}]},{"content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Use the closed range operator ("},{"code":"...","type":"codeVoice"},{"type":"text","text":") to create a closed range of any type"},{"text":" ","type":"text"},{"type":"text","text":"that conforms to the "},{"type":"codeVoice","code":"Comparable"},{"text":" protocol. This example creates a","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"ClosedRange<Character>"},{"text":" from “a” up to, and including, “z”.","type":"text"}]},{"type":"codeListing","syntax":null,"code":["let lowercase = \"a\"...\"z\"","print(lowercase.contains(\"z\"))","\/\/ Prints \"true\""]},{"name":"Precondition","type":"aside","style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"code":"minimum <= maximum","type":"codeVoice"},{"type":"text","text":"."}]}]}],"kind":"content"}],"abstract":[{"type":"text","text":"Returns a closed range that contains both of its bounds."}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int32\/...(_:_:)"},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int32","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int32\/Comparable-Implementations"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/int32\/'...(_:_:)"]}],"metadata":{"roleHeading":"Operator","externalID":"s:SLsE3zzzoiySNyxGx_xtFZ::SYNTHESIZED::s:s5Int32V","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"...","kind":"identifier"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SN","text":"ClosedRange"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"role":"symbol","extendedModule":"Swift","title":"...(_:_:)","symbolKind":"op","modules":[{"name":"Compute","relatedModules":["Swift"]}]},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int32/Comparable-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int32\/Comparable-Implementations","kind":"article","abstract":[],"title":"Comparable Implementations","role":"collectionGroup","url":"\/documentation\/compute\/int32\/comparable-implementations","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int32":{"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Int32","kind":"identifier"}],"abstract":[{"text":"A 32-bit signed integer value","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"type."}],"kind":"symbol","navigatorTitle":[{"text":"Int32","kind":"identifier"}],"type":"topic","url":"\/documentation\/compute\/int32","title":"Int32","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int32"},"doc://com.swallow.documentation.Compute/documentation/Compute/ClosedRange":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ClosedRange","kind":"identifier"}],"role":"symbol","title":"ClosedRange","url":"\/documentation\/compute\/closedrange","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ClosedRange","abstract":[{"text":"An interval from a lower bound up to, and including, an upper bound.","type":"text"}],"type":"topic","navigatorTitle":[{"text":"ClosedRange","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Int32/...(_:_:)":{"kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"...","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"ClosedRange","preciseIdentifier":"s:SN","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":">","kind":"text"}],"abstract":[{"text":"Returns a closed range that contains both of its bounds.","type":"text"}],"url":"\/documentation\/compute\/int32\/'...(_:_:)","title":"...(_:_:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int32\/...(_:_:)","type":"topic","role":"symbol"}}}