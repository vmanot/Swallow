{"metadata":{"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"+","kind":"identifier"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"text":"Int32","preciseIdentifier":"s:s5Int32V","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Int32","preciseIdentifier":"s:s5Int32V","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Int32","preciseIdentifier":"s:s5Int32V"}],"role":"symbol","extendedModule":"Swift","modules":[{"relatedModules":["Swift"],"name":"Compute"}],"symbolKind":"op","roleHeading":"Operator","title":"+(_:_:)","externalID":"s:s5Int32V1poiyA2B_ABtFZ"},"variants":[{"paths":["\/documentation\/compute\/int32\/+(_:_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"text":"Adds two values and produces their sum.","type":"text"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int32","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int32\/BinaryInteger-Implementations"]]},"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int32\/+(_:_:)","interfaceLanguage":"swift"},"sections":[],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"+"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"text":"lhs","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Int32","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int32","preciseIdentifier":"s:s5Int32V"},{"kind":"text","text":", "},{"text":"rhs","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Int32","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int32","preciseIdentifier":"s:s5Int32V"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int32","text":"Int32","preciseIdentifier":"s:s5Int32V"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"The first value to add."}],"type":"paragraph"}],"name":"lhs"},{"content":[{"inlineContent":[{"type":"text","text":"The second value to add."}],"type":"paragraph"}],"name":"rhs"}]},{"kind":"content","content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"inlineContent":[{"type":"text","text":"The addition operator ("},{"type":"codeVoice","code":"+"},{"type":"text","text":") calculates the sum of its two arguments. For"},{"type":"text","text":" "},{"text":"example:","type":"text"}],"type":"paragraph"},{"code":["1 + 2                   \/\/ 3","-10 + 15                \/\/ 5","-15 + -5                \/\/ -20","21.5 + 3.25             \/\/ 24.75"],"type":"codeListing","syntax":null},{"inlineContent":[{"text":"You cannot use ","type":"text"},{"type":"codeVoice","code":"+"},{"type":"text","text":" with arguments of different types. To add values of"},{"type":"text","text":" "},{"type":"text","text":"different types, convert one of the values to the other value’s type."}],"type":"paragraph"},{"type":"codeListing","code":["let x: Int8 = 21","let y: Int = 1000000","Int(x) + y              \/\/ 1000021"],"syntax":null},{"type":"paragraph","inlineContent":[{"text":"The sum of the two arguments must be representable in the arguments’","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"type. In the following example, the result of "},{"type":"codeVoice","code":"21 + 120"},{"type":"text","text":" is greater than"},{"type":"text","text":" "},{"text":"the maximum representable ","type":"text"},{"code":"Int8","type":"codeVoice"},{"type":"text","text":" value:"}]},{"type":"codeListing","syntax":null,"code":["x + 120                 \/\/ Overflow error"]},{"style":"note","name":"Note","content":[{"inlineContent":[{"text":"Overflow checking is not performed in ","type":"text"},{"code":"-Ounchecked","type":"codeVoice"},{"type":"text","text":" builds."}],"type":"paragraph"}],"type":"aside"},{"inlineContent":[{"type":"text","text":"If you want to opt out of overflow checking and wrap the result in case"},{"type":"text","text":" "},{"text":"of any overflow, use the overflow addition operator (","type":"text"},{"code":"&+","type":"codeVoice"},{"type":"text","text":")."}],"type":"paragraph"},{"syntax":null,"code":["x &+ 120                \/\/ -115"],"type":"codeListing"}]}],"kind":"symbol","references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Int32/BinaryInteger-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int32\/BinaryInteger-Implementations","url":"\/documentation\/compute\/int32\/binaryinteger-implementations","abstract":[],"type":"topic","title":"BinaryInteger Implementations","role":"collectionGroup","kind":"article"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int32/+(_:_:)":{"abstract":[{"text":"Adds two values and produces their sum.","type":"text"}],"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"+","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"Int32","kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V"},{"text":", ","kind":"text"},{"text":"Int32","kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Int32","preciseIdentifier":"s:s5Int32V"}],"url":"\/documentation\/compute\/int32\/+(_:_:)","title":"+(_:_:)","role":"symbol","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int32\/+(_:_:)","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int32":{"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Int32","kind":"identifier"}],"abstract":[{"text":"A 32-bit signed integer value","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"type."}],"kind":"symbol","navigatorTitle":[{"text":"Int32","kind":"identifier"}],"type":"topic","url":"\/documentation\/compute\/int32","title":"Int32","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int32"}}}