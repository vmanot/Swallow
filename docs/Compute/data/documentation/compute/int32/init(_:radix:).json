{"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"init","kind":"keyword"},{"text":"?<","kind":"text"},{"kind":"genericParameter","text":"S"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"text":"text","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":", "},{"kind":"externalParam","text":"radix"},{"kind":"text","text":": "},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":" = 10) ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:Sy","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/StringProtocol","kind":"typeIdentifier","text":"StringProtocol"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"name":"text","content":[{"type":"paragraph","inlineContent":[{"text":"The ASCII representation of a number in the radix passed as","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"radix"},{"text":".","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"The radix, or base, to use for converting ","type":"text"},{"type":"codeVoice","code":"text"},{"type":"text","text":" to an integer"},{"type":"text","text":" "},{"type":"text","text":"value. "},{"type":"codeVoice","code":"radix"},{"type":"text","text":" must be in the range "},{"type":"codeVoice","code":"2...36"},{"text":". The default is 10.","type":"text"}],"type":"paragraph"}],"name":"radix"}]},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"The string passed as "},{"code":"text","type":"codeVoice"},{"type":"text","text":" may begin with a plus or minus sign character"},{"type":"text","text":" "},{"type":"text","text":"("},{"code":"+","type":"codeVoice"},{"type":"text","text":" or "},{"code":"-","type":"codeVoice"},{"text":"), followed by one or more numeric digits (","type":"text"},{"code":"0-9","type":"codeVoice"},{"text":") or letters","type":"text"},{"type":"text","text":" "},{"type":"text","text":"("},{"code":"a-z","type":"codeVoice"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"A-Z"},{"type":"text","text":"). Parsing of the string is case insensitive."}]},{"syntax":null,"type":"codeListing","code":["let x = Int(\"123\")","\/\/ x == 123","","let y = Int(\"-123\", radix: 8)","\/\/ y == -83","let y = Int(\"+123\", radix: 8)","\/\/ y == +83","","let z = Int(\"07b\", radix: 16)","\/\/ z == 123"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If "},{"type":"codeVoice","code":"text"},{"type":"text","text":" is in an invalid format or contains characters that are out of"},{"text":" ","type":"text"},{"text":"bounds for the given ","type":"text"},{"type":"codeVoice","code":"radix"},{"type":"text","text":", or if the value it denotes in the given"},{"type":"text","text":" "},{"type":"codeVoice","code":"radix"},{"type":"text","text":" is not representable, the result is "},{"code":"nil","type":"codeVoice"},{"type":"text","text":". For example, the"},{"text":" ","type":"text"},{"type":"text","text":"following conversions result in "},{"type":"codeVoice","code":"nil"},{"type":"text","text":":"}]},{"code":["Int(\" 100\")                       \/\/ Includes whitespace","Int(\"21-50\")                      \/\/ Invalid format","Int(\"ff6600\")                     \/\/ Characters out of bounds","Int(\"zzzzzzzzzzzzz\", radix: 36)   \/\/ Out of range"],"type":"codeListing","syntax":null}]}],"abstract":[{"text":"Creates a new integer value from the given string and radix.","type":"text"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int32\/init(_:radix:)"},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int32","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int32\/FixedWidthInteger-Implementations"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/int32\/init(_:radix:)"]}],"metadata":{"modules":[{"name":"Compute","relatedModules":["Swift"]}],"roleHeading":"Initializer","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"?<"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"text":"S","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"radix","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"kind":"text","text":")"}],"externalID":"s:s17FixedWidthIntegerPsE_5radixxSgqd___SitcSyRd__lufc::SYNTHESIZED::s:s5Int32V","extendedModule":"Swift","symbolKind":"init","role":"symbol","title":"init(_:radix:)"},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int32/init(_:radix:)":{"abstract":[{"type":"text","text":"Creates a new integer value from the given string and radix."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int32\/init(_:radix:)","url":"\/documentation\/compute\/int32\/init(_:radix:)","title":"init(_:radix:)","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"?<"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"S"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"radix"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"kind":"text","text":")"}],"kind":"symbol","type":"topic","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int32":{"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Int32","kind":"identifier"}],"abstract":[{"text":"A 32-bit signed integer value","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"type."}],"kind":"symbol","navigatorTitle":[{"text":"Int32","kind":"identifier"}],"type":"topic","url":"\/documentation\/compute\/int32","title":"Int32","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int32"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","abstract":[{"type":"text","text":"A signed integer value type."}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Int","kind":"identifier"}],"navigatorTitle":[{"text":"Int","kind":"identifier"}],"title":"Int","url":"\/documentation\/compute\/int","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/StringProtocol":{"url":"\/documentation\/compute\/stringprotocol","role":"symbol","abstract":[{"type":"text","text":"A type that can represent a string as a collection of characters."}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/StringProtocol","title":"StringProtocol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StringProtocol","kind":"identifier"}],"navigatorTitle":[{"text":"StringProtocol","kind":"identifier"}],"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int32/FixedWidthInteger-Implementations":{"role":"collectionGroup","type":"topic","title":"FixedWidthInteger Implementations","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int32\/FixedWidthInteger-Implementations","kind":"article","url":"\/documentation\/compute\/int32\/fixedwidthinteger-implementations"}}}