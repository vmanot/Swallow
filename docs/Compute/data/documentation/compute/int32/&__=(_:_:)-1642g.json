{"schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int32\/&__=(_:_:)-1642g"},"abstract":[{"type":"text","text":"Returns the result of shifting a value’s binary representation the"},{"type":"text","text":" "},{"text":"specified number of digits to the left, masking the shift amount to the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"type’s bit width, and stores the result in the left-hand-side variable."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/int32\/&__=(_:_:)-1642g"]}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int32","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int32\/FixedWidthInteger-Implementations"]]},"metadata":{"role":"symbol","roleHeading":"Operator","title":"&<<=(_:_:)","modules":[{"name":"Compute","relatedModules":["Swift"]}],"externalID":"s:s17FixedWidthIntegerPsE4alleoiyyxz_qd__tSzRd__lFZ::SYNTHESIZED::s:s5Int32V","extendedModule":"Swift","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"&<<=","kind":"identifier"},{"kind":"text","text":" "},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Other"},{"text":">(","kind":"text"},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"text":"Other","kind":"typeIdentifier"},{"text":")","kind":"text"}],"symbolKind":"op"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"&<<=","kind":"identifier"},{"kind":"text","text":" "},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Other"},{"kind":"text","text":">("},{"kind":"internalParam","text":"lhs"},{"kind":"text","text":": "},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"internalParam","text":"rhs"},{"text":": ","kind":"text"},{"text":"Other","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Other"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"BinaryInteger","preciseIdentifier":"s:Sz","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryInteger"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The value to shift.","type":"text"}]}],"name":"lhs"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The number of bits to shift "},{"code":"lhs","type":"codeVoice"},{"text":" to the left. If ","type":"text"},{"type":"codeVoice","code":"rhs"},{"text":" is","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"outside the range "},{"type":"codeVoice","code":"0..<lhs.bitWidth"},{"type":"text","text":", it is masked to produce a"},{"type":"text","text":" "},{"type":"text","text":"value within that range."}]}],"name":"rhs"}]},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"The "},{"code":"&<<=","type":"codeVoice"},{"type":"text","text":" operator performs a "},{"inlineContent":[{"type":"text","text":"masking shift"}],"type":"emphasis"},{"text":", where the value used as","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"rhs"},{"type":"text","text":" is masked to produce a value in the range "},{"code":"0..<lhs.bitWidth","type":"codeVoice"},{"type":"text","text":". The"},{"type":"text","text":" "},{"type":"text","text":"shift is performed using this masked value."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"The following example defines ","type":"text"},{"type":"codeVoice","code":"x"},{"text":" as an instance of ","type":"text"},{"type":"codeVoice","code":"UInt8"},{"type":"text","text":", an 8-bit,"},{"type":"text","text":" "},{"type":"text","text":"unsigned integer type. If you use "},{"code":"2","type":"codeVoice"},{"type":"text","text":" as the right-hand-side value in an"},{"text":" ","type":"text"},{"type":"text","text":"operation on "},{"type":"codeVoice","code":"x"},{"type":"text","text":", the shift amount requires no masking."}]},{"type":"codeListing","code":["var x: UInt8 = 30                 \/\/ 0b00011110","x &<<= 2","\/\/ x == 120                       \/\/ 0b01111000"],"syntax":null},{"inlineContent":[{"text":"However, if you pass ","type":"text"},{"code":"19","type":"codeVoice"},{"type":"text","text":" as "},{"type":"codeVoice","code":"rhs"},{"type":"text","text":", the method first bitmasks "},{"type":"codeVoice","code":"rhs"},{"type":"text","text":" to"},{"type":"text","text":" "},{"type":"codeVoice","code":"3"},{"type":"text","text":", and then uses that masked value as the number of bits to shift "},{"code":"lhs","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"},{"code":["var y: UInt8 = 30                 \/\/ 0b00011110","y &<<= 19","\/\/ y == 240                       \/\/ 0b11110000"],"syntax":null,"type":"codeListing"}]}],"kind":"symbol","references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Int32/&__=(_:_:)-1642g":{"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int32\/&__=(_:_:)-1642g","abstract":[{"type":"text","text":"Returns the result of shifting a value’s binary representation the"},{"type":"text","text":" "},{"type":"text","text":"specified number of digits to the left, masking the shift amount to the"},{"type":"text","text":" "},{"text":"type’s bit width, and stores the result in the left-hand-side variable.","type":"text"}],"kind":"symbol","url":"\/documentation\/compute\/int32\/&__=(_:_:)-1642g","title":"&<<=(_:_:)","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"&<<=","kind":"identifier"},{"kind":"text","text":" "},{"kind":"text","text":"<"},{"text":"Other","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Other"},{"text":")","kind":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Int32/FixedWidthInteger-Implementations":{"role":"collectionGroup","type":"topic","title":"FixedWidthInteger Implementations","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int32\/FixedWidthInteger-Implementations","kind":"article","url":"\/documentation\/compute\/int32\/fixedwidthinteger-implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/BinaryInteger":{"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"BinaryInteger"}],"navigatorTitle":[{"kind":"identifier","text":"BinaryInteger"}],"url":"\/documentation\/compute\/binaryinteger","type":"topic","abstract":[{"type":"text","text":"An integer type with a binary representation."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryInteger","title":"BinaryInteger","kind":"symbol","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int32":{"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Int32","kind":"identifier"}],"abstract":[{"text":"A 32-bit signed integer value","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"type."}],"kind":"symbol","navigatorTitle":[{"text":"Int32","kind":"identifier"}],"type":"topic","url":"\/documentation\/compute\/int32","title":"Int32","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int32"}}}