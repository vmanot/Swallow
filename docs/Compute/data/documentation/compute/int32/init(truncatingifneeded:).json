{"sections":[],"abstract":[{"text":"Creates a new instance from the bit pattern of the given instance by","type":"text"},{"type":"text","text":" "},{"text":"truncating or sign-extending if needed to fit this type.","type":"text"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"truncatingIfNeeded","kind":"externalParam"},{"kind":"text","text":" "},{"text":"source","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryInteger","kind":"typeIdentifier","preciseIdentifier":"s:Sz","text":"BinaryInteger"}],"platforms":["macOS"],"languages":["swift"]}]},{"parameters":[{"name":"source","content":[{"inlineContent":[{"type":"text","text":"An integer to convert to this type."}],"type":"paragraph"}]}],"kind":"parameters"},{"kind":"content","content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"inlineContent":[{"text":"When the bit width of ","type":"text"},{"code":"T","type":"codeVoice"},{"type":"text","text":" (the type of "},{"type":"codeVoice","code":"source"},{"type":"text","text":") is equal to or greater"},{"text":" ","type":"text"},{"text":"than this type’s bit width, the result is the truncated","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"least-significant bits of "},{"type":"codeVoice","code":"source"},{"text":". For example, when converting a","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"16-bit value to an 8-bit type, only the lower 8 bits of "},{"type":"codeVoice","code":"source"},{"type":"text","text":" are"},{"type":"text","text":" "},{"type":"text","text":"used."}],"type":"paragraph"},{"syntax":null,"code":["let p: Int16 = -500","\/\/ 'p' has a binary representation of 11111110_00001100","let q = Int8(truncatingIfNeeded: p)","\/\/ q == 12","\/\/ 'q' has a binary representation of 00001100"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"When the bit width of "},{"code":"T","type":"codeVoice"},{"text":" is less than this type’s bit width, the result","type":"text"},{"type":"text","text":" "},{"text":"is ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"sign-extended","type":"text"}]},{"type":"text","text":" to fill the remaining bits. That is, if "},{"code":"source","type":"codeVoice"},{"type":"text","text":" is"},{"type":"text","text":" "},{"type":"text","text":"negative, the result is padded with ones; otherwise, the result is"},{"type":"text","text":" "},{"type":"text","text":"padded with zeros."}]},{"syntax":null,"type":"codeListing","code":["let u: Int8 = 21","\/\/ 'u' has a binary representation of 00010101","let v = Int16(truncatingIfNeeded: u)","\/\/ v == 21","\/\/ 'v' has a binary representation of 00000000_00010101","","let w: Int8 = -21","\/\/ 'w' has a binary representation of 11101011","let x = Int16(truncatingIfNeeded: w)","\/\/ x == -21","\/\/ 'x' has a binary representation of 11111111_11101011","let y = UInt16(truncatingIfNeeded: w)","\/\/ y == 65515","\/\/ 'y' has a binary representation of 11111111_11101011"]}]}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int32","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int32\/FixedWidthInteger-Implementations"]]},"variants":[{"paths":["\/documentation\/compute\/int32\/init(truncatingifneeded:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int32\/init(truncatingIfNeeded:)","interfaceLanguage":"swift"},"metadata":{"extendedModule":"Swift","externalID":"s:s17FixedWidthIntegerPsE18truncatingIfNeededxqd___tcSzRd__lufc::SYNTHESIZED::s:s5Int32V","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"text":"truncatingIfNeeded","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":")"}],"role":"symbol","title":"init(truncatingIfNeeded:)","modules":[{"relatedModules":["Swift"],"name":"Compute"}],"roleHeading":"Initializer","symbolKind":"init"},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Int32/FixedWidthInteger-Implementations":{"role":"collectionGroup","type":"topic","title":"FixedWidthInteger Implementations","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int32\/FixedWidthInteger-Implementations","kind":"article","url":"\/documentation\/compute\/int32\/fixedwidthinteger-implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/BinaryInteger":{"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"BinaryInteger"}],"navigatorTitle":[{"kind":"identifier","text":"BinaryInteger"}],"url":"\/documentation\/compute\/binaryinteger","type":"topic","abstract":[{"type":"text","text":"An integer type with a binary representation."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryInteger","title":"BinaryInteger","kind":"symbol","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int32":{"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Int32","kind":"identifier"}],"abstract":[{"text":"A 32-bit signed integer value","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"type."}],"kind":"symbol","navigatorTitle":[{"text":"Int32","kind":"identifier"}],"type":"topic","url":"\/documentation\/compute\/int32","title":"Int32","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int32"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int32/init(truncatingIfNeeded:)":{"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int32\/init(truncatingIfNeeded:)","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"truncatingIfNeeded"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}],"title":"init(truncatingIfNeeded:)","role":"symbol","abstract":[{"text":"Creates a new instance from the bit pattern of the given instance by","type":"text"},{"type":"text","text":" "},{"type":"text","text":"truncating or sign-extending if needed to fit this type."}],"url":"\/documentation\/compute\/int32\/init(truncatingifneeded:)","kind":"symbol"}}}