{"metadata":{"roleHeading":"Operator","externalID":"s:s5Int32V1moiyA2B_ABtFZ","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"*","kind":"identifier"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Int32","preciseIdentifier":"s:s5Int32V"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V","text":"Int32"},{"text":") -> ","kind":"text"},{"text":"Int32","kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V"}],"role":"symbol","extendedModule":"Swift","title":"*(_:_:)","symbolKind":"op","modules":[{"name":"Compute","relatedModules":["Swift"]}]},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/int32\/*(_:_:)"]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int32","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int32\/BinaryInteger-Implementations"]]},"schemaVersion":{"patch":0,"minor":3,"major":0},"abstract":[{"text":"Multiplies two values and produces their product.","type":"text"}],"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int32\/*(_:_:)","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"*"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"kind":"internalParam","text":"lhs"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int32","kind":"typeIdentifier","text":"Int32","preciseIdentifier":"s:s5Int32V"},{"kind":"text","text":", "},{"kind":"internalParam","text":"rhs"},{"kind":"text","text":": "},{"text":"Int32","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int32","preciseIdentifier":"s:s5Int32V","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int32","kind":"typeIdentifier","text":"Int32","preciseIdentifier":"s:s5Int32V"}]}]},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The first value to multiply."}]}],"name":"lhs"},{"name":"rhs","content":[{"type":"paragraph","inlineContent":[{"text":"The second value to multiply.","type":"text"}]}]}],"kind":"parameters"},{"kind":"content","content":[{"level":2,"anchor":"discussion","text":"Discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"The multiplication operator (","type":"text"},{"type":"codeVoice","code":"*"},{"type":"text","text":") calculates the product of its two"},{"type":"text","text":" "},{"text":"arguments. For example:","type":"text"}]},{"code":["2 * 3                   \/\/ 6","100 * 21                \/\/ 2100","-10 * 15                \/\/ -150","3.5 * 2.25              \/\/ 7.875"],"type":"codeListing","syntax":null},{"inlineContent":[{"type":"text","text":"You cannot use "},{"code":"*","type":"codeVoice"},{"text":" with arguments of different types. To multiply values","type":"text"},{"text":" ","type":"text"},{"text":"of different types, convert one of the values to the other value’s type.","type":"text"}],"type":"paragraph"},{"syntax":null,"code":["let x: Int8 = 21","let y: Int = 1000000","Int(x) * y              \/\/ 21000000"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"The product of the two arguments must be representable in the arguments’","type":"text"},{"type":"text","text":" "},{"text":"type. In the following example, the result of ","type":"text"},{"code":"21 * 21","type":"codeVoice"},{"text":" is greater than","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the maximum representable "},{"type":"codeVoice","code":"Int8"},{"text":" value:","type":"text"}]},{"syntax":null,"type":"codeListing","code":["x * 21                  \/\/ Overflow error"]},{"content":[{"inlineContent":[{"text":"Overflow checking is not performed in ","type":"text"},{"type":"codeVoice","code":"-Ounchecked"},{"text":" builds.","type":"text"}],"type":"paragraph"}],"style":"note","name":"Note","type":"aside"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you want to opt out of overflow checking and wrap the result in case"},{"type":"text","text":" "},{"text":"of any overflow, use the overflow multiplication operator (","type":"text"},{"type":"codeVoice","code":"&*"},{"type":"text","text":")."}]},{"syntax":null,"type":"codeListing","code":["x &* 21                \/\/ -115"]}]}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Int32/*(_:_:)":{"url":"\/documentation\/compute\/int32\/*(_:_:)","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"*","kind":"identifier"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Int32","preciseIdentifier":"s:s5Int32V"},{"text":", ","kind":"text"},{"text":"Int32","kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:s5Int32V","kind":"typeIdentifier","text":"Int32"}],"title":"*(_:_:)","abstract":[{"type":"text","text":"Multiplies two values and produces their product."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int32\/*(_:_:)","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int32":{"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Int32","kind":"identifier"}],"abstract":[{"text":"A 32-bit signed integer value","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"type."}],"kind":"symbol","navigatorTitle":[{"text":"Int32","kind":"identifier"}],"type":"topic","url":"\/documentation\/compute\/int32","title":"Int32","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int32"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int32/BinaryInteger-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int32\/BinaryInteger-Implementations","url":"\/documentation\/compute\/int32\/binaryinteger-implementations","abstract":[],"type":"topic","title":"BinaryInteger Implementations","role":"collectionGroup","kind":"article"}}}