{"abstract":[{"type":"text","text":"Replaces this value with its additive inverse."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/int32\/negate()"]}],"sections":[],"schemaVersion":{"minor":3,"patch":0,"major":0},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"mutating"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"negate","kind":"identifier"},{"text":"()","kind":"text"}]}],"kind":"declarations"},{"content":[{"level":2,"anchor":"discussion","type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"The following example uses the ","type":"text"},{"code":"negate()","type":"codeVoice"},{"type":"text","text":" method to negate the value of"},{"type":"text","text":" "},{"type":"text","text":"an integer "},{"code":"x","type":"codeVoice"},{"text":":","type":"text"}]},{"syntax":null,"code":["var x = 21","x.negate()","\/\/ x == -21"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The resulting value must be representable within the value’s type. In"},{"type":"text","text":" "},{"text":"particular, negating a signed, fixed-width integer type’s minimum","type":"text"},{"text":" ","type":"text"},{"text":"results in a value that cannot be represented.","type":"text"}]},{"syntax":null,"code":["var y = Int8.min","y.negate()","\/\/ Overflow error"],"type":"codeListing"}],"kind":"content"}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int32","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int32\/SignedNumeric-Implementations"]]},"metadata":{"title":"negate()","symbolKind":"method","modules":[{"name":"Compute","relatedModules":["Swift"]}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"negate","kind":"identifier"},{"text":"()","kind":"text"}],"externalID":"s:s13SignedNumericPsE6negateyyF::SYNTHESIZED::s:s5Int32V","roleHeading":"Instance Method","extendedModule":"Swift","role":"symbol"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int32\/negate()"},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Int32":{"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Int32","kind":"identifier"}],"abstract":[{"text":"A 32-bit signed integer value","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"type."}],"kind":"symbol","navigatorTitle":[{"text":"Int32","kind":"identifier"}],"type":"topic","url":"\/documentation\/compute\/int32","title":"Int32","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int32"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int32/SignedNumeric-Implementations":{"type":"topic","title":"SignedNumeric Implementations","role":"collectionGroup","url":"\/documentation\/compute\/int32\/signednumeric-implementations","abstract":[],"kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int32\/SignedNumeric-Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int32/negate()":{"url":"\/documentation\/compute\/int32\/negate()","title":"negate()","kind":"symbol","role":"symbol","type":"topic","abstract":[{"text":"Replaces this value with its additive inverse.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"negate","kind":"identifier"},{"kind":"text","text":"()"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int32\/negate()"}}}