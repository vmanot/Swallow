{"kind":"symbol","schemaVersion":{"minor":3,"major":0,"patch":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/int32\/__(_:_:)-2ny6e"]}],"abstract":[{"text":"Returns the result of shifting a value’s binary representation the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"specified number of digits to the right."}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int32\/__(_:_:)-2ny6e"},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int32","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int32\/BinaryInteger-Implementations"]]},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":">>","kind":"identifier"},{"text":" ","kind":"text"},{"text":"<","kind":"text"},{"text":"RHS","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"internalParam","text":"lhs"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"internalParam","text":"rhs"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"RHS"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":" "},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"RHS"},{"text":" : ","kind":"text"},{"text":"BinaryInteger","preciseIdentifier":"s:Sz","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryInteger"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"name":"lhs","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The value to shift."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The number of bits to shift "},{"type":"codeVoice","code":"lhs"},{"type":"text","text":" to the right."}]}],"name":"rhs"}]},{"content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"type":"codeVoice","code":">>"},{"type":"text","text":" operator performs a "},{"type":"emphasis","inlineContent":[{"text":"smart shift","type":"text"}]},{"type":"text","text":", which defines a result for a"},{"type":"text","text":" "},{"type":"text","text":"shift of any value."}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Using a negative value for "},{"code":"rhs","type":"codeVoice"},{"text":" performs a left shift using","type":"text"},{"text":" ","type":"text"},{"code":"abs(rhs)","type":"codeVoice"},{"type":"text","text":"."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Using a value for "},{"type":"codeVoice","code":"rhs"},{"type":"text","text":" that is greater than or equal to the bit width"},{"type":"text","text":" "},{"type":"text","text":"of "},{"code":"lhs","type":"codeVoice"},{"type":"text","text":" is an "},{"inlineContent":[{"text":"overshift","type":"text"}],"type":"emphasis"},{"text":". An overshift results in ","type":"text"},{"code":"-1","type":"codeVoice"},{"text":" for a","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"negative value of "},{"code":"lhs","type":"codeVoice"},{"text":" or ","type":"text"},{"code":"0","type":"codeVoice"},{"text":" for a nonnegative value.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Using any other value for "},{"type":"codeVoice","code":"rhs"},{"type":"text","text":" performs a right shift on "},{"code":"lhs","type":"codeVoice"},{"text":" by that","type":"text"},{"type":"text","text":" "},{"type":"text","text":"amount."}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The following example defines "},{"type":"codeVoice","code":"x"},{"text":" as an instance of ","type":"text"},{"type":"codeVoice","code":"UInt8"},{"type":"text","text":", an 8-bit,"},{"text":" ","type":"text"},{"type":"text","text":"unsigned integer type. If you use "},{"type":"codeVoice","code":"2"},{"type":"text","text":" as the right-hand-side value in an"},{"text":" ","type":"text"},{"type":"text","text":"operation on "},{"code":"x","type":"codeVoice"},{"type":"text","text":", the value is shifted right by two bits."}]},{"code":["let x: UInt8 = 30                 \/\/ 0b00011110","let y = x >> 2","\/\/ y == 7                         \/\/ 0b00000111"],"type":"codeListing","syntax":null},{"inlineContent":[{"type":"text","text":"If you use "},{"code":"11","type":"codeVoice"},{"type":"text","text":" as "},{"type":"codeVoice","code":"rhs"},{"text":", ","type":"text"},{"code":"x","type":"codeVoice"},{"type":"text","text":" is overshifted such that all of its bits"},{"text":" ","type":"text"},{"text":"are set to zero.","type":"text"}],"type":"paragraph"},{"syntax":null,"type":"codeListing","code":["let z = x >> 11","\/\/ z == 0                         \/\/ 0b00000000"]},{"inlineContent":[{"text":"Using a negative value as ","type":"text"},{"code":"rhs","type":"codeVoice"},{"text":" is the same as performing a left shift","type":"text"},{"text":" ","type":"text"},{"text":"using ","type":"text"},{"code":"abs(rhs)","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":["let a = x >> -3","\/\/ a == 240                       \/\/ 0b11110000","let b = x << 3","\/\/ b == 240                       \/\/ 0b11110000"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Right shift operations on negative values “fill in” the high bits with"},{"text":" ","type":"text"},{"type":"text","text":"ones instead of zeros."}]},{"syntax":null,"type":"codeListing","code":["let q: Int8 = -30                 \/\/ 0b11100010","let r = q >> 2","\/\/ r == -8                        \/\/ 0b11111000","","let s = q >> 11","\/\/ s == -1                        \/\/ 0b11111111"]}],"kind":"content"}],"metadata":{"role":"symbol","modules":[{"name":"Compute","relatedModules":["Swift"]}],"extendedModule":"Swift","symbolKind":"op","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":">>","kind":"identifier"},{"text":" ","kind":"text"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"RHS"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"text":"RHS","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"}],"title":">>(_:_:)","roleHeading":"Operator","externalID":"s:SzsE2ggoiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:s5Int32V"},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Int32/BinaryInteger-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int32\/BinaryInteger-Implementations","url":"\/documentation\/compute\/int32\/binaryinteger-implementations","abstract":[],"type":"topic","title":"BinaryInteger Implementations","role":"collectionGroup","kind":"article"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/BinaryInteger":{"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"BinaryInteger"}],"navigatorTitle":[{"kind":"identifier","text":"BinaryInteger"}],"url":"\/documentation\/compute\/binaryinteger","type":"topic","abstract":[{"type":"text","text":"An integer type with a binary representation."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryInteger","title":"BinaryInteger","kind":"symbol","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int32/__(_:_:)-2ny6e":{"type":"topic","role":"symbol","url":"\/documentation\/compute\/int32\/__(_:_:)-2ny6e","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int32\/__(_:_:)-2ny6e","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":">>"},{"kind":"text","text":" "},{"text":"<","kind":"text"},{"text":"RHS","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"RHS","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"title":">>(_:_:)","abstract":[{"type":"text","text":"Returns the result of shifting a value’s binary representation the"},{"type":"text","text":" "},{"type":"text","text":"specified number of digits to the right."}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Int32":{"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Int32","kind":"identifier"}],"abstract":[{"text":"A 32-bit signed integer value","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"type."}],"kind":"symbol","navigatorTitle":[{"text":"Int32","kind":"identifier"}],"type":"topic","url":"\/documentation\/compute\/int32","title":"Int32","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int32"}}}