{"sections":[],"abstract":[{"text":"Subtracts the second value from the first and stores the difference in the","type":"text"},{"type":"text","text":" "},{"text":"left-hand-side variable, wrapping any overflow.","type":"text"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int32\/&-=(_:_:)"},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int32","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int32\/FixedWidthInteger-Implementations"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"&-="},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"internalParam","text":"lhs"},{"kind":"text","text":": "},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"internalParam","text":"rhs"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":")","kind":"text"}],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"name":"lhs","content":[{"inlineContent":[{"text":"A numeric value.","type":"text"}],"type":"paragraph"}]},{"name":"rhs","content":[{"inlineContent":[{"type":"text","text":"The value to subtract from "},{"type":"codeVoice","code":"lhs"},{"type":"text","text":"."}],"type":"paragraph"}]}]},{"kind":"content","content":[{"anchor":"discussion","text":"Discussion","type":"heading","level":2},{"inlineContent":[{"text":"The masking subtraction assignment operator (","type":"text"},{"type":"codeVoice","code":"&-="},{"text":") silently wraps any","type":"text"},{"type":"text","text":" "},{"text":"overflow that occurs during the operation. In the following example, the","type":"text"},{"text":" ","type":"text"},{"text":"difference of ","type":"text"},{"type":"codeVoice","code":"10"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"21"},{"text":" is less than zero, the minimum representable","type":"text"},{"text":" ","type":"text"},{"code":"UInt","type":"codeVoice"},{"type":"text","text":" value, so the result is the result is the partial value after"},{"type":"text","text":" "},{"text":"discarding the overflowing bits.","type":"text"}],"type":"paragraph"},{"syntax":null,"code":["var x: Int8 = 21","x &-= 10","\/\/ x == 11","var y: UInt8 = 10","y &-= 21","\/\/ y == 245 (after overflow)"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"For more about arithmetic with overflow operators, see "},{"identifier":"https:\/\/docs.swift.org\/swift-book\/LanguageGuide\/AdvancedOperators.html#ID37","isActive":true,"type":"reference"},{"type":"text","text":" in "},{"type":"emphasis","inlineContent":[{"identifier":"https:\/\/docs.swift.org\/swift-book\/","type":"reference","isActive":true}]},{"text":".","type":"text"}]}]}],"variants":[{"paths":["\/documentation\/compute\/int32\/&-=(_:_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"role":"symbol","externalID":"s:s17FixedWidthIntegerPsE3aseoiyyxz_xtFZ::SYNTHESIZED::s:s5Int32V","title":"&-=(_:_:)","modules":[{"name":"Compute","relatedModules":["Swift"]}],"roleHeading":"Operator","symbolKind":"op","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"&-="},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":")","kind":"text"}],"extendedModule":"Swift"},"references":{"https://docs.swift.org/swift-book/LanguageGuide/AdvancedOperators.html#ID37":{"identifier":"https:\/\/docs.swift.org\/swift-book\/LanguageGuide\/AdvancedOperators.html#ID37","type":"link","titleInlineContent":[{"type":"text","text":"Overflow"},{"type":"text","text":" "},{"type":"text","text":"Operators"}],"url":"https:\/\/docs.swift.org\/swift-book\/LanguageGuide\/AdvancedOperators.html#ID37","title":"Overflow Operators"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int32":{"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Int32","kind":"identifier"}],"abstract":[{"text":"A 32-bit signed integer value","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"type."}],"kind":"symbol","navigatorTitle":[{"text":"Int32","kind":"identifier"}],"type":"topic","url":"\/documentation\/compute\/int32","title":"Int32","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int32"},"https://docs.swift.org/swift-book/":{"identifier":"https:\/\/docs.swift.org\/swift-book\/","type":"link","titleInlineContent":[{"type":"text","text":"The Swift Programming Language"}],"url":"https:\/\/docs.swift.org\/swift-book\/","title":"The Swift Programming Language"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int32/&-=(_:_:)":{"role":"symbol","type":"topic","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int32\/&-=(_:_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"&-=","kind":"identifier"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"text":")","kind":"text"}],"title":"&-=(_:_:)","url":"\/documentation\/compute\/int32\/&-=(_:_:)","abstract":[{"type":"text","text":"Subtracts the second value from the first and stores the difference in the"},{"type":"text","text":" "},{"type":"text","text":"left-hand-side variable, wrapping any overflow."}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Int32/FixedWidthInteger-Implementations":{"role":"collectionGroup","type":"topic","title":"FixedWidthInteger Implementations","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int32\/FixedWidthInteger-Implementations","kind":"article","url":"\/documentation\/compute\/int32\/fixedwidthinteger-implementations"}}}