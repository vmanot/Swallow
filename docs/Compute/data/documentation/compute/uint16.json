{"sections":[],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"attribute","text":"@frozen"},{"text":" ","kind":"text"},{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"UInt16","kind":"identifier"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute"]]},"topicSections":[{"title":"Structures","generated":true,"identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/Words-swift.struct"],"anchor":"Structures"},{"generated":true,"title":"Operators","identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/!=(_:_:)-4wnno","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/&=(_:_:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/&__=(_:_:)-4uh81","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/&__=(_:_:)-54gew","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/*=(_:_:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/+=(_:_:)-7qvzk","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/-=(_:_:)-1710f","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/==(_:_:)-8i6pq","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/_(_:_:)-9tmro","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/_=(_:_:)-2tboh","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/_=(_:_:)-5c5xh","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/_=(_:_:)-7gmk4","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/_=(_:_:)-7q4om"],"anchor":"Operators"},{"generated":true,"anchor":"Initializers","title":"Initializers","identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/init(_:)-2gsqf","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/init(_:)-5vkwt","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/init(_:)-8jre","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/init(bitPattern:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/init(exactly:)-1l0o7","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/init(exactly:)-4ljt","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/init(exactly:)-8jto3"]},{"title":"Instance Properties","identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/byteSwapped","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/leadingZeroBitCount","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/nonzeroBitCount","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/trailingZeroBitCount","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/words-swift.property"],"generated":true,"anchor":"Instance-Properties"},{"generated":true,"anchor":"Instance-Methods","identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/addingReportingOverflow(_:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/dividedReportingOverflow(by:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/dividingFullWidth(_:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/multipliedFullWidth(by:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/multipliedReportingOverflow(by:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/remainderReportingOverflow(dividingBy:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/signum()","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/subtractingReportingOverflow(_:)"],"title":"Instance Methods"},{"identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/IntegerLiteralType","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/Magnitude-swift.typealias","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/Stride"],"anchor":"Type-Aliases","title":"Type Aliases","generated":true},{"identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/bitWidth-swift.type.property"],"title":"Type Properties","anchor":"Type-Properties","generated":true},{"title":"Default Implementations","identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/AdditiveArithmetic-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/BinaryInteger-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/Comparable-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/CustomReflectable-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/Decodable-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/Encodable-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/Equatable-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/ExpressibleByIntegerLiteral-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/FixedWidthInteger-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/Hashable-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/SIMDScalar-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/Strideable-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/UnsignedInteger-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/_CustomPlaygroundQuickLookable-Implementations"],"generated":true,"anchor":"Default-Implementations"}],"relationshipsSections":[{"title":"Conforms To","type":"conformsTo","identifiers":["doc:\/\/com.swallow.documentation.Compute\/10Accelerate10BNNSScalarP","doc:\/\/com.swallow.documentation.Compute\/10Accelerate23vDSP_IntegerConvertableP","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AdditiveArithmetic","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryInteger","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BitwiseCopyable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CVarArg","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Comparable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Copyable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CustomReflectable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CustomStringConvertible","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Decodable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Encodable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Equatable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ExpressibleByIntegerLiteral","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FixedWidthInteger","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Hashable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LosslessStringConvertible","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Numeric","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMDScalar","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sendable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Strideable","doc:\/\/com.swallow.documentation.Compute\/7Swallow18AdditionOperatableP","doc:\/\/com.swallow.documentation.Compute\/7Swallow21AnyCodableConvertibleP","doc:\/\/com.swallow.documentation.Compute\/7Swallow22ApproximatelyEquatableP","doc:\/\/com.swallow.documentation.Compute\/7Swallow20ArithmeticOperatableP","doc:\/\/com.swallow.documentation.Compute\/7Swallow16BooleanInitiableP","doc:\/\/com.swallow.documentation.Compute\/7Swallow7BoundedP","doc:\/\/com.swallow.documentation.Compute\/7Swallow18BoundedRandomnableP","doc:\/\/com.swallow.documentation.Compute\/7Swallow18ByteOrderSwappableP","doc:\/\/com.swallow.documentation.Compute\/7Swallow20ByteTupleConvertibleP","doc:\/\/com.swallow.documentation.Compute\/7Swallow14CoderPrimitiveP","doc:\/\/com.swallow.documentation.Compute\/7Swallow13DataDecodableP","doc:\/\/com.swallow.documentation.Compute\/7Swallow13DataEncodableP","doc:\/\/com.swallow.documentation.Compute\/7Swallow8DiscreteP","doc:\/\/com.swallow.documentation.Compute\/7Swallow20DiscreteOrContinuousP","doc:\/\/com.swallow.documentation.Compute\/7Swallow18DivisionOperatableP","doc:\/\/com.swallow.documentation.Compute\/7Swallow22FloatingPointInitiableP","doc:\/\/com.swallow.documentation.Compute\/7Swallow9InitiableP","doc:\/\/com.swallow.documentation.Compute\/7Swallow16IntegerInitiableP","doc:\/\/com.swallow.documentation.Compute\/7Swallow24MultiplicationOperatableP","doc:\/\/com.swallow.documentation.Compute\/7Swallow25MutableAdditionOperatableP","doc:\/\/com.swallow.documentation.Compute\/7Swallow27MutableArithmeticOperatableP","doc:\/\/com.swallow.documentation.Compute\/7Swallow25MutableDivisionOperatableP","doc:\/\/com.swallow.documentation.Compute\/7Swallow31MutableMultiplicationOperatableP","doc:\/\/com.swallow.documentation.Compute\/7Swallow28MutableSubtractionOperatableP","doc:\/\/com.swallow.documentation.Compute\/7Swallow6NumberP","doc:\/\/com.swallow.documentation.Compute\/7Swallow17NumberConvertibleP","doc:\/\/com.swallow.documentation.Compute\/7Swallow15NumberInitiableP","doc:\/\/com.swallow.documentation.Compute\/7Swallow11RandomnableP","doc:\/\/com.swallow.documentation.Compute\/7Swallow26ShouldNotBeDecodedFromBoolP","doc:\/\/com.swallow.documentation.Compute\/7Swallow22SignedIntegerInitiableP","doc:\/\/com.swallow.documentation.Compute\/7Swallow16SignedOrUnsignedP","doc:\/\/com.swallow.documentation.Compute\/7Swallow21SubtractionOperatableP","doc:\/\/com.swallow.documentation.Compute\/7Swallow7TrivialP","doc:\/\/com.swallow.documentation.Compute\/7Swallow8UnsignedP","doc:\/\/com.swallow.documentation.Compute\/7Swallow24UnsignedIntegerInitiableP","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsignedInteger"],"kind":"relationships"}],"variants":[{"paths":["\/documentation\/compute\/uint16"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16","interfaceLanguage":"swift"},"metadata":{"symbolKind":"struct","roleHeading":"Structure","navigatorTitle":[{"kind":"identifier","text":"UInt16"}],"title":"UInt16","externalID":"s:s6UInt16V","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"UInt16"}],"modules":[{"name":"Compute"}]},"kind":"symbol","schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"text":"A 16-bit unsigned integer value","type":"text"},{"type":"text","text":" "},{"text":"type.","type":"text"}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/UInt16/_=(_:_:)-7q4om":{"type":"topic","url":"\/documentation\/compute\/uint16\/_=(_:_:)-7q4om","title":"^=(_:_:)","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/_=(_:_:)-7q4om","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"^="},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"text":"UInt16","preciseIdentifier":"s:s6UInt16V","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:s6UInt16V","text":"UInt16"},{"kind":"text","text":")"}],"kind":"symbol","abstract":[{"text":"Stores the result of performing a bitwise XOR operation on the two given","type":"text"},{"type":"text","text":" "},{"type":"text","text":"values in the left-hand-side variable."}]},"doc://com.swallow.documentation.Compute/7Swallow18BoundedRandomnableP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow18BoundedRandomnableP","type":"unresolvable","title":"Swallow.BoundedRandomnable"},"doc://com.swallow.documentation.Compute/documentation/Compute/Numeric":{"abstract":[{"type":"text","text":"A type with values that support multiplication."}],"kind":"symbol","url":"\/documentation\/compute\/numeric","navigatorTitle":[{"text":"Numeric","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Numeric","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Numeric"}],"title":"Numeric"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt16/Stride":{"type":"topic","role":"symbol","url":"\/documentation\/compute\/uint16\/stride","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"Stride"}],"title":"UInt16.Stride","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/Stride","abstract":[{"text":"A type that represents the distance between two values.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Stride"}],"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt16/init(exactly:)-8jto3":{"type":"topic","title":"init(exactly:)","kind":"symbol","url":"\/documentation\/compute\/uint16\/init(exactly:)-8jto3","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/init(exactly:)-8jto3","role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"text":"?(","kind":"text"},{"text":"exactly","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Float","preciseIdentifier":"s:Sf","kind":"typeIdentifier"},{"text":")","kind":"text"}],"abstract":[{"type":"text","text":"Creates an integer from the given floating-point value, if it can be"},{"type":"text","text":" "},{"type":"text","text":"represented exactly."}]},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt16/Comparable-Implementations":{"role":"collectionGroup","kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/Comparable-Implementations","abstract":[],"url":"\/documentation\/compute\/uint16\/comparable-implementations","title":"Comparable Implementations","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt16/FixedWidthInteger-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/FixedWidthInteger-Implementations","title":"FixedWidthInteger Implementations","role":"collectionGroup","url":"\/documentation\/compute\/uint16\/fixedwidthinteger-implementations","type":"topic","kind":"article","abstract":[]},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt16/Encodable-Implementations":{"title":"Encodable Implementations","url":"\/documentation\/compute\/uint16\/encodable-implementations","abstract":[],"kind":"article","role":"collectionGroup","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/Encodable-Implementations","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt16/Equatable-Implementations":{"kind":"article","abstract":[],"url":"\/documentation\/compute\/uint16\/equatable-implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/Equatable-Implementations","role":"collectionGroup","type":"topic","title":"Equatable Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/Sendable":{"kind":"symbol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"Sendable","kind":"identifier"}],"title":"Sendable","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sendable","abstract":[],"url":"\/documentation\/compute\/sendable","role":"symbol","navigatorTitle":[{"text":"Sendable","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt16/_=(_:_:)-7gmk4":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"\/=","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"preciseIdentifier":"s:s6UInt16V","kind":"typeIdentifier","text":"UInt16"},{"kind":"text","text":", "},{"text":"UInt16","preciseIdentifier":"s:s6UInt16V","kind":"typeIdentifier"},{"kind":"text","text":")"}],"url":"\/documentation\/compute\/uint16\/_=(_:_:)-7gmk4","type":"topic","title":"\/=(_:_:)","abstract":[{"type":"text","text":"Divides the first value by the second and stores the quotient in the"},{"type":"text","text":" "},{"type":"text","text":"left-hand-side variable."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/_=(_:_:)-7gmk4","kind":"symbol","role":"symbol"},"doc://com.swallow.documentation.Compute/7Swallow24UnsignedIntegerInitiableP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow24UnsignedIntegerInitiableP","type":"unresolvable","title":"Swallow.UnsignedIntegerInitiable"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt16/remainderReportingOverflow(dividingBy:)":{"kind":"symbol","url":"\/documentation\/compute\/uint16\/remainderreportingoverflow(dividingby:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"remainderReportingOverflow"},{"text":"(","kind":"text"},{"text":"dividingBy","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s6UInt16V","text":"UInt16","kind":"typeIdentifier"},{"text":") -> (partialValue","kind":"text"},{"kind":"text","text":": "},{"text":"UInt16","kind":"typeIdentifier","preciseIdentifier":"s:s6UInt16V"},{"text":", overflow","kind":"text"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":")"}],"type":"topic","abstract":[{"type":"text","text":"Returns the remainder after dividing this value by the given value, along"},{"type":"text","text":" "},{"text":"with a Boolean value indicating whether overflow occurred during division.","type":"text"}],"title":"remainderReportingOverflow(dividingBy:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/remainderReportingOverflow(dividingBy:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt16/words-swift.property":{"type":"topic","role":"symbol","url":"\/documentation\/compute\/uint16\/words-swift.property","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/words-swift.property","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"words"},{"kind":"text","text":": "},{"text":"UInt16","kind":"typeIdentifier","preciseIdentifier":"s:s6UInt16V"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Words","preciseIdentifier":"s:s6UInt16V5WordsV"}],"title":"words","abstract":[{"text":"A collection containing the words of this value’s binary","type":"text"},{"text":" ","type":"text"},{"text":"representation, in order from the least significant to most significant.","type":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt16/addingReportingOverflow(_:)":{"abstract":[{"text":"Returns the sum of this value and the given value, along with a Boolean","type":"text"},{"type":"text","text":" "},{"type":"text","text":"value indicating whether overflow occurred in the operation."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/addingReportingOverflow(_:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"addingReportingOverflow","kind":"identifier"},{"text":"(","kind":"text"},{"text":"UInt16","kind":"typeIdentifier","preciseIdentifier":"s:s6UInt16V"},{"kind":"text","text":") -> (partialValue"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s6UInt16V","text":"UInt16","kind":"typeIdentifier"},{"kind":"text","text":", overflow"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"kind":"text","text":")"}],"url":"\/documentation\/compute\/uint16\/addingreportingoverflow(_:)","title":"addingReportingOverflow(_:)","kind":"symbol","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/FixedWidthInteger":{"title":"FixedWidthInteger","kind":"symbol","navigatorTitle":[{"text":"FixedWidthInteger","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FixedWidthInteger","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"FixedWidthInteger","kind":"identifier"}],"abstract":[{"text":"An integer type that uses a fixed size for every instance.","type":"text"}],"type":"topic","url":"\/documentation\/compute\/fixedwidthinteger"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt16/subtractingReportingOverflow(_:)":{"kind":"symbol","url":"\/documentation\/compute\/uint16\/subtractingreportingoverflow(_:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"subtractingReportingOverflow"},{"text":"(","kind":"text"},{"text":"UInt16","kind":"typeIdentifier","preciseIdentifier":"s:s6UInt16V"},{"text":") -> (partialValue","kind":"text"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s6UInt16V","text":"UInt16"},{"kind":"text","text":", overflow"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":")"}],"type":"topic","abstract":[{"type":"text","text":"Returns the difference obtained by subtracting the given value from this"},{"type":"text","text":" "},{"text":"value, along with a Boolean value indicating whether overflow occurred in","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the operation."}],"title":"subtractingReportingOverflow(_:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/subtractingReportingOverflow(_:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt16/signum()":{"url":"\/documentation\/compute\/uint16\/signum()","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/signum()","type":"topic","role":"symbol","abstract":[{"type":"text","text":"Returns "},{"type":"codeVoice","code":"-1"},{"type":"text","text":" if this value is negative and "},{"code":"1","type":"codeVoice"},{"text":" if it’s positive;","type":"text"},{"type":"text","text":" "},{"type":"text","text":"otherwise, "},{"type":"codeVoice","code":"0"},{"type":"text","text":"."}],"title":"signum()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"signum"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:s6UInt16V","text":"UInt16","kind":"typeIdentifier"}],"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt16/UnsignedInteger-Implementations":{"kind":"article","role":"collectionGroup","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/UnsignedInteger-Implementations","abstract":[],"url":"\/documentation\/compute\/uint16\/unsignedinteger-implementations","title":"UnsignedInteger Implementations","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/Equatable":{"abstract":[{"text":"A type that can be compared for value equality.","type":"text"}],"type":"topic","title":"Equatable","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Equatable"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Equatable","role":"symbol","url":"\/documentation\/compute\/equatable","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Equatable","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt16/init(_:)-2gsqf":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/init(_:)-2gsqf","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Double","preciseIdentifier":"s:Sd","kind":"typeIdentifier"},{"kind":"text","text":")"}],"kind":"symbol","role":"symbol","abstract":[],"type":"topic","url":"\/documentation\/compute\/uint16\/init(_:)-2gsqf","title":"init(_:)"},"doc://com.swallow.documentation.Compute/7Swallow21AnyCodableConvertibleP":{"type":"unresolvable","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow21AnyCodableConvertibleP","title":"Swallow.AnyCodableConvertible"},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsignedInteger":{"url":"\/documentation\/compute\/unsignedinteger","abstract":[{"type":"text","text":"An integer type that can represent only nonnegative values."}],"kind":"symbol","navigatorTitle":[{"text":"UnsignedInteger","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsignedInteger","title":"UnsignedInteger","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"UnsignedInteger"}],"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt16/trailingZeroBitCount":{"kind":"symbol","url":"\/documentation\/compute\/uint16\/trailingzerobitcount","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"trailingZeroBitCount"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"}],"type":"topic","abstract":[{"type":"text","text":"The number of trailing zeros in this value’s binary representation."}],"title":"trailingZeroBitCount","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/trailingZeroBitCount"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt16/+=(_:_:)-7qvzk":{"abstract":[{"type":"text","text":"Adds two values and stores the result in the left-hand-side variable."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/+=(_:_:)-7qvzk","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"+=","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"UInt16","preciseIdentifier":"s:s6UInt16V"},{"text":", ","kind":"text"},{"text":"UInt16","kind":"typeIdentifier","preciseIdentifier":"s:s6UInt16V"},{"text":")","kind":"text"}],"url":"\/documentation\/compute\/uint16\/+=(_:_:)-7qvzk","title":"+=(_:_:)","kind":"symbol","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt16/*=(_:_:)":{"kind":"symbol","url":"\/documentation\/compute\/uint16\/*=(_:_:)","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"*="},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s6UInt16V","text":"UInt16"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"UInt16","preciseIdentifier":"s:s6UInt16V"},{"text":")","kind":"text"}],"type":"topic","abstract":[{"text":"Multiplies two values and stores the result in the left-hand-side","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"variable."}],"title":"*=(_:_:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/*=(_:_:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/AdditiveArithmetic":{"type":"topic","title":"AdditiveArithmetic","abstract":[{"text":"A type with values that support addition and subtraction.","type":"text"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AdditiveArithmetic"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AdditiveArithmetic","url":"\/documentation\/compute\/additivearithmetic","role":"symbol","navigatorTitle":[{"text":"AdditiveArithmetic","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt16/-=(_:_:)-1710f":{"abstract":[{"type":"text","text":"Subtracts the second value from the first and stores the difference in the"},{"text":" ","type":"text"},{"text":"left-hand-side variable.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/-=(_:_:)-1710f","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"-=","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"text":"UInt16","kind":"typeIdentifier","preciseIdentifier":"s:s6UInt16V"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:s6UInt16V","text":"UInt16"},{"kind":"text","text":")"}],"url":"\/documentation\/compute\/uint16\/-=(_:_:)-1710f","title":"-=(_:_:)","kind":"symbol","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt16/_=(_:_:)-5c5xh":{"role":"symbol","title":"%=(_:_:)","abstract":[{"type":"text","text":"Divides the first value by the second and stores the remainder in the"},{"text":" ","type":"text"},{"type":"text","text":"left-hand-side variable."}],"kind":"symbol","url":"\/documentation\/compute\/uint16\/_=(_:_:)-5c5xh","type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/_=(_:_:)-5c5xh","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"%="},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s6UInt16V","text":"UInt16"},{"text":", ","kind":"text"},{"text":"UInt16","preciseIdentifier":"s:s6UInt16V","kind":"typeIdentifier"},{"kind":"text","text":")"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt16/Magnitude-swift.typealias":{"title":"UInt16.Magnitude","role":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Magnitude"}],"abstract":[{"text":"A type that can represent the absolute value of any possible value of","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"this type."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/Magnitude-swift.typealias","url":"\/documentation\/compute\/uint16\/magnitude-swift.typealias","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Magnitude"}],"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/LosslessStringConvertible":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LosslessStringConvertible","kind":"identifier"}],"kind":"symbol","title":"LosslessStringConvertible","abstract":[{"type":"text","text":"A type that can be represented as a string in a lossless, unambiguous way."}],"role":"symbol","type":"topic","navigatorTitle":[{"text":"LosslessStringConvertible","kind":"identifier"}],"url":"\/documentation\/compute\/losslessstringconvertible","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LosslessStringConvertible"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt16/init(_:)-8jre":{"abstract":[],"type":"topic","role":"symbol","kind":"symbol","title":"init(_:)","url":"\/documentation\/compute\/uint16\/init(_:)-8jre","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/init(_:)-8jre","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:Sf","kind":"typeIdentifier","text":"Float"},{"kind":"text","text":")"}]},"doc://com.swallow.documentation.Compute/7Swallow20ArithmeticOperatableP":{"title":"Swallow.ArithmeticOperatable","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow20ArithmeticOperatableP","type":"unresolvable"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt16/init(exactly:)-4ljt":{"type":"topic","kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"?(","kind":"text"},{"text":"exactly","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s7Float16V","text":"Float16"},{"text":")","kind":"text"}],"abstract":[{"type":"text","text":"Creates an integer from the given floating-point value, if it can be"},{"type":"text","text":" "},{"type":"text","text":"represented exactly."}],"url":"\/documentation\/compute\/uint16\/init(exactly:)-4ljt","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/init(exactly:)-4ljt","role":"symbol","title":"init(exactly:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt16/_CustomPlaygroundQuickLookable-Implementations":{"abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/_CustomPlaygroundQuickLookable-Implementations","role":"collectionGroup","url":"\/documentation\/compute\/uint16\/_customplaygroundquicklookable-implementations","title":"_CustomPlaygroundQuickLookable Implementations","kind":"article","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt16/AdditiveArithmetic-Implementations":{"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/AdditiveArithmetic-Implementations","title":"AdditiveArithmetic Implementations","role":"collectionGroup","abstract":[],"url":"\/documentation\/compute\/uint16\/additivearithmetic-implementations","kind":"article"},"doc://com.swallow.documentation.Compute/documentation/Compute/Decodable":{"kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"Decodable","kind":"identifier"}],"title":"Decodable","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Decodable","abstract":[{"type":"text","text":"A type that can decode itself from an external representation."}],"url":"\/documentation\/compute\/decodable","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Decodable"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt16/_(_:_:)-9tmro":{"kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"<"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s6UInt16V","text":"UInt16"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"UInt16","preciseIdentifier":"s:s6UInt16V"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"url":"\/documentation\/compute\/uint16\/_(_:_:)-9tmro","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/_(_:_:)-9tmro","abstract":[{"type":"text","text":"Returns a Boolean value indicating whether the value of the first"},{"text":" ","type":"text"},{"text":"argument is less than that of the second argument.","type":"text"}],"title":"<(_:_:)","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMDScalar":{"kind":"symbol","navigatorTitle":[{"text":"SIMDScalar","kind":"identifier"}],"type":"topic","title":"SIMDScalar","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMDScalar","abstract":[{"type":"text","text":"A type that can be used as an element in a SIMD vector."}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SIMDScalar","kind":"identifier"}],"url":"\/documentation\/compute\/simdscalar"},"doc://com.swallow.documentation.Compute/documentation/Compute/Comparable":{"url":"\/documentation\/compute\/comparable","type":"topic","kind":"symbol","role":"symbol","abstract":[{"text":"A type that can be compared using the relational operators ","type":"text"},{"code":"<","type":"codeVoice"},{"text":", ","type":"text"},{"code":"<=","type":"codeVoice"},{"text":", ","type":"text"},{"type":"codeVoice","code":">="},{"text":",","type":"text"},{"type":"text","text":" "},{"type":"text","text":"and "},{"type":"codeVoice","code":">"},{"text":".","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Comparable"}],"title":"Comparable","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Comparable","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"Comparable","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/7Swallow22SignedIntegerInitiableP":{"title":"Swallow.SignedIntegerInitiable","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow22SignedIntegerInitiableP","type":"unresolvable"},"doc://com.swallow.documentation.Compute/7Swallow13DataEncodableP":{"title":"Swallow.DataEncodable","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow13DataEncodableP","type":"unresolvable"},"doc://com.swallow.documentation.Compute/7Swallow7TrivialP":{"title":"Swallow.Trivial","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow7TrivialP","type":"unresolvable"},"doc://com.swallow.documentation.Compute/7Swallow7BoundedP":{"title":"Swallow.Bounded","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow7BoundedP","type":"unresolvable"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt16/dividingFullWidth(_:)":{"kind":"symbol","url":"\/documentation\/compute\/uint16\/dividingfullwidth(_:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"dividingFullWidth","kind":"identifier"},{"text":"((high","kind":"text"},{"kind":"text","text":": "},{"text":"UInt16","kind":"typeIdentifier","preciseIdentifier":"s:s6UInt16V"},{"kind":"text","text":", low"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt16","preciseIdentifier":"s:s6UInt16V"},{"text":".","kind":"text"},{"text":"Magnitude","kind":"typeIdentifier","preciseIdentifier":"s:s6UInt16V9Magnitudea"},{"text":")) -> (quotient","kind":"text"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s6UInt16V","text":"UInt16","kind":"typeIdentifier"},{"kind":"text","text":", remainder"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s6UInt16V","text":"UInt16"},{"text":")","kind":"text"}],"type":"topic","abstract":[{"text":"Returns a tuple containing the quotient and remainder of dividing the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"given value by this value."}],"title":"dividingFullWidth(_:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/dividingFullWidth(_:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/BinaryInteger":{"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"BinaryInteger"}],"navigatorTitle":[{"kind":"identifier","text":"BinaryInteger"}],"url":"\/documentation\/compute\/binaryinteger","type":"topic","abstract":[{"type":"text","text":"An integer type with a binary representation."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryInteger","title":"BinaryInteger","kind":"symbol","role":"symbol"},"doc://com.swallow.documentation.Compute/7Swallow21SubtractionOperatableP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow21SubtractionOperatableP","type":"unresolvable","title":"Swallow.SubtractionOperatable"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt16/Words-swift.struct":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Words"}],"navigatorTitle":[{"text":"Words","kind":"identifier"}],"title":"UInt16.Words","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/Words-swift.struct","url":"\/documentation\/compute\/uint16\/words-swift.struct","kind":"symbol","role":"symbol","abstract":[{"text":"A type that represents the words of this integer.","type":"text"}],"type":"topic"},"doc://com.swallow.documentation.Compute/7Swallow15NumberInitiableP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow15NumberInitiableP","type":"unresolvable","title":"Swallow.NumberInitiable"},"doc://com.swallow.documentation.Compute/7Swallow28MutableSubtractionOperatableP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow28MutableSubtractionOperatableP","type":"unresolvable","title":"Swallow.MutableSubtractionOperatable"},"doc://com.swallow.documentation.Compute/documentation/Compute/Strideable":{"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/compute\/strideable","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Strideable","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Strideable"}],"navigatorTitle":[{"text":"Strideable","kind":"identifier"}],"abstract":[{"type":"text","text":"A type representing continuous, one-dimensional values that can be offset"},{"type":"text","text":" "},{"type":"text","text":"and measured."}],"title":"Strideable"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt16/&__=(_:_:)-54gew":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"&>>=","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:s6UInt16V","text":"UInt16","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:s6UInt16V","text":"UInt16","kind":"typeIdentifier"},{"text":")","kind":"text"}],"kind":"symbol","url":"\/documentation\/compute\/uint16\/&__=(_:_:)-54gew","role":"symbol","title":"&>>=(_:_:)","abstract":[{"text":"Calculates the result of shifting a value’s binary representation the","type":"text"},{"type":"text","text":" "},{"text":"specified number of digits to the right, masking the shift amount to the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"type’s bit width, and stores the result in the left-hand-side variable."}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/&__=(_:_:)-54gew"},"doc://com.swallow.documentation.Compute/documentation/Compute/Copyable":{"title":"Copyable","abstract":[{"type":"text","text":"A type whose values can be implicitly or explicitly copied."}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"Copyable","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Copyable","url":"\/documentation\/compute\/copyable","navigatorTitle":[{"text":"Copyable","kind":"identifier"}],"kind":"symbol","role":"symbol","type":"topic"},"doc://com.swallow.documentation.Compute/10Accelerate10BNNSScalarP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/10Accelerate10BNNSScalarP","type":"unresolvable","title":"Accelerate.BNNSScalar"},"doc://com.swallow.documentation.Compute/7Swallow16SignedOrUnsignedP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow16SignedOrUnsignedP","type":"unresolvable","title":"Swallow.SignedOrUnsigned"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt16/&__=(_:_:)-4uh81":{"kind":"symbol","url":"\/documentation\/compute\/uint16\/&__=(_:_:)-4uh81","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"&<<=","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:s6UInt16V","text":"UInt16"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s6UInt16V","text":"UInt16"},{"text":")","kind":"text"}],"type":"topic","abstract":[{"type":"text","text":"Returns the result of shifting a value’s binary representation the"},{"type":"text","text":" "},{"text":"specified number of digits to the left, masking the shift amount to the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"type’s bit width, and stores the result in the left-hand-side variable."}],"title":"&<<=(_:_:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/&__=(_:_:)-4uh81"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt16/byteSwapped":{"url":"\/documentation\/compute\/uint16\/byteswapped","role":"symbol","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"byteSwapped","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt16","preciseIdentifier":"s:s6UInt16V"}],"abstract":[{"text":"A representation of this integer with the byte order swapped.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/byteSwapped","title":"byteSwapped"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt16/nonzeroBitCount":{"abstract":[{"type":"text","text":"The number of bits equal to 1 in this value’s binary representation."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/nonzeroBitCount","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"nonzeroBitCount"},{"kind":"text","text":": "},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"}],"url":"\/documentation\/compute\/uint16\/nonzerobitcount","title":"nonzeroBitCount","kind":"symbol","type":"topic"},"doc://com.swallow.documentation.Compute/7Swallow17NumberConvertibleP":{"title":"Swallow.NumberConvertible","type":"unresolvable","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow17NumberConvertibleP"},"doc://com.swallow.documentation.Compute/7Swallow18AdditionOperatableP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow18AdditionOperatableP","type":"unresolvable","title":"Swallow.AdditionOperatable"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt16/SIMDScalar-Implementations":{"url":"\/documentation\/compute\/uint16\/simdscalar-implementations","title":"SIMDScalar Implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/SIMDScalar-Implementations","role":"collectionGroup","abstract":[],"type":"topic","kind":"article"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt16":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"UInt16","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"UInt16"}],"title":"UInt16","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16","url":"\/documentation\/compute\/uint16","kind":"symbol","role":"symbol","abstract":[{"text":"A 16-bit unsigned integer value","type":"text"},{"text":" ","type":"text"},{"text":"type.","type":"text"}],"type":"topic"},"doc://com.swallow.documentation.Compute/7Swallow25MutableDivisionOperatableP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow25MutableDivisionOperatableP","type":"unresolvable","title":"Swallow.MutableDivisionOperatable"},"doc://com.swallow.documentation.Compute/documentation/Compute/CustomReflectable":{"url":"\/documentation\/compute\/customreflectable","role":"symbol","abstract":[{"text":"A type that explicitly supplies its own mirror.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CustomReflectable","title":"CustomReflectable","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CustomReflectable"}],"navigatorTitle":[{"kind":"identifier","text":"CustomReflectable"}],"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Encodable":{"url":"\/documentation\/compute\/encodable","navigatorTitle":[{"text":"Encodable","kind":"identifier"}],"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"Encodable","kind":"identifier"}],"abstract":[{"text":"A type that can encode itself to an external representation.","type":"text"}],"type":"topic","title":"Encodable","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Encodable"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt16/BinaryInteger-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/BinaryInteger-Implementations","url":"\/documentation\/compute\/uint16\/binaryinteger-implementations","type":"topic","title":"BinaryInteger Implementations","role":"collectionGroup","abstract":[],"kind":"article"},"doc://com.swallow.documentation.Compute/documentation/Compute/Hashable":{"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Hashable"}],"title":"Hashable","navigatorTitle":[{"text":"Hashable","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"A type that can be hashed into a "},{"type":"codeVoice","code":"Hasher"},{"type":"text","text":" to produce an integer hash value."}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Hashable","url":"\/documentation\/compute\/hashable","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/CustomStringConvertible":{"url":"\/documentation\/compute\/customstringconvertible","navigatorTitle":[{"kind":"identifier","text":"CustomStringConvertible"}],"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CustomStringConvertible","kind":"identifier"}],"abstract":[{"text":"A type with a customized textual representation.","type":"text"}],"type":"topic","title":"CustomStringConvertible","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CustomStringConvertible"},"doc://com.swallow.documentation.Compute/7Swallow26ShouldNotBeDecodedFromBoolP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow26ShouldNotBeDecodedFromBoolP","type":"unresolvable","title":"Swallow.ShouldNotBeDecodedFromBool"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt16/Decodable-Implementations":{"type":"topic","kind":"article","title":"Decodable Implementations","role":"collectionGroup","url":"\/documentation\/compute\/uint16\/decodable-implementations","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/Decodable-Implementations"},"doc://com.swallow.documentation.Compute/7Swallow8UnsignedP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow8UnsignedP","type":"unresolvable","title":"Swallow.Unsigned"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt16/ExpressibleByIntegerLiteral-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/ExpressibleByIntegerLiteral-Implementations","role":"collectionGroup","url":"\/documentation\/compute\/uint16\/expressiblebyintegerliteral-implementations","abstract":[],"type":"topic","kind":"article","title":"ExpressibleByIntegerLiteral Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/CVarArg":{"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CVarArg"}],"abstract":[{"text":"A type whose instances can be encoded, and appropriately passed, as","type":"text"},{"text":" ","type":"text"},{"text":"elements of a C ","type":"text"},{"type":"codeVoice","code":"va_list"},{"text":".","type":"text"}],"navigatorTitle":[{"text":"CVarArg","kind":"identifier"}],"title":"CVarArg","type":"topic","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CVarArg","url":"\/documentation\/compute\/cvararg"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt16/init(exactly:)-1l0o7":{"fragments":[{"kind":"identifier","text":"init"},{"text":"?(","kind":"text"},{"kind":"externalParam","text":"exactly"},{"text":": ","kind":"text"},{"text":"Double","kind":"typeIdentifier","preciseIdentifier":"s:Sd"},{"text":")","kind":"text"}],"url":"\/documentation\/compute\/uint16\/init(exactly:)-1l0o7","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/init(exactly:)-1l0o7","type":"topic","role":"symbol","kind":"symbol","abstract":[{"text":"Creates an integer from the given floating-point value, if it can be","type":"text"},{"text":" ","type":"text"},{"text":"represented exactly.","type":"text"}],"title":"init(exactly:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt16/bitWidth-swift.type.property":{"type":"topic","title":"bitWidth","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"bitWidth"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"}],"url":"\/documentation\/compute\/uint16\/bitwidth-swift.type.property","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/bitWidth-swift.type.property","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"The number of bits used for the underlying binary representation of"},{"type":"text","text":" "},{"type":"text","text":"values of this type."}]},"doc://com.swallow.documentation.Compute/7Swallow16BooleanInitiableP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow16BooleanInitiableP","type":"unresolvable","title":"Swallow.BooleanInitiable"},"doc://com.swallow.documentation.Compute/documentation/Compute/ExpressibleByIntegerLiteral":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ExpressibleByIntegerLiteral","url":"\/documentation\/compute\/expressiblebyintegerliteral","title":"ExpressibleByIntegerLiteral","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ExpressibleByIntegerLiteral","kind":"identifier"}],"navigatorTitle":[{"text":"ExpressibleByIntegerLiteral","kind":"identifier"}],"abstract":[{"text":"A type that can be initialized with an integer literal.","type":"text"}],"kind":"symbol","role":"symbol"},"doc://com.swallow.documentation.Compute/7Swallow16IntegerInitiableP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow16IntegerInitiableP","type":"unresolvable","title":"Swallow.IntegerInitiable"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt16/IntegerLiteralType":{"abstract":[{"type":"text","text":"A type that represents an integer literal."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/IntegerLiteralType","role":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"IntegerLiteralType"}],"url":"\/documentation\/compute\/uint16\/integerliteraltype","title":"UInt16.IntegerLiteralType","kind":"symbol","navigatorTitle":[{"text":"IntegerLiteralType","kind":"identifier"}],"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt16/multipliedReportingOverflow(by:)":{"kind":"symbol","url":"\/documentation\/compute\/uint16\/multipliedreportingoverflow(by:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"multipliedReportingOverflow"},{"kind":"text","text":"("},{"text":"by","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s6UInt16V","text":"UInt16"},{"kind":"text","text":") -> (partialValue"},{"text":": ","kind":"text"},{"text":"UInt16","kind":"typeIdentifier","preciseIdentifier":"s:s6UInt16V"},{"text":", overflow","kind":"text"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"kind":"text","text":")"}],"type":"topic","abstract":[{"text":"Returns the product of this value and the given value, along with a","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Boolean value indicating whether overflow occurred in the operation."}],"title":"multipliedReportingOverflow(by:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/multipliedReportingOverflow(by:)"},"doc://com.swallow.documentation.Compute/7Swallow25MutableAdditionOperatableP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow25MutableAdditionOperatableP","type":"unresolvable","title":"Swallow.MutableAdditionOperatable"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt16/Strideable-Implementations":{"type":"topic","title":"Strideable Implementations","kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/Strideable-Implementations","url":"\/documentation\/compute\/uint16\/strideable-implementations","role":"collectionGroup","abstract":[]},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt16/!=(_:_:)-4wnno":{"kind":"symbol","url":"\/documentation\/compute\/uint16\/!=(_:_:)-4wnno","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"!=","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"UInt16","kind":"typeIdentifier","preciseIdentifier":"s:s6UInt16V"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"UInt16","preciseIdentifier":"s:s6UInt16V"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"type":"topic","abstract":[],"title":"!=(_:_:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/!=(_:_:)-4wnno"},"doc://com.swallow.documentation.Compute/7Swallow9InitiableP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow9InitiableP","title":"Swallow.Initiable","type":"unresolvable"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt16/leadingZeroBitCount":{"kind":"symbol","url":"\/documentation\/compute\/uint16\/leadingzerobitcount","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"leadingZeroBitCount","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"}],"type":"topic","abstract":[{"text":"The number of leading zeros in this value’s binary representation.","type":"text"}],"title":"leadingZeroBitCount","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/leadingZeroBitCount"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt16/CustomReflectable-Implementations":{"type":"topic","role":"collectionGroup","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/CustomReflectable-Implementations","url":"\/documentation\/compute\/uint16\/customreflectable-implementations","abstract":[],"kind":"article","title":"CustomReflectable Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt16/_=(_:_:)-2tboh":{"abstract":[{"text":"Stores the result of performing a bitwise OR operation on the two given","type":"text"},{"text":" ","type":"text"},{"text":"values in the left-hand-side variable.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/_=(_:_:)-2tboh","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"|=","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"text":"UInt16","kind":"typeIdentifier","preciseIdentifier":"s:s6UInt16V"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:s6UInt16V","text":"UInt16"},{"kind":"text","text":")"}],"url":"\/documentation\/compute\/uint16\/_=(_:_:)-2tboh","title":"|=(_:_:)","kind":"symbol","type":"topic"},"doc://com.swallow.documentation.Compute/7Swallow8DiscreteP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow8DiscreteP","type":"unresolvable","title":"Swallow.Discrete"},"doc://com.swallow.documentation.Compute/7Swallow22ApproximatelyEquatableP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow22ApproximatelyEquatableP","type":"unresolvable","title":"Swallow.ApproximatelyEquatable"},"doc://com.swallow.documentation.Compute/7Swallow24MultiplicationOperatableP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow24MultiplicationOperatableP","type":"unresolvable","title":"Swallow.MultiplicationOperatable"},"doc://com.swallow.documentation.Compute/10Accelerate23vDSP_IntegerConvertableP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/10Accelerate23vDSP_IntegerConvertableP","type":"unresolvable","title":"Accelerate.vDSP_IntegerConvertable"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt16/multipliedFullWidth(by:)":{"kind":"symbol","url":"\/documentation\/compute\/uint16\/multipliedfullwidth(by:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"multipliedFullWidth"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"by"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s6UInt16V","text":"UInt16","kind":"typeIdentifier"},{"kind":"text","text":") -> (high"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s6UInt16V","text":"UInt16","kind":"typeIdentifier"},{"text":", low","kind":"text"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s6UInt16V","text":"UInt16"},{"text":".","kind":"text"},{"preciseIdentifier":"s:s6UInt16V9Magnitudea","kind":"typeIdentifier","text":"Magnitude"},{"text":")","kind":"text"}],"type":"topic","abstract":[{"type":"text","text":"Returns a tuple containing the high and low parts of the result of"},{"type":"text","text":" "},{"type":"text","text":"multiplying this value by the given value."}],"title":"multipliedFullWidth(by:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/multipliedFullWidth(by:)"},"doc://com.swallow.documentation.Compute/7Swallow18ByteOrderSwappableP":{"type":"unresolvable","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow18ByteOrderSwappableP","title":"Swallow.ByteOrderSwappable"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt16/&=(_:_:)":{"kind":"symbol","url":"\/documentation\/compute\/uint16\/&=(_:_:)","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"&=","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"preciseIdentifier":"s:s6UInt16V","text":"UInt16","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:s6UInt16V","kind":"typeIdentifier","text":"UInt16"},{"text":")","kind":"text"}],"type":"topic","abstract":[{"type":"text","text":"Stores the result of performing a bitwise AND operation on the two given"},{"type":"text","text":" "},{"type":"text","text":"values in the left-hand-side variable."}],"title":"&=(_:_:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/&=(_:_:)"},"doc://com.swallow.documentation.Compute/7Swallow27MutableArithmeticOperatableP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow27MutableArithmeticOperatableP","type":"unresolvable","title":"Swallow.MutableArithmeticOperatable"},"doc://com.swallow.documentation.Compute/7Swallow20ByteTupleConvertibleP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow20ByteTupleConvertibleP","type":"unresolvable","title":"Swallow.ByteTupleConvertible"},"doc://com.swallow.documentation.Compute/7Swallow20DiscreteOrContinuousP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow20DiscreteOrContinuousP","type":"unresolvable","title":"Swallow.DiscreteOrContinuous"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt16/==(_:_:)-8i6pq":{"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"=="},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s6UInt16V","text":"UInt16"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"UInt16","preciseIdentifier":"s:s6UInt16V"},{"kind":"text","text":") -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"role":"symbol","abstract":[{"text":"Returns a Boolean value indicating whether two values are equal.","type":"text"}],"title":"==(_:_:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/==(_:_:)-8i6pq","kind":"symbol","url":"\/documentation\/compute\/uint16\/==(_:_:)-8i6pq","type":"topic"},"doc://com.swallow.documentation.Compute/7Swallow11RandomnableP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow11RandomnableP","type":"unresolvable","title":"Swallow.Randomnable"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt16/Hashable-Implementations":{"abstract":[],"kind":"article","role":"collectionGroup","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/Hashable-Implementations","type":"topic","url":"\/documentation\/compute\/uint16\/hashable-implementations","title":"Hashable Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt16/init(_:)-5vkwt":{"abstract":[{"type":"text","text":"Creates an integer from the given floating-point value, rounding toward"},{"type":"text","text":" "},{"type":"text","text":"zero."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/init(_:)-5vkwt","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:s7Float16V","text":"Float16","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/compute\/uint16\/init(_:)-5vkwt","title":"init(_:)","kind":"symbol","type":"topic"},"doc://com.swallow.documentation.Compute/7Swallow13DataDecodableP":{"title":"Swallow.DataDecodable","type":"unresolvable","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow13DataDecodableP"},"doc://com.swallow.documentation.Compute/7Swallow22FloatingPointInitiableP":{"title":"Swallow.FloatingPointInitiable","type":"unresolvable","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow22FloatingPointInitiableP"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt16/dividedReportingOverflow(by:)":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"dividedReportingOverflow","kind":"identifier"},{"text":"(","kind":"text"},{"text":"by","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s6UInt16V","text":"UInt16","kind":"typeIdentifier"},{"kind":"text","text":") -> (partialValue"},{"kind":"text","text":": "},{"text":"UInt16","kind":"typeIdentifier","preciseIdentifier":"s:s6UInt16V"},{"text":", overflow","kind":"text"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":")","kind":"text"}],"role":"symbol","title":"dividedReportingOverflow(by:)","url":"\/documentation\/compute\/uint16\/dividedreportingoverflow(by:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/dividedReportingOverflow(by:)","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Returns the quotient obtained by dividing this value by the given value,"},{"text":" ","type":"text"},{"text":"along with a Boolean value indicating whether overflow occurred in the","type":"text"},{"type":"text","text":" "},{"text":"operation.","type":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt16/init(bitPattern:)":{"type":"topic","abstract":[{"text":"Creates a new instance with the same memory representation as the given","type":"text"},{"text":" ","type":"text"},{"text":"value.","type":"text"}],"kind":"symbol","title":"init(bitPattern:)","role":"symbol","url":"\/documentation\/compute\/uint16\/init(bitpattern:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/init(bitPattern:)","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"bitPattern"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s5Int16V","text":"Int16"},{"text":")","kind":"text"}]},"doc://com.swallow.documentation.Compute/7Swallow6NumberP":{"title":"Swallow.Number","type":"unresolvable","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow6NumberP"},"doc://com.swallow.documentation.Compute/7Swallow14CoderPrimitiveP":{"title":"Swallow.CoderPrimitive","type":"unresolvable","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow14CoderPrimitiveP"},"doc://com.swallow.documentation.Compute/7Swallow31MutableMultiplicationOperatableP":{"title":"Swallow.MutableMultiplicationOperatable","type":"unresolvable","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow31MutableMultiplicationOperatableP"},"doc://com.swallow.documentation.Compute/7Swallow18DivisionOperatableP":{"title":"Swallow.DivisionOperatable","type":"unresolvable","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow18DivisionOperatableP"},"doc://com.swallow.documentation.Compute/documentation/Compute/BitwiseCopyable":{"title":"BitwiseCopyable","abstract":[],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BitwiseCopyable","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BitwiseCopyable","url":"\/documentation\/compute\/bitwisecopyable","navigatorTitle":[{"kind":"identifier","text":"BitwiseCopyable"}],"kind":"symbol","role":"symbol","type":"topic"}}}