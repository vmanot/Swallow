{"sections":[],"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafePointer\/withMemoryRebound(to:capacity:_:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Executes the given closure while temporarily binding memory to"},{"text":" ","type":"text"},{"type":"text","text":"the specified number of instances of type "},{"code":"T","type":"codeVoice"},{"text":".","type":"text"}],"kind":"symbol","primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"withMemoryRebound","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"E"},{"text":", ","kind":"text"},{"text":"Result","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"to","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"type","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":".Type, "},{"text":"capacity","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"count","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Int","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"body"},{"text":": (","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafePointer","kind":"typeIdentifier","preciseIdentifier":"s:SP","text":"UnsafePointer"},{"kind":"text","text":"<"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":">) "},{"text":"throws","kind":"keyword"},{"text":"(","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"text":"(","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Result"},{"text":" ","kind":"text"},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"E"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Error","text":"Error","preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"T","kind":"typeIdentifier"},{"text":" : ~Copyable, ","kind":"text"},{"kind":"typeIdentifier","text":"Result"},{"text":" : ~Copyable","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"type","content":[{"inlineContent":[{"text":"The type to temporarily bind the memory referenced by this","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"pointer. The type "},{"type":"codeVoice","code":"T"},{"text":" must be layout compatible","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"with the pointer’s "},{"code":"Pointee","type":"codeVoice"},{"type":"text","text":" type."}],"type":"paragraph"}]},{"name":"count","content":[{"inlineContent":[{"type":"text","text":"The number of instances of "},{"type":"codeVoice","code":"T"},{"text":" in the re-bound region.","type":"text"}],"type":"paragraph"}]},{"name":"body","content":[{"inlineContent":[{"type":"text","text":"A closure that takes a typed pointer to the"},{"type":"text","text":" "},{"type":"text","text":"same memory as this pointer, only bound to type "},{"code":"T","type":"codeVoice"},{"text":". The closure’s","type":"text"},{"text":" ","type":"text"},{"text":"pointer argument is valid only for the duration of the closure’s","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"execution. If "},{"type":"codeVoice","code":"body"},{"type":"text","text":" has a return value, that value is also used as"},{"type":"text","text":" "},{"text":"the return value for the ","type":"text"},{"code":"withMemoryRebound(to:capacity:_:)","type":"codeVoice"},{"text":" method.","type":"text"}],"type":"paragraph"}]}]},{"kind":"content","content":[{"type":"heading","level":2,"text":"Return Value","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The return value, if any, of the "},{"type":"codeVoice","code":"body"},{"text":" closure parameter.","type":"text"}]}]},{"kind":"content","content":[{"type":"heading","anchor":"discussion","level":2,"text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Use this method when you have a pointer to memory bound to one type and"},{"type":"text","text":" "},{"type":"text","text":"you need to access that memory as instances of another type. Accessing"},{"text":" ","type":"text"},{"text":"memory as a type ","type":"text"},{"code":"T","type":"codeVoice"},{"text":" requires that the memory be bound to that type. A","type":"text"},{"type":"text","text":" "},{"type":"text","text":"memory location may only be bound to one type at a time, so accessing"},{"type":"text","text":" "},{"type":"text","text":"the same memory as an unrelated type without first rebinding the memory"},{"text":" ","type":"text"},{"text":"is undefined.","type":"text"}]},{"inlineContent":[{"type":"text","text":"The region of memory that starts at this pointer and covers "},{"type":"codeVoice","code":"count"},{"text":" ","type":"text"},{"type":"text","text":"strides of "},{"type":"codeVoice","code":"T"},{"text":" instances must be bound to ","type":"text"},{"type":"codeVoice","code":"Pointee"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Any instance of "},{"code":"T","type":"codeVoice"},{"text":" within the re-bound region may be initialized or","type":"text"},{"text":" ","type":"text"},{"text":"uninitialized. Every instance of ","type":"text"},{"code":"Pointee","type":"codeVoice"},{"text":" overlapping with a given","type":"text"},{"type":"text","text":" "},{"text":"instance of ","type":"text"},{"code":"T","type":"codeVoice"},{"type":"text","text":" should have the same initialization state (i.e."},{"type":"text","text":" "},{"type":"text","text":"initialized or uninitialized.) Accessing a "},{"type":"codeVoice","code":"T"},{"type":"text","text":" whose underlying"},{"type":"text","text":" "},{"type":"codeVoice","code":"Pointee"},{"text":" storage is in a mixed initialization state shall be","type":"text"},{"text":" ","type":"text"},{"text":"undefined behaviour.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The following example temporarily rebinds the memory of a "},{"code":"UInt64","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"pointer to "},{"code":"Int64","type":"codeVoice"},{"type":"text","text":", then accesses a property on the signed integer."}]},{"type":"codeListing","syntax":null,"code":["let uint64Pointer: UnsafePointer<UInt64> = fetchValue()","let isNegative = uint64Pointer.withMemoryRebound(","    to: Int64.self, capacity: 1",") {","    return $0.pointee < 0","}"]},{"type":"paragraph","inlineContent":[{"text":"Because this pointer’s memory is no longer bound to its ","type":"text"},{"code":"Pointee","type":"codeVoice"},{"type":"text","text":" type"},{"type":"text","text":" "},{"text":"while the ","type":"text"},{"type":"codeVoice","code":"body"},{"type":"text","text":" closure executes, do not access memory using the"},{"text":" ","type":"text"},{"type":"text","text":"original pointer from within "},{"code":"body","type":"codeVoice"},{"text":". Instead, use the ","type":"text"},{"type":"codeVoice","code":"body"},{"text":" closure’s","type":"text"},{"type":"text","text":" "},{"type":"text","text":"pointer argument to access the values in memory as instances of type"},{"type":"text","text":" "},{"code":"T","type":"codeVoice"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"text":"After executing ","type":"text"},{"code":"body","type":"codeVoice"},{"type":"text","text":", this method rebinds memory back to the original"},{"text":" ","type":"text"},{"type":"codeVoice","code":"Pointee"},{"type":"text","text":" type."}]},{"style":"note","type":"aside","content":[{"inlineContent":[{"type":"text","text":"Only use this method to rebind the pointer’s memory to a type"},{"type":"text","text":" "},{"text":"that is layout compatible with the ","type":"text"},{"type":"codeVoice","code":"Pointee"},{"text":" type. The stride of the","type":"text"},{"type":"text","text":" "},{"text":"temporary type (","type":"text"},{"code":"T","type":"codeVoice"},{"type":"text","text":") may be an integer multiple or a whole fraction"},{"type":"text","text":" "},{"text":"of ","type":"text"},{"type":"codeVoice","code":"Pointee"},{"text":"’s stride, for example to point to one element of","type":"text"},{"type":"text","text":" "},{"type":"text","text":"an aggregate."},{"text":" ","type":"text"},{"text":"To bind a region of memory to a type that does not match these","type":"text"},{"type":"text","text":" "},{"text":"requirements, convert the pointer to a raw pointer and use the","type":"text"},{"type":"text","text":" "},{"code":"bindMemory(to:)","type":"codeVoice"},{"text":" method.","type":"text"},{"text":" ","type":"text"},{"text":"If ","type":"text"},{"type":"codeVoice","code":"T"},{"type":"text","text":" and "},{"code":"Pointee","type":"codeVoice"},{"text":" have different alignments, this pointer","type":"text"},{"text":" ","type":"text"},{"text":"must be aligned with the larger of the two alignments.","type":"text"}],"type":"paragraph"}],"name":"Note"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"externalID":"s:SPsRi_zrlE17withMemoryRebound2to8capacity_qd_1_qd__m_Siqd_1_SPyqd__Gqd_0_YKXEtqd_0_YKs5ErrorRd_0_Ri_d__Ri_d_1_r1_lF","roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"withMemoryRebound","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":", "},{"text":"E","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Result","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"to","kind":"externalParam"},{"kind":"text","text":": "},{"text":"T","kind":"typeIdentifier"},{"text":".Type, ","kind":"text"},{"kind":"externalParam","text":"capacity"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":", ("},{"preciseIdentifier":"s:SP","text":"UnsafePointer","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"T","kind":"typeIdentifier"},{"text":">) ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":"(","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"E"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Result"}],"modules":[{"relatedModules":["Swift"],"name":"Compute"}],"extendedModule":"Swift","role":"symbol","symbolKind":"method","title":"withMemoryRebound(to:capacity:_:)"},"variants":[{"paths":["\/documentation\/compute\/unsafepointer\/withmemoryrebound(to:capacity:_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafePointer"]]},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Int":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","abstract":[{"type":"text","text":"A signed integer value type."}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Int","kind":"identifier"}],"navigatorTitle":[{"text":"Int","kind":"identifier"}],"title":"Int","url":"\/documentation\/compute\/int","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Error":{"url":"\/documentation\/compute\/error","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Error"}],"navigatorTitle":[{"text":"Error","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Error","type":"topic","role":"symbol","abstract":[{"type":"text","text":"A type representing an error value that can be thrown."}],"kind":"symbol","title":"Error"},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafePointer":{"abstract":[{"type":"text","text":"A pointer for accessing data of a specific type."}],"type":"topic","title":"UnsafePointer","url":"\/documentation\/compute\/unsafepointer","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafePointer","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"UnsafePointer"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"UnsafePointer"}],"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafePointer/withMemoryRebound(to:capacity:_:)":{"role":"symbol","type":"topic","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafePointer\/withMemoryRebound(to:capacity:_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"withMemoryRebound"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"E"},{"kind":"text","text":", "},{"text":"Result","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"to","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"text":".Type, ","kind":"text"},{"text":"capacity","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"kind":"text","text":", ("},{"text":"UnsafePointer","kind":"typeIdentifier","preciseIdentifier":"s:SP"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">) ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":"("},{"text":"E","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Result"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":"(","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Result","kind":"typeIdentifier"}],"title":"withMemoryRebound(to:capacity:_:)","url":"\/documentation\/compute\/unsafepointer\/withmemoryrebound(to:capacity:_:)","abstract":[{"type":"text","text":"Executes the given closure while temporarily binding memory to"},{"text":" ","type":"text"},{"text":"the specified number of instances of type ","type":"text"},{"code":"T","type":"codeVoice"},{"text":".","type":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"}}}