{"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ReversedCollection\/sorted(by:)","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"kind":"symbol","variants":[{"paths":["\/documentation\/compute\/reversedcollection\/sorted(by:)"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"roleHeading":"Instance Method","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"sorted","kind":"identifier"},{"text":"(","kind":"text"},{"text":"by","kind":"externalParam"},{"kind":"text","text":": ("},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:ST7ElementQa","text":"Element","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":") "},{"text":"rethrows","kind":"keyword"},{"kind":"text","text":" -> ["},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:ST7ElementQa"},{"kind":"text","text":"]"}],"modules":[{"relatedModules":["Swift"],"name":"Compute"}],"symbolKind":"method","title":"sorted(by:)","externalID":"s:STsE6sorted2bySay7ElementQzGSbAD_ADtKXE_tKF::SYNTHESIZED::s:s18ReversedCollectionV","extendedModule":"Swift"},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ReversedCollection","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ReversedCollection\/Sequence-Implementations"]]},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"sorted","kind":"identifier"},{"kind":"text","text":"("},{"text":"by","kind":"externalParam"},{"kind":"text","text":" "},{"text":"areInIncreasingOrder","kind":"internalParam"},{"kind":"text","text":": ("},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","text":"Element","preciseIdentifier":"s:ST7ElementQa"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Element","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"Bool","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") "},{"text":"rethrows","kind":"keyword"},{"text":" -> [","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Element","preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element"},{"kind":"text","text":"]"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"areInIncreasingOrder","content":[{"type":"paragraph","inlineContent":[{"text":"A predicate that returns ","type":"text"},{"code":"true","type":"codeVoice"},{"text":" if its","type":"text"},{"type":"text","text":" "},{"text":"first argument should be ordered before its second argument;","type":"text"},{"text":" ","type":"text"},{"text":"otherwise, ","type":"text"},{"code":"false","type":"codeVoice"},{"text":".","type":"text"}]}]}]},{"content":[{"type":"heading","level":2,"anchor":"return-value","text":"Return Value"},{"type":"paragraph","inlineContent":[{"text":"A sorted array of the sequence’s elements.","type":"text"}]}],"kind":"content"},{"content":[{"level":2,"anchor":"discussion","type":"heading","text":"Discussion"},{"inlineContent":[{"type":"text","text":"When you want to sort a sequence of elements that don’t conform to the"},{"text":" ","type":"text"},{"code":"Comparable","type":"codeVoice"},{"type":"text","text":" protocol, pass a predicate to this method that returns"},{"text":" ","type":"text"},{"code":"true","type":"codeVoice"},{"type":"text","text":" when the first element should be ordered before the second. The"},{"text":" ","type":"text"},{"text":"elements of the resulting array are ordered according to the given","type":"text"},{"type":"text","text":" "},{"type":"text","text":"predicate."}],"type":"paragraph"},{"inlineContent":[{"text":"In the following example, the predicate provides an ordering for an array","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"of a custom "},{"code":"HTTPResponse","type":"codeVoice"},{"type":"text","text":" type. The predicate orders errors before"},{"text":" ","type":"text"},{"type":"text","text":"successes and sorts the error responses by their error code."}],"type":"paragraph"},{"code":["enum HTTPResponse {","    case ok","    case error(Int)","}","","let responses: [HTTPResponse] = [.error(500), .ok, .ok, .error(404), .error(403)]","let sortedResponses = responses.sorted {","    switch ($0, $1) {","    \/\/ Order errors by code","    case let (.error(aCode), .error(bCode)):","        return aCode < bCode","","    \/\/ All successes are equivalent, so none is before any other","    case (.ok, .ok): return false","","    \/\/ Order errors before successes","    case (.error, .ok): return true","    case (.ok, .error): return false","    }","}","print(sortedResponses)","\/\/ Prints \"[.error(403), .error(404), .error(500), .ok, .ok]\""],"syntax":null,"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You also use this method to sort elements that conform to the"},{"type":"text","text":" "},{"type":"codeVoice","code":"Comparable"},{"text":" protocol in descending order. To sort your sequence in","type":"text"},{"text":" ","type":"text"},{"text":"descending order, pass the greater-than operator (","type":"text"},{"code":">","type":"codeVoice"},{"text":") as the","type":"text"},{"type":"text","text":" "},{"code":"areInIncreasingOrder","type":"codeVoice"},{"type":"text","text":" parameter."}]},{"syntax":null,"type":"codeListing","code":["let students: Set = [\"Kofi\", \"Abena\", \"Peter\", \"Kweku\", \"Akosua\"]","let descendingStudents = students.sorted(by: >)","print(descendingStudents)","\/\/ Prints \"[\"Peter\", \"Kweku\", \"Kofi\", \"Akosua\", \"Abena\"]\""]},{"inlineContent":[{"text":"Calling the related ","type":"text"},{"code":"sorted()","type":"codeVoice"},{"type":"text","text":" method is equivalent to calling this"},{"text":" ","type":"text"},{"type":"text","text":"method and passing the less-than operator ("},{"code":"<","type":"codeVoice"},{"type":"text","text":") as the predicate."}],"type":"paragraph"},{"syntax":null,"code":["print(students.sorted())","\/\/ Prints \"[\"Abena\", \"Akosua\", \"Kofi\", \"Kweku\", \"Peter\"]\"","print(students.sorted(by: <))","\/\/ Prints \"[\"Abena\", \"Akosua\", \"Kofi\", \"Kweku\", \"Peter\"]\""],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"The predicate must be a "},{"inlineContent":[{"type":"text","text":"strict weak ordering"}],"type":"emphasis"},{"type":"text","text":" over the elements. That"},{"type":"text","text":" "},{"text":"is, for any elements ","type":"text"},{"type":"codeVoice","code":"a"},{"text":", ","type":"text"},{"type":"codeVoice","code":"b"},{"type":"text","text":", and "},{"code":"c","type":"codeVoice"},{"text":", the following conditions must","type":"text"},{"type":"text","text":" "},{"type":"text","text":"hold:"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"areInIncreasingOrder(a, a)"},{"text":" is always ","type":"text"},{"type":"codeVoice","code":"false"},{"type":"text","text":". (Irreflexivity)"}]}]},{"content":[{"inlineContent":[{"text":"If ","type":"text"},{"type":"codeVoice","code":"areInIncreasingOrder(a, b)"},{"type":"text","text":" and "},{"type":"codeVoice","code":"areInIncreasingOrder(b, c)"},{"text":" are","type":"text"},{"type":"text","text":" "},{"text":"both ","type":"text"},{"code":"true","type":"codeVoice"},{"type":"text","text":", then "},{"type":"codeVoice","code":"areInIncreasingOrder(a, c)"},{"type":"text","text":" is also "},{"type":"codeVoice","code":"true"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"(Transitive comparability)"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Two elements are ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"incomparable"}]},{"type":"text","text":" if neither is ordered before the other"},{"text":" ","type":"text"},{"text":"according to the predicate. If ","type":"text"},{"type":"codeVoice","code":"a"},{"type":"text","text":" and "},{"type":"codeVoice","code":"b"},{"type":"text","text":" are incomparable, and "},{"type":"codeVoice","code":"b"},{"type":"text","text":" "},{"type":"text","text":"and "},{"type":"codeVoice","code":"c"},{"type":"text","text":" are incomparable, then "},{"type":"codeVoice","code":"a"},{"text":" and ","type":"text"},{"code":"c","type":"codeVoice"},{"text":" are also incomparable.","type":"text"},{"type":"text","text":" "},{"text":"(Transitive incomparability)","type":"text"}]}]}],"type":"unorderedList"},{"inlineContent":[{"type":"text","text":"The sorting algorithm is guaranteed to be stable. A stable sort"},{"type":"text","text":" "},{"type":"text","text":"preserves the relative order of elements for which"},{"type":"text","text":" "},{"code":"areInIncreasingOrder","type":"codeVoice"},{"type":"text","text":" does not establish an order."}],"type":"paragraph"},{"style":"note","type":"aside","content":[{"inlineContent":[{"text":"O(","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"n"}]},{"text":" log ","type":"text"},{"inlineContent":[{"type":"text","text":"n"}],"type":"emphasis"},{"type":"text","text":"), where "},{"inlineContent":[{"type":"text","text":"n"}],"type":"emphasis"},{"text":" is the length of the sequence.","type":"text"}],"type":"paragraph"}],"name":"Complexity"}],"kind":"content"}],"abstract":[{"type":"text","text":"Returns the elements of the sequence, sorted using the given predicate as"},{"type":"text","text":" "},{"type":"text","text":"the comparison between elements."}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/ReversedCollection/sorted(by:)":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"sorted"},{"text":"(","kind":"text"},{"text":"by","kind":"externalParam"},{"kind":"text","text":": ("},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:ST7ElementQa","text":"Element","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:ST7ElementQa","text":"Element","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"rethrows","kind":"keyword"},{"text":" -> [","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:ST7ElementQa","text":"Element","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"title":"sorted(by:)","abstract":[{"type":"text","text":"Returns the elements of the sequence, sorted using the given predicate as"},{"type":"text","text":" "},{"type":"text","text":"the comparison between elements."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ReversedCollection\/sorted(by:)","url":"\/documentation\/compute\/reversedcollection\/sorted(by:)","kind":"symbol","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence/Element":{"type":"topic","required":true,"abstract":[{"type":"text","text":"A type representing the sequence’s elements."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"symbol","url":"\/documentation\/compute\/sequence\/element","role":"symbol","title":"Element","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/ReversedCollection":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"ReversedCollection","kind":"identifier"}],"url":"\/documentation\/compute\/reversedcollection","kind":"symbol","abstract":[{"type":"text","text":"A collection that presents the elements of its base collection"},{"text":" ","type":"text"},{"text":"in reverse order.","type":"text"}],"title":"ReversedCollection","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ReversedCollection","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ReversedCollection"}],"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Bool":{"url":"\/documentation\/compute\/bool","role":"symbol","title":"Bool","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Bool","kind":"identifier"}],"abstract":[{"type":"text","text":"A value type whose instances are either "},{"type":"codeVoice","code":"true"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"false"},{"text":".","type":"text"}],"navigatorTitle":[{"text":"Bool","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bool","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/ReversedCollection/Sequence-Implementations":{"url":"\/documentation\/compute\/reversedcollection\/sequence-implementations","kind":"article","abstract":[],"title":"Sequence Implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ReversedCollection\/Sequence-Implementations","role":"collectionGroup","type":"topic"}}}