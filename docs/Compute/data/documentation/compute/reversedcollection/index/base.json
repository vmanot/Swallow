{"kind":"symbol","abstract":[{"text":"The position after this position in the underlying collection.","type":"text"}],"metadata":{"roleHeading":"Instance Property","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"text":"base","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Base","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Index","kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa"}],"externalID":"s:s18ReversedCollectionV5IndexV4baseACQzvp","modules":[{"name":"Compute"}],"title":"base","role":"symbol","symbolKind":"property"},"variants":[{"paths":["\/documentation\/compute\/reversedcollection\/index\/base"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ReversedCollection","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ReversedCollection\/BidirectionalCollection-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ReversedCollection\/Index"]]},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"text":"base","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Base"},{"kind":"text","text":"."},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/Index","kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa","text":"Index"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"To find the position that corresponds with this index in the original,"},{"type":"text","text":" "},{"type":"text","text":"underlying collection, use that collection’s "},{"type":"codeVoice","code":"index(before:)"},{"text":" method","type":"text"},{"text":" ","type":"text"},{"text":"with the ","type":"text"},{"type":"codeVoice","code":"base"},{"type":"text","text":" property."}]},{"inlineContent":[{"type":"text","text":"The following example declares a function that returns the index of the"},{"type":"text","text":" "},{"type":"text","text":"last even number in the passed array, if one is found. First, the"},{"text":" ","type":"text"},{"text":"function finds the position of the last even number as a ","type":"text"},{"type":"codeVoice","code":"ReversedIndex"},{"type":"text","text":" "},{"text":"in a reversed view of the array of numbers. Next, the function calls the","type":"text"},{"text":" ","type":"text"},{"text":"array’s ","type":"text"},{"type":"codeVoice","code":"index(before:)"},{"text":" method to return the correct position in the","type":"text"},{"type":"text","text":" "},{"text":"passed array.","type":"text"}],"type":"paragraph"},{"code":["func indexOfLastEven(_ numbers: [Int]) -> Int? {","    let reversedNumbers = numbers.reversed()","    guard let i = reversedNumbers.firstIndex(where: { $0 % 2 == 0 })","        else { return nil }","","    return numbers.index(before: i.base)","}","","let numbers = [10, 20, 13, 19, 30, 52, 17, 40, 51]","if let lastEven = indexOfLastEven(numbers) {","    print(\"Last even number: \\(numbers[lastEven])\")","}","\/\/ Prints \"Last even number: 40\""],"type":"codeListing","syntax":null}],"kind":"content"}],"sections":[],"schemaVersion":{"major":0,"patch":0,"minor":3},"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ReversedCollection\/Index\/base","interfaceLanguage":"swift"},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/ReversedCollection":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"ReversedCollection","kind":"identifier"}],"url":"\/documentation\/compute\/reversedcollection","kind":"symbol","abstract":[{"type":"text","text":"A collection that presents the elements of its base collection"},{"text":" ","type":"text"},{"text":"in reverse order.","type":"text"}],"title":"ReversedCollection","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ReversedCollection","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ReversedCollection"}],"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/ReversedCollection/BidirectionalCollection-Implementations":{"kind":"article","title":"BidirectionalCollection Implementations","abstract":[],"role":"collectionGroup","type":"topic","url":"\/documentation\/compute\/reversedcollection\/bidirectionalcollection-implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ReversedCollection\/BidirectionalCollection-Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/ReversedCollection/Index":{"title":"ReversedCollection.Index","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Index","kind":"identifier"}],"kind":"symbol","role":"symbol","navigatorTitle":[{"text":"Index","kind":"identifier"}],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Base","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"BidirectionalCollection"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ReversedCollection\/Index","url":"\/documentation\/compute\/reversedcollection\/index","abstract":[{"type":"text","text":"An index that traverses the same positions as an underlying index,"},{"type":"text","text":" "},{"text":"with inverted traversal direction.","type":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Collection/Index":{"url":"\/documentation\/compute\/collection\/index","required":true,"role":"symbol","title":"Index","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Index","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"Comparable","preciseIdentifier":"s:SL","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"A type that represents a position in the collection."}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/Index","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/ReversedCollection/Index/base":{"url":"\/documentation\/compute\/reversedcollection\/index\/base","role":"symbol","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"kind":"identifier","text":"base"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Base"},{"text":".","kind":"text"},{"text":"Index","kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa"}],"abstract":[{"text":"The position after this position in the underlying collection.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ReversedCollection\/Index\/base","title":"base"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"}}}