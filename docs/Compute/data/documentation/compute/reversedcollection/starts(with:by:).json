{"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/reversedcollection\/starts(with:by:)"]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ReversedCollection\/starts(with:by:)"},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ReversedCollection","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ReversedCollection\/Sequence-Implementations"]]},"abstract":[{"type":"text","text":"Returns a Boolean value indicating whether the initial elements of the"},{"type":"text","text":" "},{"type":"text","text":"sequence are equivalent to the elements in another sequence, using"},{"type":"text","text":" "},{"type":"text","text":"the given predicate as the equivalence test."}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"starts"},{"kind":"text","text":"<"},{"text":"PossiblePrefix","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"with"},{"kind":"text","text":" "},{"kind":"internalParam","text":"possiblePrefix"},{"text":": ","kind":"text"},{"text":"PossiblePrefix","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"by"},{"kind":"text","text":" "},{"text":"areEquivalent","kind":"internalParam"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","text":"Element","preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"PossiblePrefix"},{"text":".","kind":"text"},{"preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","text":"Element"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bool"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bool","kind":"typeIdentifier"},{"text":" ","kind":"text"},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"PossiblePrefix"},{"text":" : ","kind":"text"},{"text":"Sequence","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence","preciseIdentifier":"s:ST"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"A sequence to compare to this sequence.","type":"text"}]}],"name":"possiblePrefix"},{"name":"areEquivalent","content":[{"type":"paragraph","inlineContent":[{"text":"A predicate that returns ","type":"text"},{"code":"true","type":"codeVoice"},{"text":" if its two arguments","type":"text"},{"type":"text","text":" "},{"type":"text","text":"are equivalent; otherwise, "},{"type":"codeVoice","code":"false"},{"type":"text","text":"."}]}]}],"kind":"parameters"},{"content":[{"type":"heading","level":2,"anchor":"return-value","text":"Return Value"},{"inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"true"},{"type":"text","text":" if the initial elements of the sequence are equivalent"},{"text":" ","type":"text"},{"text":"to the elements of ","type":"text"},{"type":"codeVoice","code":"possiblePrefix"},{"type":"text","text":"; otherwise, "},{"code":"false","type":"codeVoice"},{"text":". If","type":"text"},{"type":"text","text":" "},{"code":"possiblePrefix","type":"codeVoice"},{"text":" has no elements, the return value is ","type":"text"},{"code":"true","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}],"kind":"content"},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"The predicate must be an ","type":"text"},{"inlineContent":[{"type":"text","text":"equivalence relation"}],"type":"emphasis"},{"type":"text","text":" over the elements. That"},{"type":"text","text":" "},{"type":"text","text":"is, for any elements "},{"type":"codeVoice","code":"a"},{"type":"text","text":", "},{"code":"b","type":"codeVoice"},{"type":"text","text":", and "},{"type":"codeVoice","code":"c"},{"type":"text","text":", the following conditions must"},{"text":" ","type":"text"},{"type":"text","text":"hold:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"areEquivalent(a, a)"},{"text":" is always ","type":"text"},{"type":"codeVoice","code":"true"},{"text":". (Reflexivity)","type":"text"}]}]},{"content":[{"inlineContent":[{"code":"areEquivalent(a, b)","type":"codeVoice"},{"text":" implies ","type":"text"},{"code":"areEquivalent(b, a)","type":"codeVoice"},{"type":"text","text":". (Symmetry)"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"If ","type":"text"},{"type":"codeVoice","code":"areEquivalent(a, b)"},{"text":" and ","type":"text"},{"code":"areEquivalent(b, c)","type":"codeVoice"},{"type":"text","text":" are both "},{"type":"codeVoice","code":"true"},{"type":"text","text":", then"},{"type":"text","text":" "},{"type":"codeVoice","code":"areEquivalent(a, c)"},{"type":"text","text":" is also "},{"type":"codeVoice","code":"true"},{"type":"text","text":". (Transitivity)"}]}]}]},{"type":"aside","content":[{"inlineContent":[{"text":"O(","type":"text"},{"inlineContent":[{"text":"m","type":"text"}],"type":"emphasis"},{"type":"text","text":"), where "},{"inlineContent":[{"type":"text","text":"m"}],"type":"emphasis"},{"text":" is the lesser of the length of the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"sequence and the length of "},{"type":"codeVoice","code":"possiblePrefix"},{"type":"text","text":"."}],"type":"paragraph"}],"name":"Complexity","style":"note"}]}],"metadata":{"title":"starts(with:by:)","modules":[{"name":"Compute","relatedModules":["Swift"]}],"externalID":"s:STsE6starts4with2bySbqd___Sb7ElementQz_ADQyd__tKXEtKSTRd__lF::SYNTHESIZED::s:s18ReversedCollectionV","extendedModule":"Swift","roleHeading":"Instance Method","role":"symbol","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"starts"},{"text":"<","kind":"text"},{"text":"PossiblePrefix","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"with","kind":"externalParam"},{"kind":"text","text":": "},{"text":"PossiblePrefix","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"by"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier","text":"Element"},{"kind":"text","text":", "},{"text":"PossiblePrefix","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:ST7ElementQa"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":") "},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}]},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/ReversedCollection/Sequence-Implementations":{"url":"\/documentation\/compute\/reversedcollection\/sequence-implementations","kind":"article","abstract":[],"title":"Sequence Implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ReversedCollection\/Sequence-Implementations","role":"collectionGroup","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence/Element":{"type":"topic","required":true,"abstract":[{"type":"text","text":"A type representing the sequenceâ€™s elements."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"symbol","url":"\/documentation\/compute\/sequence\/element","role":"symbol","title":"Element","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/ReversedCollection/starts(with:by:)":{"kind":"symbol","title":"starts(with:by:)","url":"\/documentation\/compute\/reversedcollection\/starts(with:by:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"starts","kind":"identifier"},{"kind":"text","text":"<"},{"text":"PossiblePrefix","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"with","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"PossiblePrefix"},{"text":", ","kind":"text"},{"text":"by","kind":"externalParam"},{"kind":"text","text":": ("},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier","text":"Element"},{"kind":"text","text":", "},{"text":"PossiblePrefix","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ReversedCollection\/starts(with:by:)","role":"symbol","abstract":[{"text":"Returns a Boolean value indicating whether the initial elements of the","type":"text"},{"type":"text","text":" "},{"text":"sequence are equivalent to the elements in another sequence, using","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the given predicate as the equivalence test."}],"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence":{"url":"\/documentation\/compute\/sequence","navigatorTitle":[{"kind":"identifier","text":"Sequence"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence","title":"Sequence","kind":"symbol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Sequence","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"A type that provides sequential, iterated access to its elements."}]},"doc://com.swallow.documentation.Compute/documentation/Compute/ReversedCollection":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"ReversedCollection","kind":"identifier"}],"url":"\/documentation\/compute\/reversedcollection","kind":"symbol","abstract":[{"type":"text","text":"A collection that presents the elements of its base collection"},{"text":" ","type":"text"},{"text":"in reverse order.","type":"text"}],"title":"ReversedCollection","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ReversedCollection","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ReversedCollection"}],"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/Bool":{"url":"\/documentation\/compute\/bool","role":"symbol","title":"Bool","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Bool","kind":"identifier"}],"abstract":[{"type":"text","text":"A value type whose instances are either "},{"type":"codeVoice","code":"true"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"false"},{"text":".","type":"text"}],"navigatorTitle":[{"text":"Bool","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bool","kind":"symbol"}}}