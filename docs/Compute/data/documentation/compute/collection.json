{"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"A sequence whose elements can be traversed multiple times,"},{"text":" ","type":"text"},{"text":"nondestructively, and accessed by an indexed subscript.","type":"text"}],"topicSections":[{"title":"Associated Types","identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/Element","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/Index","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/Indices-swift.associatedtype","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/Iterator","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/SubSequence"],"anchor":"Associated-Types","generated":true},{"title":"Instance Properties","anchor":"Instance-Properties","identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/count-4l4qk","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/endIndex","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/first","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/indices-9kkbf","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/isEmpty-35uy0","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/startIndex"],"generated":true},{"identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/distance(from:to:)-4r6r8","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/drop(while:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/dropFirst(_:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/dropLast(_:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/firstIndex(of:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/firstIndex(where:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/flatMap(_:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/formIndex(_:offsetBy:)-393pr","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/formIndex(_:offsetBy:)-9q9sx","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/formIndex(_:offsetBy:limitedBy:)-6jwra","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/formIndex(_:offsetBy:limitedBy:)-6ovn","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/formIndex(after:)-1559g","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/index(_:offsetBy:)-7uz17","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/index(_:offsetBy:limitedBy:)-7u6ae","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/index(after:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/index(of:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/indices(of:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/indices(where:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/makeIterator()-4id5m","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/map(_:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/minimumEditDistance(to:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/popFirst()","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/prefix(_:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/prefix(through:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/prefix(upTo:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/prefix(while:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/randomElement()","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/randomElement(using:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/removeFirst()","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/removeFirst(_:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/removingSubranges(_:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/split(maxSplits:omittingEmptySubsequences:whereSeparator:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/split(separator:maxSplits:omittingEmptySubsequences:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/suffix(_:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/suffix(from:)"],"title":"Instance Methods","generated":true,"anchor":"Instance-Methods"},{"identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/subscript(_:)-1jxub","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/subscript(_:)-887tm"],"generated":true,"title":"Subscripts","anchor":"Subscripts"},{"title":"Type Aliases","identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/IndexDistance"],"anchor":"Type-Aliases","generated":true}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute"]]},"relationshipsSections":[{"identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence"],"type":"inheritsFrom","kind":"relationships","title":"Inherits From"},{"kind":"relationships","title":"Inherited By","identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BidirectionalCollection","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyCollectionProtocol","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/MutableCollection","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/MutableRectangularCollection","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/MutableRowMajorRectangularCollection","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RandomAccessCollection","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RangeReplaceableCollection","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RectangularCollection","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RecursiveCollection","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RowMajorRectangularCollection","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/StringProtocol"],"type":"inheritedBy"},{"type":"conformingTypes","kind":"relationships","title":"Conforming Types","identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyBidirectionalCollection","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyCollection","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyRandomAccessCollection","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Array","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArraySlice","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArrayTreeChildren","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BidirectionalMap","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BranchingArray","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ClosedRange","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CollectionDifference","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CollectionOfOne","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ContiguousArray","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/DefaultIndices","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary\/Keys-swift.struct","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary\/Values-swift.struct","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/DiscontiguousSlice","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/EmptyCollection","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FlattenSequence","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/GraphMatch","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int\/Words-swift.struct","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/Words-swift.struct","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int32\/Words-swift.struct","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int64\/Words-swift.struct","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8\/Words-swift.struct","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/KeyValuePairs","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyDropWhileSequence","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyFilterSequence","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyMapSequence","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyPrefixWhileSequence","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazySequence","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LinkedList","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Matrix","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/PriorityQueue","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Range","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RangeSet\/Ranges-swift.struct","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RecursiveArray","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Repeated","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ReversedCollection","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Set","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/UTF16View","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/UTF8View","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/UnicodeScalarView","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Substring","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Substring\/UTF16View","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Substring\/UTF8View","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Substring\/UnicodeScalarView","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/TreeChains","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt\/Words-swift.struct","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt128\/Words-swift.struct","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/Words-swift.struct","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt32\/Words-swift.struct","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/Words-swift.struct","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8\/Words-swift.struct","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Unicode\/Scalar\/UTF16View","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Unicode\/Scalar\/UTF8View","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeBufferPointer","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableBufferPointer","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableRawBufferPointer","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeRawBufferPointer"]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/collection"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Collection"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sl7ElementQa","text":"Element","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/Element"},{"text":"> : ","kind":"text"},{"kind":"typeIdentifier","text":"Sequence","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence","preciseIdentifier":"s:ST"}],"platforms":["macOS"]}]},{"kind":"content","content":[{"level":2,"text":"Overview","anchor":"overview","type":"heading"},{"inlineContent":[{"type":"text","text":"Collections are used extensively throughout the standard library. When you"},{"text":" ","type":"text"},{"text":"use arrays, dictionaries, and other collections, you benefit from the","type":"text"},{"type":"text","text":" "},{"text":"operations that the ","type":"text"},{"type":"codeVoice","code":"Collection"},{"type":"text","text":" protocol declares and implements. In"},{"type":"text","text":" "},{"type":"text","text":"addition to the operations that collections inherit from the "},{"type":"codeVoice","code":"Sequence"},{"text":" ","type":"text"},{"type":"text","text":"protocol, you gain access to methods that depend on accessing an element"},{"type":"text","text":" "},{"type":"text","text":"at a specific position in a collection."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"For example, if you want to print only the first word in a string, you can"},{"text":" ","type":"text"},{"text":"search for the index of the first space, and then create a substring up to","type":"text"},{"text":" ","type":"text"},{"text":"that position.","type":"text"}],"type":"paragraph"},{"syntax":null,"type":"codeListing","code":["let text = \"Buffalo buffalo buffalo buffalo.\"","if let firstSpace = text.firstIndex(of: \" \") {","    print(text[..<firstSpace])","}","\/\/ Prints \"Buffalo\""]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"firstSpace"},{"text":" constant is an index into the ","type":"text"},{"type":"codeVoice","code":"text"},{"type":"text","text":" string—the position"},{"text":" ","type":"text"},{"type":"text","text":"of the first space in the string. You can store indices in variables, and"},{"type":"text","text":" "},{"text":"pass them to collection algorithms or use them later to access the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"corresponding element. In the example above, "},{"type":"codeVoice","code":"firstSpace"},{"text":" is used to","type":"text"},{"type":"text","text":" "},{"type":"text","text":"extract the prefix that contains elements up to that index."}]},{"anchor":"Accessing-Individual-Elements","level":1,"text":"Accessing Individual Elements","type":"heading"},{"inlineContent":[{"text":"You can access an element of a collection through its subscript by using","type":"text"},{"text":" ","type":"text"},{"text":"any valid index except the collection’s ","type":"text"},{"type":"codeVoice","code":"endIndex"},{"type":"text","text":" property. This property"},{"text":" ","type":"text"},{"type":"text","text":"is a “past the end” index that does not correspond with any element of the"},{"text":" ","type":"text"},{"type":"text","text":"collection."}],"type":"paragraph"},{"inlineContent":[{"text":"Here’s an example of accessing the first character in a string through its","type":"text"},{"type":"text","text":" "},{"type":"text","text":"subscript:"}],"type":"paragraph"},{"type":"codeListing","code":["let firstChar = text[text.startIndex]","print(firstChar)","\/\/ Prints \"B\""],"syntax":null},{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"type":"codeVoice","code":"Collection"},{"text":" protocol declares and provides default implementations for","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"many operations that depend on elements being accessible by their"},{"type":"text","text":" "},{"text":"subscript. For example, you can also access the first character of ","type":"text"},{"code":"text","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"using the "},{"code":"first","type":"codeVoice"},{"type":"text","text":" property, which has the value of the first element of"},{"text":" ","type":"text"},{"text":"the collection, or ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":" if the collection is empty.","type":"text"}]},{"type":"codeListing","syntax":null,"code":["print(text.first)","\/\/ Prints \"Optional(\"B\")\""]},{"type":"paragraph","inlineContent":[{"text":"You can pass only valid indices to collection operations. You can find a","type":"text"},{"type":"text","text":" "},{"text":"complete set of a collection’s valid indices by starting with the","type":"text"},{"type":"text","text":" "},{"text":"collection’s ","type":"text"},{"type":"codeVoice","code":"startIndex"},{"type":"text","text":" property and finding every successor up to, and"},{"text":" ","type":"text"},{"type":"text","text":"including, the "},{"type":"codeVoice","code":"endIndex"},{"text":" property. All other values of the ","type":"text"},{"type":"codeVoice","code":"Index"},{"text":" type,","type":"text"},{"type":"text","text":" "},{"text":"such as the ","type":"text"},{"code":"startIndex","type":"codeVoice"},{"type":"text","text":" property of a different collection, are invalid"},{"text":" ","type":"text"},{"type":"text","text":"indices for this collection."}]},{"type":"paragraph","inlineContent":[{"text":"Saved indices may become invalid as a result of mutating operations. For","type":"text"},{"type":"text","text":" "},{"type":"text","text":"more information about index invalidation in mutable collections, see the"},{"type":"text","text":" "},{"text":"reference for the ","type":"text"},{"type":"codeVoice","code":"MutableCollection"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"RangeReplaceableCollection"},{"text":" ","type":"text"},{"type":"text","text":"protocols, as well as for the specific type you’re using."}]},{"text":"Accessing Slices of a Collection","anchor":"Accessing-Slices-of-a-Collection","type":"heading","level":1},{"inlineContent":[{"text":"You can access a slice of a collection through its ranged subscript or by","type":"text"},{"text":" ","type":"text"},{"text":"calling methods like ","type":"text"},{"type":"codeVoice","code":"prefix(while:)"},{"type":"text","text":" or "},{"type":"codeVoice","code":"suffix(_:)"},{"type":"text","text":". A slice of a"},{"text":" ","type":"text"},{"text":"collection can contain zero or more of the original collection’s elements","type":"text"},{"type":"text","text":" "},{"text":"and shares the original collection’s semantics.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"The following example creates a "},{"type":"codeVoice","code":"firstWord"},{"type":"text","text":" constant by using the"},{"type":"text","text":" "},{"code":"prefix(while:)","type":"codeVoice"},{"text":" method to get a slice of the ","type":"text"},{"code":"text","type":"codeVoice"},{"type":"text","text":" string."}],"type":"paragraph"},{"syntax":null,"type":"codeListing","code":["let firstWord = text.prefix(while: { $0 != \" \" })","print(firstWord)","\/\/ Prints \"Buffalo\""]},{"inlineContent":[{"type":"text","text":"You can retrieve the same slice using the string’s ranged subscript, which"},{"type":"text","text":" "},{"type":"text","text":"takes a range expression."}],"type":"paragraph"},{"code":["if let firstSpace = text.firstIndex(of: \" \") {","    print(text[..<firstSpace]","    \/\/ Prints \"Buffalo\"","}"],"syntax":null,"type":"codeListing"},{"inlineContent":[{"type":"text","text":"The retrieved slice of "},{"code":"text","type":"codeVoice"},{"type":"text","text":" is equivalent in each of these cases."}],"type":"paragraph"},{"type":"heading","anchor":"Slices-Share-Indices","text":"Slices Share Indices","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"A collection and its slices share the same indices. An element of a"},{"type":"text","text":" "},{"text":"collection is located under the same index in a slice as in the base","type":"text"},{"text":" ","type":"text"},{"text":"collection, as long as neither the collection nor the slice has been","type":"text"},{"text":" ","type":"text"},{"text":"mutated since the slice was created.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"For example, suppose you have an array holding the number of absences from","type":"text"},{"type":"text","text":" "},{"text":"each class during a session.","type":"text"}]},{"type":"codeListing","code":["var absences = [0, 2, 0, 4, 0, 3, 1, 0]"],"syntax":null},{"inlineContent":[{"type":"text","text":"You’re tasked with finding the day with the most absences in the second"},{"text":" ","type":"text"},{"type":"text","text":"half of the session. To find the index of the day in question, follow"},{"text":" ","type":"text"},{"type":"text","text":"these steps:"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Create a slice of the "},{"code":"absences","type":"codeVoice"},{"text":" array that holds the second half of the","type":"text"},{"text":" ","type":"text"},{"text":"days.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Use the ","type":"text"},{"type":"codeVoice","code":"max(by:)"},{"text":" method to determine the index of the day with the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"most absences."}]}]},{"content":[{"inlineContent":[{"text":"Print the result using the index found in step 2 on the original","type":"text"},{"type":"text","text":" "},{"code":"absences","type":"codeVoice"},{"type":"text","text":" array."}],"type":"paragraph"}]}],"type":"orderedList"},{"inlineContent":[{"text":"Here’s an implementation of those steps:","type":"text"}],"type":"paragraph"},{"code":["let secondHalf = absences.suffix(absences.count \/ 2)","if let i = secondHalf.indices.max(by: { secondHalf[$0] < secondHalf[$1] }) {","    print(\"Highest second-half absences: \\(absences[i])\")","}","\/\/ Prints \"Highest second-half absences: 3\""],"syntax":null,"type":"codeListing"},{"anchor":"Slices-Inherit-Collection-Semantics","text":"Slices Inherit Collection Semantics","type":"heading","level":2},{"inlineContent":[{"text":"A slice inherits the value or reference semantics of its base collection.","type":"text"},{"type":"text","text":" "},{"text":"That is, when working with a slice of a mutable collection that has value","type":"text"},{"type":"text","text":" "},{"type":"text","text":"semantics, such as an array, mutating the original collection triggers a"},{"type":"text","text":" "},{"type":"text","text":"copy of that collection and does not affect the contents of the slice."}],"type":"paragraph"},{"inlineContent":[{"text":"For example, if you update the last element of the ","type":"text"},{"code":"absences","type":"codeVoice"},{"type":"text","text":" array from"},{"type":"text","text":" "},{"type":"codeVoice","code":"0"},{"type":"text","text":" to "},{"code":"2","type":"codeVoice"},{"type":"text","text":", the "},{"code":"secondHalf","type":"codeVoice"},{"type":"text","text":" slice is unchanged."}],"type":"paragraph"},{"syntax":null,"code":["absences[7] = 2","print(absences)","\/\/ Prints \"[0, 2, 0, 4, 0, 3, 1, 2]\"","print(secondHalf)","\/\/ Prints \"[0, 3, 1, 0]\""],"type":"codeListing"},{"type":"heading","level":1,"text":"Traversing a Collection","anchor":"Traversing-a-Collection"},{"inlineContent":[{"type":"text","text":"Although a sequence can be consumed as it is traversed, a collection is"},{"type":"text","text":" "},{"type":"text","text":"guaranteed to be "},{"type":"emphasis","inlineContent":[{"text":"multipass","type":"text"}]},{"text":": Any element can be repeatedly accessed by","type":"text"},{"type":"text","text":" "},{"text":"saving its index. Moreover, a collection’s indices form a finite range of","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the positions of the collection’s elements. The fact that all collections"},{"type":"text","text":" "},{"text":"are finite guarantees the safety of many sequence operations, such as","type":"text"},{"type":"text","text":" "},{"text":"using the ","type":"text"},{"code":"contains(_:)","type":"codeVoice"},{"text":" method to test whether a collection includes an","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"element."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"Iterating over the elements of a collection by their positions yields the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"same elements in the same order as iterating over that collection using"},{"text":" ","type":"text"},{"type":"text","text":"its iterator. This example demonstrates that the "},{"type":"codeVoice","code":"characters"},{"type":"text","text":" view of a"},{"type":"text","text":" "},{"type":"text","text":"string returns the same characters in the same order whether the view’s"},{"type":"text","text":" "},{"text":"indices or the view itself is being iterated.","type":"text"}]},{"type":"codeListing","syntax":null,"code":["let word = \"Swift\"","for character in word {","    print(character)","}","\/\/ Prints \"S\"","\/\/ Prints \"w\"","\/\/ Prints \"i\"","\/\/ Prints \"f\"","\/\/ Prints \"t\"","","for i in word.indices {","    print(word[i])","}","\/\/ Prints \"S\"","\/\/ Prints \"w\"","\/\/ Prints \"i\"","\/\/ Prints \"f\"","\/\/ Prints \"t\""]},{"text":"Conforming to the Collection Protocol","level":1,"type":"heading","anchor":"Conforming-to-the-Collection-Protocol"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you create a custom sequence that can provide repeated access to its"},{"text":" ","type":"text"},{"text":"elements, make sure that its type conforms to the ","type":"text"},{"code":"Collection","type":"codeVoice"},{"type":"text","text":" protocol in"},{"text":" ","type":"text"},{"type":"text","text":"order to give a more useful and more efficient interface for sequence and"},{"text":" ","type":"text"},{"type":"text","text":"collection operations. To add "},{"type":"codeVoice","code":"Collection"},{"type":"text","text":" conformance to your type, you"},{"text":" ","type":"text"},{"type":"text","text":"must declare at least the following requirements:"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"code":"startIndex","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"endIndex","type":"codeVoice"},{"type":"text","text":" properties"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"A subscript that provides at least read-only access to your type’s","type":"text"},{"text":" ","type":"text"},{"text":"elements","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"code":"index(after:)","type":"codeVoice"},{"text":" method for advancing an index into your collection","type":"text"}]}]}],"type":"unorderedList"},{"text":"Expected Performance","anchor":"Expected-Performance","type":"heading","level":1},{"type":"paragraph","inlineContent":[{"type":"text","text":"Types that conform to "},{"code":"Collection","type":"codeVoice"},{"type":"text","text":" are expected to provide the "},{"code":"startIndex","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"and "},{"code":"endIndex","type":"codeVoice"},{"text":" properties and subscript access to elements as O(1)","type":"text"},{"type":"text","text":" "},{"text":"operations. Types that are not able to guarantee this performance must","type":"text"},{"type":"text","text":" "},{"text":"document the departure, because many collection operations depend on O(1)","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"subscripting performance for their own performance guarantees."}]},{"inlineContent":[{"text":"The performance of some collection operations depends on the type of index","type":"text"},{"type":"text","text":" "},{"type":"text","text":"that the collection provides. For example, a random-access collection,"},{"type":"text","text":" "},{"text":"which can measure the distance between two indices in O(1) time, can","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"calculate its "},{"code":"count","type":"codeVoice"},{"text":" property in O(1) time. Conversely, because a forward","type":"text"},{"type":"text","text":" "},{"text":"or bidirectional collection must traverse the entire collection to count","type":"text"},{"type":"text","text":" "},{"text":"the number of contained elements, accessing its ","type":"text"},{"code":"count","type":"codeVoice"},{"text":" property is an","type":"text"},{"text":" ","type":"text"},{"text":"O(","type":"text"},{"inlineContent":[{"type":"text","text":"n"}],"type":"emphasis"},{"text":") operation.","type":"text"}],"type":"paragraph"}]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"sections":[],"metadata":{"externalID":"s:Sl","modules":[{"name":"Compute"}],"symbolKind":"protocol","navigatorTitle":[{"text":"Collection","kind":"identifier"}],"role":"symbol","title":"Collection","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Collection"}],"roleHeading":"Protocol"},"kind":"symbol","references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Int32/Words-swift.struct":{"url":"\/documentation\/compute\/int32\/words-swift.struct","navigatorTitle":[{"kind":"identifier","text":"Words"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int32\/Words-swift.struct","title":"Int32.Words","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Words","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"A type that represents the words of this integer."}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Substring/UTF16View":{"url":"\/documentation\/compute\/substring\/utf16view","role":"symbol","title":"Substring.UTF16View","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"UTF16View"}],"abstract":[],"navigatorTitle":[{"text":"UTF16View","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Substring\/UTF16View","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Collection/formIndex(_:offsetBy:limitedBy:)-6ovn":{"url":"\/documentation\/compute\/collection\/formindex(_:offsetby:limitedby:)-6ovn","kind":"symbol","type":"topic","deprecated":true,"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/formIndex(_:offsetBy:limitedBy:)-6ovn","abstract":[],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"formIndex","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Index","kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa"},{"kind":"text","text":", "},{"text":"offsetBy","kind":"externalParam"},{"kind":"text","text":": "},{"text":"T","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"limitedBy","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Index","kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa"},{"kind":"text","text":") -> "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"title":"formIndex(_:offsetBy:limitedBy:)","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Matrix":{"role":"symbol","abstract":[],"title":"Matrix","url":"\/documentation\/compute\/matrix","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Matrix","kind":"identifier"}],"navigatorTitle":[{"text":"Matrix","kind":"identifier"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Element","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Copyable"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Escapable"},{"text":".","type":"text"}]},"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Matrix","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/Collection/dropLast(_:)":{"url":"\/documentation\/compute\/collection\/droplast(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"dropLast"},{"text":"(","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:Sl11SubSequenceQa","kind":"typeIdentifier","text":"SubSequence"}],"abstract":[{"type":"text","text":"Returns a subsequence containing all but the specified number of final"},{"type":"text","text":" "},{"text":"elements.","type":"text"}],"kind":"symbol","title":"dropLast(_:)","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/dropLast(_:)","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/RecursiveCollection":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RecursiveCollection","abstract":[],"title":"RecursiveCollection","url":"\/documentation\/compute\/recursivecollection","navigatorTitle":[{"kind":"identifier","text":"RecursiveCollection"}],"type":"topic","role":"symbol","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"RecursiveCollection"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Collection/randomElement()":{"role":"symbol","abstract":[{"type":"text","text":"Returns a random element of the collection."}],"title":"randomElement()","url":"\/documentation\/compute\/collection\/randomelement()","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"randomElement","kind":"identifier"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Element","preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/randomElement()"},"doc://com.swallow.documentation.Compute/documentation/Compute/RowMajorRectangularCollection":{"url":"\/documentation\/compute\/rowmajorrectangularcollection","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"RowMajorRectangularCollection","kind":"identifier"}],"abstract":[],"kind":"symbol","navigatorTitle":[{"text":"RowMajorRectangularCollection","kind":"identifier"}],"title":"RowMajorRectangularCollection","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RowMajorRectangularCollection","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/Collection/minimumEditDistance(to:)":{"role":"symbol","abstract":[{"type":"text","text":"The Levenshtein distance between the receiver and the comparate."}],"title":"minimumEditDistance(to:)","url":"\/documentation\/compute\/collection\/minimumeditdistance(to:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"minimumEditDistance","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"to"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Element","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Equatable"},{"type":"text","text":"."}]},"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/minimumEditDistance(to:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/ArrayTreeChildren":{"url":"\/documentation\/compute\/arraytreechildren","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"ArrayTreeChildren","kind":"identifier"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"TreeValue","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Copyable"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Escapable"},{"text":".","type":"text"}]},"abstract":[],"kind":"symbol","navigatorTitle":[{"text":"ArrayTreeChildren","kind":"identifier"}],"title":"ArrayTreeChildren","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArrayTreeChildren","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/Collection/removeFirst(_:)":{"role":"symbol","abstract":[{"type":"text","text":"Removes the specified number of elements from the beginning of the"},{"type":"text","text":" "},{"text":"collection.","type":"text"}],"title":"removeFirst(_:)","url":"\/documentation\/compute\/collection\/removefirst(_:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"removeFirst"},{"text":"(","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":")","kind":"text"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Self","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Self.SubSequence","type":"codeVoice"},{"text":".","type":"text"}]},"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/removeFirst(_:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/Collection/distance(from:to:)-4r6r8":{"url":"\/documentation\/compute\/collection\/distance(from:to:)-4r6r8","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"distance","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"from"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Index","kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"to"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Index","kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa"},{"text":") -> ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Returns the distance between two indices."}],"kind":"symbol","required":true,"defaultImplementations":4,"title":"distance(from:to:)","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/distance(from:to:)-4r6r8","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/Collection/indices-9kkbf":{"role":"symbol","abstract":[{"type":"text","text":"The indices that are valid for subscripting the collection, in ascending"},{"type":"text","text":" "},{"text":"order.","type":"text"}],"title":"indices","url":"\/documentation\/compute\/collection\/indices-9kkbf","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"indices"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Indices","kind":"typeIdentifier","preciseIdentifier":"s:Sl7IndicesQa"}],"required":true,"defaultImplementations":2,"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/indices-9kkbf"},"doc://com.swallow.documentation.Compute/documentation/Compute/Collection/endIndex":{"url":"\/documentation\/compute\/collection\/endindex","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"endIndex"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Index","kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa"}],"abstract":[{"type":"text","text":"The collection’s “past the end” position—that is, the position one"},{"type":"text","text":" "},{"text":"greater than the last valid subscript argument.","type":"text"}],"kind":"symbol","required":true,"title":"endIndex","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/endIndex","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int64/Words-swift.struct":{"title":"Int64.Words","abstract":[{"text":"A type that represents the words of this integer.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int64\/Words-swift.struct","navigatorTitle":[{"kind":"identifier","text":"Words"}],"url":"\/documentation\/compute\/int64\/words-swift.struct","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Words"}],"kind":"symbol","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Collection/formIndex(_:offsetBy:)-9q9sx":{"role":"symbol","abstract":[],"title":"formIndex(_:offsetBy:)","url":"\/documentation\/compute\/collection\/formindex(_:offsetby:)-9q9sx","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"formIndex","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Index","kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa"},{"kind":"text","text":", "},{"text":"offsetBy","kind":"externalParam"},{"kind":"text","text":": "},{"text":"T","kind":"typeIdentifier"},{"text":")","kind":"text"}],"deprecated":true,"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/formIndex(_:offsetBy:)-9q9sx"},"doc://com.swallow.documentation.Compute/documentation/Compute/MutableCollection":{"role":"symbol","kind":"symbol","type":"topic","title":"MutableCollection","url":"\/documentation\/compute\/mutablecollection","navigatorTitle":[{"text":"MutableCollection","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/MutableCollection","abstract":[{"type":"text","text":"A collection that supports subscript assignment."}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"MutableCollection"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Dictionary/Values-swift.struct":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Values","kind":"identifier"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Key","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Hashable","type":"codeVoice"},{"text":".","type":"text"}]},"role":"symbol","title":"Dictionary.Values","url":"\/documentation\/compute\/dictionary\/values-swift.struct","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary\/Values-swift.struct","abstract":[{"type":"text","text":"A view of a dictionary’s values."}],"type":"topic","navigatorTitle":[{"text":"Values","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/RandomAccessCollection":{"title":"RandomAccessCollection","abstract":[{"text":"A collection that supports efficient random-access index traversal.","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RandomAccessCollection","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RandomAccessCollection","url":"\/documentation\/compute\/randomaccesscollection","navigatorTitle":[{"text":"RandomAccessCollection","kind":"identifier"}],"kind":"symbol","role":"symbol","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int8/Words-swift.struct":{"abstract":[{"type":"text","text":"A type that represents the words of this integer."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8\/Words-swift.struct","type":"topic","kind":"symbol","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Words"}],"url":"\/documentation\/compute\/int8\/words-swift.struct","navigatorTitle":[{"kind":"identifier","text":"Words"}],"title":"Int8.Words"},"doc://com.swallow.documentation.Compute/documentation/Compute/LinkedList":{"url":"\/documentation\/compute\/linkedlist","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"LinkedList","kind":"identifier"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Element","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Copyable"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Escapable"},{"text":".","type":"text"}]},"abstract":[],"kind":"symbol","navigatorTitle":[{"text":"LinkedList","kind":"identifier"}],"title":"LinkedList","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LinkedList","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/Collection/index(of:)":{"abstract":[{"text":"Returns the first index where the specified value appears in the","type":"text"},{"type":"text","text":" "},{"text":"collection.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/index(of:)","kind":"symbol","title":"index(of:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"index","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"of"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Index","kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa"},{"text":"?","kind":"text"}],"type":"topic","role":"symbol","conformance":{"constraints":[{"code":"Element","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Equatable","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"deprecated":true,"url":"\/documentation\/compute\/collection\/index(of:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/Range":{"role":"symbol","abstract":[{"type":"text","text":"A half-open interval from a lower bound up to, but not including, an upper"},{"type":"text","text":" "},{"text":"bound.","type":"text"}],"title":"Range","url":"\/documentation\/compute\/range","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Range"}],"navigatorTitle":[{"text":"Range","kind":"identifier"}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Bound"},{"type":"text","text":" conforms to "},{"code":"Strideable","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"Bound.Stride","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"SignedInteger"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Range"},"doc://com.swallow.documentation.Compute/documentation/Compute/Array":{"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Array","title":"Array","url":"\/documentation\/compute\/array","kind":"symbol","abstract":[{"text":"An ordered, random-access collection.","type":"text"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Array","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"Array"}],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Element","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Copyable","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"Escapable","type":"codeVoice"},{"type":"text","text":"."}]}},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeMutableRawBufferPointer":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableRawBufferPointer","type":"topic","title":"UnsafeMutableRawBufferPointer","kind":"symbol","url":"\/documentation\/compute\/unsafemutablerawbufferpointer","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"UnsafeMutableRawBufferPointer"}],"role":"symbol","navigatorTitle":[{"text":"UnsafeMutableRawBufferPointer","kind":"identifier"}],"abstract":[{"text":"A mutable nonowning collection interface to the bytes in a","type":"text"},{"type":"text","text":" "},{"text":"region of memory.","type":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Collection/Indices-swift.associatedtype":{"url":"\/documentation\/compute\/collection\/indices-swift.associatedtype","role":"symbol","required":true,"fragments":[{"kind":"keyword","text":"associatedtype"},{"text":" ","kind":"text"},{"text":"Indices","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"Collection","kind":"typeIdentifier","preciseIdentifier":"s:Sl"},{"text":" = ","kind":"text"},{"text":"DefaultIndices","kind":"typeIdentifier","preciseIdentifier":"s:SI"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"A type that represents the indices that are valid for subscripting the"},{"text":" ","type":"text"},{"text":"collection, in ascending order.","type":"text"}],"type":"topic","title":"Indices","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/Indices-swift.associatedtype"},"doc://com.swallow.documentation.Compute/documentation/Compute/Collection/prefix(upTo:)":{"url":"\/documentation\/compute\/collection\/prefix(upto:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"prefix"},{"text":"(","kind":"text"},{"text":"upTo","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:Sl5IndexQa","kind":"typeIdentifier","text":"Index"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"SubSequence","kind":"typeIdentifier","preciseIdentifier":"s:Sl11SubSequenceQa"}],"abstract":[{"type":"text","text":"Returns a subsequence from the start of the collection up to, but not"},{"type":"text","text":" "},{"text":"including, the specified position.","type":"text"}],"kind":"symbol","title":"prefix(upTo:)","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/prefix(upTo:)","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/Collection/prefix(_:)":{"role":"symbol","abstract":[{"type":"text","text":"Returns a subsequence, up to the specified maximum length, containing"},{"type":"text","text":" "},{"text":"the initial elements of the collection.","type":"text"}],"title":"prefix(_:)","url":"\/documentation\/compute\/collection\/prefix(_:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"prefix"},{"text":"(","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:Sl11SubSequenceQa","kind":"typeIdentifier","text":"SubSequence"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/prefix(_:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt64/Words-swift.struct":{"navigatorTitle":[{"kind":"identifier","text":"Words"}],"kind":"symbol","role":"symbol","type":"topic","title":"UInt64.Words","abstract":[{"type":"text","text":"A type that represents the words of this integer."}],"url":"\/documentation\/compute\/uint64\/words-swift.struct","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Words","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/Words-swift.struct"},"doc://com.swallow.documentation.Compute/documentation/Compute/Collection/indices(where:)":{"url":"\/documentation\/compute\/collection\/indices(where:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"indices","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"where"},{"text":": (","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"RangeSet","preciseIdentifier":"s:s8RangeSetV","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa","text":"Index"},{"text":">","kind":"text"}],"abstract":[{"type":"text","text":"Returns the indices of all the elements that match the given predicate."}],"kind":"symbol","title":"indices(where:)","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/indices(where:)","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/Collection/split(maxSplits:omittingEmptySubsequences:whereSeparator:)":{"role":"symbol","abstract":[{"type":"text","text":"Returns the longest possible subsequences of the collection, in order,"},{"type":"text","text":" "},{"text":"that don’t contain elements satisfying the given predicate.","type":"text"}],"title":"split(maxSplits:omittingEmptySubsequences:whereSeparator:)","url":"\/documentation\/compute\/collection\/split(maxsplits:omittingemptysubsequences:whereseparator:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"split"},{"text":"(","kind":"text"},{"text":"maxSplits","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"omittingEmptySubsequences"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"text":", ","kind":"text"},{"text":"whereSeparator","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") "},{"text":"rethrows","kind":"keyword"},{"kind":"text","text":" -> ["},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sl11SubSequenceQa","text":"SubSequence"},{"text":"]","kind":"text"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/split(maxSplits:omittingEmptySubsequences:whereSeparator:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/EmptyCollection":{"url":"\/documentation\/compute\/emptycollection","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"EmptyCollection"}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"code":"Copyable","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"Escapable","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"abstract":[{"type":"text","text":"A collection whose element type is "},{"code":"Element","type":"codeVoice"},{"text":" but that is always empty.","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"EmptyCollection","kind":"identifier"}],"title":"EmptyCollection","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/EmptyCollection","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeMutableBufferPointer":{"role":"symbol","abstract":[{"type":"text","text":"A nonowning collection interface to a buffer of mutable"},{"type":"text","text":" "},{"text":"elements stored contiguously in memory.","type":"text"}],"title":"UnsafeMutableBufferPointer","url":"\/documentation\/compute\/unsafemutablebufferpointer","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"UnsafeMutableBufferPointer"}],"navigatorTitle":[{"text":"UnsafeMutableBufferPointer","kind":"identifier"}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"code":"Copyable","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"Escapable","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableBufferPointer"},"doc://com.swallow.documentation.Compute/documentation/Compute/Collection/makeIterator()-4id5m":{"url":"\/documentation\/compute\/collection\/makeiterator()-4id5m","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"makeIterator","kind":"identifier"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Iterator","preciseIdentifier":"s:ST8IteratorQa","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Returns an iterator over the elements of the collection."}],"kind":"symbol","required":true,"defaultImplementations":1,"title":"makeIterator()","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/makeIterator()-4id5m","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/LazyMapSequence":{"role":"symbol","abstract":[{"type":"text","text":"A "},{"code":"Sequence","type":"codeVoice"},{"text":" whose elements consist of those in a ","type":"text"},{"type":"codeVoice","code":"Base"},{"text":" ","type":"text"},{"code":"Sequence","type":"codeVoice"},{"text":" passed through a transform function returning ","type":"text"},{"code":"Element","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"These elements are computed lazily, each time they’re read, by","type":"text"},{"type":"text","text":" "},{"text":"calling the transform function on a base element.","type":"text"}],"title":"LazyMapSequence","url":"\/documentation\/compute\/lazymapsequence","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"LazyMapSequence","kind":"identifier"}],"navigatorTitle":[{"text":"LazyMapSequence","kind":"identifier"}],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Base"},{"text":" conforms to ","type":"text"},{"code":"Collection","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"Element"},{"text":" conforms to ","type":"text"},{"code":"Copyable","type":"codeVoice"},{"text":", and ","type":"text"},{"type":"codeVoice","code":"Element"},{"text":" conforms to ","type":"text"},{"code":"Escapable","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyMapSequence"},"doc://com.swallow.documentation.Compute/documentation/Compute/Collection/map(_:)":{"url":"\/documentation\/compute\/collection\/map(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"map"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"E","kind":"genericParameter"},{"text":">((","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:ST7ElementQa"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":"(","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"T","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"E"},{"kind":"text","text":") -> ["},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":"]"}],"abstract":[{"type":"text","text":"Returns an array containing the results of mapping the given closure"},{"type":"text","text":" "},{"text":"over the sequence’s elements.","type":"text"}],"kind":"symbol","title":"map(_:)","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/map(_:)","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/Collection/suffix(_:)":{"role":"symbol","abstract":[{"type":"text","text":"Returns a subsequence, up to the given maximum length, containing the"},{"type":"text","text":" "},{"text":"final elements of the collection.","type":"text"}],"title":"suffix(_:)","url":"\/documentation\/compute\/collection\/suffix(_:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"suffix","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sl11SubSequenceQa","text":"SubSequence"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/suffix(_:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt8/Words-swift.struct":{"abstract":[{"type":"text","text":"A type that represents the words of this integer."}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Words","kind":"identifier"}],"url":"\/documentation\/compute\/uint8\/words-swift.struct","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8\/Words-swift.struct","title":"UInt8.Words","role":"symbol","type":"topic","navigatorTitle":[{"text":"Words","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/DiscontiguousSlice":{"title":"DiscontiguousSlice","url":"\/documentation\/compute\/discontiguousslice","role":"symbol","type":"topic","abstract":[{"type":"text","text":"A collection wrapper that provides access to the elements of a collection,"},{"text":" ","type":"text"},{"type":"text","text":"indexed by a set of indices."}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Base","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Collection","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/DiscontiguousSlice","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"DiscontiguousSlice"}],"kind":"symbol","navigatorTitle":[{"text":"DiscontiguousSlice","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Collection/removeFirst()":{"kind":"symbol","abstract":[{"type":"text","text":"Removes and returns the first element of the collection."}],"url":"\/documentation\/compute\/collection\/removefirst()","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/removeFirst()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"removeFirst"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:ST7ElementQa","text":"Element","kind":"typeIdentifier"}],"type":"topic","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Self","type":"codeVoice"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Self.SubSequence"},{"type":"text","text":"."}]},"title":"removeFirst()"},"doc://com.swallow.documentation.Compute/documentation/Compute/ClosedRange":{"title":"ClosedRange","url":"\/documentation\/compute\/closedrange","role":"symbol","type":"topic","abstract":[{"text":"An interval from a lower bound up to, and including, an upper bound.","type":"text"}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Bound","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Strideable"},{"text":" and ","type":"text"},{"code":"Bound.Stride","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"SignedInteger"},{"type":"text","text":"."}]},"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ClosedRange","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"ClosedRange","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ClosedRange"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Collection/index(_:offsetBy:)-7uz17":{"required":true,"defaultImplementations":4,"url":"\/documentation\/compute\/collection\/index(_:offsetby:)-7uz17","title":"index(_:offsetBy:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/index(_:offsetBy:)-7uz17","kind":"symbol","type":"topic","abstract":[{"text":"Returns an index that is the specified distance from the given index.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"index"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:Sl5IndexQa","kind":"typeIdentifier","text":"Index"},{"kind":"text","text":", "},{"kind":"externalParam","text":"offsetBy"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa","text":"Index"}],"role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt32/Words-swift.struct":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Words","kind":"identifier"}],"url":"\/documentation\/compute\/uint32\/words-swift.struct","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt32\/Words-swift.struct","abstract":[{"type":"text","text":"A type that represents the words of this integer."}],"title":"UInt32.Words","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Words"}],"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/Dictionary":{"title":"Dictionary","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Dictionary","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary","type":"topic","navigatorTitle":[{"text":"Dictionary","kind":"identifier"}],"abstract":[{"type":"text","text":"A collection whose elements are key-value pairs."}],"conformance":{"constraints":[{"type":"codeVoice","code":"Key"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Hashable"},{"text":", ","type":"text"},{"code":"Value","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Copyable","type":"codeVoice"},{"type":"text","text":", and "},{"code":"Value","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Escapable"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"role":"symbol","kind":"symbol","url":"\/documentation\/compute\/dictionary"},"doc://com.swallow.documentation.Compute/documentation/Compute/FlattenSequence":{"kind":"symbol","abstract":[{"type":"text","text":"A sequence consisting of all the elements contained in each segment"},{"text":" ","type":"text"},{"type":"text","text":"contained in some "},{"type":"codeVoice","code":"Base"},{"text":" sequence.","type":"text"}],"url":"\/documentation\/compute\/flattensequence","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FlattenSequence","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"FlattenSequence"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"FlattenSequence"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Base","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"BidirectionalCollection","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"Base.Element","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"BidirectionalCollection","type":"codeVoice"},{"type":"text","text":"."}]},"title":"FlattenSequence"},"doc://com.swallow.documentation.Compute/documentation/Compute/BidirectionalCollection":{"navigatorTitle":[{"text":"BidirectionalCollection","kind":"identifier"}],"abstract":[{"text":"A collection that supports backward as well as forward traversal.","type":"text"}],"title":"BidirectionalCollection","kind":"symbol","url":"\/documentation\/compute\/bidirectionalcollection","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"BidirectionalCollection"}],"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BidirectionalCollection","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/Unicode/Scalar/UTF8View":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Unicode\/Scalar\/UTF8View","abstract":[],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"UTF8View","kind":"identifier"}],"navigatorTitle":[{"text":"UTF8View","kind":"identifier"}],"title":"Unicode.Scalar.UTF8View","url":"\/documentation\/compute\/unicode\/scalar\/utf8view","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/UnicodeScalarView":{"url":"\/documentation\/compute\/string\/unicodescalarview","abstract":[{"text":"A view of a string’s contents as a collection of Unicode scalar values.","type":"text"}],"kind":"symbol","role":"symbol","title":"String.UnicodeScalarView","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"UnicodeScalarView"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"UnicodeScalarView"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/UnicodeScalarView"},"doc://com.swallow.documentation.Compute/documentation/Compute/Collection/flatMap(_:)":{"title":"flatMap(_:)","url":"\/documentation\/compute\/collection\/flatmap(_:)","role":"symbol","type":"topic","abstract":[],"deprecated":true,"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/flatMap(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"flatMap"},{"kind":"text","text":"(("},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:ST7ElementQa","text":"Element","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":"?) "},{"kind":"keyword","text":"rethrows"},{"text":" -> [","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"text":"]","kind":"text"}],"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt/Words-swift.struct":{"url":"\/documentation\/compute\/uint\/words-swift.struct","abstract":[{"text":"A type that represents the words of this integer.","type":"text"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Words"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt\/Words-swift.struct","title":"UInt.Words","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Words","kind":"identifier"}],"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/Substring/UnicodeScalarView":{"title":"Substring.UnicodeScalarView","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Substring\/UnicodeScalarView","url":"\/documentation\/compute\/substring\/unicodescalarview","kind":"symbol","abstract":[],"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"UnicodeScalarView"}],"role":"symbol","navigatorTitle":[{"text":"UnicodeScalarView","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/ArraySlice":{"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArraySlice","title":"ArraySlice","url":"\/documentation\/compute\/arrayslice","kind":"symbol","abstract":[{"type":"text","text":"A slice of an "},{"type":"codeVoice","code":"Array"},{"text":", ","type":"text"},{"type":"codeVoice","code":"ContiguousArray"},{"text":", or ","type":"text"},{"type":"codeVoice","code":"ArraySlice"},{"type":"text","text":" instance."}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ArraySlice"}],"navigatorTitle":[{"kind":"identifier","text":"ArraySlice"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Element","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Copyable","type":"codeVoice"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Escapable"},{"type":"text","text":"."}]}},"doc://com.swallow.documentation.Compute/documentation/Compute/Collection/Iterator":{"required":true,"kind":"symbol","abstract":[{"text":"A type that provides the collection’s iteration interface and","type":"text"},{"type":"text","text":" "},{"type":"text","text":"encapsulates its iteration state."}],"url":"\/documentation\/compute\/collection\/iterator","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/Iterator","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"Iterator"},{"text":" = ","kind":"text"},{"preciseIdentifier":"s:s16IndexingIteratorV","kind":"typeIdentifier","text":"IndexingIterator"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"type":"topic","title":"Iterator"},"doc://com.swallow.documentation.Compute/documentation/Compute/Dictionary/Keys-swift.struct":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Keys","kind":"identifier"}],"type":"topic","title":"Dictionary.Keys","url":"\/documentation\/compute\/dictionary\/keys-swift.struct","navigatorTitle":[{"kind":"identifier","text":"Keys"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary\/Keys-swift.struct","role":"symbol","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Key"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":"."}]},"abstract":[{"text":"A view of a dictionary’s keys.","type":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt128/Words-swift.struct":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Words"}],"kind":"symbol","title":"UInt128.Words","abstract":[{"type":"text","text":"A type that represents the words of a binary integer."}],"role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Words"}],"url":"\/documentation\/compute\/uint128\/words-swift.struct","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt128\/Words-swift.struct"},"doc://com.swallow.documentation.Compute/documentation/Compute/Collection/IndexDistance":{"deprecated":true,"navigatorTitle":[{"kind":"identifier","text":"IndexDistance"}],"title":"Collection.IndexDistance","url":"\/documentation\/compute\/collection\/indexdistance","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/IndexDistance","kind":"symbol","type":"topic","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"IndexDistance","kind":"identifier"}],"abstract":[],"role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Collection/formIndex(_:offsetBy:limitedBy:)-6jwra":{"title":"formIndex(_:offsetBy:limitedBy:)","abstract":[{"type":"text","text":"Offsets the given index by the specified distance, or so that it equals"},{"text":" ","type":"text"},{"text":"the given limiting index.","type":"text"}],"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"formIndex"},{"kind":"text","text":"("},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Index","preciseIdentifier":"s:Sl5IndexQa"},{"text":", ","kind":"text"},{"text":"offsetBy","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"kind":"text","text":", "},{"kind":"externalParam","text":"limitedBy"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Index","preciseIdentifier":"s:Sl5IndexQa"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"type":"topic","url":"\/documentation\/compute\/collection\/formindex(_:offsetby:limitedby:)-6jwra","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/formIndex(_:offsetBy:limitedBy:)-6jwra"},"doc://com.swallow.documentation.Compute/documentation/Compute/Collection/firstIndex(of:)":{"conformance":{"constraints":[{"type":"codeVoice","code":"Element"},{"text":" conforms to ","type":"text"},{"code":"Equatable","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"title":"firstIndex(of:)","url":"\/documentation\/compute\/collection\/firstindex(of:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/firstIndex(of:)","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"firstIndex","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"of"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:ST7ElementQa","text":"Element","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:Sl5IndexQa","text":"Index","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"abstract":[{"text":"Returns the first index where the specified value appears in the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"collection."}],"role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int16/Words-swift.struct":{"title":"Int16.Words","navigatorTitle":[{"kind":"identifier","text":"Words"}],"abstract":[{"text":"A type that represents the words of this integer.","type":"text"}],"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Words"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/Words-swift.struct","role":"symbol","type":"topic","url":"\/documentation\/compute\/int16\/words-swift.struct"},"doc://com.swallow.documentation.Compute/documentation/Compute/ReversedCollection":{"navigatorTitle":[{"text":"ReversedCollection","kind":"identifier"}],"title":"ReversedCollection","abstract":[{"type":"text","text":"A collection that presents the elements of its base collection"},{"type":"text","text":" "},{"text":"in reverse order.","type":"text"}],"role":"symbol","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ReversedCollection"}],"type":"topic","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Base"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"BidirectionalCollection"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"url":"\/documentation\/compute\/reversedcollection","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ReversedCollection"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/UTF8View":{"url":"\/documentation\/compute\/string\/utf8view","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"UTF8View"}],"role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"UTF8View"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/UTF8View","abstract":[{"text":"A view of a string’s contents as a collection of UTF-8 code units.","type":"text"}],"type":"topic","title":"String.UTF8View"},"doc://com.swallow.documentation.Compute/documentation/Compute/MutableRectangularCollection":{"role":"symbol","url":"\/documentation\/compute\/mutablerectangularcollection","type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/MutableRectangularCollection","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"MutableRectangularCollection"}],"abstract":[{"type":"text","text":"A rectangular collection that supports subscript assignment."}],"navigatorTitle":[{"kind":"identifier","text":"MutableRectangularCollection"}],"kind":"symbol","title":"MutableRectangularCollection"},"doc://com.swallow.documentation.Compute/documentation/Compute/Collection/prefix(while:)":{"title":"prefix(while:)","url":"\/documentation\/compute\/collection\/prefix(while:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/prefix(while:)","kind":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"prefix","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"while"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:ST7ElementQa","text":"Element","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":") "},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"SubSequence","preciseIdentifier":"s:Sl11SubSequenceQa"}],"abstract":[{"type":"text","text":"Returns a subsequence containing the initial elements until "},{"type":"codeVoice","code":"predicate"},{"type":"text","text":" "},{"type":"text","text":"returns "},{"type":"codeVoice","code":"false"},{"text":" and skipping the remaining elements.","type":"text"}],"role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Collection/suffix(from:)":{"title":"suffix(from:)","abstract":[{"text":"Returns a subsequence from the specified position to the end of the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"collection."}],"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"suffix","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"from"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:Sl5IndexQa","kind":"typeIdentifier","text":"Index"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"SubSequence","kind":"typeIdentifier","preciseIdentifier":"s:Sl11SubSequenceQa"}],"type":"topic","url":"\/documentation\/compute\/collection\/suffix(from:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/suffix(from:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/Collection/index(_:offsetBy:limitedBy:)-7u6ae":{"title":"index(_:offsetBy:limitedBy:)","url":"\/documentation\/compute\/collection\/index(_:offsetby:limitedby:)-7u6ae","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/index(_:offsetBy:limitedBy:)-7u6ae","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"index","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Index","preciseIdentifier":"s:Sl5IndexQa"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"offsetBy"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"kind":"text","text":", "},{"text":"limitedBy","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa","text":"Index"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:Sl5IndexQa","kind":"typeIdentifier","text":"Index"},{"text":"?","kind":"text"}],"required":true,"defaultImplementations":4,"abstract":[{"text":"Returns an index that is the specified distance from the given index,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"unless that distance is beyond a given limiting index."}],"role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/String":{"type":"topic","navigatorTitle":[{"kind":"identifier","text":"String"}],"title":"String","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"String","kind":"identifier"}],"abstract":[{"type":"text","text":"A Unicode string value that is a collection of characters."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String","kind":"symbol","role":"symbol","url":"\/documentation\/compute\/string"},"doc://com.swallow.documentation.Compute/documentation/Compute/LazySequence":{"navigatorTitle":[{"kind":"identifier","text":"LazySequence"}],"title":"LazySequence","abstract":[{"type":"text","text":"A sequence containing the same elements as a "},{"type":"codeVoice","code":"Base"},{"text":" sequence, but","type":"text"},{"text":" ","type":"text"},{"text":"on which some operations such as ","type":"text"},{"type":"codeVoice","code":"map"},{"type":"text","text":" and "},{"code":"filter","type":"codeVoice"},{"type":"text","text":" are"},{"type":"text","text":" "},{"type":"text","text":"implemented lazily."}],"role":"symbol","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"LazySequence"}],"type":"topic","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Base"},{"type":"text","text":" conforms to "},{"code":"Collection","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"url":"\/documentation\/compute\/lazysequence","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazySequence"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt16/Words-swift.struct":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Words"}],"navigatorTitle":[{"text":"Words","kind":"identifier"}],"title":"UInt16.Words","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/Words-swift.struct","url":"\/documentation\/compute\/uint16\/words-swift.struct","kind":"symbol","role":"symbol","abstract":[{"text":"A type that represents the words of this integer.","type":"text"}],"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/AnyRandomAccessCollection":{"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyRandomAccessCollection","url":"\/documentation\/compute\/anyrandomaccesscollection","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyRandomAccessCollection"}],"navigatorTitle":[{"kind":"identifier","text":"AnyRandomAccessCollection"}],"title":"AnyRandomAccessCollection","abstract":[{"type":"text","text":"A type-erased wrapper over any collection with indices that"},{"type":"text","text":" "},{"text":"support random access traversal.","type":"text"}],"kind":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Copyable"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Escapable"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]}},"doc://com.swallow.documentation.Compute/documentation/Compute/Collection/SubSequence":{"url":"\/documentation\/compute\/collection\/subsequence","title":"SubSequence","abstract":[{"type":"text","text":"A collection representing a contiguous subrange of this collection’s"},{"type":"text","text":" "},{"text":"elements. The subsequence shares indices with the original collection.","type":"text"}],"type":"topic","kind":"symbol","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SubSequence"},{"kind":"text","text":" : "},{"text":"Collection","preciseIdentifier":"s:Sl","kind":"typeIdentifier"},{"text":" = ","kind":"text"},{"text":"Slice","preciseIdentifier":"s:s5SliceV","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":">","kind":"text"}],"required":true,"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/SubSequence"},"doc://com.swallow.documentation.Compute/documentation/Compute/Collection/Index":{"url":"\/documentation\/compute\/collection\/index","required":true,"role":"symbol","title":"Index","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Index","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"Comparable","preciseIdentifier":"s:SL","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"A type that represents a position in the collection."}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/Index","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/RectangularCollection":{"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"RectangularCollection","kind":"identifier"}],"title":"RectangularCollection","url":"\/documentation\/compute\/rectangularcollection","abstract":[{"type":"text","text":"A sequence whose elements are laid out in a row & column layout."}],"type":"topic","navigatorTitle":[{"text":"RectangularCollection","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RectangularCollection"},"doc://com.swallow.documentation.Compute/documentation/Compute/TreeChains":{"navigatorTitle":[{"text":"TreeChains","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/TreeChains","url":"\/documentation\/compute\/treechains","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TreeChains","kind":"identifier"}],"type":"topic","conformance":{"constraints":[{"type":"codeVoice","code":"Tree"},{"type":"text","text":" conforms to "},{"code":"HomogenousTree","type":"codeVoice"},{"type":"text","text":" and "},{"code":"Tree.Children","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Collection"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"title":"TreeChains","kind":"symbol","abstract":[]},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeBufferPointer":{"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeBufferPointer","url":"\/documentation\/compute\/unsafebufferpointer","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"UnsafeBufferPointer"}],"navigatorTitle":[{"text":"UnsafeBufferPointer","kind":"identifier"}],"title":"UnsafeBufferPointer","abstract":[{"type":"text","text":"A nonowning collection interface to a buffer of"},{"text":" ","type":"text"},{"type":"text","text":"elements stored contiguously in memory."}],"kind":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Copyable"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Escapable"},{"text":".","type":"text"}]}},"doc://com.swallow.documentation.Compute/documentation/Compute/LazyDropWhileSequence":{"navigatorTitle":[{"text":"LazyDropWhileSequence","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyDropWhileSequence","url":"\/documentation\/compute\/lazydropwhilesequence","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LazyDropWhileSequence","kind":"identifier"}],"type":"topic","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Base","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"BidirectionalCollection","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"title":"LazyDropWhileSequence","kind":"symbol","abstract":[{"type":"text","text":"A sequence whose elements consist of the elements that follow the initial"},{"text":" ","type":"text"},{"type":"text","text":"consecutive elements of some base sequence that satisfy a given predicate."}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Slice":{"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice","url":"\/documentation\/compute\/slice","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Slice"}],"navigatorTitle":[{"text":"Slice","kind":"identifier"}],"title":"Slice","abstract":[{"type":"text","text":"A view into a subsequence of elements of another collection."}],"kind":"symbol","conformance":{"constraints":[{"code":"Base","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"RangeReplaceableCollection"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]}},"doc://com.swallow.documentation.Compute/documentation/Compute/Collection/dropFirst(_:)":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/dropFirst(_:)","url":"\/documentation\/compute\/collection\/dropfirst(_:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"dropFirst"},{"kind":"text","text":"("},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"SubSequence","kind":"typeIdentifier","preciseIdentifier":"s:Sl11SubSequenceQa"}],"type":"topic","title":"dropFirst(_:)","kind":"symbol","abstract":[{"type":"text","text":"Returns a subsequence containing all but the given number of initial"},{"type":"text","text":" "},{"type":"text","text":"elements."}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence":{"url":"\/documentation\/compute\/sequence","navigatorTitle":[{"kind":"identifier","text":"Sequence"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence","title":"Sequence","kind":"symbol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Sequence","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"A type that provides sequential, iterated access to its elements."}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Collection/formIndex(_:offsetBy:)-393pr":{"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/formIndex(_:offsetBy:)-393pr","url":"\/documentation\/compute\/collection\/formindex(_:offsetby:)-393pr","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"formIndex","kind":"identifier"},{"kind":"text","text":"("},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Index","preciseIdentifier":"s:Sl5IndexQa"},{"text":", ","kind":"text"},{"text":"offsetBy","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"kind":"text","text":")"}],"title":"formIndex(_:offsetBy:)","abstract":[{"type":"text","text":"Offsets the given index by the specified distance."}],"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/PriorityQueue":{"navigatorTitle":[{"text":"PriorityQueue","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/PriorityQueue","url":"\/documentation\/compute\/priorityqueue","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"PriorityQueue","kind":"identifier"}],"type":"topic","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"T"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Comparable"},{"type":"text","text":"."}]},"title":"PriorityQueue","kind":"symbol","abstract":[{"type":"text","text":"A priority queue."}]},"doc://com.swallow.documentation.Compute/documentation/Compute/DefaultIndices":{"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/DefaultIndices","url":"\/documentation\/compute\/defaultindices","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"DefaultIndices"}],"navigatorTitle":[{"text":"DefaultIndices","kind":"identifier"}],"title":"DefaultIndices","abstract":[{"type":"text","text":"A collection of indices for an arbitrary collection"}],"kind":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Elements","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"RandomAccessCollection"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]}},"doc://com.swallow.documentation.Compute/documentation/Compute/String/UTF16View":{"navigatorTitle":[{"text":"UTF16View","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/UTF16View","kind":"symbol","title":"String.UTF16View","url":"\/documentation\/compute\/string\/utf16view","abstract":[{"text":"A view of a string’s contents as a collection of UTF-16 code units.","type":"text"}],"role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"UTF16View"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Int/Words-swift.struct":{"abstract":[{"type":"text","text":"A type that represents the words of this integer."}],"navigatorTitle":[{"text":"Words","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int\/Words-swift.struct","title":"Int.Words","kind":"symbol","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Words"}],"url":"\/documentation\/compute\/int\/words-swift.struct","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/CollectionOfOne":{"title":"CollectionOfOne","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CollectionOfOne"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CollectionOfOne","type":"topic","navigatorTitle":[{"kind":"identifier","text":"CollectionOfOne"}],"abstract":[{"type":"text","text":"A collection containing a single element."}],"conformance":{"constraints":[{"code":"Element","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Copyable","type":"codeVoice"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Escapable"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","kind":"symbol","url":"\/documentation\/compute\/collectionofone"},"doc://com.swallow.documentation.Compute/documentation/Compute/Collection/index(after:)":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/index(after:)","url":"\/documentation\/compute\/collection\/index(after:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"index"},{"text":"(","kind":"text"},{"text":"after","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa","text":"Index"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Index","preciseIdentifier":"s:Sl5IndexQa"}],"type":"topic","defaultImplementations":1,"title":"index(after:)","kind":"symbol","required":true,"abstract":[{"type":"text","text":"Returns the position immediately after the given index."}]},"doc://com.swallow.documentation.Compute/documentation/Compute/BidirectionalMap":{"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BidirectionalMap","url":"\/documentation\/compute\/bidirectionalmap","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"BidirectionalMap"}],"navigatorTitle":[{"text":"BidirectionalMap","kind":"identifier"}],"title":"BidirectionalMap","abstract":[{"type":"text","text":"A bidirectional map between two "},{"type":"codeVoice","code":"Hashable"},{"text":" types.","type":"text"}],"kind":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Left"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Right"},{"type":"text","text":" conforms to "},{"code":"Hashable","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]}},"doc://com.swallow.documentation.Compute/documentation/Compute/Substring":{"navigatorTitle":[{"kind":"identifier","text":"Substring"}],"url":"\/documentation\/compute\/substring","title":"Substring","abstract":[{"text":"A slice of a string.","type":"text"}],"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Substring","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Substring","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Collection/Element":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/Element","url":"\/documentation\/compute\/collection\/element","role":"symbol","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"identifier"}],"type":"topic","title":"Element","kind":"symbol","required":true,"abstract":[]},"doc://com.swallow.documentation.Compute/documentation/Compute/Collection/formIndex(after:)-1559g":{"required":true,"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/formIndex(after:)-1559g","url":"\/documentation\/compute\/collection\/formindex(after:)-1559g","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"formIndex"},{"kind":"text","text":"("},{"kind":"externalParam","text":"after"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Index","kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa"},{"kind":"text","text":")"}],"defaultImplementations":1,"title":"formIndex(after:)","abstract":[{"text":"Replaces the given index with its successor.","type":"text"}],"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/RecursiveArray":{"type":"topic","role":"symbol","url":"\/documentation\/compute\/recursivearray","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RecursiveArray","title":"RecursiveArray","abstract":[],"navigatorTitle":[{"text":"RecursiveArray","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"RecursiveArray"}],"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Collection/startIndex":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/startIndex","url":"\/documentation\/compute\/collection\/startindex","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"startIndex","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:Sl5IndexQa","text":"Index","kind":"typeIdentifier"}],"type":"topic","title":"startIndex","kind":"symbol","required":true,"abstract":[{"text":"The position of the first element in a nonempty collection.","type":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Collection/subscript(_:)-1jxub":{"url":"\/documentation\/compute\/collection\/subscript(_:)-1jxub","type":"topic","title":"subscript(_:)","required":true,"role":"symbol","defaultImplementations":9,"abstract":[{"text":"Accesses a contiguous subrange of the collection’s elements.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/subscript(_:)-1jxub","fragments":[{"kind":"keyword","text":"subscript"},{"kind":"text","text":"("},{"preciseIdentifier":"s:Sn","text":"Range","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Index","kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa"},{"text":">) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"SubSequence","preciseIdentifier":"s:Sl11SubSequenceQa","kind":"typeIdentifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Collection/prefix(through:)":{"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/prefix(through:)","url":"\/documentation\/compute\/collection\/prefix(through:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"prefix","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"through"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:Sl5IndexQa","text":"Index","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sl11SubSequenceQa","text":"SubSequence"}],"title":"prefix(through:)","abstract":[{"text":"Returns a subsequence from the start of the collection through the","type":"text"},{"type":"text","text":" "},{"text":"specified position.","type":"text"}],"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Collection/firstIndex(where:)":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/firstIndex(where:)","url":"\/documentation\/compute\/collection\/firstindex(where:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"firstIndex"},{"text":"(","kind":"text"},{"text":"where","kind":"externalParam"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:ST7ElementQa"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:Sl5IndexQa","kind":"typeIdentifier","text":"Index"},{"text":"?","kind":"text"}],"type":"topic","title":"firstIndex(where:)","kind":"symbol","abstract":[{"text":"Returns the first index in which an element of the collection satisfies","type":"text"},{"type":"text","text":" "},{"text":"the given predicate.","type":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/LazyFilterSequence":{"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyFilterSequence","url":"\/documentation\/compute\/lazyfiltersequence","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"LazyFilterSequence","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"LazyFilterSequence"}],"title":"LazyFilterSequence","abstract":[{"text":"A sequence whose elements consist of the elements of some base","type":"text"},{"type":"text","text":" "},{"text":"sequence that also satisfy a given predicate.","type":"text"}],"kind":"symbol","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Base"},{"type":"text","text":" conforms to "},{"code":"Collection","type":"codeVoice"},{"text":".","type":"text"}]}},"doc://com.swallow.documentation.Compute/documentation/Compute/BranchingArray":{"navigatorTitle":[{"text":"BranchingArray","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BranchingArray","url":"\/documentation\/compute\/branchingarray","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"BranchingArray","kind":"identifier"}],"type":"topic","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Branch"},{"type":"text","text":" conforms to "},{"code":"Hashable","type":"codeVoice"},{"type":"text","text":" and "},{"code":"Element","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Equatable"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"title":"BranchingArray","kind":"symbol","abstract":[]},"doc://com.swallow.documentation.Compute/documentation/Compute/Unicode/Scalar/UTF16View":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Unicode\/Scalar\/UTF16View","role":"symbol","type":"topic","url":"\/documentation\/compute\/unicode\/scalar\/utf16view","abstract":[],"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"UTF16View","kind":"identifier"}],"navigatorTitle":[{"text":"UTF16View","kind":"identifier"}],"title":"Unicode.Scalar.UTF16View"},"doc://com.swallow.documentation.Compute/documentation/Compute/Repeated":{"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Repeated","url":"\/documentation\/compute\/repeated","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Repeated","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"Repeated"}],"title":"Repeated","abstract":[{"text":"A collection whose elements are all identical.","type":"text"}],"kind":"symbol","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Element"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Copyable"},{"type":"text","text":" and "},{"code":"Escapable","type":"codeVoice"},{"type":"text","text":"."}]}},"doc://com.swallow.documentation.Compute/documentation/Compute/Substring/UTF8View":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"UTF8View","kind":"identifier"}],"title":"Substring.UTF8View","navigatorTitle":[{"kind":"identifier","text":"UTF8View"}],"type":"topic","abstract":[],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Substring\/UTF8View","url":"\/documentation\/compute\/substring\/utf8view","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/RangeReplaceableCollection":{"type":"topic","title":"RangeReplaceableCollection","abstract":[{"text":"A collection that supports replacement of an arbitrary subrange of elements","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"with the elements of another collection."}],"url":"\/documentation\/compute\/rangereplaceablecollection","role":"symbol","kind":"symbol","navigatorTitle":[{"text":"RangeReplaceableCollection","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RangeReplaceableCollection","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"RangeReplaceableCollection","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Collection":{"kind":"symbol","role":"symbol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Collection"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection","url":"\/documentation\/compute\/collection","abstract":[{"type":"text","text":"A sequence whose elements can be traversed multiple times,"},{"text":" ","type":"text"},{"text":"nondestructively, and accessed by an indexed subscript.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Collection"}],"title":"Collection"},"doc://com.swallow.documentation.Compute/documentation/Compute/Collection/randomElement(using:)":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/randomElement(using:)","url":"\/documentation\/compute\/collection\/randomelement(using:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"randomElement","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"using","kind":"externalParam"},{"kind":"text","text":": "},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"T"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier","text":"Element"},{"text":"?","kind":"text"}],"type":"topic","title":"randomElement(using:)","kind":"symbol","abstract":[{"text":"Returns a random element of the collection, using the given generator as","type":"text"},{"type":"text","text":" "},{"text":"a source for randomness.","type":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Set":{"title":"Set","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Set","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Set","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Set"}],"abstract":[{"type":"text","text":"An unordered collection of unique elements."}],"conformance":{"constraints":[{"code":"Element","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Hashable","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"role":"symbol","kind":"symbol","url":"\/documentation\/compute\/set"},"doc://com.swallow.documentation.Compute/documentation/Compute/StringProtocol":{"url":"\/documentation\/compute\/stringprotocol","role":"symbol","abstract":[{"type":"text","text":"A type that can represent a string as a collection of characters."}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/StringProtocol","title":"StringProtocol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StringProtocol","kind":"identifier"}],"navigatorTitle":[{"text":"StringProtocol","kind":"identifier"}],"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Collection/split(separator:maxSplits:omittingEmptySubsequences:)":{"kind":"symbol","type":"topic","abstract":[{"text":"Returns the longest possible subsequences of the collection, in order,","type":"text"},{"type":"text","text":" "},{"text":"around elements equal to the given element.","type":"text"}],"url":"\/documentation\/compute\/collection\/split(separator:maxsplits:omittingemptysubsequences:)","title":"split(separator:maxSplits:omittingEmptySubsequences:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/split(separator:maxSplits:omittingEmptySubsequences:)","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"code":"Equatable","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"split"},{"kind":"text","text":"("},{"text":"separator","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier","text":"Element"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"maxSplits"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"omittingEmptySubsequences"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"kind":"text","text":") -> ["},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:Sl11SubSequenceQa","kind":"typeIdentifier","text":"SubSequence"},{"kind":"text","text":"]"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Collection/first":{"abstract":[{"type":"text","text":"The first element of the collection."}],"title":"first","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/first","type":"topic","url":"\/documentation\/compute\/collection\/first","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"first","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:ST7ElementQa"},{"kind":"text","text":"?"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/AnyBidirectionalCollection":{"title":"AnyBidirectionalCollection","url":"\/documentation\/compute\/anybidirectionalcollection","role":"symbol","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Element","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Copyable","type":"codeVoice"},{"type":"text","text":" and "},{"code":"Escapable","type":"codeVoice"},{"text":".","type":"text"}]},"abstract":[{"type":"text","text":"A type-erased wrapper over any collection with indices that"},{"type":"text","text":" "},{"type":"text","text":"support bidirectional traversal."}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyBidirectionalCollection","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyBidirectionalCollection","kind":"identifier"}],"navigatorTitle":[{"text":"AnyBidirectionalCollection","kind":"identifier"}],"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/Collection/removingSubranges(_:)":{"abstract":[{"text":"Returns a collection of the elements in this collection that are not","type":"text"},{"type":"text","text":" "},{"text":"represented by the given range set.","type":"text"}],"title":"removingSubranges(_:)","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/removingSubranges(_:)","type":"topic","url":"\/documentation\/compute\/collection\/removingsubranges(_:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"removingSubranges"},{"kind":"text","text":"("},{"preciseIdentifier":"s:s8RangeSetV","kind":"typeIdentifier","text":"RangeSet"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Index","kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa"},{"text":">) -> ","kind":"text"},{"text":"DiscontiguousSlice","kind":"typeIdentifier","preciseIdentifier":"s:s18DiscontiguousSliceV"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Collection/popFirst()":{"title":"popFirst()","url":"\/documentation\/compute\/collection\/popfirst()","role":"symbol","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"text":" is ","type":"text"},{"code":"Self.SubSequence","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"abstract":[{"type":"text","text":"Removes and returns the first element of the collection."}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/popFirst()","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"popFirst","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier","text":"Element"},{"text":"?","kind":"text"}],"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/Collection/isEmpty-35uy0":{"abstract":[{"text":"A Boolean value indicating whether the collection is empty.","type":"text"}],"title":"isEmpty","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/isEmpty-35uy0","defaultImplementations":1,"type":"topic","required":true,"url":"\/documentation\/compute\/collection\/isempty-35uy0","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"isEmpty","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Collection/drop(while:)":{"title":"drop(while:)","url":"\/documentation\/compute\/collection\/drop(while:)","role":"symbol","abstract":[{"text":"Returns a subsequence by skipping elements while ","type":"text"},{"code":"predicate","type":"codeVoice"},{"text":" returns","type":"text"},{"type":"text","text":" "},{"code":"true","type":"codeVoice"},{"text":" and returning the remaining elements.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/drop(while:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"drop"},{"kind":"text","text":"("},{"kind":"externalParam","text":"while"},{"text":": (","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"SubSequence","kind":"typeIdentifier","preciseIdentifier":"s:Sl11SubSequenceQa"}],"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/RangeSet/Ranges-swift.struct":{"kind":"symbol","title":"RangeSet.Ranges","type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RangeSet\/Ranges-swift.struct","abstract":[{"type":"text","text":"A collection of the ranges that make up a range set."}],"url":"\/documentation\/compute\/rangeset\/ranges-swift.struct","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Ranges","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"Ranges"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Bound"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Comparable"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]}},"doc://com.swallow.documentation.Compute/documentation/Compute/AnyCollection":{"abstract":[{"text":"A type-erased wrapper over any collection with indices that","type":"text"},{"type":"text","text":" "},{"text":"support forward traversal.","type":"text"}],"title":"AnyCollection","kind":"symbol","navigatorTitle":[{"text":"AnyCollection","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyCollection","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Element"},{"text":" conforms to ","type":"text"},{"code":"Copyable","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Escapable"},{"type":"text","text":"."}]},"type":"topic","url":"\/documentation\/compute\/anycollection","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AnyCollection"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/CollectionDifference":{"title":"CollectionDifference","url":"\/documentation\/compute\/collectiondifference","role":"symbol","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"ChangeElement"},{"text":" conforms to ","type":"text"},{"code":"Copyable","type":"codeVoice"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Escapable"},{"text":".","type":"text"}]},"abstract":[{"type":"text","text":"A collection of insertions and removals that describe the difference"},{"text":" ","type":"text"},{"text":"between two ordered collection states.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CollectionDifference","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CollectionDifference"}],"navigatorTitle":[{"text":"CollectionDifference","kind":"identifier"}],"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/Collection/subscript(_:)-887tm":{"type":"topic","url":"\/documentation\/compute\/collection\/subscript(_:)-887tm","role":"symbol","kind":"symbol","required":true,"fragments":[{"text":"subscript","kind":"keyword"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa","text":"Index"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","text":"Element"}],"abstract":[{"text":"Accesses the element at the specified position.","type":"text"}],"defaultImplementations":9,"title":"subscript(_:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/subscript(_:)-887tm"},"doc://com.swallow.documentation.Compute/documentation/Compute/Collection/indices(of:)":{"abstract":[{"type":"text","text":"Returns the indices of all the elements that are equal to the given"},{"type":"text","text":" "},{"type":"text","text":"element."}],"title":"indices(of:)","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/indices(of:)","conformance":{"constraints":[{"code":"Element","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Equatable","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"type":"topic","url":"\/documentation\/compute\/collection\/indices(of:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"indices","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"of"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:s8RangeSetV","text":"RangeSet","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Index","kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa"},{"kind":"text","text":">"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/LazyCollectionProtocol":{"title":"LazyCollectionProtocol","url":"\/documentation\/compute\/lazycollectionprotocol","role":"symbol","abstract":[],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyCollectionProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"LazyCollectionProtocol"}],"navigatorTitle":[{"text":"LazyCollectionProtocol","kind":"identifier"}],"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/KeyValuePairs":{"abstract":[{"text":"A lightweight collection of key-value pairs.","type":"text"}],"title":"KeyValuePairs","kind":"symbol","navigatorTitle":[{"text":"KeyValuePairs","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/KeyValuePairs","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Key","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Copyable","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"Key"},{"text":" conforms to ","type":"text"},{"code":"Escapable","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"Value"},{"text":" conforms to ","type":"text"},{"code":"Copyable","type":"codeVoice"},{"type":"text","text":", and "},{"code":"Value","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Escapable","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"type":"topic","url":"\/documentation\/compute\/keyvaluepairs","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"KeyValuePairs"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/GraphMatch":{"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/compute\/graphmatch","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/GraphMatch","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"GraphMatch"}],"navigatorTitle":[{"kind":"identifier","text":"GraphMatch"}],"abstract":[{"text":"Represents a matched subgraph in the DAG.","type":"text"}],"title":"GraphMatch"},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeRawBufferPointer":{"title":"UnsafeRawBufferPointer","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeRawBufferPointer","kind":"symbol","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"UnsafeRawBufferPointer","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"UnsafeRawBufferPointer"}],"url":"\/documentation\/compute\/unsaferawbufferpointer","abstract":[{"type":"text","text":"A  nonowning collection interface to the bytes in a"},{"text":" ","type":"text"},{"type":"text","text":"region of memory."}]},"doc://com.swallow.documentation.Compute/documentation/Compute/ContiguousArray":{"title":"ContiguousArray","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"ContiguousArray","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ContiguousArray","type":"topic","navigatorTitle":[{"text":"ContiguousArray","kind":"identifier"}],"abstract":[{"type":"text","text":"A contiguously stored array."}],"conformance":{"constraints":[{"code":"Element","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Copyable","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Escapable"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"role":"symbol","kind":"symbol","url":"\/documentation\/compute\/contiguousarray"},"doc://com.swallow.documentation.Compute/documentation/Compute/LazyPrefixWhileSequence":{"title":"LazyPrefixWhileSequence","url":"\/documentation\/compute\/lazyprefixwhilesequence","role":"symbol","conformance":{"constraints":[{"code":"Base","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Collection"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"abstract":[{"type":"text","text":"A sequence whose elements consist of the initial consecutive elements of"},{"text":" ","type":"text"},{"type":"text","text":"some base sequence that satisfy a given predicate."}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyPrefixWhileSequence","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"LazyPrefixWhileSequence"}],"navigatorTitle":[{"text":"LazyPrefixWhileSequence","kind":"identifier"}],"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/Collection/count-4l4qk":{"abstract":[{"text":"The number of elements in the collection.","type":"text"}],"title":"count","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/count-4l4qk","defaultImplementations":1,"type":"topic","required":true,"url":"\/documentation\/compute\/collection\/count-4l4qk","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"count","kind":"identifier"},{"kind":"text","text":": "},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/MutableRowMajorRectangularCollection":{"title":"MutableRowMajorRectangularCollection","url":"\/documentation\/compute\/mutablerowmajorrectangularcollection","role":"symbol","abstract":[],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/MutableRowMajorRectangularCollection","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"MutableRowMajorRectangularCollection","kind":"identifier"}],"navigatorTitle":[{"text":"MutableRowMajorRectangularCollection","kind":"identifier"}],"type":"topic"}}}