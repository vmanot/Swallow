{"schemaVersion":{"major":0,"patch":0,"minor":3},"variants":[{"paths":["\/documentation\/compute\/binaryinteger\/init(truncatingifneeded:)-5b20c"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"Creates a new instance from the bit pattern of the given instance by"},{"text":" ","type":"text"},{"text":"sign-extending or truncating to fit this type.","type":"text"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryInteger\/init(truncatingIfNeeded:)-5b20c"},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryInteger"]]},"kind":"symbol","primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"truncatingIfNeeded","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"source","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryInteger","kind":"typeIdentifier","preciseIdentifier":"s:Sz","text":"BinaryInteger"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"An integer to convert to this type."}]}],"name":"source"}]},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"When the bit width of "},{"type":"codeVoice","code":"T"},{"type":"text","text":" (the type of "},{"type":"codeVoice","code":"source"},{"type":"text","text":") is equal to or greater"},{"type":"text","text":" "},{"text":"than this type’s bit width, the result is the truncated","type":"text"},{"type":"text","text":" "},{"type":"text","text":"least-significant bits of "},{"type":"codeVoice","code":"source"},{"type":"text","text":". For example, when converting a"},{"text":" ","type":"text"},{"text":"16-bit value to an 8-bit type, only the lower 8 bits of ","type":"text"},{"code":"source","type":"codeVoice"},{"text":" are","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"used."}],"type":"paragraph"},{"syntax":null,"code":["let p: Int16 = -500","\/\/ 'p' has a binary representation of 11111110_00001100","let q = Int8(truncatingIfNeeded: p)","\/\/ q == 12","\/\/ 'q' has a binary representation of 00001100"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"When the bit width of "},{"type":"codeVoice","code":"T"},{"type":"text","text":" is less than this type’s bit width, the result"},{"type":"text","text":" "},{"type":"text","text":"is "},{"inlineContent":[{"type":"text","text":"sign-extended"}],"type":"emphasis"},{"text":" to fill the remaining bits. That is, if ","type":"text"},{"type":"codeVoice","code":"source"},{"text":" is","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"negative, the result is padded with ones; otherwise, the result is"},{"text":" ","type":"text"},{"text":"padded with zeros.","type":"text"}],"type":"paragraph"},{"syntax":null,"code":["let u: Int8 = 21","\/\/ 'u' has a binary representation of 00010101","let v = Int16(truncatingIfNeeded: u)","\/\/ v == 21","\/\/ 'v' has a binary representation of 00000000_00010101","","let w: Int8 = -21","\/\/ 'w' has a binary representation of 11101011","let x = Int16(truncatingIfNeeded: w)","\/\/ x == -21","\/\/ 'x' has a binary representation of 11111111_11101011","let y = UInt16(truncatingIfNeeded: w)","\/\/ y == 65515","\/\/ 'y' has a binary representation of 11111111_11101011"],"type":"codeListing"}]}],"metadata":{"roleHeading":"Initializer","externalID":"s:Sz18truncatingIfNeededxqd___tcSzRd__lufc","required":true,"fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"text":"truncatingIfNeeded","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":")"}],"role":"symbol","title":"init(truncatingIfNeeded:)","symbolKind":"init","modules":[{"name":"Compute"}]},"sections":[],"defaultImplementationsSections":[{"title":"BinaryInteger Implementations","identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryInteger\/init(truncatingIfNeeded:)-54a40"],"anchor":"BinaryInteger-Implementations"}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/BinaryInteger/init(truncatingIfNeeded:)-5b20c":{"role":"symbol","kind":"symbol","required":true,"title":"init(truncatingIfNeeded:)","url":"\/documentation\/compute\/binaryinteger\/init(truncatingifneeded:)-5b20c","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"truncatingIfNeeded"},{"kind":"text","text":": "},{"text":"T","kind":"typeIdentifier"},{"text":")","kind":"text"}],"abstract":[{"type":"text","text":"Creates a new instance from the bit pattern of the given instance by"},{"type":"text","text":" "},{"type":"text","text":"sign-extending or truncating to fit this type."}],"type":"topic","defaultImplementations":1,"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryInteger\/init(truncatingIfNeeded:)-5b20c"},"doc://com.swallow.documentation.Compute/documentation/Compute/BinaryInteger":{"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"BinaryInteger"}],"navigatorTitle":[{"kind":"identifier","text":"BinaryInteger"}],"url":"\/documentation\/compute\/binaryinteger","type":"topic","abstract":[{"type":"text","text":"An integer type with a binary representation."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryInteger","title":"BinaryInteger","kind":"symbol","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/BinaryInteger/init(truncatingIfNeeded:)-54a40":{"abstract":[{"type":"text","text":"Creates a new instance from the bit pattern of the given instance by"},{"type":"text","text":" "},{"type":"text","text":"truncating or sign-extending if needed to fit this type."}],"title":"init(truncatingIfNeeded:)","role":"symbol","url":"\/documentation\/compute\/binaryinteger\/init(truncatingifneeded:)-54a40","fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"text":"truncatingIfNeeded","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":")","kind":"text"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryInteger\/init(truncatingIfNeeded:)-54a40","type":"topic"}}}