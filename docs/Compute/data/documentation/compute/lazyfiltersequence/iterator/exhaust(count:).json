{"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyFilterSequence\/Iterator\/exhaust(count:)","interfaceLanguage":"swift"},"sections":[],"schemaVersion":{"minor":3,"major":0,"patch":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"mutating","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"exhaust","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"N"},{"text":">(","kind":"text"},{"text":"count","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"N"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:St7ElementQa","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/IteratorProtocol\/Element"},{"kind":"text","text":"? "},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"N"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Numeric","kind":"typeIdentifier","preciseIdentifier":"s:Sj","text":"Numeric"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"N"},{"kind":"text","text":" : "},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Strideable","text":"Strideable","kind":"typeIdentifier","preciseIdentifier":"s:Sx"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"N"},{"kind":"text","text":"."},{"text":"Stride","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Strideable\/Stride","kind":"typeIdentifier","preciseIdentifier":"s:Sx6StrideQa"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SZ","text":"SignedInteger","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SignedInteger"}]}]}],"metadata":{"role":"symbol","modules":[{"relatedModules":["Swift"],"name":"Compute"}],"extendedModule":"Swift","title":"exhaust(count:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"exhaust","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"N"},{"text":">(","kind":"text"},{"text":"count","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"N","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:St7ElementQa"},{"kind":"text","text":"?"}],"symbolKind":"method","externalID":"s:St7SwallowE7exhaust5count7ElementQzSgqd___tSjRd__SxRd__SZ6StrideSxRpd__lF::SYNTHESIZED::s:s18LazyFilterSequenceV8IteratorV","roleHeading":"Instance Method"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyFilterSequence","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyFilterSequence\/Sequence-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyFilterSequence\/Iterator","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyFilterSequence\/Iterator\/IteratorProtocol-Implementations"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/lazyfiltersequence\/iterator\/exhaust(count:)"]}],"abstract":[{"text":"Inherited from ","type":"text"},{"code":"IteratorProtocol.exhaust(count:)","type":"codeVoice"},{"type":"text","text":"."}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/IteratorProtocol/Element":{"fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"text":"Element","kind":"identifier"}],"type":"topic","url":"\/documentation\/compute\/iteratorprotocol\/element","abstract":[{"text":"The type of element traversed by the iterator.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/IteratorProtocol\/Element","title":"Element","kind":"symbol","required":true,"role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/LazyFilterSequence/Iterator":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Iterator"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyFilterSequence\/Iterator","abstract":[{"text":"An iterator over the elements traversed by some base iterator that also","type":"text"},{"type":"text","text":" "},{"text":"satisfy a given predicate.","type":"text"}],"title":"LazyFilterSequence.Iterator","url":"\/documentation\/compute\/lazyfiltersequence\/iterator","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Iterator"}],"conformance":{"constraints":[{"code":"Base","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sequence"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/Numeric":{"abstract":[{"type":"text","text":"A type with values that support multiplication."}],"kind":"symbol","url":"\/documentation\/compute\/numeric","navigatorTitle":[{"text":"Numeric","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Numeric","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Numeric"}],"title":"Numeric"},"doc://com.swallow.documentation.Compute/documentation/Compute/LazyFilterSequence/Iterator/IteratorProtocol-Implementations":{"kind":"article","type":"topic","url":"\/documentation\/compute\/lazyfiltersequence\/iterator\/iteratorprotocol-implementations","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyFilterSequence\/Iterator\/IteratorProtocol-Implementations","role":"collectionGroup","title":"IteratorProtocol Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/LazyFilterSequence/Iterator/exhaust(count:)":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyFilterSequence\/Iterator\/exhaust(count:)","type":"topic","title":"exhaust(count:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"exhaust","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"N"},{"kind":"text","text":">("},{"text":"count","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"N"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Element","preciseIdentifier":"s:St7ElementQa","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"url":"\/documentation\/compute\/lazyfiltersequence\/iterator\/exhaust(count:)","role":"symbol","kind":"symbol","abstract":[]},"doc://com.swallow.documentation.Compute/documentation/Compute/LazyFilterSequence":{"kind":"symbol","navigatorTitle":[{"text":"LazyFilterSequence","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyFilterSequence","abstract":[{"type":"text","text":"A sequence whose elements consist of the elements of some base"},{"type":"text","text":" "},{"type":"text","text":"sequence that also satisfy a given predicate."}],"title":"LazyFilterSequence","url":"\/documentation\/compute\/lazyfiltersequence","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"LazyFilterSequence","kind":"identifier"}],"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/Strideable/Stride":{"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/compute\/strideable\/stride","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Strideable\/Stride","required":true,"fragments":[{"kind":"keyword","text":"associatedtype"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Stride"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SL","text":"Comparable"},{"text":", ","kind":"text"},{"text":"SignedNumeric","kind":"typeIdentifier","preciseIdentifier":"s:s13SignedNumericP"}],"abstract":[{"type":"text","text":"A type that represents the distance between two values."}],"title":"Stride"},"doc://com.swallow.documentation.Compute/documentation/Compute/SignedInteger":{"abstract":[{"type":"text","text":"An integer type that can represent both positive and negative values."}],"kind":"symbol","url":"\/documentation\/compute\/signedinteger","navigatorTitle":[{"kind":"identifier","text":"SignedInteger"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SignedInteger","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"SignedInteger","kind":"identifier"}],"title":"SignedInteger"},"doc://com.swallow.documentation.Compute/documentation/Compute/LazyFilterSequence/Sequence-Implementations":{"kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyFilterSequence\/Sequence-Implementations","abstract":[],"title":"Sequence Implementations","url":"\/documentation\/compute\/lazyfiltersequence\/sequence-implementations","role":"collectionGroup","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/Strideable":{"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/compute\/strideable","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Strideable","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Strideable"}],"navigatorTitle":[{"text":"Strideable","kind":"identifier"}],"abstract":[{"type":"text","text":"A type representing continuous, one-dimensional values that can be offset"},{"type":"text","text":" "},{"type":"text","text":"and measured."}],"title":"Strideable"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"}}}