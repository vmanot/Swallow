{"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"compact","kind":"identifier"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:7Swallow15CompactSequenceV","text":"CompactSequence","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":">","kind":"text"}]}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyFilterSequence\/Iterator\/compact()"},"metadata":{"role":"symbol","modules":[{"name":"Compute","relatedModules":["Swift"]}],"roleHeading":"Instance Method","symbolKind":"method","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Element"},{"text":" conforms to ","type":"text"},{"code":"OptionalProtocol","type":"codeVoice"},{"type":"text","text":"."}]},"extendedModule":"Swift","title":"compact()","externalID":"s:ST7SwallowAA16OptionalProtocol7ElementRpzrlE7compactAA15CompactSequenceVyxGyF::SYNTHESIZED::s:s18LazyFilterSequenceV8IteratorV","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"compact"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:7Swallow15CompactSequenceV","text":"CompactSequence","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":">","kind":"text"}]},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyFilterSequence","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyFilterSequence\/Sequence-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyFilterSequence\/Iterator","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyFilterSequence\/Iterator\/Sequence-Implementations"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/lazyfiltersequence\/iterator\/compact()"]}],"abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"Sequence.compact()"},{"text":".","type":"text"}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/LazyFilterSequence/Sequence-Implementations":{"kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyFilterSequence\/Sequence-Implementations","abstract":[],"title":"Sequence Implementations","url":"\/documentation\/compute\/lazyfiltersequence\/sequence-implementations","role":"collectionGroup","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/LazyFilterSequence/Iterator/Sequence-Implementations":{"kind":"article","type":"topic","url":"\/documentation\/compute\/lazyfiltersequence\/iterator\/sequence-implementations","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyFilterSequence\/Iterator\/Sequence-Implementations","role":"collectionGroup","title":"Sequence Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/LazyFilterSequence/Iterator":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Iterator"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyFilterSequence\/Iterator","abstract":[{"text":"An iterator over the elements traversed by some base iterator that also","type":"text"},{"type":"text","text":" "},{"text":"satisfy a given predicate.","type":"text"}],"title":"LazyFilterSequence.Iterator","url":"\/documentation\/compute\/lazyfiltersequence\/iterator","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Iterator"}],"conformance":{"constraints":[{"code":"Base","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sequence"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/LazyFilterSequence":{"kind":"symbol","navigatorTitle":[{"text":"LazyFilterSequence","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyFilterSequence","abstract":[{"type":"text","text":"A sequence whose elements consist of the elements of some base"},{"type":"text","text":" "},{"type":"text","text":"sequence that also satisfy a given predicate."}],"title":"LazyFilterSequence","url":"\/documentation\/compute\/lazyfiltersequence","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"LazyFilterSequence","kind":"identifier"}],"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/LazyFilterSequence/Iterator/compact()":{"type":"topic","url":"\/documentation\/compute\/lazyfiltersequence\/iterator\/compact()","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyFilterSequence\/Iterator\/compact()","abstract":[],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"compact","kind":"identifier"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"CompactSequence","preciseIdentifier":"s:7Swallow15CompactSequenceV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"kind":"symbol","title":"compact()","role":"symbol","conformance":{"constraints":[{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"OptionalProtocol"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]}}}}