{"sections":[],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"dropFirst","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"text":"k","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":" = 1) -> "},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/DropFirstSequence","text":"DropFirstSequence","preciseIdentifier":"s:s17DropFirstSequenceV","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"k","content":[{"inlineContent":[{"type":"text","text":"The number of elements to drop from the beginning of"},{"text":" ","type":"text"},{"type":"text","text":"the sequence. "},{"code":"k","type":"codeVoice"},{"type":"text","text":" must be greater than or equal to zero."}],"type":"paragraph"}]}]},{"content":[{"text":"Return Value","anchor":"return-value","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A sequence starting after the specified number of"},{"text":" ","type":"text"},{"type":"text","text":"elements."}]}],"kind":"content"},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"If the number of elements to drop exceeds the number of elements in"},{"text":" ","type":"text"},{"text":"the sequence, the result is an empty sequence.","type":"text"}]},{"syntax":null,"type":"codeListing","code":["let numbers = [1, 2, 3, 4, 5]","print(numbers.dropFirst(2))","\/\/ Prints \"[3, 4, 5]\"","print(numbers.dropFirst(10))","\/\/ Prints \"[]\""]},{"style":"note","name":"Complexity","type":"aside","content":[{"inlineContent":[{"text":"O(1), with O(","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"k"}]},{"text":") deferred to each iteration of the result,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"where "},{"inlineContent":[{"text":"k","type":"text"}],"type":"emphasis"},{"type":"text","text":" is the number of elements to drop from the beginning of"},{"type":"text","text":" "},{"text":"the sequence.","type":"text"}],"type":"paragraph"}]}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyFilterSequence\/Iterator\/dropFirst(_:)"},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyFilterSequence","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyFilterSequence\/Sequence-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyFilterSequence\/Iterator","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyFilterSequence\/Iterator\/Sequence-Implementations"]]},"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"title":"dropFirst(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"dropFirst"},{"kind":"text","text":"("},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":") -> ","kind":"text"},{"text":"DropFirstSequence","kind":"typeIdentifier","preciseIdentifier":"s:s17DropFirstSequenceV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}],"roleHeading":"Instance Method","role":"symbol","symbolKind":"method","extendedModule":"Swift","modules":[{"name":"Compute","relatedModules":["Swift"]}],"externalID":"s:STsE9dropFirstys04DropB8SequenceVyxGSiF::SYNTHESIZED::s:s18LazyFilterSequenceV8IteratorV"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/lazyfiltersequence\/iterator\/dropfirst(_:)"]}],"abstract":[{"type":"text","text":"Returns a sequence containing all but the given number of initial"},{"text":" ","type":"text"},{"text":"elements.","type":"text"}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/LazyFilterSequence/Iterator":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Iterator"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyFilterSequence\/Iterator","abstract":[{"text":"An iterator over the elements traversed by some base iterator that also","type":"text"},{"type":"text","text":" "},{"text":"satisfy a given predicate.","type":"text"}],"title":"LazyFilterSequence.Iterator","url":"\/documentation\/compute\/lazyfiltersequence\/iterator","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Iterator"}],"conformance":{"constraints":[{"code":"Base","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sequence"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","abstract":[{"type":"text","text":"A signed integer value type."}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Int","kind":"identifier"}],"navigatorTitle":[{"text":"Int","kind":"identifier"}],"title":"Int","url":"\/documentation\/compute\/int","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/LazyFilterSequence":{"kind":"symbol","navigatorTitle":[{"text":"LazyFilterSequence","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyFilterSequence","abstract":[{"type":"text","text":"A sequence whose elements consist of the elements of some base"},{"type":"text","text":" "},{"type":"text","text":"sequence that also satisfy a given predicate."}],"title":"LazyFilterSequence","url":"\/documentation\/compute\/lazyfiltersequence","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"LazyFilterSequence","kind":"identifier"}],"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/LazyFilterSequence/Iterator/Sequence-Implementations":{"kind":"article","type":"topic","url":"\/documentation\/compute\/lazyfiltersequence\/iterator\/sequence-implementations","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyFilterSequence\/Iterator\/Sequence-Implementations","role":"collectionGroup","title":"Sequence Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/LazyFilterSequence/Sequence-Implementations":{"kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyFilterSequence\/Sequence-Implementations","abstract":[],"title":"Sequence Implementations","url":"\/documentation\/compute\/lazyfiltersequence\/sequence-implementations","role":"collectionGroup","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/LazyFilterSequence/Iterator/dropFirst(_:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"dropFirst","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:s17DropFirstSequenceV","kind":"typeIdentifier","text":"DropFirstSequence"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"title":"dropFirst(_:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyFilterSequence\/Iterator\/dropFirst(_:)","abstract":[{"text":"Returns a sequence containing all but the given number of initial","type":"text"},{"text":" ","type":"text"},{"text":"elements.","type":"text"}],"url":"\/documentation\/compute\/lazyfiltersequence\/iterator\/dropfirst(_:)","role":"symbol","type":"topic","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/DropFirstSequence":{"abstract":[{"type":"text","text":"A sequence that lazily consumes and drops "},{"type":"codeVoice","code":"n"},{"type":"text","text":" elements from an underlying"},{"text":" ","type":"text"},{"code":"Base","type":"codeVoice"},{"type":"text","text":" iterator before possibly returning the first available element."}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"DropFirstSequence"}],"type":"topic","role":"symbol","url":"\/documentation\/compute\/dropfirstsequence","navigatorTitle":[{"kind":"identifier","text":"DropFirstSequence"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/DropFirstSequence","title":"DropFirstSequence","kind":"symbol"}}}