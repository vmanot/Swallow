{"schemaVersion":{"patch":0,"major":0,"minor":3},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"index"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"i"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyFilterSequence","kind":"typeIdentifier","text":"LazyFilterSequence","preciseIdentifier":"s:s18LazyFilterSequenceV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Base"},{"kind":"text","text":">."},{"kind":"typeIdentifier","text":"Index"},{"text":", ","kind":"text"},{"text":"offsetBy","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"n"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":", ","kind":"text"},{"text":"limitedBy","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"limit"},{"kind":"text","text":": "},{"text":"LazyFilterSequence","preciseIdentifier":"s:s18LazyFilterSequenceV","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyFilterSequence","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Base"},{"text":">.","kind":"text"},{"text":"Index","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyFilterSequence","text":"LazyFilterSequence","preciseIdentifier":"s:s18LazyFilterSequenceV","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Base"},{"kind":"text","text":">."},{"text":"Index","kind":"typeIdentifier"},{"kind":"text","text":"?"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"A valid index of the collection."}],"type":"paragraph"}],"name":"i"},{"content":[{"inlineContent":[{"text":"A valid index of the collection to use as a limit. If","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"distance > 0"},{"type":"text","text":", a limit that is less than "},{"code":"i","type":"codeVoice"},{"text":" has no effect.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Likewise, if "},{"code":"distance < 0","type":"codeVoice"},{"text":", a limit that is greater than ","type":"text"},{"type":"codeVoice","code":"i"},{"type":"text","text":" has no"},{"text":" ","type":"text"},{"type":"text","text":"effect."}],"type":"paragraph"}],"name":"limit"}]},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"return-value","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"An index offset by "},{"type":"codeVoice","code":"distance"},{"text":" from the index ","type":"text"},{"type":"codeVoice","code":"i"},{"type":"text","text":", unless that"},{"type":"text","text":" "},{"type":"text","text":"index would be beyond "},{"type":"codeVoice","code":"limit"},{"text":" in the direction of movement. In that","type":"text"},{"type":"text","text":" "},{"text":"case, the method returns ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"}]}]},{"content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The following example obtains an index advanced four positions from a"},{"type":"text","text":" "},{"type":"text","text":"string’s starting index and then prints the character at that position."},{"type":"text","text":" "},{"type":"text","text":"The operation doesn’t require going beyond the limiting "},{"code":"s.endIndex","type":"codeVoice"},{"text":" ","type":"text"},{"type":"text","text":"value, so it succeeds."}]},{"syntax":null,"code":["let s = \"Swift\"","if let i = s.index(s.startIndex, offsetBy: 4, limitedBy: s.endIndex) {","    print(s[i])","}","\/\/ Prints \"t\""],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"The next example attempts to retrieve an index six positions from","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"s.startIndex"},{"text":" but fails, because that distance is beyond the index","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"passed as "},{"type":"codeVoice","code":"limit"},{"type":"text","text":"."}]},{"syntax":null,"type":"codeListing","code":["let j = s.index(s.startIndex, offsetBy: 6, limitedBy: s.endIndex)","print(j)","\/\/ Prints \"nil\""]},{"type":"paragraph","inlineContent":[{"text":"The value passed as ","type":"text"},{"code":"distance","type":"codeVoice"},{"type":"text","text":" must not offset "},{"type":"codeVoice","code":"i"},{"type":"text","text":" beyond the bounds of"},{"type":"text","text":" "},{"type":"text","text":"the collection, unless the index passed as "},{"code":"limit","type":"codeVoice"},{"text":" prevents offsetting","type":"text"},{"type":"text","text":" "},{"type":"text","text":"beyond those bounds."}]},{"content":[{"inlineContent":[{"text":"O(1) if the collection conforms to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"RandomAccessCollection"},{"text":"; otherwise, O(","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"k"}]},{"text":"), where ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"k"}]},{"text":" is the absolute","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"value of "},{"type":"codeVoice","code":"distance"},{"type":"text","text":"."}],"type":"paragraph"}],"style":"note","name":"Complexity","type":"aside"}],"kind":"content"}],"abstract":[{"type":"text","text":"Returns an index that is the specified distance from the given index,"},{"type":"text","text":" "},{"text":"unless that distance is beyond a given limiting index.","type":"text"}],"metadata":{"roleHeading":"Instance Method","role":"symbol","symbolKind":"method","extendedModule":"Swift","conformance":{"constraints":[{"type":"codeVoice","code":"Base"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Collection"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"modules":[{"name":"Compute","relatedModules":["Swift"]}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"index","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:s18LazyFilterSequenceV","text":"LazyFilterSequence","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Base"},{"text":">.","kind":"text"},{"kind":"typeIdentifier","text":"Index"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"offsetBy"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":", "},{"kind":"externalParam","text":"limitedBy"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s18LazyFilterSequenceV","text":"LazyFilterSequence","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Base","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"text":"Index","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:s18LazyFilterSequenceV","kind":"typeIdentifier","text":"LazyFilterSequence"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Base"},{"text":">.","kind":"text"},{"kind":"typeIdentifier","text":"Index"},{"text":"?","kind":"text"}],"title":"index(_:offsetBy:limitedBy:)","externalID":"s:s18LazyFilterSequenceVsSlRzrlE5index_8offsetBy07limitedF05IndexQzSgAG_SiAGtF"},"sections":[],"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyFilterSequence\/index(_:offsetBy:limitedBy:)-29l06","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/compute\/lazyfiltersequence\/index(_:offsetby:limitedby:)-29l06"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyFilterSequence","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyFilterSequence\/Collection-Implementations"]]},"kind":"symbol","references":{"doc://com.swallow.documentation.Compute/documentation/Compute/LazyFilterSequence/index(_:offsetBy:limitedBy:)-29l06":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyFilterSequence\/index(_:offsetBy:limitedBy:)-29l06","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"index","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:s18LazyFilterSequenceV","text":"LazyFilterSequence","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Base"},{"kind":"text","text":">."},{"text":"Index","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"offsetBy","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":", "},{"text":"limitedBy","kind":"externalParam"},{"kind":"text","text":": "},{"text":"LazyFilterSequence","kind":"typeIdentifier","preciseIdentifier":"s:s18LazyFilterSequenceV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Base"},{"kind":"text","text":">."},{"text":"Index","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s18LazyFilterSequenceV","text":"LazyFilterSequence"},{"kind":"text","text":"<"},{"text":"Base","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"text":"Index","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Base"},{"type":"text","text":" conforms to "},{"code":"Collection","type":"codeVoice"},{"type":"text","text":"."}]},"type":"topic","url":"\/documentation\/compute\/lazyfiltersequence\/index(_:offsetby:limitedby:)-29l06","abstract":[{"type":"text","text":"Returns an index that is the specified distance from the given index,"},{"text":" ","type":"text"},{"type":"text","text":"unless that distance is beyond a given limiting index."}],"title":"index(_:offsetBy:limitedBy:)","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/LazyFilterSequence":{"kind":"symbol","navigatorTitle":[{"text":"LazyFilterSequence","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyFilterSequence","abstract":[{"type":"text","text":"A sequence whose elements consist of the elements of some base"},{"type":"text","text":" "},{"type":"text","text":"sequence that also satisfy a given predicate."}],"title":"LazyFilterSequence","url":"\/documentation\/compute\/lazyfiltersequence","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"LazyFilterSequence","kind":"identifier"}],"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/LazyFilterSequence/Collection-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyFilterSequence\/Collection-Implementations","url":"\/documentation\/compute\/lazyfiltersequence\/collection-implementations","type":"topic","kind":"article","role":"collectionGroup","abstract":[],"title":"Collection Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","abstract":[{"type":"text","text":"A signed integer value type."}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Int","kind":"identifier"}],"navigatorTitle":[{"text":"Int","kind":"identifier"}],"title":"Int","url":"\/documentation\/compute\/int","kind":"symbol"}}}