{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"index","kind":"identifier"},{"kind":"text","text":"("},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"i","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Index","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/Index","preciseIdentifier":"s:Sl5IndexQa"},{"text":", ","kind":"text"},{"text":"offsetBy","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"distance"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","text":"Int","preciseIdentifier":"s:Si"},{"text":", ","kind":"text"},{"text":"limitedBy","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"limit"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Index","preciseIdentifier":"s:Sl5IndexQa","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/Index","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/Index","kind":"typeIdentifier","text":"Index","preciseIdentifier":"s:Sl5IndexQa"},{"text":"?","kind":"text"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"name":"i","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A valid index of the collection."}]}]},{"name":"distance","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The distance to offset "},{"code":"i","type":"codeVoice"},{"text":". ","type":"text"},{"type":"codeVoice","code":"distance"},{"type":"text","text":" must not be negative"},{"type":"text","text":" "},{"type":"text","text":"unless the collection conforms to the "},{"type":"codeVoice","code":"BidirectionalCollection"},{"type":"text","text":" "},{"text":"protocol.","type":"text"}]}]},{"name":"limit","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A valid index of the collection to use as a limit. If"},{"type":"text","text":" "},{"code":"distance > 0","type":"codeVoice"},{"text":", a limit that is less than ","type":"text"},{"type":"codeVoice","code":"i"},{"text":" has no effect.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Likewise, if "},{"type":"codeVoice","code":"distance < 0"},{"text":", a limit that is greater than ","type":"text"},{"code":"i","type":"codeVoice"},{"text":" has no","type":"text"},{"text":" ","type":"text"},{"text":"effect.","type":"text"}]}]}]},{"kind":"content","content":[{"text":"Return Value","level":2,"type":"heading","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"text":"An index offset by ","type":"text"},{"type":"codeVoice","code":"distance"},{"text":" from the index ","type":"text"},{"code":"i","type":"codeVoice"},{"type":"text","text":", unless that"},{"type":"text","text":" "},{"type":"text","text":"index would be beyond "},{"code":"limit","type":"codeVoice"},{"type":"text","text":" in the direction of movement. In that"},{"text":" ","type":"text"},{"text":"case, the method returns ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."}]}]},{"content":[{"text":"Discussion","type":"heading","anchor":"discussion","level":2},{"inlineContent":[{"text":"The following example obtains an index advanced four positions from a","type":"text"},{"text":" ","type":"text"},{"text":"string’s starting index and then prints the character at that position.","type":"text"},{"type":"text","text":" "},{"text":"The operation doesn’t require going beyond the limiting ","type":"text"},{"type":"codeVoice","code":"s.endIndex"},{"type":"text","text":" "},{"text":"value, so it succeeds.","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":["let s = \"Swift\"","if let i = s.index(s.startIndex, offsetBy: 4, limitedBy: s.endIndex) {","    print(s[i])","}","\/\/ Prints \"t\""]},{"type":"paragraph","inlineContent":[{"text":"The next example attempts to retrieve an index six positions from","type":"text"},{"type":"text","text":" "},{"code":"s.startIndex","type":"codeVoice"},{"type":"text","text":" but fails, because that distance is beyond the index"},{"type":"text","text":" "},{"text":"passed as ","type":"text"},{"type":"codeVoice","code":"limit"},{"type":"text","text":"."}]},{"syntax":null,"type":"codeListing","code":["let j = s.index(s.startIndex, offsetBy: 6, limitedBy: s.endIndex)","print(j)","\/\/ Prints \"nil\""]},{"inlineContent":[{"type":"text","text":"The value passed as "},{"type":"codeVoice","code":"distance"},{"text":" must not offset ","type":"text"},{"code":"i","type":"codeVoice"},{"text":" beyond the bounds of","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the collection, unless the index passed as "},{"type":"codeVoice","code":"limit"},{"type":"text","text":" prevents offsetting"},{"text":" ","type":"text"},{"type":"text","text":"beyond those bounds."}],"type":"paragraph"},{"name":"Complexity","content":[{"inlineContent":[{"text":"O(1) if the collection conforms to","type":"text"},{"type":"text","text":" "},{"code":"RandomAccessCollection","type":"codeVoice"},{"type":"text","text":"; otherwise, O("},{"inlineContent":[{"text":"k","type":"text"}],"type":"emphasis"},{"text":"), where ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"k","type":"text"}]},{"text":" is the absolute","type":"text"},{"type":"text","text":" "},{"type":"text","text":"value of "},{"type":"codeVoice","code":"distance"},{"text":".","type":"text"}],"type":"paragraph"}],"type":"aside","style":"note"}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/lazyfiltersequence\/index(_:offsetby:limitedby:)-6rs60"]}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyFilterSequence","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyFilterSequence\/Collection-Implementations"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyFilterSequence\/index(_:offsetBy:limitedBy:)-6rs60"},"abstract":[{"text":"Returns an index that is the specified distance from the given index,","type":"text"},{"type":"text","text":" "},{"text":"unless that distance is beyond a given limiting index.","type":"text"}],"metadata":{"modules":[{"name":"Compute","relatedModules":["Swift"]}],"title":"index(_:offsetBy:limitedBy:)","externalID":"s:SlsE5index_8offsetBy07limitedC05IndexQzSgAE_SiAEtF::SYNTHESIZED::s:s18LazyFilterSequenceV","role":"symbol","symbolKind":"method","extendedModule":"Swift","roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"index","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Index","kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa"},{"text":", ","kind":"text"},{"text":"offsetBy","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"limitedBy","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:Sl5IndexQa","text":"Index","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Index","preciseIdentifier":"s:Sl5IndexQa","kind":"typeIdentifier"},{"kind":"text","text":"?"}]},"sections":[],"kind":"symbol","schemaVersion":{"patch":0,"major":0,"minor":3},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/LazyFilterSequence/index(_:offsetBy:limitedBy:)-6rs60":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyFilterSequence\/index(_:offsetBy:limitedBy:)-6rs60","title":"index(_:offsetBy:limitedBy:)","type":"topic","abstract":[{"type":"text","text":"Returns an index that is the specified distance from the given index,"},{"type":"text","text":" "},{"text":"unless that distance is beyond a given limiting index.","type":"text"}],"role":"symbol","kind":"symbol","url":"\/documentation\/compute\/lazyfiltersequence\/index(_:offsetby:limitedby:)-6rs60","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"index","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Index","preciseIdentifier":"s:Sl5IndexQa","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"offsetBy"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"limitedBy"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa","text":"Index"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa","text":"Index"},{"text":"?","kind":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/LazyFilterSequence":{"kind":"symbol","navigatorTitle":[{"text":"LazyFilterSequence","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyFilterSequence","abstract":[{"type":"text","text":"A sequence whose elements consist of the elements of some base"},{"type":"text","text":" "},{"type":"text","text":"sequence that also satisfy a given predicate."}],"title":"LazyFilterSequence","url":"\/documentation\/compute\/lazyfiltersequence","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"LazyFilterSequence","kind":"identifier"}],"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","abstract":[{"type":"text","text":"A signed integer value type."}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Int","kind":"identifier"}],"navigatorTitle":[{"text":"Int","kind":"identifier"}],"title":"Int","url":"\/documentation\/compute\/int","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Collection/Index":{"url":"\/documentation\/compute\/collection\/index","required":true,"role":"symbol","title":"Index","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Index","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"Comparable","preciseIdentifier":"s:SL","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"A type that represents a position in the collection."}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/Index","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/LazyFilterSequence/Collection-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyFilterSequence\/Collection-Implementations","url":"\/documentation\/compute\/lazyfiltersequence\/collection-implementations","type":"topic","kind":"article","role":"collectionGroup","abstract":[],"title":"Collection Implementations"}}}