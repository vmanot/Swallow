{"variants":[{"paths":["\/documentation\/compute\/lazyfiltersequence\/enumerated()"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyFilterSequence\/enumerated()"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"enumerated","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"EnumeratedSequence","kind":"typeIdentifier","preciseIdentifier":"s:s18EnumeratedSequenceV","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/EnumeratedSequence"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"inlineContent":[{"type":"text","text":"A sequence of pairs enumerating the sequence."}],"type":"paragraph"}]},{"kind":"content","content":[{"level":2,"anchor":"discussion","type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This example enumerates the characters of the string “Swift” and prints"},{"type":"text","text":" "},{"text":"each character along with its place in the string.","type":"text"}]},{"syntax":null,"code":["for (n, c) in \"Swift\".enumerated() {","    print(\"\\(n): '\\(c)'\")","}","\/\/ Prints \"0: 'S'\"","\/\/ Prints \"1: 'w'\"","\/\/ Prints \"2: 'i'\"","\/\/ Prints \"3: 'f'\"","\/\/ Prints \"4: 't'\""],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"When you enumerate a collection, the integer part of each pair is a counter","type":"text"},{"type":"text","text":" "},{"type":"text","text":"for the enumeration, but is not necessarily the index of the paired value."},{"type":"text","text":" "},{"text":"These counters can be used as indices only in instances of zero-based,","type":"text"},{"text":" ","type":"text"},{"text":"integer-indexed collections, such as ","type":"text"},{"type":"codeVoice","code":"Array"},{"type":"text","text":" and "},{"type":"codeVoice","code":"ContiguousArray"},{"type":"text","text":". For"},{"type":"text","text":" "},{"type":"text","text":"other collections the counters may be out of range or of the wrong type"},{"type":"text","text":" "},{"text":"to use as an index. To iterate over the elements of a collection with its","type":"text"},{"text":" ","type":"text"},{"text":"indices, use the ","type":"text"},{"type":"codeVoice","code":"zip(_:_:)"},{"type":"text","text":" function."}]},{"type":"paragraph","inlineContent":[{"text":"This example iterates over the indices and elements of a set, building a","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"list consisting of indices of names with five or fewer letters."}]},{"type":"codeListing","code":["let names: Set = [\"Sofia\", \"Camilla\", \"Martina\", \"Mateo\", \"Nicolás\"]","var shorterIndices: [Set<String>.Index] = []","for (i, name) in zip(names.indices, names) {","    if name.count <= 5 {","        shorterIndices.append(i)","    }","}"],"syntax":null},{"type":"paragraph","inlineContent":[{"text":"Now that the ","type":"text"},{"type":"codeVoice","code":"shorterIndices"},{"type":"text","text":" array holds the indices of the shorter"},{"text":" ","type":"text"},{"type":"text","text":"names in the "},{"code":"names","type":"codeVoice"},{"text":" set, you can use those indices to access elements in","type":"text"},{"type":"text","text":" "},{"text":"the set.","type":"text"}]},{"code":["for i in shorterIndices {","    print(names[i])","}","\/\/ Prints \"Sofia\"","\/\/ Prints \"Mateo\""],"type":"codeListing","syntax":null},{"style":"note","name":"Complexity","type":"aside","content":[{"inlineContent":[{"text":"O(1)","type":"text"}],"type":"paragraph"}]}]}],"abstract":[{"type":"text","text":"Returns a sequence of pairs ("},{"inlineContent":[{"text":"n","type":"text"}],"type":"emphasis"},{"text":", ","type":"text"},{"inlineContent":[{"type":"text","text":"x"}],"type":"emphasis"},{"type":"text","text":"), where "},{"type":"emphasis","inlineContent":[{"text":"n","type":"text"}]},{"type":"text","text":" represents a"},{"type":"text","text":" "},{"text":"consecutive integer starting at zero and ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"x","type":"text"}]},{"text":" represents an element of","type":"text"},{"type":"text","text":" "},{"text":"the sequence.","type":"text"}],"kind":"symbol","metadata":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"enumerated"},{"kind":"text","text":"() -> "},{"text":"EnumeratedSequence","preciseIdentifier":"s:s18EnumeratedSequenceV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"roleHeading":"Instance Method","externalID":"s:STsE10enumerateds18EnumeratedSequenceVyxGyF::SYNTHESIZED::s:s18LazyFilterSequenceV","modules":[{"relatedModules":["Swift"],"name":"Compute"}],"symbolKind":"method","title":"enumerated()","extendedModule":"Swift","role":"symbol"},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyFilterSequence","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyFilterSequence\/Sequence-Implementations"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/LazyFilterSequence":{"kind":"symbol","navigatorTitle":[{"text":"LazyFilterSequence","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyFilterSequence","abstract":[{"type":"text","text":"A sequence whose elements consist of the elements of some base"},{"type":"text","text":" "},{"type":"text","text":"sequence that also satisfy a given predicate."}],"title":"LazyFilterSequence","url":"\/documentation\/compute\/lazyfiltersequence","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"LazyFilterSequence","kind":"identifier"}],"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/LazyFilterSequence/Sequence-Implementations":{"kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyFilterSequence\/Sequence-Implementations","abstract":[],"title":"Sequence Implementations","url":"\/documentation\/compute\/lazyfiltersequence\/sequence-implementations","role":"collectionGroup","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/LazyFilterSequence/enumerated()":{"type":"topic","role":"symbol","kind":"symbol","url":"\/documentation\/compute\/lazyfiltersequence\/enumerated()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"enumerated","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"EnumeratedSequence","kind":"typeIdentifier","preciseIdentifier":"s:s18EnumeratedSequenceV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":">","kind":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyFilterSequence\/enumerated()","abstract":[{"text":"Returns a sequence of pairs (","type":"text"},{"inlineContent":[{"text":"n","type":"text"}],"type":"emphasis"},{"type":"text","text":", "},{"type":"emphasis","inlineContent":[{"type":"text","text":"x"}]},{"type":"text","text":"), where "},{"inlineContent":[{"text":"n","type":"text"}],"type":"emphasis"},{"text":" represents a","type":"text"},{"type":"text","text":" "},{"type":"text","text":"consecutive integer starting at zero and "},{"type":"emphasis","inlineContent":[{"type":"text","text":"x"}]},{"text":" represents an element of","type":"text"},{"type":"text","text":" "},{"text":"the sequence.","type":"text"}],"title":"enumerated()"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/EnumeratedSequence":{"url":"\/documentation\/compute\/enumeratedsequence","navigatorTitle":[{"text":"EnumeratedSequence","kind":"identifier"}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"EnumeratedSequence"}],"abstract":[{"text":"An enumeration of the elements of a sequence or collection.","type":"text"}],"type":"topic","title":"EnumeratedSequence","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/EnumeratedSequence"}}}