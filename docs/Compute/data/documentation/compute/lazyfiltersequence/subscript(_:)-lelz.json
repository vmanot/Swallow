{"schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyFilterSequence\/subscript(_:)-lelz","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"subscript"},{"text":"<","kind":"text"},{"text":"R","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"r","kind":"internalParam"},{"kind":"text","text":": "},{"text":"R","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:Sl11SubSequenceQa","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/SubSequence","kind":"typeIdentifier","text":"SubSequence"},{"text":" ","kind":"text"},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RangeExpression","preciseIdentifier":"s:SX","text":"RangeExpression"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Index","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/Index","kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa"},{"text":" == ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SX5BoundQa","text":"Bound","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RangeExpression\/Bound"},{"kind":"text","text":" { "},{"text":"get","kind":"keyword"},{"kind":"text","text":" }"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"level":2,"text":"Overview","anchor":"overview","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"The range expression is converted to a concrete subrange relative to this","type":"text"},{"text":" ","type":"text"},{"text":"collection. For example, using a ","type":"text"},{"code":"PartialRangeFrom","type":"codeVoice"},{"text":" range expression","type":"text"},{"type":"text","text":" "},{"text":"with an array accesses the subrange from the start of the range","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"expression until the end of the array."}]},{"type":"codeListing","syntax":null,"code":["let streets = [\"Adams\", \"Bryant\", \"Channing\", \"Douglas\", \"Evarts\"]","let streetsSlice = streets[2...]","print(streetsSlice)","\/\/ [\"Channing\", \"Douglas\", \"Evarts\"]"]},{"inlineContent":[{"text":"The accessed slice uses the same indices for the same elements as the","type":"text"},{"type":"text","text":" "},{"text":"original collection uses. This example searches ","type":"text"},{"type":"codeVoice","code":"streetsSlice"},{"type":"text","text":" for one"},{"text":" ","type":"text"},{"type":"text","text":"of the strings in the slice, and then uses that index in the original"},{"text":" ","type":"text"},{"type":"text","text":"array."}],"type":"paragraph"},{"type":"codeListing","code":["let index = streetsSlice.firstIndex(of: \"Evarts\")    \/\/ 4","print(streets[index!])","\/\/ \"Evarts\""],"syntax":null},{"inlineContent":[{"type":"text","text":"Always use the slice’s "},{"code":"startIndex","type":"codeVoice"},{"text":" property instead of assuming that its","type":"text"},{"text":" ","type":"text"},{"text":"indices start at a particular value. Attempting to access an element by","type":"text"},{"type":"text","text":" "},{"type":"text","text":"using an index outside the bounds of the slice’s indices may result in a"},{"type":"text","text":" "},{"text":"runtime error, even if that index is valid for the original collection.","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":["print(streetsSlice.startIndex)","\/\/ 2","print(streetsSlice[2])","\/\/ \"Channing\"","","print(streetsSlice[0])","\/\/ error: Index out of bounds"],"syntax":null},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"O(1)"}]}],"name":"Complexity","type":"aside"}]}],"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/lazyfiltersequence\/subscript(_:)-lelz"]}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyFilterSequence","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyFilterSequence\/Collection-Implementations"]]},"metadata":{"symbolKind":"subscript","externalID":"s:SlsEy11SubSequenceQzqd__cSXRd__5BoundQyd__5IndexRtzluip::SYNTHESIZED::s:s18LazyFilterSequenceV","role":"symbol","extendedModule":"Swift","modules":[{"name":"Compute","relatedModules":["Swift"]}],"fragments":[{"text":"subscript","kind":"keyword"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"R"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"R"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:Sl11SubSequenceQa","kind":"typeIdentifier","text":"SubSequence"}],"roleHeading":"Instance Subscript","title":"subscript(_:)"},"sections":[],"abstract":[{"type":"text","text":"Accesses the contiguous subrange of the collection’s elements specified"},{"type":"text","text":" "},{"text":"by a range expression.","type":"text"}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Collection/SubSequence":{"url":"\/documentation\/compute\/collection\/subsequence","title":"SubSequence","abstract":[{"type":"text","text":"A collection representing a contiguous subrange of this collection’s"},{"type":"text","text":" "},{"text":"elements. The subsequence shares indices with the original collection.","type":"text"}],"type":"topic","kind":"symbol","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SubSequence"},{"kind":"text","text":" : "},{"text":"Collection","preciseIdentifier":"s:Sl","kind":"typeIdentifier"},{"text":" = ","kind":"text"},{"text":"Slice","preciseIdentifier":"s:s5SliceV","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":">","kind":"text"}],"required":true,"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/SubSequence"},"doc://com.swallow.documentation.Compute/documentation/Compute/LazyFilterSequence":{"kind":"symbol","navigatorTitle":[{"text":"LazyFilterSequence","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyFilterSequence","abstract":[{"type":"text","text":"A sequence whose elements consist of the elements of some base"},{"type":"text","text":" "},{"type":"text","text":"sequence that also satisfy a given predicate."}],"title":"LazyFilterSequence","url":"\/documentation\/compute\/lazyfiltersequence","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"LazyFilterSequence","kind":"identifier"}],"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/RangeExpression":{"abstract":[{"text":"A type that can be used to slice a collection.","type":"text"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"RangeExpression","kind":"identifier"}],"url":"\/documentation\/compute\/rangeexpression","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RangeExpression","kind":"symbol","title":"RangeExpression","role":"symbol","type":"topic","navigatorTitle":[{"text":"RangeExpression","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/LazyFilterSequence/Collection-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyFilterSequence\/Collection-Implementations","url":"\/documentation\/compute\/lazyfiltersequence\/collection-implementations","type":"topic","kind":"article","role":"collectionGroup","abstract":[],"title":"Collection Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/Collection/Index":{"url":"\/documentation\/compute\/collection\/index","required":true,"role":"symbol","title":"Index","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Index","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"Comparable","preciseIdentifier":"s:SL","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"A type that represents a position in the collection."}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/Index","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/RangeExpression/Bound":{"role":"symbol","type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RangeExpression\/Bound","title":"Bound","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"Bound"},{"kind":"text","text":" : "},{"text":"Comparable","kind":"typeIdentifier","preciseIdentifier":"s:SL"}],"url":"\/documentation\/compute\/rangeexpression\/bound","required":true,"abstract":[{"text":"The type for which the expression describes a range.","type":"text"}],"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/LazyFilterSequence/subscript(_:)-lelz":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyFilterSequence\/subscript(_:)-lelz","fragments":[{"kind":"keyword","text":"subscript"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"R"},{"kind":"text","text":">("},{"text":"R","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"SubSequence","preciseIdentifier":"s:Sl11SubSequenceQa","kind":"typeIdentifier"}],"type":"topic","url":"\/documentation\/compute\/lazyfiltersequence\/subscript(_:)-lelz","abstract":[{"text":"Accesses the contiguous subrange of the collection’s elements specified","type":"text"},{"text":" ","type":"text"},{"text":"by a range expression.","type":"text"}],"title":"subscript(_:)","kind":"symbol","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"}}}