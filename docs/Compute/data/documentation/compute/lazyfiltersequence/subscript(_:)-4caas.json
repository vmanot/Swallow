{"sections":[],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"subscript"},{"text":"(","kind":"text"},{"kind":"internalParam","text":"bounds"},{"kind":"text","text":": "},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Range","kind":"typeIdentifier","preciseIdentifier":"s:Sn","text":"Range"},{"kind":"text","text":"<"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyFilterSequence","text":"LazyFilterSequence","kind":"typeIdentifier","preciseIdentifier":"s:s18LazyFilterSequenceV"},{"kind":"text","text":"<"},{"text":"Base","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"text":"Index","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyFilterSequence","preciseIdentifier":"s:s18LazyFilterSequenceV","text":"LazyFilterSequence"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Base"},{"kind":"text","text":">."},{"kind":"typeIdentifier","text":"SubSequence","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyFilterSequence\/SubSequence","preciseIdentifier":"s:s18LazyFilterSequenceVsSlRzrlE03SubC0a"},{"text":" { ","kind":"text"},{"kind":"keyword","text":"get"},{"kind":"text","text":" }"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"bounds","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A range of the collection’s indices. The bounds of"},{"type":"text","text":" "},{"type":"text","text":"the range must be valid indices of the collection."}]}]}]},{"kind":"content","content":[{"anchor":"overview","text":"Overview","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"For example, using a "},{"type":"codeVoice","code":"PartialRangeFrom"},{"text":" range expression with an array","type":"text"},{"text":" ","type":"text"},{"text":"accesses the subrange from the start of the range expression until the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"end of the array."}],"type":"paragraph"},{"type":"codeListing","code":["let streets = [\"Adams\", \"Bryant\", \"Channing\", \"Douglas\", \"Evarts\"]","let streetsSlice = streets[2..<5]","print(streetsSlice)","\/\/ [\"Channing\", \"Douglas\", \"Evarts\"]"],"syntax":null},{"inlineContent":[{"text":"The accessed slice uses the same indices for the same elements as the","type":"text"},{"text":" ","type":"text"},{"text":"original collection. This example searches ","type":"text"},{"code":"streetsSlice","type":"codeVoice"},{"text":" for one of the","type":"text"},{"text":" ","type":"text"},{"text":"strings in the slice, and then uses that index in the original array.","type":"text"}],"type":"paragraph"},{"code":["let index = streetsSlice.firstIndex(of: \"Evarts\")!    \/\/ 4","print(streets[index])","\/\/ \"Evarts\""],"type":"codeListing","syntax":null},{"type":"paragraph","inlineContent":[{"type":"text","text":"Always use the slice’s "},{"code":"startIndex","type":"codeVoice"},{"type":"text","text":" property instead of assuming that its"},{"text":" ","type":"text"},{"text":"indices start at a particular value. Attempting to access an element by","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"using an index outside the bounds of the slice may result in a runtime"},{"type":"text","text":" "},{"text":"error, even if that index is valid for the original collection.","type":"text"}]},{"syntax":null,"code":["print(streetsSlice.startIndex)","\/\/ 2","print(streetsSlice[2])","\/\/ \"Channing\"","","print(streetsSlice[0])","\/\/ error: Index out of bounds"],"type":"codeListing"},{"style":"note","type":"aside","name":"Complexity","content":[{"type":"paragraph","inlineContent":[{"text":"O(1)","type":"text"}]}]}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyFilterSequence\/subscript(_:)-4caas"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/lazyfiltersequence\/subscript(_:)-4caas"]}],"metadata":{"fragments":[{"kind":"keyword","text":"subscript"},{"text":"(","kind":"text"},{"text":"Range","preciseIdentifier":"s:Sn","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s18LazyFilterSequenceV","text":"LazyFilterSequence","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Base","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"text":"Index","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"LazyFilterSequence","kind":"typeIdentifier","preciseIdentifier":"s:s18LazyFilterSequenceV"},{"text":"<","kind":"text"},{"text":"Base","kind":"typeIdentifier"},{"kind":"text","text":">."},{"kind":"typeIdentifier","preciseIdentifier":"s:s18LazyFilterSequenceVsSlRzrlE03SubC0a","text":"SubSequence"}],"externalID":"s:s18LazyFilterSequenceVsSlRzrlEyABy03SubC0QzGSny5IndexQzGcip","roleHeading":"Instance Subscript","title":"subscript(_:)","role":"symbol","symbolKind":"subscript","extendedModule":"Swift","conformance":{"constraints":[{"type":"codeVoice","code":"Base"},{"text":" conforms to ","type":"text"},{"code":"Collection","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"modules":[{"name":"Compute","relatedModules":["Swift"]}]},"abstract":[{"type":"text","text":"Accesses a contiguous subrange of the collection’s elements."}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyFilterSequence","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyFilterSequence\/Collection-Implementations"]]},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Range":{"kind":"symbol","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Range","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Range","url":"\/documentation\/compute\/range","abstract":[{"text":"A half-open interval from a lower bound up to, but not including, an upper","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"bound."}],"navigatorTitle":[{"text":"Range","kind":"identifier"}],"title":"Range"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/LazyFilterSequence/Collection-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyFilterSequence\/Collection-Implementations","url":"\/documentation\/compute\/lazyfiltersequence\/collection-implementations","type":"topic","kind":"article","role":"collectionGroup","abstract":[],"title":"Collection Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/LazyFilterSequence":{"kind":"symbol","navigatorTitle":[{"text":"LazyFilterSequence","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyFilterSequence","abstract":[{"type":"text","text":"A sequence whose elements consist of the elements of some base"},{"type":"text","text":" "},{"type":"text","text":"sequence that also satisfy a given predicate."}],"title":"LazyFilterSequence","url":"\/documentation\/compute\/lazyfiltersequence","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"LazyFilterSequence","kind":"identifier"}],"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/LazyFilterSequence/subscript(_:)-4caas":{"role":"symbol","title":"subscript(_:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyFilterSequence\/subscript(_:)-4caas","kind":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Base","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Collection"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"type":"topic","abstract":[{"type":"text","text":"Accesses a contiguous subrange of the collection’s elements."}],"fragments":[{"kind":"keyword","text":"subscript"},{"kind":"text","text":"("},{"text":"Range","kind":"typeIdentifier","preciseIdentifier":"s:Sn"},{"text":"<","kind":"text"},{"text":"LazyFilterSequence","preciseIdentifier":"s:s18LazyFilterSequenceV","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Base","kind":"typeIdentifier"},{"kind":"text","text":">."},{"text":"Index","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","text":"LazyFilterSequence","preciseIdentifier":"s:s18LazyFilterSequenceV"},{"text":"<","kind":"text"},{"text":"Base","kind":"typeIdentifier"},{"kind":"text","text":">."},{"text":"SubSequence","kind":"typeIdentifier","preciseIdentifier":"s:s18LazyFilterSequenceVsSlRzrlE03SubC0a"}],"url":"\/documentation\/compute\/lazyfiltersequence\/subscript(_:)-4caas"},"doc://com.swallow.documentation.Compute/documentation/Compute/LazyFilterSequence/SubSequence":{"fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"text":"SubSequence","kind":"identifier"}],"abstract":[{"text":"A collection representing a contiguous subrange of this collection’s","type":"text"},{"type":"text","text":" "},{"text":"elements. The subsequence shares indices with the original collection.","type":"text"}],"type":"topic","title":"LazyFilterSequence.SubSequence","role":"symbol","navigatorTitle":[{"text":"SubSequence","kind":"identifier"}],"url":"\/documentation\/compute\/lazyfiltersequence\/subsequence","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Base"},{"text":" conforms to ","type":"text"},{"code":"Collection","type":"codeVoice"},{"type":"text","text":"."}]},"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyFilterSequence\/SubSequence","kind":"symbol"}}}