{"kind":"symbol","metadata":{"platforms":[{"beta":false,"name":"iOS","unavailable":false,"introducedAt":"13.0","deprecated":false},{"deprecated":false,"introducedAt":"10.15","unavailable":false,"beta":false,"name":"macOS"},{"beta":false,"deprecated":false,"name":"tvOS","introducedAt":"13.0","unavailable":false},{"deprecated":false,"name":"watchOS","introducedAt":"6.0","unavailable":false,"beta":false}],"roleHeading":"Instance Method","extendedModule":"Swift","symbolKind":"method","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Element","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Equatable","type":"codeVoice"},{"text":".","type":"text"}]},"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"difference","kind":"identifier"},{"text":"<","kind":"text"},{"text":"C","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"from"},{"text":": ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"CollectionDifference","kind":"typeIdentifier","preciseIdentifier":"s:s20CollectionDifferenceV"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:ST7ElementQa","text":"Element","kind":"typeIdentifier"},{"kind":"text","text":">"}],"title":"difference(from:)","role":"symbol","externalID":"s:SKsSQ7ElementRpzrlE10difference4froms20CollectionDifferenceVyABGqd___tSKRd__AAQyd__ABRSlF::SYNTHESIZED::s:s18LazyFilterSequenceV","modules":[{"relatedModules":["Swift"],"name":"Compute"}]},"sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyFilterSequence","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyFilterSequence\/BidirectionalCollection-Implementations"]]},"abstract":[{"text":"Returns the difference needed to produce this collection’s ordered","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"elements from the given collection."}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyFilterSequence\/difference(from:)"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"difference"},{"text":"<","kind":"text"},{"text":"C","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"from"},{"kind":"text","text":" "},{"text":"other","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s20CollectionDifferenceV","text":"CollectionDifference","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CollectionDifference"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","preciseIdentifier":"s:ST7ElementQa","text":"Element","kind":"typeIdentifier"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BidirectionalCollection","kind":"typeIdentifier","preciseIdentifier":"s:SK","text":"BidirectionalCollection"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","preciseIdentifier":"s:ST7ElementQa"},{"text":" == ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Element","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"}]}]},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The base state."}]}],"name":"other"}],"kind":"parameters"},{"kind":"content","content":[{"type":"heading","level":2,"text":"Return Value","anchor":"return-value"},{"inlineContent":[{"text":"The difference needed to produce this collection’s ordered","type":"text"},{"text":" ","type":"text"},{"text":"elements from the given collection.","type":"text"}],"type":"paragraph"}]},{"kind":"content","content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"inlineContent":[{"type":"text","text":"This function does not infer element moves. If you need to infer moves,"},{"type":"text","text":" "},{"type":"text","text":"call the "},{"code":"inferringMoves()","type":"codeVoice"},{"text":" method on the resulting difference.","type":"text"}],"type":"paragraph"},{"name":"Complexity","style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Worst case performance is O("},{"inlineContent":[{"text":"n","type":"text"}],"type":"emphasis"},{"text":" * ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"m","type":"text"}]},{"type":"text","text":"), where "},{"inlineContent":[{"text":"n","type":"text"}],"type":"emphasis"},{"type":"text","text":" is the"},{"type":"text","text":" "},{"text":"count of this collection and ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"m"}]},{"type":"text","text":" is "},{"type":"codeVoice","code":"other.count"},{"type":"text","text":". You can expect"},{"text":" ","type":"text"},{"type":"text","text":"faster execution when the collections share many common elements, or"},{"type":"text","text":" "},{"text":"if ","type":"text"},{"code":"Element","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":"."}]}],"type":"aside"}]}],"variants":[{"paths":["\/documentation\/compute\/lazyfiltersequence\/difference(from:)"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/BidirectionalCollection":{"navigatorTitle":[{"text":"BidirectionalCollection","kind":"identifier"}],"abstract":[{"text":"A collection that supports backward as well as forward traversal.","type":"text"}],"title":"BidirectionalCollection","kind":"symbol","url":"\/documentation\/compute\/bidirectionalcollection","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"BidirectionalCollection"}],"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BidirectionalCollection","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/LazyFilterSequence":{"kind":"symbol","navigatorTitle":[{"text":"LazyFilterSequence","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyFilterSequence","abstract":[{"type":"text","text":"A sequence whose elements consist of the elements of some base"},{"type":"text","text":" "},{"type":"text","text":"sequence that also satisfy a given predicate."}],"title":"LazyFilterSequence","url":"\/documentation\/compute\/lazyfiltersequence","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"LazyFilterSequence","kind":"identifier"}],"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/LazyFilterSequence/difference(from:)":{"url":"\/documentation\/compute\/lazyfiltersequence\/difference(from:)","role":"symbol","kind":"symbol","type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyFilterSequence\/difference(from:)","title":"difference(from:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"difference"},{"kind":"text","text":"<"},{"text":"C","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"from","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"C"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"CollectionDifference","preciseIdentifier":"s:s20CollectionDifferenceV"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"kind":"text","text":">"}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Element","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Equatable"},{"type":"text","text":"."}]},"abstract":[{"type":"text","text":"Returns the difference needed to produce this collection’s ordered"},{"text":" ","type":"text"},{"type":"text","text":"elements from the given collection."}]},"doc://com.swallow.documentation.Compute/documentation/Compute/CollectionDifference":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CollectionDifference","kind":"identifier"}],"url":"\/documentation\/compute\/collectiondifference","type":"topic","title":"CollectionDifference","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"CollectionDifference"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CollectionDifference","abstract":[{"type":"text","text":"A collection of insertions and removals that describe the difference"},{"text":" ","type":"text"},{"text":"between two ordered collection states.","type":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/LazyFilterSequence/BidirectionalCollection-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyFilterSequence\/BidirectionalCollection-Implementations","kind":"article","role":"collectionGroup","type":"topic","url":"\/documentation\/compute\/lazyfiltersequence\/bidirectionalcollection-implementations","title":"BidirectionalCollection Implementations","abstract":[]},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence/Element":{"type":"topic","required":true,"abstract":[{"type":"text","text":"A type representing the sequence’s elements."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"symbol","url":"\/documentation\/compute\/sequence\/element","role":"symbol","title":"Element","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"identifier"}]}}}