{"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/MutableCollection","interfaceLanguage":"swift"},"kind":"symbol","topicSections":[{"anchor":"Associated-Types","title":"Associated Types","identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/MutableCollection\/Element","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/MutableCollection\/Index","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/MutableCollection\/SubSequence"],"generated":true},{"generated":true,"title":"Instance Methods","anchor":"Instance-Methods","identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/MutableCollection\/moveSubranges(_:to:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/MutableCollection\/partition(by:)-34ian","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/MutableCollection\/removeSubranges(_:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/MutableCollection\/reverse()","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/MutableCollection\/shuffle()","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/MutableCollection\/shuffle(using:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/MutableCollection\/sort()","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/MutableCollection\/sort(by:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/MutableCollection\/swapAt(_:_:)-8f65z","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/MutableCollection\/withContiguousMutableStorageIfAvailable(_:)-1vpw0"]},{"title":"Subscripts","generated":true,"identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/MutableCollection\/subscript(_:)-31dgt","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/MutableCollection\/subscript(_:)-7tq68"],"anchor":"Subscripts"}],"relationshipsSections":[{"title":"Inherits From","kind":"relationships","identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence"],"type":"inheritsFrom"},{"title":"Inherited By","kind":"relationships","identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/MutableRectangularCollection","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/MutableRowMajorRectangularCollection"],"type":"inheritedBy"},{"kind":"relationships","title":"Conforming Types","identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Array","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArraySlice","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArrayTreeChildren","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CollectionOfOne","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ContiguousArray","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary\/Values-swift.struct","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/EmptyCollection","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Matrix","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RecursiveArray","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableBufferPointer","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableRawBufferPointer"],"type":"conformingTypes"}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MutableCollection","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Element","preciseIdentifier":"s:SM7ElementQa","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/MutableCollection\/Element","kind":"typeIdentifier"},{"text":"> : ","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection","kind":"typeIdentifier","text":"Collection","preciseIdentifier":"s:Sl"},{"text":" ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"SubSequence","preciseIdentifier":"s:Sl11SubSequenceQa","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/SubSequence"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/MutableCollection","kind":"typeIdentifier","preciseIdentifier":"s:SM","text":"MutableCollection"}]}]},{"content":[{"type":"heading","anchor":"overview","level":2,"text":"Overview"},{"type":"paragraph","inlineContent":[{"text":"Collections that conform to ","type":"text"},{"code":"MutableCollection","type":"codeVoice"},{"type":"text","text":" gain the ability to"},{"type":"text","text":" "},{"text":"change the value of their elements. This example shows how you can","type":"text"},{"type":"text","text":" "},{"type":"text","text":"modify one of the names in an array of students."}]},{"type":"codeListing","syntax":null,"code":["var students = [\"Ben\", \"Ivy\", \"Jordell\", \"Maxime\"]","if let i = students.firstIndex(of: \"Maxime\") {","    students[i] = \"Max\"","}","print(students)","\/\/ Prints \"[\"Ben\", \"Ivy\", \"Jordell\", \"Max\"]\""]},{"type":"paragraph","inlineContent":[{"type":"text","text":"In addition to changing the value of an individual element, you can also"},{"type":"text","text":" "},{"type":"text","text":"change the values of a slice of elements in a mutable collection. For"},{"type":"text","text":" "},{"text":"example, you can sort ","type":"text"},{"inlineContent":[{"type":"text","text":"part"}],"type":"emphasis"},{"text":" of a mutable collection by calling the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"mutable "},{"type":"codeVoice","code":"sort()"},{"text":" method on a subscripted subsequence. Here’s an","type":"text"},{"type":"text","text":" "},{"text":"example that sorts the first half of an array of integers:","type":"text"}]},{"type":"codeListing","syntax":null,"code":["var numbers = [15, 40, 10, 30, 60, 25, 5, 100]","numbers[0..<4].sort()","print(numbers)","\/\/ Prints \"[10, 15, 30, 40, 60, 25, 5, 100]\""]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"MutableCollection"},{"type":"text","text":" protocol allows changing the values of a"},{"type":"text","text":" "},{"type":"text","text":"collection’s elements but not the length of the collection itself. For"},{"type":"text","text":" "},{"type":"text","text":"operations that require adding or removing elements, see the"},{"text":" ","type":"text"},{"code":"RangeReplaceableCollection","type":"codeVoice"},{"text":" protocol instead.","type":"text"}]},{"type":"heading","text":"Conforming to the MutableCollection Protocol","level":1,"anchor":"Conforming-to-the-MutableCollection-Protocol"},{"inlineContent":[{"type":"text","text":"To add conformance to the "},{"type":"codeVoice","code":"MutableCollection"},{"type":"text","text":" protocol to your own"},{"type":"text","text":" "},{"text":"custom collection, upgrade your type’s subscript to support both read","type":"text"},{"type":"text","text":" "},{"text":"and write access.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"A value stored into a subscript of a "},{"code":"MutableCollection","type":"codeVoice"},{"type":"text","text":" instance must"},{"type":"text","text":" "},{"text":"subsequently be accessible at that same position. That is, for a mutable","type":"text"},{"type":"text","text":" "},{"type":"text","text":"collection instance "},{"code":"a","type":"codeVoice"},{"text":", index ","type":"text"},{"type":"codeVoice","code":"i"},{"text":", and value ","type":"text"},{"code":"x","type":"codeVoice"},{"type":"text","text":", the two sets of"},{"type":"text","text":" "},{"type":"text","text":"assignments in the following code sample must be equivalent:"}],"type":"paragraph"},{"code":["a[i] = x","let y = a[i]","","\/\/ Must be equivalent to:","a[i] = x","let y = x"],"syntax":null,"type":"codeListing"}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/mutablecollection"]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"abstract":[{"type":"text","text":"A collection that supports subscript assignment."}],"metadata":{"roleHeading":"Protocol","role":"symbol","externalID":"s:SM","modules":[{"name":"Compute"}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"MutableCollection","kind":"identifier"}],"title":"MutableCollection","symbolKind":"protocol","navigatorTitle":[{"text":"MutableCollection","kind":"identifier"}]},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/MutableCollection/swapAt(_:_:)-8f65z":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/MutableCollection\/swapAt(_:_:)-8f65z","kind":"symbol","role":"symbol","title":"swapAt(_:_:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"swapAt","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:Sl5IndexQa","text":"Index","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Index","kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa"},{"text":")","kind":"text"}],"defaultImplementations":1,"abstract":[{"text":"Exchanges the values at the specified indices of the collection.","type":"text"}],"url":"\/documentation\/compute\/mutablecollection\/swapat(_:_:)-8f65z","required":true},"doc://com.swallow.documentation.Compute/documentation/Compute/MutableCollection/withContiguousMutableStorageIfAvailable(_:)-1vpw0":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/MutableCollection\/withContiguousMutableStorageIfAvailable(_:)-1vpw0","role":"symbol","defaultImplementations":1,"required":true,"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"withContiguousMutableStorageIfAvailable"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"R"},{"text":">((","kind":"text"},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:Sr","text":"UnsafeMutableBufferPointer","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"text":">) ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"R"},{"text":") ","kind":"text"},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"text":"R","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"title":"withContiguousMutableStorageIfAvailable(_:)","type":"topic","url":"\/documentation\/compute\/mutablecollection\/withcontiguousmutablestorageifavailable(_:)-1vpw0","kind":"symbol","abstract":[{"text":"Executes a closure on the collection’s contiguous storage.","type":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/MutableCollection/partition(by:)-34ian":{"kind":"symbol","abstract":[{"type":"text","text":"Reorders the elements of the collection such that all the elements"},{"text":" ","type":"text"},{"type":"text","text":"that match the given predicate are after all the elements that don’t"},{"type":"text","text":" "},{"text":"match.","type":"text"}],"title":"partition(by:)","type":"topic","url":"\/documentation\/compute\/mutablecollection\/partition(by:)-34ian","required":true,"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"partition","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"by"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:Sl5IndexQa","kind":"typeIdentifier","text":"Index"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/MutableCollection\/partition(by:)-34ian","role":"symbol","defaultImplementations":2},"doc://com.swallow.documentation.Compute/documentation/Compute/MutableCollection/Index":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/MutableCollection\/Index","kind":"symbol","role":"symbol","title":"Index","type":"topic","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Index","kind":"identifier"}],"abstract":[],"url":"\/documentation\/compute\/mutablecollection\/index","required":true},"doc://com.swallow.documentation.Compute/documentation/Compute/Dictionary/Values-swift.struct":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Values","kind":"identifier"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Key","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Hashable","type":"codeVoice"},{"text":".","type":"text"}]},"role":"symbol","title":"Dictionary.Values","url":"\/documentation\/compute\/dictionary\/values-swift.struct","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary\/Values-swift.struct","abstract":[{"type":"text","text":"A view of a dictionary’s values."}],"type":"topic","navigatorTitle":[{"text":"Values","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/MutableCollection/reverse()":{"title":"reverse()","abstract":[{"type":"text","text":"Reverses the elements of the collection in place."}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"reverse","kind":"identifier"},{"kind":"text","text":"()"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Self","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"BidirectionalCollection","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","type":"topic","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/MutableCollection\/reverse()","url":"\/documentation\/compute\/mutablecollection\/reverse()"},"doc://com.swallow.documentation.Compute/documentation/Compute/MutableCollection/shuffle(using:)":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/MutableCollection\/shuffle(using:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"shuffle","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"text":"using","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"text":"T","kind":"typeIdentifier"},{"text":")","kind":"text"}],"title":"shuffle(using:)","type":"topic","url":"\/documentation\/compute\/mutablecollection\/shuffle(using:)","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Self","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"RandomAccessCollection"},{"text":".","type":"text"}]},"kind":"symbol","abstract":[{"text":"Shuffles the collection in place, using the given generator as a source","type":"text"},{"type":"text","text":" "},{"text":"for randomness.","type":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/MutableCollection/moveSubranges(_:to:)":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/MutableCollection\/moveSubranges(_:to:)","kind":"symbol","role":"symbol","title":"moveSubranges(_:to:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"moveSubranges"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"RangeSet","preciseIdentifier":"s:s8RangeSetV"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Index","kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa","text":"Index"},{"kind":"text","text":") -> "},{"text":"Range","kind":"typeIdentifier","preciseIdentifier":"s:Sn"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:Sl5IndexQa","text":"Index","kind":"typeIdentifier"},{"kind":"text","text":">"}],"abstract":[{"text":"Moves the elements in the given subranges to just before the element at","type":"text"},{"type":"text","text":" "},{"text":"the specified index.","type":"text"}],"url":"\/documentation\/compute\/mutablecollection\/movesubranges(_:to:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/ArrayTreeChildren":{"url":"\/documentation\/compute\/arraytreechildren","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"ArrayTreeChildren","kind":"identifier"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"TreeValue","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Copyable"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Escapable"},{"text":".","type":"text"}]},"abstract":[],"kind":"symbol","navigatorTitle":[{"text":"ArrayTreeChildren","kind":"identifier"}],"title":"ArrayTreeChildren","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArrayTreeChildren","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/RecursiveArray":{"type":"topic","role":"symbol","url":"\/documentation\/compute\/recursivearray","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RecursiveArray","title":"RecursiveArray","abstract":[],"navigatorTitle":[{"text":"RecursiveArray","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"RecursiveArray"}],"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/MutableRowMajorRectangularCollection":{"title":"MutableRowMajorRectangularCollection","url":"\/documentation\/compute\/mutablerowmajorrectangularcollection","role":"symbol","abstract":[],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/MutableRowMajorRectangularCollection","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"MutableRowMajorRectangularCollection","kind":"identifier"}],"navigatorTitle":[{"text":"MutableRowMajorRectangularCollection","kind":"identifier"}],"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/MutableCollection/subscript(_:)-31dgt":{"abstract":[{"type":"text","text":"Accesses a contiguous subrange of the collection’s elements."}],"fragments":[{"text":"subscript","kind":"keyword"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","text":"Range"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa","text":"Index"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"SubSequence","preciseIdentifier":"s:Sl11SubSequenceQa"}],"required":true,"url":"\/documentation\/compute\/mutablecollection\/subscript(_:)-31dgt","title":"subscript(_:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/MutableCollection\/subscript(_:)-31dgt","kind":"symbol","type":"topic","role":"symbol","defaultImplementations":3},"doc://com.swallow.documentation.Compute/documentation/Compute/Matrix":{"role":"symbol","abstract":[],"title":"Matrix","url":"\/documentation\/compute\/matrix","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Matrix","kind":"identifier"}],"navigatorTitle":[{"text":"Matrix","kind":"identifier"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Element","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Copyable"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Escapable"},{"text":".","type":"text"}]},"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Matrix","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/CollectionOfOne":{"title":"CollectionOfOne","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CollectionOfOne"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CollectionOfOne","type":"topic","navigatorTitle":[{"kind":"identifier","text":"CollectionOfOne"}],"abstract":[{"type":"text","text":"A collection containing a single element."}],"conformance":{"constraints":[{"code":"Element","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Copyable","type":"codeVoice"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Escapable"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","kind":"symbol","url":"\/documentation\/compute\/collectionofone"},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence":{"url":"\/documentation\/compute\/sequence","navigatorTitle":[{"kind":"identifier","text":"Sequence"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence","title":"Sequence","kind":"symbol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Sequence","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"A type that provides sequential, iterated access to its elements."}]},"doc://com.swallow.documentation.Compute/documentation/Compute/MutableCollection/shuffle()":{"url":"\/documentation\/compute\/mutablecollection\/shuffle()","type":"topic","abstract":[{"type":"text","text":"Shuffles the collection in place."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/MutableCollection\/shuffle()","title":"shuffle()","role":"symbol","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"shuffle"},{"text":"()","kind":"text"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Self","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"RandomAccessCollection"},{"type":"text","text":"."}]}},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Collection/SubSequence":{"url":"\/documentation\/compute\/collection\/subsequence","title":"SubSequence","abstract":[{"type":"text","text":"A collection representing a contiguous subrange of this collection’s"},{"type":"text","text":" "},{"text":"elements. The subsequence shares indices with the original collection.","type":"text"}],"type":"topic","kind":"symbol","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SubSequence"},{"kind":"text","text":" : "},{"text":"Collection","preciseIdentifier":"s:Sl","kind":"typeIdentifier"},{"text":" = ","kind":"text"},{"text":"Slice","preciseIdentifier":"s:s5SliceV","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":">","kind":"text"}],"required":true,"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/SubSequence"},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeMutableBufferPointer":{"role":"symbol","abstract":[{"type":"text","text":"A nonowning collection interface to a buffer of mutable"},{"type":"text","text":" "},{"text":"elements stored contiguously in memory.","type":"text"}],"title":"UnsafeMutableBufferPointer","url":"\/documentation\/compute\/unsafemutablebufferpointer","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"UnsafeMutableBufferPointer"}],"navigatorTitle":[{"text":"UnsafeMutableBufferPointer","kind":"identifier"}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"code":"Copyable","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"Escapable","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableBufferPointer"},"doc://com.swallow.documentation.Compute/documentation/Compute/MutableCollection/subscript(_:)-7tq68":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/MutableCollection\/subscript(_:)-7tq68","role":"symbol","defaultImplementations":3,"required":true,"fragments":[{"text":"subscript","kind":"keyword"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Index","kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier","text":"Element"}],"title":"subscript(_:)","type":"topic","url":"\/documentation\/compute\/mutablecollection\/subscript(_:)-7tq68","kind":"symbol","abstract":[{"text":"Accesses the element at the specified position.","type":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/MutableCollection/sort(by:)":{"abstract":[{"text":"Sorts the collection in place, using the given predicate as the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"comparison between elements."}],"kind":"symbol","role":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"code":"RandomAccessCollection","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/MutableCollection\/sort(by:)","title":"sort(by:)","url":"\/documentation\/compute\/mutablecollection\/sort(by:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"sort","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"by"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier","text":"Element"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/MutableCollection/Element":{"type":"topic","url":"\/documentation\/compute\/mutablecollection\/element","role":"symbol","kind":"symbol","required":true,"fragments":[{"text":"associatedtype","kind":"keyword"},{"kind":"text","text":" "},{"text":"Element","kind":"identifier"}],"abstract":[],"title":"Element","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/MutableCollection\/Element"},"doc://com.swallow.documentation.Compute/documentation/Compute/MutableCollection/sort()":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/MutableCollection\/sort()","kind":"symbol","role":"symbol","title":"sort()","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"sort"},{"kind":"text","text":"()"}],"abstract":[{"text":"Sorts the collection in place.","type":"text"}],"url":"\/documentation\/compute\/mutablecollection\/sort()","conformance":{"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"RandomAccessCollection"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Comparable"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]}},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeMutableRawBufferPointer":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableRawBufferPointer","type":"topic","title":"UnsafeMutableRawBufferPointer","kind":"symbol","url":"\/documentation\/compute\/unsafemutablerawbufferpointer","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"UnsafeMutableRawBufferPointer"}],"role":"symbol","navigatorTitle":[{"text":"UnsafeMutableRawBufferPointer","kind":"identifier"}],"abstract":[{"text":"A mutable nonowning collection interface to the bytes in a","type":"text"},{"type":"text","text":" "},{"text":"region of memory.","type":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Array":{"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Array","title":"Array","url":"\/documentation\/compute\/array","kind":"symbol","abstract":[{"text":"An ordered, random-access collection.","type":"text"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Array","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"Array"}],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Element","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Copyable","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"Escapable","type":"codeVoice"},{"type":"text","text":"."}]}},"doc://com.swallow.documentation.Compute/documentation/Compute/ContiguousArray":{"title":"ContiguousArray","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"ContiguousArray","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ContiguousArray","type":"topic","navigatorTitle":[{"text":"ContiguousArray","kind":"identifier"}],"abstract":[{"type":"text","text":"A contiguously stored array."}],"conformance":{"constraints":[{"code":"Element","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Copyable","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Escapable"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"role":"symbol","kind":"symbol","url":"\/documentation\/compute\/contiguousarray"},"doc://com.swallow.documentation.Compute/documentation/Compute/MutableCollection/removeSubranges(_:)":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/MutableCollection\/removeSubranges(_:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"removeSubranges"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:s8RangeSetV","text":"RangeSet"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"Index","kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa"},{"text":">)","kind":"text"}],"title":"removeSubranges(_:)","type":"topic","url":"\/documentation\/compute\/mutablecollection\/removesubranges(_:)","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"RangeReplaceableCollection"},{"text":".","type":"text"}]},"kind":"symbol","abstract":[{"type":"text","text":"Removes the elements at the given indices."}]},"doc://com.swallow.documentation.Compute/documentation/Compute/ArraySlice":{"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArraySlice","title":"ArraySlice","url":"\/documentation\/compute\/arrayslice","kind":"symbol","abstract":[{"type":"text","text":"A slice of an "},{"type":"codeVoice","code":"Array"},{"text":", ","type":"text"},{"type":"codeVoice","code":"ContiguousArray"},{"text":", or ","type":"text"},{"type":"codeVoice","code":"ArraySlice"},{"type":"text","text":" instance."}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ArraySlice"}],"navigatorTitle":[{"kind":"identifier","text":"ArraySlice"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Element","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Copyable","type":"codeVoice"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Escapable"},{"type":"text","text":"."}]}},"doc://com.swallow.documentation.Compute/documentation/Compute/Collection":{"kind":"symbol","role":"symbol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Collection"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection","url":"\/documentation\/compute\/collection","abstract":[{"type":"text","text":"A sequence whose elements can be traversed multiple times,"},{"text":" ","type":"text"},{"text":"nondestructively, and accessed by an indexed subscript.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Collection"}],"title":"Collection"},"doc://com.swallow.documentation.Compute/documentation/Compute/EmptyCollection":{"url":"\/documentation\/compute\/emptycollection","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"EmptyCollection"}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"code":"Copyable","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"Escapable","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"abstract":[{"type":"text","text":"A collection whose element type is "},{"code":"Element","type":"codeVoice"},{"text":" but that is always empty.","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"EmptyCollection","kind":"identifier"}],"title":"EmptyCollection","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/EmptyCollection","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/MutableRectangularCollection":{"role":"symbol","url":"\/documentation\/compute\/mutablerectangularcollection","type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/MutableRectangularCollection","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"MutableRectangularCollection"}],"abstract":[{"type":"text","text":"A rectangular collection that supports subscript assignment."}],"navigatorTitle":[{"kind":"identifier","text":"MutableRectangularCollection"}],"kind":"symbol","title":"MutableRectangularCollection"},"doc://com.swallow.documentation.Compute/documentation/Compute/Slice":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice","kind":"symbol","role":"symbol","title":"Slice","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Slice","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"Slice"}],"abstract":[{"type":"text","text":"A view into a subsequence of elements of another collection."}],"url":"\/documentation\/compute\/slice","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Base","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"MutableCollection"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]}},"doc://com.swallow.documentation.Compute/documentation/Compute/MutableCollection/SubSequence":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/MutableCollection\/SubSequence","role":"symbol","required":true,"fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SubSequence"}],"title":"SubSequence","type":"topic","url":"\/documentation\/compute\/mutablecollection\/subsequence","kind":"symbol","abstract":[]},"doc://com.swallow.documentation.Compute/documentation/Compute/MutableCollection":{"role":"symbol","kind":"symbol","type":"topic","title":"MutableCollection","url":"\/documentation\/compute\/mutablecollection","navigatorTitle":[{"text":"MutableCollection","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/MutableCollection","abstract":[{"type":"text","text":"A collection that supports subscript assignment."}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"MutableCollection"}]}}}