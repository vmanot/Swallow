{"metadata":{"externalID":"s:SlsE7isEmptySbvp::SYNTHESIZED::s:7Compute10TreeChainsV","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isEmpty"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"modules":[{"relatedModules":["Swift"],"name":"Compute"}],"symbolKind":"property","extendedModule":"Swift","roleHeading":"Instance Property","title":"isEmpty"},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"isEmpty"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bool","kind":"typeIdentifier"},{"kind":"text","text":" { "},{"kind":"keyword","text":"get"},{"text":" }","kind":"text"}],"languages":["swift"],"platforms":["macOS"]}]},{"content":[{"text":"Discussion","level":2,"anchor":"discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"When you need to check whether your collection is empty, use the","type":"text"},{"text":" ","type":"text"},{"code":"isEmpty","type":"codeVoice"},{"type":"text","text":" property instead of checking that the "},{"code":"count","type":"codeVoice"},{"text":" property is","type":"text"},{"type":"text","text":" "},{"text":"equal to zero. For collections that donâ€™t conform to","type":"text"},{"text":" ","type":"text"},{"code":"RandomAccessCollection","type":"codeVoice"},{"type":"text","text":", accessing the "},{"type":"codeVoice","code":"count"},{"text":" property iterates","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"through the elements of the collection."}]},{"type":"codeListing","code":["let horseName = \"Silver\"","if horseName.isEmpty {","    print(\"My horse has no name.\")","} else {","    print(\"Hi ho, \\(horseName)!\")","}","\/\/ Prints \"Hi ho, Silver!\")"],"syntax":null},{"style":"note","name":"Complexity","content":[{"type":"paragraph","inlineContent":[{"text":"O(1)","type":"text"}]}],"type":"aside"}],"kind":"content"}],"variants":[{"paths":["\/documentation\/compute\/treechains\/isempty"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/TreeChains\/isEmpty","interfaceLanguage":"swift"},"abstract":[{"text":"A Boolean value indicating whether the collection is empty.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/TreeChains","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/TreeChains\/Collection-Implementations"]]},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/TreeChains/isEmpty":{"title":"isEmpty","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/TreeChains\/isEmpty","kind":"symbol","role":"symbol","url":"\/documentation\/compute\/treechains\/isempty","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isEmpty","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"type":"topic","abstract":[{"type":"text","text":"A Boolean value indicating whether the collection is empty."}]},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/TreeChains":{"url":"\/documentation\/compute\/treechains","abstract":[],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/TreeChains","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"TreeChains","kind":"identifier"}],"title":"TreeChains","navigatorTitle":[{"kind":"identifier","text":"TreeChains"}],"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Bool":{"url":"\/documentation\/compute\/bool","role":"symbol","title":"Bool","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Bool","kind":"identifier"}],"abstract":[{"type":"text","text":"A value type whose instances are either "},{"type":"codeVoice","code":"true"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"false"},{"text":".","type":"text"}],"navigatorTitle":[{"text":"Bool","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bool","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/TreeChains/Collection-Implementations":{"url":"\/documentation\/compute\/treechains\/collection-implementations","role":"collectionGroup","abstract":[],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/TreeChains\/Collection-Implementations","title":"Collection Implementations","kind":"article"}}}