{"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute"]]},"abstract":[{"type":"text","text":"A sequence whose elements consist of the initial consecutive elements of"},{"type":"text","text":" "},{"text":"some base sequence that satisfy a given predicate.","type":"text"}],"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyPrefixWhileSequence","interfaceLanguage":"swift"},"metadata":{"navigatorTitle":[{"text":"LazyPrefixWhileSequence","kind":"identifier"}],"roleHeading":"Structure","role":"symbol","symbolKind":"struct","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"LazyPrefixWhileSequence","kind":"identifier"}],"modules":[{"name":"Compute"}],"externalID":"s:s23LazyPrefixWhileSequenceV","title":"LazyPrefixWhileSequence"},"schemaVersion":{"major":0,"minor":3,"patch":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/lazyprefixwhilesequence"]}],"topicSections":[{"anchor":"Type-Aliases","identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyPrefixWhileSequence\/Element"],"generated":true,"title":"Type Aliases"},{"generated":true,"identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyPrefixWhileSequence\/BidirectionalCollection-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyPrefixWhileSequence\/Collection-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyPrefixWhileSequence\/LazySequenceProtocol-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyPrefixWhileSequence\/Sequence-Implementations"],"title":"Default Implementations","anchor":"Default-Implementations"}],"relationshipsSections":[{"identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BidirectionalCollection","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Copyable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyCollectionProtocol","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazySequenceProtocol","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"@frozen","kind":"attribute"},{"text":" ","kind":"text"},{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"LazyPrefixWhileSequence","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Base"},{"text":"> ","kind":"text"},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"text":"Base","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence","kind":"typeIdentifier","text":"Sequence","preciseIdentifier":"s:ST"}]}]},{"kind":"content","content":[{"type":"heading","level":2,"text":"Overview","anchor":"overview"},{"name":"Note","type":"aside","content":[{"inlineContent":[{"text":"When ","type":"text"},{"code":"LazyPrefixWhileSequence","type":"codeVoice"},{"text":" wraps a collection type, the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"performance of accessing "},{"code":"endIndex","type":"codeVoice"},{"text":" depends on how many","type":"text"},{"type":"text","text":" "},{"text":"elements satisfy the predicate at the start of the collection, and might","type":"text"},{"type":"text","text":" "},{"text":"not offer the usual performance given by the ","type":"text"},{"code":"Collection","type":"codeVoice"},{"text":" protocol.","type":"text"},{"text":" ","type":"text"},{"text":"Accessing ","type":"text"},{"code":"endIndex","type":"codeVoice"},{"text":", the ","type":"text"},{"code":"last","type":"codeVoice"},{"type":"text","text":" property, or calling methods that"},{"text":" ","type":"text"},{"type":"text","text":"depend on moving indices might not have the documented complexity."}],"type":"paragraph"}],"style":"note"}]}],"sections":[],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/LazyPrefixWhileSequence/BidirectionalCollection-Implementations":{"role":"collectionGroup","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyPrefixWhileSequence\/BidirectionalCollection-Implementations","type":"topic","kind":"article","title":"BidirectionalCollection Implementations","url":"\/documentation\/compute\/lazyprefixwhilesequence\/bidirectionalcollection-implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/LazyPrefixWhileSequence/LazySequenceProtocol-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyPrefixWhileSequence\/LazySequenceProtocol-Implementations","type":"topic","kind":"article","abstract":[],"role":"collectionGroup","url":"\/documentation\/compute\/lazyprefixwhilesequence\/lazysequenceprotocol-implementations","title":"LazySequenceProtocol Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/LazySequenceProtocol":{"navigatorTitle":[{"text":"LazySequenceProtocol","kind":"identifier"}],"type":"topic","role":"symbol","abstract":[{"type":"text","text":"A sequence on which normally-eager sequence operations are implemented"},{"type":"text","text":" "},{"text":"lazily.","type":"text"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"LazySequenceProtocol","kind":"identifier"}],"conformance":{"constraints":[{"code":"Base","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Collection"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"url":"\/documentation\/compute\/lazysequenceprotocol","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazySequenceProtocol","title":"LazySequenceProtocol"},"doc://com.swallow.documentation.Compute/documentation/Compute/LazyPrefixWhileSequence/Collection-Implementations":{"title":"Collection Implementations","url":"\/documentation\/compute\/lazyprefixwhilesequence\/collection-implementations","kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyPrefixWhileSequence\/Collection-Implementations","role":"collectionGroup","type":"topic","abstract":[]},"doc://com.swallow.documentation.Compute/documentation/Compute/LazyPrefixWhileSequence/Element":{"abstract":[{"type":"text","text":"A type representing the sequenceâ€™s elements."}],"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"identifier"}],"navigatorTitle":[{"text":"Element","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/compute\/lazyprefixwhilesequence\/element","type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyPrefixWhileSequence\/Element","title":"LazyPrefixWhileSequence.Element","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/LazyCollectionProtocol":{"kind":"symbol","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyCollectionProtocol","title":"LazyCollectionProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"LazyCollectionProtocol"}],"url":"\/documentation\/compute\/lazycollectionprotocol","type":"topic","role":"symbol","navigatorTitle":[{"text":"LazyCollectionProtocol","kind":"identifier"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Base","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Collection"},{"text":".","type":"text"}]}},"doc://com.swallow.documentation.Compute/documentation/Compute/LazyPrefixWhileSequence/Sequence-Implementations":{"type":"topic","abstract":[],"title":"Sequence Implementations","kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyPrefixWhileSequence\/Sequence-Implementations","role":"collectionGroup","url":"\/documentation\/compute\/lazyprefixwhilesequence\/sequence-implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence":{"abstract":[{"text":"A type that provides sequential, iterated access to its elements.","type":"text"}],"type":"topic","kind":"symbol","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Base","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"BidirectionalCollection"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence","title":"Sequence","role":"symbol","navigatorTitle":[{"text":"Sequence","kind":"identifier"}],"url":"\/documentation\/compute\/sequence","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"Sequence","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/BidirectionalCollection":{"navigatorTitle":[{"text":"BidirectionalCollection","kind":"identifier"}],"type":"topic","role":"symbol","abstract":[{"type":"text","text":"A collection that supports backward as well as forward traversal."}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"BidirectionalCollection"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Base"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"BidirectionalCollection"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"url":"\/documentation\/compute\/bidirectionalcollection","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BidirectionalCollection","title":"BidirectionalCollection"},"doc://com.swallow.documentation.Compute/documentation/Compute/Collection":{"kind":"symbol","abstract":[{"type":"text","text":"A sequence whose elements can be traversed multiple times,"},{"type":"text","text":" "},{"type":"text","text":"nondestructively, and accessed by an indexed subscript."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection","title":"Collection","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Collection"}],"url":"\/documentation\/compute\/collection","type":"topic","role":"symbol","navigatorTitle":[{"text":"Collection","kind":"identifier"}],"conformance":{"constraints":[{"code":"Base","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Collection","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]}},"doc://com.swallow.documentation.Compute/documentation/Compute/LazyPrefixWhileSequence":{"type":"topic","role":"symbol","url":"\/documentation\/compute\/lazyprefixwhilesequence","title":"LazyPrefixWhileSequence","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"LazyPrefixWhileSequence"}],"abstract":[{"type":"text","text":"A sequence whose elements consist of the initial consecutive elements of"},{"text":" ","type":"text"},{"text":"some base sequence that satisfy a given predicate.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"LazyPrefixWhileSequence"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyPrefixWhileSequence"},"doc://com.swallow.documentation.Compute/documentation/Compute/Copyable":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Copyable"}],"kind":"symbol","type":"topic","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Base"},{"type":"text","text":" conforms to "},{"code":"Sequence","type":"codeVoice"},{"text":".","type":"text"}]},"url":"\/documentation\/compute\/copyable","abstract":[{"type":"text","text":"A type whose values can be implicitly or explicitly copied."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Copyable","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Copyable"}],"title":"Copyable"}}}