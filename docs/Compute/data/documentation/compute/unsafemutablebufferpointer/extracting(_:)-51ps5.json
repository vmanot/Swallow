{"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"extracting","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"bounds"},{"text":": some ","kind":"text"},{"text":"RangeExpression","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RangeExpression","kind":"typeIdentifier","preciseIdentifier":"s:SX"},{"text":"<","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableBufferPointer","preciseIdentifier":"s:Sr","kind":"typeIdentifier","text":"UnsafeMutableBufferPointer"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Element"},{"text":">","kind":"text"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"parameters":[{"content":[{"inlineContent":[{"text":"A valid range of indices within this buffer.","type":"text"}],"type":"paragraph"}],"name":"bounds"}],"kind":"parameters"},{"content":[{"level":2,"anchor":"return-value","type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A new buffer pointer over the items at "},{"type":"codeVoice","code":"bounds"},{"text":".","type":"text"}]}],"kind":"content"},{"content":[{"level":2,"type":"heading","anchor":"discussion","text":"Discussion"},{"inlineContent":[{"type":"text","text":"The returned bufferâ€™s first item is always at index 0; unlike buffer"},{"type":"text","text":" "},{"type":"text","text":"slices, extracted buffers do not generally share their indices with the"},{"text":" ","type":"text"},{"text":"original buffer pointer.","type":"text"}],"type":"paragraph"},{"code":["withUnsafeTemporaryAllocation(of: Int.self, capacity: 5) { buffer in","  buffer.initialize(repeating: 0)","  \/\/ buffer contains [0, 0, 0, 0, 0]","  let part = buffer.extracting(2...)","  part[0] = 1","  part[1] = 2","  \/\/ buffer now contains [0, 0, 1, 2, 0]","}"],"type":"codeListing","syntax":null},{"inlineContent":[{"text":"When ","type":"text"},{"type":"codeVoice","code":"Element"},{"text":" is copyable, the ","type":"text"},{"type":"codeVoice","code":"extracting"},{"type":"text","text":" operation is equivalent to"},{"text":" ","type":"text"},{"type":"text","text":"slicing the buffer then rebasing the resulting buffer slice:"}],"type":"paragraph"},{"code":["let a = buffer.extracting(i ..< j)","let b = UnsafeBufferPointer(rebasing: buffer[i ..< j])","\/\/ `a` and `b` are now holding the same buffer"],"syntax":null,"type":"codeListing"},{"inlineContent":[{"text":"However, unlike slicing, the ","type":"text"},{"code":"extracting","type":"codeVoice"},{"type":"text","text":" operation remains available even"},{"type":"text","text":" "},{"text":"if ","type":"text"},{"code":"Element","type":"codeVoice"},{"type":"text","text":" happens to be noncopyable."}],"type":"paragraph"}],"kind":"content"}],"kind":"symbol","metadata":{"role":"symbol","extendedModule":"Swift","title":"extracting(_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"extracting"},{"text":"(some ","kind":"text"},{"text":"RangeExpression","kind":"typeIdentifier","preciseIdentifier":"s:SX"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":">) -> "},{"text":"UnsafeMutableBufferPointer","kind":"typeIdentifier","preciseIdentifier":"s:Sr"},{"kind":"text","text":"<"},{"text":"Element","kind":"typeIdentifier"},{"text":">","kind":"text"}],"externalID":"s:SrsRi_zrlE10extractingySryxGqd__SXRd__Si5BoundRtd__lF","modules":[{"relatedModules":["Swift"],"name":"Compute"}],"roleHeading":"Instance Method","symbolKind":"method"},"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableBufferPointer\/extracting(_:)-51ps5","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/unsafemutablebufferpointer\/extracting(_:)-51ps5"]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"abstract":[{"text":"Constructs a standalone buffer pointer over the items within the supplied","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"range of positions in the memory region addressed by this buffer pointer."}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableBufferPointer"]]},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeMutableBufferPointer/extracting(_:)-51ps5":{"title":"extracting(_:)","type":"topic","abstract":[{"text":"Constructs a standalone buffer pointer over the items within the supplied","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"range of positions in the memory region addressed by this buffer pointer."}],"url":"\/documentation\/compute\/unsafemutablebufferpointer\/extracting(_:)-51ps5","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"extracting","kind":"identifier"},{"kind":"text","text":"(some "},{"preciseIdentifier":"s:SX","kind":"typeIdentifier","text":"RangeExpression"},{"kind":"text","text":"<"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sr","text":"UnsafeMutableBufferPointer"},{"text":"<","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"kind":"text","text":">"}],"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableBufferPointer\/extracting(_:)-51ps5","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/RangeExpression":{"abstract":[{"text":"A type that can be used to slice a collection.","type":"text"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"RangeExpression","kind":"identifier"}],"url":"\/documentation\/compute\/rangeexpression","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RangeExpression","kind":"symbol","title":"RangeExpression","role":"symbol","type":"topic","navigatorTitle":[{"text":"RangeExpression","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Int":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","abstract":[{"type":"text","text":"A signed integer value type."}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Int","kind":"identifier"}],"navigatorTitle":[{"text":"Int","kind":"identifier"}],"title":"Int","url":"\/documentation\/compute\/int","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeMutableBufferPointer":{"kind":"symbol","url":"\/documentation\/compute\/unsafemutablebufferpointer","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"UnsafeMutableBufferPointer","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"UnsafeMutableBufferPointer"}],"abstract":[{"type":"text","text":"A nonowning collection interface to a buffer of mutable"},{"text":" ","type":"text"},{"text":"elements stored contiguously in memory.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableBufferPointer","title":"UnsafeMutableBufferPointer","type":"topic","role":"symbol"}}}