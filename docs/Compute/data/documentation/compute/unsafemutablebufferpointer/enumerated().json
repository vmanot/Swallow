{"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableBufferPointer\/enumerated()"},"metadata":{"symbolKind":"method","modules":[{"name":"Compute","relatedModules":["Swift"]}],"externalID":"s:STsE10enumerateds18EnumeratedSequenceVyxGyF::SYNTHESIZED::s:Sr","roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"enumerated","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"EnumeratedSequence","kind":"typeIdentifier","preciseIdentifier":"s:s18EnumeratedSequenceV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"extendedModule":"Swift","role":"symbol","title":"enumerated()"},"abstract":[{"text":"Returns a sequence of pairs (","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"n"}]},{"type":"text","text":", "},{"type":"emphasis","inlineContent":[{"type":"text","text":"x"}]},{"type":"text","text":"), where "},{"type":"emphasis","inlineContent":[{"text":"n","type":"text"}]},{"type":"text","text":" represents a"},{"type":"text","text":" "},{"type":"text","text":"consecutive integer starting at zero and "},{"type":"emphasis","inlineContent":[{"type":"text","text":"x"}]},{"type":"text","text":" represents an element of"},{"type":"text","text":" "},{"type":"text","text":"the sequence."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"enumerated","kind":"identifier"},{"text":"() -> ","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/EnumeratedSequence","text":"EnumeratedSequence","kind":"typeIdentifier","preciseIdentifier":"s:s18EnumeratedSequenceV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"return-value","text":"Return Value","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"A sequence of pairs enumerating the sequence.","type":"text"}]}]},{"kind":"content","content":[{"type":"heading","anchor":"discussion","level":2,"text":"Discussion"},{"inlineContent":[{"text":"This example enumerates the characters of the string “Swift” and prints","type":"text"},{"text":" ","type":"text"},{"text":"each character along with its place in the string.","type":"text"}],"type":"paragraph"},{"syntax":null,"code":["for (n, c) in \"Swift\".enumerated() {","    print(\"\\(n): '\\(c)'\")","}","\/\/ Prints \"0: 'S'\"","\/\/ Prints \"1: 'w'\"","\/\/ Prints \"2: 'i'\"","\/\/ Prints \"3: 'f'\"","\/\/ Prints \"4: 't'\""],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"When you enumerate a collection, the integer part of each pair is a counter"},{"text":" ","type":"text"},{"type":"text","text":"for the enumeration, but is not necessarily the index of the paired value."},{"text":" ","type":"text"},{"type":"text","text":"These counters can be used as indices only in instances of zero-based,"},{"text":" ","type":"text"},{"type":"text","text":"integer-indexed collections, such as "},{"type":"codeVoice","code":"Array"},{"type":"text","text":" and "},{"type":"codeVoice","code":"ContiguousArray"},{"type":"text","text":". For"},{"text":" ","type":"text"},{"text":"other collections the counters may be out of range or of the wrong type","type":"text"},{"type":"text","text":" "},{"type":"text","text":"to use as an index. To iterate over the elements of a collection with its"},{"text":" ","type":"text"},{"text":"indices, use the ","type":"text"},{"type":"codeVoice","code":"zip(_:_:)"},{"type":"text","text":" function."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This example iterates over the indices and elements of a set, building a"},{"type":"text","text":" "},{"type":"text","text":"list consisting of indices of names with five or fewer letters."}]},{"code":["let names: Set = [\"Sofia\", \"Camilla\", \"Martina\", \"Mateo\", \"Nicolás\"]","var shorterIndices: [Set<String>.Index] = []","for (i, name) in zip(names.indices, names) {","    if name.count <= 5 {","        shorterIndices.append(i)","    }","}"],"type":"codeListing","syntax":null},{"inlineContent":[{"text":"Now that the ","type":"text"},{"type":"codeVoice","code":"shorterIndices"},{"text":" array holds the indices of the shorter","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"names in the "},{"code":"names","type":"codeVoice"},{"text":" set, you can use those indices to access elements in","type":"text"},{"text":" ","type":"text"},{"text":"the set.","type":"text"}],"type":"paragraph"},{"code":["for i in shorterIndices {","    print(names[i])","}","\/\/ Prints \"Sofia\"","\/\/ Prints \"Mateo\""],"type":"codeListing","syntax":null},{"type":"aside","content":[{"inlineContent":[{"type":"text","text":"O(1)"}],"type":"paragraph"}],"style":"note","name":"Complexity"}]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableBufferPointer","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableBufferPointer\/Sequence-Implementations"]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/unsafemutablebufferpointer\/enumerated()"]}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/EnumeratedSequence":{"url":"\/documentation\/compute\/enumeratedsequence","navigatorTitle":[{"text":"EnumeratedSequence","kind":"identifier"}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"EnumeratedSequence"}],"abstract":[{"text":"An enumeration of the elements of a sequence or collection.","type":"text"}],"type":"topic","title":"EnumeratedSequence","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/EnumeratedSequence"},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeMutableBufferPointer/Sequence-Implementations":{"role":"collectionGroup","type":"topic","kind":"article","abstract":[],"title":"Sequence Implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableBufferPointer\/Sequence-Implementations","url":"\/documentation\/compute\/unsafemutablebufferpointer\/sequence-implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeMutableBufferPointer":{"kind":"symbol","url":"\/documentation\/compute\/unsafemutablebufferpointer","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"UnsafeMutableBufferPointer","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"UnsafeMutableBufferPointer"}],"abstract":[{"type":"text","text":"A nonowning collection interface to a buffer of mutable"},{"text":" ","type":"text"},{"text":"elements stored contiguously in memory.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableBufferPointer","title":"UnsafeMutableBufferPointer","type":"topic","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeMutableBufferPointer/enumerated()":{"role":"symbol","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"enumerated","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"EnumeratedSequence","kind":"typeIdentifier","preciseIdentifier":"s:s18EnumeratedSequenceV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":">","kind":"text"}],"title":"enumerated()","url":"\/documentation\/compute\/unsafemutablebufferpointer\/enumerated()","abstract":[{"text":"Returns a sequence of pairs (","type":"text"},{"inlineContent":[{"type":"text","text":"n"}],"type":"emphasis"},{"type":"text","text":", "},{"inlineContent":[{"text":"x","type":"text"}],"type":"emphasis"},{"text":"), where ","type":"text"},{"inlineContent":[{"text":"n","type":"text"}],"type":"emphasis"},{"text":" represents a","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"consecutive integer starting at zero and "},{"type":"emphasis","inlineContent":[{"text":"x","type":"text"}]},{"text":" represents an element of","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the sequence."}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableBufferPointer\/enumerated()"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"}}}