{"schemaVersion":{"patch":0,"major":0,"minor":3},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"extracting"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"text":"bounds","kind":"internalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sn","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Range","text":"Range"},{"kind":"text","text":"<"},{"text":"Int","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","preciseIdentifier":"s:Si"},{"text":">) -> ","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableBufferPointer","preciseIdentifier":"s:Sr","text":"UnsafeMutableBufferPointer","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Element","kind":"typeIdentifier"},{"kind":"text","text":">"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"bounds","content":[{"inlineContent":[{"type":"text","text":"A valid range of indices within this buffer."}],"type":"paragraph"}]}]},{"content":[{"type":"heading","level":2,"anchor":"return-value","text":"Return Value"},{"inlineContent":[{"text":"A new buffer pointer over the items at ","type":"text"},{"type":"codeVoice","code":"bounds"},{"text":".","type":"text"}],"type":"paragraph"}],"kind":"content"},{"kind":"content","content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"inlineContent":[{"text":"The returned bufferâ€™s first item is always at index 0; unlike buffer","type":"text"},{"type":"text","text":" "},{"text":"slices, extracted buffers do not generally share their indices with the","type":"text"},{"type":"text","text":" "},{"text":"original buffer pointer.","type":"text"}],"type":"paragraph"},{"syntax":null,"type":"codeListing","code":["withUnsafeTemporaryAllocation(of: Int.self, capacity: 5) { buffer in","  buffer.initialize(repeating: 0)","  \/\/ buffer contains [0, 0, 0, 0, 0]","  let part = buffer.extracting(2 ..< 4)","  part[0] = 1","  part[1] = 2","  \/\/ buffer now contains [0, 0, 1, 2, 0]","}"]},{"type":"paragraph","inlineContent":[{"text":"When ","type":"text"},{"code":"Element","type":"codeVoice"},{"text":" is copyable, the ","type":"text"},{"type":"codeVoice","code":"extracting"},{"type":"text","text":" operation is equivalent to"},{"text":" ","type":"text"},{"type":"text","text":"slicing the buffer then rebasing the resulting buffer slice:"}]},{"type":"codeListing","syntax":null,"code":["let a = buffer.extracting(i ..< j)","let b = UnsafeBufferPointer(rebasing: buffer[i ..< j])","\/\/ `a` and `b` are now holding the same buffer"]},{"type":"paragraph","inlineContent":[{"text":"However, unlike slicing, the ","type":"text"},{"code":"extracting","type":"codeVoice"},{"text":" operation remains available even","type":"text"},{"type":"text","text":" "},{"text":"if ","type":"text"},{"type":"codeVoice","code":"Element"},{"type":"text","text":" happens to be noncopyable."}]}]}],"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableBufferPointer\/extracting(_:)-4izct"},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableBufferPointer"]]},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/unsafemutablebufferpointer\/extracting(_:)-4izct"]}],"metadata":{"extendedModule":"Swift","symbolKind":"method","externalID":"s:SrsRi_zrlE10extractingySryxGSnySiGF","modules":[{"name":"Compute","relatedModules":["Swift"]}],"role":"symbol","title":"extracting(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"extracting"},{"kind":"text","text":"("},{"preciseIdentifier":"s:Sn","text":"Range","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"UnsafeMutableBufferPointer","preciseIdentifier":"s:Sr","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Element"},{"text":">","kind":"text"}],"roleHeading":"Instance Method"},"abstract":[{"type":"text","text":"Constructs a standalone buffer pointer over the items within the supplied"},{"text":" ","type":"text"},{"type":"text","text":"range of positions in the memory region addressed by this buffer pointer."}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeMutableBufferPointer":{"kind":"symbol","url":"\/documentation\/compute\/unsafemutablebufferpointer","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"UnsafeMutableBufferPointer","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"UnsafeMutableBufferPointer"}],"abstract":[{"type":"text","text":"A nonowning collection interface to a buffer of mutable"},{"text":" ","type":"text"},{"text":"elements stored contiguously in memory.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableBufferPointer","title":"UnsafeMutableBufferPointer","type":"topic","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","abstract":[{"type":"text","text":"A signed integer value type."}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Int","kind":"identifier"}],"navigatorTitle":[{"text":"Int","kind":"identifier"}],"title":"Int","url":"\/documentation\/compute\/int","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeMutableBufferPointer/extracting(_:)-4izct":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableBufferPointer\/extracting(_:)-4izct","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"extracting","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:Sn","text":"Range","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","text":"UnsafeMutableBufferPointer","preciseIdentifier":"s:Sr"},{"text":"<","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":">","kind":"text"}],"role":"symbol","url":"\/documentation\/compute\/unsafemutablebufferpointer\/extracting(_:)-4izct","abstract":[{"text":"Constructs a standalone buffer pointer over the items within the supplied","type":"text"},{"type":"text","text":" "},{"type":"text","text":"range of positions in the memory region addressed by this buffer pointer."}],"title":"extracting(_:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/Range":{"kind":"symbol","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Range","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Range","url":"\/documentation\/compute\/range","abstract":[{"text":"A half-open interval from a lower bound up to, but not including, an upper","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"bound."}],"navigatorTitle":[{"text":"Range","kind":"identifier"}],"title":"Range"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"}}}