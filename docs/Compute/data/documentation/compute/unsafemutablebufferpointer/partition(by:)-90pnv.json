{"schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableBufferPointer\/partition(by:)-90pnv","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"mutating","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"partition","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"by"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"belongsInSecondPartition"},{"text":": (","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Element","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bool","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:Sl5IndexQa","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/Index","text":"Index","kind":"typeIdentifier"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"name":"belongsInSecondPartition","content":[{"inlineContent":[{"type":"text","text":"A predicate used to partition"},{"type":"text","text":" "},{"type":"text","text":"the collection. All elements satisfying this predicate are ordered"},{"type":"text","text":" "},{"type":"text","text":"after all elements not satisfying it."}],"type":"paragraph"}]}]},{"kind":"content","content":[{"text":"Return Value","level":2,"type":"heading","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The index of the first element in the reordered collection"},{"type":"text","text":" "},{"type":"text","text":"that matches "},{"code":"belongsInSecondPartition","type":"codeVoice"},{"type":"text","text":". If no elements in the"},{"text":" ","type":"text"},{"text":"collection match ","type":"text"},{"type":"codeVoice","code":"belongsInSecondPartition"},{"type":"text","text":", the returned index is"},{"text":" ","type":"text"},{"text":"equal to the collection’s ","type":"text"},{"type":"codeVoice","code":"endIndex"},{"type":"text","text":"."}]}]},{"content":[{"level":2,"text":"Discussion","anchor":"discussion","type":"heading"},{"inlineContent":[{"type":"text","text":"After partitioning a collection, there is a pivot index "},{"type":"codeVoice","code":"p"},{"text":" where","type":"text"},{"text":" ","type":"text"},{"text":"no element before ","type":"text"},{"type":"codeVoice","code":"p"},{"text":" satisfies the ","type":"text"},{"type":"codeVoice","code":"belongsInSecondPartition"},{"type":"text","text":" "},{"type":"text","text":"predicate and every element at or after "},{"type":"codeVoice","code":"p"},{"type":"text","text":" satisfies"},{"type":"text","text":" "},{"type":"codeVoice","code":"belongsInSecondPartition"},{"text":". This operation isn’t guaranteed to be","type":"text"},{"type":"text","text":" "},{"type":"text","text":"stable, so the relative ordering of elements within the partitions might"},{"type":"text","text":" "},{"text":"change.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"In the following example, an array of numbers is partitioned by a"},{"text":" ","type":"text"},{"type":"text","text":"predicate that matches elements greater than 30."}],"type":"paragraph"},{"syntax":null,"code":["var numbers = [30, 40, 20, 30, 30, 60, 10]","let p = numbers.partition(by: { $0 > 30 })","\/\/ p == 5","\/\/ numbers == [30, 10, 20, 30, 30, 60, 40]"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"numbers"},{"type":"text","text":" array is now arranged in two partitions. The first"},{"type":"text","text":" "},{"text":"partition, ","type":"text"},{"type":"codeVoice","code":"numbers[..<p]"},{"type":"text","text":", is made up of the elements that"},{"text":" ","type":"text"},{"text":"are not greater than 30. The second partition, ","type":"text"},{"code":"numbers[p...]","type":"codeVoice"},{"text":",","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"is made up of the elements that "},{"inlineContent":[{"type":"text","text":"are"}],"type":"emphasis"},{"type":"text","text":" greater than 30."}],"type":"paragraph"},{"syntax":null,"type":"codeListing","code":["let first = numbers[..<p]","\/\/ first == [30, 10, 20, 30, 30]","let second = numbers[p...]","\/\/ second == [60, 40]"]},{"inlineContent":[{"type":"text","text":"Note that the order of elements in both partitions changed."},{"text":" ","type":"text"},{"type":"text","text":"That is, "},{"type":"codeVoice","code":"40"},{"type":"text","text":" appears before "},{"type":"codeVoice","code":"60"},{"text":" in the original collection,","type":"text"},{"text":" ","type":"text"},{"text":"but, after calling ","type":"text"},{"type":"codeVoice","code":"partition(by:)"},{"type":"text","text":", "},{"type":"codeVoice","code":"60"},{"text":" appears before ","type":"text"},{"type":"codeVoice","code":"40"},{"type":"text","text":"."}],"type":"paragraph"},{"name":"Complexity","content":[{"inlineContent":[{"type":"text","text":"O("},{"type":"emphasis","inlineContent":[{"text":"n","type":"text"}]},{"text":"), where ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"n"}]},{"type":"text","text":" is the length of the collection."}],"type":"paragraph"}],"type":"aside","style":"note"}],"kind":"content"}],"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/unsafemutablebufferpointer\/partition(by:)-90pnv"]}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableBufferPointer","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableBufferPointer\/MutableCollection-Implementations"]]},"metadata":{"modules":[{"name":"Compute","relatedModules":["Swift"]}],"roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"partition","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"by"},{"kind":"text","text":": ("},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"rethrows","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Index","kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa"}],"externalID":"s:SMsE9partition2by5IndexQzSb7ElementQzKXE_tKF::SYNTHESIZED::s:Sr","extendedModule":"Swift","symbolKind":"method","title":"partition(by:)","role":"symbol"},"sections":[],"abstract":[{"type":"text","text":"Reorders the elements of the collection such that all the elements"},{"type":"text","text":" "},{"text":"that match the given predicate are after all the elements that don’t","type":"text"},{"type":"text","text":" "},{"text":"match.","type":"text"}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeMutableBufferPointer/MutableCollection-Implementations":{"kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableBufferPointer\/MutableCollection-Implementations","url":"\/documentation\/compute\/unsafemutablebufferpointer\/mutablecollection-implementations","type":"topic","title":"MutableCollection Implementations","abstract":[],"role":"collectionGroup"},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence/Element":{"type":"topic","required":true,"abstract":[{"type":"text","text":"A type representing the sequence’s elements."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"symbol","url":"\/documentation\/compute\/sequence\/element","role":"symbol","title":"Element","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeMutableBufferPointer":{"kind":"symbol","url":"\/documentation\/compute\/unsafemutablebufferpointer","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"UnsafeMutableBufferPointer","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"UnsafeMutableBufferPointer"}],"abstract":[{"type":"text","text":"A nonowning collection interface to a buffer of mutable"},{"text":" ","type":"text"},{"text":"elements stored contiguously in memory.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableBufferPointer","title":"UnsafeMutableBufferPointer","type":"topic","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Bool":{"url":"\/documentation\/compute\/bool","role":"symbol","title":"Bool","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Bool","kind":"identifier"}],"abstract":[{"type":"text","text":"A value type whose instances are either "},{"type":"codeVoice","code":"true"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"false"},{"text":".","type":"text"}],"navigatorTitle":[{"text":"Bool","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bool","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Collection/Index":{"url":"\/documentation\/compute\/collection\/index","required":true,"role":"symbol","title":"Index","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Index","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"Comparable","preciseIdentifier":"s:SL","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"A type that represents a position in the collection."}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/Index","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeMutableBufferPointer/partition(by:)-90pnv":{"url":"\/documentation\/compute\/unsafemutablebufferpointer\/partition(by:)-90pnv","abstract":[{"text":"Reorders the elements of the collection such that all the elements","type":"text"},{"type":"text","text":" "},{"type":"text","text":"that match the given predicate are after all the elements that don’t"},{"type":"text","text":" "},{"type":"text","text":"match."}],"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"partition","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"by"},{"kind":"text","text":": ("},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":") "},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Index","preciseIdentifier":"s:Sl5IndexQa","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableBufferPointer\/partition(by:)-90pnv","title":"partition(by:)","kind":"symbol","role":"symbol"}}}