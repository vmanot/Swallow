{"schemaVersion":{"patch":0,"minor":3,"major":0},"kind":"symbol","sections":[],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"reduce","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Result","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"into","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"initialResult","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"updateAccumulatingResult"},{"text":": (","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","text":"Element","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ()) ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Result","kind":"typeIdentifier"}],"platforms":["macOS"]}],"kind":"declarations"},{"parameters":[{"content":[{"inlineContent":[{"type":"text","text":"The value to use as the initial accumulating value."}],"type":"paragraph"}],"name":"initialResult"},{"content":[{"inlineContent":[{"type":"text","text":"A closure that updates the accumulating"},{"type":"text","text":" "},{"type":"text","text":"value with an element of the sequence."}],"type":"paragraph"}],"name":"updateAccumulatingResult"}],"kind":"parameters"},{"content":[{"text":"Return Value","anchor":"return-value","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"text":"The final accumulated value. If the sequence has no elements,","type":"text"},{"text":" ","type":"text"},{"text":"the result is ","type":"text"},{"type":"codeVoice","code":"initialResult"},{"type":"text","text":"."}]}],"kind":"content"},{"kind":"content","content":[{"level":2,"anchor":"discussion","type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Use the "},{"type":"codeVoice","code":"reduce(into:_:)"},{"type":"text","text":" method to produce a single value from the"},{"type":"text","text":" "},{"text":"elements of an entire sequence. For example, you can use this method on an","type":"text"},{"text":" ","type":"text"},{"text":"array of integers to filter adjacent equal entries or count frequencies.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"This method is preferred over ","type":"text"},{"type":"codeVoice","code":"reduce(_:_:)"},{"type":"text","text":" for efficiency when the"},{"text":" ","type":"text"},{"text":"result is a copy-on-write type, for example an Array or a Dictionary.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"code":"updateAccumulatingResult","type":"codeVoice"},{"type":"text","text":" closure is called sequentially with a"},{"type":"text","text":" "},{"type":"text","text":"mutable accumulating value initialized to "},{"code":"initialResult","type":"codeVoice"},{"type":"text","text":" and each element"},{"text":" ","type":"text"},{"type":"text","text":"of the sequence. This example shows how to build a dictionary of letter"},{"text":" ","type":"text"},{"text":"frequencies of a string.","type":"text"}]},{"syntax":null,"type":"codeListing","code":["let letters = \"abracadabra\"","let letterCount = letters.reduce(into: [:]) { counts, letter in","    counts[letter, default: 0] += 1","}","\/\/ letterCount == [\"a\": 5, \"b\": 2, \"r\": 2, \"c\": 1, \"d\": 1]"]},{"type":"paragraph","inlineContent":[{"text":"When ","type":"text"},{"type":"codeVoice","code":"letters.reduce(into:_:)"},{"type":"text","text":" is called, the following steps occur:"}]},{"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"code":"updateAccumulatingResult","type":"codeVoice"},{"type":"text","text":" closure is called with the initial"},{"type":"text","text":" "},{"type":"text","text":"accumulating value—"},{"code":"[:]","type":"codeVoice"},{"type":"text","text":" in this case—and the first character of"},{"type":"text","text":" "},{"code":"letters","type":"codeVoice"},{"type":"text","text":", modifying the accumulating value by setting "},{"type":"codeVoice","code":"1"},{"text":" for the key","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"\"a\""},{"text":".","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"The closure is called again repeatedly with the updated accumulating"},{"type":"text","text":" "},{"type":"text","text":"value and each element of the sequence."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"When the sequence is exhausted, the accumulating value is returned to"},{"text":" ","type":"text"},{"type":"text","text":"the caller."}],"type":"paragraph"}]}]},{"inlineContent":[{"type":"text","text":"If the sequence has no elements, "},{"type":"codeVoice","code":"updateAccumulatingResult"},{"type":"text","text":" is never"},{"type":"text","text":" "},{"type":"text","text":"executed and "},{"code":"initialResult","type":"codeVoice"},{"type":"text","text":" is the result of the call to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"reduce(into:_:)"},{"type":"text","text":"."}],"type":"paragraph"},{"name":"Complexity","style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"O("},{"type":"emphasis","inlineContent":[{"type":"text","text":"n"}]},{"text":"), where ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"n","type":"text"}]},{"text":" is the length of the sequence.","type":"text"}]}],"type":"aside"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/unsafemutablebufferpointer\/reduce(into:_:)"]}],"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableBufferPointer\/reduce(into:_:)","interfaceLanguage":"swift"},"metadata":{"extendedModule":"Swift","symbolKind":"method","role":"symbol","externalID":"s:STsE6reduce4into_qd__qd__n_yqd__z_7ElementQztKXEtKlF::SYNTHESIZED::s:Sr","roleHeading":"Instance Method","modules":[{"name":"Compute","relatedModules":["Swift"]}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"reduce","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Result","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"into"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Result"},{"text":", (","kind":"text"},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"text":"Result","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:ST7ElementQa"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> ()) "},{"text":"rethrows","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Result","kind":"typeIdentifier"}],"title":"reduce(into:_:)"},"abstract":[{"type":"text","text":"Returns the result of combining the elements of the sequence using the"},{"text":" ","type":"text"},{"text":"given closure.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableBufferPointer","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableBufferPointer\/Sequence-Implementations"]]},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeMutableBufferPointer":{"kind":"symbol","url":"\/documentation\/compute\/unsafemutablebufferpointer","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"UnsafeMutableBufferPointer","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"UnsafeMutableBufferPointer"}],"abstract":[{"type":"text","text":"A nonowning collection interface to a buffer of mutable"},{"text":" ","type":"text"},{"text":"elements stored contiguously in memory.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableBufferPointer","title":"UnsafeMutableBufferPointer","type":"topic","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeMutableBufferPointer/reduce(into:_:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"reduce"},{"text":"<","kind":"text"},{"text":"Result","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"into","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":", ("},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Result"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"text":" -> ()) ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Result"}],"abstract":[{"type":"text","text":"Returns the result of combining the elements of the sequence using the"},{"type":"text","text":" "},{"type":"text","text":"given closure."}],"url":"\/documentation\/compute\/unsafemutablebufferpointer\/reduce(into:_:)","title":"reduce(into:_:)","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableBufferPointer\/reduce(into:_:)","type":"topic","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence/Element":{"type":"topic","required":true,"abstract":[{"type":"text","text":"A type representing the sequence’s elements."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"symbol","url":"\/documentation\/compute\/sequence\/element","role":"symbol","title":"Element","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeMutableBufferPointer/Sequence-Implementations":{"role":"collectionGroup","type":"topic","kind":"article","abstract":[],"title":"Sequence Implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableBufferPointer\/Sequence-Implementations","url":"\/documentation\/compute\/unsafemutablebufferpointer\/sequence-implementations"}}}