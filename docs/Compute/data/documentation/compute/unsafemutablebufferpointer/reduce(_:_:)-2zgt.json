{"schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"kind":"symbol","primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"reduce"},{"kind":"text","text":"<"},{"text":"Result","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"initialResult","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Result"},{"text":", ","kind":"text"},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"nextPartialResult","kind":"internalParam"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"Result"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:ST7ElementQa"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":") "},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Result","kind":"typeIdentifier"}],"platforms":["macOS"]}],"kind":"declarations"},{"parameters":[{"name":"initialResult","content":[{"type":"paragraph","inlineContent":[{"text":"The value to use as the initial accumulating value.","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"initialResult"},{"type":"text","text":" is passed to "},{"type":"codeVoice","code":"nextPartialResult"},{"text":" the first time the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"closure is executed."}]}]},{"name":"nextPartialResult","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A closure that combines an accumulating value and"},{"text":" ","type":"text"},{"type":"text","text":"an element of the sequence into a new accumulating value, to be used"},{"text":" ","type":"text"},{"type":"text","text":"in the next call of the "},{"type":"codeVoice","code":"nextPartialResult"},{"type":"text","text":" closure or returned to"},{"type":"text","text":" "},{"type":"text","text":"the caller."}]}]}],"kind":"parameters"},{"kind":"content","content":[{"type":"heading","text":"Return Value","level":2,"anchor":"return-value"},{"type":"paragraph","inlineContent":[{"text":"The final accumulated value. If the sequence has no elements,","type":"text"},{"text":" ","type":"text"},{"text":"the result is ","type":"text"},{"code":"initialResult","type":"codeVoice"},{"text":".","type":"text"}]}]},{"kind":"content","content":[{"level":2,"anchor":"discussion","type":"heading","text":"Discussion"},{"inlineContent":[{"text":"Use the ","type":"text"},{"code":"reduce(_:_:)","type":"codeVoice"},{"type":"text","text":" method to produce a single value from the elements"},{"text":" ","type":"text"},{"type":"text","text":"of an entire sequence. For example, you can use this method on an array"},{"type":"text","text":" "},{"text":"of numbers to find their sum or product.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"nextPartialResult"},{"type":"text","text":" closure is called sequentially with an"},{"type":"text","text":" "},{"type":"text","text":"accumulating value initialized to "},{"type":"codeVoice","code":"initialResult"},{"type":"text","text":" and each element of"},{"text":" ","type":"text"},{"text":"the sequence. This example shows how to find the sum of an array of","type":"text"},{"type":"text","text":" "},{"text":"numbers.","type":"text"}]},{"code":["let numbers = [1, 2, 3, 4]","let numberSum = numbers.reduce(0, { x, y in","    x + y","})","\/\/ numberSum == 10"],"syntax":null,"type":"codeListing"},{"inlineContent":[{"text":"When ","type":"text"},{"code":"numbers.reduce(_:_:)","type":"codeVoice"},{"type":"text","text":" is called, the following steps occur:"}],"type":"paragraph"},{"type":"orderedList","items":[{"content":[{"inlineContent":[{"text":"The ","type":"text"},{"type":"codeVoice","code":"nextPartialResult"},{"type":"text","text":" closure is called with "},{"code":"initialResult","type":"codeVoice"},{"type":"text","text":"—"},{"code":"0","type":"codeVoice"},{"type":"text","text":" "},{"text":"in this case—and the first element of ","type":"text"},{"code":"numbers","type":"codeVoice"},{"type":"text","text":", returning the sum:"},{"type":"text","text":" "},{"code":"1","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"The closure is called again repeatedly with the previous call’s return"},{"text":" ","type":"text"},{"text":"value and each element of the sequence.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"When the sequence is exhausted, the last value returned from the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"closure is returned to the caller."}]}]}]},{"type":"paragraph","inlineContent":[{"text":"If the sequence has no elements, ","type":"text"},{"type":"codeVoice","code":"nextPartialResult"},{"type":"text","text":" is never executed"},{"type":"text","text":" "},{"text":"and ","type":"text"},{"type":"codeVoice","code":"initialResult"},{"type":"text","text":" is the result of the call to "},{"code":"reduce(_:_:)","type":"codeVoice"},{"text":".","type":"text"}]},{"name":"Complexity","style":"note","content":[{"type":"paragraph","inlineContent":[{"text":"O(","type":"text"},{"inlineContent":[{"type":"text","text":"n"}],"type":"emphasis"},{"text":"), where ","type":"text"},{"inlineContent":[{"text":"n","type":"text"}],"type":"emphasis"},{"text":" is the length of the sequence.","type":"text"}]}],"type":"aside"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/unsafemutablebufferpointer\/reduce(_:_:)-2zgt"]}],"abstract":[{"text":"Returns the result of combining the elements of the sequence using the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"given closure."}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableBufferPointer","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableBufferPointer\/Sequence-Implementations"]]},"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableBufferPointer\/reduce(_:_:)-2zgt","interfaceLanguage":"swift"},"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"reduce"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Result"},{"kind":"text","text":">("},{"text":"Result","kind":"typeIdentifier"},{"kind":"text","text":", ("},{"text":"Result","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Result"}],"externalID":"s:STsE6reduceyqd__qd___qd__qd___7ElementQztKXEtKlF::SYNTHESIZED::s:Sr","extendedModule":"Swift","modules":[{"relatedModules":["Swift"],"name":"Compute"}],"title":"reduce(_:_:)","role":"symbol","symbolKind":"method","roleHeading":"Instance Method"},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence/Element":{"type":"topic","required":true,"abstract":[{"type":"text","text":"A type representing the sequence’s elements."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"symbol","url":"\/documentation\/compute\/sequence\/element","role":"symbol","title":"Element","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeMutableBufferPointer":{"kind":"symbol","url":"\/documentation\/compute\/unsafemutablebufferpointer","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"UnsafeMutableBufferPointer","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"UnsafeMutableBufferPointer"}],"abstract":[{"type":"text","text":"A nonowning collection interface to a buffer of mutable"},{"text":" ","type":"text"},{"text":"elements stored contiguously in memory.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableBufferPointer","title":"UnsafeMutableBufferPointer","type":"topic","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeMutableBufferPointer/reduce(_:_:)-2zgt":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"reduce","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Result"},{"text":">(","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":", (","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:ST7ElementQa","text":"Element","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"Result","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"text":" -> ","kind":"text"},{"text":"Result","kind":"typeIdentifier"}],"url":"\/documentation\/compute\/unsafemutablebufferpointer\/reduce(_:_:)-2zgt","abstract":[{"type":"text","text":"Returns the result of combining the elements of the sequence using the"},{"type":"text","text":" "},{"type":"text","text":"given closure."}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableBufferPointer\/reduce(_:_:)-2zgt","role":"symbol","kind":"symbol","title":"reduce(_:_:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeMutableBufferPointer/Sequence-Implementations":{"role":"collectionGroup","type":"topic","kind":"article","abstract":[],"title":"Sequence Implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableBufferPointer\/Sequence-Implementations","url":"\/documentation\/compute\/unsafemutablebufferpointer\/sequence-implementations"}}}