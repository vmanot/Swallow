{"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"String","kind":"identifier"}],"navigatorTitle":[{"text":"String","kind":"identifier"}],"modules":[{"name":"Compute"}],"symbolKind":"struct","externalID":"s:SS","role":"symbol","title":"String","roleHeading":"Structure"},"relationshipsSections":[{"kind":"relationships","title":"Conforms To","identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BidirectionalCollection","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CVarArg","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CodingKeyRepresentable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Comparable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Copyable","doc:\/\/com.swallow.documentation.Compute\/16CoreTransferable0B0P","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CustomDebugStringConvertible","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CustomReflectable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CustomStringConvertible","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Decodable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Encodable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Equatable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ExpressibleByExtendedGraphemeClusterLiteral","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ExpressibleByStringInterpolation","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ExpressibleByStringLiteral","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ExpressibleByUnicodeScalarLiteral","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Hashable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LosslessStringConvertible","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/MirrorPath","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RangeReplaceableCollection","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sendable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/StringProtocol","doc:\/\/com.swallow.documentation.Compute\/7Swallow21AnyCodableConvertibleP","doc:\/\/com.swallow.documentation.Compute\/7Swallow14CoderPrimitiveP","doc:\/\/com.swallow.documentation.Compute\/7Swallow9CountableP","doc:\/\/com.swallow.documentation.Compute\/7Swallow13DataDecodableP","doc:\/\/com.swallow.documentation.Compute\/7Swallow32DataDecodableWithDefaultStrategyP","doc:\/\/com.swallow.documentation.Compute\/7Swallow13DataEncodableP","doc:\/\/com.swallow.documentation.Compute\/7Swallow32DataEncodableWithDefaultStrategyP","doc:\/\/com.swallow.documentation.Compute\/7Swallow28DestructivelyMutableSequenceP","doc:\/\/com.swallow.documentation.Compute\/7Swallow8DiffableP","doc:\/\/com.swallow.documentation.Compute\/7Swallow18ExtensibleSequenceP","doc:\/\/com.swallow.documentation.Compute\/7Swallow9InitiableP","doc:\/\/com.swallow.documentation.Compute\/7Swallow15MutableSequenceP","doc:\/\/com.swallow.documentation.Compute\/7Swallow24MutableStringConvertibleP","doc:\/\/com.swallow.documentation.Compute\/7Swallow36NonDestroyingBidirectionalCollectionP","doc:\/\/com.swallow.documentation.Compute\/7Swallow23NonDestroyingCollectionP","doc:\/\/com.swallow.documentation.Compute\/7Swallow21NonDestroyingSequenceP","doc:\/\/com.swallow.documentation.Compute\/7Swallow017SequenceInitiableB0P","doc:\/\/com.swallow.documentation.Compute\/7Swallow17StringConvertibleP","doc:\/\/com.swallow.documentation.Compute\/7Swallow19StringInitializableP","doc:\/\/com.swallow.documentation.Compute\/7Swallow17UTF8RepresentableP","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/TextOutputStream","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/TextOutputStreamable"],"type":"conformsTo"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"attribute","text":"@frozen"},{"text":" ","kind":"text"},{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"String","kind":"identifier"}],"platforms":["macOS"]}]},{"content":[{"level":2,"text":"Overview","anchor":"overview","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A string is a series of characters, such as "},{"code":"\"Swift\"","type":"codeVoice"},{"text":", that forms a","type":"text"},{"type":"text","text":" "},{"type":"text","text":"collection. Strings in Swift are Unicode correct and locale insensitive,"},{"text":" ","type":"text"},{"type":"text","text":"and are designed to be efficient. The "},{"type":"codeVoice","code":"String"},{"type":"text","text":" type bridges with the"},{"type":"text","text":" "},{"type":"text","text":"Objective-C class "},{"type":"codeVoice","code":"NSString"},{"text":" and offers interoperability with C functions","type":"text"},{"type":"text","text":" "},{"text":"that works with strings.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can create new strings using string literals or string interpolations."},{"type":"text","text":" "},{"type":"text","text":"A "},{"inlineContent":[{"type":"text","text":"string literal"}],"type":"emphasis"},{"text":" is a series of characters enclosed in quotes.","type":"text"}]},{"type":"codeListing","syntax":null,"code":["let greeting = \"Welcome!\""]},{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"String interpolations","type":"text"}],"type":"emphasis"},{"text":" are string literals that evaluate any included","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"expressions and convert the results to string form. String interpolations"},{"type":"text","text":" "},{"type":"text","text":"give you an easy way to build a string from multiple pieces. Wrap each"},{"type":"text","text":" "},{"text":"expression in a string interpolation in parentheses, prefixed by a","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"backslash."}]},{"syntax":null,"type":"codeListing","code":["let name = \"Rosa\"","let personalizedGreeting = \"Welcome, \\(name)!\"","\/\/ personalizedGreeting == \"Welcome, Rosa!\"","","let price = 2","let number = 3","let cookiePrice = \"\\(number) cookies: $\\(price * number).\"","\/\/ cookiePrice == \"3 cookies: $6.\""]},{"type":"paragraph","inlineContent":[{"text":"Combine strings using the concatenation operator (","type":"text"},{"code":"+","type":"codeVoice"},{"text":").","type":"text"}]},{"type":"codeListing","code":["let longerGreeting = greeting + \" We're glad you're here!\"","\/\/ longerGreeting == \"Welcome! We're glad you're here!\""],"syntax":null},{"inlineContent":[{"text":"Multiline string literals are enclosed in three double quotation marks","type":"text"},{"type":"text","text":" "},{"type":"text","text":"("},{"code":"\"\"\"","type":"codeVoice"},{"text":"), with each delimiter on its own line. Indentation is stripped from","type":"text"},{"type":"text","text":" "},{"text":"each line of a multiline string literal to match the indentation of the","type":"text"},{"type":"text","text":" "},{"text":"closing delimiter.","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":["let banner = \"\"\"","          __,","         (           o  \/) _\/_","          `.  , , , ,  \/\/  \/","        (___)(_(_\/_(_ \/\/_ (__","                     \/)","                    (\/","        \"\"\""]},{"level":1,"anchor":"Modifying-and-Comparing-Strings","text":"Modifying and Comparing Strings","type":"heading"},{"inlineContent":[{"text":"Strings always have value semantics. Modifying a copy of a string leaves","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the original unaffected."}],"type":"paragraph"},{"syntax":null,"code":["var otherGreeting = greeting","otherGreeting += \" Have a nice time!\"","\/\/ otherGreeting == \"Welcome! Have a nice time!\"","","print(greeting)","\/\/ Prints \"Welcome!\""],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"Comparing strings for equality using the equal-to operator ("},{"code":"==","type":"codeVoice"},{"type":"text","text":") or a"},{"text":" ","type":"text"},{"type":"text","text":"relational operator (like "},{"code":"<","type":"codeVoice"},{"type":"text","text":" or "},{"type":"codeVoice","code":">="},{"type":"text","text":") is always performed using Unicode"},{"type":"text","text":" "},{"type":"text","text":"canonical representation. As a result, different representations of a"},{"text":" ","type":"text"},{"type":"text","text":"string compare as being equal."}],"type":"paragraph"},{"syntax":null,"code":["let cafe1 = \"Cafe\\u{301}\"","let cafe2 = \"Café\"","print(cafe1 == cafe2)","\/\/ Prints \"true\""],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The Unicode scalar value "},{"type":"codeVoice","code":"\"\\u{301}\""},{"type":"text","text":" modifies the preceding character to"},{"type":"text","text":" "},{"text":"include an accent, so ","type":"text"},{"code":"\"e\\u{301}\"","type":"codeVoice"},{"text":" has the same canonical representation","type":"text"},{"text":" ","type":"text"},{"text":"as the single Unicode scalar value ","type":"text"},{"type":"codeVoice","code":"\"é\""},{"text":".","type":"text"}]},{"inlineContent":[{"text":"Basic string operations are not sensitive to locale settings, ensuring that","type":"text"},{"type":"text","text":" "},{"type":"text","text":"string comparisons and other operations always have a single, stable"},{"type":"text","text":" "},{"type":"text","text":"result, allowing strings to be used as keys in "},{"type":"codeVoice","code":"Dictionary"},{"text":" instances and","type":"text"},{"type":"text","text":" "},{"text":"for other purposes.","type":"text"}],"type":"paragraph"},{"level":1,"text":"Accessing String Elements","anchor":"Accessing-String-Elements","type":"heading"},{"inlineContent":[{"text":"A string is a collection of ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"extended grapheme clusters","type":"text"}]},{"type":"text","text":", which approximate"},{"type":"text","text":" "},{"type":"text","text":"human-readable characters. Many individual characters, such as “é”, “김”,"},{"type":"text","text":" "},{"type":"text","text":"and “🇮🇳”, can be made up of multiple Unicode scalar values. These scalar"},{"type":"text","text":" "},{"type":"text","text":"values are combined by Unicode’s boundary algorithms into extended"},{"text":" ","type":"text"},{"text":"grapheme clusters, represented by the Swift ","type":"text"},{"code":"Character","type":"codeVoice"},{"type":"text","text":" type. Each element"},{"type":"text","text":" "},{"text":"of a string is represented by a ","type":"text"},{"code":"Character","type":"codeVoice"},{"type":"text","text":" instance."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"For example, to retrieve the first word of a longer string, you can search"},{"type":"text","text":" "},{"type":"text","text":"for a space and then create a substring from a prefix of the string up to"},{"type":"text","text":" "},{"type":"text","text":"that point:"}]},{"type":"codeListing","code":["let name = \"Marie Curie\"","let firstSpace = name.firstIndex(of: \" \") ?? name.endIndex","let firstName = name[..<firstSpace]","\/\/ firstName == \"Marie\""],"syntax":null},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"firstName"},{"type":"text","text":" constant is an instance of the "},{"code":"Substring","type":"codeVoice"},{"type":"text","text":" type—a type"},{"type":"text","text":" "},{"text":"that represents substrings of a string while sharing the original string’s","type":"text"},{"text":" ","type":"text"},{"text":"storage. Substrings present the same interface as strings.","type":"text"}]},{"syntax":null,"code":["print(\"\\(name)'s first name has \\(firstName.count) letters.\")","\/\/ Prints \"Marie Curie's first name has 5 letters.\""],"type":"codeListing"},{"anchor":"Accessing-a-Strings-Unicode-Representation","level":1,"text":"Accessing a String’s Unicode Representation","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you need to access the contents of a string as encoded in different"},{"type":"text","text":" "},{"type":"text","text":"Unicode encodings, use one of the string’s "},{"code":"unicodeScalars","type":"codeVoice"},{"text":", ","type":"text"},{"type":"codeVoice","code":"utf16"},{"text":", or","type":"text"},{"text":" ","type":"text"},{"code":"utf8","type":"codeVoice"},{"type":"text","text":" properties. Each property provides access to a view of the string"},{"type":"text","text":" "},{"type":"text","text":"as a series of code units, each encoded in a different Unicode encoding."}]},{"inlineContent":[{"type":"text","text":"To demonstrate the different views available for every string, the"},{"type":"text","text":" "},{"text":"following examples use this ","type":"text"},{"code":"String","type":"codeVoice"},{"type":"text","text":" instance:"}],"type":"paragraph"},{"syntax":null,"code":["let cafe = \"Cafe\\u{301} du 🌍\"","print(cafe)","\/\/ Prints \"Café du 🌍\""],"type":"codeListing"},{"inlineContent":[{"text":"The ","type":"text"},{"type":"codeVoice","code":"cafe"},{"type":"text","text":" string is a collection of the nine characters that are visible"},{"type":"text","text":" "},{"type":"text","text":"when the string is displayed."}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":["print(cafe.count)","\/\/ Prints \"9\"","print(Array(cafe))","\/\/ Prints \"[\"C\", \"a\", \"f\", \"é\", \" \", \"d\", \"u\", \" \", \"🌍\"]\""]},{"type":"heading","text":"Unicode Scalar View","level":2,"anchor":"Unicode-Scalar-View"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A string’s "},{"type":"codeVoice","code":"unicodeScalars"},{"text":" property is a collection of Unicode scalar","type":"text"},{"type":"text","text":" "},{"type":"text","text":"values, the 21-bit codes that are the basic unit of Unicode. Each scalar"},{"type":"text","text":" "},{"text":"value is represented by a ","type":"text"},{"type":"codeVoice","code":"Unicode.Scalar"},{"type":"text","text":" instance and is equivalent to a"},{"type":"text","text":" "},{"text":"UTF-32 code unit.","type":"text"}]},{"type":"codeListing","syntax":null,"code":["print(cafe.unicodeScalars.count)","\/\/ Prints \"10\"","print(Array(cafe.unicodeScalars))","\/\/ Prints \"[\"C\", \"a\", \"f\", \"e\", \"\\u{0301}\", \" \", \"d\", \"u\", \" \", \"\\u{0001F30D}\"]\"","print(cafe.unicodeScalars.map { $0.value })","\/\/ Prints \"[67, 97, 102, 101, 769, 32, 100, 117, 32, 127757]\""]},{"inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"unicodeScalars"},{"text":" view’s elements comprise each Unicode scalar value in","type":"text"},{"text":" ","type":"text"},{"text":"the ","type":"text"},{"type":"codeVoice","code":"cafe"},{"type":"text","text":" string. In particular, because "},{"type":"codeVoice","code":"cafe"},{"text":" was declared using the","type":"text"},{"text":" ","type":"text"},{"text":"decomposed form of the ","type":"text"},{"code":"\"é\"","type":"codeVoice"},{"type":"text","text":" character, "},{"code":"unicodeScalars","type":"codeVoice"},{"type":"text","text":" contains the"},{"type":"text","text":" "},{"type":"text","text":"scalar values for both the letter "},{"code":"\"e\"","type":"codeVoice"},{"type":"text","text":" (101) and the accent character"},{"text":" ","type":"text"},{"code":"\"´\"","type":"codeVoice"},{"text":" (769).","type":"text"}],"type":"paragraph"},{"level":2,"text":"UTF-16 View","anchor":"UTF-16-View","type":"heading"},{"inlineContent":[{"type":"text","text":"A string’s "},{"code":"utf16","type":"codeVoice"},{"type":"text","text":" property is a collection of UTF-16 code units, the"},{"type":"text","text":" "},{"type":"text","text":"16-bit encoding form of the string’s Unicode scalar values. Each code unit"},{"type":"text","text":" "},{"text":"is stored as a ","type":"text"},{"code":"UInt16","type":"codeVoice"},{"type":"text","text":" instance."}],"type":"paragraph"},{"syntax":null,"code":["print(cafe.utf16.count)","\/\/ Prints \"11\"","print(Array(cafe.utf16))","\/\/ Prints \"[67, 97, 102, 101, 769, 32, 100, 117, 32, 55356, 57101]\""],"type":"codeListing"},{"inlineContent":[{"text":"The elements of the ","type":"text"},{"type":"codeVoice","code":"utf16"},{"type":"text","text":" view are the code units for the string when"},{"text":" ","type":"text"},{"type":"text","text":"encoded in UTF-16. These elements match those accessed through indexed"},{"type":"text","text":" "},{"code":"NSString","type":"codeVoice"},{"type":"text","text":" APIs."}],"type":"paragraph"},{"syntax":null,"code":["let nscafe = cafe as NSString","print(nscafe.length)","\/\/ Prints \"11\"","print(nscafe.character(at: 3))","\/\/ Prints \"101\""],"type":"codeListing"},{"type":"heading","anchor":"UTF-8-View","text":"UTF-8 View","level":2},{"inlineContent":[{"text":"A string’s ","type":"text"},{"type":"codeVoice","code":"utf8"},{"type":"text","text":" property is a collection of UTF-8 code units, the 8-bit"},{"text":" ","type":"text"},{"text":"encoding form of the string’s Unicode scalar values. Each code unit is","type":"text"},{"type":"text","text":" "},{"type":"text","text":"stored as a "},{"type":"codeVoice","code":"UInt8"},{"type":"text","text":" instance."}],"type":"paragraph"},{"syntax":null,"type":"codeListing","code":["print(cafe.utf8.count)","\/\/ Prints \"14\"","print(Array(cafe.utf8))","\/\/ Prints \"[67, 97, 102, 101, 204, 129, 32, 100, 117, 32, 240, 159, 140, 141]\""]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The elements of the "},{"code":"utf8","type":"codeVoice"},{"text":" view are the code units for the string when","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"encoded in UTF-8. This representation matches the one used when "},{"type":"codeVoice","code":"String"},{"type":"text","text":" "},{"text":"instances are passed to C APIs.","type":"text"}]},{"type":"codeListing","syntax":null,"code":["let cLength = strlen(cafe)","print(cLength)","\/\/ Prints \"14\""]},{"anchor":"Measuring-the-Length-of-a-String","level":1,"type":"heading","text":"Measuring the Length of a String"},{"type":"paragraph","inlineContent":[{"text":"When you need to know the length of a string, you must first consider what","type":"text"},{"text":" ","type":"text"},{"text":"you’ll use the length for. Are you measuring the number of characters that","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"will be displayed on the screen, or are you measuring the amount of"},{"text":" ","type":"text"},{"type":"text","text":"storage needed for the string in a particular encoding? A single string"},{"text":" ","type":"text"},{"type":"text","text":"can have greatly differing lengths when measured by its different views."}]},{"inlineContent":[{"text":"For example, an ASCII character like the capital letter ","type":"text"},{"inlineContent":[{"text":"A","type":"text"}],"type":"emphasis"},{"text":" is represented","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"by a single element in each of its four views. The Unicode scalar value of"},{"text":" ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"A"}]},{"text":" is ","type":"text"},{"code":"65","type":"codeVoice"},{"type":"text","text":", which is small enough to fit in a single code unit in both"},{"type":"text","text":" "},{"type":"text","text":"UTF-16 and UTF-8."}],"type":"paragraph"},{"code":["let capitalA = \"A\"","print(capitalA.count)","\/\/ Prints \"1\"","print(capitalA.unicodeScalars.count)","\/\/ Prints \"1\"","print(capitalA.utf16.count)","\/\/ Prints \"1\"","print(capitalA.utf8.count)","\/\/ Prints \"1\""],"syntax":null,"type":"codeListing"},{"inlineContent":[{"type":"text","text":"On the other hand, an emoji flag character is constructed from a pair of"},{"type":"text","text":" "},{"type":"text","text":"Unicode scalar values, like "},{"code":"\"\\u{1F1F5}\"","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"\"\\u{1F1F7}\""},{"type":"text","text":". Each of these"},{"type":"text","text":" "},{"text":"scalar values, in turn, is too large to fit into a single UTF-16 or UTF-8","type":"text"},{"text":" ","type":"text"},{"text":"code unit. As a result, each view of the string ","type":"text"},{"code":"\"🇵🇷\"","type":"codeVoice"},{"type":"text","text":" reports a different"},{"type":"text","text":" "},{"type":"text","text":"length."}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":["let flag = \"🇵🇷\"","print(flag.count)","\/\/ Prints \"1\"","print(flag.unicodeScalars.count)","\/\/ Prints \"2\"","print(flag.utf16.count)","\/\/ Prints \"4\"","print(flag.utf8.count)","\/\/ Prints \"8\""]},{"inlineContent":[{"text":"To check whether a string is empty, use its ","type":"text"},{"code":"isEmpty","type":"codeVoice"},{"type":"text","text":" property instead of"},{"type":"text","text":" "},{"text":"comparing the length of one of the views to ","type":"text"},{"type":"codeVoice","code":"0"},{"text":". Unlike with ","type":"text"},{"type":"codeVoice","code":"isEmpty"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"text","text":"calculating a view’s "},{"code":"count","type":"codeVoice"},{"type":"text","text":" property requires iterating through the"},{"text":" ","type":"text"},{"text":"elements of the string.","type":"text"}],"type":"paragraph"},{"text":"Accessing String View Elements","anchor":"Accessing-String-View-Elements","level":1,"type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"To find individual elements of a string, use the appropriate view for your"},{"text":" ","type":"text"},{"type":"text","text":"task. For example, to retrieve the first word of a longer string, you can"},{"text":" ","type":"text"},{"type":"text","text":"search the string for a space and then create a new string from a prefix"},{"type":"text","text":" "},{"type":"text","text":"of the string up to that point."}]},{"syntax":null,"type":"codeListing","code":["let name = \"Marie Curie\"","let firstSpace = name.firstIndex(of: \" \") ?? name.endIndex","let firstName = name[..<firstSpace]","print(firstName)","\/\/ Prints \"Marie\""]},{"type":"paragraph","inlineContent":[{"text":"Strings and their views share indices, so you can access the UTF-8 view of","type":"text"},{"text":" ","type":"text"},{"text":"the ","type":"text"},{"type":"codeVoice","code":"name"},{"type":"text","text":" string using the same "},{"type":"codeVoice","code":"firstSpace"},{"type":"text","text":" index."}]},{"syntax":null,"code":["print(Array(name.utf8[..<firstSpace]))","\/\/ Prints \"[77, 97, 114, 105, 101]\""],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"Note that an index into one view may not have an exact corresponding","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"position in another view. For example, the "},{"type":"codeVoice","code":"flag"},{"text":" string declared above","type":"text"},{"type":"text","text":" "},{"type":"text","text":"comprises a single character, but is composed of eight code units when"},{"type":"text","text":" "},{"text":"encoded as UTF-8. The following code creates constants for the first and","type":"text"},{"type":"text","text":" "},{"type":"text","text":"second positions in the "},{"type":"codeVoice","code":"flag.utf8"},{"type":"text","text":" view. Accessing the "},{"type":"codeVoice","code":"utf8"},{"text":" view with","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"these indices yields the first and second code UTF-8 units."}]},{"code":["let firstCodeUnit = flag.startIndex","let secondCodeUnit = flag.utf8.index(after: firstCodeUnit)","\/\/ flag.utf8[firstCodeUnit] == 240","\/\/ flag.utf8[secondCodeUnit] == 159"],"type":"codeListing","syntax":null},{"type":"paragraph","inlineContent":[{"type":"text","text":"When used to access the elements of the "},{"type":"codeVoice","code":"flag"},{"text":" string itself, however, the","type":"text"},{"type":"text","text":" "},{"code":"secondCodeUnit","type":"codeVoice"},{"text":" index does not correspond to the position of a specific","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"character. Instead of only accessing the specific UTF-8 code unit, that"},{"text":" ","type":"text"},{"text":"index is treated as the position of the character at the index’s encoded","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"offset. In the case of "},{"type":"codeVoice","code":"secondCodeUnit"},{"text":", that character is still the flag","type":"text"},{"type":"text","text":" "},{"text":"itself.","type":"text"}]},{"type":"codeListing","syntax":null,"code":["\/\/ flag[firstCodeUnit] == \"🇵🇷\"","\/\/ flag[secondCodeUnit] == \"🇵🇷\""]},{"inlineContent":[{"text":"If you need to validate that an index from one string’s view corresponds","type":"text"},{"type":"text","text":" "},{"type":"text","text":"with an exact position in another view, use the index’s"},{"text":" ","type":"text"},{"type":"codeVoice","code":"samePosition(in:)"},{"text":" method or the ","type":"text"},{"type":"codeVoice","code":"init(_:within:)"},{"text":" initializer.","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":["if let exactIndex = secondCodeUnit.samePosition(in: flag) {","    print(flag[exactIndex])","} else {","    print(\"No exact match for this position.\")","}","\/\/ Prints \"No exact match for this position.\""]},{"text":"Performance Optimizations","type":"heading","level":1,"anchor":"Performance-Optimizations"},{"inlineContent":[{"text":"Although strings in Swift have value semantics, strings use a copy-on-write","type":"text"},{"type":"text","text":" "},{"type":"text","text":"strategy to store their data in a buffer. This buffer can then be shared"},{"text":" ","type":"text"},{"type":"text","text":"by different copies of a string. A string’s data is only copied lazily,"},{"text":" ","type":"text"},{"type":"text","text":"upon mutation, when more than one string instance is using the same"},{"type":"text","text":" "},{"type":"text","text":"buffer. Therefore, the first in any sequence of mutating operations may"},{"text":" ","type":"text"},{"type":"text","text":"cost O("},{"inlineContent":[{"type":"text","text":"n"}],"type":"emphasis"},{"text":") time and space.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"When a string’s contiguous storage fills up, a new buffer must be allocated"},{"text":" ","type":"text"},{"type":"text","text":"and data must be moved to the new storage. String buffers use an"},{"type":"text","text":" "},{"text":"exponential growth strategy that makes appending to a string a constant","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"time operation when averaged over many append operations."}]},{"type":"heading","level":1,"anchor":"Bridging-Between-String-and-NSString","text":"Bridging Between String and NSString"},{"inlineContent":[{"type":"text","text":"Any "},{"type":"codeVoice","code":"String"},{"text":" instance can be bridged to ","type":"text"},{"code":"NSString","type":"codeVoice"},{"text":" using the type-cast","type":"text"},{"text":" ","type":"text"},{"text":"operator (","type":"text"},{"type":"codeVoice","code":"as"},{"type":"text","text":"), and any "},{"type":"codeVoice","code":"String"},{"type":"text","text":" instance that originates in Objective-C"},{"text":" ","type":"text"},{"text":"may use an ","type":"text"},{"type":"codeVoice","code":"NSString"},{"text":" instance as its storage. Because any arbitrary","type":"text"},{"type":"text","text":" "},{"text":"subclass of ","type":"text"},{"type":"codeVoice","code":"NSString"},{"type":"text","text":" can become a "},{"type":"codeVoice","code":"String"},{"type":"text","text":" instance, there are no"},{"type":"text","text":" "},{"type":"text","text":"guarantees about representation or efficiency when a "},{"code":"String","type":"codeVoice"},{"text":" instance is","type":"text"},{"type":"text","text":" "},{"type":"text","text":"backed by "},{"code":"NSString","type":"codeVoice"},{"text":" storage. Because ","type":"text"},{"code":"NSString","type":"codeVoice"},{"type":"text","text":" is immutable, it is just"},{"text":" ","type":"text"},{"text":"as though the storage was shared by a copy. The first in any sequence of","type":"text"},{"type":"text","text":" "},{"type":"text","text":"mutating operations causes elements to be copied into unique, contiguous"},{"text":" ","type":"text"},{"text":"storage which may cost O(","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"n"}]},{"type":"text","text":") time and space, where "},{"inlineContent":[{"text":"n","type":"text"}],"type":"emphasis"},{"type":"text","text":" is the length of"},{"type":"text","text":" "},{"text":"the string’s encoded representation (or more, if the underlying ","type":"text"},{"type":"codeVoice","code":"NSString"},{"type":"text","text":" "},{"type":"text","text":"has unusual performance characteristics)."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"For more information about the Unicode terms used in this discussion, see"},{"type":"text","text":" "},{"type":"text","text":"the "},{"identifier":"http:\/\/www.unicode.org\/glossary\/","type":"reference","isActive":true},{"type":"text","text":". In particular, this discussion"},{"text":" ","type":"text"},{"text":"mentions ","type":"text"},{"identifier":"http:\/\/www.unicode.org\/glossary\/#extended_grapheme_cluster","type":"reference","isActive":true},{"type":"text","text":", "},{"identifier":"http:\/\/www.unicode.org\/glossary\/#unicode_scalar_value","isActive":true,"type":"reference"},{"text":", and ","type":"text"},{"isActive":true,"type":"reference","identifier":"http:\/\/www.unicode.org\/glossary\/#canonical_equivalent"},{"type":"text","text":"."}]}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String"},"abstract":[{"type":"text","text":"A Unicode string value that is a collection of characters."}],"schemaVersion":{"minor":3,"major":0,"patch":0},"sections":[],"topicSections":[{"identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/+(_:_:)-655mi","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/+=(_:_:)-4pvxa","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/~=(_:_:)"],"title":"Operators","generated":true,"anchor":"Operators"},{"generated":true,"anchor":"Initializers","title":"Initializers","identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/init()","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/init(_:)-11jx3","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/init(_:)-14lv5","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/init(_:)-1ywfq","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/init(_:)-2t931","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/init(_:)-6sprj","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/init(_:)-83bub","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/init(_:)-8ay23","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/init(_:)-8v3fo","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/init(_:)-expd","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/init(_:)-wbcx","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/init(_:radix:uppercase:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/init(cString:)-1gatt","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/init(cString:)-295hy","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/init(cString:)-472zs","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/init(cString:)-54awj","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/init(cString:)-6kr8s","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/init(cString:)-cgw2","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/init(decodingCString:as:)-2zmjc","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/init(decodingCString:as:)-534rp","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/init(decodingCString:as:)-8way7","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/init(describing:)-588wb","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/init(describing:)-67ncf","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/init(describing:)-6ttci","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/init(describing:)-hsqw","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/init(reflecting:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/init(repeating:count:)-23xjt","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/init(unsafeUninitializedCapacity:initializingUTF8With:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/init(validating:as:)-5cw2c","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/init(validating:as:)-84qr9","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/init(validatingCString:)-1x5p0","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/init(validatingCString:)-7gjlg","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/init(validatingCString:)-98wra","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/init(validatingCString:)-992vo","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/init(validatingUTF8:)-208fn","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/init(validatingUTF8:)-2m5lb","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/init(validatingUTF8:)-2o7g5","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/init(validatingUTF8:)-8awk3"]},{"title":"Instance Properties","anchor":"Instance-Properties","identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/characters","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/isContiguousUTF8","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/utf8CString"],"generated":true},{"identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/append(_:)-4xa8f","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/append(contentsOf:)-9vb4t","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/append(contentsOf:)-oxek","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/makeContiguousUTF8()","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/max(_:_:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/min(_:_:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/withMutableCharacters(_:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/withUTF8(_:)"],"title":"Instance Methods","generated":true,"anchor":"Instance-Methods"},{"identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/CharacterView","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/IndexDistance","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/UnicodeScalarIndex"],"generated":true,"title":"Type Aliases","anchor":"Type-Aliases"},{"anchor":"Type-Methods","generated":true,"title":"Type Methods","identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/decodeCString(_:as:repairingInvalidCodeUnits:)-2l7u6","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/decodeCString(_:as:repairingInvalidCodeUnits:)-3mvvy","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/decodeCString(_:as:repairingInvalidCodeUnits:)-46n2p","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/decodeCString(_:as:repairingInvalidCodeUnits:)-9pdmv"]},{"title":"Default Implementations","generated":true,"identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/BidirectionalCollection-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/CodingKeyRepresentable-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/Collection-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/Comparable-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/CustomDebugStringConvertible-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/CustomReflectable-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/CustomStringConvertible-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/Decodable-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/Encodable-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/Equatable-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/ExpressibleByExtendedGraphemeClusterLiteral-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/ExpressibleByStringInterpolation-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/ExpressibleByStringLiteral-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/ExpressibleByUnicodeScalarLiteral-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/Hashable-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/LosslessStringConvertible-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/RangeReplaceableCollection-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/Sequence-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/StringProtocol-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/TextOutputStream-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/TextOutputStreamable-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/_CustomPlaygroundQuickLookable-Implementations"],"anchor":"Default-Implementations"}],"variants":[{"paths":["\/documentation\/compute\/string"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/CodingKeyRepresentable":{"type":"topic","title":"CodingKeyRepresentable","abstract":[{"type":"text","text":"A type that can be converted to and from a coding key."}],"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"CodingKeyRepresentable","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CodingKeyRepresentable","url":"\/documentation\/compute\/codingkeyrepresentable","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"CodingKeyRepresentable"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/CVarArg":{"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CVarArg"}],"abstract":[{"text":"A type whose instances can be encoded, and appropriately passed, as","type":"text"},{"text":" ","type":"text"},{"text":"elements of a C ","type":"text"},{"type":"codeVoice","code":"va_list"},{"text":".","type":"text"}],"navigatorTitle":[{"text":"CVarArg","kind":"identifier"}],"title":"CVarArg","type":"topic","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CVarArg","url":"\/documentation\/compute\/cvararg"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/append(contentsOf:)-9vb4t":{"role":"symbol","title":"append(contentsOf:)","abstract":[],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/append(contentsOf:)-9vb4t","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"append","kind":"identifier"},{"kind":"text","text":"("},{"text":"contentsOf","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Substring","preciseIdentifier":"s:Ss","kind":"typeIdentifier"},{"kind":"text","text":")"}],"kind":"symbol","url":"\/documentation\/compute\/string\/append(contentsof:)-9vb4t"},"doc://com.swallow.documentation.Compute/7Swallow28DestructivelyMutableSequenceP":{"type":"unresolvable","title":"Swallow.DestructivelyMutableSequence","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow28DestructivelyMutableSequenceP"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/Encodable-Implementations":{"role":"collectionGroup","title":"Encodable Implementations","abstract":[],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/Encodable-Implementations","kind":"article","url":"\/documentation\/compute\/string\/encodable-implementations"},"doc://com.swallow.documentation.Compute/16CoreTransferable0B0P":{"type":"unresolvable","title":"CoreTransferable.Transferable","identifier":"doc:\/\/com.swallow.documentation.Compute\/16CoreTransferable0B0P"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/init(cString:)-54awj":{"role":"symbol","title":"init(cString:)","abstract":[{"type":"text","text":"Creates a new string by copying the null-terminated UTF-8 data referenced"},{"text":" ","type":"text"},{"type":"text","text":"by the given array."}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/init(cString:)-54awj","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"text":"cString","kind":"externalParam"},{"text":": [","kind":"text"},{"kind":"typeIdentifier","text":"CChar","preciseIdentifier":"s:s5CChara"},{"kind":"text","text":"])"}],"deprecated":true,"kind":"symbol","url":"\/documentation\/compute\/string\/init(cstring:)-54awj"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/Decodable-Implementations":{"title":"Decodable Implementations","url":"\/documentation\/compute\/string\/decodable-implementations","role":"collectionGroup","type":"topic","kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/Decodable-Implementations","abstract":[]},"doc://com.swallow.documentation.Compute/documentation/Compute/String/Hashable-Implementations":{"title":"Hashable Implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/Hashable-Implementations","type":"topic","abstract":[],"role":"collectionGroup","kind":"article","url":"\/documentation\/compute\/string\/hashable-implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/LosslessStringConvertible-Implementations":{"type":"topic","role":"collectionGroup","abstract":[],"kind":"article","url":"\/documentation\/compute\/string\/losslessstringconvertible-implementations","title":"LosslessStringConvertible Implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/LosslessStringConvertible-Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/init(_:)-11jx3":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/init(_:)-11jx3","abstract":[{"type":"text","text":"Creates a String having the given content."}],"role":"symbol","kind":"symbol","title":"init(_:)","type":"topic","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"text":"Substring","kind":"typeIdentifier","preciseIdentifier":"s:Ss"},{"text":".","kind":"text"},{"preciseIdentifier":"s:Ss17UnicodeScalarViewV","text":"UnicodeScalarView","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/compute\/string\/init(_:)-11jx3"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/init()":{"role":"symbol","title":"init()","abstract":[{"type":"text","text":"Creates an empty string."}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/init()","fragments":[{"kind":"identifier","text":"init"},{"text":"()","kind":"text"}],"kind":"symbol","url":"\/documentation\/compute\/string\/init()"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/init(describing:)-588wb":{"type":"topic","role":"symbol","abstract":[{"type":"text","text":"Creates a string representing the given value."}],"kind":"symbol","fragments":[{"kind":"identifier","text":"init"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Subject"},{"text":">(","kind":"text"},{"text":"describing","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Subject"},{"kind":"text","text":")"}],"url":"\/documentation\/compute\/string\/init(describing:)-588wb","title":"init(describing:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/init(describing:)-588wb"},"doc://com.swallow.documentation.Compute/documentation/Compute/CustomStringConvertible":{"url":"\/documentation\/compute\/customstringconvertible","navigatorTitle":[{"kind":"identifier","text":"CustomStringConvertible"}],"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CustomStringConvertible","kind":"identifier"}],"abstract":[{"text":"A type with a customized textual representation.","type":"text"}],"type":"topic","title":"CustomStringConvertible","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CustomStringConvertible"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/decodeCString(_:as:repairingInvalidCodeUnits:)-9pdmv":{"title":"decodeCString(_:as:repairingInvalidCodeUnits:)","url":"\/documentation\/compute\/string\/decodecstring(_:as:repairinginvalidcodeunits:)-9pdmv","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"decodeCString","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Encoding"},{"kind":"text","text":">("},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"as"},{"text":": ","kind":"text"},{"text":"Encoding","kind":"typeIdentifier"},{"text":".Type, ","kind":"text"},{"text":"repairingInvalidCodeUnits","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":") -> (result","kind":"text"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"text":", repairsMade","kind":"text"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":")?","kind":"text"}],"type":"topic","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/decodeCString(_:as:repairingInvalidCodeUnits:)-9pdmv","kind":"symbol","deprecated":true,"role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/init(validatingUTF8:)-2m5lb":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/init(validatingUTF8:)-2m5lb","url":"\/documentation\/compute\/string\/init(validatingutf8:)-2m5lb","deprecated":true,"fragments":[{"kind":"identifier","text":"init"},{"text":"?(","kind":"text"},{"text":"validatingUTF8","kind":"externalParam"},{"kind":"text","text":": ["},{"preciseIdentifier":"s:s5CChara","text":"CChar","kind":"typeIdentifier"},{"text":"])","kind":"text"}],"abstract":[{"type":"text","text":"Creates a new string by copying and validating the null-terminated UTF-8"},{"type":"text","text":" "},{"type":"text","text":"data referenced by the given array."}],"type":"topic","role":"symbol","title":"init(validatingUTF8:)","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/IndexDistance":{"role":"symbol","title":"String.IndexDistance","abstract":[{"type":"text","text":"A type that represents the number of steps between two "},{"code":"String.Index","type":"codeVoice"},{"type":"text","text":" "},{"text":"values, where one value is reachable from the other.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/IndexDistance","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"IndexDistance","kind":"identifier"}],"deprecated":true,"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"IndexDistance"}],"url":"\/documentation\/compute\/string\/indexdistance"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/init(cString:)-295hy":{"type":"topic","role":"symbol","abstract":[],"kind":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"text":"cString","kind":"externalParam"},{"kind":"text","text":": "},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UInt8","preciseIdentifier":"s:s5UInt8V","kind":"typeIdentifier"},{"kind":"text","text":")"}],"url":"\/documentation\/compute\/string\/init(cstring:)-295hy","deprecated":true,"title":"init(cString:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/init(cString:)-295hy"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/max(_:_:)":{"role":"symbol","title":"max(_:_:)","abstract":[],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/max(_:_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"max","kind":"identifier"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"T"}],"kind":"symbol","url":"\/documentation\/compute\/string\/max(_:_:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/decodeCString(_:as:repairingInvalidCodeUnits:)-46n2p":{"type":"topic","role":"symbol","abstract":[{"type":"text","text":"Creates a new string by copying the null-terminated data referenced by"},{"text":" ","type":"text"},{"type":"text","text":"the given pointer using the specified encoding."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"decodeCString"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Encoding"},{"kind":"text","text":">("},{"text":"UnsafePointer","kind":"typeIdentifier","preciseIdentifier":"s:SP"},{"text":"<","kind":"text"},{"text":"Encoding","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"CodeUnit","kind":"typeIdentifier","preciseIdentifier":"s:s16_UnicodeEncodingP8CodeUnitQa"},{"text":">?, ","kind":"text"},{"kind":"externalParam","text":"as"},{"text":": ","kind":"text"},{"text":"Encoding","kind":"typeIdentifier"},{"kind":"text","text":".Type, "},{"kind":"externalParam","text":"repairingInvalidCodeUnits"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") -> (result","kind":"text"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", repairsMade","kind":"text"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":")?","kind":"text"}],"url":"\/documentation\/compute\/string\/decodecstring(_:as:repairinginvalidcodeunits:)-46n2p","title":"decodeCString(_:as:repairingInvalidCodeUnits:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/decodeCString(_:as:repairingInvalidCodeUnits:)-46n2p"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/UnicodeScalarIndex":{"role":"symbol","title":"String.UnicodeScalarIndex","abstract":[{"type":"text","text":"The index type for a string’s "},{"code":"unicodeScalars","type":"codeVoice"},{"type":"text","text":" view."}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/UnicodeScalarIndex","fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"text":"UnicodeScalarIndex","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"UnicodeScalarIndex","kind":"identifier"}],"url":"\/documentation\/compute\/string\/unicodescalarindex"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/withMutableCharacters(_:)":{"type":"topic","role":"symbol","abstract":[{"type":"text","text":"Applies the given closure to a mutable view of the string’s characters."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"withMutableCharacters"},{"text":"<","kind":"text"},{"text":"R","kind":"genericParameter"},{"text":">((","kind":"text"},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":") -> "},{"text":"R","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"R","kind":"typeIdentifier"}],"url":"\/documentation\/compute\/string\/withmutablecharacters(_:)","deprecated":true,"title":"withMutableCharacters(_:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/withMutableCharacters(_:)"},"http://www.unicode.org/glossary/#extended_grapheme_cluster":{"titleInlineContent":[{"text":"extended grapheme clusters","type":"text"}],"url":"http:\/\/www.unicode.org\/glossary\/#extended_grapheme_cluster","type":"link","title":"extended grapheme clusters","identifier":"http:\/\/www.unicode.org\/glossary\/#extended_grapheme_cluster"},"doc://com.swallow.documentation.Compute/documentation/Compute/StringProtocol":{"url":"\/documentation\/compute\/stringprotocol","role":"symbol","abstract":[{"type":"text","text":"A type that can represent a string as a collection of characters."}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/StringProtocol","title":"StringProtocol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StringProtocol","kind":"identifier"}],"navigatorTitle":[{"text":"StringProtocol","kind":"identifier"}],"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/init(validating:as:)-5cw2c":{"type":"topic","role":"symbol","abstract":[{"type":"text","text":"Creates a new string by copying and validating the sequence of"},{"text":" ","type":"text"},{"type":"text","text":"code units passed in, according to the specified encoding."}],"kind":"symbol","fragments":[{"kind":"identifier","text":"init"},{"text":"?<","kind":"text"},{"text":"Encoding","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"validating"},{"kind":"text","text":": some "},{"kind":"typeIdentifier","preciseIdentifier":"s:ST","text":"Sequence"},{"kind":"text","text":"<"},{"text":"Int8","kind":"typeIdentifier","preciseIdentifier":"s:s4Int8V"},{"text":">, ","kind":"text"},{"text":"as","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Encoding","kind":"typeIdentifier"},{"text":".Type)","kind":"text"}],"url":"\/documentation\/compute\/string\/init(validating:as:)-5cw2c","title":"init(validating:as:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/init(validating:as:)-5cw2c"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/isContiguousUTF8":{"role":"symbol","title":"isContiguousUTF8","abstract":[{"type":"text","text":"Returns whether this string is capable of providing access to"},{"text":" ","type":"text"},{"type":"text","text":"validly-encoded UTF-8 contents in contiguous memory in O(1) time."}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/isContiguousUTF8","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"isContiguousUTF8","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"kind":"symbol","url":"\/documentation\/compute\/string\/iscontiguousutf8"},"doc://com.swallow.documentation.Compute/documentation/Compute/BidirectionalCollection":{"navigatorTitle":[{"text":"BidirectionalCollection","kind":"identifier"}],"abstract":[{"text":"A collection that supports backward as well as forward traversal.","type":"text"}],"title":"BidirectionalCollection","kind":"symbol","url":"\/documentation\/compute\/bidirectionalcollection","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"BidirectionalCollection"}],"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BidirectionalCollection","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/Collection-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/Collection-Implementations","url":"\/documentation\/compute\/string\/collection-implementations","kind":"article","type":"topic","title":"Collection Implementations","abstract":[],"role":"collectionGroup"},"doc://com.swallow.documentation.Compute/documentation/Compute/Equatable":{"abstract":[{"text":"A type that can be compared for value equality.","type":"text"}],"type":"topic","title":"Equatable","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Equatable"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Equatable","role":"symbol","url":"\/documentation\/compute\/equatable","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Equatable","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/String/RangeReplaceableCollection-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/RangeReplaceableCollection-Implementations","role":"collectionGroup","type":"topic","abstract":[],"kind":"article","url":"\/documentation\/compute\/string\/rangereplaceablecollection-implementations","title":"RangeReplaceableCollection Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/init(_:radix:uppercase:)":{"url":"\/documentation\/compute\/string\/init(_:radix:uppercase:)","role":"symbol","kind":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"radix"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"uppercase"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"text":")","kind":"text"}],"title":"init(_:radix:uppercase:)","abstract":[{"text":"Creates a string representing the given value in base 10, or some other","type":"text"},{"type":"text","text":" "},{"type":"text","text":"specified base."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/init(_:radix:uppercase:)","type":"topic"},"http://www.unicode.org/glossary/#canonical_equivalent":{"titleInlineContent":[{"text":"canonical equivalence","type":"text"}],"url":"http:\/\/www.unicode.org\/glossary\/#canonical_equivalent","type":"link","title":"canonical equivalence","identifier":"http:\/\/www.unicode.org\/glossary\/#canonical_equivalent"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/init(validatingUTF8:)-8awk3":{"role":"symbol","title":"init(validatingUTF8:)","abstract":[],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/init(validatingUTF8:)-8awk3","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"?("},{"text":"validatingUTF8","kind":"externalParam"},{"kind":"text","text":": "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":")","kind":"text"}],"deprecated":true,"kind":"symbol","url":"\/documentation\/compute\/string\/init(validatingutf8:)-8awk3"},"doc://com.swallow.documentation.Compute/documentation/Compute/LosslessStringConvertible":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LosslessStringConvertible","kind":"identifier"}],"kind":"symbol","title":"LosslessStringConvertible","abstract":[{"type":"text","text":"A type that can be represented as a string in a lossless, unambiguous way."}],"role":"symbol","type":"topic","navigatorTitle":[{"text":"LosslessStringConvertible","kind":"identifier"}],"url":"\/documentation\/compute\/losslessstringconvertible","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LosslessStringConvertible"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/utf8CString":{"type":"topic","role":"symbol","abstract":[{"type":"text","text":"A contiguously stored null-terminated UTF-8 representation of the string."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"utf8CString"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s15ContiguousArrayV","text":"ContiguousArray","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"CChar","preciseIdentifier":"s:s5CChara"},{"kind":"text","text":">"}],"url":"\/documentation\/compute\/string\/utf8cstring","title":"utf8CString","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/utf8CString"},"doc://com.swallow.documentation.Compute/7Swallow13DataDecodableP":{"type":"unresolvable","title":"Swallow.DataDecodable","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow13DataDecodableP"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/init(_:)-8ay23":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/init(_:)-8ay23","url":"\/documentation\/compute\/string\/init(_:)-8ay23","type":"topic","kind":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:s7UnicodeO","text":"Unicode","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Scalar","preciseIdentifier":"s:s7UnicodeO6ScalarV"},{"text":")","kind":"text"}],"abstract":[],"role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/init(describing:)-hsqw":{"type":"topic","role":"symbol","abstract":[{"type":"text","text":"Creates a string representing the given value."}],"kind":"symbol","fragments":[{"kind":"identifier","text":"init"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Subject"},{"text":">(","kind":"text"},{"text":"describing","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Subject"},{"kind":"text","text":")"}],"url":"\/documentation\/compute\/string\/init(describing:)-hsqw","title":"init(describing:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/init(describing:)-hsqw"},"doc://com.swallow.documentation.Compute/documentation/Compute/Encodable":{"url":"\/documentation\/compute\/encodable","navigatorTitle":[{"text":"Encodable","kind":"identifier"}],"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"Encodable","kind":"identifier"}],"abstract":[{"text":"A type that can encode itself to an external representation.","type":"text"}],"type":"topic","title":"Encodable","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Encodable"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/init(_:)-1ywfq":{"role":"symbol","title":"init(_:)","abstract":[{"type":"text","text":"Creates an instance from the description of a given"},{"text":" ","type":"text"},{"type":"codeVoice","code":"LosslessStringConvertible"},{"text":" instance.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/init(_:)-1ywfq","fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}],"kind":"symbol","url":"\/documentation\/compute\/string\/init(_:)-1ywfq"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/init(validating:as:)-84qr9":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/init(validating:as:)-84qr9","title":"init(validating:as:)","url":"\/documentation\/compute\/string\/init(validating:as:)-84qr9","role":"symbol","type":"topic","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"?<"},{"text":"Encoding","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"validating"},{"text":": some ","kind":"text"},{"preciseIdentifier":"s:ST","kind":"typeIdentifier","text":"Sequence"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"as"},{"text":": ","kind":"text"},{"text":"Encoding","kind":"typeIdentifier"},{"text":".Type)","kind":"text"}],"abstract":[{"type":"text","text":"Creates a new string by copying and validating the sequence of"},{"type":"text","text":" "},{"type":"text","text":"code units passed in, according to the specified encoding."}],"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/init(reflecting:)":{"type":"topic","role":"symbol","abstract":[{"type":"text","text":"Creates a string with a detailed representation of the given value,"},{"text":" ","type":"text"},{"type":"text","text":"suitable for debugging."}],"kind":"symbol","fragments":[{"kind":"identifier","text":"init"},{"text":"<","kind":"text"},{"text":"Subject","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"reflecting"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Subject"},{"kind":"text","text":")"}],"url":"\/documentation\/compute\/string\/init(reflecting:)","title":"init(reflecting:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/init(reflecting:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/Copyable":{"title":"Copyable","abstract":[{"type":"text","text":"A type whose values can be implicitly or explicitly copied."}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"Copyable","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Copyable","url":"\/documentation\/compute\/copyable","navigatorTitle":[{"text":"Copyable","kind":"identifier"}],"kind":"symbol","role":"symbol","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/append(contentsOf:)-oxek":{"role":"symbol","title":"append(contentsOf:)","abstract":[],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/append(contentsOf:)-oxek","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"append","kind":"identifier"},{"kind":"text","text":"("},{"text":"contentsOf","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"kind":"text","text":")"}],"kind":"symbol","url":"\/documentation\/compute\/string\/append(contentsof:)-oxek"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/CustomStringConvertible-Implementations":{"type":"topic","role":"collectionGroup","abstract":[],"kind":"article","url":"\/documentation\/compute\/string\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/CustomStringConvertible-Implementations"},"doc://com.swallow.documentation.Compute/7Swallow017SequenceInitiableB0P":{"type":"unresolvable","title":"Swallow.SequenceInitiableSequence","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow017SequenceInitiableB0P"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/ExpressibleByExtendedGraphemeClusterLiteral-Implementations":{"type":"topic","role":"collectionGroup","abstract":[],"kind":"article","url":"\/documentation\/compute\/string\/expressiblebyextendedgraphemeclusterliteral-implementations","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/ExpressibleByExtendedGraphemeClusterLiteral-Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/TextOutputStreamable":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TextOutputStreamable","kind":"identifier"}],"kind":"symbol","title":"TextOutputStreamable","abstract":[{"text":"A source of text-streaming operations.","type":"text"}],"role":"symbol","type":"topic","navigatorTitle":[{"text":"TextOutputStreamable","kind":"identifier"}],"url":"\/documentation\/compute\/textoutputstreamable","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/TextOutputStreamable"},"doc://com.swallow.documentation.Compute/7Swallow9InitiableP":{"type":"unresolvable","title":"Swallow.Initiable","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow9InitiableP"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/init(validatingCString:)-7gjlg":{"title":"init(validatingCString:)","url":"\/documentation\/compute\/string\/init(validatingcstring:)-7gjlg","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/init(validatingCString:)-7gjlg","deprecated":true,"type":"topic","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"?("},{"kind":"externalParam","text":"validatingCString"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":")","kind":"text"}],"kind":"symbol","abstract":[]},"doc://com.swallow.documentation.Compute/documentation/Compute/CustomDebugStringConvertible":{"url":"\/documentation\/compute\/customdebugstringconvertible","role":"symbol","abstract":[{"text":"A type with a customized textual representation suitable for debugging","type":"text"},{"type":"text","text":" "},{"text":"purposes.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CustomDebugStringConvertible","title":"CustomDebugStringConvertible","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CustomDebugStringConvertible","kind":"identifier"}],"navigatorTitle":[{"text":"CustomDebugStringConvertible","kind":"identifier"}],"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/CodingKeyRepresentable-Implementations":{"type":"topic","role":"collectionGroup","abstract":[],"kind":"article","url":"\/documentation\/compute\/string\/codingkeyrepresentable-implementations","title":"CodingKeyRepresentable Implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/CodingKeyRepresentable-Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/MirrorPath":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/MirrorPath","url":"\/documentation\/compute\/mirrorpath","title":"MirrorPath","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"MirrorPath","kind":"identifier"}],"navigatorTitle":[{"text":"MirrorPath","kind":"identifier"}],"abstract":[{"text":"A protocol for legitimate arguments to ","type":"text"},{"type":"codeVoice","code":"Mirror"},{"text":"’s ","type":"text"},{"code":"descendant","type":"codeVoice"},{"text":" ","type":"text"},{"type":"text","text":"method."}],"kind":"symbol","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/StringProtocol-Implementations":{"kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/StringProtocol-Implementations","abstract":[],"title":"StringProtocol Implementations","role":"collectionGroup","url":"\/documentation\/compute\/string\/stringprotocol-implementations","type":"topic"},"doc://com.swallow.documentation.Compute/7Swallow21NonDestroyingSequenceP":{"type":"unresolvable","title":"Swallow.NonDestroyingSequence","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow21NonDestroyingSequenceP"},"http://www.unicode.org/glossary/":{"titleInlineContent":[{"text":"Unicode.org glossary","type":"text"}],"url":"http:\/\/www.unicode.org\/glossary\/","type":"link","title":"Unicode.org glossary","identifier":"http:\/\/www.unicode.org\/glossary\/"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/withUTF8(_:)":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/withUTF8(_:)","role":"symbol","title":"withUTF8(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"withUTF8","kind":"identifier"},{"text":"<","kind":"text"},{"text":"R","kind":"genericParameter"},{"kind":"text","text":">(("},{"preciseIdentifier":"s:SR","text":"UnsafeBufferPointer","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s5UInt8V","text":"UInt8"},{"kind":"text","text":">) "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"R","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"R","kind":"typeIdentifier"}],"type":"topic","kind":"symbol","url":"\/documentation\/compute\/string\/withutf8(_:)","abstract":[{"type":"text","text":"Runs "},{"code":"body","type":"codeVoice"},{"type":"text","text":" over the content of this string in contiguous memory. If this"},{"type":"text","text":" "},{"type":"text","text":"string is not contiguous, this will first make it contiguous, which will"},{"text":" ","type":"text"},{"text":"also speed up subsequent access. If this mutates the string,","type":"text"},{"text":" ","type":"text"},{"text":"it will invalidate any pre-existing indices.","type":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/String/init(validatingCString:)-992vo":{"role":"symbol","title":"init(validatingCString:)","abstract":[{"type":"text","text":"Creates a new string by copying and validating the null-terminated UTF-8"},{"text":" ","type":"text"},{"type":"text","text":"data referenced by the given pointer."}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/init(validatingCString:)-992vo","fragments":[{"kind":"identifier","text":"init"},{"text":"?(","kind":"text"},{"text":"validatingCString","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s5CChara","text":"CChar"},{"kind":"text","text":">)"}],"kind":"symbol","url":"\/documentation\/compute\/string\/init(validatingcstring:)-992vo"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/Sequence-Implementations":{"url":"\/documentation\/compute\/string\/sequence-implementations","type":"topic","title":"Sequence Implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/Sequence-Implementations","role":"collectionGroup","kind":"article","abstract":[]},"doc://com.swallow.documentation.Compute/documentation/Compute/String/CustomDebugStringConvertible-Implementations":{"type":"topic","role":"collectionGroup","abstract":[],"kind":"article","url":"\/documentation\/compute\/string\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/CustomDebugStringConvertible-Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/init(_:)-wbcx":{"role":"symbol","title":"init(_:)","abstract":[{"type":"text","text":"Creates a string corresponding to the given sequence of UTF-16 code units."}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/init(_:)-wbcx","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"text":".","kind":"text"},{"preciseIdentifier":"s:SS9UTF16ViewV","text":"UTF16View","kind":"typeIdentifier"},{"text":")","kind":"text"}],"kind":"symbol","url":"\/documentation\/compute\/string\/init(_:)-wbcx"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/append(_:)-4xa8f":{"type":"topic","role":"symbol","abstract":[{"type":"text","text":"Appends the given string to this string."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"append"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/compute\/string\/append(_:)-4xa8f","title":"append(_:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/append(_:)-4xa8f"},"doc://com.swallow.documentation.Compute/documentation/Compute/RangeReplaceableCollection":{"type":"topic","title":"RangeReplaceableCollection","abstract":[{"text":"A collection that supports replacement of an arbitrary subrange of elements","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"with the elements of another collection."}],"url":"\/documentation\/compute\/rangereplaceablecollection","role":"symbol","kind":"symbol","navigatorTitle":[{"text":"RangeReplaceableCollection","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RangeReplaceableCollection","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"RangeReplaceableCollection","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/7Swallow32DataDecodableWithDefaultStrategyP":{"type":"unresolvable","title":"Swallow.DataDecodableWithDefaultStrategy","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow32DataDecodableWithDefaultStrategyP"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/init(decodingCString:as:)-8way7":{"fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Encoding","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"decodingCString","kind":"externalParam"},{"text":": [","kind":"text"},{"kind":"typeIdentifier","text":"Encoding"},{"text":".","kind":"text"},{"preciseIdentifier":"s:s16_UnicodeEncodingP8CodeUnitQa","text":"CodeUnit","kind":"typeIdentifier"},{"text":"], ","kind":"text"},{"kind":"externalParam","text":"as"},{"text":": ","kind":"text"},{"text":"Encoding","kind":"typeIdentifier"},{"text":".Type)","kind":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/init(decodingCString:as:)-8way7","title":"init(decodingCString:as:)","abstract":[{"type":"text","text":"Creates a new string by copying the null-terminated sequence of code units"},{"text":" ","type":"text"},{"text":"referenced by the given array.","type":"text"}],"deprecated":true,"kind":"symbol","role":"symbol","type":"topic","url":"\/documentation\/compute\/string\/init(decodingcstring:as:)-8way7"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/init(validatingCString:)-98wra":{"type":"topic","role":"symbol","abstract":[{"type":"text","text":"Creates a new string by copying and validating the null-terminated UTF-8"},{"text":" ","type":"text"},{"type":"text","text":"data referenced by the given array."}],"kind":"symbol","fragments":[{"kind":"identifier","text":"init"},{"text":"?(","kind":"text"},{"text":"validatingCString","kind":"externalParam"},{"text":": [","kind":"text"},{"kind":"typeIdentifier","text":"CChar","preciseIdentifier":"s:s5CChara"},{"kind":"text","text":"])"}],"url":"\/documentation\/compute\/string\/init(validatingcstring:)-98wra","deprecated":true,"title":"init(validatingCString:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/init(validatingCString:)-98wra"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/init(_:)-83bub":{"role":"symbol","title":"init(_:)","abstract":[{"type":"text","text":"Creates a String having the given content."}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/init(_:)-83bub","fragments":[{"kind":"identifier","text":"init"},{"text":"?(","kind":"text"},{"preciseIdentifier":"s:Ss","kind":"typeIdentifier","text":"Substring"},{"text":".","kind":"text"},{"preciseIdentifier":"s:Ss8UTF8ViewV","text":"UTF8View","kind":"typeIdentifier"},{"text":")","kind":"text"}],"kind":"symbol","url":"\/documentation\/compute\/string\/init(_:)-83bub"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/init(describing:)-67ncf":{"type":"topic","role":"symbol","abstract":[{"type":"text","text":"Creates a string representing the given value."}],"kind":"symbol","fragments":[{"kind":"identifier","text":"init"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Subject"},{"text":">(","kind":"text"},{"text":"describing","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Subject"},{"kind":"text","text":")"}],"url":"\/documentation\/compute\/string\/init(describing:)-67ncf","title":"init(describing:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/init(describing:)-67ncf"},"doc://com.swallow.documentation.Compute/documentation/Compute/ExpressibleByUnicodeScalarLiteral":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ExpressibleByUnicodeScalarLiteral"}],"kind":"symbol","title":"ExpressibleByUnicodeScalarLiteral","abstract":[{"text":"A type that can be initialized with a string literal containing a single","type":"text"},{"type":"text","text":" "},{"text":"Unicode scalar value.","type":"text"}],"role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ExpressibleByUnicodeScalarLiteral"}],"url":"\/documentation\/compute\/expressiblebyunicodescalarliteral","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ExpressibleByUnicodeScalarLiteral"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/+(_:_:)-655mi":{"kind":"symbol","abstract":[],"url":"\/documentation\/compute\/string\/+(_:_:)-655mi","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/+(_:_:)-655mi","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"+","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":") -> ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}],"type":"topic","title":"+(_:_:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/characters":{"role":"symbol","title":"characters","abstract":[{"type":"text","text":"A view of the string’s contents as a collection of characters."}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/characters","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"characters"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"}],"deprecated":true,"kind":"symbol","url":"\/documentation\/compute\/string\/characters"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/init(_:)-2t931":{"type":"topic","role":"symbol","abstract":[{"type":"text","text":"Creates a string corresponding to the given collection of Unicode"},{"text":" ","type":"text"},{"type":"text","text":"scalars."}],"kind":"symbol","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"UnicodeScalarView","preciseIdentifier":"s:SS17UnicodeScalarViewV"},{"kind":"text","text":")"}],"url":"\/documentation\/compute\/string\/init(_:)-2t931","title":"init(_:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/init(_:)-2t931"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/init(repeating:count:)-23xjt":{"role":"symbol","title":"init(repeating:count:)","abstract":[{"type":"text","text":"Creates a new string representing the given string repeated the specified"},{"text":" ","type":"text"},{"type":"text","text":"number of times."}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/init(repeating:count:)-23xjt","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"text":"repeating","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"count"},{"kind":"text","text":": "},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":")","kind":"text"}],"kind":"symbol","url":"\/documentation\/compute\/string\/init(repeating:count:)-23xjt"},"doc://com.swallow.documentation.Compute/documentation/Compute/CustomReflectable":{"url":"\/documentation\/compute\/customreflectable","role":"symbol","abstract":[{"text":"A type that explicitly supplies its own mirror.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CustomReflectable","title":"CustomReflectable","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CustomReflectable"}],"navigatorTitle":[{"kind":"identifier","text":"CustomReflectable"}],"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/init(_:)-expd":{"type":"topic","role":"symbol","abstract":[{"type":"text","text":"Creates a String having the given content."}],"kind":"symbol","fragments":[{"kind":"identifier","text":"init"},{"text":"?(","kind":"text"},{"preciseIdentifier":"s:Ss","kind":"typeIdentifier","text":"Substring"},{"text":".","kind":"text"},{"preciseIdentifier":"s:Ss9UTF16ViewV","text":"UTF16View","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/compute\/string\/init(_:)-expd","title":"init(_:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/init(_:)-expd"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/init(decodingCString:as:)-2zmjc":{"role":"symbol","title":"init(decodingCString:as:)","abstract":[],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/init(decodingCString:as:)-2zmjc","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"text":"Encoding","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"decodingCString","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"as"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Encoding"},{"text":".Type)","kind":"text"}],"deprecated":true,"kind":"symbol","url":"\/documentation\/compute\/string\/init(decodingcstring:as:)-2zmjc"},"doc://com.swallow.documentation.Compute/7Swallow24MutableStringConvertibleP":{"type":"unresolvable","title":"Swallow.MutableStringConvertible","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow24MutableStringConvertibleP"},"doc://com.swallow.documentation.Compute/7Swallow13DataEncodableP":{"type":"unresolvable","title":"Swallow.DataEncodable","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow13DataEncodableP"},"doc://com.swallow.documentation.Compute/documentation/Compute/Sendable":{"kind":"symbol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"Sendable","kind":"identifier"}],"title":"Sendable","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sendable","abstract":[],"url":"\/documentation\/compute\/sendable","role":"symbol","navigatorTitle":[{"text":"Sendable","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/String/~=(_:_:)":{"type":"topic","role":"symbol","abstract":[],"kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"~=","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:Ss","text":"Substring"},{"kind":"text","text":") -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"url":"\/documentation\/compute\/string\/~=(_:_:)","title":"~=(_:_:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/~=(_:_:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/init(cString:)-6kr8s":{"role":"symbol","title":"init(cString:)","abstract":[{"type":"text","text":"Creates a new string by copying the null-terminated UTF-8 data referenced"},{"text":" ","type":"text"},{"type":"text","text":"by the given pointer."}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/init(cString:)-6kr8s","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"text":"cString","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s5UInt8V","text":"UInt8"},{"kind":"text","text":">)"}],"kind":"symbol","url":"\/documentation\/compute\/string\/init(cstring:)-6kr8s"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/decodeCString(_:as:repairingInvalidCodeUnits:)-2l7u6":{"type":"topic","role":"symbol","abstract":[],"kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"decodeCString","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Encoding","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Encoding"},{"text":".","kind":"text"},{"preciseIdentifier":"s:s16_UnicodeEncodingP8CodeUnitQa","text":"CodeUnit","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"as"},{"text":": ","kind":"text"},{"text":"Encoding","kind":"typeIdentifier"},{"kind":"text","text":".Type, "},{"text":"repairingInvalidCodeUnits","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") -> (result"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", repairsMade","kind":"text"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":")?","kind":"text"}],"url":"\/documentation\/compute\/string\/decodecstring(_:as:repairinginvalidcodeunits:)-2l7u6","deprecated":true,"title":"decodeCString(_:as:repairingInvalidCodeUnits:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/decodeCString(_:as:repairingInvalidCodeUnits:)-2l7u6"},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence":{"url":"\/documentation\/compute\/sequence","navigatorTitle":[{"kind":"identifier","text":"Sequence"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence","title":"Sequence","kind":"symbol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Sequence","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"A type that provides sequential, iterated access to its elements."}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Decodable":{"kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"Decodable","kind":"identifier"}],"title":"Decodable","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Decodable","abstract":[{"type":"text","text":"A type that can decode itself from an external representation."}],"url":"\/documentation\/compute\/decodable","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Decodable"}]},"doc://com.swallow.documentation.Compute/7Swallow36NonDestroyingBidirectionalCollectionP":{"type":"unresolvable","title":"Swallow.NonDestroyingBidirectionalCollection","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow36NonDestroyingBidirectionalCollectionP"},"doc://com.swallow.documentation.Compute/documentation/Compute/Hashable":{"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Hashable"}],"title":"Hashable","navigatorTitle":[{"text":"Hashable","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"A type that can be hashed into a "},{"type":"codeVoice","code":"Hasher"},{"type":"text","text":" to produce an integer hash value."}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Hashable","url":"\/documentation\/compute\/hashable","role":"symbol"},"doc://com.swallow.documentation.Compute/7Swallow14CoderPrimitiveP":{"type":"unresolvable","title":"Swallow.CoderPrimitive","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow14CoderPrimitiveP"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/+=(_:_:)-4pvxa":{"role":"symbol","title":"+=(_:_:)","abstract":[],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/+=(_:_:)-4pvxa","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"+=","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":", "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":")","kind":"text"}],"kind":"symbol","url":"\/documentation\/compute\/string\/+=(_:_:)-4pvxa"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/init(validatingUTF8:)-2o7g5":{"type":"topic","role":"symbol","deprecated":true,"url":"\/documentation\/compute\/string\/init(validatingutf8:)-2o7g5","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/init(validatingUTF8:)-2o7g5","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"?("},{"text":"validatingUTF8","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"text":"CChar","kind":"typeIdentifier","preciseIdentifier":"s:s5CChara"},{"kind":"text","text":")"}],"abstract":[],"title":"init(validatingUTF8:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/_CustomPlaygroundQuickLookable-Implementations":{"kind":"article","role":"collectionGroup","type":"topic","url":"\/documentation\/compute\/string\/_customplaygroundquicklookable-implementations","abstract":[],"title":"_CustomPlaygroundQuickLookable Implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/_CustomPlaygroundQuickLookable-Implementations"},"doc://com.swallow.documentation.Compute/7Swallow17UTF8RepresentableP":{"type":"unresolvable","title":"Swallow.UTF8Representable","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow17UTF8RepresentableP"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/init(describing:)-6ttci":{"role":"symbol","title":"init(describing:)","abstract":[{"type":"text","text":"Creates a string representing the given value."}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/init(describing:)-6ttci","fragments":[{"kind":"identifier","text":"init"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Subject"},{"text":">(","kind":"text"},{"text":"describing","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Subject"},{"kind":"text","text":")"}],"kind":"symbol","url":"\/documentation\/compute\/string\/init(describing:)-6ttci"},"doc://com.swallow.documentation.Compute/7Swallow8DiffableP":{"type":"unresolvable","title":"Swallow.Diffable","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow8DiffableP"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/min(_:_:)":{"role":"symbol","title":"min(_:_:)","abstract":[],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/min(_:_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"min","kind":"identifier"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"T"}],"kind":"symbol","url":"\/documentation\/compute\/string\/min(_:_:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/TextOutputStreamable-Implementations":{"type":"topic","role":"collectionGroup","abstract":[],"kind":"article","url":"\/documentation\/compute\/string\/textoutputstreamable-implementations","title":"TextOutputStreamable Implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/TextOutputStreamable-Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/init(cString:)-cgw2":{"role":"symbol","title":"init(cString:)","abstract":[],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/init(cString:)-cgw2","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"text":"cString","kind":"externalParam"},{"kind":"text","text":": "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":")","kind":"text"}],"deprecated":true,"kind":"symbol","url":"\/documentation\/compute\/string\/init(cstring:)-cgw2"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/makeContiguousUTF8()":{"type":"topic","role":"symbol","abstract":[{"type":"text","text":"If this string is not contiguous, make it so. If this mutates the string,"},{"text":" ","type":"text"},{"type":"text","text":"it will invalidate any pre-existing indices."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"makeContiguousUTF8","kind":"identifier"},{"text":"()","kind":"text"}],"url":"\/documentation\/compute\/string\/makecontiguousutf8()","title":"makeContiguousUTF8()","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/makeContiguousUTF8()"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/Equatable-Implementations":{"abstract":[],"url":"\/documentation\/compute\/string\/equatable-implementations","title":"Equatable Implementations","role":"collectionGroup","kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/Equatable-Implementations","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/ExpressibleByExtendedGraphemeClusterLiteral":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ExpressibleByExtendedGraphemeClusterLiteral"}],"kind":"symbol","title":"ExpressibleByExtendedGraphemeClusterLiteral","abstract":[{"type":"text","text":"A type that can be initialized with a string literal containing a single"},{"type":"text","text":" "},{"text":"extended grapheme cluster.","type":"text"}],"role":"symbol","type":"topic","navigatorTitle":[{"text":"ExpressibleByExtendedGraphemeClusterLiteral","kind":"identifier"}],"url":"\/documentation\/compute\/expressiblebyextendedgraphemeclusterliteral","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ExpressibleByExtendedGraphemeClusterLiteral"},"doc://com.swallow.documentation.Compute/documentation/Compute/ExpressibleByStringLiteral":{"abstract":[{"type":"text","text":"A type that can be initialized with a string literal."}],"type":"topic","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"ExpressibleByStringLiteral","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ExpressibleByStringLiteral","title":"ExpressibleByStringLiteral","url":"\/documentation\/compute\/expressiblebystringliteral","navigatorTitle":[{"text":"ExpressibleByStringLiteral","kind":"identifier"}],"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/init(decodingCString:as:)-534rp":{"role":"symbol","title":"init(decodingCString:as:)","abstract":[],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/init(decodingCString:as:)-534rp","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"text":"Encoding","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"decodingCString","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Encoding"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"CodeUnit","preciseIdentifier":"s:s16_UnicodeEncodingP8CodeUnitQa"},{"text":", ","kind":"text"},{"text":"as","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Encoding"},{"text":".Type)","kind":"text"}],"deprecated":true,"kind":"symbol","url":"\/documentation\/compute\/string\/init(decodingcstring:as:)-534rp"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/BidirectionalCollection-Implementations":{"role":"collectionGroup","type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/BidirectionalCollection-Implementations","kind":"article","title":"BidirectionalCollection Implementations","url":"\/documentation\/compute\/string\/bidirectionalcollection-implementations","abstract":[]},"doc://com.swallow.documentation.Compute/documentation/Compute/String/init(_:)-6sprj":{"type":"topic","role":"symbol","abstract":[{"type":"text","text":"Creates a string corresponding to the given sequence of UTF-8 code units."}],"kind":"symbol","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"text":".","kind":"text"},{"preciseIdentifier":"s:SS8UTF8ViewV","text":"UTF8View","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/compute\/string\/init(_:)-6sprj","title":"init(_:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/init(_:)-6sprj"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/init(unsafeUninitializedCapacity:initializingUTF8With:)":{"role":"symbol","title":"init(unsafeUninitializedCapacity:initializingUTF8With:)","abstract":[{"type":"text","text":"Creates a new string with the specified capacity in UTF-8 code units, and"},{"text":" ","type":"text"},{"type":"text","text":"then calls the given closure with a buffer covering the string’s"},{"text":" ","type":"text"},{"text":"uninitialized memory.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/init(unsafeUninitializedCapacity:initializingUTF8With:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"unsafeUninitializedCapacity"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":", "},{"text":"initializingUTF8With","kind":"externalParam"},{"text":": (","kind":"text"},{"preciseIdentifier":"s:Sr","text":"UnsafeMutableBufferPointer","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"UInt8","kind":"typeIdentifier","preciseIdentifier":"s:s5UInt8V"},{"text":">) ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"}],"kind":"symbol","url":"\/documentation\/compute\/string\/init(unsafeuninitializedcapacity:initializingutf8with:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/TextOutputStream-Implementations":{"type":"topic","role":"collectionGroup","abstract":[],"kind":"article","url":"\/documentation\/compute\/string\/textoutputstream-implementations","title":"TextOutputStream Implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/TextOutputStream-Implementations"},"http://www.unicode.org/glossary/#unicode_scalar_value":{"titleInlineContent":[{"text":"Unicode scalar","type":"text"},{"type":"text","text":" "},{"text":"values","type":"text"}],"url":"http:\/\/www.unicode.org\/glossary\/#unicode_scalar_value","type":"link","title":"Unicode scalar values","identifier":"http:\/\/www.unicode.org\/glossary\/#unicode_scalar_value"},"doc://com.swallow.documentation.Compute/7Swallow9CountableP":{"type":"unresolvable","title":"Swallow.Countable","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow9CountableP"},"doc://com.swallow.documentation.Compute/documentation/Compute/TextOutputStream":{"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TextOutputStream"}],"kind":"symbol","title":"TextOutputStream","abstract":[{"type":"text","text":"A type that can be the target of text-streaming operations."}],"role":"symbol","type":"topic","navigatorTitle":[{"text":"TextOutputStream","kind":"identifier"}],"url":"\/documentation\/compute\/textoutputstream","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/TextOutputStream"},"doc://com.swallow.documentation.Compute/7Swallow19StringInitializableP":{"type":"unresolvable","title":"Swallow.StringInitializable","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow19StringInitializableP"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/init(validatingUTF8:)-208fn":{"type":"topic","role":"symbol","abstract":[{"type":"text","text":"Creates a new string by copying and validating the null-terminated UTF-8"},{"text":" ","type":"text"},{"type":"text","text":"data referenced by the given pointer."}],"kind":"symbol","fragments":[{"kind":"identifier","text":"init"},{"text":"?(","kind":"text"},{"text":"validatingUTF8","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s5CChara","text":"CChar"},{"kind":"text","text":">)"}],"url":"\/documentation\/compute\/string\/init(validatingutf8:)-208fn","deprecated":true,"title":"init(validatingUTF8:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/init(validatingUTF8:)-208fn"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/init(_:)-14lv5":{"role":"symbol","title":"init(_:)","abstract":[{"type":"text","text":"Creates a new string from the given substring."}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/init(_:)-14lv5","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:Ss","kind":"typeIdentifier","text":"Substring"},{"text":")","kind":"text"}],"kind":"symbol","url":"\/documentation\/compute\/string\/init(_:)-14lv5"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/init(cString:)-1gatt":{"type":"topic","role":"symbol","abstract":[],"kind":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"text":"cString","kind":"externalParam"},{"kind":"text","text":": "},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CChar","preciseIdentifier":"s:s5CChara","kind":"typeIdentifier"},{"kind":"text","text":")"}],"url":"\/documentation\/compute\/string\/init(cstring:)-1gatt","deprecated":true,"title":"init(cString:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/init(cString:)-1gatt"},"doc://com.swallow.documentation.Compute/7Swallow18ExtensibleSequenceP":{"type":"unresolvable","title":"Swallow.ExtensibleSequence","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow18ExtensibleSequenceP"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/CustomReflectable-Implementations":{"type":"topic","role":"collectionGroup","abstract":[],"kind":"article","url":"\/documentation\/compute\/string\/customreflectable-implementations","title":"CustomReflectable Implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/CustomReflectable-Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/String":{"type":"topic","navigatorTitle":[{"kind":"identifier","text":"String"}],"title":"String","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"String","kind":"identifier"}],"abstract":[{"type":"text","text":"A Unicode string value that is a collection of characters."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String","kind":"symbol","role":"symbol","url":"\/documentation\/compute\/string"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Collection":{"kind":"symbol","role":"symbol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Collection"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection","url":"\/documentation\/compute\/collection","abstract":[{"type":"text","text":"A sequence whose elements can be traversed multiple times,"},{"text":" ","type":"text"},{"text":"nondestructively, and accessed by an indexed subscript.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Collection"}],"title":"Collection"},"doc://com.swallow.documentation.Compute/7Swallow15MutableSequenceP":{"type":"unresolvable","title":"Swallow.MutableSequence","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow15MutableSequenceP"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/CharacterView":{"type":"topic","kind":"symbol","deprecated":true,"title":"String.CharacterView","role":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"text":"CharacterView","kind":"identifier"}],"abstract":[{"type":"text","text":"A view of a string’s contents as a collection of characters."}],"url":"\/documentation\/compute\/string\/characterview","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/CharacterView","navigatorTitle":[{"text":"CharacterView","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/7Swallow32DataEncodableWithDefaultStrategyP":{"type":"unresolvable","title":"Swallow.DataEncodableWithDefaultStrategy","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow32DataEncodableWithDefaultStrategyP"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/ExpressibleByUnicodeScalarLiteral-Implementations":{"role":"collectionGroup","title":"ExpressibleByUnicodeScalarLiteral Implementations","abstract":[],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/ExpressibleByUnicodeScalarLiteral-Implementations","kind":"article","url":"\/documentation\/compute\/string\/expressiblebyunicodescalarliteral-implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/init(_:)-8v3fo":{"type":"topic","role":"symbol","abstract":[{"type":"text","text":"Creates a string containing the given character."}],"kind":"symbol","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:SJ","kind":"typeIdentifier","text":"Character"},{"text":")","kind":"text"}],"url":"\/documentation\/compute\/string\/init(_:)-8v3fo","title":"init(_:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/init(_:)-8v3fo"},"doc://com.swallow.documentation.Compute/documentation/Compute/Comparable":{"url":"\/documentation\/compute\/comparable","type":"topic","kind":"symbol","role":"symbol","abstract":[{"text":"A type that can be compared using the relational operators ","type":"text"},{"code":"<","type":"codeVoice"},{"text":", ","type":"text"},{"code":"<=","type":"codeVoice"},{"text":", ","type":"text"},{"type":"codeVoice","code":">="},{"text":",","type":"text"},{"type":"text","text":" "},{"type":"text","text":"and "},{"type":"codeVoice","code":">"},{"text":".","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Comparable"}],"title":"Comparable","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Comparable","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"Comparable","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/String/init(validatingCString:)-1x5p0":{"role":"symbol","title":"init(validatingCString:)","abstract":[],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/init(validatingCString:)-1x5p0","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"?("},{"text":"validatingCString","kind":"externalParam"},{"kind":"text","text":": "},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CChar","preciseIdentifier":"s:s5CChara","kind":"typeIdentifier"},{"kind":"text","text":")"}],"deprecated":true,"kind":"symbol","url":"\/documentation\/compute\/string\/init(validatingcstring:)-1x5p0"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/Comparable-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/Comparable-Implementations","url":"\/documentation\/compute\/string\/comparable-implementations","type":"topic","kind":"article","abstract":[],"title":"Comparable Implementations","role":"collectionGroup"},"doc://com.swallow.documentation.Compute/7Swallow21AnyCodableConvertibleP":{"type":"unresolvable","title":"Swallow.AnyCodableConvertible","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow21AnyCodableConvertibleP"},"doc://com.swallow.documentation.Compute/7Swallow23NonDestroyingCollectionP":{"type":"unresolvable","title":"Swallow.NonDestroyingCollection","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow23NonDestroyingCollectionP"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/init(cString:)-472zs":{"url":"\/documentation\/compute\/string\/init(cstring:)-472zs","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/init(cString:)-472zs","role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"text":"cString","kind":"externalParam"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","preciseIdentifier":"s:s5UInt8V","text":"UInt8"},{"text":"])","kind":"text"}],"type":"topic","deprecated":true,"kind":"symbol","title":"init(cString:)","abstract":[{"type":"text","text":"Creates a new string by copying the null-terminated UTF-8 data referenced"},{"text":" ","type":"text"},{"type":"text","text":"by the given array."}]},"doc://com.swallow.documentation.Compute/7Swallow17StringConvertibleP":{"type":"unresolvable","title":"Swallow.StringConvertible","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow17StringConvertibleP"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/decodeCString(_:as:repairingInvalidCodeUnits:)-3mvvy":{"role":"symbol","title":"decodeCString(_:as:repairingInvalidCodeUnits:)","abstract":[],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/decodeCString(_:as:repairingInvalidCodeUnits:)-3mvvy","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"decodeCString","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Encoding","kind":"genericParameter"},{"kind":"text","text":">(["},{"kind":"typeIdentifier","text":"Encoding"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"CodeUnit","preciseIdentifier":"s:s16_UnicodeEncodingP8CodeUnitQa"},{"text":"], ","kind":"text"},{"text":"as","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Encoding"},{"text":".Type, ","kind":"text"},{"text":"repairingInvalidCodeUnits","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":") -> (result","kind":"text"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"text":", repairsMade","kind":"text"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":")?","kind":"text"}],"kind":"symbol","url":"\/documentation\/compute\/string\/decodecstring(_:as:repairinginvalidcodeunits:)-3mvvy"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/ExpressibleByStringInterpolation-Implementations":{"abstract":[],"role":"collectionGroup","url":"\/documentation\/compute\/string\/expressiblebystringinterpolation-implementations","type":"topic","kind":"article","title":"ExpressibleByStringInterpolation Implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/ExpressibleByStringInterpolation-Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/ExpressibleByStringLiteral-Implementations":{"type":"topic","role":"collectionGroup","abstract":[],"kind":"article","url":"\/documentation\/compute\/string\/expressiblebystringliteral-implementations","title":"ExpressibleByStringLiteral Implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/ExpressibleByStringLiteral-Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/ExpressibleByStringInterpolation":{"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ExpressibleByStringInterpolation"}],"kind":"symbol","title":"ExpressibleByStringInterpolation","abstract":[{"type":"text","text":"A type that can be initialized by string interpolation with a string"},{"text":" ","type":"text"},{"type":"text","text":"literal that includes expressions."}],"role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ExpressibleByStringInterpolation"}],"url":"\/documentation\/compute\/expressiblebystringinterpolation","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ExpressibleByStringInterpolation"}}}