{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"merging"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"other"},{"text":": [","kind":"text"},{"text":"Key","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"text":"Value","kind":"typeIdentifier"},{"text":"], ","kind":"text"},{"text":"uniquingKeysWith","kind":"externalParam"},{"kind":"text","text":" "},{"text":"combine","kind":"internalParam"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Value"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"kind":"text","text":" -> ["},{"kind":"typeIdentifier","text":"Key"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"text":"]","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}]},{"parameters":[{"content":[{"inlineContent":[{"text":"A dictionary to merge.","type":"text"}],"type":"paragraph"}],"name":"other"},{"name":"combine","content":[{"inlineContent":[{"text":"A closure that takes the current and new values for any","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"duplicate keys. The closure returns the desired value for the final"},{"text":" ","type":"text"},{"type":"text","text":"dictionary."}],"type":"paragraph"}]}],"kind":"parameters"},{"kind":"content","content":[{"text":"Return Value","anchor":"return-value","level":2,"type":"heading"},{"inlineContent":[{"text":"A new dictionary with the combined keys and values of this","type":"text"},{"text":" ","type":"text"},{"text":"dictionary and ","type":"text"},{"code":"other","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}]},{"content":[{"text":"Discussion","anchor":"discussion","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"Use the "},{"type":"codeVoice","code":"combine"},{"text":" closure to select a value to use in the returned","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"dictionary, or to combine existing and new values. As the key-value"},{"text":" ","type":"text"},{"type":"text","text":"pairs in "},{"type":"codeVoice","code":"other"},{"type":"text","text":" are merged with this dictionary, the "},{"type":"codeVoice","code":"combine"},{"type":"text","text":" closure"},{"text":" ","type":"text"},{"text":"is called with the current and new values for any duplicate keys that","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"are encountered."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"This example shows how to choose the current or new values for any"},{"type":"text","text":" "},{"text":"duplicate keys:","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":["let dictionary = [\"a\": 1, \"b\": 2]","let otherDictionary = [\"a\": 3, \"b\": 4]","","let keepingCurrent = dictionary.merging(otherDictionary)","      { (current, _) in current }","\/\/ [\"b\": 2, \"a\": 1]","let replacingCurrent = dictionary.merging(otherDictionary)","      { (_, new) in new }","\/\/ [\"b\": 4, \"a\": 3]"],"syntax":null}],"kind":"content"}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"title":"merging(_:uniquingKeysWith:)","role":"symbol","extendedModule":"Swift","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Key","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Hashable","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"modules":[{"relatedModules":["Swift"],"name":"Compute"}],"symbolKind":"method","externalID":"s:SD7merging_16uniquingKeysWithSDyxq_GACn_q_q__q_tKXEtKF","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"merging","kind":"identifier"},{"text":"([","kind":"text"},{"kind":"typeIdentifier","text":"Key"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":"], "},{"text":"uniquingKeysWith","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"kind":"text","text":" -> ["},{"kind":"typeIdentifier","text":"Key"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":"]"}]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/dictionary\/merging(_:uniquingkeyswith:)-3vtfs"]}],"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary\/merging(_:uniquingKeysWith:)-3vtfs","interfaceLanguage":"swift"},"sections":[],"abstract":[{"type":"text","text":"Creates a dictionary by merging the given dictionary into this"},{"text":" ","type":"text"},{"text":"dictionary, using a combining closure to determine the value for","type":"text"},{"type":"text","text":" "},{"type":"text","text":"duplicate keys."}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Dictionary/merging(_:uniquingKeysWith:)-3vtfs":{"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"merging"},{"kind":"text","text":"(["},{"text":"Key","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":"], "},{"text":"uniquingKeysWith","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Value","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> [","kind":"text"},{"text":"Key","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Key","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Hashable","type":"codeVoice"},{"text":".","type":"text"}]},"url":"\/documentation\/compute\/dictionary\/merging(_:uniquingkeyswith:)-3vtfs","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary\/merging(_:uniquingKeysWith:)-3vtfs","role":"symbol","abstract":[{"type":"text","text":"Creates a dictionary by merging the given dictionary into this"},{"text":" ","type":"text"},{"type":"text","text":"dictionary, using a combining closure to determine the value for"},{"text":" ","type":"text"},{"text":"duplicate keys.","type":"text"}],"title":"merging(_:uniquingKeysWith:)","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/Dictionary":{"role":"symbol","title":"Dictionary","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Dictionary"}],"type":"topic","kind":"symbol","abstract":[{"text":"A collection whose elements are key-value pairs.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary","navigatorTitle":[{"text":"Dictionary","kind":"identifier"}],"url":"\/documentation\/compute\/dictionary"}}}