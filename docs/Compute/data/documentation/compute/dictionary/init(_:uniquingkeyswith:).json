{"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"keysAndValues"},{"text":": ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"uniquingKeysWith","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"combine"},{"kind":"text","text":": ("},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"text":" ","kind":"text"},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence","preciseIdentifier":"s:ST","text":"Sequence"},{"text":", ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"text":" == (","kind":"text"},{"kind":"typeIdentifier","text":"Key"},{"text":", ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":")"}],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"text":"A sequence of key-value pairs to use for the new","type":"text"},{"type":"text","text":" "},{"type":"text","text":"dictionary."}],"type":"paragraph"}],"name":"keysAndValues"},{"name":"combine","content":[{"type":"paragraph","inlineContent":[{"text":"A closure that is called with the values for any duplicate","type":"text"},{"text":" ","type":"text"},{"text":"keys that are encountered. The closure returns the desired value for","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the final dictionary."}]}]}]},{"content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"inlineContent":[{"type":"text","text":"You use this initializer to create a dictionary when you have a sequence"},{"type":"text","text":" "},{"type":"text","text":"of key-value tuples that might have duplicate keys. As the dictionary is"},{"type":"text","text":" "},{"type":"text","text":"built, the initializer calls the "},{"type":"codeVoice","code":"combine"},{"type":"text","text":" closure with the current and"},{"type":"text","text":" "},{"text":"new values for any duplicate keys. Pass a closure as ","type":"text"},{"code":"combine","type":"codeVoice"},{"type":"text","text":" that"},{"type":"text","text":" "},{"type":"text","text":"returns the value to use in the resulting dictionary: The closure can"},{"type":"text","text":" "},{"text":"choose between the two values, combine them to produce a new value, or","type":"text"},{"type":"text","text":" "},{"text":"even throw an error.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"The following example shows how to choose the first and last values for"},{"text":" ","type":"text"},{"type":"text","text":"any duplicate keys:"}],"type":"paragraph"},{"code":["let pairsWithDuplicateKeys = [(\"a\", 1), (\"b\", 2), (\"a\", 3), (\"b\", 4)]","","let firstValues = Dictionary(pairsWithDuplicateKeys,","                             uniquingKeysWith: { (first, _) in first })","\/\/ [\"b\": 2, \"a\": 1]","","let lastValues = Dictionary(pairsWithDuplicateKeys,","                            uniquingKeysWith: { (_, last) in last })","\/\/ [\"b\": 4, \"a\": 3]"],"type":"codeListing","syntax":null}],"kind":"content"}],"sections":[],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary"]]},"metadata":{"role":"symbol","symbolKind":"init","title":"init(_:uniquingKeysWith:)","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"text":"S","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"uniquingKeysWith"},{"text":": (","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"rethrows","kind":"keyword"}],"modules":[{"name":"Compute"}],"externalID":"s:SD_16uniquingKeysWithSDyxq_Gqd__n_q_q__q_tKXEtKcSTRd__x_q_t7ElementRtd__lufc","roleHeading":"Initializer"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/dictionary\/init(_:uniquingkeyswith:)"]}],"abstract":[{"type":"text","text":"Creates a new dictionary from the key-value pairs in the given sequence,"},{"type":"text","text":" "},{"text":"using a combining closure to determine the value for any duplicate keys.","type":"text"}],"kind":"symbol","schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary\/init(_:uniquingKeysWith:)","interfaceLanguage":"swift"},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence":{"url":"\/documentation\/compute\/sequence","navigatorTitle":[{"kind":"identifier","text":"Sequence"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence","title":"Sequence","kind":"symbol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Sequence","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"A type that provides sequential, iterated access to its elements."}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Dictionary":{"role":"symbol","title":"Dictionary","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Dictionary"}],"type":"topic","kind":"symbol","abstract":[{"text":"A collection whose elements are key-value pairs.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary","navigatorTitle":[{"text":"Dictionary","kind":"identifier"}],"url":"\/documentation\/compute\/dictionary"},"doc://com.swallow.documentation.Compute/documentation/Compute/Dictionary/init(_:uniquingKeysWith:)":{"kind":"symbol","url":"\/documentation\/compute\/dictionary\/init(_:uniquingkeyswith:)","role":"symbol","type":"topic","title":"init(_:uniquingKeysWith:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary\/init(_:uniquingKeysWith:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"text":"S","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"S","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"uniquingKeysWith","kind":"externalParam"},{"kind":"text","text":": ("},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"text":") ","kind":"text"},{"kind":"keyword","text":"rethrows"}],"abstract":[{"type":"text","text":"Creates a new dictionary from the key-value pairs in the given sequence,"},{"text":" ","type":"text"},{"text":"using a combining closure to determine the value for any duplicate keys.","type":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence/Element":{"type":"topic","required":true,"abstract":[{"type":"text","text":"A type representing the sequenceâ€™s elements."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"symbol","url":"\/documentation\/compute\/sequence\/element","role":"symbol","title":"Element","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"}}}