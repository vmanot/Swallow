{"schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"metadata":{"role":"symbol","modules":[{"name":"Compute","relatedModules":["Swift"]}],"roleHeading":"Instance Method","externalID":"s:SlsE6prefix4upTo11SubSequenceQz5IndexQz_tF::SYNTHESIZED::s:SD6ValuesV","title":"prefix(upTo:)","symbolKind":"method","extendedModule":"Swift","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"prefix","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"upTo"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Index","kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:Sl11SubSequenceQa","kind":"typeIdentifier","text":"SubSequence"}]},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary\/Values-swift.struct","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary\/Values-swift.struct\/Collection-Implementations"]]},"abstract":[{"text":"Returns a subsequence from the start of the collection up to, but not","type":"text"},{"type":"text","text":" "},{"text":"including, the specified position.","type":"text"}],"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary\/Values-swift.struct\/prefix(upTo:)","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/compute\/dictionary\/values-swift.struct\/prefix(upto:)"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"prefix","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"upTo"},{"text":" ","kind":"text"},{"text":"end","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"Index","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/Index","preciseIdentifier":"s:Sl5IndexQa"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/SubSequence","kind":"typeIdentifier","text":"SubSequence","preciseIdentifier":"s:Sl11SubSequenceQa"}],"platforms":["macOS"]}]},{"parameters":[{"content":[{"inlineContent":[{"type":"text","text":"The “past the end” index of the resulting subsequence."},{"type":"text","text":" "},{"code":"end","type":"codeVoice"},{"type":"text","text":" must be a valid index of the collection."}],"type":"paragraph"}],"name":"end"}],"kind":"parameters"},{"kind":"content","content":[{"type":"heading","level":2,"text":"Return Value","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A subsequence up to, but not including, the "},{"code":"end","type":"codeVoice"},{"text":" position.","type":"text"}]}]},{"content":[{"anchor":"discussion","level":2,"text":"Discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The resulting subsequence "},{"inlineContent":[{"type":"text","text":"does not include"}],"type":"emphasis"},{"text":" the element at the position","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"end"},{"type":"text","text":". The following example searches for the index of the number "},{"code":"40","type":"codeVoice"},{"type":"text","text":" "},{"text":"in an array of integers, and then prints the prefix of the array up to,","type":"text"},{"type":"text","text":" "},{"text":"but not including, that index:","type":"text"}]},{"type":"codeListing","syntax":null,"code":["let numbers = [10, 20, 30, 40, 50, 60]","if let i = numbers.firstIndex(of: 40) {","    print(numbers.prefix(upTo: i))","}","\/\/ Prints \"[10, 20, 30]\""]},{"inlineContent":[{"type":"text","text":"Passing the collection’s starting index as the "},{"type":"codeVoice","code":"end"},{"type":"text","text":" parameter results in"},{"text":" ","type":"text"},{"text":"an empty subsequence.","type":"text"}],"type":"paragraph"},{"syntax":null,"code":["print(numbers.prefix(upTo: numbers.startIndex))","\/\/ Prints \"[]\""],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Using the "},{"code":"prefix(upTo:)","type":"codeVoice"},{"text":" method is equivalent to using a partial","type":"text"},{"type":"text","text":" "},{"type":"text","text":"half-open range as the collection’s subscript. The subscript notation is"},{"text":" ","type":"text"},{"type":"text","text":"preferred over "},{"type":"codeVoice","code":"prefix(upTo:)"},{"text":".","type":"text"}]},{"code":["if let i = numbers.firstIndex(of: 40) {","    print(numbers[..<i])","}","\/\/ Prints \"[10, 20, 30]\""],"type":"codeListing","syntax":null},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"O(1)"}]}],"name":"Complexity","type":"aside","style":"note"}],"kind":"content"}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Dictionary/Values-swift.struct/Collection-Implementations":{"role":"collectionGroup","title":"Collection Implementations","url":"\/documentation\/compute\/dictionary\/values-swift.struct\/collection-implementations","kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary\/Values-swift.struct\/Collection-Implementations","abstract":[],"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Dictionary/Values-swift.struct":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Values","kind":"identifier"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Key","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Hashable","type":"codeVoice"},{"text":".","type":"text"}]},"role":"symbol","title":"Dictionary.Values","url":"\/documentation\/compute\/dictionary\/values-swift.struct","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary\/Values-swift.struct","abstract":[{"type":"text","text":"A view of a dictionary’s values."}],"type":"topic","navigatorTitle":[{"text":"Values","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Collection/Index":{"url":"\/documentation\/compute\/collection\/index","required":true,"role":"symbol","title":"Index","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Index","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"Comparable","preciseIdentifier":"s:SL","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"A type that represents a position in the collection."}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/Index","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Dictionary":{"role":"symbol","title":"Dictionary","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Dictionary"}],"type":"topic","kind":"symbol","abstract":[{"text":"A collection whose elements are key-value pairs.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary","navigatorTitle":[{"text":"Dictionary","kind":"identifier"}],"url":"\/documentation\/compute\/dictionary"},"doc://com.swallow.documentation.Compute/documentation/Compute/Dictionary/Values-swift.struct/prefix(upTo:)":{"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary\/Values-swift.struct\/prefix(upTo:)","title":"prefix(upTo:)","role":"symbol","url":"\/documentation\/compute\/dictionary\/values-swift.struct\/prefix(upto:)","abstract":[{"type":"text","text":"Returns a subsequence from the start of the collection up to, but not"},{"type":"text","text":" "},{"type":"text","text":"including, the specified position."}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"prefix","kind":"identifier"},{"kind":"text","text":"("},{"text":"upTo","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Index","kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"SubSequence","kind":"typeIdentifier","preciseIdentifier":"s:Sl11SubSequenceQa"}],"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Collection/SubSequence":{"url":"\/documentation\/compute\/collection\/subsequence","title":"SubSequence","abstract":[{"type":"text","text":"A collection representing a contiguous subrange of this collection’s"},{"type":"text","text":" "},{"text":"elements. The subsequence shares indices with the original collection.","type":"text"}],"type":"topic","kind":"symbol","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SubSequence"},{"kind":"text","text":" : "},{"text":"Collection","preciseIdentifier":"s:Sl","kind":"typeIdentifier"},{"text":" = ","kind":"text"},{"text":"Slice","preciseIdentifier":"s:s5SliceV","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":">","kind":"text"}],"required":true,"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/SubSequence"}}}