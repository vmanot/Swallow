{"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary\/Values-swift.struct\/lexicographicallyPrecedes(_:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary\/Values-swift.struct","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary\/Values-swift.struct\/Sequence-Implementations"]]},"sections":[],"abstract":[{"type":"text","text":"Returns a Boolean value indicating whether the sequence precedes another"},{"type":"text","text":" "},{"type":"text","text":"sequence in a lexicographical (dictionary) ordering, using the"},{"text":" ","type":"text"},{"text":"less-than operator (","type":"text"},{"type":"codeVoice","code":"<"},{"text":") to compare elements.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"lexicographicallyPrecedes"},{"text":"<","kind":"text"},{"text":"OtherSequence","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"other"},{"kind":"text","text":": "},{"text":"OtherSequence","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":" ","kind":"text"},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"text":"OtherSequence","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Sequence","preciseIdentifier":"s:ST","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","text":"Element","preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier"},{"kind":"text","text":" == "},{"text":"OtherSequence","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Element","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"}],"languages":["swift"],"platforms":["macOS"]}]},{"parameters":[{"name":"other","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A sequence to compare to this sequence."}]}]}],"kind":"parameters"},{"content":[{"text":"Return Value","level":2,"type":"heading","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"true"},{"text":" if this sequence precedes ","type":"text"},{"code":"other","type":"codeVoice"},{"text":" in a dictionary","type":"text"},{"type":"text","text":" "},{"text":"ordering; otherwise, ","type":"text"},{"code":"false","type":"codeVoice"},{"type":"text","text":"."}]}],"kind":"content"},{"content":[{"anchor":"discussion","text":"Discussion","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"This example uses the "},{"code":"lexicographicallyPrecedes","type":"codeVoice"},{"type":"text","text":" method to test which"},{"type":"text","text":" "},{"text":"array of integers comes first in a lexicographical ordering.","type":"text"}],"type":"paragraph"},{"syntax":null,"type":"codeListing","code":["let a = [1, 2, 2, 2]","let b = [1, 2, 3, 4]","","print(a.lexicographicallyPrecedes(b))","\/\/ Prints \"true\"","print(b.lexicographicallyPrecedes(b))","\/\/ Prints \"false\""]},{"type":"aside","style":"note","name":"Note","content":[{"type":"paragraph","inlineContent":[{"text":"This method implements the mathematical notion of lexicographical","type":"text"},{"type":"text","text":" "},{"type":"text","text":"ordering, which has no connection to Unicode.  If you are sorting"},{"type":"text","text":" "},{"type":"text","text":"strings to present to the end user, use "},{"type":"codeVoice","code":"String"},{"text":" APIs that","type":"text"},{"type":"text","text":" "},{"type":"text","text":"perform localized comparison."}]}]},{"content":[{"inlineContent":[{"text":"O(","type":"text"},{"inlineContent":[{"type":"text","text":"m"}],"type":"emphasis"},{"text":"), where ","type":"text"},{"inlineContent":[{"text":"m","type":"text"}],"type":"emphasis"},{"type":"text","text":" is the lesser of the length of the"},{"type":"text","text":" "},{"text":"sequence and the length of ","type":"text"},{"type":"codeVoice","code":"other"},{"type":"text","text":"."}],"type":"paragraph"}],"name":"Complexity","type":"aside","style":"note"}],"kind":"content"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/dictionary\/values-swift.struct\/lexicographicallyprecedes(_:)"]}],"metadata":{"extendedModule":"Swift","role":"symbol","roleHeading":"Instance Method","symbolKind":"method","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Element","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Comparable","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"modules":[{"name":"Compute","relatedModules":["Swift"]}],"externalID":"s:STsSL7ElementRpzrlE25lexicographicallyPrecedesySbqd__STRd__AAQyd__ABRSlF::SYNTHESIZED::s:SD6ValuesV","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"lexicographicallyPrecedes"},{"text":"<","kind":"text"},{"text":"OtherSequence","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"OtherSequence","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"title":"lexicographicallyPrecedes(_:)"},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Dictionary/Values-swift.struct/Sequence-Implementations":{"role":"collectionGroup","type":"topic","url":"\/documentation\/compute\/dictionary\/values-swift.struct\/sequence-implementations","title":"Sequence Implementations","kind":"article","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary\/Values-swift.struct\/Sequence-Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence":{"url":"\/documentation\/compute\/sequence","navigatorTitle":[{"kind":"identifier","text":"Sequence"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence","title":"Sequence","kind":"symbol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Sequence","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"A type that provides sequential, iterated access to its elements."}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Dictionary":{"role":"symbol","title":"Dictionary","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Dictionary"}],"type":"topic","kind":"symbol","abstract":[{"text":"A collection whose elements are key-value pairs.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary","navigatorTitle":[{"text":"Dictionary","kind":"identifier"}],"url":"\/documentation\/compute\/dictionary"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Dictionary/Values-swift.struct/lexicographicallyPrecedes(_:)":{"role":"symbol","abstract":[{"type":"text","text":"Returns a Boolean value indicating whether the sequence precedes another"},{"text":" ","type":"text"},{"text":"sequence in a lexicographical (dictionary) ordering, using the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"less-than operator ("},{"code":"<","type":"codeVoice"},{"type":"text","text":") to compare elements."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary\/Values-swift.struct\/lexicographicallyPrecedes(_:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"lexicographicallyPrecedes","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"OtherSequence"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"OtherSequence"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Comparable"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"type":"topic","url":"\/documentation\/compute\/dictionary\/values-swift.struct\/lexicographicallyprecedes(_:)","title":"lexicographicallyPrecedes(_:)","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Dictionary/Values-swift.struct":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Values","kind":"identifier"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Key","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Hashable","type":"codeVoice"},{"text":".","type":"text"}]},"role":"symbol","title":"Dictionary.Values","url":"\/documentation\/compute\/dictionary\/values-swift.struct","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary\/Values-swift.struct","abstract":[{"type":"text","text":"A view of a dictionary’s values."}],"type":"topic","navigatorTitle":[{"text":"Values","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Bool":{"url":"\/documentation\/compute\/bool","role":"symbol","title":"Bool","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Bool","kind":"identifier"}],"abstract":[{"type":"text","text":"A value type whose instances are either "},{"type":"codeVoice","code":"true"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"false"},{"text":".","type":"text"}],"navigatorTitle":[{"text":"Bool","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bool","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence/Element":{"type":"topic","required":true,"abstract":[{"type":"text","text":"A type representing the sequence’s elements."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"symbol","url":"\/documentation\/compute\/sequence\/element","role":"symbol","title":"Element","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"identifier"}]}}}