{"sections":[],"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary\/compactMapValues(_:)","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/dictionary\/compactmapvalues(_:)"]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"compactMapValues","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"transform","kind":"internalParam"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"T","kind":"typeIdentifier"},{"text":"?) ","kind":"text"},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:SD","text":"Dictionary","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Key","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}]}]},{"parameters":[{"name":"transform","content":[{"inlineContent":[{"type":"text","text":"A closure that transforms a value. "},{"code":"transform","type":"codeVoice"},{"type":"text","text":" "},{"text":"accepts each value of the dictionary as its parameter and returns an","type":"text"},{"type":"text","text":" "},{"text":"optional transformed value of the same or of a different type.","type":"text"}],"type":"paragraph"}]}],"kind":"parameters"},{"kind":"content","content":[{"text":"Return Value","anchor":"return-value","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"A dictionary containing the keys and non-"},{"type":"codeVoice","code":"nil"},{"type":"text","text":" transformed"},{"text":" ","type":"text"},{"type":"text","text":"values of this dictionary."}],"type":"paragraph"}]},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"inlineContent":[{"type":"text","text":"Use this method to receive a dictionary with non-optional values when"},{"text":" ","type":"text"},{"text":"your transformation produces optional values.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"In this example, note the difference in the result of using "},{"type":"codeVoice","code":"mapValues"},{"type":"text","text":" "},{"type":"text","text":"and "},{"type":"codeVoice","code":"compactMapValues"},{"type":"text","text":" with a transformation that returns an optional"},{"type":"text","text":" "},{"type":"codeVoice","code":"Int"},{"type":"text","text":" value."}]},{"code":["let data = [\"a\": \"1\", \"b\": \"three\", \"c\": \"\/\/\/4\/\/\/\"]","","let m: [String: Int?] = data.mapValues { str in Int(str) }","\/\/ [\"a\": Optional(1), \"b\": nil, \"c\": nil]","","let c: [String: Int] = data.compactMapValues { str in Int(str) }","\/\/ [\"a\": 1]"],"type":"codeListing","syntax":null},{"name":"Complexity","style":"note","content":[{"inlineContent":[{"type":"text","text":"O("},{"inlineContent":[{"text":"m","type":"text"}],"type":"emphasis"},{"text":" + ","type":"text"},{"inlineContent":[{"type":"text","text":"n"}],"type":"emphasis"},{"text":"), where ","type":"text"},{"inlineContent":[{"text":"n","type":"text"}],"type":"emphasis"},{"text":" is the length of the original","type":"text"},{"text":" ","type":"text"},{"text":"dictionary and ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"m"}]},{"type":"text","text":" is the length of the resulting dictionary."}],"type":"paragraph"}],"type":"aside"}]}],"metadata":{"extendedModule":"Swift","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"compactMapValues"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"text":">((","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":"?) "},{"kind":"keyword","text":"rethrows"},{"text":" -> ","kind":"text"},{"text":"Dictionary","kind":"typeIdentifier","preciseIdentifier":"s:SD"},{"kind":"text","text":"<"},{"text":"Key","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"T","kind":"typeIdentifier"},{"text":">","kind":"text"}],"title":"compactMapValues(_:)","externalID":"s:SD16compactMapValuesySDyxqd__Gqd__Sgq_KXEKlF","roleHeading":"Instance Method","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Key","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"modules":[{"name":"Compute","relatedModules":["Swift"]}],"role":"symbol","symbolKind":"method"},"kind":"symbol","abstract":[{"text":"Returns a new dictionary containing only the key-value pairs that have","type":"text"},{"text":" ","type":"text"},{"text":"non-","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":" values as the result of transformation by the given closure."}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary"]]},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Dictionary":{"role":"symbol","title":"Dictionary","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Dictionary"}],"type":"topic","kind":"symbol","abstract":[{"text":"A collection whose elements are key-value pairs.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary","navigatorTitle":[{"text":"Dictionary","kind":"identifier"}],"url":"\/documentation\/compute\/dictionary"},"doc://com.swallow.documentation.Compute/documentation/Compute/Dictionary/compactMapValues(_:)":{"abstract":[{"text":"Returns a new dictionary containing only the key-value pairs that have","type":"text"},{"type":"text","text":" "},{"text":"non-","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":" values as the result of transformation by the given closure."}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary\/compactMapValues(_:)","title":"compactMapValues(_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"compactMapValues","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">(("},{"text":"Value","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":"?) ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:SD","text":"Dictionary","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Key"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Key"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":"."}]},"url":"\/documentation\/compute\/dictionary\/compactmapvalues(_:)","type":"topic","role":"symbol"}}}