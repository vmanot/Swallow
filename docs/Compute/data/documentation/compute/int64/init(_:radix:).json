{"schemaVersion":{"minor":3,"major":0,"patch":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/int64\/init(_:radix:)"]}],"abstract":[{"type":"text","text":"Creates a new integer value from the given string and radix."}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int64\/init(_:radix:)"},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int64","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int64\/FixedWidthInteger-Implementations"]]},"kind":"symbol","primaryContentSections":[{"declarations":[{"tokens":[{"text":"init","kind":"keyword"},{"text":"?<","kind":"text"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"text","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":", "},{"kind":"externalParam","text":"radix"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"kind":"text","text":" = 10) "},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"text":"S","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/StringProtocol","kind":"typeIdentifier","text":"StringProtocol","preciseIdentifier":"s:Sy"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"content":[{"inlineContent":[{"text":"The ASCII representation of a number in the radix passed as","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"radix"},{"type":"text","text":"."}],"type":"paragraph"}],"name":"text"},{"content":[{"type":"paragraph","inlineContent":[{"text":"The radix, or base, to use for converting ","type":"text"},{"type":"codeVoice","code":"text"},{"type":"text","text":" to an integer"},{"type":"text","text":" "},{"type":"text","text":"value. "},{"code":"radix","type":"codeVoice"},{"type":"text","text":" must be in the range "},{"code":"2...36","type":"codeVoice"},{"text":". The default is 10.","type":"text"}]}],"name":"radix"}],"kind":"parameters"},{"kind":"content","content":[{"type":"heading","anchor":"discussion","level":2,"text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"The string passed as ","type":"text"},{"code":"text","type":"codeVoice"},{"text":" may begin with a plus or minus sign character","type":"text"},{"text":" ","type":"text"},{"text":"(","type":"text"},{"code":"+","type":"codeVoice"},{"type":"text","text":" or "},{"type":"codeVoice","code":"-"},{"text":"), followed by one or more numeric digits (","type":"text"},{"code":"0-9","type":"codeVoice"},{"type":"text","text":") or letters"},{"type":"text","text":" "},{"text":"(","type":"text"},{"code":"a-z","type":"codeVoice"},{"text":" or ","type":"text"},{"code":"A-Z","type":"codeVoice"},{"text":"). Parsing of the string is case insensitive.","type":"text"}]},{"type":"codeListing","code":["let x = Int(\"123\")","\/\/ x == 123","","let y = Int(\"-123\", radix: 8)","\/\/ y == -83","let y = Int(\"+123\", radix: 8)","\/\/ y == +83","","let z = Int(\"07b\", radix: 16)","\/\/ z == 123"],"syntax":null},{"inlineContent":[{"type":"text","text":"If "},{"type":"codeVoice","code":"text"},{"text":" is in an invalid format or contains characters that are out of","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"bounds for the given "},{"type":"codeVoice","code":"radix"},{"text":", or if the value it denotes in the given","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"radix"},{"type":"text","text":" is not representable, the result is "},{"code":"nil","type":"codeVoice"},{"type":"text","text":". For example, the"},{"text":" ","type":"text"},{"type":"text","text":"following conversions result in "},{"type":"codeVoice","code":"nil"},{"type":"text","text":":"}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":["Int(\" 100\")                       \/\/ Includes whitespace","Int(\"21-50\")                      \/\/ Invalid format","Int(\"ff6600\")                     \/\/ Characters out of bounds","Int(\"zzzzzzzzzzzzz\", radix: 36)   \/\/ Out of range"]}]}],"metadata":{"role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"?<"},{"text":"S","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":", "},{"text":"radix","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"text":")","kind":"text"}],"roleHeading":"Initializer","externalID":"s:s17FixedWidthIntegerPsE_5radixxSgqd___SitcSyRd__lufc::SYNTHESIZED::s:s5Int64V","symbolKind":"init","title":"init(_:radix:)","modules":[{"name":"Compute","relatedModules":["Swift"]}],"extendedModule":"Swift"},"sections":[],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Int":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","abstract":[{"type":"text","text":"A signed integer value type."}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Int","kind":"identifier"}],"navigatorTitle":[{"text":"Int","kind":"identifier"}],"title":"Int","url":"\/documentation\/compute\/int","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/StringProtocol":{"url":"\/documentation\/compute\/stringprotocol","role":"symbol","abstract":[{"type":"text","text":"A type that can represent a string as a collection of characters."}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/StringProtocol","title":"StringProtocol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StringProtocol","kind":"identifier"}],"navigatorTitle":[{"text":"StringProtocol","kind":"identifier"}],"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int64":{"url":"\/documentation\/compute\/int64","title":"Int64","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int64","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Int64"}],"abstract":[{"type":"text","text":"A 64-bit signed integer value"},{"text":" ","type":"text"},{"text":"type.","type":"text"}],"navigatorTitle":[{"text":"Int64","kind":"identifier"}],"type":"topic","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int64/init(_:radix:)":{"role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"?<"},{"text":"S","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"S"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"radix"},{"kind":"text","text":": "},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"kind":"text","text":")"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int64\/init(_:radix:)","url":"\/documentation\/compute\/int64\/init(_:radix:)","abstract":[{"type":"text","text":"Creates a new integer value from the given string and radix."}],"title":"init(_:radix:)","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int64/FixedWidthInteger-Implementations":{"role":"collectionGroup","type":"topic","kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int64\/FixedWidthInteger-Implementations","abstract":[],"title":"FixedWidthInteger Implementations","url":"\/documentation\/compute\/int64\/fixedwidthinteger-implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"}}}