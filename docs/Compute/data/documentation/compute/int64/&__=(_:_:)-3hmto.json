{"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int64\/&__=(_:_:)-3hmto"},"sections":[],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"&<<="},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"lhs","kind":"internalParam"},{"kind":"text","text":": "},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int64","preciseIdentifier":"s:s5Int64V","text":"Int64","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"rhs","kind":"internalParam"},{"kind":"text","text":": "},{"text":"Int64","preciseIdentifier":"s:s5Int64V","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int64"},{"kind":"text","text":")"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The value to shift.","type":"text"}]}],"name":"lhs"},{"content":[{"inlineContent":[{"type":"text","text":"The number of bits to shift "},{"type":"codeVoice","code":"lhs"},{"text":" to the left. If ","type":"text"},{"code":"rhs","type":"codeVoice"},{"text":" is","type":"text"},{"type":"text","text":" "},{"text":"outside the range ","type":"text"},{"code":"0..<lhs.bitWidth","type":"codeVoice"},{"type":"text","text":", it is masked to produce a"},{"type":"text","text":" "},{"text":"value within that range.","type":"text"}],"type":"paragraph"}],"name":"rhs"}]},{"content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"code":"&<<=","type":"codeVoice"},{"text":" operator performs a ","type":"text"},{"inlineContent":[{"type":"text","text":"masking shift"}],"type":"emphasis"},{"text":", where the value used as","type":"text"},{"text":" ","type":"text"},{"code":"rhs","type":"codeVoice"},{"type":"text","text":" is masked to produce a value in the range "},{"code":"0..<lhs.bitWidth","type":"codeVoice"},{"type":"text","text":". The"},{"text":" ","type":"text"},{"text":"shift is performed using this masked value.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The following example defines "},{"type":"codeVoice","code":"x"},{"type":"text","text":" as an instance of "},{"type":"codeVoice","code":"UInt8"},{"type":"text","text":", an 8-bit,"},{"text":" ","type":"text"},{"type":"text","text":"unsigned integer type. If you use "},{"type":"codeVoice","code":"2"},{"type":"text","text":" as the right-hand-side value in an"},{"type":"text","text":" "},{"type":"text","text":"operation on "},{"code":"x","type":"codeVoice"},{"type":"text","text":", the shift amount requires no masking."}]},{"code":["var x: UInt8 = 30                 \/\/ 0b00011110","x &<<= 2","\/\/ x == 120                       \/\/ 0b01111000"],"type":"codeListing","syntax":null},{"type":"paragraph","inlineContent":[{"type":"text","text":"However, if you pass "},{"type":"codeVoice","code":"19"},{"text":" as ","type":"text"},{"code":"rhs","type":"codeVoice"},{"text":", the method first bitmasks ","type":"text"},{"type":"codeVoice","code":"rhs"},{"type":"text","text":" to"},{"type":"text","text":" "},{"code":"3","type":"codeVoice"},{"type":"text","text":", and then uses that masked value as the number of bits to shift "},{"code":"lhs","type":"codeVoice"},{"text":".","type":"text"}]},{"type":"codeListing","syntax":null,"code":["var y: UInt8 = 30                 \/\/ 0b00011110","y &<<= 19","\/\/ y == 240                       \/\/ 0b11110000"]}],"kind":"content"}],"abstract":[{"type":"text","text":"Returns the result of shifting a value’s binary representation the"},{"text":" ","type":"text"},{"text":"specified number of digits to the left, masking the shift amount to the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"type’s bit width, and stores the result in the left-hand-side variable."}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int64"]]},"metadata":{"modules":[{"name":"Compute"}],"externalID":"s:s5Int64V4alleoiyyABz_ABtFZ","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"&<<=","kind":"identifier"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Int64","preciseIdentifier":"s:s5Int64V"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:s5Int64V","text":"Int64","kind":"typeIdentifier"},{"text":")","kind":"text"}],"role":"symbol","title":"&<<=(_:_:)","symbolKind":"op","roleHeading":"Operator"},"kind":"symbol","variants":[{"paths":["\/documentation\/compute\/int64\/&__=(_:_:)-3hmto"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int64/&__=(_:_:)-3hmto":{"kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"&<<="},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Int64","kind":"typeIdentifier","preciseIdentifier":"s:s5Int64V"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:s5Int64V","text":"Int64","kind":"typeIdentifier"},{"kind":"text","text":")"}],"url":"\/documentation\/compute\/int64\/&__=(_:_:)-3hmto","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int64\/&__=(_:_:)-3hmto","role":"symbol","type":"topic","abstract":[{"text":"Returns the result of shifting a value’s binary representation the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"specified number of digits to the left, masking the shift amount to the"},{"text":" ","type":"text"},{"type":"text","text":"type’s bit width, and stores the result in the left-hand-side variable."}],"title":"&<<=(_:_:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int64":{"url":"\/documentation\/compute\/int64","title":"Int64","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int64","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Int64"}],"abstract":[{"type":"text","text":"A 64-bit signed integer value"},{"text":" ","type":"text"},{"text":"type.","type":"text"}],"navigatorTitle":[{"text":"Int64","kind":"identifier"}],"type":"topic","role":"symbol"}}}