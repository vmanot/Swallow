{"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"<<","kind":"identifier"},{"text":" ","kind":"text"},{"text":"<","kind":"text"},{"text":"RHS","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"internalParam","text":"lhs"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"rhs","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"RHS"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"text":" ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"RHS"},{"kind":"text","text":" : "},{"text":"BinaryInteger","preciseIdentifier":"s:Sz","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryInteger"}]}]},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The value to shift.","type":"text"}]}],"name":"lhs"},{"name":"rhs","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The number of bits to shift "},{"type":"codeVoice","code":"lhs"},{"text":" to the left.","type":"text"}]}]}],"kind":"parameters"},{"kind":"content","content":[{"text":"Discussion","type":"heading","anchor":"discussion","level":2},{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"code":"<<","type":"codeVoice"},{"text":" operator performs a ","type":"text"},{"inlineContent":[{"text":"smart shift","type":"text"}],"type":"emphasis"},{"type":"text","text":", which defines a result for a"},{"text":" ","type":"text"},{"type":"text","text":"shift of any value."}]},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Using a negative value for "},{"type":"codeVoice","code":"rhs"},{"text":" performs a right shift using","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"abs(rhs)"},{"text":".","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Using a value for ","type":"text"},{"code":"rhs","type":"codeVoice"},{"type":"text","text":" that is greater than or equal to the bit width"},{"type":"text","text":" "},{"text":"of ","type":"text"},{"type":"codeVoice","code":"lhs"},{"text":" is an ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"overshift"}]},{"text":", resulting in zero.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Using any other value for ","type":"text"},{"code":"rhs","type":"codeVoice"},{"text":" performs a left shift on ","type":"text"},{"code":"lhs","type":"codeVoice"},{"text":" by that","type":"text"},{"type":"text","text":" "},{"type":"text","text":"amount."}]}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The following example defines "},{"code":"x","type":"codeVoice"},{"text":" as an instance of ","type":"text"},{"type":"codeVoice","code":"UInt8"},{"text":", an 8-bit,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"unsigned integer type. If you use "},{"type":"codeVoice","code":"2"},{"text":" as the right-hand-side value in an","type":"text"},{"type":"text","text":" "},{"type":"text","text":"operation on "},{"type":"codeVoice","code":"x"},{"type":"text","text":", the value is shifted left by two bits."}]},{"syntax":null,"code":["let x: UInt8 = 30                 \/\/ 0b00011110","let y = x << 2","\/\/ y == 120                       \/\/ 0b01111000"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"If you use ","type":"text"},{"code":"11","type":"codeVoice"},{"text":" as ","type":"text"},{"code":"rhs","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"x"},{"type":"text","text":" is overshifted such that all of its bits"},{"type":"text","text":" "},{"text":"are set to zero.","type":"text"}]},{"type":"codeListing","syntax":null,"code":["let z = x << 11","\/\/ z == 0                         \/\/ 0b00000000"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Using a negative value as "},{"type":"codeVoice","code":"rhs"},{"text":" is the same as performing a right shift","type":"text"},{"type":"text","text":" "},{"type":"text","text":"with "},{"type":"codeVoice","code":"abs(rhs)"},{"text":".","type":"text"}]},{"type":"codeListing","code":["let a = x << -3","\/\/ a == 3                         \/\/ 0b00000011","let b = x >> 3","\/\/ b == 3                         \/\/ 0b00000011"],"syntax":null}]}],"variants":[{"paths":["\/documentation\/compute\/int64\/__(_:_:)-7p8tu"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int64","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int64\/BinaryInteger-Implementations"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int64\/__(_:_:)-7p8tu"},"abstract":[{"text":"Returns the result of shifting a value’s binary representation the","type":"text"},{"text":" ","type":"text"},{"text":"specified number of digits to the left.","type":"text"}],"metadata":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"<<"},{"kind":"text","text":" "},{"kind":"text","text":"<"},{"text":"RHS","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"RHS","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"roleHeading":"Operator","modules":[{"name":"Compute","relatedModules":["Swift"]}],"extendedModule":"Swift","role":"symbol","symbolKind":"op","externalID":"s:SzsE2lloiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:s5Int64V","title":"<<(_:_:)"},"kind":"symbol","schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Int64/__(_:_:)-7p8tu":{"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int64\/__(_:_:)-7p8tu","kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"<<"},{"text":" ","kind":"text"},{"kind":"text","text":"<"},{"text":"RHS","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"RHS"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"title":"<<(_:_:)","url":"\/documentation\/compute\/int64\/__(_:_:)-7p8tu","abstract":[{"type":"text","text":"Returns the result of shifting a value’s binary representation the"},{"type":"text","text":" "},{"type":"text","text":"specified number of digits to the left."}],"role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int64":{"url":"\/documentation\/compute\/int64","title":"Int64","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int64","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Int64"}],"abstract":[{"type":"text","text":"A 64-bit signed integer value"},{"text":" ","type":"text"},{"text":"type.","type":"text"}],"navigatorTitle":[{"text":"Int64","kind":"identifier"}],"type":"topic","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int64/BinaryInteger-Implementations":{"role":"collectionGroup","type":"topic","kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int64\/BinaryInteger-Implementations","abstract":[],"title":"BinaryInteger Implementations","url":"\/documentation\/compute\/int64\/binaryinteger-implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/BinaryInteger":{"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"BinaryInteger"}],"navigatorTitle":[{"kind":"identifier","text":"BinaryInteger"}],"url":"\/documentation\/compute\/binaryinteger","type":"topic","abstract":[{"type":"text","text":"An integer type with a binary representation."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryInteger","title":"BinaryInteger","kind":"symbol","role":"symbol"}}}