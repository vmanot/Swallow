{"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"&>>","kind":"identifier"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"internalParam","text":"lhs"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int64","text":"Int64","kind":"typeIdentifier","preciseIdentifier":"s:s5Int64V"},{"text":", ","kind":"text"},{"text":"rhs","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int64","preciseIdentifier":"s:s5Int64V","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int64"},{"kind":"text","text":") -> "},{"text":"Int64","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int64","preciseIdentifier":"s:s5Int64V"}],"platforms":["macOS"]}]},{"parameters":[{"name":"lhs","content":[{"inlineContent":[{"text":"The value to shift.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"The number of bits to shift "},{"type":"codeVoice","code":"lhs"},{"type":"text","text":" to the right. If "},{"code":"rhs","type":"codeVoice"},{"text":" is","type":"text"},{"type":"text","text":" "},{"type":"text","text":"outside the range "},{"code":"0..<lhs.bitWidth","type":"codeVoice"},{"text":", it is masked to produce a","type":"text"},{"text":" ","type":"text"},{"text":"value within that range.","type":"text"}],"type":"paragraph"}],"name":"rhs"}],"kind":"parameters"},{"kind":"content","content":[{"level":2,"anchor":"discussion","type":"heading","text":"Discussion"},{"inlineContent":[{"text":"Use the masking right shift operator (","type":"text"},{"code":"&>>","type":"codeVoice"},{"type":"text","text":") when you need to perform a"},{"type":"text","text":" "},{"type":"text","text":"shift and are sure that the shift amount is in the range"},{"text":" ","type":"text"},{"type":"codeVoice","code":"0..<lhs.bitWidth"},{"text":". Before shifting, the masking right shift operator","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"masks the shift to this range. The shift is performed using this masked"},{"text":" ","type":"text"},{"text":"value.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"The following example defines "},{"type":"codeVoice","code":"x"},{"type":"text","text":" as an instance of "},{"type":"codeVoice","code":"UInt8"},{"text":", an 8-bit,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"unsigned integer type. If you use "},{"type":"codeVoice","code":"2"},{"type":"text","text":" as the right-hand-side value in an"},{"text":" ","type":"text"},{"type":"text","text":"operation on "},{"type":"codeVoice","code":"x"},{"text":", the shift amount requires no masking.","type":"text"}],"type":"paragraph"},{"syntax":null,"type":"codeListing","code":["let x: UInt8 = 30                 \/\/ 0b00011110","let y = x &>> 2","\/\/ y == 7                         \/\/ 0b00000111"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"However, if you use "},{"code":"8","type":"codeVoice"},{"type":"text","text":" as the shift amount, the method first masks the"},{"text":" ","type":"text"},{"type":"text","text":"shift amount to zero, and then performs the shift, resulting in no change"},{"text":" ","type":"text"},{"type":"text","text":"to the original value."}]},{"type":"codeListing","code":["let z = x &>> 8","\/\/ z == 30                        \/\/ 0b00011110"],"syntax":null},{"type":"paragraph","inlineContent":[{"type":"text","text":"If the bit width of the shifted integer type is a power of two, masking"},{"text":" ","type":"text"},{"text":"is performed using a bitmask; otherwise, masking is performed using a","type":"text"},{"type":"text","text":" "},{"type":"text","text":"modulo operation."}]}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int64\/&__(_:_:)-3uykh"},"variants":[{"paths":["\/documentation\/compute\/int64\/&__(_:_:)-3uykh"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"metadata":{"symbolKind":"op","externalID":"s:s5Int64V3aggoiyA2B_ABtFZ","extendedModule":"Swift","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"&>>","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"Int64","kind":"typeIdentifier","preciseIdentifier":"s:s5Int64V"},{"text":", ","kind":"text"},{"text":"Int64","kind":"typeIdentifier","preciseIdentifier":"s:s5Int64V"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:s5Int64V","text":"Int64","kind":"typeIdentifier"}],"title":"&>>(_:_:)","modules":[{"name":"Compute","relatedModules":["Swift"]}],"roleHeading":"Operator"},"sections":[],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int64","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int64\/FixedWidthInteger-Implementations"]]},"abstract":[{"type":"text","text":"Returns the result of shifting a value’s binary representation the"},{"text":" ","type":"text"},{"text":"specified number of digits to the right, masking the shift amount to the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"type’s bit width."}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Int64":{"url":"\/documentation\/compute\/int64","title":"Int64","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int64","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Int64"}],"abstract":[{"type":"text","text":"A 64-bit signed integer value"},{"text":" ","type":"text"},{"text":"type.","type":"text"}],"navigatorTitle":[{"text":"Int64","kind":"identifier"}],"type":"topic","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int64/FixedWidthInteger-Implementations":{"role":"collectionGroup","type":"topic","kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int64\/FixedWidthInteger-Implementations","abstract":[],"title":"FixedWidthInteger Implementations","url":"\/documentation\/compute\/int64\/fixedwidthinteger-implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int64/&__(_:_:)-3uykh":{"role":"symbol","type":"topic","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"&>>","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"Int64","kind":"typeIdentifier","preciseIdentifier":"s:s5Int64V"},{"text":", ","kind":"text"},{"text":"Int64","kind":"typeIdentifier","preciseIdentifier":"s:s5Int64V"},{"kind":"text","text":") -> "},{"text":"Int64","preciseIdentifier":"s:s5Int64V","kind":"typeIdentifier"}],"url":"\/documentation\/compute\/int64\/&__(_:_:)-3uykh","abstract":[{"text":"Returns the result of shifting a value’s binary representation the","type":"text"},{"text":" ","type":"text"},{"text":"specified number of digits to the right, masking the shift amount to the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"type’s bit width."}],"title":"&>>(_:_:)","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int64\/&__(_:_:)-3uykh"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"}}}