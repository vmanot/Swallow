{"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int64","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int64\/BinaryInteger-Implementations"]]},"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int64\/*(_:_:)","interfaceLanguage":"swift"},"kind":"symbol","schemaVersion":{"patch":0,"major":0,"minor":3},"abstract":[{"type":"text","text":"Multiplies two values and produces their product."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"*"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"text":"lhs","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int64","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int64","preciseIdentifier":"s:s5Int64V"},{"text":", ","kind":"text"},{"text":"rhs","kind":"internalParam"},{"kind":"text","text":": "},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int64","preciseIdentifier":"s:s5Int64V","kind":"typeIdentifier","text":"Int64"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int64","text":"Int64","preciseIdentifier":"s:s5Int64V"}],"languages":["swift"],"platforms":["macOS"]}]},{"parameters":[{"content":[{"inlineContent":[{"type":"text","text":"The first value to multiply."}],"type":"paragraph"}],"name":"lhs"},{"name":"rhs","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The second value to multiply."}]}]}],"kind":"parameters"},{"kind":"content","content":[{"level":2,"type":"heading","anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"The multiplication operator (","type":"text"},{"type":"codeVoice","code":"*"},{"text":") calculates the product of its two","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"arguments. For example:"}]},{"code":["2 * 3                   \/\/ 6","100 * 21                \/\/ 2100","-10 * 15                \/\/ -150","3.5 * 2.25              \/\/ 7.875"],"type":"codeListing","syntax":null},{"inlineContent":[{"type":"text","text":"You cannot use "},{"type":"codeVoice","code":"*"},{"text":" with arguments of different types. To multiply values","type":"text"},{"type":"text","text":" "},{"text":"of different types, convert one of the values to the other value’s type.","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":["let x: Int8 = 21","let y: Int = 1000000","Int(x) * y              \/\/ 21000000"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The product of the two arguments must be representable in the arguments’"},{"text":" ","type":"text"},{"type":"text","text":"type. In the following example, the result of "},{"code":"21 * 21","type":"codeVoice"},{"type":"text","text":" is greater than"},{"type":"text","text":" "},{"type":"text","text":"the maximum representable "},{"type":"codeVoice","code":"Int8"},{"text":" value:","type":"text"}]},{"code":["x * 21                  \/\/ Overflow error"],"type":"codeListing","syntax":null},{"style":"note","type":"aside","name":"Note","content":[{"type":"paragraph","inlineContent":[{"text":"Overflow checking is not performed in ","type":"text"},{"type":"codeVoice","code":"-Ounchecked"},{"text":" builds.","type":"text"}]}]},{"inlineContent":[{"text":"If you want to opt out of overflow checking and wrap the result in case","type":"text"},{"text":" ","type":"text"},{"text":"of any overflow, use the overflow multiplication operator (","type":"text"},{"type":"codeVoice","code":"&*"},{"type":"text","text":")."}],"type":"paragraph"},{"syntax":null,"code":["x &* 21                \/\/ -115"],"type":"codeListing"}]}],"metadata":{"role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"*","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"Int64","kind":"typeIdentifier","preciseIdentifier":"s:s5Int64V"},{"kind":"text","text":", "},{"preciseIdentifier":"s:s5Int64V","kind":"typeIdentifier","text":"Int64"},{"kind":"text","text":") -> "},{"text":"Int64","kind":"typeIdentifier","preciseIdentifier":"s:s5Int64V"}],"externalID":"s:s5Int64V1moiyA2B_ABtFZ","symbolKind":"op","roleHeading":"Operator","modules":[{"name":"Compute","relatedModules":["Swift"]}],"title":"*(_:_:)","extendedModule":"Swift"},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/int64\/*(_:_:)"]}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Int64/BinaryInteger-Implementations":{"role":"collectionGroup","type":"topic","kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int64\/BinaryInteger-Implementations","abstract":[],"title":"BinaryInteger Implementations","url":"\/documentation\/compute\/int64\/binaryinteger-implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int64":{"url":"\/documentation\/compute\/int64","title":"Int64","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int64","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Int64"}],"abstract":[{"type":"text","text":"A 64-bit signed integer value"},{"text":" ","type":"text"},{"text":"type.","type":"text"}],"navigatorTitle":[{"text":"Int64","kind":"identifier"}],"type":"topic","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int64/*(_:_:)":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int64\/*(_:_:)","type":"topic","url":"\/documentation\/compute\/int64\/*(_:_:)","title":"*(_:_:)","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Multiplies two values and produces their product."}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"*"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"preciseIdentifier":"s:s5Int64V","text":"Int64","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Int64","kind":"typeIdentifier","preciseIdentifier":"s:s5Int64V"},{"kind":"text","text":") -> "},{"text":"Int64","kind":"typeIdentifier","preciseIdentifier":"s:s5Int64V"}]},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"}}}