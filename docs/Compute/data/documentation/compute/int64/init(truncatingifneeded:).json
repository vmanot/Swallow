{"sections":[],"abstract":[{"text":"Creates a new instance from the bit pattern of the given instance by","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"truncating or sign-extending if needed to fit this type."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"init","kind":"keyword"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"truncatingIfNeeded","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"source","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"T"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","text":"BinaryInteger","preciseIdentifier":"s:Sz","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryInteger"}],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"name":"source","content":[{"inlineContent":[{"text":"An integer to convert to this type.","type":"text"}],"type":"paragraph"}]}]},{"content":[{"anchor":"discussion","type":"heading","level":2,"text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"When the bit width of "},{"code":"T","type":"codeVoice"},{"text":" (the type of ","type":"text"},{"code":"source","type":"codeVoice"},{"type":"text","text":") is equal to or greater"},{"text":" ","type":"text"},{"type":"text","text":"than this type’s bit width, the result is the truncated"},{"text":" ","type":"text"},{"type":"text","text":"least-significant bits of "},{"type":"codeVoice","code":"source"},{"type":"text","text":". For example, when converting a"},{"text":" ","type":"text"},{"type":"text","text":"16-bit value to an 8-bit type, only the lower 8 bits of "},{"code":"source","type":"codeVoice"},{"text":" are","type":"text"},{"text":" ","type":"text"},{"text":"used.","type":"text"}]},{"code":["let p: Int16 = -500","\/\/ 'p' has a binary representation of 11111110_00001100","let q = Int8(truncatingIfNeeded: p)","\/\/ q == 12","\/\/ 'q' has a binary representation of 00001100"],"syntax":null,"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"When the bit width of "},{"code":"T","type":"codeVoice"},{"type":"text","text":" is less than this type’s bit width, the result"},{"text":" ","type":"text"},{"type":"text","text":"is "},{"inlineContent":[{"type":"text","text":"sign-extended"}],"type":"emphasis"},{"type":"text","text":" to fill the remaining bits. That is, if "},{"code":"source","type":"codeVoice"},{"text":" is","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"negative, the result is padded with ones; otherwise, the result is"},{"text":" ","type":"text"},{"text":"padded with zeros.","type":"text"}]},{"syntax":null,"code":["let u: Int8 = 21","\/\/ 'u' has a binary representation of 00010101","let v = Int16(truncatingIfNeeded: u)","\/\/ v == 21","\/\/ 'v' has a binary representation of 00000000_00010101","","let w: Int8 = -21","\/\/ 'w' has a binary representation of 11101011","let x = Int16(truncatingIfNeeded: w)","\/\/ x == -21","\/\/ 'x' has a binary representation of 11111111_11101011","let y = UInt16(truncatingIfNeeded: w)","\/\/ y == 65515","\/\/ 'y' has a binary representation of 11111111_11101011"],"type":"codeListing"}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/int64\/init(truncatingifneeded:)"]}],"metadata":{"modules":[{"name":"Compute","relatedModules":["Swift"]}],"symbolKind":"init","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"text":"truncatingIfNeeded","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}],"externalID":"s:s17FixedWidthIntegerPsE18truncatingIfNeededxqd___tcSzRd__lufc::SYNTHESIZED::s:s5Int64V","extendedModule":"Swift","role":"symbol","title":"init(truncatingIfNeeded:)","roleHeading":"Initializer"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int64\/init(truncatingIfNeeded:)"},"schemaVersion":{"major":0,"patch":0,"minor":3},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int64","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int64\/FixedWidthInteger-Implementations"]]},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Int64/FixedWidthInteger-Implementations":{"role":"collectionGroup","type":"topic","kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int64\/FixedWidthInteger-Implementations","abstract":[],"title":"FixedWidthInteger Implementations","url":"\/documentation\/compute\/int64\/fixedwidthinteger-implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int64/init(truncatingIfNeeded:)":{"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int64\/init(truncatingIfNeeded:)","url":"\/documentation\/compute\/int64\/init(truncatingifneeded:)","type":"topic","abstract":[{"type":"text","text":"Creates a new instance from the bit pattern of the given instance by"},{"text":" ","type":"text"},{"type":"text","text":"truncating or sign-extending if needed to fit this type."}],"title":"init(truncatingIfNeeded:)","kind":"symbol","fragments":[{"kind":"identifier","text":"init"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"truncatingIfNeeded"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":")","kind":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/BinaryInteger":{"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"BinaryInteger"}],"navigatorTitle":[{"kind":"identifier","text":"BinaryInteger"}],"url":"\/documentation\/compute\/binaryinteger","type":"topic","abstract":[{"type":"text","text":"An integer type with a binary representation."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryInteger","title":"BinaryInteger","kind":"symbol","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int64":{"url":"\/documentation\/compute\/int64","title":"Int64","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int64","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Int64"}],"abstract":[{"type":"text","text":"A 64-bit signed integer value"},{"text":" ","type":"text"},{"text":"type.","type":"text"}],"navigatorTitle":[{"text":"Int64","kind":"identifier"}],"type":"topic","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"}}}