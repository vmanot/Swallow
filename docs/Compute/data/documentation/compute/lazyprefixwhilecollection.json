{"kind":"symbol","metadata":{"title":"LazyPrefixWhileCollection","roleHeading":"Type Alias","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"LazyPrefixWhileCollection"}],"modules":[{"name":"Compute"}],"symbolKind":"typealias","navigatorTitle":[{"text":"LazyPrefixWhileCollection","kind":"identifier"}],"externalID":"s:s25LazyPrefixWhileCollectiona","role":"symbol"},"abstract":[{"type":"text","text":"A lazy collection wrapper that includes the initial consecutive"},{"type":"text","text":" "},{"text":"elements of an underlying collection that satisfy a predicate.","type":"text"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyPrefixWhileCollection","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"LazyPrefixWhileCollection"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"text":"> = ","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyPrefixWhileSequence","preciseIdentifier":"s:s23LazyPrefixWhileSequenceV","text":"LazyPrefixWhileSequence","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"T","kind":"typeIdentifier"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:Sl","text":"Collection","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection","kind":"typeIdentifier"}],"platforms":["macOS"]}]},{"content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"type":"aside","name":"Note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The performance of accessing "},{"type":"codeVoice","code":"endIndex"},{"text":" depends on how many","type":"text"},{"type":"text","text":" "},{"type":"text","text":"elements satisfy the predicate at the start of the collection, and might"},{"text":" ","type":"text"},{"text":"not offer the usual performance given by the ","type":"text"},{"type":"codeVoice","code":"Collection"},{"type":"text","text":" protocol."},{"text":" ","type":"text"},{"type":"text","text":"Accessing "},{"code":"endIndex","type":"codeVoice"},{"type":"text","text":", the "},{"code":"last","type":"codeVoice"},{"text":" property, or calling methods that","type":"text"},{"type":"text","text":" "},{"text":"depend on moving indices might not have the documented complexity.","type":"text"}]}],"style":"note"}],"kind":"content"}],"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/lazyprefixwhilecollection"]}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/LazyPrefixWhileSequence":{"type":"topic","role":"symbol","url":"\/documentation\/compute\/lazyprefixwhilesequence","title":"LazyPrefixWhileSequence","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"LazyPrefixWhileSequence"}],"abstract":[{"type":"text","text":"A sequence whose elements consist of the initial consecutive elements of"},{"text":" ","type":"text"},{"text":"some base sequence that satisfy a given predicate.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"LazyPrefixWhileSequence"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyPrefixWhileSequence"},"doc://com.swallow.documentation.Compute/documentation/Compute/LazyPrefixWhileCollection":{"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyPrefixWhileCollection","role":"symbol","navigatorTitle":[{"text":"LazyPrefixWhileCollection","kind":"identifier"}],"url":"\/documentation\/compute\/lazyprefixwhilecollection","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"text":"LazyPrefixWhileCollection","kind":"identifier"}],"abstract":[{"text":"A lazy collection wrapper that includes the initial consecutive","type":"text"},{"type":"text","text":" "},{"type":"text","text":"elements of an underlying collection that satisfy a predicate."}],"title":"LazyPrefixWhileCollection","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Collection":{"kind":"symbol","role":"symbol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Collection"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection","url":"\/documentation\/compute\/collection","abstract":[{"type":"text","text":"A sequence whose elements can be traversed multiple times,"},{"text":" ","type":"text"},{"text":"nondestructively, and accessed by an indexed subscript.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Collection"}],"title":"Collection"}}}