{"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Range","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Range\/Collection-Implementations"]]},"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Range\/index(_:offsetBy:)"},"abstract":[{"text":"Returns an index that is the specified distance from the given index.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"index"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"i"},{"text":": ","kind":"text"},{"text":"Range","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Range","preciseIdentifier":"s:Sn"},{"text":"<","kind":"text"},{"text":"Bound","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"kind":"typeIdentifier","text":"Index"},{"text":", ","kind":"text"},{"text":"offsetBy","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"n","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","text":"Int"},{"kind":"text","text":") -> "},{"text":"Range","preciseIdentifier":"s:Sn","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Range","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Bound","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"kind":"typeIdentifier","text":"Index"}],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"A valid index of the collection."}],"type":"paragraph"}],"name":"i"}]},{"content":[{"anchor":"return-value","level":2,"text":"Return Value","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"An index offset by ","type":"text"},{"code":"distance","type":"codeVoice"},{"type":"text","text":" from the index "},{"type":"codeVoice","code":"i"},{"type":"text","text":". If"},{"text":" ","type":"text"},{"type":"codeVoice","code":"distance"},{"type":"text","text":" is positive, this is the same value as the result of"},{"type":"text","text":" "},{"type":"codeVoice","code":"distance"},{"type":"text","text":" calls to "},{"code":"index(after:)","type":"codeVoice"},{"type":"text","text":". If "},{"code":"distance","type":"codeVoice"},{"type":"text","text":" is negative, this"},{"type":"text","text":" "},{"type":"text","text":"is the same value as the result of "},{"code":"abs(distance)","type":"codeVoice"},{"text":" calls to","type":"text"},{"text":" ","type":"text"},{"code":"index(before:)","type":"codeVoice"},{"type":"text","text":"."}]}],"kind":"content"},{"content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The following example obtains an index advanced four positions from a"},{"type":"text","text":" "},{"text":"stringâ€™s starting index and then prints the character at that position.","type":"text"}]},{"type":"codeListing","code":["let s = \"Swift\"","let i = s.index(s.startIndex, offsetBy: 4)","print(s[i])","\/\/ Prints \"t\""],"syntax":null},{"type":"paragraph","inlineContent":[{"type":"text","text":"The value passed as "},{"type":"codeVoice","code":"distance"},{"type":"text","text":" must not offset "},{"type":"codeVoice","code":"i"},{"text":" beyond the bounds of","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the collection."}]},{"type":"aside","style":"note","name":"Complexity","content":[{"type":"paragraph","inlineContent":[{"text":"O(1) if the collection conforms to","type":"text"},{"type":"text","text":" "},{"code":"RandomAccessCollection","type":"codeVoice"},{"type":"text","text":"; otherwise, O("},{"inlineContent":[{"type":"text","text":"k"}],"type":"emphasis"},{"type":"text","text":"), where "},{"type":"emphasis","inlineContent":[{"type":"text","text":"k"}]},{"text":" is the absolute","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"value of "},{"code":"distance","type":"codeVoice"},{"type":"text","text":"."}]}]}],"kind":"content"}],"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"index","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:Sn","text":"Range","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Bound"},{"text":">.","kind":"text"},{"text":"Index","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"offsetBy","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","text":"Range"},{"kind":"text","text":"<"},{"text":"Bound","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"text":"Index","kind":"typeIdentifier"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Bound"},{"text":" conforms to ","type":"text"},{"code":"Strideable","type":"codeVoice"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Bound.Stride"},{"type":"text","text":" conforms to "},{"code":"SignedInteger","type":"codeVoice"},{"text":".","type":"text"}]},"role":"symbol","extendedModule":"Swift","externalID":"s:SnsSxRzSZ6StrideRpzrlE5index_8offsetByxx_SitF","roleHeading":"Instance Method","modules":[{"name":"Compute","relatedModules":["Swift"]}],"title":"index(_:offsetBy:)","symbolKind":"method"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/range\/index(_:offsetby:)"]}],"sections":[],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Range/Collection-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Range\/Collection-Implementations","url":"\/documentation\/compute\/range\/collection-implementations","type":"topic","abstract":[],"role":"collectionGroup","title":"Collection Implementations","kind":"article"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Range":{"kind":"symbol","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Range","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Range","url":"\/documentation\/compute\/range","abstract":[{"text":"A half-open interval from a lower bound up to, but not including, an upper","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"bound."}],"navigatorTitle":[{"text":"Range","kind":"identifier"}],"title":"Range"},"doc://com.swallow.documentation.Compute/documentation/Compute/Range/index(_:offsetBy:)":{"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Range\/index(_:offsetBy:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"index","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","text":"Range"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Bound"},{"text":">.","kind":"text"},{"text":"Index","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"offsetBy"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"text":") -> ","kind":"text"},{"text":"Range","preciseIdentifier":"s:Sn","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Bound","kind":"typeIdentifier"},{"kind":"text","text":">."},{"text":"Index","kind":"typeIdentifier"}],"role":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Bound"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Strideable"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Bound.Stride"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"SignedInteger"},{"text":".","type":"text"}]},"url":"\/documentation\/compute\/range\/index(_:offsetby:)","abstract":[{"type":"text","text":"Returns an index that is the specified distance from the given index."}],"title":"index(_:offsetBy:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","abstract":[{"type":"text","text":"A signed integer value type."}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Int","kind":"identifier"}],"navigatorTitle":[{"text":"Int","kind":"identifier"}],"title":"Int","url":"\/documentation\/compute\/int","kind":"symbol"}}}