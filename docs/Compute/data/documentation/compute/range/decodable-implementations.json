{"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Range"]]},"sections":[],"kind":"article","topicSections":[{"anchor":"Initializers","identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Range\/init(from:)"],"generated":true,"title":"Initializers"},{"identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Range\/decode(from:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Range\/decode(from:forKey:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Range\/decodeIfPresent(from:)-1in22","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Range\/decodeIfPresent(from:)-60s14","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Range\/decodeIfPresent(from:forKey:)"],"generated":true,"anchor":"Type-Methods","title":"Type Methods"}],"metadata":{"title":"Decodable Implementations","role":"collectionGroup","roleHeading":"API Collection","modules":[{"name":"Compute"}]},"schemaVersion":{"minor":3,"patch":0,"major":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/range\/decodable-implementations"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Range\/Decodable-Implementations"},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Range/init(from:)":{"abstract":[{"type":"text","text":"Creates a new instance by decoding from the given decoder."}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Range\/init(from:)","type":"topic","url":"\/documentation\/compute\/range\/init(from:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"from"},{"text":": any ","kind":"text"},{"preciseIdentifier":"s:s7DecoderP","text":"Decoder","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Bound","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Comparable","type":"codeVoice"},{"type":"text","text":" and "},{"code":"Decodable","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"title":"init(from:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/Range":{"kind":"symbol","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Range","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Range","url":"\/documentation\/compute\/range","abstract":[{"text":"A half-open interval from a lower bound up to, but not including, an upper","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"bound."}],"navigatorTitle":[{"text":"Range","kind":"identifier"}],"title":"Range"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Range/decode(from:)":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Range\/decode(from:)","abstract":[],"url":"\/documentation\/compute\/range\/decode(from:)","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"decode"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Container"},{"text":">(","kind":"text"},{"text":"from","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Container"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"title":"decode(from:)","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/Range/decodeIfPresent(from:)-1in22":{"url":"\/documentation\/compute\/range\/decodeifpresent(from:)-1in22","title":"decodeIfPresent(from:)","kind":"symbol","role":"symbol","type":"topic","abstract":[],"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"decodeIfPresent"},{"text":"<","kind":"text"},{"text":"Container","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"from","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Container"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Range\/decodeIfPresent(from:)-1in22"},"doc://com.swallow.documentation.Compute/documentation/Compute/Range/decodeIfPresent(from:)-60s14":{"title":"decodeIfPresent(from:)","url":"\/documentation\/compute\/range\/decodeifpresent(from:)-60s14","role":"symbol","type":"topic","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Range\/decodeIfPresent(from:)-60s14","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"decodeIfPresent"},{"text":"<","kind":"text"},{"text":"Container","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"from"},{"text":": ","kind":"text"},{"text":"Container","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Range/decode(from:forKey:)":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Range\/decode(from:forKey:)","abstract":[],"url":"\/documentation\/compute\/range\/decode(from:forkey:)","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"decode"},{"kind":"text","text":"<"},{"text":"Container","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"from","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Container","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"forKey","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Container","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Key","preciseIdentifier":"s:s30KeyedDecodingContainerProtocolP3KeyQa","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"title":"decode(from:forKey:)","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/Range/decodeIfPresent(from:forKey:)":{"url":"\/documentation\/compute\/range\/decodeifpresent(from:forkey:)","title":"decodeIfPresent(from:forKey:)","kind":"symbol","role":"symbol","type":"topic","abstract":[],"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"decodeIfPresent","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Container","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"from","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Container","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"forKey","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Container","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Key","preciseIdentifier":"s:s30KeyedDecodingContainerProtocolP3KeyQa"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Range\/decodeIfPresent(from:forKey:)"}}}