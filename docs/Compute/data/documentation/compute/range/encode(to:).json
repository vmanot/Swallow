{"sections":[],"schemaVersion":{"patch":0,"minor":3,"major":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"encode"},{"kind":"text","text":"("},{"kind":"externalParam","text":"to"},{"kind":"text","text":" "},{"text":"encoder","kind":"internalParam"},{"text":": any ","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Encoder","preciseIdentifier":"s:s7EncoderP","text":"Encoder"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"}]}]},{"kind":"parameters","parameters":[{"name":"encoder","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The encoder to write data to."}]}]}]},{"content":[{"level":2,"text":"Discussion","anchor":"discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If the value fails to encode anything, "},{"type":"codeVoice","code":"encoder"},{"type":"text","text":" will encode an empty"},{"text":" ","type":"text"},{"text":"keyed container in its place.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"This function throws an error if any values are invalid for the given","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"encoderâ€™s format."}]}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Range","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Range\/Encodable-Implementations"]]},"metadata":{"extendedModule":"Swift","externalID":"s:SnsSERzrlE6encode2toys7Encoder_p_tKF","modules":[{"relatedModules":["Swift"],"name":"Compute"}],"symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"encode","kind":"identifier"},{"text":"(","kind":"text"},{"text":"to","kind":"externalParam"},{"text":": any ","kind":"text"},{"preciseIdentifier":"s:s7EncoderP","text":"Encoder","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"conformance":{"constraints":[{"code":"Bound","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Comparable","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Encodable"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"roleHeading":"Instance Method","title":"encode(to:)","role":"symbol"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Range\/encode(to:)"},"abstract":[{"text":"Encodes this value into the given encoder.","type":"text"}],"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/range\/encode(to:)"]}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Range/Encodable-Implementations":{"role":"collectionGroup","title":"Encodable Implementations","kind":"article","url":"\/documentation\/compute\/range\/encodable-implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Range\/Encodable-Implementations","type":"topic","abstract":[]},"doc://com.swallow.documentation.Compute/documentation/Compute/Range/encode(to:)":{"type":"topic","abstract":[{"type":"text","text":"Encodes this value into the given encoder."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Range\/encode(to:)","url":"\/documentation\/compute\/range\/encode(to:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"encode"},{"kind":"text","text":"("},{"kind":"externalParam","text":"to"},{"kind":"text","text":": any "},{"kind":"typeIdentifier","text":"Encoder","preciseIdentifier":"s:s7EncoderP"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"conformance":{"constraints":[{"code":"Bound","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Comparable"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Encodable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"role":"symbol","title":"encode(to:)"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Range":{"kind":"symbol","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Range","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Range","url":"\/documentation\/compute\/range","abstract":[{"text":"A half-open interval from a lower bound up to, but not including, an upper","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"bound."}],"navigatorTitle":[{"text":"Range","kind":"identifier"}],"title":"Range"},"doc://com.swallow.documentation.Compute/documentation/Compute/Encoder":{"title":"Encoder","url":"\/documentation\/compute\/encoder","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Encoder","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Encoder","kind":"identifier"}],"abstract":[{"text":"A type that can encode values into a native format for external","type":"text"},{"type":"text","text":" "},{"type":"text","text":"representation."}],"navigatorTitle":[{"text":"Encoder","kind":"identifier"}],"role":"symbol","type":"topic"}}}