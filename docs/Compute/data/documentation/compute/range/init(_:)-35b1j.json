{"sections":[],"metadata":{"extendedModule":"Swift","modules":[{"name":"Compute","relatedModules":["Swift"]}],"role":"symbol","platforms":[],"title":"init(_:)","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"text":"Range","kind":"typeIdentifier","preciseIdentifier":"s:Sn"},{"text":"<","kind":"text"},{"text":"Bound","kind":"typeIdentifier"},{"text":">)","kind":"text"}],"externalID":"s:SnsSxRzSZ6StrideRpzrlEySnyxGACcfc","symbolKind":"init","roleHeading":"Initializer","conformance":{"constraints":[{"code":"Bound","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Strideable","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Bound.Stride"},{"text":" conforms to ","type":"text"},{"code":"SignedInteger","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]}},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Range\/init(_:)-35b1j"},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Range"]]},"kind":"symbol","abstract":[{"text":"Now that Range is conditionally a collection when Bound: Strideable,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"CountableRange is no longer needed. This is a deprecated initializer"},{"type":"text","text":" "},{"text":"for any remaining uses of Range(countableRange).","type":"text"}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"init"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"other"},{"text":": ","kind":"text"},{"text":"Range","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Range","preciseIdentifier":"s:Sn","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Bound","kind":"typeIdentifier"},{"text":">)","kind":"text"}],"languages":["swift"]}],"kind":"declarations"}],"deprecationSummary":[{"inlineContent":[{"type":"text","text":"CountableRange is now a Range. No need to convert any more."}],"type":"paragraph"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/range\/init(_:)-35b1j"]}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Range":{"kind":"symbol","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Range","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Range","url":"\/documentation\/compute\/range","abstract":[{"text":"A half-open interval from a lower bound up to, but not including, an upper","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"bound."}],"navigatorTitle":[{"text":"Range","kind":"identifier"}],"title":"Range"},"doc://com.swallow.documentation.Compute/documentation/Compute/Range/init(_:)-35b1j":{"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Range\/init(_:)-35b1j","title":"init(_:)","kind":"symbol","abstract":[{"text":"Now that Range is conditionally a collection when Bound: Strideable,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"CountableRange is no longer needed. This is a deprecated initializer"},{"text":" ","type":"text"},{"type":"text","text":"for any remaining uses of Range(countableRange)."}],"role":"symbol","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Bound"},{"type":"text","text":" conforms to "},{"code":"Strideable","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"Bound.Stride","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"SignedInteger","type":"codeVoice"},{"type":"text","text":"."}]},"deprecated":true,"url":"\/documentation\/compute\/range\/init(_:)-35b1j","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","text":"Range"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Bound"},{"text":">)","kind":"text"}]}}}