{"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Range\/~=(_:_:)","interfaceLanguage":"swift"},"sections":[],"abstract":[{"type":"text","text":"Returns a Boolean value indicating whether a value is included in a"},{"text":" ","type":"text"},{"type":"text","text":"range."}],"schemaVersion":{"patch":0,"minor":3,"major":0},"metadata":{"symbolKind":"op","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"~=","kind":"identifier"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"Bound","kind":"typeIdentifier","preciseIdentifier":"s:SX5BoundQa"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"title":"~=(_:_:)","roleHeading":"Operator","externalID":"s:SXsE2teoiySbx_5BoundQztFZ::SYNTHESIZED::s:Sn","role":"symbol","modules":[{"relatedModules":["Swift"],"name":"Compute"}],"extendedModule":"Swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/range\/~=(_:_:)"]}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Range","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Range\/RangeExpression-Implementations"]]},"kind":"symbol","primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"~="},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"text":"pattern","kind":"internalParam"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"internalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RangeExpression\/Bound","text":"Bound","preciseIdentifier":"s:SX5BoundQa"},{"kind":"text","text":") -> "},{"text":"Bool","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"pattern","content":[{"type":"paragraph","inlineContent":[{"text":"A range.","type":"text"}]}]}]},{"kind":"content","content":[{"anchor":"discussion","text":"Discussion","level":2,"type":"heading"},{"inlineContent":[{"text":"You can use the pattern-matching operator (","type":"text"},{"code":"~=","type":"codeVoice"},{"type":"text","text":") to test whether a value"},{"type":"text","text":" "},{"type":"text","text":"is included in a range. The pattern-matching operator is used"},{"text":" ","type":"text"},{"type":"text","text":"internally in "},{"type":"codeVoice","code":"case"},{"text":" statements for pattern matching. The following","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"example uses the "},{"type":"codeVoice","code":"~="},{"type":"text","text":" operator to test whether an integer is included in"},{"type":"text","text":" "},{"type":"text","text":"a range of single-digit numbers:"}],"type":"paragraph"},{"syntax":null,"code":["let chosenNumber = 3","if 0..<10 ~= chosenNumber {","    print(\"\\(chosenNumber) is a single digit.\")","}","\/\/ Prints \"3 is a single digit.\""],"type":"codeListing"}]}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/RangeExpression/Bound":{"role":"symbol","type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RangeExpression\/Bound","title":"Bound","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"Bound"},{"kind":"text","text":" : "},{"text":"Comparable","kind":"typeIdentifier","preciseIdentifier":"s:SL"}],"url":"\/documentation\/compute\/rangeexpression\/bound","required":true,"abstract":[{"text":"The type for which the expression describes a range.","type":"text"}],"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Bool":{"url":"\/documentation\/compute\/bool","role":"symbol","title":"Bool","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Bool","kind":"identifier"}],"abstract":[{"type":"text","text":"A value type whose instances are either "},{"type":"codeVoice","code":"true"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"false"},{"text":".","type":"text"}],"navigatorTitle":[{"text":"Bool","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bool","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Range/~=(_:_:)":{"abstract":[{"type":"text","text":"Returns a Boolean value indicating whether a value is included in a"},{"text":" ","type":"text"},{"type":"text","text":"range."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"~=","kind":"identifier"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:SX5BoundQa","kind":"typeIdentifier","text":"Bound"},{"text":") -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"url":"\/documentation\/compute\/range\/~=(_:_:)","role":"symbol","title":"~=(_:_:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Range\/~=(_:_:)","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/Range/RangeExpression-Implementations":{"role":"collectionGroup","title":"RangeExpression Implementations","kind":"article","url":"\/documentation\/compute\/range\/rangeexpression-implementations","type":"topic","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Range\/RangeExpression-Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/Range":{"kind":"symbol","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Range","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Range","url":"\/documentation\/compute\/range","abstract":[{"text":"A half-open interval from a lower bound up to, but not including, an upper","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"bound."}],"navigatorTitle":[{"text":"Range","kind":"identifier"}],"title":"Range"}}}