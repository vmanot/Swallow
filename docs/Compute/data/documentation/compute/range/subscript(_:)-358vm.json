{"kind":"symbol","primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"subscript"},{"kind":"text","text":"("},{"kind":"internalParam","text":"bounds"},{"kind":"text","text":": "},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Range","preciseIdentifier":"s:Sn","kind":"typeIdentifier","text":"Range"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Range","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Range","preciseIdentifier":"s:Sn"},{"text":"<","kind":"text"},{"text":"Bound","kind":"typeIdentifier"},{"kind":"text","text":">."},{"kind":"typeIdentifier","text":"Index"},{"text":">) -> ","kind":"text"},{"preciseIdentifier":"s:Sn","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Range","text":"Range","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Bound","kind":"typeIdentifier"},{"kind":"text","text":"> { "},{"kind":"keyword","text":"get"},{"kind":"text","text":" }"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A range of the rangeâ€™s indices. The upper and lower"},{"text":" ","type":"text"},{"text":"bounds of the ","type":"text"},{"code":"bounds","type":"codeVoice"},{"type":"text","text":" range must be valid indices of the collection."}]}],"name":"bounds"}],"kind":"parameters"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"metadata":{"modules":[{"relatedModules":["Swift"],"name":"Compute"}],"symbolKind":"subscript","title":"subscript(_:)","fragments":[{"kind":"keyword","text":"subscript"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Range","preciseIdentifier":"s:Sn"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Range","preciseIdentifier":"s:Sn"},{"kind":"text","text":"<"},{"text":"Bound","kind":"typeIdentifier"},{"kind":"text","text":">."},{"kind":"typeIdentifier","text":"Index"},{"kind":"text","text":">) -> "},{"text":"Range","kind":"typeIdentifier","preciseIdentifier":"s:Sn"},{"text":"<","kind":"text"},{"text":"Bound","kind":"typeIdentifier"},{"kind":"text","text":">"}],"extendedModule":"Swift","roleHeading":"Instance Subscript","externalID":"s:SnsSxRzSZ6StrideRpzrlEySnyxGACcip","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Bound"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Strideable"},{"text":" and ","type":"text"},{"code":"Bound.Stride","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"SignedInteger"},{"text":".","type":"text"}]},"role":"symbol"},"sections":[],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Range","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Range\/Collection-Implementations"]]},"abstract":[{"type":"text","text":"Accesses the subsequence bounded by the given range."}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Range\/subscript(_:)-358vm"},"variants":[{"paths":["\/documentation\/compute\/range\/subscript(_:)-358vm"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Range":{"kind":"symbol","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Range","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Range","url":"\/documentation\/compute\/range","abstract":[{"text":"A half-open interval from a lower bound up to, but not including, an upper","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"bound."}],"navigatorTitle":[{"text":"Range","kind":"identifier"}],"title":"Range"},"doc://com.swallow.documentation.Compute/documentation/Compute/Range/subscript(_:)-358vm":{"title":"subscript(_:)","kind":"symbol","type":"topic","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Bound","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Strideable"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Bound.Stride"},{"text":" conforms to ","type":"text"},{"code":"SignedInteger","type":"codeVoice"},{"text":".","type":"text"}]},"abstract":[{"text":"Accesses the subsequence bounded by the given range.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"subscript"},{"text":"(","kind":"text"},{"text":"Range","kind":"typeIdentifier","preciseIdentifier":"s:Sn"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:Sn","kind":"typeIdentifier","text":"Range"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Bound"},{"text":">.","kind":"text"},{"kind":"typeIdentifier","text":"Index"},{"kind":"text","text":">) -> "},{"preciseIdentifier":"s:Sn","text":"Range","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Bound"},{"text":">","kind":"text"}],"url":"\/documentation\/compute\/range\/subscript(_:)-358vm","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Range\/subscript(_:)-358vm"},"doc://com.swallow.documentation.Compute/documentation/Compute/Range/Collection-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Range\/Collection-Implementations","url":"\/documentation\/compute\/range\/collection-implementations","type":"topic","abstract":[],"role":"collectionGroup","title":"Collection Implementations","kind":"article"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"}}}