{"metadata":{"externalID":"s:Sn8overlapsySbSnyxGF","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"overlaps"},{"kind":"text","text":"("},{"text":"Range","kind":"typeIdentifier","preciseIdentifier":"s:Sn"},{"text":"<","kind":"text"},{"text":"Bound","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"role":"symbol","roleHeading":"Instance Method","title":"overlaps(_:)","symbolKind":"method","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Bound"},{"text":" conforms to ","type":"text"},{"code":"Comparable","type":"codeVoice"},{"type":"text","text":"."}]},"modules":[{"name":"Compute","relatedModules":["Swift"]}],"extendedModule":"Swift"},"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Range\/overlaps(_:)-7osha","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Returns a Boolean value indicating whether this range and the given range"},{"type":"text","text":" "},{"type":"text","text":"contain an element in common."}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Range"]]},"sections":[],"variants":[{"paths":["\/documentation\/compute\/range\/overlaps(_:)-7osha"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"overlaps"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"other","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Range","preciseIdentifier":"s:Sn","text":"Range"},{"kind":"text","text":"<"},{"text":"Bound","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bool","preciseIdentifier":"s:Sb"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A range to check for elements in common."}]}],"name":"other"}]},{"content":[{"level":2,"anchor":"return-value","type":"heading","text":"Return Value"},{"inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"true"},{"type":"text","text":" if this range and "},{"code":"other","type":"codeVoice"},{"type":"text","text":" have at least one element in"},{"type":"text","text":" "},{"type":"text","text":"common; otherwise, "},{"type":"codeVoice","code":"false"},{"type":"text","text":"."}],"type":"paragraph"}],"kind":"content"},{"content":[{"level":2,"type":"heading","text":"Discussion","anchor":"discussion"},{"inlineContent":[{"type":"text","text":"This example shows two overlapping ranges:"}],"type":"paragraph"},{"type":"codeListing","code":["let x: Range = 0..<20","print(x.overlaps(10...1000))","\/\/ Prints \"true\""],"syntax":null},{"inlineContent":[{"type":"text","text":"Because a half-open range does not include its upper bound, the ranges"},{"type":"text","text":" "},{"text":"in the following example do not overlap:","type":"text"}],"type":"paragraph"},{"syntax":null,"type":"codeListing","code":["let y = 20..<30","print(x.overlaps(y))","\/\/ Prints \"false\""]}],"kind":"content"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Range":{"kind":"symbol","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Range","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Range","url":"\/documentation\/compute\/range","abstract":[{"text":"A half-open interval from a lower bound up to, but not including, an upper","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"bound."}],"navigatorTitle":[{"text":"Range","kind":"identifier"}],"title":"Range"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Bool":{"url":"\/documentation\/compute\/bool","role":"symbol","title":"Bool","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Bool","kind":"identifier"}],"abstract":[{"type":"text","text":"A value type whose instances are either "},{"type":"codeVoice","code":"true"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"false"},{"text":".","type":"text"}],"navigatorTitle":[{"text":"Bool","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bool","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Range/overlaps(_:)-7osha":{"url":"\/documentation\/compute\/range\/overlaps(_:)-7osha","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"overlaps","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:Sn","text":"Range","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Bound","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"role":"symbol","abstract":[{"type":"text","text":"Returns a Boolean value indicating whether this range and the given range"},{"text":" ","type":"text"},{"text":"contain an element in common.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Range\/overlaps(_:)-7osha","title":"overlaps(_:)","type":"topic","kind":"symbol","conformance":{"constraints":[{"code":"Bound","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Comparable"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]}}}}