{"abstract":[{"type":"text","text":"A wrapper around an opaque C pointer."}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute"]]},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"@frozen","kind":"attribute"},{"kind":"text","text":" "},{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"OpaquePointer"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"level":2,"text":"Overview","anchor":"overview","type":"heading"},{"inlineContent":[{"text":"Opaque pointers are used to represent C pointers to types that","type":"text"},{"type":"text","text":" "},{"type":"text","text":"cannot be represented in Swift, such as incomplete struct types."}],"type":"paragraph"}],"kind":"content"}],"metadata":{"modules":[{"name":"Compute"}],"navigatorTitle":[{"kind":"identifier","text":"OpaquePointer"}],"title":"OpaquePointer","externalID":"s:s13OpaquePointerV","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"OpaquePointer"}],"symbolKind":"struct","role":"symbol","roleHeading":"Structure"},"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/OpaquePointer","interfaceLanguage":"swift"},"kind":"symbol","sections":[],"topicSections":[{"identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/OpaquePointer\/init(_:)-3h8av","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/OpaquePointer\/init(_:)-4g6sp","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/OpaquePointer\/init(_:)-4u1ar","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/OpaquePointer\/init(_:)-6gmth","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/OpaquePointer\/init(_:)-7zxvo","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/OpaquePointer\/init(_:)-b58i","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/OpaquePointer\/init(bitPattern:)-26uvs","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/OpaquePointer\/init(bitPattern:)-7f8tm"],"generated":true,"title":"Initializers","anchor":"Initializers"},{"title":"Default Implementations","identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/OpaquePointer\/CustomDebugStringConvertible-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/OpaquePointer\/Equatable-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/OpaquePointer\/Hashable-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/OpaquePointer\/Pointer-Implementations"],"generated":true,"anchor":"Default-Implementations"}],"relationshipsSections":[{"kind":"relationships","type":"conformsTo","identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BitwiseCopyable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CVarArg","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Comparable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Copyable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CustomDebugStringConvertible","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Equatable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Hashable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Strideable","doc:\/\/com.swallow.documentation.Compute\/7Swallow15ConstantPointerP","doc:\/\/com.swallow.documentation.Compute\/7Swallow22OpaquePointerInitiableP","doc:\/\/com.swallow.documentation.Compute\/7Swallow7PointerP"],"title":"Conforms To"}],"variants":[{"paths":["\/documentation\/compute\/opaquepointer"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/OpaquePointer/CustomDebugStringConvertible-Implementations":{"abstract":[],"type":"topic","role":"collectionGroup","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/OpaquePointer\/CustomDebugStringConvertible-Implementations","title":"CustomDebugStringConvertible Implementations","url":"\/documentation\/compute\/opaquepointer\/customdebugstringconvertible-implementations","kind":"article"},"doc://com.swallow.documentation.Compute/documentation/Compute/Equatable":{"abstract":[{"text":"A type that can be compared for value equality.","type":"text"}],"type":"topic","title":"Equatable","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Equatable"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Equatable","role":"symbol","url":"\/documentation\/compute\/equatable","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Equatable","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Comparable":{"url":"\/documentation\/compute\/comparable","type":"topic","kind":"symbol","role":"symbol","abstract":[{"text":"A type that can be compared using the relational operators ","type":"text"},{"code":"<","type":"codeVoice"},{"text":", ","type":"text"},{"code":"<=","type":"codeVoice"},{"text":", ","type":"text"},{"type":"codeVoice","code":">="},{"text":",","type":"text"},{"type":"text","text":" "},{"type":"text","text":"and "},{"type":"codeVoice","code":">"},{"text":".","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Comparable"}],"title":"Comparable","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Comparable","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"Comparable","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/OpaquePointer":{"role":"symbol","navigatorTitle":[{"text":"OpaquePointer","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OpaquePointer","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/OpaquePointer","type":"topic","title":"OpaquePointer","kind":"symbol","abstract":[{"type":"text","text":"A wrapper around an opaque C pointer."}],"url":"\/documentation\/compute\/opaquepointer"},"doc://com.swallow.documentation.Compute/documentation/Compute/CVarArg":{"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CVarArg"}],"abstract":[{"text":"A type whose instances can be encoded, and appropriately passed, as","type":"text"},{"text":" ","type":"text"},{"text":"elements of a C ","type":"text"},{"type":"codeVoice","code":"va_list"},{"text":".","type":"text"}],"navigatorTitle":[{"text":"CVarArg","kind":"identifier"}],"title":"CVarArg","type":"topic","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CVarArg","url":"\/documentation\/compute\/cvararg"},"doc://com.swallow.documentation.Compute/7Swallow15ConstantPointerP":{"type":"unresolvable","title":"Swallow.ConstantPointer","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow15ConstantPointerP"},"doc://com.swallow.documentation.Compute/documentation/Compute/OpaquePointer/init(bitPattern:)-26uvs":{"fragments":[{"kind":"identifier","text":"init"},{"text":"?(","kind":"text"},{"kind":"externalParam","text":"bitPattern"},{"kind":"text","text":": "},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Creates a new "},{"type":"codeVoice","code":"OpaquePointer"},{"text":" from the given address, specified as a bit","type":"text"},{"type":"text","text":" "},{"type":"text","text":"pattern."}],"type":"topic","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/OpaquePointer\/init(bitPattern:)-26uvs","title":"init(bitPattern:)","url":"\/documentation\/compute\/opaquepointer\/init(bitpattern:)-26uvs","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/OpaquePointer/init(_:)-b58i":{"abstract":[{"type":"text","text":"Converts a typed "},{"type":"codeVoice","code":"UnsafePointer"},{"text":" to an opaque C pointer.","type":"text"}],"type":"topic","title":"init(_:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/OpaquePointer\/init(_:)-b58i","kind":"symbol","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"?<"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SP","text":"UnsafePointer"},{"kind":"text","text":"<"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":">?)"}],"url":"\/documentation\/compute\/opaquepointer\/init(_:)-b58i"},"doc://com.swallow.documentation.Compute/documentation/Compute/OpaquePointer/init(_:)-4g6sp":{"abstract":[],"type":"topic","url":"\/documentation\/compute\/opaquepointer\/init(_:)-4g6sp","role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"text":"?(","kind":"text"},{"kind":"typeIdentifier","text":"UnsafeMutableRawPointer","preciseIdentifier":"s:Sv"},{"kind":"text","text":"?)"}],"title":"init(_:)","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/OpaquePointer\/init(_:)-4g6sp"},"doc://com.swallow.documentation.Compute/documentation/Compute/OpaquePointer/Equatable-Implementations":{"abstract":[],"type":"topic","role":"collectionGroup","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/OpaquePointer\/Equatable-Implementations","title":"Equatable Implementations","url":"\/documentation\/compute\/opaquepointer\/equatable-implementations","kind":"article"},"doc://com.swallow.documentation.Compute/documentation/Compute/OpaquePointer/Pointer-Implementations":{"type":"topic","role":"collectionGroup","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/OpaquePointer\/Pointer-Implementations","title":"Pointer Implementations","abstract":[],"url":"\/documentation\/compute\/opaquepointer\/pointer-implementations","kind":"article"},"doc://com.swallow.documentation.Compute/documentation/Compute/OpaquePointer/init(_:)-3h8av":{"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:SV","kind":"typeIdentifier","text":"UnsafeRawPointer"},{"text":")","kind":"text"}],"type":"topic","url":"\/documentation\/compute\/opaquepointer\/init(_:)-3h8av","kind":"symbol","title":"init(_:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/OpaquePointer\/init(_:)-3h8av","abstract":[],"role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/OpaquePointer/init(_:)-7zxvo":{"abstract":[],"type":"topic","title":"init(_:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/OpaquePointer\/init(_:)-7zxvo","kind":"symbol","role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sv","text":"UnsafeMutableRawPointer"},{"kind":"text","text":")"}],"url":"\/documentation\/compute\/opaquepointer\/init(_:)-7zxvo"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Copyable":{"title":"Copyable","abstract":[{"type":"text","text":"A type whose values can be implicitly or explicitly copied."}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"Copyable","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Copyable","url":"\/documentation\/compute\/copyable","navigatorTitle":[{"text":"Copyable","kind":"identifier"}],"kind":"symbol","role":"symbol","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/OpaquePointer/init(_:)-6gmth":{"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"?("},{"preciseIdentifier":"s:SV","text":"UnsafeRawPointer","kind":"typeIdentifier"},{"kind":"text","text":"?)"}],"abstract":[],"type":"topic","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/OpaquePointer\/init(_:)-6gmth","title":"init(_:)","url":"\/documentation\/compute\/opaquepointer\/init(_:)-6gmth","kind":"symbol"},"doc://com.swallow.documentation.Compute/7Swallow7PointerP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow7PointerP","title":"Swallow.Pointer","type":"unresolvable"},"doc://com.swallow.documentation.Compute/documentation/Compute/CustomDebugStringConvertible":{"url":"\/documentation\/compute\/customdebugstringconvertible","role":"symbol","abstract":[{"text":"A type with a customized textual representation suitable for debugging","type":"text"},{"type":"text","text":" "},{"text":"purposes.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CustomDebugStringConvertible","title":"CustomDebugStringConvertible","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CustomDebugStringConvertible","kind":"identifier"}],"navigatorTitle":[{"text":"CustomDebugStringConvertible","kind":"identifier"}],"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Hashable":{"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Hashable"}],"title":"Hashable","navigatorTitle":[{"text":"Hashable","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"A type that can be hashed into a "},{"type":"codeVoice","code":"Hasher"},{"type":"text","text":" to produce an integer hash value."}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Hashable","url":"\/documentation\/compute\/hashable","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Strideable":{"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/compute\/strideable","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Strideable","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Strideable"}],"navigatorTitle":[{"text":"Strideable","kind":"identifier"}],"abstract":[{"type":"text","text":"A type representing continuous, one-dimensional values that can be offset"},{"type":"text","text":" "},{"type":"text","text":"and measured."}],"title":"Strideable"},"doc://com.swallow.documentation.Compute/documentation/Compute/OpaquePointer/Hashable-Implementations":{"title":"Hashable Implementations","url":"\/documentation\/compute\/opaquepointer\/hashable-implementations","role":"collectionGroup","type":"topic","kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/OpaquePointer\/Hashable-Implementations","abstract":[]},"doc://com.swallow.documentation.Compute/7Swallow22OpaquePointerInitiableP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow22OpaquePointerInitiableP","title":"Swallow.OpaquePointerInitiable","type":"unresolvable"},"doc://com.swallow.documentation.Compute/documentation/Compute/BitwiseCopyable":{"title":"BitwiseCopyable","abstract":[],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BitwiseCopyable","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BitwiseCopyable","url":"\/documentation\/compute\/bitwisecopyable","navigatorTitle":[{"kind":"identifier","text":"BitwiseCopyable"}],"kind":"symbol","role":"symbol","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/OpaquePointer/init(_:)-4u1ar":{"fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">)"}],"role":"symbol","title":"init(_:)","url":"\/documentation\/compute\/opaquepointer\/init(_:)-4u1ar","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/OpaquePointer\/init(_:)-4u1ar","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Converts a typed "},{"code":"UnsafePointer","type":"codeVoice"},{"text":" to an opaque C pointer.","type":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/OpaquePointer/init(bitPattern:)-7f8tm":{"type":"topic","title":"init(bitPattern:)","abstract":[{"text":"Creates a new ","type":"text"},{"code":"OpaquePointer","type":"codeVoice"},{"type":"text","text":" from the given address, specified as a bit"},{"type":"text","text":" "},{"type":"text","text":"pattern."}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/OpaquePointer\/init(bitPattern:)-7f8tm","role":"symbol","url":"\/documentation\/compute\/opaquepointer\/init(bitpattern:)-7f8tm","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"?("},{"text":"bitPattern","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":")"}]}}}