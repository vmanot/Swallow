{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/string\/utf8view"]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"relationshipsSections":[{"identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BidirectionalCollection","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Copyable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CustomDebugStringConvertible","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CustomReflectable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CustomStringConvertible","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sendable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence"],"title":"Conforms To","kind":"relationships","type":"conformsTo"}],"kind":"symbol","topicSections":[{"title":"Default Implementations","anchor":"Default-Implementations","identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/UTF8View\/BidirectionalCollection-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/UTF8View\/Collection-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/UTF8View\/CustomDebugStringConvertible-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/UTF8View\/CustomReflectable-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/UTF8View\/CustomStringConvertible-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/UTF8View\/Sequence-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/UTF8View\/_CustomPlaygroundQuickLookable-Implementations"],"generated":true}],"abstract":[{"text":"A view of a string‚Äôs contents as a collection of UTF-8 code units.","type":"text"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/UTF8View"},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"@frozen","kind":"attribute"},{"kind":"text","text":" "},{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"UTF8View"}],"platforms":["macOS"]}],"kind":"declarations"},{"content":[{"type":"heading","level":2,"anchor":"overview","text":"Overview"},{"inlineContent":[{"type":"text","text":"You can access a string‚Äôs view of UTF-8 code units by using its "},{"type":"codeVoice","code":"utf8"},{"text":" ","type":"text"},{"type":"text","text":"property. A string‚Äôs UTF-8 view encodes the string‚Äôs Unicode scalar"},{"text":" ","type":"text"},{"text":"values as 8-bit integers.","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":["let flowers = \"Flowers üíê\"","for v in flowers.utf8 {","    print(v)","}","\/\/ 70","\/\/ 108","\/\/ 111","\/\/ 119","\/\/ 101","\/\/ 114","\/\/ 115","\/\/ 32","\/\/ 240","\/\/ 159","\/\/ 146","\/\/ 144"],"syntax":null},{"inlineContent":[{"type":"text","text":"A string‚Äôs Unicode scalar values can be up to 21 bits in length. To"},{"type":"text","text":" "},{"type":"text","text":"represent those scalar values using 8-bit integers, more than one UTF-8"},{"text":" ","type":"text"},{"type":"text","text":"code unit is often required."}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":["let flowermoji = \"üíê\"","for v in flowermoji.unicodeScalars {","    print(v, v.value)","}","\/\/ üíê 128144","","for v in flowermoji.utf8 {","    print(v)","}","\/\/ 240","\/\/ 159","\/\/ 146","\/\/ 144"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"In the encoded representation of a Unicode scalar value, each UTF-8 code"},{"type":"text","text":" "},{"type":"text","text":"unit after the first is called a "},{"type":"emphasis","inlineContent":[{"type":"text","text":"continuation byte"}]},{"type":"text","text":"."}]},{"text":"UTF8View Elements Match Encoded C Strings","level":1,"anchor":"UTF8View-Elements-Match-Encoded-C-Strings","type":"heading"},{"inlineContent":[{"type":"text","text":"Swift streamlines interoperation with C string APIs by letting you pass a"},{"type":"text","text":" "},{"type":"codeVoice","code":"String"},{"type":"text","text":" instance to a function as an "},{"code":"Int8","type":"codeVoice"},{"text":" or ","type":"text"},{"code":"UInt8","type":"codeVoice"},{"text":" pointer. When you","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"call a C function using a "},{"type":"codeVoice","code":"String"},{"type":"text","text":", Swift automatically creates a buffer"},{"text":" ","type":"text"},{"type":"text","text":"of UTF-8 code units and passes a pointer to that buffer. The code units"},{"type":"text","text":" "},{"text":"of that buffer match the code units in the string‚Äôs ","type":"text"},{"code":"utf8","type":"codeVoice"},{"type":"text","text":" view."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"The following example uses the C ","type":"text"},{"code":"strncmp","type":"codeVoice"},{"type":"text","text":" function to compare the"},{"text":" ","type":"text"},{"text":"beginning of two Swift strings. The ","type":"text"},{"code":"strncmp","type":"codeVoice"},{"text":" function takes two","type":"text"},{"type":"text","text":" "},{"code":"const char*","type":"codeVoice"},{"type":"text","text":" pointers and an integer specifying the number of characters"},{"type":"text","text":" "},{"text":"to compare. Because the strings are identical up to the 14th character,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"comparing only those characters results in a return value of "},{"type":"codeVoice","code":"0"},{"type":"text","text":"."}]},{"syntax":null,"code":["let s1 = \"They call me 'Bell'\"","let s2 = \"They call me 'Stacey'\"","","print(strncmp(s1, s2, 14))","\/\/ Prints \"0\"","print(String(s1.utf8.prefix(14))!)","\/\/ Prints \"They call me '\""],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Extending the compared character count to 15 includes the differing"},{"type":"text","text":" "},{"type":"text","text":"characters, so a nonzero result is returned."}]},{"syntax":null,"code":["print(strncmp(s1, s2, 15))","\/\/ Prints \"-17\"","print(String(s1.utf8.prefix(15))!)","\/\/ Prints \"They call me 'B\""],"type":"codeListing"}],"kind":"content"}],"metadata":{"externalID":"s:SS8UTF8ViewV","title":"String.UTF8View","modules":[{"relatedModules":["Swift"],"name":"Compute"}],"roleHeading":"Structure","navigatorTitle":[{"text":"UTF8View","kind":"identifier"}],"role":"symbol","extendedModule":"Swift","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"UTF8View"}],"symbolKind":"struct"},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/StringProtocol-Implementations"]]},"sections":[],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Copyable":{"title":"Copyable","abstract":[{"type":"text","text":"A type whose values can be implicitly or explicitly copied."}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"Copyable","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Copyable","url":"\/documentation\/compute\/copyable","navigatorTitle":[{"text":"Copyable","kind":"identifier"}],"kind":"symbol","role":"symbol","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/CustomDebugStringConvertible":{"url":"\/documentation\/compute\/customdebugstringconvertible","role":"symbol","abstract":[{"text":"A type with a customized textual representation suitable for debugging","type":"text"},{"type":"text","text":" "},{"text":"purposes.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CustomDebugStringConvertible","title":"CustomDebugStringConvertible","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CustomDebugStringConvertible","kind":"identifier"}],"navigatorTitle":[{"text":"CustomDebugStringConvertible","kind":"identifier"}],"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Collection":{"kind":"symbol","role":"symbol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Collection"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection","url":"\/documentation\/compute\/collection","abstract":[{"type":"text","text":"A sequence whose elements can be traversed multiple times,"},{"text":" ","type":"text"},{"text":"nondestructively, and accessed by an indexed subscript.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Collection"}],"title":"Collection"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/UTF8View/BidirectionalCollection-Implementations":{"kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/UTF8View\/BidirectionalCollection-Implementations","type":"topic","abstract":[],"role":"collectionGroup","title":"BidirectionalCollection Implementations","url":"\/documentation\/compute\/string\/utf8view\/bidirectionalcollection-implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/String":{"type":"topic","navigatorTitle":[{"kind":"identifier","text":"String"}],"title":"String","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"String","kind":"identifier"}],"abstract":[{"type":"text","text":"A Unicode string value that is a collection of characters."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String","kind":"symbol","role":"symbol","url":"\/documentation\/compute\/string"},"doc://com.swallow.documentation.Compute/documentation/Compute/CustomStringConvertible":{"url":"\/documentation\/compute\/customstringconvertible","navigatorTitle":[{"kind":"identifier","text":"CustomStringConvertible"}],"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CustomStringConvertible","kind":"identifier"}],"abstract":[{"text":"A type with a customized textual representation.","type":"text"}],"type":"topic","title":"CustomStringConvertible","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CustomStringConvertible"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/UTF8View/CustomStringConvertible-Implementations":{"type":"topic","role":"collectionGroup","url":"\/documentation\/compute\/string\/utf8view\/customstringconvertible-implementations","kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/UTF8View\/CustomStringConvertible-Implementations","title":"CustomStringConvertible Implementations","abstract":[]},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/UTF8View/CustomReflectable-Implementations":{"role":"collectionGroup","url":"\/documentation\/compute\/string\/utf8view\/customreflectable-implementations","type":"topic","title":"CustomReflectable Implementations","kind":"article","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/UTF8View\/CustomReflectable-Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/BidirectionalCollection":{"navigatorTitle":[{"text":"BidirectionalCollection","kind":"identifier"}],"abstract":[{"text":"A collection that supports backward as well as forward traversal.","type":"text"}],"title":"BidirectionalCollection","kind":"symbol","url":"\/documentation\/compute\/bidirectionalcollection","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"BidirectionalCollection"}],"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BidirectionalCollection","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/CustomReflectable":{"url":"\/documentation\/compute\/customreflectable","role":"symbol","abstract":[{"text":"A type that explicitly supplies its own mirror.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CustomReflectable","title":"CustomReflectable","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CustomReflectable"}],"navigatorTitle":[{"kind":"identifier","text":"CustomReflectable"}],"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/StringProtocol-Implementations":{"kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/StringProtocol-Implementations","abstract":[],"title":"StringProtocol Implementations","role":"collectionGroup","url":"\/documentation\/compute\/string\/stringprotocol-implementations","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/UTF8View":{"url":"\/documentation\/compute\/string\/utf8view","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"UTF8View"}],"role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"UTF8View"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/UTF8View","abstract":[{"text":"A view of a string‚Äôs contents as a collection of UTF-8 code units.","type":"text"}],"type":"topic","title":"String.UTF8View"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/UTF8View/CustomDebugStringConvertible-Implementations":{"role":"collectionGroup","title":"CustomDebugStringConvertible Implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/UTF8View\/CustomDebugStringConvertible-Implementations","url":"\/documentation\/compute\/string\/utf8view\/customdebugstringconvertible-implementations","type":"topic","kind":"article","abstract":[]},"doc://com.swallow.documentation.Compute/documentation/Compute/Sendable":{"kind":"symbol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"Sendable","kind":"identifier"}],"title":"Sendable","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sendable","abstract":[],"url":"\/documentation\/compute\/sendable","role":"symbol","navigatorTitle":[{"text":"Sendable","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/String/UTF8View/Collection-Implementations":{"type":"topic","role":"collectionGroup","abstract":[],"title":"Collection Implementations","kind":"article","url":"\/documentation\/compute\/string\/utf8view\/collection-implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/UTF8View\/Collection-Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/UTF8View/_CustomPlaygroundQuickLookable-Implementations":{"kind":"article","role":"collectionGroup","abstract":[],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/UTF8View\/_CustomPlaygroundQuickLookable-Implementations","title":"_CustomPlaygroundQuickLookable Implementations","url":"\/documentation\/compute\/string\/utf8view\/_customplaygroundquicklookable-implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/UTF8View/Sequence-Implementations":{"url":"\/documentation\/compute\/string\/utf8view\/sequence-implementations","abstract":[],"role":"collectionGroup","title":"Sequence Implementations","type":"topic","kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/UTF8View\/Sequence-Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence":{"url":"\/documentation\/compute\/sequence","navigatorTitle":[{"kind":"identifier","text":"Sequence"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence","title":"Sequence","kind":"symbol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Sequence","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"A type that provides sequential, iterated access to its elements."}]}}}