{"schemaVersion":{"major":0,"patch":0,"minor":3},"variants":[{"paths":["\/documentation\/compute\/string\/unicodescalarview"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"A view of a string’s contents as a collection of Unicode scalar values."}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/UnicodeScalarView"},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/StringProtocol-Implementations"]]},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"@frozen","kind":"attribute"},{"text":" ","kind":"text"},{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UnicodeScalarView","kind":"identifier"}],"languages":["swift"]}]},{"content":[{"type":"heading","text":"Overview","level":2,"anchor":"overview"},{"inlineContent":[{"text":"You can access a string’s view of Unicode scalar values by using its","type":"text"},{"type":"text","text":" "},{"code":"unicodeScalars","type":"codeVoice"},{"type":"text","text":" property. Unicode scalar values are the 21-bit codes"},{"type":"text","text":" "},{"text":"that are the basic unit of Unicode. Each scalar value is represented by","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"a "},{"type":"codeVoice","code":"Unicode.Scalar"},{"type":"text","text":" instance and is equivalent to a UTF-32 code unit."}],"type":"paragraph"},{"syntax":null,"code":["let flowers = \"Flowers 💐\"","for v in flowers.unicodeScalars {","    print(v.value)","}","\/\/ 70","\/\/ 108","\/\/ 111","\/\/ 119","\/\/ 101","\/\/ 114","\/\/ 115","\/\/ 32","\/\/ 128144"],"type":"codeListing"},{"inlineContent":[{"text":"Some characters that are visible in a string are made up of more than one","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Unicode scalar value. In that case, a string’s "},{"type":"codeVoice","code":"unicodeScalars"},{"text":" view","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"contains more elements than the string itself."}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":["let flag = \"🇵🇷\"","for c in flag {","    print(c)","}","\/\/ 🇵🇷","","for v in flag.unicodeScalars {","    print(v.value)","}","\/\/ 127477","\/\/ 127479"]},{"inlineContent":[{"type":"text","text":"You can convert a "},{"code":"String.UnicodeScalarView","type":"codeVoice"},{"text":" instance back into a string","type":"text"},{"type":"text","text":" "},{"type":"text","text":"using the "},{"type":"codeVoice","code":"String"},{"type":"text","text":" type’s "},{"type":"codeVoice","code":"init(_:)"},{"type":"text","text":" initializer."}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":["let favemoji = \"My favorite emoji is 🎉\"","if let i = favemoji.unicodeScalars.firstIndex(where: { $0.value >= 128 }) {","    let asciiPrefix = String(favemoji.unicodeScalars[..<i])","    print(asciiPrefix)","}","\/\/ Prints \"My favorite emoji is \""]}],"kind":"content"}],"metadata":{"role":"symbol","navigatorTitle":[{"text":"UnicodeScalarView","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"UnicodeScalarView","kind":"identifier"}],"roleHeading":"Structure","externalID":"s:SS17UnicodeScalarViewV","symbolKind":"struct","modules":[{"name":"Compute","relatedModules":["Swift"]}],"title":"String.UnicodeScalarView","extendedModule":"Swift"},"sections":[],"topicSections":[{"anchor":"Default-Implementations","title":"Default Implementations","identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/UnicodeScalarView\/BidirectionalCollection-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/UnicodeScalarView\/Collection-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/UnicodeScalarView\/CustomDebugStringConvertible-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/UnicodeScalarView\/CustomReflectable-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/UnicodeScalarView\/CustomStringConvertible-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/UnicodeScalarView\/RangeReplaceableCollection-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/UnicodeScalarView\/Sequence-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/UnicodeScalarView\/_CustomPlaygroundQuickLookable-Implementations"],"generated":true}],"relationshipsSections":[{"title":"Conforms To","kind":"relationships","identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BidirectionalCollection","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Copyable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CustomDebugStringConvertible","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CustomReflectable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CustomStringConvertible","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RangeReplaceableCollection","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sendable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence","doc:\/\/com.swallow.documentation.Compute\/7Swallow9CountableP","doc:\/\/com.swallow.documentation.Compute\/7Swallow28DestructivelyMutableSequenceP","doc:\/\/com.swallow.documentation.Compute\/7Swallow20ExtensibleCollectionP","doc:\/\/com.swallow.documentation.Compute\/7Swallow36ExtensibleRangeReplaceableCollectionP","doc:\/\/com.swallow.documentation.Compute\/7Swallow18ExtensibleSequenceP","doc:\/\/com.swallow.documentation.Compute\/7Swallow15MutableSequenceP","doc:\/\/com.swallow.documentation.Compute\/7Swallow36NonDestroyingBidirectionalCollectionP","doc:\/\/com.swallow.documentation.Compute\/7Swallow23NonDestroyingCollectionP","doc:\/\/com.swallow.documentation.Compute\/7Swallow21NonDestroyingSequenceP","doc:\/\/com.swallow.documentation.Compute\/7Swallow017SequenceInitiableB0P"],"type":"conformsTo"}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/String/UnicodeScalarView":{"url":"\/documentation\/compute\/string\/unicodescalarview","abstract":[{"text":"A view of a string’s contents as a collection of Unicode scalar values.","type":"text"}],"kind":"symbol","role":"symbol","title":"String.UnicodeScalarView","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"UnicodeScalarView"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"UnicodeScalarView"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/UnicodeScalarView"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/UnicodeScalarView/Sequence-Implementations":{"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/UnicodeScalarView\/Sequence-Implementations","abstract":[],"kind":"article","title":"Sequence Implementations","role":"collectionGroup","url":"\/documentation\/compute\/string\/unicodescalarview\/sequence-implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/CustomDebugStringConvertible":{"url":"\/documentation\/compute\/customdebugstringconvertible","role":"symbol","abstract":[{"text":"A type with a customized textual representation suitable for debugging","type":"text"},{"type":"text","text":" "},{"text":"purposes.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CustomDebugStringConvertible","title":"CustomDebugStringConvertible","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CustomDebugStringConvertible","kind":"identifier"}],"navigatorTitle":[{"text":"CustomDebugStringConvertible","kind":"identifier"}],"kind":"symbol"},"doc://com.swallow.documentation.Compute/7Swallow28DestructivelyMutableSequenceP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow28DestructivelyMutableSequenceP","title":"Swallow.DestructivelyMutableSequence","type":"unresolvable"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/UnicodeScalarView/_CustomPlaygroundQuickLookable-Implementations":{"type":"topic","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/UnicodeScalarView\/_CustomPlaygroundQuickLookable-Implementations","url":"\/documentation\/compute\/string\/unicodescalarview\/_customplaygroundquicklookable-implementations","kind":"article","role":"collectionGroup","title":"_CustomPlaygroundQuickLookable Implementations"},"doc://com.swallow.documentation.Compute/7Swallow15MutableSequenceP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow15MutableSequenceP","title":"Swallow.MutableSequence","type":"unresolvable"},"doc://com.swallow.documentation.Compute/documentation/Compute/RangeReplaceableCollection":{"type":"topic","title":"RangeReplaceableCollection","abstract":[{"text":"A collection that supports replacement of an arbitrary subrange of elements","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"with the elements of another collection."}],"url":"\/documentation\/compute\/rangereplaceablecollection","role":"symbol","kind":"symbol","navigatorTitle":[{"text":"RangeReplaceableCollection","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RangeReplaceableCollection","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"RangeReplaceableCollection","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/String/UnicodeScalarView/BidirectionalCollection-Implementations":{"role":"collectionGroup","title":"BidirectionalCollection Implementations","kind":"article","abstract":[],"url":"\/documentation\/compute\/string\/unicodescalarview\/bidirectionalcollection-implementations","type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/UnicodeScalarView\/BidirectionalCollection-Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/Copyable":{"title":"Copyable","abstract":[{"type":"text","text":"A type whose values can be implicitly or explicitly copied."}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"Copyable","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Copyable","url":"\/documentation\/compute\/copyable","navigatorTitle":[{"text":"Copyable","kind":"identifier"}],"kind":"symbol","role":"symbol","type":"topic"},"doc://com.swallow.documentation.Compute/7Swallow18ExtensibleSequenceP":{"type":"unresolvable","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow18ExtensibleSequenceP","title":"Swallow.ExtensibleSequence"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/UnicodeScalarView/CustomStringConvertible-Implementations":{"role":"collectionGroup","type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/UnicodeScalarView\/CustomStringConvertible-Implementations","kind":"article","abstract":[],"title":"CustomStringConvertible Implementations","url":"\/documentation\/compute\/string\/unicodescalarview\/customstringconvertible-implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/CustomReflectable":{"url":"\/documentation\/compute\/customreflectable","role":"symbol","abstract":[{"text":"A type that explicitly supplies its own mirror.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CustomReflectable","title":"CustomReflectable","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CustomReflectable"}],"navigatorTitle":[{"kind":"identifier","text":"CustomReflectable"}],"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/StringProtocol-Implementations":{"kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/StringProtocol-Implementations","abstract":[],"title":"StringProtocol Implementations","role":"collectionGroup","url":"\/documentation\/compute\/string\/stringprotocol-implementations","type":"topic"},"doc://com.swallow.documentation.Compute/7Swallow21NonDestroyingSequenceP":{"type":"unresolvable","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow21NonDestroyingSequenceP","title":"Swallow.NonDestroyingSequence"},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence":{"url":"\/documentation\/compute\/sequence","navigatorTitle":[{"kind":"identifier","text":"Sequence"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence","title":"Sequence","kind":"symbol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Sequence","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"A type that provides sequential, iterated access to its elements."}]},"doc://com.swallow.documentation.Compute/documentation/Compute/String/UnicodeScalarView/CustomDebugStringConvertible-Implementations":{"role":"collectionGroup","abstract":[],"type":"topic","title":"CustomDebugStringConvertible Implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/UnicodeScalarView\/CustomDebugStringConvertible-Implementations","kind":"article","url":"\/documentation\/compute\/string\/unicodescalarview\/customdebugstringconvertible-implementations"},"doc://com.swallow.documentation.Compute/7Swallow23NonDestroyingCollectionP":{"type":"unresolvable","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow23NonDestroyingCollectionP","title":"Swallow.NonDestroyingCollection"},"doc://com.swallow.documentation.Compute/7Swallow36NonDestroyingBidirectionalCollectionP":{"type":"unresolvable","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow36NonDestroyingBidirectionalCollectionP","title":"Swallow.NonDestroyingBidirectionalCollection"},"doc://com.swallow.documentation.Compute/7Swallow9CountableP":{"type":"unresolvable","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow9CountableP","title":"Swallow.Countable"},"doc://com.swallow.documentation.Compute/documentation/Compute/String":{"type":"topic","navigatorTitle":[{"kind":"identifier","text":"String"}],"title":"String","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"String","kind":"identifier"}],"abstract":[{"type":"text","text":"A Unicode string value that is a collection of characters."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String","kind":"symbol","role":"symbol","url":"\/documentation\/compute\/string"},"doc://com.swallow.documentation.Compute/documentation/Compute/Sendable":{"kind":"symbol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"Sendable","kind":"identifier"}],"title":"Sendable","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sendable","abstract":[],"url":"\/documentation\/compute\/sendable","role":"symbol","navigatorTitle":[{"text":"Sendable","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/String/UnicodeScalarView/CustomReflectable-Implementations":{"kind":"article","role":"collectionGroup","type":"topic","url":"\/documentation\/compute\/string\/unicodescalarview\/customreflectable-implementations","abstract":[],"title":"CustomReflectable Implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/UnicodeScalarView\/CustomReflectable-Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/CustomStringConvertible":{"url":"\/documentation\/compute\/customstringconvertible","navigatorTitle":[{"kind":"identifier","text":"CustomStringConvertible"}],"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CustomStringConvertible","kind":"identifier"}],"abstract":[{"text":"A type with a customized textual representation.","type":"text"}],"type":"topic","title":"CustomStringConvertible","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CustomStringConvertible"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/UnicodeScalarView/RangeReplaceableCollection-Implementations":{"type":"topic","url":"\/documentation\/compute\/string\/unicodescalarview\/rangereplaceablecollection-implementations","title":"RangeReplaceableCollection Implementations","role":"collectionGroup","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/UnicodeScalarView\/RangeReplaceableCollection-Implementations","kind":"article","abstract":[]},"doc://com.swallow.documentation.Compute/documentation/Compute/BidirectionalCollection":{"navigatorTitle":[{"text":"BidirectionalCollection","kind":"identifier"}],"abstract":[{"text":"A collection that supports backward as well as forward traversal.","type":"text"}],"title":"BidirectionalCollection","kind":"symbol","url":"\/documentation\/compute\/bidirectionalcollection","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"BidirectionalCollection"}],"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BidirectionalCollection","type":"topic"},"doc://com.swallow.documentation.Compute/7Swallow017SequenceInitiableB0P":{"type":"unresolvable","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow017SequenceInitiableB0P","title":"Swallow.SequenceInitiableSequence"},"doc://com.swallow.documentation.Compute/7Swallow20ExtensibleCollectionP":{"type":"unresolvable","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow20ExtensibleCollectionP","title":"Swallow.ExtensibleCollection"},"doc://com.swallow.documentation.Compute/7Swallow36ExtensibleRangeReplaceableCollectionP":{"type":"unresolvable","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow36ExtensibleRangeReplaceableCollectionP","title":"Swallow.ExtensibleRangeReplaceableCollection"},"doc://com.swallow.documentation.Compute/documentation/Compute/Collection":{"kind":"symbol","role":"symbol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Collection"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection","url":"\/documentation\/compute\/collection","abstract":[{"type":"text","text":"A sequence whose elements can be traversed multiple times,"},{"text":" ","type":"text"},{"text":"nondestructively, and accessed by an indexed subscript.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Collection"}],"title":"Collection"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/UnicodeScalarView/Collection-Implementations":{"url":"\/documentation\/compute\/string\/unicodescalarview\/collection-implementations","abstract":[],"kind":"article","role":"collectionGroup","title":"Collection Implementations","type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/UnicodeScalarView\/Collection-Implementations"}}}