{"schemaVersion":{"major":0,"patch":0,"minor":3},"kind":"symbol","sections":[],"abstract":[{"text":"Returns a sequence of pairs (","type":"text"},{"inlineContent":[{"text":"n","type":"text"}],"type":"emphasis"},{"text":", ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"x","type":"text"}]},{"type":"text","text":"), where "},{"inlineContent":[{"type":"text","text":"n"}],"type":"emphasis"},{"type":"text","text":" represents a"},{"text":" ","type":"text"},{"text":"consecutive integer starting at zero and ","type":"text"},{"inlineContent":[{"text":"x","type":"text"}],"type":"emphasis"},{"type":"text","text":" represents an element of"},{"text":" ","type":"text"},{"type":"text","text":"the sequence."}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/StringProtocol-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/UnicodeScalarView","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/UnicodeScalarView\/Sequence-Implementations"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/string\/unicodescalarview\/enumerated()"]}],"metadata":{"extendedModule":"Swift","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"enumerated"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:s18EnumeratedSequenceV","kind":"typeIdentifier","text":"EnumeratedSequence"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}],"modules":[{"relatedModules":["Swift"],"name":"Compute"}],"externalID":"s:STsE10enumerateds18EnumeratedSequenceVyxGyF::SYNTHESIZED::s:SS17UnicodeScalarViewV","roleHeading":"Instance Method","symbolKind":"method","title":"enumerated()","role":"symbol"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/UnicodeScalarView\/enumerated()"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"enumerated","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"EnumeratedSequence","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/EnumeratedSequence","preciseIdentifier":"s:s18EnumeratedSequenceV"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}]}]},{"content":[{"level":2,"text":"Return Value","type":"heading","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"text":"A sequence of pairs enumerating the sequence.","type":"text"}]}],"kind":"content"},{"content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This example enumerates the characters of the string “Swift” and prints"},{"text":" ","type":"text"},{"text":"each character along with its place in the string.","type":"text"}]},{"code":["for (n, c) in \"Swift\".enumerated() {","    print(\"\\(n): '\\(c)'\")","}","\/\/ Prints \"0: 'S'\"","\/\/ Prints \"1: 'w'\"","\/\/ Prints \"2: 'i'\"","\/\/ Prints \"3: 'f'\"","\/\/ Prints \"4: 't'\""],"type":"codeListing","syntax":null},{"type":"paragraph","inlineContent":[{"type":"text","text":"When you enumerate a collection, the integer part of each pair is a counter"},{"type":"text","text":" "},{"type":"text","text":"for the enumeration, but is not necessarily the index of the paired value."},{"text":" ","type":"text"},{"text":"These counters can be used as indices only in instances of zero-based,","type":"text"},{"text":" ","type":"text"},{"text":"integer-indexed collections, such as ","type":"text"},{"type":"codeVoice","code":"Array"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"ContiguousArray"},{"type":"text","text":". For"},{"text":" ","type":"text"},{"type":"text","text":"other collections the counters may be out of range or of the wrong type"},{"text":" ","type":"text"},{"type":"text","text":"to use as an index. To iterate over the elements of a collection with its"},{"type":"text","text":" "},{"type":"text","text":"indices, use the "},{"type":"codeVoice","code":"zip(_:_:)"},{"type":"text","text":" function."}]},{"type":"paragraph","inlineContent":[{"text":"This example iterates over the indices and elements of a set, building a","type":"text"},{"type":"text","text":" "},{"text":"list consisting of indices of names with five or fewer letters.","type":"text"}]},{"type":"codeListing","syntax":null,"code":["let names: Set = [\"Sofia\", \"Camilla\", \"Martina\", \"Mateo\", \"Nicolás\"]","var shorterIndices: [Set<String>.Index] = []","for (i, name) in zip(names.indices, names) {","    if name.count <= 5 {","        shorterIndices.append(i)","    }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Now that the "},{"code":"shorterIndices","type":"codeVoice"},{"text":" array holds the indices of the shorter","type":"text"},{"type":"text","text":" "},{"text":"names in the ","type":"text"},{"type":"codeVoice","code":"names"},{"text":" set, you can use those indices to access elements in","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the set."}]},{"code":["for i in shorterIndices {","    print(names[i])","}","\/\/ Prints \"Sofia\"","\/\/ Prints \"Mateo\""],"type":"codeListing","syntax":null},{"type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"O(1)"}]}],"style":"note","name":"Complexity"}],"kind":"content"}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/EnumeratedSequence":{"url":"\/documentation\/compute\/enumeratedsequence","navigatorTitle":[{"text":"EnumeratedSequence","kind":"identifier"}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"EnumeratedSequence"}],"abstract":[{"text":"An enumeration of the elements of a sequence or collection.","type":"text"}],"type":"topic","title":"EnumeratedSequence","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/EnumeratedSequence"},"doc://com.swallow.documentation.Compute/documentation/Compute/String":{"type":"topic","navigatorTitle":[{"kind":"identifier","text":"String"}],"title":"String","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"String","kind":"identifier"}],"abstract":[{"type":"text","text":"A Unicode string value that is a collection of characters."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String","kind":"symbol","role":"symbol","url":"\/documentation\/compute\/string"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/StringProtocol-Implementations":{"kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/StringProtocol-Implementations","abstract":[],"title":"StringProtocol Implementations","role":"collectionGroup","url":"\/documentation\/compute\/string\/stringprotocol-implementations","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/UnicodeScalarView/Sequence-Implementations":{"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/UnicodeScalarView\/Sequence-Implementations","abstract":[],"kind":"article","title":"Sequence Implementations","role":"collectionGroup","url":"\/documentation\/compute\/string\/unicodescalarview\/sequence-implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/UnicodeScalarView":{"url":"\/documentation\/compute\/string\/unicodescalarview","abstract":[{"text":"A view of a string’s contents as a collection of Unicode scalar values.","type":"text"}],"kind":"symbol","role":"symbol","title":"String.UnicodeScalarView","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"UnicodeScalarView"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"UnicodeScalarView"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/UnicodeScalarView"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/UnicodeScalarView/enumerated()":{"url":"\/documentation\/compute\/string\/unicodescalarview\/enumerated()","abstract":[{"text":"Returns a sequence of pairs (","type":"text"},{"type":"emphasis","inlineContent":[{"text":"n","type":"text"}]},{"text":", ","type":"text"},{"inlineContent":[{"text":"x","type":"text"}],"type":"emphasis"},{"text":"), where ","type":"text"},{"inlineContent":[{"text":"n","type":"text"}],"type":"emphasis"},{"text":" represents a","type":"text"},{"type":"text","text":" "},{"type":"text","text":"consecutive integer starting at zero and "},{"type":"emphasis","inlineContent":[{"type":"text","text":"x"}]},{"type":"text","text":" represents an element of"},{"text":" ","type":"text"},{"text":"the sequence.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/UnicodeScalarView\/enumerated()","role":"symbol","title":"enumerated()","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"enumerated"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s18EnumeratedSequenceV","text":"EnumeratedSequence"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}],"type":"topic","kind":"symbol"}}}