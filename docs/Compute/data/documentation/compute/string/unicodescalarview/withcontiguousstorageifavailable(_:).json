{"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"withContiguousStorageIfAvailable","kind":"identifier"},{"text":"<","kind":"text"},{"text":"R","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"body"},{"text":": (","kind":"text"},{"preciseIdentifier":"s:SR","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeBufferPointer","kind":"typeIdentifier","text":"UnsafeBufferPointer"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"text":">) ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"R","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"R"},{"kind":"text","text":"?"}]}]},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A closure that receives an "},{"type":"codeVoice","code":"UnsafeBufferPointer"},{"text":" to the","type":"text"},{"type":"text","text":" "},{"text":"sequence’s contiguous storage.","type":"text"}]}],"name":"body"}],"kind":"parameters"},{"content":[{"level":2,"text":"Return Value","anchor":"return-value","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"The value returned from ","type":"text"},{"type":"codeVoice","code":"body"},{"text":", unless the sequence doesn’t","type":"text"},{"type":"text","text":" "},{"text":"support contiguous storage, in which case the method ignores ","type":"text"},{"type":"codeVoice","code":"body"},{"type":"text","text":" and"},{"type":"text","text":" "},{"type":"text","text":"returns "},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"}]}],"kind":"content"},{"content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"inlineContent":[{"text":"This method calls ","type":"text"},{"type":"codeVoice","code":"body(buffer)"},{"text":", where ","type":"text"},{"type":"codeVoice","code":"buffer"},{"type":"text","text":" is a pointer to the"},{"type":"text","text":" "},{"type":"text","text":"collection’s contiguous storage. If the contiguous storage doesn’t exist,"},{"type":"text","text":" "},{"type":"text","text":"the collection creates it. If the collection doesn’t support an internal"},{"type":"text","text":" "},{"text":"representation in a form of contiguous storage, the method doesn’t call","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"body"},{"type":"text","text":" — it immediately returns "},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"},{"inlineContent":[{"text":"The optimizer can often eliminate bounds- and uniqueness-checking","type":"text"},{"text":" ","type":"text"},{"text":"within an algorithm. When that fails, however, invoking the same","type":"text"},{"type":"text","text":" "},{"text":"algorithm on the ","type":"text"},{"type":"codeVoice","code":"buffer"},{"type":"text","text":" argument may let you trade safety for speed."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"Successive calls to this method may provide a different pointer on each","type":"text"},{"type":"text","text":" "},{"text":"call. Don’t store ","type":"text"},{"type":"codeVoice","code":"buffer"},{"type":"text","text":" outside of this method."}]},{"type":"paragraph","inlineContent":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"Collection"},{"type":"text","text":" that provides its own implementation of this method"},{"type":"text","text":" "},{"type":"text","text":"must provide contiguous storage to its elements in the same order"},{"type":"text","text":" "},{"type":"text","text":"as they appear in the collection. This guarantees that it’s possible to"},{"type":"text","text":" "},{"text":"generate contiguous mutable storage to any of its subsequences by slicing","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"buffer"},{"type":"text","text":" with a range formed from the distances to the subsequence’s"},{"text":" ","type":"text"},{"code":"startIndex","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"endIndex"},{"text":", respectively.","type":"text"}]}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/StringProtocol-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/UnicodeScalarView","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/UnicodeScalarView\/Sequence-Implementations"]]},"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/UnicodeScalarView\/withContiguousStorageIfAvailable(_:)","interfaceLanguage":"swift"},"metadata":{"symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"withContiguousStorageIfAvailable","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"R"},{"text":">((","kind":"text"},{"text":"UnsafeBufferPointer","kind":"typeIdentifier","preciseIdentifier":"s:SR"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:ST7ElementQa"},{"kind":"text","text":">) "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"extendedModule":"Swift","externalID":"s:STsE32withContiguousStorageIfAvailableyqd__Sgqd__SRy7ElementQzGKXEKlF::SYNTHESIZED::s:SS17UnicodeScalarViewV","roleHeading":"Instance Method","modules":[{"name":"Compute","relatedModules":["Swift"]}],"role":"symbol","title":"withContiguousStorageIfAvailable(_:)"},"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/string\/unicodescalarview\/withcontiguousstorageifavailable(_:)"]}],"abstract":[{"text":"Executes a closure on the sequence’s contiguous storage.","type":"text"}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/String":{"type":"topic","navigatorTitle":[{"kind":"identifier","text":"String"}],"title":"String","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"String","kind":"identifier"}],"abstract":[{"type":"text","text":"A Unicode string value that is a collection of characters."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String","kind":"symbol","role":"symbol","url":"\/documentation\/compute\/string"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/UnicodeScalarView":{"url":"\/documentation\/compute\/string\/unicodescalarview","abstract":[{"text":"A view of a string’s contents as a collection of Unicode scalar values.","type":"text"}],"kind":"symbol","role":"symbol","title":"String.UnicodeScalarView","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"UnicodeScalarView"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"UnicodeScalarView"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/UnicodeScalarView"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/UnicodeScalarView/withContiguousStorageIfAvailable(_:)":{"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/UnicodeScalarView\/withContiguousStorageIfAvailable(_:)","type":"topic","title":"withContiguousStorageIfAvailable(_:)","role":"symbol","url":"\/documentation\/compute\/string\/unicodescalarview\/withcontiguousstorageifavailable(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"withContiguousStorageIfAvailable","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"R"},{"kind":"text","text":">(("},{"text":"UnsafeBufferPointer","kind":"typeIdentifier","preciseIdentifier":"s:SR"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"Element","preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier"},{"text":">) ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"R","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"R"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Executes a closure on the sequence’s contiguous storage."}]},"doc://com.swallow.documentation.Compute/documentation/Compute/String/UnicodeScalarView/Sequence-Implementations":{"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/UnicodeScalarView\/Sequence-Implementations","abstract":[],"kind":"article","title":"Sequence Implementations","role":"collectionGroup","url":"\/documentation\/compute\/string\/unicodescalarview\/sequence-implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence/Element":{"type":"topic","required":true,"abstract":[{"type":"text","text":"A type representing the sequence’s elements."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"symbol","url":"\/documentation\/compute\/sequence\/element","role":"symbol","title":"Element","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeBufferPointer":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeBufferPointer","abstract":[{"type":"text","text":"A nonowning collection interface to a buffer of"},{"type":"text","text":" "},{"text":"elements stored contiguously in memory.","type":"text"}],"role":"symbol","type":"topic","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UnsafeBufferPointer","kind":"identifier"}],"title":"UnsafeBufferPointer","navigatorTitle":[{"kind":"identifier","text":"UnsafeBufferPointer"}],"url":"\/documentation\/compute\/unsafebufferpointer"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/StringProtocol-Implementations":{"kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/StringProtocol-Implementations","abstract":[],"title":"StringProtocol Implementations","role":"collectionGroup","url":"\/documentation\/compute\/string\/stringprotocol-implementations","type":"topic"}}}