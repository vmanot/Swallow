{"metadata":{"roleHeading":"Operator","role":"symbol","title":"==(_:_:)","symbolKind":"op","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"==","kind":"identifier"},{"text":" ","kind":"text"},{"text":"<","kind":"text"},{"text":"RHS","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"RHS"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"externalID":"s:SysE2eeoiySbx_qd__tSyRd__lFZ::SYNTHESIZED::s:SS","extendedModule":"Swift","modules":[{"relatedModules":["Swift"],"name":"Compute"}]},"kind":"symbol","variants":[{"paths":["\/documentation\/compute\/string\/==(_:_:)-8kzxf"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/Equatable-Implementations"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/==(_:_:)-8kzxf"},"abstract":[{"type":"text","text":"Returns a Boolean value indicating whether two values are equal."}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"==","kind":"identifier"},{"text":" ","kind":"text"},{"text":"<","kind":"text"},{"text":"RHS","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"internalParam","text":"lhs"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"internalParam","text":"rhs"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"RHS"},{"text":") -> ","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bool","text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"kind":"text","text":" "},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"text":"RHS","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"text":"StringProtocol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/StringProtocol","preciseIdentifier":"s:Sy","kind":"typeIdentifier"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"lhs","content":[{"inlineContent":[{"text":"A value to compare.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Another value to compare."}]}],"name":"rhs"}]},{"content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"inlineContent":[{"text":"Equality is the inverse of inequality. For any values ","type":"text"},{"type":"codeVoice","code":"a"},{"type":"text","text":" and "},{"code":"b","type":"codeVoice"},{"text":",","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"a == b"},{"text":" implies that ","type":"text"},{"type":"codeVoice","code":"a != b"},{"type":"text","text":" is "},{"type":"codeVoice","code":"false"},{"type":"text","text":"."}],"type":"paragraph"}],"kind":"content"}],"sections":[],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Bool":{"url":"\/documentation\/compute\/bool","role":"symbol","title":"Bool","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Bool","kind":"identifier"}],"abstract":[{"type":"text","text":"A value type whose instances are either "},{"type":"codeVoice","code":"true"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"false"},{"text":".","type":"text"}],"navigatorTitle":[{"text":"Bool","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bool","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/String":{"type":"topic","navigatorTitle":[{"kind":"identifier","text":"String"}],"title":"String","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"String","kind":"identifier"}],"abstract":[{"type":"text","text":"A Unicode string value that is a collection of characters."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String","kind":"symbol","role":"symbol","url":"\/documentation\/compute\/string"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/StringProtocol":{"url":"\/documentation\/compute\/stringprotocol","role":"symbol","abstract":[{"type":"text","text":"A type that can represent a string as a collection of characters."}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/StringProtocol","title":"StringProtocol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StringProtocol","kind":"identifier"}],"navigatorTitle":[{"text":"StringProtocol","kind":"identifier"}],"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/==(_:_:)-8kzxf":{"role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"==","kind":"identifier"},{"text":" ","kind":"text"},{"kind":"text","text":"<"},{"text":"RHS","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"RHS"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/==(_:_:)-8kzxf","abstract":[{"type":"text","text":"Returns a Boolean value indicating whether two values are equal."}],"url":"\/documentation\/compute\/string\/==(_:_:)-8kzxf","title":"==(_:_:)","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/Equatable-Implementations":{"abstract":[],"url":"\/documentation\/compute\/string\/equatable-implementations","title":"Equatable Implementations","role":"collectionGroup","kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/Equatable-Implementations","type":"topic"}}}