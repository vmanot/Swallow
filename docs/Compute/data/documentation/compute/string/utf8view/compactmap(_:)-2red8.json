{"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"compactMap"},{"text":"<","kind":"text"},{"text":"ElementOfResult","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"transform","kind":"internalParam"},{"text":": (","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"ElementOfResult","kind":"typeIdentifier"},{"text":"?) ","kind":"text"},{"kind":"keyword","text":"rethrows"},{"text":" -> [","kind":"text"},{"text":"ElementOfResult","kind":"typeIdentifier"},{"kind":"text","text":"]"}],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"name":"transform","content":[{"inlineContent":[{"text":"A closure that accepts an element of this","type":"text"},{"type":"text","text":" "},{"type":"text","text":"sequence as its argument and returns an optional value."}],"type":"paragraph"}]}]},{"content":[{"level":2,"anchor":"return-value","text":"Return Value","type":"heading"},{"inlineContent":[{"text":"An array of the non-","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":" results of calling "},{"code":"transform","type":"codeVoice"},{"text":" ","type":"text"},{"type":"text","text":"with each element of the sequence."}],"type":"paragraph"}],"kind":"content"},{"kind":"content","content":[{"anchor":"discussion","level":2,"text":"Discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"Use this method to receive an array of non-optional values when your","type":"text"},{"text":" ","type":"text"},{"text":"transformation produces an optional value.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"In this example, note the difference in the result of using ","type":"text"},{"type":"codeVoice","code":"map"},{"type":"text","text":" and"},{"text":" ","type":"text"},{"type":"codeVoice","code":"compactMap"},{"text":" with a transformation that returns an optional ","type":"text"},{"code":"Int","type":"codeVoice"},{"text":" value.","type":"text"}]},{"type":"codeListing","syntax":null,"code":["let possibleNumbers = [\"1\", \"2\", \"three\", \"\/\/\/4\/\/\/\", \"5\"]","","let mapped: [Int?] = possibleNumbers.map { str in Int(str) }","\/\/ [1, 2, nil, nil, 5]","","let compactMapped: [Int] = possibleNumbers.compactMap { str in Int(str) }","\/\/ [1, 2, 5]"]},{"type":"aside","name":"Complexity","style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"O("},{"type":"emphasis","inlineContent":[{"type":"text","text":"n"}]},{"type":"text","text":"), where "},{"inlineContent":[{"type":"text","text":"n"}],"type":"emphasis"},{"text":" is the length of this sequence.","type":"text"}]}]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/string\/utf8view\/compactmap(_:)-2red8"]}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/StringProtocol-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/UTF8View","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/UTF8View\/Sequence-Implementations"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"extendedModule":"Swift","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"compactMap"},{"text":"<","kind":"text"},{"text":"ElementOfResult","kind":"genericParameter"},{"text":">((","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"ElementOfResult"},{"text":"?) ","kind":"text"},{"kind":"keyword","text":"rethrows"},{"text":" -> [","kind":"text"},{"text":"ElementOfResult","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"role":"symbol","roleHeading":"Instance Method","modules":[{"relatedModules":["Swift"],"name":"Compute"}],"title":"compactMap(_:)","externalID":"s:STsE10compactMapySayqd__Gqd__Sg7ElementQzKXEKlF::SYNTHESIZED::s:SS8UTF8ViewV"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/UTF8View\/compactMap(_:)-2red8"},"sections":[],"abstract":[{"type":"text","text":"Returns an array containing the non-"},{"code":"nil","type":"codeVoice"},{"type":"text","text":" results of calling the given"},{"text":" ","type":"text"},{"type":"text","text":"transformation with each element of this sequence."}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/String/UTF8View/Sequence-Implementations":{"url":"\/documentation\/compute\/string\/utf8view\/sequence-implementations","abstract":[],"role":"collectionGroup","title":"Sequence Implementations","type":"topic","kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/UTF8View\/Sequence-Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/String":{"type":"topic","navigatorTitle":[{"kind":"identifier","text":"String"}],"title":"String","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"String","kind":"identifier"}],"abstract":[{"type":"text","text":"A Unicode string value that is a collection of characters."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String","kind":"symbol","role":"symbol","url":"\/documentation\/compute\/string"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/UTF8View":{"url":"\/documentation\/compute\/string\/utf8view","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"UTF8View"}],"role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"UTF8View"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/UTF8View","abstract":[{"text":"A view of a string’s contents as a collection of UTF-8 code units.","type":"text"}],"type":"topic","title":"String.UTF8View"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/StringProtocol-Implementations":{"kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/StringProtocol-Implementations","abstract":[],"title":"StringProtocol Implementations","role":"collectionGroup","url":"\/documentation\/compute\/string\/stringprotocol-implementations","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/UTF8View/compactMap(_:)-2red8":{"type":"topic","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"compactMap","kind":"identifier"},{"text":"<","kind":"text"},{"text":"ElementOfResult","kind":"genericParameter"},{"kind":"text","text":">(("},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:ST7ElementQa"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"ElementOfResult"},{"text":"?) ","kind":"text"},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> ["},{"text":"ElementOfResult","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/UTF8View\/compactMap(_:)-2red8","url":"\/documentation\/compute\/string\/utf8view\/compactmap(_:)-2red8","title":"compactMap(_:)","abstract":[{"type":"text","text":"Returns an array containing the non-"},{"type":"codeVoice","code":"nil"},{"text":" results of calling the given","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"transformation with each element of this sequence."}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence/Element":{"type":"topic","required":true,"abstract":[{"type":"text","text":"A type representing the sequence’s elements."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"symbol","url":"\/documentation\/compute\/sequence\/element","role":"symbol","title":"Element","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"}}}