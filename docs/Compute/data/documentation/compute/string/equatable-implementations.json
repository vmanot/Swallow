{"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String"]]},"kind":"article","schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/Equatable-Implementations"},"topicSections":[{"anchor":"Operators","generated":true,"title":"Operators","identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/!=(_:_:)-1bb05","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/==(_:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/==(_:_:)-8kzxf","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/==(_:_:)-9812z"]},{"title":"Instance Methods","generated":true,"anchor":"Instance-Methods","identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/eraseToAnyEquatable()"]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/string\/equatable-implementations"]}],"metadata":{"title":"Equatable Implementations","modules":[{"name":"Compute"}],"roleHeading":"API Collection","role":"collectionGroup"},"sections":[],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/String/!=(_:_:)-1bb05":{"abstract":[{"type":"text","text":"Returns a Boolean value indicating whether two values are not equal."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/!=(_:_:)-1bb05","title":"!=(_:_:)","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"!=","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"url":"\/documentation\/compute\/string\/!=(_:_:)-1bb05","role":"symbol","kind":"symbol","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/eraseToAnyEquatable()":{"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/eraseToAnyEquatable()","url":"\/documentation\/compute\/string\/erasetoanyequatable()","title":"eraseToAnyEquatable()","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"eraseToAnyEquatable","kind":"identifier"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:7Swallow12AnyEquatableV","text":"AnyEquatable","kind":"typeIdentifier"}],"abstract":[],"type":"topic","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/String":{"type":"topic","navigatorTitle":[{"kind":"identifier","text":"String"}],"title":"String","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"String","kind":"identifier"}],"abstract":[{"type":"text","text":"A Unicode string value that is a collection of characters."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String","kind":"symbol","role":"symbol","url":"\/documentation\/compute\/string"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/==(_:)":{"type":"topic","kind":"symbol","abstract":[],"role":"symbol","title":"==(_:)","url":"\/documentation\/compute\/string\/==(_:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/==(_:)","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"==","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ((","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":")"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/String/==(_:_:)-9812z":{"role":"symbol","type":"topic","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"==","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":") -> "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"kind":"symbol","abstract":[{"text":"Returns a Boolean value indicating whether two values are equal.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/==(_:_:)-9812z","title":"==(_:_:)","url":"\/documentation\/compute\/string\/==(_:_:)-9812z"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/==(_:_:)-8kzxf":{"role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"==","kind":"identifier"},{"text":" ","kind":"text"},{"kind":"text","text":"<"},{"text":"RHS","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"RHS"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/==(_:_:)-8kzxf","abstract":[{"type":"text","text":"Returns a Boolean value indicating whether two values are equal."}],"url":"\/documentation\/compute\/string\/==(_:_:)-8kzxf","title":"==(_:_:)","type":"topic"}}}