{"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/StringProtocol-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/UTF16View","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/UTF16View\/Collection-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/UTF16View\/Iterator"]]},"variants":[{"paths":["\/documentation\/compute\/string\/utf16view\/iterator\/next()"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"Advances to the next element and returns it, or "},{"code":"nil","type":"codeVoice"},{"type":"text","text":" if no next element"},{"text":" ","type":"text"},{"text":"exists.","type":"text"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/UTF16View\/Iterator\/next()","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"mutating","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"next"},{"text":"() -> ","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16","kind":"typeIdentifier","text":"UInt16","preciseIdentifier":"s:s6UInt16V"},{"text":"?","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"level":2,"type":"heading","text":"Return Value","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The next element in the underlying sequence, if a next element"},{"type":"text","text":" "},{"type":"text","text":"exists; otherwise, "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."}]}],"kind":"content"},{"content":[{"type":"heading","anchor":"discussion","level":2,"text":"Discussion"},{"inlineContent":[{"text":"Repeatedly calling this method returns, in order, all the elements of the","type":"text"},{"text":" ","type":"text"},{"text":"underlying sequence. As soon as the sequence has run out of elements, all","type":"text"},{"type":"text","text":" "},{"type":"text","text":"subsequent calls return "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"You must not call this method if any other copy of this iterator has been","type":"text"},{"text":" ","type":"text"},{"text":"advanced with a call to its ","type":"text"},{"code":"next()","type":"codeVoice"},{"text":" method.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The following example shows how an iterator can be used explicitly to"},{"type":"text","text":" "},{"text":"emulate a ","type":"text"},{"code":"for","type":"codeVoice"},{"text":"-","type":"text"},{"code":"in","type":"codeVoice"},{"type":"text","text":" loop. First, retrieve a sequence’s iterator, and"},{"text":" ","type":"text"},{"text":"then call the iterator’s ","type":"text"},{"code":"next()","type":"codeVoice"},{"text":" method until it returns ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."}]},{"type":"codeListing","code":["let numbers = [2, 3, 5, 7]","var numbersIterator = numbers.makeIterator()","","while let num = numbersIterator.next() {","    print(num)","}","\/\/ Prints \"2\"","\/\/ Prints \"3\"","\/\/ Prints \"5\"","\/\/ Prints \"7\""],"syntax":null}],"kind":"content"}],"kind":"symbol","sections":[],"metadata":{"symbolKind":"method","externalID":"s:SS9UTF16ViewV8IteratorV4nexts6UInt16VSgyF","title":"next()","roleHeading":"Instance Method","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"next"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s6UInt16V","text":"UInt16"},{"text":"?","kind":"text"}],"modules":[{"name":"Compute"}]},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/String":{"type":"topic","navigatorTitle":[{"kind":"identifier","text":"String"}],"title":"String","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"String","kind":"identifier"}],"abstract":[{"type":"text","text":"A Unicode string value that is a collection of characters."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String","kind":"symbol","role":"symbol","url":"\/documentation\/compute\/string"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/StringProtocol-Implementations":{"kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/StringProtocol-Implementations","abstract":[],"title":"StringProtocol Implementations","role":"collectionGroup","url":"\/documentation\/compute\/string\/stringprotocol-implementations","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/UTF16View/Collection-Implementations":{"url":"\/documentation\/compute\/string\/utf16view\/collection-implementations","role":"collectionGroup","abstract":[],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/UTF16View\/Collection-Implementations","title":"Collection Implementations","kind":"article"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt16":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"UInt16","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"UInt16"}],"title":"UInt16","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16","url":"\/documentation\/compute\/uint16","kind":"symbol","role":"symbol","abstract":[{"text":"A 16-bit unsigned integer value","type":"text"},{"text":" ","type":"text"},{"text":"type.","type":"text"}],"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/UTF16View/Iterator":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/UTF16View\/Iterator","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Iterator","kind":"identifier"}],"kind":"symbol","role":"symbol","type":"topic","url":"\/documentation\/compute\/string\/utf16view\/iterator","abstract":[{"text":"A type that provides the collection’s iteration interface and","type":"text"},{"type":"text","text":" "},{"type":"text","text":"encapsulates its iteration state."}],"navigatorTitle":[{"text":"Iterator","kind":"identifier"}],"title":"String.UTF16View.Iterator"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/UTF16View":{"navigatorTitle":[{"text":"UTF16View","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/UTF16View","kind":"symbol","title":"String.UTF16View","url":"\/documentation\/compute\/string\/utf16view","abstract":[{"text":"A view of a string’s contents as a collection of UTF-16 code units.","type":"text"}],"role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"UTF16View"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/String/UTF16View/Iterator/next()":{"role":"symbol","type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/UTF16View\/Iterator\/next()","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"next","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"UInt16","kind":"typeIdentifier","preciseIdentifier":"s:s6UInt16V"},{"text":"?","kind":"text"}],"kind":"symbol","title":"next()","abstract":[{"type":"text","text":"Advances to the next element and returns it, or "},{"code":"nil","type":"codeVoice"},{"type":"text","text":" if no next element"},{"type":"text","text":" "},{"type":"text","text":"exists."}],"url":"\/documentation\/compute\/string\/utf16view\/iterator\/next()"}}}