{"abstract":[{"text":"Returns a partial range up to, but not including, its upper bound.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"..<","kind":"identifier"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"internalParam","text":"maximum"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/PartialRangeUpTo","preciseIdentifier":"s:s16PartialRangeUpToV","text":"PartialRangeUpTo"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}]}]},{"parameters":[{"content":[{"inlineContent":[{"text":"The upper bound for the range.","type":"text"}],"type":"paragraph"}],"name":"maximum"}],"kind":"parameters"},{"kind":"content","content":[{"text":"Discussion","type":"heading","anchor":"discussion","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Use the prefix half-open range operator (prefix "},{"type":"codeVoice","code":"..<"},{"text":") to create a","type":"text"},{"type":"text","text":" "},{"type":"text","text":"partial range of any type that conforms to the "},{"type":"codeVoice","code":"Comparable"},{"text":" protocol.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"This example creates a "},{"code":"PartialRangeUpTo<Double>","type":"codeVoice"},{"text":" instance that includes","type":"text"},{"type":"text","text":" "},{"text":"any value less than ","type":"text"},{"type":"codeVoice","code":"5.0"},{"text":".","type":"text"}]},{"code":["let upToFive = ..<5.0","","upToFive.contains(3.14)       \/\/ true","upToFive.contains(6.28)       \/\/ false","upToFive.contains(5.0)        \/\/ false"],"syntax":null,"type":"codeListing"},{"inlineContent":[{"type":"text","text":"You can use this type of partial range of a collection’s indices to"},{"text":" ","type":"text"},{"type":"text","text":"represent the range from the start of the collection up to, but not"},{"type":"text","text":" "},{"type":"text","text":"including, the partial range’s upper bound."}],"type":"paragraph"},{"syntax":null,"code":["let numbers = [10, 20, 30, 40, 50, 60, 70]","print(numbers[..<3])","\/\/ Prints \"[10, 20, 30]\""],"type":"codeListing"},{"type":"aside","name":"Precondition","content":[{"inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"maximum"},{"text":" must compare equal to itself (i.e. cannot be NaN).","type":"text"}],"type":"paragraph"}],"style":"note"}]}],"sections":[],"kind":"symbol","identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/Index\/.._(_:)","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/string\/index\/'.._(_:)"]}],"metadata":{"externalID":"s:SLsE3zzlopys16PartialRangeUpToVyxGxFZ::SYNTHESIZED::s:SS5IndexV","extendedModule":"Swift","modules":[{"name":"Compute","relatedModules":["Swift"]}],"title":"..<(_:)","symbolKind":"op","roleHeading":"Operator","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"..<"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"text":"PartialRangeUpTo","preciseIdentifier":"s:s16PartialRangeUpToV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"role":"symbol"},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/BidirectionalCollection-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/Index","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/Index\/Comparable-Implementations"]]},"schemaVersion":{"patch":0,"minor":3,"major":0},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/String/Index/Comparable-Implementations":{"url":"\/documentation\/compute\/string\/index\/comparable-implementations","role":"collectionGroup","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/Index\/Comparable-Implementations","title":"Comparable Implementations","type":"topic","kind":"article"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/Index/.._(_:)":{"kind":"symbol","title":"..<(_:)","type":"topic","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"..<","kind":"identifier"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:s16PartialRangeUpToV","text":"PartialRangeUpTo","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"url":"\/documentation\/compute\/string\/index\/'.._(_:)","role":"symbol","abstract":[{"type":"text","text":"Returns a partial range up to, but not including, its upper bound."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/Index\/.._(_:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/Index":{"abstract":[{"type":"text","text":"A position of a character or code unit in a string."}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Index","kind":"identifier"}],"url":"\/documentation\/compute\/string\/index","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/Index","kind":"symbol","title":"String.Index","role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Index"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/String/BidirectionalCollection-Implementations":{"role":"collectionGroup","type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/BidirectionalCollection-Implementations","kind":"article","title":"BidirectionalCollection Implementations","url":"\/documentation\/compute\/string\/bidirectionalcollection-implementations","abstract":[]},"doc://com.swallow.documentation.Compute/documentation/Compute/PartialRangeUpTo":{"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"PartialRangeUpTo","kind":"identifier"}],"type":"topic","url":"\/documentation\/compute\/partialrangeupto","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/PartialRangeUpTo","abstract":[{"type":"text","text":"A partial half-open interval up to, but not including, an upper bound."}],"navigatorTitle":[{"text":"PartialRangeUpTo","kind":"identifier"}],"title":"PartialRangeUpTo"},"doc://com.swallow.documentation.Compute/documentation/Compute/String":{"type":"topic","navigatorTitle":[{"kind":"identifier","text":"String"}],"title":"String","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"String","kind":"identifier"}],"abstract":[{"type":"text","text":"A Unicode string value that is a collection of characters."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String","kind":"symbol","role":"symbol","url":"\/documentation\/compute\/string"}}}