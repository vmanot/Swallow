{"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/BidirectionalCollection-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/Index","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/Index\/Hashable-Implementations"]]},"abstract":[{"type":"text","text":"The hash value."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"hashValue","kind":"identifier"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":" { "},{"kind":"keyword","text":"get"},{"kind":"text","text":" }"}],"platforms":["macOS"]}]},{"content":[{"level":2,"text":"Discussion","type":"heading","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"Hash values are not guaranteed to be equal across different executions of","type":"text"},{"type":"text","text":" "},{"text":"your program. Do not save hash values to use during a future execution.","type":"text"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"type":"codeVoice","code":"hashValue"},{"type":"text","text":" is deprecated as a "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":" requirement. To"},{"type":"text","text":" "},{"type":"text","text":"conform to "},{"code":"Hashable","type":"codeVoice"},{"type":"text","text":", implement the "},{"type":"codeVoice","code":"hash(into:)"},{"type":"text","text":" requirement instead."},{"text":" ","type":"text"},{"text":"The compiler provides an implementation for ","type":"text"},{"type":"codeVoice","code":"hashValue"},{"text":" for you.","type":"text"}]}],"style":"important","name":"Important","type":"aside"}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/string\/index\/hashvalue"]}],"metadata":{"symbolKind":"property","externalID":"s:SS5IndexV9hashValueSivp","extendedModule":"Swift","modules":[{"name":"Compute","relatedModules":["Swift"]}],"role":"symbol","title":"hashValue","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"hashValue"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"}],"roleHeading":"Instance Property"},"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/Index\/hashValue","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"patch":0,"minor":3},"kind":"symbol","sections":[],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/String/Index/hashValue":{"role":"symbol","abstract":[{"text":"The hash value.","type":"text"}],"url":"\/documentation\/compute\/string\/index\/hashvalue","type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/Index\/hashValue","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"hashValue","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"}],"title":"hashValue","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/Index/Hashable-Implementations":{"url":"\/documentation\/compute\/string\/index\/hashable-implementations","role":"collectionGroup","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/Index\/Hashable-Implementations","title":"Hashable Implementations","kind":"article","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","abstract":[{"type":"text","text":"A signed integer value type."}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Int","kind":"identifier"}],"navigatorTitle":[{"text":"Int","kind":"identifier"}],"title":"Int","url":"\/documentation\/compute\/int","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/Index":{"abstract":[{"type":"text","text":"A position of a character or code unit in a string."}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Index","kind":"identifier"}],"url":"\/documentation\/compute\/string\/index","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/Index","kind":"symbol","title":"String.Index","role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Index"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/String/BidirectionalCollection-Implementations":{"role":"collectionGroup","type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/BidirectionalCollection-Implementations","kind":"article","title":"BidirectionalCollection Implementations","url":"\/documentation\/compute\/string\/bidirectionalcollection-implementations","abstract":[]},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/String":{"type":"topic","navigatorTitle":[{"kind":"identifier","text":"String"}],"title":"String","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"String","kind":"identifier"}],"abstract":[{"type":"text","text":"A Unicode string value that is a collection of characters."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String","kind":"symbol","role":"symbol","url":"\/documentation\/compute\/string"}}}