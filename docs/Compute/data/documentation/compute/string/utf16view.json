{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/UTF16View"},"metadata":{"externalID":"s:SS9UTF16ViewV","modules":[{"relatedModules":["Swift"],"name":"Compute"}],"extendedModule":"Swift","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"UTF16View","kind":"identifier"}],"title":"String.UTF16View","symbolKind":"struct","navigatorTitle":[{"text":"UTF16View","kind":"identifier"}],"role":"symbol","roleHeading":"Structure"},"schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/StringProtocol-Implementations"]]},"abstract":[{"type":"text","text":"A view of a string’s contents as a collection of UTF-16 code units."}],"relationshipsSections":[{"title":"Conforms To","type":"conformsTo","identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BidirectionalCollection","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Copyable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CustomDebugStringConvertible","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CustomReflectable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CustomStringConvertible","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sendable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence"],"kind":"relationships"}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"@frozen","kind":"attribute"},{"kind":"text","text":" "},{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"UTF16View"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"content":[{"text":"Overview","type":"heading","level":2,"anchor":"overview"},{"type":"paragraph","inlineContent":[{"text":"You can access a string’s view of UTF-16 code units by using its ","type":"text"},{"type":"codeVoice","code":"utf16"},{"text":" ","type":"text"},{"type":"text","text":"property. A string’s UTF-16 view encodes the string’s Unicode scalar"},{"text":" ","type":"text"},{"text":"values as 16-bit integers.","type":"text"}]},{"syntax":null,"type":"codeListing","code":["let flowers = \"Flowers 💐\"","for v in flowers.utf16 {","    print(v)","}","\/\/ 70","\/\/ 108","\/\/ 111","\/\/ 119","\/\/ 101","\/\/ 114","\/\/ 115","\/\/ 32","\/\/ 55357","\/\/ 56464"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Unicode scalar values that make up a string’s contents can be up to 21"},{"text":" ","type":"text"},{"text":"bits long. The longer scalar values may need two ","type":"text"},{"type":"codeVoice","code":"UInt16"},{"text":" values for","type":"text"},{"type":"text","text":" "},{"text":"storage. Those “pairs” of code units are called ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"surrogate pairs","type":"text"}]},{"type":"text","text":"."}]},{"type":"codeListing","syntax":null,"code":["let flowermoji = \"💐\"","for v in flowermoji.unicodeScalars {","    print(v, v.value)","}","\/\/ 💐 128144","","for v in flowermoji.utf16 {","    print(v)","}","\/\/ 55357","\/\/ 56464"]},{"inlineContent":[{"text":"To convert a ","type":"text"},{"type":"codeVoice","code":"String.UTF16View"},{"type":"text","text":" instance back into a string, use the"},{"text":" ","type":"text"},{"type":"codeVoice","code":"String"},{"type":"text","text":" type’s "},{"type":"codeVoice","code":"init(_:)"},{"text":" initializer.","type":"text"}],"type":"paragraph"},{"syntax":null,"code":["let favemoji = \"My favorite emoji is 🎉\"","if let i = favemoji.utf16.firstIndex(where: { $0 >= 128 }) {","    let asciiPrefix = String(favemoji.utf16[..<i])!","    print(asciiPrefix)","}","\/\/ Prints \"My favorite emoji is \""],"type":"codeListing"},{"anchor":"UTF16View-Elements-Match-NSString-Characters","text":"UTF16View Elements Match NSString Characters","type":"heading","level":1},{"type":"paragraph","inlineContent":[{"type":"text","text":"The UTF-16 code units of a string’s "},{"code":"utf16","type":"codeVoice"},{"type":"text","text":" view match the elements"},{"text":" ","type":"text"},{"text":"accessed through indexed ","type":"text"},{"type":"codeVoice","code":"NSString"},{"text":" APIs.","type":"text"}]},{"syntax":null,"code":["print(flowers.utf16.count)","\/\/ Prints \"10\"","","let nsflowers = flowers as NSString","print(nsflowers.length)","\/\/ Prints \"10\""],"type":"codeListing"},{"inlineContent":[{"text":"Unlike ","type":"text"},{"code":"NSString","type":"codeVoice"},{"text":", however, ","type":"text"},{"type":"codeVoice","code":"String.UTF16View"},{"text":" does not use integer","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"indices. If you need to access a specific position in a UTF-16 view, use"},{"text":" ","type":"text"},{"type":"text","text":"Swift’s index manipulation methods. The following example accesses the"},{"text":" ","type":"text"},{"text":"fourth code unit in both the ","type":"text"},{"code":"flowers","type":"codeVoice"},{"type":"text","text":" and "},{"code":"nsflowers","type":"codeVoice"},{"type":"text","text":" strings:"}],"type":"paragraph"},{"code":["print(nsflowers.character(at: 3))","\/\/ Prints \"119\"","","let i = flowers.utf16.index(flowers.utf16.startIndex, offsetBy: 3)","print(flowers.utf16[i])","\/\/ Prints \"119\""],"syntax":null,"type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"Although the Swift overlay updates many Objective-C methods to return","type":"text"},{"type":"text","text":" "},{"type":"text","text":"native Swift indices and index ranges, some still return instances of"},{"type":"text","text":" "},{"code":"NSRange","type":"codeVoice"},{"text":". To convert an ","type":"text"},{"type":"codeVoice","code":"NSRange"},{"type":"text","text":" instance to a range of"},{"text":" ","type":"text"},{"code":"String.Index","type":"codeVoice"},{"text":", use the ","type":"text"},{"type":"codeVoice","code":"Range(_:in:)"},{"type":"text","text":" initializer, which takes an"},{"text":" ","type":"text"},{"type":"codeVoice","code":"NSRange"},{"text":" and a string as arguments.","type":"text"}]},{"type":"codeListing","syntax":null,"code":["let snowy = \"❄️ Let it snow! ☃️\"","let nsrange = NSRange(location: 3, length: 12)","if let range = Range(nsrange, in: snowy) {","    print(snowy[range])","}","\/\/ Prints \"Let it snow!\""]}],"kind":"content"}],"topicSections":[{"identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/UTF16View\/BidirectionalCollection-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/UTF16View\/Collection-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/UTF16View\/CustomDebugStringConvertible-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/UTF16View\/CustomReflectable-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/UTF16View\/CustomStringConvertible-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/UTF16View\/Sequence-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/UTF16View\/_CustomPlaygroundQuickLookable-Implementations"],"anchor":"Default-Implementations","generated":true,"title":"Default Implementations"}],"kind":"symbol","sections":[],"variants":[{"paths":["\/documentation\/compute\/string\/utf16view"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/BidirectionalCollection":{"navigatorTitle":[{"text":"BidirectionalCollection","kind":"identifier"}],"abstract":[{"text":"A collection that supports backward as well as forward traversal.","type":"text"}],"title":"BidirectionalCollection","kind":"symbol","url":"\/documentation\/compute\/bidirectionalcollection","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"BidirectionalCollection"}],"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BidirectionalCollection","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/String":{"type":"topic","navigatorTitle":[{"kind":"identifier","text":"String"}],"title":"String","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"String","kind":"identifier"}],"abstract":[{"type":"text","text":"A Unicode string value that is a collection of characters."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String","kind":"symbol","role":"symbol","url":"\/documentation\/compute\/string"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/UTF16View/CustomStringConvertible-Implementations":{"type":"topic","title":"CustomStringConvertible Implementations","url":"\/documentation\/compute\/string\/utf16view\/customstringconvertible-implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/UTF16View\/CustomStringConvertible-Implementations","role":"collectionGroup","abstract":[],"kind":"article"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/UTF16View/Collection-Implementations":{"url":"\/documentation\/compute\/string\/utf16view\/collection-implementations","role":"collectionGroup","abstract":[],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/UTF16View\/Collection-Implementations","title":"Collection Implementations","kind":"article"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/UTF16View":{"navigatorTitle":[{"text":"UTF16View","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/UTF16View","kind":"symbol","title":"String.UTF16View","url":"\/documentation\/compute\/string\/utf16view","abstract":[{"text":"A view of a string’s contents as a collection of UTF-16 code units.","type":"text"}],"role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"UTF16View"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/CustomReflectable":{"url":"\/documentation\/compute\/customreflectable","role":"symbol","abstract":[{"text":"A type that explicitly supplies its own mirror.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CustomReflectable","title":"CustomReflectable","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CustomReflectable"}],"navigatorTitle":[{"kind":"identifier","text":"CustomReflectable"}],"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/CustomDebugStringConvertible":{"url":"\/documentation\/compute\/customdebugstringconvertible","role":"symbol","abstract":[{"text":"A type with a customized textual representation suitable for debugging","type":"text"},{"type":"text","text":" "},{"text":"purposes.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CustomDebugStringConvertible","title":"CustomDebugStringConvertible","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CustomDebugStringConvertible","kind":"identifier"}],"navigatorTitle":[{"text":"CustomDebugStringConvertible","kind":"identifier"}],"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/CustomStringConvertible":{"url":"\/documentation\/compute\/customstringconvertible","navigatorTitle":[{"kind":"identifier","text":"CustomStringConvertible"}],"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CustomStringConvertible","kind":"identifier"}],"abstract":[{"text":"A type with a customized textual representation.","type":"text"}],"type":"topic","title":"CustomStringConvertible","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CustomStringConvertible"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/UTF16View/BidirectionalCollection-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/UTF16View\/BidirectionalCollection-Implementations","kind":"article","role":"collectionGroup","url":"\/documentation\/compute\/string\/utf16view\/bidirectionalcollection-implementations","title":"BidirectionalCollection Implementations","abstract":[],"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/UTF16View/CustomDebugStringConvertible-Implementations":{"url":"\/documentation\/compute\/string\/utf16view\/customdebugstringconvertible-implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/UTF16View\/CustomDebugStringConvertible-Implementations","role":"collectionGroup","type":"topic","kind":"article","title":"CustomDebugStringConvertible Implementations","abstract":[]},"doc://com.swallow.documentation.Compute/documentation/Compute/String/UTF16View/_CustomPlaygroundQuickLookable-Implementations":{"title":"_CustomPlaygroundQuickLookable Implementations","url":"\/documentation\/compute\/string\/utf16view\/_customplaygroundquicklookable-implementations","type":"topic","abstract":[],"role":"collectionGroup","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/UTF16View\/_CustomPlaygroundQuickLookable-Implementations","kind":"article"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence":{"url":"\/documentation\/compute\/sequence","navigatorTitle":[{"kind":"identifier","text":"Sequence"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence","title":"Sequence","kind":"symbol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Sequence","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"A type that provides sequential, iterated access to its elements."}]},"doc://com.swallow.documentation.Compute/documentation/Compute/String/UTF16View/Sequence-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/UTF16View\/Sequence-Implementations","kind":"article","title":"Sequence Implementations","url":"\/documentation\/compute\/string\/utf16view\/sequence-implementations","abstract":[],"role":"collectionGroup","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/Copyable":{"title":"Copyable","abstract":[{"type":"text","text":"A type whose values can be implicitly or explicitly copied."}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"Copyable","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Copyable","url":"\/documentation\/compute\/copyable","navigatorTitle":[{"text":"Copyable","kind":"identifier"}],"kind":"symbol","role":"symbol","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/Collection":{"kind":"symbol","role":"symbol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Collection"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection","url":"\/documentation\/compute\/collection","abstract":[{"type":"text","text":"A sequence whose elements can be traversed multiple times,"},{"text":" ","type":"text"},{"text":"nondestructively, and accessed by an indexed subscript.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Collection"}],"title":"Collection"},"doc://com.swallow.documentation.Compute/documentation/Compute/Sendable":{"kind":"symbol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"Sendable","kind":"identifier"}],"title":"Sendable","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sendable","abstract":[],"url":"\/documentation\/compute\/sendable","role":"symbol","navigatorTitle":[{"text":"Sendable","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/String/UTF16View/CustomReflectable-Implementations":{"title":"CustomReflectable Implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/UTF16View\/CustomReflectable-Implementations","kind":"article","role":"collectionGroup","type":"topic","abstract":[],"url":"\/documentation\/compute\/string\/utf16view\/customreflectable-implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/StringProtocol-Implementations":{"kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/StringProtocol-Implementations","abstract":[],"title":"StringProtocol Implementations","role":"collectionGroup","url":"\/documentation\/compute\/string\/stringprotocol-implementations","type":"topic"}}}