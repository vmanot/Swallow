{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/string\/init(_:radix:uppercase:)"]}],"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/init(_:radix:uppercase:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Creates a string representing the given value in base 10, or some other"},{"text":" ","type":"text"},{"type":"text","text":"specified base."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"init","kind":"keyword"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"text":"value","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":", "},{"text":"radix","kind":"externalParam"},{"kind":"text","text":": "},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":" = 10, ","kind":"text"},{"text":"uppercase","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":" = false) "},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":" : "},{"text":"BinaryInteger","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryInteger","kind":"typeIdentifier","preciseIdentifier":"s:Sz"}],"platforms":["macOS"]}]},{"parameters":[{"name":"value","content":[{"inlineContent":[{"text":"The value to convert to a string.","type":"text"}],"type":"paragraph"}]},{"name":"radix","content":[{"type":"paragraph","inlineContent":[{"text":"The base to use for the string representation. ","type":"text"},{"code":"radix","type":"codeVoice"},{"text":" must be","type":"text"},{"type":"text","text":" "},{"type":"text","text":"at least 2 and at most 36. The default is 10."}]}]},{"name":"uppercase","content":[{"type":"paragraph","inlineContent":[{"text":"Pass ","type":"text"},{"code":"true","type":"codeVoice"},{"text":" to use uppercase letters to represent numerals","type":"text"},{"type":"text","text":" "},{"type":"text","text":"greater than 9, or "},{"type":"codeVoice","code":"false"},{"text":" to use lowercase letters. The default is","type":"text"},{"text":" ","type":"text"},{"code":"false","type":"codeVoice"},{"type":"text","text":"."}]}]}],"kind":"parameters"},{"content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"inlineContent":[{"type":"text","text":"The following example converts the maximal "},{"code":"Int","type":"codeVoice"},{"type":"text","text":" value to a string and"},{"text":" ","type":"text"},{"text":"prints its length:","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":["let max = String(Int.max)","print(\"\\(max) has \\(max.count) digits.\")","\/\/ Prints \"9223372036854775807 has 19 digits.\""]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Numerals greater than 9 are represented as Roman letters. These letters"},{"type":"text","text":" "},{"text":"start with ","type":"text"},{"type":"codeVoice","code":"\"A\""},{"type":"text","text":" if "},{"type":"codeVoice","code":"uppercase"},{"type":"text","text":" is "},{"code":"true","type":"codeVoice"},{"type":"text","text":"; otherwise, with "},{"code":"\"a\"","type":"codeVoice"},{"type":"text","text":"."}]},{"type":"codeListing","syntax":null,"code":["let v = 999_999","print(String(v, radix: 2))","\/\/ Prints \"11110100001000111111\"","","print(String(v, radix: 16))","\/\/ Prints \"f423f\"","print(String(v, radix: 16, uppercase: true))","\/\/ Prints \"F423F\""]}],"kind":"content"}],"metadata":{"extendedModule":"Swift","fragments":[{"kind":"identifier","text":"init"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":", "},{"text":"radix","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"uppercase"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":")"}],"externalID":"s:SS_5radix9uppercaseSSx_SiSbtcSzRzlufc","role":"symbol","modules":[{"name":"Compute","relatedModules":["Swift"]}],"symbolKind":"init","title":"init(_:radix:uppercase:)","roleHeading":"Initializer"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Bool":{"url":"\/documentation\/compute\/bool","role":"symbol","title":"Bool","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Bool","kind":"identifier"}],"abstract":[{"type":"text","text":"A value type whose instances are either "},{"type":"codeVoice","code":"true"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"false"},{"text":".","type":"text"}],"navigatorTitle":[{"text":"Bool","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bool","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/String":{"type":"topic","navigatorTitle":[{"kind":"identifier","text":"String"}],"title":"String","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"String","kind":"identifier"}],"abstract":[{"type":"text","text":"A Unicode string value that is a collection of characters."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String","kind":"symbol","role":"symbol","url":"\/documentation\/compute\/string"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/init(_:radix:uppercase:)":{"url":"\/documentation\/compute\/string\/init(_:radix:uppercase:)","role":"symbol","kind":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"radix"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"uppercase"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"text":")","kind":"text"}],"title":"init(_:radix:uppercase:)","abstract":[{"text":"Creates a string representing the given value in base 10, or some other","type":"text"},{"type":"text","text":" "},{"type":"text","text":"specified base."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/init(_:radix:uppercase:)","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","abstract":[{"type":"text","text":"A signed integer value type."}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Int","kind":"identifier"}],"navigatorTitle":[{"text":"Int","kind":"identifier"}],"title":"Int","url":"\/documentation\/compute\/int","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/BinaryInteger":{"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"BinaryInteger"}],"navigatorTitle":[{"kind":"identifier","text":"BinaryInteger"}],"url":"\/documentation\/compute\/binaryinteger","type":"topic","abstract":[{"type":"text","text":"An integer type with a binary representation."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryInteger","title":"BinaryInteger","kind":"symbol","role":"symbol"}}}