{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/stride(from:to:by:)"]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/stride(from:to:by:)"},"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"stride","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"from","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":", "},{"text":"to","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"by"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sx6StrideQa","text":"Stride"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"StrideTo","preciseIdentifier":"s:s8StrideToV"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":">"}],"symbolKind":"func","modules":[{"name":"Compute"}],"roleHeading":"Function","externalID":"s:s6stride4from2to2bys8StrideToVyxGx_x0E0QztSxRzlF","title":"stride(from:to:by:)","role":"symbol"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"stride"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"text":"from","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"start","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"to","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"end","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"by"},{"kind":"text","text":" "},{"kind":"internalParam","text":"stride"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Stride","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Strideable\/Stride","kind":"typeIdentifier","preciseIdentifier":"s:Sx6StrideQa"},{"kind":"text","text":") -> "},{"text":"StrideTo","preciseIdentifier":"s:s8StrideToV","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/StrideTo"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"text":"> ","kind":"text"},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":" : "},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Strideable","kind":"typeIdentifier","text":"Strideable","preciseIdentifier":"s:Sx"}],"platforms":["macOS"]}]},{"parameters":[{"name":"start","content":[{"inlineContent":[{"type":"text","text":"The starting value to use for the sequence. If the sequence"},{"type":"text","text":" "},{"type":"text","text":"contains any values, the first one is "},{"code":"start","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}]},{"name":"end","content":[{"inlineContent":[{"text":"An end value to limit the sequence. ","type":"text"},{"type":"codeVoice","code":"end"},{"type":"text","text":" is never an element of"},{"type":"text","text":" "},{"type":"text","text":"the resulting sequence."}],"type":"paragraph"}]},{"name":"stride","content":[{"type":"paragraph","inlineContent":[{"text":"The amount to step by with each iteration. A positive ","type":"text"},{"code":"stride","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"iterates upward; a negative "},{"type":"codeVoice","code":"stride"},{"type":"text","text":" iterates downward."}]}]}],"kind":"parameters"},{"kind":"content","content":[{"level":2,"anchor":"return-value","type":"heading","text":"Return Value"},{"inlineContent":[{"text":"A sequence from ","type":"text"},{"code":"start","type":"codeVoice"},{"type":"text","text":" toward, but not including, "},{"code":"end","type":"codeVoice"},{"text":". Each","type":"text"},{"type":"text","text":" "},{"text":"value in the sequence steps by ","type":"text"},{"type":"codeVoice","code":"stride"},{"text":".","type":"text"}],"type":"paragraph"}]},{"kind":"content","content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"inlineContent":[{"text":"You can use this function to stride over values of any type that conforms","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"to the "},{"code":"Strideable","type":"codeVoice"},{"text":" protocol, such as integers or floating-point types.","type":"text"},{"type":"text","text":" "},{"text":"Starting with ","type":"text"},{"code":"start","type":"codeVoice"},{"text":", each successive value of the sequence adds ","type":"text"},{"type":"codeVoice","code":"stride"},{"text":" ","type":"text"},{"type":"text","text":"until the next value would be equal to or beyond "},{"code":"end","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"},{"type":"codeListing","code":["for radians in stride(from: 0.0, to: .pi * 2, by: .pi \/ 2) {","    let degrees = Int(radians * 180 \/ .pi)","    print(\"Degrees: \\(degrees), radians: \\(radians)\")","}","\/\/ Degrees: 0, radians: 0.0","\/\/ Degrees: 90, radians: 1.5707963267949","\/\/ Degrees: 180, radians: 3.14159265358979","\/\/ Degrees: 270, radians: 4.71238898038469"],"syntax":null},{"type":"paragraph","inlineContent":[{"text":"You can use ","type":"text"},{"type":"codeVoice","code":"stride(from:to:by:)"},{"type":"text","text":" to create a sequence that strides upward"},{"type":"text","text":" "},{"type":"text","text":"or downward. Pass a negative value as "},{"code":"stride","type":"codeVoice"},{"type":"text","text":" to create a sequence from a"},{"type":"text","text":" "},{"text":"higher start to a lower end:","type":"text"}]},{"syntax":null,"type":"codeListing","code":["for countdown in stride(from: 3, to: 0, by: -1) {","    print(\"\\(countdown)...\")","}","\/\/ 3...","\/\/ 2...","\/\/ 1..."]},{"inlineContent":[{"text":"If you pass a value as ","type":"text"},{"type":"codeVoice","code":"stride"},{"text":" that moves away from ","type":"text"},{"type":"codeVoice","code":"end"},{"type":"text","text":", the sequence"},{"text":" ","type":"text"},{"type":"text","text":"contains no values."}],"type":"paragraph"},{"code":["for x in stride(from: 0, to: 10, by: -1) {","    print(x)","}","\/\/ Nothing is printed."],"type":"codeListing","syntax":null}]}],"kind":"symbol","sections":[],"abstract":[{"type":"text","text":"Returns a sequence from a starting value to, but not including, an end"},{"text":" ","type":"text"},{"text":"value, stepping by the specified amount.","type":"text"}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Strideable/Stride":{"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/compute\/strideable\/stride","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Strideable\/Stride","required":true,"fragments":[{"kind":"keyword","text":"associatedtype"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Stride"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SL","text":"Comparable"},{"text":", ","kind":"text"},{"text":"SignedNumeric","kind":"typeIdentifier","preciseIdentifier":"s:s13SignedNumericP"}],"abstract":[{"type":"text","text":"A type that represents the distance between two values."}],"title":"Stride"},"doc://com.swallow.documentation.Compute/documentation/Compute/StrideTo":{"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/StrideTo","abstract":[{"type":"text","text":"A sequence of values formed by striding over a half-open interval."}],"role":"symbol","title":"StrideTo","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StrideTo","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/compute\/strideto","navigatorTitle":[{"text":"StrideTo","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Strideable":{"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/compute\/strideable","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Strideable","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Strideable"}],"navigatorTitle":[{"text":"Strideable","kind":"identifier"}],"abstract":[{"type":"text","text":"A type representing continuous, one-dimensional values that can be offset"},{"type":"text","text":" "},{"type":"text","text":"and measured."}],"title":"Strideable"},"doc://com.swallow.documentation.Compute/documentation/Compute/stride(from:to:by:)":{"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"stride"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"from","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"to","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"by"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Stride","kind":"typeIdentifier","preciseIdentifier":"s:Sx6StrideQa"},{"text":") -> ","kind":"text"},{"text":"StrideTo","kind":"typeIdentifier","preciseIdentifier":"s:s8StrideToV"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">","kind":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/stride(from:to:by:)","url":"\/documentation\/compute\/stride(from:to:by:)","kind":"symbol","title":"stride(from:to:by:)","abstract":[{"type":"text","text":"Returns a sequence from a starting value to, but not including, an end"},{"type":"text","text":" "},{"text":"value, stepping by the specified amount.","type":"text"}],"role":"symbol"}}}