{"metadata":{"roleHeading":"API Collection","modules":[{"name":"Compute"}],"role":"collectionGroup","title":"Equatable Implementations"},"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CodingUserInfoKey\/Equatable-Implementations"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/codinguserinfokey\/equatable-implementations"]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"topicSections":[{"title":"Operators","anchor":"Operators","generated":true,"identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CodingUserInfoKey\/!=(_:_:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CodingUserInfoKey\/==(_:)"]},{"generated":true,"title":"Instance Methods","identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CodingUserInfoKey\/eraseToAnyEquatable()"],"anchor":"Instance-Methods"}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CodingUserInfoKey"]]},"kind":"article","references":{"doc://com.swallow.documentation.Compute/documentation/Compute/CodingUserInfoKey/!=(_:_:)":{"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CodingUserInfoKey\/!=(_:_:)","role":"symbol","url":"\/documentation\/compute\/codinguserinfokey\/!=(_:_:)","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"!="},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"abstract":[{"text":"Returns a Boolean value indicating whether two values are not equal.","type":"text"}],"kind":"symbol","title":"!=(_:_:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/CodingUserInfoKey/eraseToAnyEquatable()":{"title":"eraseToAnyEquatable()","url":"\/documentation\/compute\/codinguserinfokey\/erasetoanyequatable()","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CodingUserInfoKey\/eraseToAnyEquatable()","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"eraseToAnyEquatable"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:7Swallow12AnyEquatableV","text":"AnyEquatable","kind":"typeIdentifier"}],"kind":"symbol","abstract":[]},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/CodingUserInfoKey/==(_:)":{"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CodingUserInfoKey\/==(_:)","role":"symbol","url":"\/documentation\/compute\/codinguserinfokey\/==(_:)","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"==","kind":"identifier"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> (("},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"text":")","kind":"text"}],"abstract":[],"kind":"symbol","title":"==(_:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/CodingUserInfoKey":{"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CodingUserInfoKey","navigatorTitle":[{"kind":"identifier","text":"CodingUserInfoKey"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"CodingUserInfoKey","kind":"identifier"}],"role":"symbol","type":"topic","abstract":[{"type":"text","text":"A user-defined key for providing context during encoding and decoding."}],"title":"CodingUserInfoKey","url":"\/documentation\/compute\/codinguserinfokey"}}}