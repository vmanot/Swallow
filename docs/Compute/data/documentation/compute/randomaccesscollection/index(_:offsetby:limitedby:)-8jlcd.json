{"metadata":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"index"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:Sl5IndexQa","text":"Index","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"offsetBy","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"limitedBy"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"Index","kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Index","preciseIdentifier":"s:Sl5IndexQa"},{"text":"?","kind":"text"}],"roleHeading":"Instance Method","externalID":"s:SksE5index_8offsetBy07limitedC05IndexQzSgAE_SiAEtF","modules":[{"name":"Compute","relatedModules":["Swift"]}],"symbolKind":"method","title":"index(_:offsetBy:limitedBy:)","extendedModule":"Swift","role":"symbol"},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/randomaccesscollection\/index(_:offsetby:limitedby:)-8jlcd"]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BidirectionalCollection","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BidirectionalCollection\/index(_:offsetBy:limitedBy:)-7ouan"],["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/index(_:offsetBy:limitedBy:)-7u6ae"],["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RandomAccessCollection","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RandomAccessCollection\/index(_:offsetBy:limitedBy:)-1z7jz"]]},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"index"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"i"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Index","preciseIdentifier":"s:Sl5IndexQa","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/Index","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"offsetBy","kind":"externalParam"},{"kind":"text","text":" "},{"text":"distance","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":", "},{"text":"limitedBy","kind":"externalParam"},{"kind":"text","text":" "},{"text":"limit","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/Index","text":"Index","preciseIdentifier":"s:Sl5IndexQa","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/Index","preciseIdentifier":"s:Sl5IndexQa","text":"Index","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A valid index of the array."}]}],"name":"i"},{"content":[{"inlineContent":[{"type":"text","text":"The distance to offset "},{"code":"i","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}],"name":"distance"},{"name":"limit","content":[{"inlineContent":[{"type":"text","text":"A valid index of the collection to use as a limit. If"},{"type":"text","text":" "},{"type":"codeVoice","code":"distance > 0"},{"type":"text","text":", "},{"code":"limit","type":"codeVoice"},{"text":" should be greater than ","type":"text"},{"code":"i","type":"codeVoice"},{"text":" to have any","type":"text"},{"text":" ","type":"text"},{"text":"effect. Likewise, if ","type":"text"},{"type":"codeVoice","code":"distance < 0"},{"type":"text","text":", "},{"type":"codeVoice","code":"limit"},{"type":"text","text":" should be less than "},{"type":"codeVoice","code":"i"},{"text":" ","type":"text"},{"text":"to have any effect.","type":"text"}],"type":"paragraph"}]}]},{"kind":"content","content":[{"text":"Return Value","level":2,"type":"heading","anchor":"return-value"},{"inlineContent":[{"text":"An index offset by ","type":"text"},{"code":"distance","type":"codeVoice"},{"text":" from the index ","type":"text"},{"code":"i","type":"codeVoice"},{"text":", unless that","type":"text"},{"type":"text","text":" "},{"text":"index would be beyond ","type":"text"},{"code":"limit","type":"codeVoice"},{"type":"text","text":" in the direction of movement. In that"},{"text":" ","type":"text"},{"text":"case, the method returns ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}]},{"content":[{"level":2,"text":"Discussion","anchor":"discussion","type":"heading"},{"inlineContent":[{"type":"text","text":"The following example obtains an index advanced four positions from an"},{"type":"text","text":" "},{"text":"array’s starting index and then prints the element at that position. The","type":"text"},{"type":"text","text":" "},{"text":"operation doesn’t require going beyond the limiting ","type":"text"},{"type":"codeVoice","code":"numbers.endIndex"},{"type":"text","text":" "},{"type":"text","text":"value, so it succeeds."}],"type":"paragraph"},{"syntax":null,"type":"codeListing","code":["let numbers = [10, 20, 30, 40, 50]","let i = numbers.index(numbers.startIndex, offsetBy: 4)","print(numbers[i])","\/\/ Prints \"50\""]},{"inlineContent":[{"text":"The next example attempts to retrieve an index ten positions from","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"numbers.startIndex"},{"text":", but fails, because that distance is beyond the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"index passed as "},{"type":"codeVoice","code":"limit"},{"type":"text","text":"."}],"type":"paragraph"},{"syntax":null,"type":"codeListing","code":["let j = numbers.index(numbers.startIndex,","                      offsetBy: 10,","                      limitedBy: numbers.endIndex)","print(j)","\/\/ Prints \"nil\""]},{"type":"paragraph","inlineContent":[{"text":"The value passed as ","type":"text"},{"code":"distance","type":"codeVoice"},{"type":"text","text":" must not offset "},{"type":"codeVoice","code":"i"},{"text":" beyond the bounds of","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the collection, unless the index passed as "},{"type":"codeVoice","code":"limit"},{"text":" prevents offsetting","type":"text"},{"text":" ","type":"text"},{"text":"beyond those bounds.","type":"text"}]},{"name":"Complexity","style":"note","type":"aside","content":[{"inlineContent":[{"text":"O(1)","type":"text"}],"type":"paragraph"}]}],"kind":"content"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RandomAccessCollection\/index(_:offsetBy:limitedBy:)-8jlcd"},"abstract":[{"type":"text","text":"Returns an index that is the specified distance from the given index,"},{"type":"text","text":" "},{"type":"text","text":"unless that distance is beyond a given limiting index."}],"sections":[],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/BidirectionalCollection":{"navigatorTitle":[{"text":"BidirectionalCollection","kind":"identifier"}],"abstract":[{"text":"A collection that supports backward as well as forward traversal.","type":"text"}],"title":"BidirectionalCollection","kind":"symbol","url":"\/documentation\/compute\/bidirectionalcollection","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"BidirectionalCollection"}],"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BidirectionalCollection","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Collection/index(_:offsetBy:limitedBy:)-7u6ae":{"title":"index(_:offsetBy:limitedBy:)","url":"\/documentation\/compute\/collection\/index(_:offsetby:limitedby:)-7u6ae","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/index(_:offsetBy:limitedBy:)-7u6ae","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"index","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Index","preciseIdentifier":"s:Sl5IndexQa"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"offsetBy"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"kind":"text","text":", "},{"text":"limitedBy","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa","text":"Index"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:Sl5IndexQa","kind":"typeIdentifier","text":"Index"},{"text":"?","kind":"text"}],"required":true,"defaultImplementations":4,"abstract":[{"text":"Returns an index that is the specified distance from the given index,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"unless that distance is beyond a given limiting index."}],"role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/RandomAccessCollection":{"title":"RandomAccessCollection","abstract":[{"text":"A collection that supports efficient random-access index traversal.","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RandomAccessCollection","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RandomAccessCollection","url":"\/documentation\/compute\/randomaccesscollection","navigatorTitle":[{"text":"RandomAccessCollection","kind":"identifier"}],"kind":"symbol","role":"symbol","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/RandomAccessCollection/index(_:offsetBy:limitedBy:)-8jlcd":{"url":"\/documentation\/compute\/randomaccesscollection\/index(_:offsetby:limitedby:)-8jlcd","abstract":[{"type":"text","text":"Returns an index that is the specified distance from the given index,"},{"type":"text","text":" "},{"type":"text","text":"unless that distance is beyond a given limiting index."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RandomAccessCollection\/index(_:offsetBy:limitedBy:)-8jlcd","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"index"},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Index","preciseIdentifier":"s:Sl5IndexQa","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"offsetBy","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"text":"limitedBy","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"Index","kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa","text":"Index"},{"text":"?","kind":"text"}],"title":"index(_:offsetBy:limitedBy:)","type":"topic","kind":"symbol","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/RandomAccessCollection/index(_:offsetBy:limitedBy:)-1z7jz":{"title":"index(_:offsetBy:limitedBy:)","url":"\/documentation\/compute\/randomaccesscollection\/index(_:offsetby:limitedby:)-1z7jz","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"index","kind":"identifier"},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:Sl5IndexQa","text":"Index","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"offsetBy","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":", ","kind":"text"},{"text":"limitedBy","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Index","preciseIdentifier":"s:Sl5IndexQa"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Index","kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa"},{"text":"?","kind":"text"}],"abstract":[{"type":"text","text":"Returns an index that is the specified distance from the given index,"},{"type":"text","text":" "},{"type":"text","text":"unless that distance is beyond a given limiting index."}],"type":"topic","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RandomAccessCollection\/index(_:offsetBy:limitedBy:)-1z7jz","required":true,"role":"symbol","defaultImplementations":1},"doc://com.swallow.documentation.Compute/documentation/Compute/BidirectionalCollection/index(_:offsetBy:limitedBy:)-7ouan":{"url":"\/documentation\/compute\/bidirectionalcollection\/index(_:offsetby:limitedby:)-7ouan","abstract":[{"type":"text","text":"Returns an index that is the specified distance from the given index,"},{"type":"text","text":" "},{"type":"text","text":"unless that distance is beyond a given limiting index."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BidirectionalCollection\/index(_:offsetBy:limitedBy:)-7ouan","defaultImplementations":2,"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"index"},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Index","preciseIdentifier":"s:Sl5IndexQa","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"offsetBy","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"text":"limitedBy","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"Index","kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa","text":"Index"},{"text":"?","kind":"text"}],"title":"index(_:offsetBy:limitedBy:)","type":"topic","kind":"symbol","required":true,"role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Collection/Index":{"url":"\/documentation\/compute\/collection\/index","required":true,"role":"symbol","title":"Index","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Index","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"Comparable","preciseIdentifier":"s:SL","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"A type that represents a position in the collection."}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/Index","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","abstract":[{"type":"text","text":"A signed integer value type."}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Int","kind":"identifier"}],"navigatorTitle":[{"text":"Int","kind":"identifier"}],"title":"Int","url":"\/documentation\/compute\/int","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Collection":{"kind":"symbol","role":"symbol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Collection"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection","url":"\/documentation\/compute\/collection","abstract":[{"type":"text","text":"A sequence whose elements can be traversed multiple times,"},{"text":" ","type":"text"},{"text":"nondestructively, and accessed by an indexed subscript.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Collection"}],"title":"Collection"}}}