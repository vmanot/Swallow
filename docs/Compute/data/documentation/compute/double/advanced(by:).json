{"sections":[],"abstract":[{"type":"text","text":"Returns a value that is offset the specified distance from this value."}],"schemaVersion":{"minor":3,"major":0,"patch":0},"kind":"symbol","identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Double\/advanced(by:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Double","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Double\/Strideable-Implementations"]]},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"advanced"},{"kind":"text","text":"("},{"kind":"externalParam","text":"by"},{"kind":"text","text":" "},{"text":"amount","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Double","preciseIdentifier":"s:Sd","text":"Double"},{"kind":"text","text":") -> "},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Double","text":"Double","kind":"typeIdentifier","preciseIdentifier":"s:Sd"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"level":2,"text":"Return Value","anchor":"return-value","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"A value that is offset from this value by ","type":"text"},{"code":"n","type":"codeVoice"},{"type":"text","text":"."}]}],"kind":"content"},{"content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"inlineContent":[{"type":"text","text":"Use the "},{"code":"advanced(by:)","type":"codeVoice"},{"text":" method in generic code to offset a value by a","type":"text"},{"type":"text","text":" "},{"text":"specified distance. If you’re working directly with numeric values, use","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the addition operator ("},{"type":"codeVoice","code":"+"},{"type":"text","text":") instead of this method."}],"type":"paragraph"},{"syntax":null,"code":["func addOne<T: Strideable>(to x: T) -> T","    where T.Stride: ExpressibleByIntegerLiteral","{","    return x.advanced(by: 1)","}","","let x = addOne(to: 5)","\/\/ x == 6","let y = addOne(to: 3.5)","\/\/ y = 4.5"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"If this type’s "},{"code":"Stride","type":"codeVoice"},{"text":" type conforms to ","type":"text"},{"code":"BinaryInteger","type":"codeVoice"},{"type":"text","text":", then for a"},{"type":"text","text":" "},{"text":"value ","type":"text"},{"type":"codeVoice","code":"x"},{"type":"text","text":", a distance "},{"code":"n","type":"codeVoice"},{"text":", and a value ","type":"text"},{"code":"y = x.advanced(by: n)","type":"codeVoice"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"codeVoice","code":"x.distance(to: y) == n"},{"type":"text","text":". Using this method with types that have a"},{"type":"text","text":" "},{"text":"noninteger ","type":"text"},{"code":"Stride","type":"codeVoice"},{"text":" may result in an approximation. If the result of","type":"text"},{"type":"text","text":" "},{"text":"advancing by ","type":"text"},{"code":"n","type":"codeVoice"},{"type":"text","text":" is not representable as a value of this type, then a"},{"text":" ","type":"text"},{"type":"text","text":"runtime error may occur."}],"type":"paragraph"},{"style":"note","name":"Complexity","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"O(1)"}]}]}],"kind":"content"}],"variants":[{"paths":["\/documentation\/compute\/double\/advanced(by:)"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"role":"symbol","externalID":"s:Sd8advanced2byS2d_tF","title":"advanced(by:)","modules":[{"name":"Compute","relatedModules":["Swift"]}],"roleHeading":"Instance Method","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"advanced"},{"text":"(","kind":"text"},{"text":"by","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sd","text":"Double","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Double","kind":"typeIdentifier","preciseIdentifier":"s:Sd"}],"extendedModule":"Swift"},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Double/Strideable-Implementations":{"kind":"article","role":"collectionGroup","url":"\/documentation\/compute\/double\/strideable-implementations","title":"Strideable Implementations","type":"topic","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Double\/Strideable-Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/Double/advanced(by:)":{"role":"symbol","type":"topic","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Double\/advanced(by:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"advanced"},{"text":"(","kind":"text"},{"text":"by","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sd","text":"Double"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sd","kind":"typeIdentifier","text":"Double"}],"title":"advanced(by:)","url":"\/documentation\/compute\/double\/advanced(by:)","abstract":[{"text":"Returns a value that is offset the specified distance from this value.","type":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Double":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Double","abstract":[{"text":"A double-precision, floating-point value type.","type":"text"}],"title":"Double","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Double","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"Double","kind":"identifier"}],"kind":"symbol","type":"topic","url":"\/documentation\/compute\/double"}}}