{"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Double\/nan","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"minor":3,"major":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"nan","kind":"identifier"},{"kind":"text","text":": "},{"text":"Double","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Double","kind":"typeIdentifier","preciseIdentifier":"s:Sd"},{"text":" { ","kind":"text"},{"text":"get","kind":"keyword"},{"kind":"text","text":" }"}]}]},{"kind":"content","content":[{"type":"heading","anchor":"discussion","level":2,"text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A NaN compares not equal, not greater than, and not less than every"},{"text":" ","type":"text"},{"type":"text","text":"value, including itself. Passing a NaN to an operation generally results"},{"type":"text","text":" "},{"text":"in NaN.","type":"text"}]},{"syntax":null,"code":["let x = 1.21","\/\/ x > Double.nan == false","\/\/ x < Double.nan == false","\/\/ x == Double.nan == false"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"Because a NaN always compares not equal to itself, to test whether a"},{"type":"text","text":" "},{"type":"text","text":"floating-point value is NaN, use its "},{"type":"codeVoice","code":"isNaN"},{"text":" property instead of the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"equal-to operator ("},{"code":"==","type":"codeVoice"},{"text":"). In the following example, ","type":"text"},{"type":"codeVoice","code":"y"},{"type":"text","text":" is NaN."}],"type":"paragraph"},{"code":["let y = x + Double.nan","print(y == Double.nan)","\/\/ Prints \"false\"","print(y.isNaN)","\/\/ Prints \"true\""],"syntax":null,"type":"codeListing"}]}],"metadata":{"extendedModule":"Swift","externalID":"s:Sd3nanSdvpZ","title":"nan","symbolKind":"property","modules":[{"name":"Compute","relatedModules":["Swift"]}],"role":"symbol","roleHeading":"Type Property","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"nan","kind":"identifier"},{"kind":"text","text":": "},{"text":"Double","kind":"typeIdentifier","preciseIdentifier":"s:Sd"}]},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Double","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Double\/FloatingPoint-Implementations"]]},"abstract":[{"type":"text","text":"A quiet NaN (“not a number”)."}],"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/double\/nan"]}],"sections":[],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Double/nan":{"title":"nan","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"nan"},{"text":": ","kind":"text"},{"text":"Double","preciseIdentifier":"s:Sd","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"A quiet NaN (“not a number”)."}],"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Double\/nan","type":"topic","kind":"symbol","url":"\/documentation\/compute\/double\/nan"},"doc://com.swallow.documentation.Compute/documentation/Compute/Double":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Double","abstract":[{"text":"A double-precision, floating-point value type.","type":"text"}],"title":"Double","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Double","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"Double","kind":"identifier"}],"kind":"symbol","type":"topic","url":"\/documentation\/compute\/double"},"doc://com.swallow.documentation.Compute/documentation/Compute/Double/FloatingPoint-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Double\/FloatingPoint-Implementations","url":"\/documentation\/compute\/double\/floatingpoint-implementations","type":"topic","abstract":[],"role":"collectionGroup","title":"FloatingPoint Implementations","kind":"article"}}}