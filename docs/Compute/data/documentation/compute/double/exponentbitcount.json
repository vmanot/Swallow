{"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Double","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Double\/BinaryFloatingPoint-Implementations"]]},"abstract":[{"text":"The number of bits used to represent the type’s exponent.","type":"text"}],"metadata":{"symbolKind":"property","modules":[{"name":"Compute","relatedModules":["Swift"]}],"role":"symbol","title":"exponentBitCount","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"exponentBitCount","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"}],"roleHeading":"Type Property","extendedModule":"Swift","externalID":"s:Sd16exponentBitCountSivpZ"},"variants":[{"paths":["\/documentation\/compute\/double\/exponentbitcount"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"exponentBitCount","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","preciseIdentifier":"s:Si","text":"Int"},{"text":" { ","kind":"text"},{"text":"get","kind":"keyword"},{"text":" }","kind":"text"}],"platforms":["macOS"]}]},{"kind":"content","content":[{"level":2,"text":"Discussion","type":"heading","anchor":"discussion"},{"inlineContent":[{"type":"text","text":"A binary floating-point type’s "},{"code":"exponentBitCount","type":"codeVoice"},{"type":"text","text":" imposes a limit on the"},{"text":" ","type":"text"},{"type":"text","text":"range of the exponent for normal, finite values. The "},{"inlineContent":[{"type":"text","text":"exponent bias"}],"type":"emphasis"},{"type":"text","text":" of"},{"text":" ","type":"text"},{"type":"text","text":"a type "},{"code":"F","type":"codeVoice"},{"type":"text","text":" can be calculated as the following, where "},{"type":"codeVoice","code":"**"},{"text":" is","type":"text"},{"type":"text","text":" "},{"text":"exponentiation:","type":"text"}],"type":"paragraph"},{"syntax":null,"code":["let bias = 2 ** (F.exponentBitCount - 1) - 1"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The least normal exponent for values of the type "},{"type":"codeVoice","code":"F"},{"type":"text","text":" is "},{"type":"codeVoice","code":"1 - bias"},{"type":"text","text":", and"},{"type":"text","text":" "},{"type":"text","text":"the largest finite exponent is "},{"code":"bias","type":"codeVoice"},{"text":". An all-zeros exponent is reserved","type":"text"},{"type":"text","text":" "},{"type":"text","text":"for subnormals and zeros, and an all-ones exponent is reserved for"},{"text":" ","type":"text"},{"type":"text","text":"infinity and NaN."}]},{"type":"paragraph","inlineContent":[{"text":"For example, the ","type":"text"},{"type":"codeVoice","code":"Float"},{"type":"text","text":" type has an "},{"type":"codeVoice","code":"exponentBitCount"},{"text":" of 8, which gives","type":"text"},{"text":" ","type":"text"},{"text":"an exponent bias of ","type":"text"},{"type":"codeVoice","code":"127"},{"type":"text","text":" by the calculation above."}]},{"code":["let bias = 2 ** (Float.exponentBitCount - 1) - 1","\/\/ bias == 127","print(Float.greatestFiniteMagnitude.exponent)","\/\/ Prints \"127\"","print(Float.leastNormalMagnitude.exponent)","\/\/ Prints \"-126\""],"type":"codeListing","syntax":null}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Double\/exponentBitCount","interfaceLanguage":"swift"},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Double/exponentBitCount":{"title":"exponentBitCount","type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/compute\/double\/exponentbitcount","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"exponentBitCount","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Double\/exponentBitCount","abstract":[{"text":"The number of bits used to represent the type’s exponent.","type":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Double":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Double","abstract":[{"text":"A double-precision, floating-point value type.","type":"text"}],"title":"Double","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Double","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"Double","kind":"identifier"}],"kind":"symbol","type":"topic","url":"\/documentation\/compute\/double"},"doc://com.swallow.documentation.Compute/documentation/Compute/Double/BinaryFloatingPoint-Implementations":{"kind":"article","type":"topic","role":"collectionGroup","url":"\/documentation\/compute\/double\/binaryfloatingpoint-implementations","abstract":[],"title":"BinaryFloatingPoint Implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Double\/BinaryFloatingPoint-Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","abstract":[{"type":"text","text":"A signed integer value type."}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Int","kind":"identifier"}],"navigatorTitle":[{"text":"Int","kind":"identifier"}],"title":"Int","url":"\/documentation\/compute\/int","kind":"symbol"}}}