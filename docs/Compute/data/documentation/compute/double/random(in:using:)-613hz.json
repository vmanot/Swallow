{"primaryContentSections":[{"declarations":[{"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"random","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"text":"in","kind":"externalParam"},{"kind":"text","text":" "},{"text":"range","kind":"internalParam"},{"kind":"text","text":": "},{"text":"ClosedRange","preciseIdentifier":"s:SN","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ClosedRange","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"using"},{"kind":"text","text":" "},{"text":"generator","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"text":"T","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":" "},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"text":"T","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RandomNumberGenerator","text":"RandomNumberGenerator","kind":"typeIdentifier","preciseIdentifier":"s:SG"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"name":"range","content":[{"type":"paragraph","inlineContent":[{"text":"The range in which to create a random value. Must be finite.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The random number generator to use when creating the"},{"text":" ","type":"text"},{"text":"new random value.","type":"text"}]}],"name":"generator"}],"kind":"parameters"},{"kind":"content","content":[{"anchor":"return-value","type":"heading","level":2,"text":"Return Value"},{"type":"paragraph","inlineContent":[{"text":"A random value within the bounds of ","type":"text"},{"type":"codeVoice","code":"range"},{"type":"text","text":"."}]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"text":"Discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Use this method to generate a floating-point value within a specific"},{"type":"text","text":" "},{"type":"text","text":"range when you are using a custom random number generator. This example"},{"text":" ","type":"text"},{"text":"creates three new values in the range ","type":"text"},{"code":"10.0 ... 20.0","type":"codeVoice"},{"type":"text","text":"."}]},{"code":["for _ in 1...3 {","    print(Double.random(in: 10.0 ... 20.0, using: &myGenerator))","}","\/\/ Prints \"18.1900709259179\"","\/\/ Prints \"14.2286325689993\"","\/\/ Prints \"13.1485686260762\""],"type":"codeListing","syntax":null},{"inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"random(in:using:)"},{"text":" static method chooses a random value from a","type":"text"},{"type":"text","text":" "},{"type":"text","text":"continuous uniform distribution in "},{"type":"codeVoice","code":"range"},{"text":", and then converts that value","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"to the nearest representable value in this type. Depending on the size"},{"text":" ","type":"text"},{"type":"text","text":"and span of "},{"code":"range","type":"codeVoice"},{"text":", some concrete values may be represented more","type":"text"},{"type":"text","text":" "},{"type":"text","text":"frequently than others."}],"type":"paragraph"},{"content":[{"inlineContent":[{"text":"The algorithm used to create random values may change in a future","type":"text"},{"type":"text","text":" "},{"type":"text","text":"version of Swift. If youâ€™re passing a generator that results in the"},{"text":" ","type":"text"},{"type":"text","text":"same sequence of floating-point values each time you run your program,"},{"text":" ","type":"text"},{"text":"that sequence may change when your program is compiled using a","type":"text"},{"text":" ","type":"text"},{"text":"different version of Swift.","type":"text"}],"type":"paragraph"}],"name":"Note","style":"note","type":"aside"}]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"sections":[],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Double","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Double\/BinaryFloatingPoint-Implementations"]]},"kind":"symbol","metadata":{"extendedModule":"Swift","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"RawSignificand"},{"type":"text","text":" conforms to "},{"code":"FixedWidthInteger","type":"codeVoice"},{"type":"text","text":"."}]},"symbolKind":"method","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"random"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"in","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SN","text":"ClosedRange"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":">, ","kind":"text"},{"text":"using","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"}],"roleHeading":"Type Method","role":"symbol","title":"random(in:using:)","externalID":"s:SBss17FixedWidthInteger14RawSignificandRpzrlE6random2in5usingxSNyxG_qd__ztSGRd__lFZ::SYNTHESIZED::s:Sd","modules":[{"name":"Compute","relatedModules":["Swift"]}]},"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Double\/random(in:using:)-613hz","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/double\/random(in:using:)-613hz"]}],"abstract":[{"text":"Returns a random value within the specified range, using the given","type":"text"},{"type":"text","text":" "},{"type":"text","text":"generator as a source for randomness."}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/RandomNumberGenerator":{"abstract":[{"text":"A type that provides uniformly distributed random data.","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"RandomNumberGenerator"}],"url":"\/documentation\/compute\/randomnumbergenerator","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RandomNumberGenerator","title":"RandomNumberGenerator","role":"symbol","type":"topic","navigatorTitle":[{"text":"RandomNumberGenerator","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/ClosedRange":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ClosedRange","kind":"identifier"}],"role":"symbol","title":"ClosedRange","url":"\/documentation\/compute\/closedrange","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ClosedRange","abstract":[{"text":"An interval from a lower bound up to, and including, an upper bound.","type":"text"}],"type":"topic","navigatorTitle":[{"text":"ClosedRange","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Double/random(in:using:)-613hz":{"title":"random(in:using:)","type":"topic","kind":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"RawSignificand"},{"text":" conforms to ","type":"text"},{"code":"FixedWidthInteger","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"role":"symbol","url":"\/documentation\/compute\/double\/random(in:using:)-613hz","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"random"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"in","kind":"externalParam"},{"kind":"text","text":": "},{"text":"ClosedRange","preciseIdentifier":"s:SN","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"text":"using","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Double\/random(in:using:)-613hz","abstract":[{"text":"Returns a random value within the specified range, using the given","type":"text"},{"type":"text","text":" "},{"text":"generator as a source for randomness.","type":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Double/BinaryFloatingPoint-Implementations":{"kind":"article","type":"topic","role":"collectionGroup","url":"\/documentation\/compute\/double\/binaryfloatingpoint-implementations","abstract":[],"title":"BinaryFloatingPoint Implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Double\/BinaryFloatingPoint-Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/Double":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Double","abstract":[{"text":"A double-precision, floating-point value type.","type":"text"}],"title":"Double","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Double","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"Double","kind":"identifier"}],"kind":"symbol","type":"topic","url":"\/documentation\/compute\/double"}}}