{"metadata":{"symbolKind":"method","title":"negate()","extendedModule":"Swift","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"negate"},{"text":"()","kind":"text"}],"modules":[{"name":"Compute","relatedModules":["Swift"]}],"roleHeading":"Instance Method","role":"symbol","externalID":"s:s13SignedNumericPsE6negateyyF::SYNTHESIZED::s:Sd"},"abstract":[{"type":"text","text":"Replaces this value with its additive inverse."}],"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"symbol","sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/double\/negate()-jfhr"]}],"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Double\/negate()-jfhr","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Double","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Double\/SignedNumeric-Implementations"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"mutating","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"negate"},{"kind":"text","text":"()"}]}]},{"kind":"content","content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"inlineContent":[{"type":"text","text":"The following example uses the "},{"type":"codeVoice","code":"negate()"},{"type":"text","text":" method to negate the value of"},{"text":" ","type":"text"},{"text":"an integer ","type":"text"},{"code":"x","type":"codeVoice"},{"type":"text","text":":"}],"type":"paragraph"},{"code":["var x = 21","x.negate()","\/\/ x == -21"],"type":"codeListing","syntax":null},{"type":"paragraph","inlineContent":[{"text":"The resulting value must be representable within the value’s type. In","type":"text"},{"text":" ","type":"text"},{"text":"particular, negating a signed, fixed-width integer type’s minimum","type":"text"},{"text":" ","type":"text"},{"text":"results in a value that cannot be represented.","type":"text"}]},{"type":"codeListing","syntax":null,"code":["var y = Int8.min","y.negate()","\/\/ Overflow error"]}]}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Double/SignedNumeric-Implementations":{"title":"SignedNumeric Implementations","kind":"article","abstract":[],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Double\/SignedNumeric-Implementations","role":"collectionGroup","url":"\/documentation\/compute\/double\/signednumeric-implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/Double/negate()-jfhr":{"type":"topic","abstract":[{"type":"text","text":"Replaces this value with its additive inverse."}],"role":"symbol","kind":"symbol","url":"\/documentation\/compute\/double\/negate()-jfhr","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Double\/negate()-jfhr","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"negate"},{"kind":"text","text":"()"}],"title":"negate()"},"doc://com.swallow.documentation.Compute/documentation/Compute/Double":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Double","abstract":[{"text":"A double-precision, floating-point value type.","type":"text"}],"title":"Double","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Double","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"Double","kind":"identifier"}],"kind":"symbol","type":"topic","url":"\/documentation\/compute\/double"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"}}}