{"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Double","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Double\/FloatingPoint-Implementations"]]},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"minimum"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"x"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"text":"y","kind":"internalParam"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}]}],"kind":"declarations"},{"parameters":[{"name":"x","content":[{"type":"paragraph","inlineContent":[{"text":"A floating-point value.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Another floating-point value."}]}],"name":"y"}],"kind":"parameters"},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"return-value","text":"Return Value"},{"inlineContent":[{"text":"The minimum of ","type":"text"},{"code":"x","type":"codeVoice"},{"type":"text","text":" and "},{"code":"y","type":"codeVoice"},{"text":", or whichever is a number if the","type":"text"},{"text":" ","type":"text"},{"text":"other is NaN.","type":"text"}],"type":"paragraph"}]},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"This method returns the minimum of two values, preserving order and"},{"text":" ","type":"text"},{"type":"text","text":"eliminating NaN when possible. For two values "},{"code":"x","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"y"},{"text":", the result of","type":"text"},{"text":" ","type":"text"},{"code":"minimum(x, y)","type":"codeVoice"},{"type":"text","text":" is "},{"type":"codeVoice","code":"x"},{"type":"text","text":" if "},{"type":"codeVoice","code":"x <= y"},{"type":"text","text":", "},{"code":"y","type":"codeVoice"},{"text":" if ","type":"text"},{"type":"codeVoice","code":"y < x"},{"type":"text","text":", or whichever of "},{"type":"codeVoice","code":"x"},{"text":" ","type":"text"},{"text":"or ","type":"text"},{"code":"y","type":"codeVoice"},{"text":" is a number if the other is a quiet NaN. If both ","type":"text"},{"type":"codeVoice","code":"x"},{"type":"text","text":" and "},{"code":"y","type":"codeVoice"},{"type":"text","text":" are"},{"type":"text","text":" "},{"type":"text","text":"NaN, or either "},{"code":"x","type":"codeVoice"},{"text":" or ","type":"text"},{"code":"y","type":"codeVoice"},{"text":" is a signaling NaN, the result is NaN.","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":["Double.minimum(10.0, -25.0)","\/\/ -25.0","Double.minimum(10.0, .nan)","\/\/ 10.0","Double.minimum(.nan, -25.0)","\/\/ -25.0","Double.minimum(.nan, .nan)","\/\/ nan"],"syntax":null},{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"type":"codeVoice","code":"minimum"},{"text":" method implements the ","type":"text"},{"type":"codeVoice","code":"minNum"},{"text":" operation defined by the","type":"text"},{"text":" ","type":"text"},{"type":"reference","isActive":true,"identifier":"http:\/\/ieeexplore.ieee.org\/servlet\/opac?punumber=4610933"},{"type":"text","text":"."}]}]}],"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Double\/minimum(_:_:)","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"patch":0,"minor":3},"metadata":{"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"minimum","kind":"identifier"},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"extendedModule":"Swift","modules":[{"name":"Compute","relatedModules":["Swift"]}],"title":"minimum(_:_:)","symbolKind":"method","role":"symbol","roleHeading":"Type Method","externalID":"s:SFsE7minimumyxx_xtFZ::SYNTHESIZED::s:Sd"},"sections":[],"abstract":[{"type":"text","text":"Returns the lesser of the two given values."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/double\/minimum(_:_:)"]}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Double/minimum(_:_:)":{"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Returns the lesser of the two given values."}],"url":"\/documentation\/compute\/double\/minimum(_:_:)","title":"minimum(_:_:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Double\/minimum(_:_:)","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"minimum","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Double/FloatingPoint-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Double\/FloatingPoint-Implementations","url":"\/documentation\/compute\/double\/floatingpoint-implementations","type":"topic","abstract":[],"role":"collectionGroup","title":"FloatingPoint Implementations","kind":"article"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Double":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Double","abstract":[{"text":"A double-precision, floating-point value type.","type":"text"}],"title":"Double","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Double","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"Double","kind":"identifier"}],"kind":"symbol","type":"topic","url":"\/documentation\/compute\/double"},"http://ieeexplore.ieee.org/servlet/opac?punumber=4610933":{"type":"link","identifier":"http:\/\/ieeexplore.ieee.org\/servlet\/opac?punumber=4610933","titleInlineContent":[{"text":"IEEE 754 specification","type":"text"}],"url":"http:\/\/ieeexplore.ieee.org\/servlet\/opac?punumber=4610933","title":"IEEE 754 specification"}}}