{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/GraphMatch"},"topicSections":[{"title":"Operators","identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/GraphMatch\/+(_:_:)"],"generated":true,"anchor":"Operators"},{"anchor":"Initializers","identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/GraphMatch\/init(arrayLiteral:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/GraphMatch\/init(nodes:edges:)"],"generated":true,"title":"Initializers"},{"title":"Instance Properties","generated":true,"identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/GraphMatch\/edges","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/GraphMatch\/endIndex","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/GraphMatch\/nodes","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/GraphMatch\/startIndex"],"anchor":"Instance-Properties"},{"title":"Instance Methods","generated":true,"anchor":"Instance-Methods","identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/GraphMatch\/makeIterator()"]},{"generated":true,"anchor":"Subscripts","title":"Subscripts","identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/GraphMatch\/subscript(_:)"]},{"title":"Type Aliases","identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/GraphMatch\/ArrayLiteralElement","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/GraphMatch\/Element"],"generated":true,"anchor":"Type-Aliases"},{"title":"Default Implementations","identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/GraphMatch\/BidirectionalCollection-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/GraphMatch\/Collection-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/GraphMatch\/RandomAccessCollection-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/GraphMatch\/Sequence-Implementations"],"anchor":"Default-Implementations","generated":true}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"GraphMatch"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Node"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Node","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","text":"_PatternMatchingGraphNode"}]}]}],"variants":[{"paths":["\/documentation\/compute\/graphmatch"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","relationshipsSections":[{"title":"Conforms To","identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BidirectionalCollection","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ExpressibleByArrayLiteral","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RandomAccessCollection","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence"],"kind":"relationships","type":"conformsTo"}],"metadata":{"symbolKind":"struct","title":"GraphMatch","role":"symbol","navigatorTitle":[{"text":"GraphMatch","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"GraphMatch"}],"externalID":"s:7Compute10GraphMatchV","roleHeading":"Structure","modules":[{"name":"Compute"}]},"sections":[],"abstract":[{"text":"Represents a matched subgraph in the DAG.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute"]]},"schemaVersion":{"patch":0,"minor":3,"major":0},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/GraphMatch/Sequence-Implementations":{"url":"\/documentation\/compute\/graphmatch\/sequence-implementations","type":"topic","kind":"article","role":"collectionGroup","title":"Sequence Implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/GraphMatch\/Sequence-Implementations","abstract":[]},"doc://com.swallow.documentation.Compute/documentation/Compute/GraphMatch/RandomAccessCollection-Implementations":{"role":"collectionGroup","kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/GraphMatch\/RandomAccessCollection-Implementations","abstract":[],"url":"\/documentation\/compute\/graphmatch\/randomaccesscollection-implementations","title":"RandomAccessCollection Implementations","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/ExpressibleByArrayLiteral":{"kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"ExpressibleByArrayLiteral","kind":"identifier"}],"title":"ExpressibleByArrayLiteral","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ExpressibleByArrayLiteral","abstract":[{"type":"text","text":"A type that can be initialized using an array literal."}],"url":"\/documentation\/compute\/expressiblebyarrayliteral","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ExpressibleByArrayLiteral"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/GraphMatch/init(arrayLiteral:)":{"type":"topic","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"text":"arrayLiteral","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ArrayLiteralElement","preciseIdentifier":"s:7Compute10GraphMatchV19ArrayLiteralElementa","kind":"typeIdentifier"},{"text":"...)","kind":"text"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/GraphMatch\/init(arrayLiteral:)","abstract":[{"text":"Creates an instance initialized with the given elements.","type":"text"}],"title":"init(arrayLiteral:)","role":"symbol","url":"\/documentation\/compute\/graphmatch\/init(arrayliteral:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence":{"url":"\/documentation\/compute\/sequence","navigatorTitle":[{"kind":"identifier","text":"Sequence"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence","title":"Sequence","kind":"symbol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Sequence","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"A type that provides sequential, iterated access to its elements."}]},"doc://com.swallow.documentation.Compute/documentation/Compute/GraphMatch/nodes":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/GraphMatch\/nodes","title":"nodes","role":"symbol","abstract":[],"type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"text":"nodes","kind":"identifier"},{"text":": [","kind":"text"},{"text":"Node","preciseIdentifier":"s:7Compute10GraphMatchV4Nodexmfp","kind":"typeIdentifier"},{"kind":"text","text":"]"}],"url":"\/documentation\/compute\/graphmatch\/nodes"},"doc://com.swallow.documentation.Compute/documentation/Compute/GraphMatch/ArrayLiteralElement":{"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/GraphMatch\/ArrayLiteralElement","type":"topic","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"ArrayLiteralElement"}],"url":"\/documentation\/compute\/graphmatch\/arrayliteralelement","abstract":[{"text":"The type of the elements of an array literal.","type":"text"}],"title":"GraphMatch.ArrayLiteralElement","navigatorTitle":[{"kind":"identifier","text":"ArrayLiteralElement"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/GraphMatch/init(nodes:edges:)":{"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/GraphMatch\/init(nodes:edges:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"nodes","kind":"externalParam"},{"text":": [","kind":"text"},{"text":"Node","kind":"typeIdentifier","preciseIdentifier":"s:7Compute10GraphMatchV4Nodexmfp"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"edges"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"Node","preciseIdentifier":"s:7Compute10GraphMatchV4Nodexmfp"},{"kind":"text","text":"."},{"text":"Edge","preciseIdentifier":"s:7Compute25_PatternMatchingGraphNodeP4EdgeQa","kind":"typeIdentifier"},{"text":"])","kind":"text"}],"kind":"symbol","title":"init(nodes:edges:)","role":"symbol","abstract":[],"url":"\/documentation\/compute\/graphmatch\/init(nodes:edges:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/GraphMatch/makeIterator()":{"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"makeIterator"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:s11AnyIteratorV","kind":"typeIdentifier","text":"AnyIterator"},{"kind":"text","text":"<"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:7Compute10GraphMatchV7Elementa"},{"text":">","kind":"text"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/GraphMatch\/makeIterator()","abstract":[{"text":"Returns an iterator over the elements of the collection.","type":"text"}],"title":"makeIterator()","role":"symbol","url":"\/documentation\/compute\/graphmatch\/makeiterator()"},"doc://com.swallow.documentation.Compute/documentation/Compute/GraphMatch/endIndex":{"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/GraphMatch\/endIndex","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"endIndex"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"kind":"symbol","title":"endIndex","role":"symbol","abstract":[{"text":"The collection’s “past the end” position—that is, the position one","type":"text"},{"type":"text","text":" "},{"type":"text","text":"greater than the last valid subscript argument."}],"url":"\/documentation\/compute\/graphmatch\/endindex"},"doc://com.swallow.documentation.Compute/documentation/Compute/GraphMatch/startIndex":{"type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"startIndex"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/GraphMatch\/startIndex","abstract":[{"type":"text","text":"The position of the first element in a nonempty collection."}],"title":"startIndex","role":"symbol","url":"\/documentation\/compute\/graphmatch\/startindex"},"doc://com.swallow.documentation.Compute/documentation/Compute/GraphMatch/Element":{"url":"\/documentation\/compute\/graphmatch\/element","role":"symbol","navigatorTitle":[{"text":"Element","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/GraphMatch\/Element","kind":"symbol","title":"GraphMatch.Element","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"text":"Element","kind":"identifier"}],"abstract":[{"type":"text","text":"A type representing the sequence’s elements."}],"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/GraphMatch/subscript(_:)":{"fragments":[{"kind":"keyword","text":"subscript"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7Compute10GraphMatchV7Elementa","text":"Element","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Accesses the element at the specified position."}],"title":"subscript(_:)","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/GraphMatch\/subscript(_:)","type":"topic","url":"\/documentation\/compute\/graphmatch\/subscript(_:)","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/BidirectionalCollection":{"navigatorTitle":[{"text":"BidirectionalCollection","kind":"identifier"}],"abstract":[{"text":"A collection that supports backward as well as forward traversal.","type":"text"}],"title":"BidirectionalCollection","kind":"symbol","url":"\/documentation\/compute\/bidirectionalcollection","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"BidirectionalCollection"}],"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BidirectionalCollection","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/GraphMatch/BidirectionalCollection-Implementations":{"type":"topic","title":"BidirectionalCollection Implementations","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/GraphMatch\/BidirectionalCollection-Implementations","kind":"article","role":"collectionGroup","url":"\/documentation\/compute\/graphmatch\/bidirectionalcollection-implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/GraphMatch/Collection-Implementations":{"title":"Collection Implementations","kind":"article","role":"collectionGroup","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/GraphMatch\/Collection-Implementations","abstract":[],"type":"topic","url":"\/documentation\/compute\/graphmatch\/collection-implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/Collection":{"kind":"symbol","role":"symbol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Collection"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection","url":"\/documentation\/compute\/collection","abstract":[{"type":"text","text":"A sequence whose elements can be traversed multiple times,"},{"text":" ","type":"text"},{"text":"nondestructively, and accessed by an indexed subscript.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Collection"}],"title":"Collection"},"doc://com.swallow.documentation.Compute/documentation/Compute/GraphMatch/edges":{"title":"edges","type":"topic","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"edges"},{"text":": [","kind":"text"},{"text":"Node","kind":"typeIdentifier","preciseIdentifier":"s:7Compute10GraphMatchV4Nodexmfp"},{"kind":"text","text":"."},{"text":"Edge","kind":"typeIdentifier","preciseIdentifier":"s:7Compute25_PatternMatchingGraphNodeP4EdgeQa"},{"text":"]","kind":"text"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/GraphMatch\/edges","url":"\/documentation\/compute\/graphmatch\/edges","abstract":[]},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/RandomAccessCollection":{"title":"RandomAccessCollection","abstract":[{"text":"A collection that supports efficient random-access index traversal.","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RandomAccessCollection","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RandomAccessCollection","url":"\/documentation\/compute\/randomaccesscollection","navigatorTitle":[{"text":"RandomAccessCollection","kind":"identifier"}],"kind":"symbol","role":"symbol","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/GraphMatch":{"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/compute\/graphmatch","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/GraphMatch","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"GraphMatch"}],"navigatorTitle":[{"kind":"identifier","text":"GraphMatch"}],"abstract":[{"text":"Represents a matched subgraph in the DAG.","type":"text"}],"title":"GraphMatch"},"doc://com.swallow.documentation.Compute/documentation/Compute/GraphMatch/+(_:_:)":{"type":"topic","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"+"},{"kind":"text","text":" "},{"kind":"text","text":"(`Self`"},{"kind":"text","text":", `Self`"},{"text":") -> ","kind":"text"},{"text":"GraphMatch","preciseIdentifier":"s:7Compute10GraphMatchV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Node","kind":"typeIdentifier"},{"text":">","kind":"text"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/GraphMatch\/+(_:_:)","abstract":[],"title":"+(_:_:)","role":"symbol","url":"\/documentation\/compute\/graphmatch\/+(_:_:)"}}}