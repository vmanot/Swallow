{"abstract":[{"type":"text","text":"Executes a closure on the sequence’s contiguous storage."}],"metadata":{"extendedModule":"Swift","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"withContiguousStorageIfAvailable"},{"kind":"text","text":"<"},{"text":"R","kind":"genericParameter"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","preciseIdentifier":"s:SR","text":"UnsafeBufferPointer"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:ST7ElementQa","text":"Element","kind":"typeIdentifier"},{"text":">) ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"R"},{"text":") ","kind":"text"},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"text":"R","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"modules":[{"name":"Compute","relatedModules":["Swift"]}],"externalID":"s:STsE32withContiguousStorageIfAvailableyqd__Sgqd__SRy7ElementQzGKXEKlF::SYNTHESIZED::s:s26AnyBidirectionalCollectionV","roleHeading":"Instance Method","symbolKind":"method","title":"withContiguousStorageIfAvailable(_:)","role":"symbol"},"variants":[{"paths":["\/documentation\/compute\/anybidirectionalcollection\/withcontiguousstorageifavailable(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyBidirectionalCollection\/withContiguousStorageIfAvailable(_:)","interfaceLanguage":"swift"},"kind":"symbol","schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyBidirectionalCollection","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyBidirectionalCollection\/Sequence-Implementations"]]},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"withContiguousStorageIfAvailable","kind":"identifier"},{"kind":"text","text":"<"},{"text":"R","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"text":"body","kind":"internalParam"},{"kind":"text","text":": ("},{"text":"UnsafeBufferPointer","kind":"typeIdentifier","preciseIdentifier":"s:SR","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeBufferPointer"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Element","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"text":">) ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"R"},{"text":"?","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"body","content":[{"type":"paragraph","inlineContent":[{"text":"A closure that receives an ","type":"text"},{"code":"UnsafeBufferPointer","type":"codeVoice"},{"type":"text","text":" to the"},{"text":" ","type":"text"},{"type":"text","text":"sequence’s contiguous storage."}]}]}]},{"kind":"content","content":[{"type":"heading","text":"Return Value","level":2,"anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The value returned from "},{"code":"body","type":"codeVoice"},{"type":"text","text":", unless the sequence doesn’t"},{"type":"text","text":" "},{"text":"support contiguous storage, in which case the method ignores ","type":"text"},{"type":"codeVoice","code":"body"},{"type":"text","text":" and"},{"text":" ","type":"text"},{"text":"returns ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"}]}]},{"content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"inlineContent":[{"type":"text","text":"This method calls "},{"type":"codeVoice","code":"body(buffer)"},{"text":", where ","type":"text"},{"type":"codeVoice","code":"buffer"},{"text":" is a pointer to the","type":"text"},{"text":" ","type":"text"},{"text":"collection’s contiguous storage. If the contiguous storage doesn’t exist,","type":"text"},{"type":"text","text":" "},{"text":"the collection creates it. If the collection doesn’t support an internal","type":"text"},{"type":"text","text":" "},{"type":"text","text":"representation in a form of contiguous storage, the method doesn’t call"},{"type":"text","text":" "},{"type":"codeVoice","code":"body"},{"type":"text","text":" — it immediately returns "},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"The optimizer can often eliminate bounds- and uniqueness-checking","type":"text"},{"text":" ","type":"text"},{"text":"within an algorithm. When that fails, however, invoking the same","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"algorithm on the "},{"code":"buffer","type":"codeVoice"},{"type":"text","text":" argument may let you trade safety for speed."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Successive calls to this method may provide a different pointer on each"},{"type":"text","text":" "},{"text":"call. Don’t store ","type":"text"},{"type":"codeVoice","code":"buffer"},{"text":" outside of this method.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"Collection"},{"type":"text","text":" that provides its own implementation of this method"},{"text":" ","type":"text"},{"type":"text","text":"must provide contiguous storage to its elements in the same order"},{"text":" ","type":"text"},{"type":"text","text":"as they appear in the collection. This guarantees that it’s possible to"},{"text":" ","type":"text"},{"text":"generate contiguous mutable storage to any of its subsequences by slicing","type":"text"},{"type":"text","text":" "},{"code":"buffer","type":"codeVoice"},{"text":" with a range formed from the distances to the subsequence’s","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"startIndex"},{"type":"text","text":" and "},{"code":"endIndex","type":"codeVoice"},{"type":"text","text":", respectively."}]}],"kind":"content"}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeBufferPointer":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeBufferPointer","abstract":[{"type":"text","text":"A nonowning collection interface to a buffer of"},{"type":"text","text":" "},{"text":"elements stored contiguously in memory.","type":"text"}],"role":"symbol","type":"topic","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UnsafeBufferPointer","kind":"identifier"}],"title":"UnsafeBufferPointer","navigatorTitle":[{"kind":"identifier","text":"UnsafeBufferPointer"}],"url":"\/documentation\/compute\/unsafebufferpointer"},"doc://com.swallow.documentation.Compute/documentation/Compute/AnyBidirectionalCollection/withContiguousStorageIfAvailable(_:)":{"title":"withContiguousStorageIfAvailable(_:)","url":"\/documentation\/compute\/anybidirectionalcollection\/withcontiguousstorageifavailable(_:)","type":"topic","role":"symbol","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"withContiguousStorageIfAvailable"},{"text":"<","kind":"text"},{"text":"R","kind":"genericParameter"},{"kind":"text","text":">(("},{"text":"UnsafeBufferPointer","kind":"typeIdentifier","preciseIdentifier":"s:SR"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:ST7ElementQa"},{"text":">) ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"R","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"rethrows"},{"text":" -> ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyBidirectionalCollection\/withContiguousStorageIfAvailable(_:)","abstract":[{"type":"text","text":"Executes a closure on the sequence’s contiguous storage."}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence/Element":{"type":"topic","required":true,"abstract":[{"type":"text","text":"A type representing the sequence’s elements."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"symbol","url":"\/documentation\/compute\/sequence\/element","role":"symbol","title":"Element","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/AnyBidirectionalCollection":{"abstract":[{"text":"A type-erased wrapper over any collection with indices that","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"support bidirectional traversal."}],"navigatorTitle":[{"text":"AnyBidirectionalCollection","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyBidirectionalCollection","title":"AnyBidirectionalCollection","kind":"symbol","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"AnyBidirectionalCollection","kind":"identifier"}],"type":"topic","url":"\/documentation\/compute\/anybidirectionalcollection"},"doc://com.swallow.documentation.Compute/documentation/Compute/AnyBidirectionalCollection/Sequence-Implementations":{"role":"collectionGroup","title":"Sequence Implementations","type":"topic","kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyBidirectionalCollection\/Sequence-Implementations","abstract":[],"url":"\/documentation\/compute\/anybidirectionalcollection\/sequence-implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"}}}