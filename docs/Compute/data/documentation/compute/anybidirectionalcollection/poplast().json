{"schemaVersion":{"major":0,"patch":0,"minor":3},"metadata":{"conformance":{"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Self.SubSequence"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"title":"popLast()","roleHeading":"Instance Method","symbolKind":"method","extendedModule":"Swift","modules":[{"name":"Compute","relatedModules":["Swift"]}],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"popLast","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:ST7ElementQa","text":"Element","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"externalID":"s:SKs11SubSequenceQzRszrlE7popLast7ElementQzSgyF::SYNTHESIZED::s:s26AnyBidirectionalCollectionV"},"kind":"symbol","identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyBidirectionalCollection\/popLast()","interfaceLanguage":"swift"},"sections":[],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"mutating"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"popLast"},{"kind":"text","text":"() -> "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","text":"Element","preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"content":[{"text":"Return Value","type":"heading","level":2,"anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The last element of the collection if the collection has one"},{"type":"text","text":" "},{"type":"text","text":"or more elements; otherwise, "},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."}]}],"kind":"content"},{"kind":"content","content":[{"level":2,"text":"Discussion","anchor":"discussion","type":"heading"},{"inlineContent":[{"type":"text","text":"You can use "},{"type":"codeVoice","code":"popLast()"},{"type":"text","text":" to remove the last element of a collection that"},{"text":" ","type":"text"},{"type":"text","text":"might be empty. The "},{"type":"codeVoice","code":"removeLast()"},{"type":"text","text":" method must be used only on a"},{"type":"text","text":" "},{"text":"nonempty collection.","type":"text"}],"type":"paragraph"},{"content":[{"type":"paragraph","inlineContent":[{"text":"O(1)","type":"text"}]}],"style":"note","name":"Complexity","type":"aside"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/anybidirectionalcollection\/poplast()"]}],"abstract":[{"text":"Removes and returns the last element of the collection.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyBidirectionalCollection","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyBidirectionalCollection\/BidirectionalCollection-Implementations"]]},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/AnyBidirectionalCollection":{"abstract":[{"text":"A type-erased wrapper over any collection with indices that","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"support bidirectional traversal."}],"navigatorTitle":[{"text":"AnyBidirectionalCollection","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyBidirectionalCollection","title":"AnyBidirectionalCollection","kind":"symbol","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"AnyBidirectionalCollection","kind":"identifier"}],"type":"topic","url":"\/documentation\/compute\/anybidirectionalcollection"},"doc://com.swallow.documentation.Compute/documentation/Compute/AnyBidirectionalCollection/BidirectionalCollection-Implementations":{"title":"BidirectionalCollection Implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyBidirectionalCollection\/BidirectionalCollection-Implementations","type":"topic","abstract":[],"kind":"article","role":"collectionGroup","url":"\/documentation\/compute\/anybidirectionalcollection\/bidirectionalcollection-implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence/Element":{"type":"topic","required":true,"abstract":[{"type":"text","text":"A type representing the sequenceâ€™s elements."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"symbol","url":"\/documentation\/compute\/sequence\/element","role":"symbol","title":"Element","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/AnyBidirectionalCollection/popLast()":{"type":"topic","url":"\/documentation\/compute\/anybidirectionalcollection\/poplast()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"popLast","kind":"identifier"},{"kind":"text","text":"() -> "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyBidirectionalCollection\/popLast()","title":"popLast()","abstract":[{"type":"text","text":"Removes and returns the last element of the collection."}],"role":"symbol","conformance":{"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" is "},{"code":"Self.SubSequence","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"kind":"symbol"}}}