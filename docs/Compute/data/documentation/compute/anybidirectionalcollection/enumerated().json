{"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"enumerated","kind":"identifier"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:s18EnumeratedSequenceV","text":"EnumeratedSequence","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"extendedModule":"Swift","symbolKind":"method","role":"symbol","roleHeading":"Instance Method","externalID":"s:STsE10enumerateds18EnumeratedSequenceVyxGyF::SYNTHESIZED::s:s26AnyBidirectionalCollectionV","modules":[{"name":"Compute","relatedModules":["Swift"]}],"title":"enumerated()"},"sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"enumerated"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/EnumeratedSequence","text":"EnumeratedSequence","preciseIdentifier":"s:s18EnumeratedSequenceV"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}],"platforms":["macOS"],"languages":["swift"]}]},{"content":[{"text":"Return Value","level":2,"type":"heading","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"text":"A sequence of pairs enumerating the sequence.","type":"text"}]}],"kind":"content"},{"kind":"content","content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"inlineContent":[{"type":"text","text":"This example enumerates the characters of the string “Swift” and prints"},{"type":"text","text":" "},{"type":"text","text":"each character along with its place in the string."}],"type":"paragraph"},{"code":["for (n, c) in \"Swift\".enumerated() {","    print(\"\\(n): '\\(c)'\")","}","\/\/ Prints \"0: 'S'\"","\/\/ Prints \"1: 'w'\"","\/\/ Prints \"2: 'i'\"","\/\/ Prints \"3: 'f'\"","\/\/ Prints \"4: 't'\""],"type":"codeListing","syntax":null},{"type":"paragraph","inlineContent":[{"text":"When you enumerate a collection, the integer part of each pair is a counter","type":"text"},{"type":"text","text":" "},{"text":"for the enumeration, but is not necessarily the index of the paired value.","type":"text"},{"text":" ","type":"text"},{"text":"These counters can be used as indices only in instances of zero-based,","type":"text"},{"text":" ","type":"text"},{"text":"integer-indexed collections, such as ","type":"text"},{"type":"codeVoice","code":"Array"},{"text":" and ","type":"text"},{"code":"ContiguousArray","type":"codeVoice"},{"text":". For","type":"text"},{"text":" ","type":"text"},{"text":"other collections the counters may be out of range or of the wrong type","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"to use as an index. To iterate over the elements of a collection with its"},{"text":" ","type":"text"},{"type":"text","text":"indices, use the "},{"code":"zip(_:_:)","type":"codeVoice"},{"text":" function.","type":"text"}]},{"inlineContent":[{"type":"text","text":"This example iterates over the indices and elements of a set, building a"},{"text":" ","type":"text"},{"text":"list consisting of indices of names with five or fewer letters.","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":["let names: Set = [\"Sofia\", \"Camilla\", \"Martina\", \"Mateo\", \"Nicolás\"]","var shorterIndices: [Set<String>.Index] = []","for (i, name) in zip(names.indices, names) {","    if name.count <= 5 {","        shorterIndices.append(i)","    }","}"]},{"type":"paragraph","inlineContent":[{"text":"Now that the ","type":"text"},{"type":"codeVoice","code":"shorterIndices"},{"type":"text","text":" array holds the indices of the shorter"},{"type":"text","text":" "},{"text":"names in the ","type":"text"},{"type":"codeVoice","code":"names"},{"type":"text","text":" set, you can use those indices to access elements in"},{"text":" ","type":"text"},{"text":"the set.","type":"text"}]},{"type":"codeListing","syntax":null,"code":["for i in shorterIndices {","    print(names[i])","}","\/\/ Prints \"Sofia\"","\/\/ Prints \"Mateo\""]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"O(1)"}]}],"style":"note","name":"Complexity","type":"aside"}]}],"abstract":[{"text":"Returns a sequence of pairs (","type":"text"},{"type":"emphasis","inlineContent":[{"text":"n","type":"text"}]},{"text":", ","type":"text"},{"inlineContent":[{"type":"text","text":"x"}],"type":"emphasis"},{"text":"), where ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"n","type":"text"}]},{"type":"text","text":" represents a"},{"type":"text","text":" "},{"text":"consecutive integer starting at zero and ","type":"text"},{"inlineContent":[{"text":"x","type":"text"}],"type":"emphasis"},{"text":" represents an element of","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the sequence."}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyBidirectionalCollection","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyBidirectionalCollection\/Sequence-Implementations"]]},"kind":"symbol","identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyBidirectionalCollection\/enumerated()","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/anybidirectionalcollection\/enumerated()"]}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/AnyBidirectionalCollection":{"abstract":[{"text":"A type-erased wrapper over any collection with indices that","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"support bidirectional traversal."}],"navigatorTitle":[{"text":"AnyBidirectionalCollection","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyBidirectionalCollection","title":"AnyBidirectionalCollection","kind":"symbol","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"AnyBidirectionalCollection","kind":"identifier"}],"type":"topic","url":"\/documentation\/compute\/anybidirectionalcollection"},"doc://com.swallow.documentation.Compute/documentation/Compute/EnumeratedSequence":{"url":"\/documentation\/compute\/enumeratedsequence","navigatorTitle":[{"text":"EnumeratedSequence","kind":"identifier"}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"EnumeratedSequence"}],"abstract":[{"text":"An enumeration of the elements of a sequence or collection.","type":"text"}],"type":"topic","title":"EnumeratedSequence","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/EnumeratedSequence"},"doc://com.swallow.documentation.Compute/documentation/Compute/AnyBidirectionalCollection/enumerated()":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"enumerated","kind":"identifier"},{"kind":"text","text":"() -> "},{"text":"EnumeratedSequence","kind":"typeIdentifier","preciseIdentifier":"s:s18EnumeratedSequenceV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}],"type":"topic","role":"symbol","url":"\/documentation\/compute\/anybidirectionalcollection\/enumerated()","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyBidirectionalCollection\/enumerated()","title":"enumerated()","abstract":[{"text":"Returns a sequence of pairs (","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"n"}]},{"text":", ","type":"text"},{"inlineContent":[{"text":"x","type":"text"}],"type":"emphasis"},{"type":"text","text":"), where "},{"inlineContent":[{"type":"text","text":"n"}],"type":"emphasis"},{"type":"text","text":" represents a"},{"type":"text","text":" "},{"text":"consecutive integer starting at zero and ","type":"text"},{"inlineContent":[{"type":"text","text":"x"}],"type":"emphasis"},{"text":" represents an element of","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the sequence."}]},"doc://com.swallow.documentation.Compute/documentation/Compute/AnyBidirectionalCollection/Sequence-Implementations":{"role":"collectionGroup","title":"Sequence Implementations","type":"topic","kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyBidirectionalCollection\/Sequence-Implementations","abstract":[],"url":"\/documentation\/compute\/anybidirectionalcollection\/sequence-implementations"}}}