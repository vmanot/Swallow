{"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"index"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"i"},{"text":": ","kind":"text"},{"text":"AnyBidirectionalCollection","kind":"typeIdentifier","preciseIdentifier":"s:s26AnyBidirectionalCollectionV","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyBidirectionalCollection"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Element"},{"text":">.","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyBidirectionalCollection\/Index","kind":"typeIdentifier","preciseIdentifier":"s:s26AnyBidirectionalCollectionV5Indexa","text":"Index"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"offsetBy"},{"text":" ","kind":"text"},{"text":"n","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","text":"Int","preciseIdentifier":"s:Si"},{"text":", ","kind":"text"},{"text":"limitedBy","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"limit","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AnyBidirectionalCollection","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyBidirectionalCollection","preciseIdentifier":"s:s26AnyBidirectionalCollectionV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Element"},{"text":">.","kind":"text"},{"text":"Index","preciseIdentifier":"s:s26AnyBidirectionalCollectionV5Indexa","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyBidirectionalCollection\/Index","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyBidirectionalCollection","preciseIdentifier":"s:s26AnyBidirectionalCollectionV","text":"AnyBidirectionalCollection"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">."},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyBidirectionalCollection\/Index","preciseIdentifier":"s:s26AnyBidirectionalCollectionV5Indexa","text":"Index"},{"text":"?","kind":"text"}]}]},{"parameters":[{"name":"i","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A valid index of the collection."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A valid index of the collection to use as a limit. If"},{"text":" ","type":"text"},{"type":"codeVoice","code":"distance > 0"},{"text":", a limit that is less than ","type":"text"},{"type":"codeVoice","code":"i"},{"text":" has no effect.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Likewise, if "},{"type":"codeVoice","code":"distance < 0"},{"type":"text","text":", a limit that is greater than "},{"code":"i","type":"codeVoice"},{"type":"text","text":" has no"},{"type":"text","text":" "},{"text":"effect.","type":"text"}]}],"name":"limit"}],"kind":"parameters"},{"kind":"content","content":[{"level":2,"type":"heading","anchor":"return-value","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"An index offset by "},{"code":"distance","type":"codeVoice"},{"text":" from the index ","type":"text"},{"type":"codeVoice","code":"i"},{"type":"text","text":", unless that"},{"type":"text","text":" "},{"type":"text","text":"index would be beyond "},{"type":"codeVoice","code":"limit"},{"type":"text","text":" in the direction of movement. In that"},{"type":"text","text":" "},{"type":"text","text":"case, the method returns "},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."}]}]},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"inlineContent":[{"text":"The following example obtains an index advanced four positions from a","type":"text"},{"type":"text","text":" "},{"text":"string’s starting index and then prints the character at that position.","type":"text"},{"type":"text","text":" "},{"text":"The operation doesn’t require going beyond the limiting ","type":"text"},{"type":"codeVoice","code":"s.endIndex"},{"type":"text","text":" "},{"type":"text","text":"value, so it succeeds."}],"type":"paragraph"},{"syntax":null,"type":"codeListing","code":["let s = \"Swift\"","if let i = s.index(s.startIndex, offsetBy: 4, limitedBy: s.endIndex) {","    print(s[i])","}","\/\/ Prints \"t\""]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The next example attempts to retrieve an index six positions from"},{"type":"text","text":" "},{"code":"s.startIndex","type":"codeVoice"},{"type":"text","text":" but fails, because that distance is beyond the index"},{"type":"text","text":" "},{"text":"passed as ","type":"text"},{"type":"codeVoice","code":"limit"},{"type":"text","text":"."}]},{"type":"codeListing","syntax":null,"code":["let j = s.index(s.startIndex, offsetBy: 6, limitedBy: s.endIndex)","print(j)","\/\/ Prints \"nil\""]},{"type":"paragraph","inlineContent":[{"text":"The value passed as ","type":"text"},{"code":"distance","type":"codeVoice"},{"type":"text","text":" must not offset "},{"code":"i","type":"codeVoice"},{"text":" beyond the bounds of","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the collection, unless the index passed as "},{"type":"codeVoice","code":"limit"},{"type":"text","text":" prevents offsetting"},{"type":"text","text":" "},{"type":"text","text":"beyond those bounds."}]},{"content":[{"inlineContent":[{"text":"O(1) if the collection conforms to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"RandomAccessCollection"},{"type":"text","text":"; otherwise, O("},{"inlineContent":[{"type":"text","text":"k"}],"type":"emphasis"},{"type":"text","text":"), where "},{"type":"emphasis","inlineContent":[{"type":"text","text":"k"}]},{"type":"text","text":" is the absolute"},{"type":"text","text":" "},{"text":"value of ","type":"text"},{"type":"codeVoice","code":"distance"},{"type":"text","text":"."}],"type":"paragraph"}],"type":"aside","style":"note","name":"Complexity"}]}],"sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"modules":[{"name":"Compute","relatedModules":["Swift"]}],"role":"symbol","roleHeading":"Instance Method","title":"index(_:offsetBy:limitedBy:)","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"index","kind":"identifier"},{"text":"(","kind":"text"},{"text":"AnyBidirectionalCollection","kind":"typeIdentifier","preciseIdentifier":"s:s26AnyBidirectionalCollectionV"},{"kind":"text","text":"<"},{"text":"Element","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"text":"Index","kind":"typeIdentifier","preciseIdentifier":"s:s26AnyBidirectionalCollectionV5Indexa"},{"text":", ","kind":"text"},{"text":"offsetBy","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"text":"limitedBy","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s26AnyBidirectionalCollectionV","text":"AnyBidirectionalCollection","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">."},{"preciseIdentifier":"s:s26AnyBidirectionalCollectionV5Indexa","text":"Index","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:s26AnyBidirectionalCollectionV","text":"AnyBidirectionalCollection","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Element"},{"text":">.","kind":"text"},{"text":"Index","preciseIdentifier":"s:s26AnyBidirectionalCollectionV5Indexa","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"externalID":"s:s26AnyBidirectionalCollectionV5index_8offsetBy07limitedF0s0A5IndexVSgAG_SiAGtF","extendedModule":"Swift"},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyBidirectionalCollection","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyBidirectionalCollection\/BidirectionalCollection-Implementations"]]},"kind":"symbol","identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyBidirectionalCollection\/index(_:offsetBy:limitedBy:)","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/anybidirectionalcollection\/index(_:offsetby:limitedby:)"]}],"abstract":[{"type":"text","text":"Returns an index that is the specified distance from the given index,"},{"type":"text","text":" "},{"type":"text","text":"unless that distance is beyond a given limiting index."}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/AnyBidirectionalCollection":{"abstract":[{"text":"A type-erased wrapper over any collection with indices that","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"support bidirectional traversal."}],"navigatorTitle":[{"text":"AnyBidirectionalCollection","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyBidirectionalCollection","title":"AnyBidirectionalCollection","kind":"symbol","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"AnyBidirectionalCollection","kind":"identifier"}],"type":"topic","url":"\/documentation\/compute\/anybidirectionalcollection"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","abstract":[{"type":"text","text":"A signed integer value type."}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Int","kind":"identifier"}],"navigatorTitle":[{"text":"Int","kind":"identifier"}],"title":"Int","url":"\/documentation\/compute\/int","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/AnyBidirectionalCollection/Index":{"title":"AnyBidirectionalCollection.Index","fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Index"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyBidirectionalCollection\/Index","type":"topic","abstract":[{"text":"A type that represents a position in the collection.","type":"text"}],"kind":"symbol","role":"symbol","navigatorTitle":[{"text":"Index","kind":"identifier"}],"url":"\/documentation\/compute\/anybidirectionalcollection\/index"},"doc://com.swallow.documentation.Compute/documentation/Compute/AnyBidirectionalCollection/index(_:offsetBy:limitedBy:)":{"url":"\/documentation\/compute\/anybidirectionalcollection\/index(_:offsetby:limitedby:)","kind":"symbol","abstract":[{"type":"text","text":"Returns an index that is the specified distance from the given index,"},{"type":"text","text":" "},{"text":"unless that distance is beyond a given limiting index.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyBidirectionalCollection\/index(_:offsetBy:limitedBy:)","type":"topic","title":"index(_:offsetBy:limitedBy:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"index","kind":"identifier"},{"kind":"text","text":"("},{"text":"AnyBidirectionalCollection","preciseIdentifier":"s:s26AnyBidirectionalCollectionV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"kind":"text","text":">."},{"preciseIdentifier":"s:s26AnyBidirectionalCollectionV5Indexa","text":"Index","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"offsetBy","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"limitedBy"},{"text":": ","kind":"text"},{"text":"AnyBidirectionalCollection","preciseIdentifier":"s:s26AnyBidirectionalCollectionV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"preciseIdentifier":"s:s26AnyBidirectionalCollectionV5Indexa","text":"Index","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"AnyBidirectionalCollection","preciseIdentifier":"s:s26AnyBidirectionalCollectionV"},{"text":"<","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"kind":"text","text":">."},{"text":"Index","kind":"typeIdentifier","preciseIdentifier":"s:s26AnyBidirectionalCollectionV5Indexa"},{"kind":"text","text":"?"}]},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/AnyBidirectionalCollection/BidirectionalCollection-Implementations":{"title":"BidirectionalCollection Implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyBidirectionalCollection\/BidirectionalCollection-Implementations","type":"topic","abstract":[],"kind":"article","role":"collectionGroup","url":"\/documentation\/compute\/anybidirectionalcollection\/bidirectionalcollection-implementations"}}}