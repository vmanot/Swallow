{"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/KeyedEncodingContainer"]]},"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/KeyedEncodingContainer\/encodeIfPresent(_:forKey:)-3rw9e","interfaceLanguage":"swift"},"kind":"symbol","schemaVersion":{"patch":0,"major":0,"minor":3},"abstract":[{"type":"text","text":"Encodes the given value for the given key if it is not "},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"mutating"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"encodeIfPresent","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"value","kind":"internalParam"},{"kind":"text","text":": "},{"text":"UInt32","kind":"typeIdentifier","preciseIdentifier":"s:s6UInt32V","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt32"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"forKey"},{"text":" ","kind":"text"},{"text":"key","kind":"internalParam"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/KeyedEncodingContainer","kind":"typeIdentifier","preciseIdentifier":"s:s22KeyedEncodingContainerV","text":"KeyedEncodingContainer"},{"text":"<","kind":"text"},{"text":"K","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"kind":"typeIdentifier","text":"Key"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"}],"platforms":["macOS"],"languages":["swift"]}]},{"parameters":[{"name":"value","content":[{"inlineContent":[{"type":"text","text":"The value to encode."}],"type":"paragraph"}]},{"name":"key","content":[{"type":"paragraph","inlineContent":[{"text":"The key to associate the value with.","type":"text"}]}]}],"kind":"parameters"},{"kind":"content","content":[{"anchor":"discussion","type":"heading","level":2,"text":"Discussion"},{"type":"aside","style":"note","content":[{"inlineContent":[{"text":"","type":"text"},{"code":"EncodingError.invalidValue","type":"codeVoice"},{"text":" if the given value is invalid in","type":"text"},{"text":" ","type":"text"},{"text":"the current context for this format.","type":"text"}],"type":"paragraph"}],"name":"Throws"}]}],"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"encodeIfPresent"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UInt32","preciseIdentifier":"s:s6UInt32V"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"forKey"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s22KeyedEncodingContainerV","text":"KeyedEncodingContainer","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"K","kind":"typeIdentifier"},{"kind":"text","text":">."},{"text":"Key","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"}],"role":"symbol","roleHeading":"Instance Method","title":"encodeIfPresent(_:forKey:)","externalID":"s:s22KeyedEncodingContainerV15encodeIfPresent_6forKeyys6UInt32VSg_xtKF","modules":[{"name":"Compute"}],"symbolKind":"method"},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/keyedencodingcontainer\/encodeifpresent(_:forkey:)-3rw9e"]}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/KeyedEncodingContainer":{"navigatorTitle":[{"text":"KeyedEncodingContainer","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/KeyedEncodingContainer","url":"\/documentation\/compute\/keyedencodingcontainer","abstract":[{"text":"A concrete container that provides a view into an encoderâ€™s storage, making","type":"text"},{"type":"text","text":" "},{"text":"the encoded properties of an encodable type accessible by keys.","type":"text"}],"title":"KeyedEncodingContainer","type":"topic","role":"symbol","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"KeyedEncodingContainer","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt32":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt32","title":"UInt32","abstract":[{"type":"text","text":"A 32-bit unsigned integer value"},{"type":"text","text":" "},{"text":"type.","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"UInt32","kind":"identifier"}],"url":"\/documentation\/compute\/uint32","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"UInt32","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/KeyedEncodingContainer/encodeIfPresent(_:forKey:)-3rw9e":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/KeyedEncodingContainer\/encodeIfPresent(_:forKey:)-3rw9e","url":"\/documentation\/compute\/keyedencodingcontainer\/encodeifpresent(_:forkey:)-3rw9e","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"encodeIfPresent","kind":"identifier"},{"kind":"text","text":"("},{"text":"UInt32","kind":"typeIdentifier","preciseIdentifier":"s:s6UInt32V"},{"text":"?, ","kind":"text"},{"text":"forKey","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"KeyedEncodingContainer","preciseIdentifier":"s:s22KeyedEncodingContainerV"},{"text":"<","kind":"text"},{"text":"K","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"text":"Key","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"type":"topic","abstract":[{"type":"text","text":"Encodes the given value for the given key if it is not "},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"}],"role":"symbol","title":"encodeIfPresent(_:forKey:)","kind":"symbol"}}}