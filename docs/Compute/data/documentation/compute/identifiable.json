{"abstract":[{"text":"A class of types whose instances hold the value of an entity with stable","type":"text"},{"text":" ","type":"text"},{"text":"identity.","type":"text"}],"metadata":{"symbolKind":"protocol","roleHeading":"Protocol","platforms":[{"unavailable":false,"deprecated":false,"introducedAt":"13.0","beta":false,"name":"iOS"},{"unavailable":false,"deprecated":false,"name":"macOS","beta":false,"introducedAt":"10.15"},{"name":"tvOS","introducedAt":"13.0","unavailable":false,"deprecated":false,"beta":false},{"name":"watchOS","deprecated":false,"beta":false,"unavailable":false,"introducedAt":"6.0"}],"title":"Identifiable","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Identifiable","kind":"identifier"}],"role":"symbol","modules":[{"name":"Compute"}],"navigatorTitle":[{"text":"Identifiable","kind":"identifier"}],"externalID":"s:s12IdentifiableP"},"sections":[],"relationshipsSections":[{"kind":"relationships","identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/PrimitiveGraphPatternExpression","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/TreeRepresentable"],"type":"inheritedBy","title":"Inherited By"},{"identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyIdentifiableTreeNode","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/GraphPatternBuilder\/ConcatenationPattern","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/GraphPatternBuilder\/DestinationOfPattern","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/GraphPatternBuilder\/LeafNodesPattern","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/GraphPatternBuilder\/MatchAnyEdgePattern","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/GraphPatternBuilder\/MatchAnyPattern","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/GraphPatternBuilder\/NegationPattern","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/GraphPatternBuilder\/NodePattern","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/GraphPatternBuilder\/SequencePattern","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/GraphPatternBuilder\/SourceOfPattern","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/GraphPatternBuilder\/WildcardPattern","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Matrix","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Never","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ReferenceArrayTree"],"type":"conformingTypes","title":"Conforming Types","kind":"relationships"}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute"]]},"topicSections":[{"generated":true,"anchor":"Associated-Types","title":"Associated Types","identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Identifiable\/ID-swift.associatedtype"]},{"anchor":"Instance-Properties","generated":true,"identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Identifiable\/id-8t2ws"],"title":"Instance Properties"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Identifiable"},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"Identifiable","kind":"identifier"},{"text":"<","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Identifiable\/ID-swift.associatedtype","kind":"typeIdentifier","text":"ID","preciseIdentifier":"s:s12IdentifiableP2IDQa"},{"text":">","kind":"text"}]}],"kind":"declarations"},{"content":[{"level":2,"type":"heading","text":"Overview","anchor":"overview"},{"type":"paragraph","inlineContent":[{"text":"Use the ","type":"text"},{"code":"Identifiable","type":"codeVoice"},{"type":"text","text":" protocol to provide a stable notion of identity to a"},{"type":"text","text":" "},{"type":"text","text":"class or value type. For example, you could define a "},{"code":"User","type":"codeVoice"},{"type":"text","text":" type with an "},{"type":"codeVoice","code":"id"},{"text":" ","type":"text"},{"type":"text","text":"property that is stable across your app and your app’s database storage."},{"text":" ","type":"text"},{"type":"text","text":"You could use the "},{"code":"id","type":"codeVoice"},{"text":" property to identify a particular user even if other","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"data fields change, such as the user’s name."}]},{"inlineContent":[{"code":"Identifiable","type":"codeVoice"},{"type":"text","text":" leaves the duration and scope of the identity unspecified."},{"text":" ","type":"text"},{"text":"Identities can have any of the following characteristics:","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Guaranteed always unique, like UUIDs.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Persistently unique per environment, like database record keys."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Unique for the lifetime of a process, like global incrementing integers.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Unique for the lifetime of an object, like object identifiers."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Unique within the current collection, like collection indices."}],"type":"paragraph"}]}]},{"inlineContent":[{"type":"text","text":"It’s up to both the conformer and the receiver of the protocol to document"},{"text":" ","type":"text"},{"text":"the nature of the identity.","type":"text"}],"type":"paragraph"},{"level":1,"text":"Conforming to the Identifiable Protocol","type":"heading","anchor":"Conforming-to-the-Identifiable-Protocol"},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Identifiable"},{"type":"text","text":" provides a default implementation for class types (using"},{"text":" ","type":"text"},{"type":"codeVoice","code":"ObjectIdentifier"},{"type":"text","text":"), which is only guaranteed to remain unique for the"},{"type":"text","text":" "},{"type":"text","text":"lifetime of an object. If an object has a stronger notion of identity, it"},{"text":" ","type":"text"},{"type":"text","text":"may be appropriate to provide a custom implementation."}]}],"kind":"content"}],"variants":[{"paths":["\/documentation\/compute\/identifiable"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Identifiable/ID-swift.associatedtype":{"required":true,"url":"\/documentation\/compute\/identifiable\/id-swift.associatedtype","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Identifiable\/ID-swift.associatedtype","role":"symbol","fragments":[{"text":"associatedtype","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ID"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SH","text":"Hashable"}],"type":"topic","title":"ID","abstract":[{"text":"A type representing the stable identity of the entity associated with","type":"text"},{"text":" ","type":"text"},{"text":"an instance.","type":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/TreeRepresentable":{"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/TreeRepresentable","abstract":[{"type":"text","text":"A type that can be represented as a tree."}],"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"TreeRepresentable","kind":"identifier"}],"navigatorTitle":[{"text":"TreeRepresentable","kind":"identifier"}],"title":"TreeRepresentable","kind":"symbol","url":"\/documentation\/compute\/treerepresentable"},"doc://com.swallow.documentation.Compute/documentation/Compute/GraphPatternBuilder/MatchAnyPattern":{"role":"symbol","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"MatchAnyPattern","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"MatchAnyPattern"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/GraphPatternBuilder\/MatchAnyPattern","abstract":[],"title":"GraphPatternBuilder.MatchAnyPattern","url":"\/documentation\/compute\/graphpatternbuilder\/matchanypattern"},"doc://com.swallow.documentation.Compute/documentation/Compute/Identifiable":{"url":"\/documentation\/compute\/identifiable","kind":"symbol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Identifiable"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Identifiable"}],"abstract":[{"text":"A class of types whose instances hold the value of an entity with stable","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"identity."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Identifiable","title":"Identifiable"},"doc://com.swallow.documentation.Compute/documentation/Compute/GraphPatternBuilder/DestinationOfPattern":{"url":"\/documentation\/compute\/graphpatternbuilder\/destinationofpattern","kind":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DestinationOfPattern"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"DestinationOfPattern"}],"abstract":[{"type":"text","text":"A pattern that matches the destination node of an edge matched by a subpattern."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/GraphPatternBuilder\/DestinationOfPattern","title":"GraphPatternBuilder.DestinationOfPattern"},"doc://com.swallow.documentation.Compute/documentation/Compute/GraphPatternBuilder/MatchAnyEdgePattern":{"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"MatchAnyEdgePattern","kind":"identifier"}],"title":"GraphPatternBuilder.MatchAnyEdgePattern","url":"\/documentation\/compute\/graphpatternbuilder\/matchanyedgepattern","abstract":[],"type":"topic","navigatorTitle":[{"text":"MatchAnyEdgePattern","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/GraphPatternBuilder\/MatchAnyEdgePattern"},"doc://com.swallow.documentation.Compute/documentation/Compute/GraphPatternBuilder/WildcardPattern":{"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/GraphPatternBuilder\/WildcardPattern","abstract":[{"text":"A pattern that matches a range of nodes as a wildcard.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"WildcardPattern","kind":"identifier"}],"navigatorTitle":[{"text":"WildcardPattern","kind":"identifier"}],"title":"GraphPatternBuilder.WildcardPattern","kind":"symbol","url":"\/documentation\/compute\/graphpatternbuilder\/wildcardpattern"},"doc://com.swallow.documentation.Compute/documentation/Compute/GraphPatternBuilder/SequencePattern":{"kind":"symbol","abstract":[{"text":"A pattern that matches a sequence of nodes based on an array of subpatterns.","type":"text"}],"url":"\/documentation\/compute\/graphpatternbuilder\/sequencepattern","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/GraphPatternBuilder\/SequencePattern","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SequencePattern"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"SequencePattern"}],"title":"GraphPatternBuilder.SequencePattern"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Identifiable/id-8t2ws":{"title":"id","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"id","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"ID","preciseIdentifier":"s:s12IdentifiableP2IDQa"}],"abstract":[{"text":"The stable identity of the entity associated with this instance.","type":"text"}],"url":"\/documentation\/compute\/identifiable\/id-8t2ws","type":"topic","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Identifiable\/id-8t2ws","required":true,"defaultImplementations":1},"doc://com.swallow.documentation.Compute/documentation/Compute/Never":{"title":"Never","navigatorTitle":[{"kind":"identifier","text":"Never"}],"abstract":[{"type":"text","text":"A type that has no values and can’t be constructed."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Never"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Never","role":"symbol","type":"topic","url":"\/documentation\/compute\/never"},"doc://com.swallow.documentation.Compute/documentation/Compute/PrimitiveGraphPatternExpression":{"url":"\/documentation\/compute\/primitivegraphpatternexpression","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"PrimitiveGraphPatternExpression"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"PrimitiveGraphPatternExpression"}],"title":"PrimitiveGraphPatternExpression","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/PrimitiveGraphPatternExpression","abstract":[{"type":"text","text":"A primitive pattern expression for matching subgraphs in a DAG."}]},"doc://com.swallow.documentation.Compute/documentation/Compute/ReferenceArrayTree":{"abstract":[],"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ReferenceArrayTree"}],"title":"ReferenceArrayTree","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ReferenceArrayTree","navigatorTitle":[{"kind":"identifier","text":"ReferenceArrayTree"}],"role":"symbol","type":"topic","url":"\/documentation\/compute\/referencearraytree"},"doc://com.swallow.documentation.Compute/documentation/Compute/GraphPatternBuilder/ConcatenationPattern":{"kind":"symbol","abstract":[],"url":"\/documentation\/compute\/graphpatternbuilder\/concatenationpattern","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/GraphPatternBuilder\/ConcatenationPattern","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ConcatenationPattern"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"ConcatenationPattern"}],"title":"GraphPatternBuilder.ConcatenationPattern"},"doc://com.swallow.documentation.Compute/documentation/Compute/GraphPatternBuilder/NodePattern":{"url":"\/documentation\/compute\/graphpatternbuilder\/nodepattern","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"NodePattern","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"NodePattern"}],"title":"GraphPatternBuilder.NodePattern","abstract":[{"type":"text","text":"A pattern that matches a single node based on a predicate."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/GraphPatternBuilder\/NodePattern"},"doc://com.swallow.documentation.Compute/documentation/Compute/GraphPatternBuilder/SourceOfPattern":{"url":"\/documentation\/compute\/graphpatternbuilder\/sourceofpattern","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"SourceOfPattern","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"SourceOfPattern","kind":"identifier"}],"abstract":[{"type":"text","text":"A pattern that matches the source node of an edge matched by a subpattern."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/GraphPatternBuilder\/SourceOfPattern","title":"GraphPatternBuilder.SourceOfPattern"},"doc://com.swallow.documentation.Compute/documentation/Compute/AnyIdentifiableTreeNode":{"abstract":[],"url":"\/documentation\/compute\/anyidentifiabletreenode","title":"AnyIdentifiableTreeNode","navigatorTitle":[{"text":"AnyIdentifiableTreeNode","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyIdentifiableTreeNode","type":"topic","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AnyIdentifiableTreeNode"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/GraphPatternBuilder/LeafNodesPattern":{"role":"symbol","type":"topic","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"LeafNodesPattern"}],"navigatorTitle":[{"kind":"identifier","text":"LeafNodesPattern"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/GraphPatternBuilder\/LeafNodesPattern","abstract":[{"type":"text","text":"A pattern that matches the leaf nodes in the DAG."}],"title":"GraphPatternBuilder.LeafNodesPattern","url":"\/documentation\/compute\/graphpatternbuilder\/leafnodespattern"},"doc://com.swallow.documentation.Compute/documentation/Compute/GraphPatternBuilder/NegationPattern":{"abstract":[],"title":"GraphPatternBuilder.NegationPattern","url":"\/documentation\/compute\/graphpatternbuilder\/negationpattern","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"NegationPattern"}],"type":"topic","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/GraphPatternBuilder\/NegationPattern","navigatorTitle":[{"text":"NegationPattern","kind":"identifier"}],"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Matrix":{"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Matrix","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"Matrix"}],"kind":"symbol","abstract":[],"title":"Matrix","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Matrix","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Element","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Identifiable","type":"codeVoice"},{"type":"text","text":"."}]},"url":"\/documentation\/compute\/matrix","type":"topic"}}}