{"schemaVersion":{"major":0,"patch":0,"minor":3},"sections":[],"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/MutableCollection\/sort()","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/MutableCollection"]]},"kind":"symbol","abstract":[{"text":"Sorts the collection in place.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"mutating"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"sort"},{"kind":"text","text":"()"}],"platforms":["macOS"]}]},{"content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"You can sort any mutable collection of elements that conform to the","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"Comparable"},{"text":" protocol by calling this method. Elements are sorted in","type":"text"},{"type":"text","text":" "},{"text":"ascending order.","type":"text"}]},{"inlineContent":[{"type":"text","text":"Here’s an example of sorting a list of students’ names. Strings in Swift"},{"type":"text","text":" "},{"type":"text","text":"conform to the "},{"code":"Comparable","type":"codeVoice"},{"type":"text","text":" protocol, so the names are sorted in"},{"type":"text","text":" "},{"text":"ascending order according to the less-than operator (","type":"text"},{"code":"<","type":"codeVoice"},{"type":"text","text":")."}],"type":"paragraph"},{"code":["var students = [\"Kofi\", \"Abena\", \"Peter\", \"Kweku\", \"Akosua\"]","students.sort()","print(students)","\/\/ Prints \"[\"Abena\", \"Akosua\", \"Kofi\", \"Kweku\", \"Peter\"]\""],"type":"codeListing","syntax":null},{"type":"paragraph","inlineContent":[{"text":"To sort the elements of your collection in descending order, pass the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"greater-than operator ("},{"type":"codeVoice","code":">"},{"text":") to the ","type":"text"},{"code":"sort(by:)","type":"codeVoice"},{"type":"text","text":" method."}]},{"type":"codeListing","code":["students.sort(by: >)","print(students)","\/\/ Prints \"[\"Peter\", \"Kweku\", \"Kofi\", \"Akosua\", \"Abena\"]\""],"syntax":null},{"type":"paragraph","inlineContent":[{"text":"The sorting algorithm is guaranteed to be stable. A stable sort","type":"text"},{"type":"text","text":" "},{"text":"preserves the relative order of elements that compare as equal.","type":"text"}]},{"style":"note","type":"aside","name":"Complexity","content":[{"inlineContent":[{"text":"O(","type":"text"},{"inlineContent":[{"text":"n","type":"text"}],"type":"emphasis"},{"type":"text","text":" log "},{"type":"emphasis","inlineContent":[{"type":"text","text":"n"}]},{"text":"), where ","type":"text"},{"inlineContent":[{"type":"text","text":"n"}],"type":"emphasis"},{"text":" is the length of the collection.","type":"text"}],"type":"paragraph"}]}],"kind":"content"}],"variants":[{"paths":["\/documentation\/compute\/mutablecollection\/sort()"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"title":"sort()","symbolKind":"method","roleHeading":"Instance Method","role":"symbol","extendedModule":"Swift","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Self","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"RandomAccessCollection"},{"text":" and ","type":"text"},{"code":"Element","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Comparable","type":"codeVoice"},{"text":".","type":"text"}]},"modules":[{"relatedModules":["Swift"],"name":"Compute"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"sort","kind":"identifier"},{"kind":"text","text":"()"}],"externalID":"s:SMsSkRzSL7ElementSTRpzrlE4sortyyF"},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/MutableCollection/sort()":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/MutableCollection\/sort()","kind":"symbol","role":"symbol","title":"sort()","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"sort"},{"kind":"text","text":"()"}],"abstract":[{"text":"Sorts the collection in place.","type":"text"}],"url":"\/documentation\/compute\/mutablecollection\/sort()","conformance":{"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"RandomAccessCollection"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Comparable"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]}},"doc://com.swallow.documentation.Compute/documentation/Compute/MutableCollection":{"role":"symbol","kind":"symbol","type":"topic","title":"MutableCollection","url":"\/documentation\/compute\/mutablecollection","navigatorTitle":[{"text":"MutableCollection","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/MutableCollection","abstract":[{"type":"text","text":"A collection that supports subscript assignment."}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"MutableCollection"}]}}}