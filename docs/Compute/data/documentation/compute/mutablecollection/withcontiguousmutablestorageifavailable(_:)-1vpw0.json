{"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/MutableCollection"]]},"schemaVersion":{"major":0,"patch":0,"minor":3},"variants":[{"paths":["\/documentation\/compute\/mutablecollection\/withcontiguousmutablestorageifavailable(_:)-1vpw0"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/MutableCollection\/withContiguousMutableStorageIfAvailable(_:)-1vpw0"},"defaultImplementationsSections":[{"identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/MutableCollection\/withContiguousMutableStorageIfAvailable(_:)-83khw"],"anchor":"MutableCollection-Implementations","title":"MutableCollection Implementations"}],"abstract":[{"type":"text","text":"Executes a closure on the collection’s contiguous storage."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"mutating","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"withContiguousMutableStorageIfAvailable","kind":"identifier"},{"text":"<","kind":"text"},{"text":"R","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"text":"body","kind":"internalParam"},{"kind":"text","text":": ("},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableBufferPointer","preciseIdentifier":"s:Sr","text":"UnsafeMutableBufferPointer","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Element","preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element"},{"kind":"text","text":">) "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"R","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"rethrows"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"R"},{"kind":"text","text":"?"}],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"name":"body","content":[{"type":"paragraph","inlineContent":[{"text":"A closure that receives an in-out","type":"text"},{"type":"text","text":" "},{"code":"UnsafeMutableBufferPointer","type":"codeVoice"},{"type":"text","text":" to the collection’s contiguous storage."}]}]}]},{"kind":"content","content":[{"level":2,"anchor":"return-value","text":"Return Value","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"The value returned from ","type":"text"},{"type":"codeVoice","code":"body"},{"text":", unless the collection doesn’t","type":"text"},{"text":" ","type":"text"},{"text":"support contiguous storage, in which case the method ignores ","type":"text"},{"code":"body","type":"codeVoice"},{"type":"text","text":" and"},{"text":" ","type":"text"},{"text":"returns ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"}]}]},{"kind":"content","content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"inlineContent":[{"text":"This method calls ","type":"text"},{"code":"body(buffer)","type":"codeVoice"},{"type":"text","text":", where "},{"type":"codeVoice","code":"buffer"},{"type":"text","text":" provides access to the"},{"text":" ","type":"text"},{"text":"contiguous mutable storage of the entire collection. If the contiguous","type":"text"},{"text":" ","type":"text"},{"text":"storage doesn’t exist, the collection creates it. If the collection","type":"text"},{"text":" ","type":"text"},{"text":"doesn’t support an internal representation in the form of contiguous","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"mutable storage, this method doesn’t call "},{"type":"codeVoice","code":"body"},{"type":"text","text":" — it immediately"},{"text":" ","type":"text"},{"text":"returns ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The optimizer can often eliminate bounds- and uniqueness-checking"},{"text":" ","type":"text"},{"type":"text","text":"within an algorithm. When that fails, however, invoking the same"},{"type":"text","text":" "},{"type":"text","text":"algorithm on the "},{"type":"codeVoice","code":"buffer"},{"type":"text","text":" argument may let you trade safety for speed."}]},{"inlineContent":[{"type":"text","text":"Always perform any necessary cleanup in the closure, because the"},{"text":" ","type":"text"},{"text":"method makes no guarantees about the state of the collection if the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"closure throws an error. Your changes to the collection may be absent"},{"text":" ","type":"text"},{"type":"text","text":"from the collection after throwing the error, because the closure could"},{"type":"text","text":" "},{"text":"receive a temporary copy rather than direct access to the collection’s","type":"text"},{"type":"text","text":" "},{"type":"text","text":"storage."}],"type":"paragraph"},{"style":"warning","name":"Warning","content":[{"inlineContent":[{"text":"Your ","type":"text"},{"code":"body","type":"codeVoice"},{"text":" closure must not replace ","type":"text"},{"code":"buffer","type":"codeVoice"},{"text":". This leads","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"to a crash in all implementations of this method within the standard"},{"type":"text","text":" "},{"type":"text","text":"library."}],"type":"paragraph"}],"type":"aside"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Successive calls to this method may provide a different pointer on each"},{"text":" ","type":"text"},{"text":"call. Don’t store ","type":"text"},{"type":"codeVoice","code":"buffer"},{"text":" outside of this method.","type":"text"}]},{"inlineContent":[{"type":"text","text":"A "},{"code":"Collection","type":"codeVoice"},{"text":" that provides its own implementation of this method","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"must provide contiguous storage to its elements in the same order"},{"type":"text","text":" "},{"type":"text","text":"as they appear in the collection. This guarantees that it’s possible to"},{"text":" ","type":"text"},{"text":"generate contiguous mutable storage to any of its subsequences by slicing","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"buffer"},{"type":"text","text":" with a range formed from the distances to the subsequence’s"},{"text":" ","type":"text"},{"type":"codeVoice","code":"startIndex"},{"type":"text","text":" and "},{"type":"codeVoice","code":"endIndex"},{"text":", respectively.","type":"text"}],"type":"paragraph"}]}],"metadata":{"role":"symbol","modules":[{"name":"Compute"}],"title":"withContiguousMutableStorageIfAvailable(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"withContiguousMutableStorageIfAvailable","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"R"},{"text":">((","kind":"text"},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"text":"UnsafeMutableBufferPointer","kind":"typeIdentifier","preciseIdentifier":"s:Sr"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"text":">) ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"R","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"text":"R","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"roleHeading":"Instance Method","required":true,"symbolKind":"method","externalID":"s:SM39withContiguousMutableStorageIfAvailableyqd__Sgqd__Sry7ElementQzGzKXEKlF"},"sections":[],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/MutableCollection":{"role":"symbol","kind":"symbol","type":"topic","title":"MutableCollection","url":"\/documentation\/compute\/mutablecollection","navigatorTitle":[{"text":"MutableCollection","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/MutableCollection","abstract":[{"type":"text","text":"A collection that supports subscript assignment."}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"MutableCollection"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeMutableBufferPointer":{"kind":"symbol","url":"\/documentation\/compute\/unsafemutablebufferpointer","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"UnsafeMutableBufferPointer","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"UnsafeMutableBufferPointer"}],"abstract":[{"type":"text","text":"A nonowning collection interface to a buffer of mutable"},{"text":" ","type":"text"},{"text":"elements stored contiguously in memory.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableBufferPointer","title":"UnsafeMutableBufferPointer","type":"topic","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/MutableCollection/withContiguousMutableStorageIfAvailable(_:)-83khw":{"role":"symbol","title":"withContiguousMutableStorageIfAvailable(_:)","abstract":[{"type":"text","text":"Executes a closure on the collection’s contiguous storage."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"withContiguousMutableStorageIfAvailable","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"R"},{"text":">((","kind":"text"},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"text":"UnsafeMutableBufferPointer","kind":"typeIdentifier","preciseIdentifier":"s:Sr"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"kind":"text","text":">) "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"R","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"rethrows"},{"text":" -> ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"kind":"symbol","url":"\/documentation\/compute\/mutablecollection\/withcontiguousmutablestorageifavailable(_:)-83khw","type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/MutableCollection\/withContiguousMutableStorageIfAvailable(_:)-83khw"},"doc://com.swallow.documentation.Compute/documentation/Compute/MutableCollection/withContiguousMutableStorageIfAvailable(_:)-1vpw0":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/MutableCollection\/withContiguousMutableStorageIfAvailable(_:)-1vpw0","role":"symbol","defaultImplementations":1,"required":true,"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"withContiguousMutableStorageIfAvailable"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"R"},{"text":">((","kind":"text"},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:Sr","text":"UnsafeMutableBufferPointer","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"text":">) ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"R"},{"text":") ","kind":"text"},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"text":"R","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"title":"withContiguousMutableStorageIfAvailable(_:)","type":"topic","url":"\/documentation\/compute\/mutablecollection\/withcontiguousmutablestorageifavailable(_:)-1vpw0","kind":"symbol","abstract":[{"text":"Executes a closure on the collection’s contiguous storage.","type":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence/Element":{"type":"topic","required":true,"abstract":[{"type":"text","text":"A type representing the sequence’s elements."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"symbol","url":"\/documentation\/compute\/sequence\/element","role":"symbol","title":"Element","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"identifier"}]}}}