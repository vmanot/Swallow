{"kind":"symbol","metadata":{"title":"==(_:_:)","extendedModule":"Swift","modules":[{"name":"Compute","relatedModules":["Swift"]}],"externalID":"s:SNsSxRzSZ6StrideRpzrlE5IndexO2eeoiySbADyx_G_AFtFZ","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"==","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SN","text":"ClosedRange"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Bound"},{"kind":"text","text":">."},{"preciseIdentifier":"s:SNsSxRzSZ6StrideRpzrlE5IndexO","text":"Index","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:SN","text":"ClosedRange"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Bound"},{"text":">.","kind":"text"},{"preciseIdentifier":"s:SNsSxRzSZ6StrideRpzrlE5IndexO","text":"Index","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"symbolKind":"op","roleHeading":"Operator","role":"symbol","conformance":{"constraints":[{"type":"codeVoice","code":"Bound"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Strideable"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Bound.Stride"},{"type":"text","text":" conforms to "},{"code":"SignedInteger","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]}},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ClosedRange\/Index\/==(_:_:)"},"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"abstract":[{"type":"text","text":"Returns a Boolean value indicating whether two values are equal."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/closedrange\/index\/==(_:_:)"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"==","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"lhs","kind":"internalParam"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ClosedRange","preciseIdentifier":"s:SN","kind":"typeIdentifier","text":"ClosedRange"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Bound"},{"kind":"text","text":">."},{"preciseIdentifier":"s:SNsSxRzSZ6StrideRpzrlE5IndexO","kind":"typeIdentifier","text":"Index","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ClosedRange\/Index"},{"kind":"text","text":", "},{"text":"rhs","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ClosedRange","preciseIdentifier":"s:SN","text":"ClosedRange"},{"text":"<","kind":"text"},{"text":"Bound","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"preciseIdentifier":"s:SNsSxRzSZ6StrideRpzrlE5IndexO","text":"Index","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ClosedRange\/Index","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bool"}],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A value to compare."}]}],"name":"lhs"},{"content":[{"type":"paragraph","inlineContent":[{"text":"Another value to compare.","type":"text"}]}],"name":"rhs"}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Equality is the inverse of inequality. For any values "},{"code":"a","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"b"},{"text":",","type":"text"},{"text":" ","type":"text"},{"code":"a == b","type":"codeVoice"},{"type":"text","text":" implies that "},{"type":"codeVoice","code":"a != b"},{"type":"text","text":" is "},{"type":"codeVoice","code":"false"},{"text":".","type":"text"}]}]}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ClosedRange","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ClosedRange\/Collection-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ClosedRange\/Index","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ClosedRange\/Index\/Equatable-Implementations"]]},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/ClosedRange":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ClosedRange","kind":"identifier"}],"role":"symbol","title":"ClosedRange","url":"\/documentation\/compute\/closedrange","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ClosedRange","abstract":[{"text":"An interval from a lower bound up to, and including, an upper bound.","type":"text"}],"type":"topic","navigatorTitle":[{"text":"ClosedRange","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/ClosedRange/Index":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ClosedRange\/Index","type":"topic","abstract":[{"type":"text","text":"A type that represents a position in the collection."}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Index"}],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Bound","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Strideable","type":"codeVoice"},{"type":"text","text":" and "},{"code":"Bound.Stride","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"SignedInteger","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"kind":"symbol","title":"ClosedRange.Index","navigatorTitle":[{"kind":"identifier","text":"Index"}],"url":"\/documentation\/compute\/closedrange\/index","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/ClosedRange/Index/==(_:_:)":{"abstract":[{"text":"Returns a Boolean value indicating whether two values are equal.","type":"text"}],"title":"==(_:_:)","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"=="},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"ClosedRange","kind":"typeIdentifier","preciseIdentifier":"s:SN"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Bound"},{"text":">.","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SNsSxRzSZ6StrideRpzrlE5IndexO","text":"Index"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:SN","kind":"typeIdentifier","text":"ClosedRange"},{"text":"<","kind":"text"},{"text":"Bound","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"text":"Index","kind":"typeIdentifier","preciseIdentifier":"s:SNsSxRzSZ6StrideRpzrlE5IndexO"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ClosedRange\/Index\/==(_:_:)","kind":"symbol","type":"topic","role":"symbol","url":"\/documentation\/compute\/closedrange\/index\/==(_:_:)","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Bound","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Strideable"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Bound.Stride"},{"type":"text","text":" conforms to "},{"code":"SignedInteger","type":"codeVoice"},{"type":"text","text":"."}]}},"doc://com.swallow.documentation.Compute/documentation/Compute/ClosedRange/Index/Equatable-Implementations":{"url":"\/documentation\/compute\/closedrange\/index\/equatable-implementations","kind":"article","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ClosedRange\/Index\/Equatable-Implementations","type":"topic","title":"Equatable Implementations","role":"collectionGroup"},"doc://com.swallow.documentation.Compute/documentation/Compute/ClosedRange/Collection-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ClosedRange\/Collection-Implementations","type":"topic","abstract":[],"kind":"article","title":"Collection Implementations","url":"\/documentation\/compute\/closedrange\/collection-implementations","role":"collectionGroup"},"doc://com.swallow.documentation.Compute/documentation/Compute/Bool":{"url":"\/documentation\/compute\/bool","role":"symbol","title":"Bool","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Bool","kind":"identifier"}],"abstract":[{"type":"text","text":"A value type whose instances are either "},{"type":"codeVoice","code":"true"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"false"},{"text":".","type":"text"}],"navigatorTitle":[{"text":"Bool","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bool","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"}}}