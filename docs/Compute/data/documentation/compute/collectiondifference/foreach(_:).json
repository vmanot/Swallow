{"schemaVersion":{"minor":3,"major":0,"patch":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/collectiondifference\/foreach(_:)"]}],"abstract":[{"type":"text","text":"Calls the given closure on each element in the sequence in the same order"},{"type":"text","text":" "},{"text":"as a ","type":"text"},{"code":"for","type":"codeVoice"},{"text":"-","type":"text"},{"type":"codeVoice","code":"in"},{"type":"text","text":" loop."}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CollectionDifference\/forEach(_:)"},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CollectionDifference","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CollectionDifference\/Sequence-Implementations"]]},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"forEach"},{"kind":"text","text":"("},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"body"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Element","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","preciseIdentifier":"s:ST7ElementQa"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") "},{"text":"rethrows","kind":"keyword"}],"platforms":["macOS"],"languages":["swift"]}]},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"A closure that takes an element of the sequence as a","type":"text"},{"type":"text","text":" "},{"type":"text","text":"parameter."}]}],"name":"body"}],"kind":"parameters"},{"content":[{"level":2,"anchor":"discussion","type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The two loops in the following example produce the same output:"}]},{"code":["let numberWords = [\"one\", \"two\", \"three\"]","for word in numberWords {","    print(word)","}","\/\/ Prints \"one\"","\/\/ Prints \"two\"","\/\/ Prints \"three\"","","numberWords.forEach { word in","    print(word)","}","\/\/ Same as above"],"type":"codeListing","syntax":null},{"type":"paragraph","inlineContent":[{"text":"Using the ","type":"text"},{"type":"codeVoice","code":"forEach"},{"type":"text","text":" method is distinct from a "},{"code":"for","type":"codeVoice"},{"type":"text","text":"-"},{"code":"in","type":"codeVoice"},{"type":"text","text":" loop in two"},{"text":" ","type":"text"},{"text":"important ways:","type":"text"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"You cannot use a "},{"type":"codeVoice","code":"break"},{"type":"text","text":" or "},{"code":"continue","type":"codeVoice"},{"type":"text","text":" statement to exit the current"},{"type":"text","text":" "},{"text":"call of the ","type":"text"},{"type":"codeVoice","code":"body"},{"type":"text","text":" closure or skip subsequent calls."}]}]},{"content":[{"inlineContent":[{"text":"Using the ","type":"text"},{"type":"codeVoice","code":"return"},{"text":" statement in the ","type":"text"},{"code":"body","type":"codeVoice"},{"text":" closure will exit only from","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the current call to "},{"type":"codeVoice","code":"body"},{"type":"text","text":", not from any outer scope, and won’t skip"},{"text":" ","type":"text"},{"text":"subsequent calls.","type":"text"}],"type":"paragraph"}]}],"type":"orderedList"}],"kind":"content"}],"metadata":{"roleHeading":"Instance Method","externalID":"s:STsE7forEachyyy7ElementQzKXEKF::SYNTHESIZED::s:s20CollectionDifferenceV","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"forEach","kind":"identifier"},{"kind":"text","text":"(("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":") ","kind":"text"},{"kind":"keyword","text":"rethrows"}],"role":"symbol","extendedModule":"Swift","title":"forEach(_:)","symbolKind":"method","modules":[{"name":"Compute","relatedModules":["Swift"]}]},"sections":[],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence/Element":{"type":"topic","required":true,"abstract":[{"type":"text","text":"A type representing the sequence’s elements."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"symbol","url":"\/documentation\/compute\/sequence\/element","role":"symbol","title":"Element","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Void":{"abstract":[{"text":"The return type of functions that don’t explicitly specify a return type,","type":"text"},{"text":" ","type":"text"},{"text":"that is, an empty tuple ","type":"text"},{"type":"codeVoice","code":"()"},{"type":"text","text":"."}],"type":"topic","title":"Void","url":"\/documentation\/compute\/void","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Void"}],"navigatorTitle":[{"text":"Void","kind":"identifier"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Void"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/CollectionDifference/Sequence-Implementations":{"abstract":[],"role":"collectionGroup","url":"\/documentation\/compute\/collectiondifference\/sequence-implementations","title":"Sequence Implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CollectionDifference\/Sequence-Implementations","kind":"article","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/CollectionDifference/forEach(_:)":{"abstract":[{"type":"text","text":"Calls the given closure on each element in the sequence in the same order"},{"type":"text","text":" "},{"type":"text","text":"as a "},{"code":"for","type":"codeVoice"},{"type":"text","text":"-"},{"type":"codeVoice","code":"in"},{"type":"text","text":" loop."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"forEach","kind":"identifier"},{"text":"((","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:ST7ElementQa","text":"Element","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"text":") ","kind":"text"},{"kind":"keyword","text":"rethrows"}],"kind":"symbol","title":"forEach(_:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CollectionDifference\/forEach(_:)","type":"topic","role":"symbol","url":"\/documentation\/compute\/collectiondifference\/foreach(_:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/CollectionDifference":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CollectionDifference","kind":"identifier"}],"url":"\/documentation\/compute\/collectiondifference","type":"topic","title":"CollectionDifference","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"CollectionDifference"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CollectionDifference","abstract":[{"type":"text","text":"A collection of insertions and removals that describe the difference"},{"text":" ","type":"text"},{"text":"between two ordered collection states.","type":"text"}]}}}