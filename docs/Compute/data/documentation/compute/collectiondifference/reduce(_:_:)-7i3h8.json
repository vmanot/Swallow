{"abstract":[{"type":"text","text":"Returns the result of combining the elements of the sequence using the"},{"text":" ","type":"text"},{"type":"text","text":"given closure."}],"variants":[{"paths":["\/documentation\/compute\/collectiondifference\/reduce(_:_:)-7i3h8"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"reduce","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Result","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":", ("},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:ST7ElementQa","text":"Element","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Result"}],"role":"symbol","extendedModule":"Swift","externalID":"s:STsE6reduceyqd__qd___qd__qd___7ElementQztKXEtKlF::SYNTHESIZED::s:s20CollectionDifferenceV","roleHeading":"Instance Method","modules":[{"relatedModules":["Swift"],"name":"Compute"}],"title":"reduce(_:_:)","symbolKind":"method"},"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CollectionDifference\/reduce(_:_:)-7i3h8"},"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CollectionDifference","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CollectionDifference\/Sequence-Implementations"]]},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"reduce"},{"text":"<","kind":"text"},{"text":"Result","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"initialResult","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":", "},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"text":"nextPartialResult","kind":"internalParam"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","preciseIdentifier":"s:ST7ElementQa"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Result"},{"text":") ","kind":"text"},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Result"}],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"The value to use as the initial accumulating value."},{"type":"text","text":" "},{"code":"initialResult","type":"codeVoice"},{"type":"text","text":" is passed to "},{"code":"nextPartialResult","type":"codeVoice"},{"text":" the first time the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"closure is executed."}],"type":"paragraph"}],"name":"initialResult"},{"name":"nextPartialResult","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A closure that combines an accumulating value and"},{"type":"text","text":" "},{"text":"an element of the sequence into a new accumulating value, to be used","type":"text"},{"type":"text","text":" "},{"type":"text","text":"in the next call of the "},{"type":"codeVoice","code":"nextPartialResult"},{"type":"text","text":" closure or returned to"},{"type":"text","text":" "},{"text":"the caller.","type":"text"}]}]}]},{"kind":"content","content":[{"type":"heading","level":2,"text":"Return Value","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The final accumulated value. If the sequence has no elements,"},{"type":"text","text":" "},{"type":"text","text":"the result is "},{"code":"initialResult","type":"codeVoice"},{"text":".","type":"text"}]}]},{"kind":"content","content":[{"text":"Discussion","type":"heading","anchor":"discussion","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Use the "},{"type":"codeVoice","code":"reduce(_:_:)"},{"type":"text","text":" method to produce a single value from the elements"},{"type":"text","text":" "},{"text":"of an entire sequence. For example, you can use this method on an array","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"of numbers to find their sum or product."}]},{"inlineContent":[{"text":"The ","type":"text"},{"code":"nextPartialResult","type":"codeVoice"},{"type":"text","text":" closure is called sequentially with an"},{"type":"text","text":" "},{"type":"text","text":"accumulating value initialized to "},{"type":"codeVoice","code":"initialResult"},{"text":" and each element of","type":"text"},{"type":"text","text":" "},{"text":"the sequence. This example shows how to find the sum of an array of","type":"text"},{"text":" ","type":"text"},{"text":"numbers.","type":"text"}],"type":"paragraph"},{"code":["let numbers = [1, 2, 3, 4]","let numberSum = numbers.reduce(0, { x, y in","    x + y","})","\/\/ numberSum == 10"],"type":"codeListing","syntax":null},{"type":"paragraph","inlineContent":[{"text":"When ","type":"text"},{"type":"codeVoice","code":"numbers.reduce(_:_:)"},{"type":"text","text":" is called, the following steps occur:"}]},{"items":[{"content":[{"inlineContent":[{"text":"The ","type":"text"},{"type":"codeVoice","code":"nextPartialResult"},{"type":"text","text":" closure is called with "},{"code":"initialResult","type":"codeVoice"},{"text":"—","type":"text"},{"type":"codeVoice","code":"0"},{"type":"text","text":" "},{"type":"text","text":"in this case—and the first element of "},{"type":"codeVoice","code":"numbers"},{"type":"text","text":", returning the sum:"},{"text":" ","type":"text"},{"code":"1","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The closure is called again repeatedly with the previous call’s return"},{"text":" ","type":"text"},{"text":"value and each element of the sequence.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"When the sequence is exhausted, the last value returned from the"},{"text":" ","type":"text"},{"text":"closure is returned to the caller.","type":"text"}],"type":"paragraph"}]}],"type":"orderedList"},{"inlineContent":[{"text":"If the sequence has no elements, ","type":"text"},{"code":"nextPartialResult","type":"codeVoice"},{"text":" is never executed","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and "},{"code":"initialResult","type":"codeVoice"},{"type":"text","text":" is the result of the call to "},{"code":"reduce(_:_:)","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"},{"content":[{"inlineContent":[{"text":"O(","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"n"}]},{"type":"text","text":"), where "},{"type":"emphasis","inlineContent":[{"type":"text","text":"n"}]},{"type":"text","text":" is the length of the sequence."}],"type":"paragraph"}],"name":"Complexity","type":"aside","style":"note"}]}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/CollectionDifference/Sequence-Implementations":{"abstract":[],"role":"collectionGroup","url":"\/documentation\/compute\/collectiondifference\/sequence-implementations","title":"Sequence Implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CollectionDifference\/Sequence-Implementations","kind":"article","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/CollectionDifference":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CollectionDifference","kind":"identifier"}],"url":"\/documentation\/compute\/collectiondifference","type":"topic","title":"CollectionDifference","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"CollectionDifference"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CollectionDifference","abstract":[{"type":"text","text":"A collection of insertions and removals that describe the difference"},{"text":" ","type":"text"},{"text":"between two ordered collection states.","type":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/CollectionDifference/reduce(_:_:)-7i3h8":{"kind":"symbol","type":"topic","url":"\/documentation\/compute\/collectiondifference\/reduce(_:_:)-7i3h8","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"reduce"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Result"},{"text":">(","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":", (","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:ST7ElementQa"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Result"},{"text":") ","kind":"text"},{"kind":"keyword","text":"rethrows"},{"text":" -> ","kind":"text"},{"text":"Result","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Returns the result of combining the elements of the sequence using the"},{"text":" ","type":"text"},{"text":"given closure.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CollectionDifference\/reduce(_:_:)-7i3h8","title":"reduce(_:_:)","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence/Element":{"type":"topic","required":true,"abstract":[{"type":"text","text":"A type representing the sequence’s elements."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"symbol","url":"\/documentation\/compute\/sequence\/element","role":"symbol","title":"Element","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"identifier"}]}}}