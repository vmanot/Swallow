{"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CollectionDifference\/randomElement(using:)","interfaceLanguage":"swift"},"kind":"symbol","sections":[],"abstract":[{"text":"Returns a random element of the collection, using the given generator as","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"a source for randomness."}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"randomElement","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"using"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"generator"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Element","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier"},{"kind":"text","text":"? "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RandomNumberGenerator","preciseIdentifier":"s:SG","text":"RandomNumberGenerator"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"parameters":[{"name":"generator","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The random number generator to use when choosing a"},{"type":"text","text":" "},{"type":"text","text":"random element."}]}]}],"kind":"parameters"},{"content":[{"anchor":"return-value","level":2,"text":"Return Value","type":"heading"},{"inlineContent":[{"text":"A random element from the collection. If the collection is","type":"text"},{"type":"text","text":" "},{"type":"text","text":"empty, the method returns "},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}],"kind":"content"},{"kind":"content","content":[{"anchor":"discussion","level":2,"text":"Discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"Call ","type":"text"},{"code":"randomElement(using:)","type":"codeVoice"},{"type":"text","text":" to select a random element from an array or"},{"type":"text","text":" "},{"type":"text","text":"another collection when you are using a custom random number generator."},{"type":"text","text":" "},{"type":"text","text":"This example picks a name at random from an array:"}]},{"type":"codeListing","syntax":null,"code":["let names = [\"Zoey\", \"Chloe\", \"Amani\", \"Amaia\"]","let randomName = names.randomElement(using: &myGenerator)!","\/\/ randomName == \"Amani\""]},{"content":[{"inlineContent":[{"type":"text","text":"O(1) if the collection conforms to"},{"text":" ","type":"text"},{"code":"RandomAccessCollection","type":"codeVoice"},{"type":"text","text":"; otherwise, O("},{"inlineContent":[{"type":"text","text":"n"}],"type":"emphasis"},{"type":"text","text":"), where "},{"type":"emphasis","inlineContent":[{"type":"text","text":"n"}]},{"text":" is the length","type":"text"},{"type":"text","text":" "},{"text":"of the collection.","type":"text"}],"type":"paragraph"}],"name":"Complexity","style":"note","type":"aside"},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The algorithm used to select a random element may change in a"},{"type":"text","text":" "},{"type":"text","text":"future version of Swift. If you’re passing a generator that results in"},{"type":"text","text":" "},{"type":"text","text":"the same sequence of elements each time you run your program, that"},{"type":"text","text":" "},{"type":"text","text":"sequence may change when your program is compiled using a different"},{"text":" ","type":"text"},{"type":"text","text":"version of Swift."}]}],"type":"aside","name":"Note"}]}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CollectionDifference","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CollectionDifference\/Collection-Implementations"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/collectiondifference\/randomelement(using:)"]}],"metadata":{"title":"randomElement(using:)","symbolKind":"method","modules":[{"name":"Compute","relatedModules":["Swift"]}],"roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"randomElement","kind":"identifier"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"using","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:ST7ElementQa","text":"Element","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"extendedModule":"Swift","externalID":"s:SlsE13randomElement5using0B0QzSgqd__z_tSGRd__lF::SYNTHESIZED::s:s20CollectionDifferenceV","role":"symbol"},"schemaVersion":{"patch":0,"major":0,"minor":3},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/RandomNumberGenerator":{"abstract":[{"text":"A type that provides uniformly distributed random data.","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"RandomNumberGenerator"}],"url":"\/documentation\/compute\/randomnumbergenerator","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RandomNumberGenerator","title":"RandomNumberGenerator","role":"symbol","type":"topic","navigatorTitle":[{"text":"RandomNumberGenerator","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/CollectionDifference/randomElement(using:)":{"url":"\/documentation\/compute\/collectiondifference\/randomelement(using:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"randomElement"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"using"},{"kind":"text","text":": "},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:ST7ElementQa"},{"kind":"text","text":"?"}],"title":"randomElement(using:)","abstract":[{"type":"text","text":"Returns a random element of the collection, using the given generator as"},{"type":"text","text":" "},{"text":"a source for randomness.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CollectionDifference\/randomElement(using:)","role":"symbol","type":"topic","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/CollectionDifference/Collection-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CollectionDifference\/Collection-Implementations","title":"Collection Implementations","role":"collectionGroup","url":"\/documentation\/compute\/collectiondifference\/collection-implementations","kind":"article","type":"topic","abstract":[]},"doc://com.swallow.documentation.Compute/documentation/Compute/CollectionDifference":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CollectionDifference","kind":"identifier"}],"url":"\/documentation\/compute\/collectiondifference","type":"topic","title":"CollectionDifference","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"CollectionDifference"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CollectionDifference","abstract":[{"type":"text","text":"A collection of insertions and removals that describe the difference"},{"text":" ","type":"text"},{"text":"between two ordered collection states.","type":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence/Element":{"type":"topic","required":true,"abstract":[{"type":"text","text":"A type representing the sequence’s elements."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"symbol","url":"\/documentation\/compute\/sequence\/element","role":"symbol","title":"Element","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"}}}