{"variants":[{"paths":["\/documentation\/compute\/unfoldsequence\/sorted()"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"sorted"},{"kind":"text","text":"() -> ["},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"text":"]","kind":"text"}]}]},{"kind":"content","content":[{"type":"heading","anchor":"return-value","level":2,"text":"Return Value"},{"inlineContent":[{"type":"text","text":"A sorted array of the sequence’s elements."}],"type":"paragraph"}]},{"kind":"content","content":[{"level":2,"type":"heading","anchor":"discussion","text":"Discussion"},{"inlineContent":[{"text":"You can sort any sequence of elements that conform to the ","type":"text"},{"code":"Comparable","type":"codeVoice"},{"type":"text","text":" "},{"text":"protocol by calling this method. Elements are sorted in ascending order.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Here’s an example of sorting a list of students’ names. Strings in Swift"},{"text":" ","type":"text"},{"type":"text","text":"conform to the "},{"code":"Comparable","type":"codeVoice"},{"text":" protocol, so the names are sorted in","type":"text"},{"text":" ","type":"text"},{"text":"ascending order according to the less-than operator (","type":"text"},{"type":"codeVoice","code":"<"},{"text":").","type":"text"}],"type":"paragraph"},{"syntax":null,"code":["let students: Set = [\"Kofi\", \"Abena\", \"Peter\", \"Kweku\", \"Akosua\"]","let sortedStudents = students.sorted()","print(sortedStudents)","\/\/ Prints \"[\"Abena\", \"Akosua\", \"Kofi\", \"Kweku\", \"Peter\"]\""],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"To sort the elements of your sequence in descending order, pass the"},{"text":" ","type":"text"},{"type":"text","text":"greater-than operator ("},{"type":"codeVoice","code":">"},{"type":"text","text":") to the "},{"code":"sorted(by:)","type":"codeVoice"},{"type":"text","text":" method."}],"type":"paragraph"},{"syntax":null,"type":"codeListing","code":["let descendingStudents = students.sorted(by: >)","print(descendingStudents)","\/\/ Prints \"[\"Peter\", \"Kweku\", \"Kofi\", \"Akosua\", \"Abena\"]\""]},{"inlineContent":[{"type":"text","text":"The sorting algorithm is guaranteed to be stable. A stable sort"},{"type":"text","text":" "},{"text":"preserves the relative order of elements that compare as equal.","type":"text"}],"type":"paragraph"},{"name":"Complexity","type":"aside","style":"note","content":[{"type":"paragraph","inlineContent":[{"text":"O(","type":"text"},{"type":"emphasis","inlineContent":[{"text":"n","type":"text"}]},{"type":"text","text":" log "},{"type":"emphasis","inlineContent":[{"text":"n","type":"text"}]},{"type":"text","text":"), where "},{"type":"emphasis","inlineContent":[{"type":"text","text":"n"}]},{"type":"text","text":" is the length of the sequence."}]}]}]}],"sections":[],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnfoldSequence","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnfoldSequence\/Sequence-Implementations"]]},"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnfoldSequence\/sorted()","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Returns the elements of the sequence, sorted."}],"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"roleHeading":"Instance Method","role":"symbol","symbolKind":"method","extendedModule":"Swift","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Element"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Comparable"},{"type":"text","text":"."}]},"modules":[{"relatedModules":["Swift"],"name":"Compute"}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"sorted"},{"text":"() -> [","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"kind":"text","text":"]"}],"title":"sorted()","externalID":"s:STsSL7ElementRpzrlE6sortedSayABGyF::SYNTHESIZED::s:s14UnfoldSequenceV"},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/UnfoldSequence":{"navigatorTitle":[{"text":"UnfoldSequence","kind":"identifier"}],"kind":"symbol","role":"symbol","title":"UnfoldSequence","type":"topic","url":"\/documentation\/compute\/unfoldsequence","abstract":[{"text":"A sequence whose elements are produced via repeated applications of a","type":"text"},{"type":"text","text":" "},{"text":"closure to some mutable state.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"UnfoldSequence","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnfoldSequence"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/UnfoldSequence/sorted()":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnfoldSequence\/sorted()","url":"\/documentation\/compute\/unfoldsequence\/sorted()","title":"sorted()","kind":"symbol","abstract":[{"text":"Returns the elements of the sequence, sorted.","type":"text"}],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"code":"Comparable","type":"codeVoice"},{"type":"text","text":"."}]},"role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"sorted","kind":"identifier"},{"text":"() -> [","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:ST7ElementQa"},{"text":"]","kind":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence/Element":{"type":"topic","required":true,"abstract":[{"type":"text","text":"A type representing the sequence’s elements."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"symbol","url":"\/documentation\/compute\/sequence\/element","role":"symbol","title":"Element","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/UnfoldSequence/Sequence-Implementations":{"abstract":[],"url":"\/documentation\/compute\/unfoldsequence\/sequence-implementations","type":"topic","title":"Sequence Implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnfoldSequence\/Sequence-Implementations","kind":"article","role":"collectionGroup"}}}