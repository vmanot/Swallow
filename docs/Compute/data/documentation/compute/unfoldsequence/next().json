{"sections":[],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"mutating","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"next"},{"kind":"text","text":"() -> "},{"text":"Element","kind":"typeIdentifier"},{"text":"?","kind":"text"}]}]},{"kind":"content","content":[{"text":"Return Value","level":2,"type":"heading","anchor":"return-value"},{"inlineContent":[{"text":"The next element in the underlying sequence, if a next element","type":"text"},{"type":"text","text":" "},{"text":"exists; otherwise, ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"}],"type":"paragraph"}]},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"Repeatedly calling this method returns, in order, all the elements of the","type":"text"},{"type":"text","text":" "},{"text":"underlying sequence. As soon as the sequence has run out of elements, all","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"subsequent calls return "},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You must not call this method if any other copy of this iterator has been"},{"text":" ","type":"text"},{"type":"text","text":"advanced with a call to its "},{"type":"codeVoice","code":"next()"},{"text":" method.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"The following example shows how an iterator can be used explicitly to","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"emulate a "},{"code":"for","type":"codeVoice"},{"type":"text","text":"-"},{"code":"in","type":"codeVoice"},{"type":"text","text":" loop. First, retrieve a sequence’s iterator, and"},{"text":" ","type":"text"},{"type":"text","text":"then call the iterator’s "},{"code":"next()","type":"codeVoice"},{"type":"text","text":" method until it returns "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."}]},{"syntax":null,"code":["let numbers = [2, 3, 5, 7]","var numbersIterator = numbers.makeIterator()","","while let num = numbersIterator.next() {","    print(num)","}","\/\/ Prints \"2\"","\/\/ Prints \"3\"","\/\/ Prints \"5\"","\/\/ Prints \"7\""],"type":"codeListing"}]}],"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"next","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"roleHeading":"Instance Method","role":"symbol","symbolKind":"method","title":"next()","modules":[{"name":"Compute"}],"externalID":"s:s14UnfoldSequenceV4nextxSgyF"},"abstract":[{"text":"Advances to the next element and returns it, or ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":" if no next element","type":"text"},{"type":"text","text":" "},{"type":"text","text":"exists."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/unfoldsequence\/next()"]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnfoldSequence\/next()"},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnfoldSequence"]]},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/UnfoldSequence/next()":{"title":"next()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"next","kind":"identifier"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","text":"Element"},{"text":"?","kind":"text"}],"url":"\/documentation\/compute\/unfoldsequence\/next()","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnfoldSequence\/next()","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Advances to the next element and returns it, or "},{"type":"codeVoice","code":"nil"},{"text":" if no next element","type":"text"},{"type":"text","text":" "},{"type":"text","text":"exists."}]},"doc://com.swallow.documentation.Compute/documentation/Compute/UnfoldSequence":{"navigatorTitle":[{"text":"UnfoldSequence","kind":"identifier"}],"kind":"symbol","role":"symbol","title":"UnfoldSequence","type":"topic","url":"\/documentation\/compute\/unfoldsequence","abstract":[{"text":"A sequence whose elements are produced via repeated applications of a","type":"text"},{"type":"text","text":" "},{"text":"closure to some mutable state.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"UnfoldSequence","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnfoldSequence"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"}}}