{"abstract":[{"text":"Returns a sequence by skipping the initial, consecutive elements that","type":"text"},{"type":"text","text":" "},{"text":"satisfy the given predicate.","type":"text"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnfoldSequence","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnfoldSequence\/Sequence-Implementations"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/unfoldsequence\/drop(while:)"]}],"metadata":{"modules":[{"relatedModules":["Swift"],"name":"Compute"}],"roleHeading":"Instance Method","title":"drop(while:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"drop","kind":"identifier"},{"text":"(","kind":"text"},{"text":"while","kind":"externalParam"},{"kind":"text","text":": ("},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:ST7ElementQa"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s17DropWhileSequenceV","text":"DropWhileSequence"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"extendedModule":"Swift","symbolKind":"method","externalID":"s:STsE4drop5whiles17DropWhileSequenceVyxGSb7ElementQzKXE_tKF::SYNTHESIZED::s:s14UnfoldSequenceV","role":"symbol"},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"drop"},{"kind":"text","text":"("},{"text":"while","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"predicate"},{"kind":"text","text":": ("},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","preciseIdentifier":"s:ST7ElementQa"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bool"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/DropWhileSequence","preciseIdentifier":"s:s17DropWhileSequenceV","text":"DropWhileSequence"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"A closure that takes an element of the sequence as","type":"text"},{"text":" ","type":"text"},{"text":"its argument and returns a Boolean value indicating whether the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"element should be included in the result."}]}],"name":"predicate"}]},{"content":[{"text":"Return Value","anchor":"return-value","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"text":"A sequence starting after the initial, consecutive elements","type":"text"},{"type":"text","text":" "},{"text":"that satisfy ","type":"text"},{"type":"codeVoice","code":"predicate"},{"text":".","type":"text"}]}],"kind":"content"},{"kind":"content","content":[{"type":"heading","text":"Discussion","anchor":"discussion","level":2},{"type":"paragraph","inlineContent":[{"text":"The following example uses the ","type":"text"},{"code":"drop(while:)","type":"codeVoice"},{"type":"text","text":" method to skip over the"},{"text":" ","type":"text"},{"type":"text","text":"positive numbers at the beginning of the "},{"type":"codeVoice","code":"numbers"},{"text":" array. The result","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"begins with the first element of "},{"type":"codeVoice","code":"numbers"},{"text":" that does not satisfy","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"predicate"},{"text":".","type":"text"}]},{"code":["let numbers = [3, 7, 4, -2, 9, -6, 10, 1]","let startingWithNegative = numbers.drop(while: { $0 > 0 })","\/\/ startingWithNegative == [-2, 9, -6, 10, 1]"],"type":"codeListing","syntax":null},{"type":"paragraph","inlineContent":[{"text":"If ","type":"text"},{"code":"predicate","type":"codeVoice"},{"text":" matches every element in the sequence, the result is an","type":"text"},{"type":"text","text":" "},{"text":"empty sequence.","type":"text"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"O(","type":"text"},{"type":"emphasis","inlineContent":[{"text":"k","type":"text"}]},{"type":"text","text":"), where "},{"inlineContent":[{"text":"k","type":"text"}],"type":"emphasis"},{"type":"text","text":" is the number of elements to drop from"},{"text":" ","type":"text"},{"type":"text","text":"the beginning of the sequence."}]}],"type":"aside","style":"note","name":"Complexity"}]}],"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnfoldSequence\/drop(while:)"},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/UnfoldSequence/drop(while:)":{"role":"symbol","url":"\/documentation\/compute\/unfoldsequence\/drop(while:)","abstract":[{"type":"text","text":"Returns a sequence by skipping the initial, consecutive elements that"},{"text":" ","type":"text"},{"text":"satisfy the given predicate.","type":"text"}],"title":"drop(while:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"drop","kind":"identifier"},{"kind":"text","text":"("},{"text":"while","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:ST7ElementQa"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"DropWhileSequence","kind":"typeIdentifier","preciseIdentifier":"s:s17DropWhileSequenceV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnfoldSequence\/drop(while:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence/Element":{"type":"topic","required":true,"abstract":[{"type":"text","text":"A type representing the sequenceâ€™s elements."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"symbol","url":"\/documentation\/compute\/sequence\/element","role":"symbol","title":"Element","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/UnfoldSequence/Sequence-Implementations":{"abstract":[],"url":"\/documentation\/compute\/unfoldsequence\/sequence-implementations","type":"topic","title":"Sequence Implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnfoldSequence\/Sequence-Implementations","kind":"article","role":"collectionGroup"},"doc://com.swallow.documentation.Compute/documentation/Compute/DropWhileSequence":{"abstract":[{"type":"text","text":"A sequence that lazily consumes and drops "},{"type":"codeVoice","code":"n"},{"type":"text","text":" elements from an underlying"},{"type":"text","text":" "},{"type":"codeVoice","code":"Base"},{"text":" iterator before possibly returning the first available element.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"DropWhileSequence","kind":"identifier"}],"url":"\/documentation\/compute\/dropwhilesequence","title":"DropWhileSequence","role":"symbol","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/DropWhileSequence","type":"topic","navigatorTitle":[{"text":"DropWhileSequence","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Bool":{"url":"\/documentation\/compute\/bool","role":"symbol","title":"Bool","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Bool","kind":"identifier"}],"abstract":[{"type":"text","text":"A value type whose instances are either "},{"type":"codeVoice","code":"true"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"false"},{"text":".","type":"text"}],"navigatorTitle":[{"text":"Bool","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bool","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/UnfoldSequence":{"navigatorTitle":[{"text":"UnfoldSequence","kind":"identifier"}],"kind":"symbol","role":"symbol","title":"UnfoldSequence","type":"topic","url":"\/documentation\/compute\/unfoldsequence","abstract":[{"text":"A sequence whose elements are produced via repeated applications of a","type":"text"},{"type":"text","text":" "},{"text":"closure to some mutable state.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"UnfoldSequence","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnfoldSequence"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"}}}