{"schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/setalgebra\/update(with:)-7ka13"]}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SetAlgebra"]]},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"attribute","text":"@discardableResult"},{"text":" ","kind":"text"},{"kind":"keyword","text":"mutating"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"update"},{"kind":"text","text":"("},{"text":"with","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"newMember","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"Element","preciseIdentifier":"s:s10SetAlgebraP7ElementQa","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SetAlgebra\/Element","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SetAlgebra\/Element","preciseIdentifier":"s:s10SetAlgebraP7ElementQa"},{"text":"?","kind":"text"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"An element to insert into the set."}]}],"name":"newMember"}]},{"kind":"content","content":[{"type":"heading","level":2,"text":"Return Value","anchor":"return-value"},{"inlineContent":[{"type":"text","text":"For ordinary sets, an element equal to "},{"code":"newMember","type":"codeVoice"},{"text":" if the set","type":"text"},{"type":"text","text":" "},{"text":"already contained such a member; otherwise, ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":". In some cases, the","type":"text"},{"type":"text","text":" "},{"text":"returned element may be distinguishable from ","type":"text"},{"type":"codeVoice","code":"newMember"},{"type":"text","text":" by identity"},{"type":"text","text":" "},{"type":"text","text":"comparison or some other means."}],"type":"paragraph"}]},{"kind":"content","content":[{"anchor":"discussion","type":"heading","text":"Discussion","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"If an element equal to "},{"code":"newMember","type":"codeVoice"},{"type":"text","text":" is already contained in the set,"},{"text":" ","type":"text"},{"code":"newMember","type":"codeVoice"},{"type":"text","text":" replaces the existing element. In this example, an existing"},{"type":"text","text":" "},{"type":"text","text":"element is inserted into "},{"type":"codeVoice","code":"classDays"},{"text":", a set of days of the week.","type":"text"}]},{"type":"codeListing","syntax":null,"code":["enum DayOfTheWeek: Int {","    case sunday, monday, tuesday, wednesday, thursday,","        friday, saturday","}","","var classDays: Set<DayOfTheWeek> = [.monday, .wednesday, .friday]","print(classDays.update(with: .monday))","\/\/ Prints \"Optional(.monday)\""]}]}],"defaultImplementationsSections":[{"title":"SetAlgebra Implementations","identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SetAlgebra\/update(with:)-2oa9l"],"anchor":"SetAlgebra-Implementations"}],"metadata":{"role":"symbol","title":"update(with:)","required":true,"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"update","kind":"identifier"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:s10SetAlgebraP7ElementQa","text":"Element","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:s10SetAlgebraP7ElementQa"},{"kind":"text","text":"?"}],"externalID":"s:s10SetAlgebraP6update4with7ElementQzSgAFn_tF","modules":[{"name":"Compute"}],"roleHeading":"Instance Method","symbolKind":"method"},"abstract":[{"type":"text","text":"Inserts the given element into the set unconditionally."}],"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SetAlgebra\/update(with:)-7ka13","interfaceLanguage":"swift"},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/SetAlgebra":{"role":"symbol","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SetAlgebra","kind":"identifier"}],"title":"SetAlgebra","url":"\/documentation\/compute\/setalgebra","abstract":[{"text":"A type that provides mathematical set operations.","type":"text"}],"type":"topic","navigatorTitle":[{"text":"SetAlgebra","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SetAlgebra"},"doc://com.swallow.documentation.Compute/documentation/Compute/SetAlgebra/update(with:)-2oa9l":{"type":"topic","kind":"symbol","conformance":{"constraints":[{"type":"codeVoice","code":"Self"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Self.Element"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"update","kind":"identifier"},{"kind":"text","text":"("},{"text":"with","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:s10SetAlgebraP7ElementQa"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:s10SetAlgebraP7ElementQa","kind":"typeIdentifier","text":"Element"},{"text":"?","kind":"text"}],"title":"update(with:)","role":"symbol","url":"\/documentation\/compute\/setalgebra\/update(with:)-2oa9l","abstract":[{"type":"text","text":"Inserts the given element into the set."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SetAlgebra\/update(with:)-2oa9l"},"doc://com.swallow.documentation.Compute/documentation/Compute/SetAlgebra/update(with:)-7ka13":{"required":true,"role":"symbol","defaultImplementations":1,"type":"topic","title":"update(with:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SetAlgebra\/update(with:)-7ka13","url":"\/documentation\/compute\/setalgebra\/update(with:)-7ka13","abstract":[{"text":"Inserts the given element into the set unconditionally.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"update"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:s10SetAlgebraP7ElementQa","text":"Element"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:s10SetAlgebraP7ElementQa","kind":"typeIdentifier","text":"Element"},{"kind":"text","text":"?"}],"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/SetAlgebra/Element":{"title":"Element","type":"topic","url":"\/documentation\/compute\/setalgebra\/element","role":"symbol","abstract":[{"text":"A type for which the conforming type provides a containment test.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SetAlgebra\/Element","kind":"symbol","required":true,"fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"}}}