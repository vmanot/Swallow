{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/customdebugstringconvertible"]}],"sections":[],"topicSections":[{"title":"Instance Properties","anchor":"Instance-Properties","generated":true,"identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CustomDebugStringConvertible\/debugDescription-24s3u"]}],"abstract":[{"type":"text","text":"A type with a customized textual representation suitable for debugging"},{"text":" ","type":"text"},{"text":"purposes.","type":"text"}],"relationshipsSections":[{"identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CodingKey"],"type":"inheritedBy","title":"Inherited By","kind":"relationships"},{"title":"Conforming Types","kind":"relationships","type":"conformingTypes","identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyHashable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyKeyPath","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Array","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArraySlice","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AutoreleasingUnsafeMutablePointer","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bag","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CVaListPointer","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Character","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ClosedRange","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CollectionOfOne","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ContiguousArray","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary\/Keys-swift.struct","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary\/Values-swift.struct","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Double","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float16","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/KeyPath","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/KeyValuePairs","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ObjectIdentifier","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/OpaquePointer","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Optional","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/PartialKeyPath","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Range","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RecursiveArray","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ReferenceWritableKeyPath","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD16","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD2","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD3","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD4","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD64","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD8","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Set","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/StaticBigInt","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/StaticString","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/UTF16View","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/UTF8View","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/UnicodeScalarView","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Substring","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Unicode\/Scalar","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeBufferPointer","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableBufferPointer","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutablePointer","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableRawBufferPointer","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableRawPointer","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafePointer","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeRawBufferPointer","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeRawPointer","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/WritableKeyPath"]}],"kind":"symbol","primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"CustomDebugStringConvertible"}],"platforms":["macOS"]}],"kind":"declarations"},{"content":[{"text":"Overview","level":2,"type":"heading","anchor":"overview"},{"type":"paragraph","inlineContent":[{"text":"Swift provides a default debugging textual representation for any type.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"That default representation is used by the "},{"type":"codeVoice","code":"String(reflecting:)"},{"text":" ","type":"text"},{"type":"text","text":"initializer and the "},{"type":"codeVoice","code":"debugPrint(_:)"},{"text":" function for types that don’t provide","type":"text"},{"type":"text","text":" "},{"text":"their own. To customize that representation, make your type conform to the","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"CustomDebugStringConvertible"},{"type":"text","text":" protocol."}]},{"type":"paragraph","inlineContent":[{"text":"Because the ","type":"text"},{"type":"codeVoice","code":"String(reflecting:)"},{"type":"text","text":" initializer works for instances of "},{"type":"emphasis","inlineContent":[{"text":"any","type":"text"}]},{"type":"text","text":" "},{"type":"text","text":"type, returning an instance’s "},{"type":"codeVoice","code":"debugDescription"},{"text":" if the value passed","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"conforms to "},{"code":"CustomDebugStringConvertible","type":"codeVoice"},{"text":", accessing a type’s","type":"text"},{"text":" ","type":"text"},{"code":"debugDescription","type":"codeVoice"},{"text":" property directly or using","type":"text"},{"text":" ","type":"text"},{"code":"CustomDebugStringConvertible","type":"codeVoice"},{"type":"text","text":" as a generic constraint is discouraged."}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Calling the "},{"code":"dump(_:_:_:_:)","type":"codeVoice"},{"type":"text","text":" function and printing in the debugger"},{"text":" ","type":"text"},{"text":"uses both ","type":"text"},{"code":"String(reflecting:)","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Mirror(reflecting:)"},{"type":"text","text":" to collect"},{"type":"text","text":" "},{"type":"text","text":"information about an instance. If you implement"},{"type":"text","text":" "},{"type":"codeVoice","code":"CustomDebugStringConvertible"},{"type":"text","text":" conformance for your custom type, you may"},{"text":" ","type":"text"},{"type":"text","text":"want to consider providing a custom mirror by implementing"},{"text":" ","type":"text"},{"type":"codeVoice","code":"CustomReflectable"},{"text":" conformance, as well.","type":"text"}]}],"name":"Note","type":"aside","style":"note"},{"anchor":"Conforming-to-the-CustomDebugStringConvertible-Protocol","level":1,"type":"heading","text":"Conforming to the CustomDebugStringConvertible Protocol"},{"type":"paragraph","inlineContent":[{"text":"Add ","type":"text"},{"code":"CustomDebugStringConvertible","type":"codeVoice"},{"text":" conformance to your custom types by","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"defining a "},{"type":"codeVoice","code":"debugDescription"},{"type":"text","text":" property."}]},{"inlineContent":[{"type":"text","text":"For example, this custom "},{"code":"Point","type":"codeVoice"},{"type":"text","text":" struct uses the default representation"},{"type":"text","text":" "},{"type":"text","text":"supplied by the standard library:"}],"type":"paragraph"},{"syntax":null,"code":["struct Point {","    let x: Int, y: Int","}","","let p = Point(x: 21, y: 30)","print(String(reflecting: p))","\/\/ Prints \"Point(x: 21, y: 30)\""],"type":"codeListing"},{"inlineContent":[{"text":"After adding ","type":"text"},{"code":"CustomDebugStringConvertible","type":"codeVoice"},{"text":" conformance by implementing the","type":"text"},{"text":" ","type":"text"},{"code":"debugDescription","type":"codeVoice"},{"type":"text","text":" property, "},{"code":"Point","type":"codeVoice"},{"type":"text","text":" provides its own custom debugging"},{"type":"text","text":" "},{"type":"text","text":"representation."}],"type":"paragraph"},{"syntax":null,"type":"codeListing","code":["extension Point: CustomDebugStringConvertible {","    var debugDescription: String {","        return \"(\\(x), \\(y))\"","    }","}","","print(String(reflecting: p))","\/\/ Prints \"(21, 30)\""]}],"kind":"content"}],"metadata":{"symbolKind":"protocol","title":"CustomDebugStringConvertible","externalID":"s:s28CustomDebugStringConvertibleP","role":"symbol","navigatorTitle":[{"text":"CustomDebugStringConvertible","kind":"identifier"}],"roleHeading":"Protocol","modules":[{"name":"Compute"}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"CustomDebugStringConvertible","kind":"identifier"}]},"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CustomDebugStringConvertible","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute"]]},"schemaVersion":{"major":0,"patch":0,"minor":3},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Bag":{"url":"\/documentation\/compute\/bag","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Bag","kind":"identifier"}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Element"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Copyable"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Escapable"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"kind":"symbol","title":"Bag","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bag","navigatorTitle":[{"text":"Bag","kind":"identifier"}],"abstract":[],"role":"symbol","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/Dictionary/Values-swift.struct":{"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary\/Values-swift.struct","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Key","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"text":", ","type":"text"},{"code":"Value","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Copyable","type":"codeVoice"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Value"},{"text":" conforms to ","type":"text"},{"code":"Escapable","type":"codeVoice"},{"type":"text","text":"."}]},"title":"Dictionary.Values","role":"symbol","abstract":[{"text":"A view of a dictionary’s values.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Values"}],"url":"\/documentation\/compute\/dictionary\/values-swift.struct","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Values","kind":"identifier"}],"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/ArraySlice":{"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArraySlice","title":"ArraySlice","url":"\/documentation\/compute\/arrayslice","kind":"symbol","abstract":[{"type":"text","text":"A slice of an "},{"type":"codeVoice","code":"Array"},{"text":", ","type":"text"},{"type":"codeVoice","code":"ContiguousArray"},{"text":", or ","type":"text"},{"type":"codeVoice","code":"ArraySlice"},{"type":"text","text":" instance."}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ArraySlice"}],"navigatorTitle":[{"kind":"identifier","text":"ArraySlice"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Element","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Copyable","type":"codeVoice"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Escapable"},{"type":"text","text":"."}]}},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeMutableBufferPointer":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"UnsafeMutableBufferPointer","kind":"identifier"}],"abstract":[{"text":"A nonowning collection interface to a buffer of mutable","type":"text"},{"type":"text","text":" "},{"type":"text","text":"elements stored contiguously in memory."}],"type":"topic","url":"\/documentation\/compute\/unsafemutablebufferpointer","navigatorTitle":[{"text":"UnsafeMutableBufferPointer","kind":"identifier"}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableBufferPointer","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Element"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Escapable"},{"text":".","type":"text"}]},"title":"UnsafeMutableBufferPointer"},"doc://com.swallow.documentation.Compute/documentation/Compute/AnyKeyPath":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyKeyPath","url":"\/documentation\/compute\/anykeypath","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"AnyKeyPath","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"AnyKeyPath"}],"role":"symbol","kind":"symbol","abstract":[{"text":"A type-erased key path, from any root type to any resulting value","type":"text"},{"type":"text","text":" "},{"type":"text","text":"type."}],"type":"topic","title":"AnyKeyPath"},"doc://com.swallow.documentation.Compute/documentation/Compute/PartialKeyPath":{"type":"topic","navigatorTitle":[{"text":"PartialKeyPath","kind":"identifier"}],"abstract":[{"type":"text","text":"A partially type-erased key path, from a concrete root type to any"},{"text":" ","type":"text"},{"type":"text","text":"resulting value type."}],"title":"PartialKeyPath","url":"\/documentation\/compute\/partialkeypath","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/PartialKeyPath","role":"symbol","kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"PartialKeyPath"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/AnyHashable":{"role":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyHashable","kind":"identifier"}],"abstract":[{"text":"A type-erased hashable value.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyHashable","navigatorTitle":[{"text":"AnyHashable","kind":"identifier"}],"url":"\/documentation\/compute\/anyhashable","title":"AnyHashable","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD4":{"kind":"symbol","navigatorTitle":[{"text":"SIMD4","kind":"identifier"}],"title":"SIMD4","url":"\/documentation\/compute\/simd4","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Scalar"},{"type":"text","text":" conforms to "},{"code":"SIMDScalar","type":"codeVoice"},{"type":"text","text":"."}]},"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD4","abstract":[{"type":"text","text":"A vector of four scalar values."}],"type":"topic","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SIMD4"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SIMD32"}],"abstract":[{"text":"A vector of 32 scalar values.","type":"text"}],"type":"topic","url":"\/documentation\/compute\/simd32","navigatorTitle":[{"text":"SIMD32","kind":"identifier"}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32","conformance":{"constraints":[{"type":"codeVoice","code":"Scalar"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"SIMDScalar"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"title":"SIMD32"},"doc://com.swallow.documentation.Compute/documentation/Compute/Substring":{"navigatorTitle":[{"kind":"identifier","text":"Substring"}],"url":"\/documentation\/compute\/substring","title":"Substring","abstract":[{"text":"A slice of a string.","type":"text"}],"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Substring","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Substring","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/KeyPath":{"type":"topic","role":"symbol","url":"\/documentation\/compute\/keypath","title":"KeyPath","kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"KeyPath"}],"abstract":[{"type":"text","text":"A key path from a specific root type to a specific resulting value type."}],"navigatorTitle":[{"text":"KeyPath","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/KeyPath"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/UnicodeScalarView":{"url":"\/documentation\/compute\/string\/unicodescalarview","abstract":[{"text":"A view of a string’s contents as a collection of Unicode scalar values.","type":"text"}],"kind":"symbol","role":"symbol","title":"String.UnicodeScalarView","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"UnicodeScalarView"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"UnicodeScalarView"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/UnicodeScalarView"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD16":{"kind":"symbol","navigatorTitle":[{"text":"SIMD16","kind":"identifier"}],"title":"SIMD16","url":"\/documentation\/compute\/simd16","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"SIMDScalar","type":"codeVoice"},{"type":"text","text":"."}]},"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD16","abstract":[{"type":"text","text":"A vector of 16 scalar values."}],"type":"topic","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SIMD16","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD2":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SIMD2","kind":"identifier"}],"abstract":[{"text":"A vector of two scalar values.","type":"text"}],"type":"topic","url":"\/documentation\/compute\/simd2","navigatorTitle":[{"text":"SIMD2","kind":"identifier"}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD2","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"SIMDScalar"},{"text":".","type":"text"}]},"title":"SIMD2"},"doc://com.swallow.documentation.Compute/documentation/Compute/RecursiveArray":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RecursiveArray","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RecursiveArray","title":"RecursiveArray","abstract":[],"conformance":{"constraints":[{"type":"codeVoice","code":"Unit"},{"text":" conforms to ","type":"text"},{"code":"Copyable","type":"codeVoice"},{"type":"text","text":" and "},{"code":"Escapable","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"navigatorTitle":[{"kind":"identifier","text":"RecursiveArray"}],"kind":"symbol","role":"symbol","type":"topic","url":"\/documentation\/compute\/recursivearray"},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafePointer":{"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafePointer","title":"UnsafePointer","url":"\/documentation\/compute\/unsafepointer","kind":"symbol","abstract":[{"type":"text","text":"A pointer for accessing data of a specific type."}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"UnsafePointer","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"UnsafePointer"}],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Pointee"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Escapable"},{"type":"text","text":"."}]}},"doc://com.swallow.documentation.Compute/documentation/Compute/CustomDebugStringConvertible/debugDescription-24s3u":{"kind":"symbol","required":true,"title":"debugDescription","url":"\/documentation\/compute\/customdebugstringconvertible\/debugdescription-24s3u","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CustomDebugStringConvertible\/debugDescription-24s3u","defaultImplementations":1,"abstract":[{"type":"text","text":"A textual representation of this instance, suitable for debugging."}],"type":"topic","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"debugDescription"},{"kind":"text","text":": "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Float16":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float16","navigatorTitle":[{"kind":"identifier","text":"Float16"}],"role":"symbol","title":"Float16","url":"\/documentation\/compute\/float16","type":"topic","abstract":[{"type":"text","text":"A half-precision (16b), floating-point value type."}],"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Float16"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Dictionary/Keys-swift.struct":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary\/Keys-swift.struct","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Key","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Value"},{"text":" conforms to ","type":"text"},{"code":"Copyable","type":"codeVoice"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Value"},{"text":" conforms to ","type":"text"},{"code":"Escapable","type":"codeVoice"},{"type":"text","text":"."}]},"title":"Dictionary.Keys","type":"topic","url":"\/documentation\/compute\/dictionary\/keys-swift.struct","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Keys"}],"role":"symbol","kind":"symbol","navigatorTitle":[{"text":"Keys","kind":"identifier"}],"abstract":[{"type":"text","text":"A view of a dictionary’s keys."}]},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeBufferPointer":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"UnsafeBufferPointer"}],"abstract":[{"text":"A nonowning collection interface to a buffer of","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"elements stored contiguously in memory."}],"type":"topic","url":"\/documentation\/compute\/unsafebufferpointer","navigatorTitle":[{"text":"UnsafeBufferPointer","kind":"identifier"}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeBufferPointer","conformance":{"constraints":[{"type":"codeVoice","code":"Element"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Escapable"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"title":"UnsafeBufferPointer"},"doc://com.swallow.documentation.Compute/documentation/Compute/Character":{"title":"Character","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Character","abstract":[{"type":"text","text":"A single extended grapheme cluster that approximates a user-perceived"},{"type":"text","text":" "},{"text":"character.","type":"text"}],"type":"topic","role":"symbol","url":"\/documentation\/compute\/character","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Character"}],"navigatorTitle":[{"kind":"identifier","text":"Character"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Float":{"type":"topic","abstract":[{"text":"A single-precision, floating-point value type.","type":"text"}],"url":"\/documentation\/compute\/float","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Float"}],"navigatorTitle":[{"text":"Float","kind":"identifier"}],"title":"Float"},"doc://com.swallow.documentation.Compute/documentation/Compute/Range":{"navigatorTitle":[{"kind":"identifier","text":"Range"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Range","url":"\/documentation\/compute\/range","title":"Range","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Range","kind":"identifier"}],"abstract":[{"type":"text","text":"A half-open interval from a lower bound up to, but not including, an upper"},{"text":" ","type":"text"},{"text":"bound.","type":"text"}],"type":"topic","role":"symbol","conformance":{"constraints":[{"code":"Bound","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Comparable"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]}},"doc://com.swallow.documentation.Compute/documentation/Compute/Array":{"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Array","title":"Array","url":"\/documentation\/compute\/array","kind":"symbol","abstract":[{"text":"An ordered, random-access collection.","type":"text"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Array","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"Array"}],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Element","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Copyable","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"Escapable","type":"codeVoice"},{"type":"text","text":"."}]}},"doc://com.swallow.documentation.Compute/documentation/Compute/Double":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Double","abstract":[{"text":"A double-precision, floating-point value type.","type":"text"}],"title":"Double","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Double","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"Double","kind":"identifier"}],"kind":"symbol","type":"topic","url":"\/documentation\/compute\/double"},"doc://com.swallow.documentation.Compute/documentation/Compute/String":{"type":"topic","navigatorTitle":[{"kind":"identifier","text":"String"}],"title":"String","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"String","kind":"identifier"}],"abstract":[{"type":"text","text":"A Unicode string value that is a collection of characters."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String","kind":"symbol","role":"symbol","url":"\/documentation\/compute\/string"},"doc://com.swallow.documentation.Compute/documentation/Compute/WritableKeyPath":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/WritableKeyPath","title":"WritableKeyPath","role":"symbol","abstract":[{"text":"A key path that supports reading from and writing to the resulting value.","type":"text"}],"type":"topic","kind":"symbol","navigatorTitle":[{"text":"WritableKeyPath","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"WritableKeyPath","kind":"identifier"}],"url":"\/documentation\/compute\/writablekeypath"},"doc://com.swallow.documentation.Compute/documentation/Compute/ReferenceWritableKeyPath":{"title":"ReferenceWritableKeyPath","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"ReferenceWritableKeyPath","kind":"identifier"}],"navigatorTitle":[{"text":"ReferenceWritableKeyPath","kind":"identifier"}],"url":"\/documentation\/compute\/referencewritablekeypath","abstract":[{"type":"text","text":"A key path that supports reading from and writing to the resulting value"},{"text":" ","type":"text"},{"text":"with reference semantics.","type":"text"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ReferenceWritableKeyPath","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD3":{"kind":"symbol","navigatorTitle":[{"text":"SIMD3","kind":"identifier"}],"title":"SIMD3","url":"\/documentation\/compute\/simd3","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Scalar"},{"text":" conforms to ","type":"text"},{"code":"SIMDScalar","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD3","abstract":[{"type":"text","text":"A vector of three scalar values."}],"type":"topic","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SIMD3"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/CodingKey":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CodingKey","url":"\/documentation\/compute\/codingkey","navigatorTitle":[{"text":"CodingKey","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"CodingKey","kind":"identifier"}],"abstract":[{"text":"A type that can be used as a key for encoding and decoding.","type":"text"}],"type":"topic","role":"symbol","title":"CodingKey","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/ClosedRange":{"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"ClosedRange","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ClosedRange","navigatorTitle":[{"text":"ClosedRange","kind":"identifier"}],"title":"ClosedRange","url":"\/documentation\/compute\/closedrange","abstract":[{"text":"An interval from a lower bound up to, and including, an upper bound.","type":"text"}],"role":"symbol","type":"topic","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Bound"},{"type":"text","text":" conforms to "},{"code":"Comparable","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]}},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeRawPointer":{"role":"symbol","abstract":[{"text":"A raw pointer for accessing untyped data.","type":"text"}],"title":"UnsafeRawPointer","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"UnsafeRawPointer"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeRawPointer","kind":"symbol","navigatorTitle":[{"text":"UnsafeRawPointer","kind":"identifier"}],"url":"\/documentation\/compute\/unsaferawpointer","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeMutableRawPointer":{"kind":"symbol","type":"topic","abstract":[{"text":"A raw pointer for accessing and manipulating untyped data.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableRawPointer","url":"\/documentation\/compute\/unsafemutablerawpointer","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"UnsafeMutableRawPointer"}],"title":"UnsafeMutableRawPointer","navigatorTitle":[{"kind":"identifier","text":"UnsafeMutableRawPointer"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/CVaListPointer":{"url":"\/documentation\/compute\/cvalistpointer","title":"CVaListPointer","role":"symbol","abstract":[],"navigatorTitle":[{"text":"CVaListPointer","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CVaListPointer","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CVaListPointer"}],"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/StaticString":{"url":"\/documentation\/compute\/staticstring","navigatorTitle":[{"kind":"identifier","text":"StaticString"}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"StaticString"}],"abstract":[{"type":"text","text":"A string type designed to represent text that is known at compile time."}],"type":"topic","title":"StaticString","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/StaticString"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD64":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SIMD64","kind":"identifier"}],"abstract":[{"type":"text","text":"A vector of 64 scalar values."}],"type":"topic","url":"\/documentation\/compute\/simd64","navigatorTitle":[{"text":"SIMD64","kind":"identifier"}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD64","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"SIMDScalar"},{"type":"text","text":"."}]},"title":"SIMD64"},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeMutablePointer":{"title":"UnsafeMutablePointer","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutablePointer","type":"topic","url":"\/documentation\/compute\/unsafemutablepointer","kind":"symbol","abstract":[{"text":"A pointer for accessing and manipulating data of a","type":"text"},{"type":"text","text":" "},{"type":"text","text":"specific type."}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"UnsafeMutablePointer"}],"navigatorTitle":[{"text":"UnsafeMutablePointer","kind":"identifier"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Pointee","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Escapable","type":"codeVoice"},{"type":"text","text":"."}]}},"doc://com.swallow.documentation.Compute/documentation/Compute/OpaquePointer":{"role":"symbol","navigatorTitle":[{"text":"OpaquePointer","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OpaquePointer","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/OpaquePointer","type":"topic","title":"OpaquePointer","kind":"symbol","abstract":[{"type":"text","text":"A wrapper around an opaque C pointer."}],"url":"\/documentation\/compute\/opaquepointer"},"doc://com.swallow.documentation.Compute/documentation/Compute/ContiguousArray":{"title":"ContiguousArray","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"ContiguousArray","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ContiguousArray","type":"topic","navigatorTitle":[{"text":"ContiguousArray","kind":"identifier"}],"abstract":[{"type":"text","text":"A contiguously stored array."}],"conformance":{"constraints":[{"code":"Element","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Copyable","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Escapable"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"role":"symbol","kind":"symbol","url":"\/documentation\/compute\/contiguousarray"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/UTF8View":{"url":"\/documentation\/compute\/string\/utf8view","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"UTF8View"}],"role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"UTF8View"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/UTF8View","abstract":[{"text":"A view of a string’s contents as a collection of UTF-8 code units.","type":"text"}],"type":"topic","title":"String.UTF8View"},"doc://com.swallow.documentation.Compute/documentation/Compute/StaticBigInt":{"abstract":[{"text":"An immutable arbitrary-precision signed integer.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"StaticBigInt"}],"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StaticBigInt","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/StaticBigInt","url":"\/documentation\/compute\/staticbigint","kind":"symbol","title":"StaticBigInt","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD8":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"SIMD8"}],"title":"SIMD8","url":"\/documentation\/compute\/simd8","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Scalar"},{"type":"text","text":" conforms to "},{"code":"SIMDScalar","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD8","abstract":[{"text":"A vector of eight scalar values.","type":"text"}],"type":"topic","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SIMD8"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/String/UTF16View":{"navigatorTitle":[{"text":"UTF16View","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/UTF16View","kind":"symbol","title":"String.UTF16View","url":"\/documentation\/compute\/string\/utf16view","abstract":[{"text":"A view of a string’s contents as a collection of UTF-16 code units.","type":"text"}],"role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"UTF16View"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeRawBufferPointer":{"title":"UnsafeRawBufferPointer","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeRawBufferPointer","kind":"symbol","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"UnsafeRawBufferPointer","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"UnsafeRawBufferPointer"}],"url":"\/documentation\/compute\/unsaferawbufferpointer","abstract":[{"type":"text","text":"A  nonowning collection interface to the bytes in a"},{"text":" ","type":"text"},{"type":"text","text":"region of memory."}]},"doc://com.swallow.documentation.Compute/documentation/Compute/AutoreleasingUnsafeMutablePointer":{"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AutoreleasingUnsafeMutablePointer"}],"url":"\/documentation\/compute\/autoreleasingunsafemutablepointer","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"A mutable pointer addressing an Objective-C reference that doesn’t own its"},{"text":" ","type":"text"},{"type":"text","text":"target."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AutoreleasingUnsafeMutablePointer","navigatorTitle":[{"text":"AutoreleasingUnsafeMutablePointer","kind":"identifier"}],"title":"AutoreleasingUnsafeMutablePointer"},"doc://com.swallow.documentation.Compute/documentation/Compute/Dictionary":{"title":"Dictionary","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Dictionary","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary","type":"topic","navigatorTitle":[{"text":"Dictionary","kind":"identifier"}],"abstract":[{"type":"text","text":"A collection whose elements are key-value pairs."}],"conformance":{"constraints":[{"type":"codeVoice","code":"Key"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Hashable"},{"text":", ","type":"text"},{"code":"Value","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Copyable","type":"codeVoice"},{"type":"text","text":", and "},{"code":"Value","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Escapable"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"role":"symbol","kind":"symbol","url":"\/documentation\/compute\/dictionary"},"doc://com.swallow.documentation.Compute/documentation/Compute/Optional":{"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Optional","title":"Optional","url":"\/documentation\/compute\/optional","kind":"symbol","abstract":[{"type":"text","text":"A type that represents either a wrapped value or the absence of a value."}],"role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Optional"}],"navigatorTitle":[{"text":"Optional","kind":"identifier"}],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Wrapped","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Copyable"},{"text":" and ","type":"text"},{"code":"Escapable","type":"codeVoice"},{"type":"text","text":"."}]}},"doc://com.swallow.documentation.Compute/documentation/Compute/Set":{"title":"Set","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Set","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Set","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Set"}],"abstract":[{"type":"text","text":"An unordered collection of unique elements."}],"conformance":{"constraints":[{"code":"Element","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Hashable","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"role":"symbol","kind":"symbol","url":"\/documentation\/compute\/set"},"doc://com.swallow.documentation.Compute/documentation/Compute/ObjectIdentifier":{"title":"ObjectIdentifier","navigatorTitle":[{"text":"ObjectIdentifier","kind":"identifier"}],"type":"topic","url":"\/documentation\/compute\/objectidentifier","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ObjectIdentifier","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ObjectIdentifier","abstract":[{"type":"text","text":"A unique identifier for a class instance or metatype."}],"role":"symbol","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/CollectionOfOne":{"title":"CollectionOfOne","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CollectionOfOne"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CollectionOfOne","type":"topic","navigatorTitle":[{"kind":"identifier","text":"CollectionOfOne"}],"abstract":[{"type":"text","text":"A collection containing a single element."}],"conformance":{"constraints":[{"code":"Element","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Copyable","type":"codeVoice"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Escapable"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","kind":"symbol","url":"\/documentation\/compute\/collectionofone"},"doc://com.swallow.documentation.Compute/documentation/Compute/KeyValuePairs":{"abstract":[{"text":"A lightweight collection of key-value pairs.","type":"text"}],"title":"KeyValuePairs","kind":"symbol","navigatorTitle":[{"text":"KeyValuePairs","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/KeyValuePairs","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Key","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Copyable","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"Key"},{"text":" conforms to ","type":"text"},{"code":"Escapable","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"Value"},{"text":" conforms to ","type":"text"},{"code":"Copyable","type":"codeVoice"},{"type":"text","text":", and "},{"code":"Value","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Escapable","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"type":"topic","url":"\/documentation\/compute\/keyvaluepairs","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"KeyValuePairs"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/CustomDebugStringConvertible":{"url":"\/documentation\/compute\/customdebugstringconvertible","role":"symbol","abstract":[{"text":"A type with a customized textual representation suitable for debugging","type":"text"},{"type":"text","text":" "},{"text":"purposes.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CustomDebugStringConvertible","title":"CustomDebugStringConvertible","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CustomDebugStringConvertible","kind":"identifier"}],"navigatorTitle":[{"text":"CustomDebugStringConvertible","kind":"identifier"}],"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Unicode/Scalar":{"title":"Unicode.Scalar","type":"topic","kind":"symbol","navigatorTitle":[{"text":"Scalar","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Scalar","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Unicode\/Scalar","abstract":[{"type":"text","text":"A Unicode scalar value."}],"role":"symbol","url":"\/documentation\/compute\/unicode\/scalar"},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeMutableRawBufferPointer":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableRawBufferPointer","type":"topic","title":"UnsafeMutableRawBufferPointer","kind":"symbol","url":"\/documentation\/compute\/unsafemutablerawbufferpointer","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"UnsafeMutableRawBufferPointer"}],"role":"symbol","navigatorTitle":[{"text":"UnsafeMutableRawBufferPointer","kind":"identifier"}],"abstract":[{"text":"A mutable nonowning collection interface to the bytes in a","type":"text"},{"type":"text","text":" "},{"text":"region of memory.","type":"text"}]}}}