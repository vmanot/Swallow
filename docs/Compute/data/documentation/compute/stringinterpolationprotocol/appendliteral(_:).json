{"variants":[{"paths":["\/documentation\/compute\/stringinterpolationprotocol\/appendliteral(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","abstract":[{"text":"Appends a literal segment to the interpolation.","type":"text"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"sections":[],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/StringInterpolationProtocol"]]},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"mutating","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"appendLiteral","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"literal"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"StringLiteralType","kind":"typeIdentifier","preciseIdentifier":"s:s27StringInterpolationProtocolP0A11LiteralTypeQa","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/StringInterpolationProtocol\/StringLiteralType"},{"text":")","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"content":[{"inlineContent":[{"text":"A string literal containing the characters","type":"text"},{"text":" ","type":"text"},{"text":"that appear next in the string literal.","type":"text"}],"type":"paragraph"}],"name":"literal"}],"kind":"parameters"},{"kind":"content","content":[{"anchor":"discussion","text":"Discussion","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"text":"Don’t call this method directly. Instead, initialize a variable or","type":"text"},{"type":"text","text":" "},{"text":"constant using a string literal with interpolated expressions.","type":"text"}]},{"inlineContent":[{"text":"Interpolated expressions don’t pass through this method; instead, Swift","type":"text"},{"text":" ","type":"text"},{"text":"selects an overload of ","type":"text"},{"type":"codeVoice","code":"appendInterpolation"},{"text":". For more information, see","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the top-level "},{"code":"StringInterpolationProtocol","type":"codeVoice"},{"text":" documentation.","type":"text"}],"type":"paragraph"}]}],"metadata":{"role":"symbol","required":true,"modules":[{"name":"Compute"}],"title":"appendLiteral(_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"appendLiteral","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"StringLiteralType","kind":"typeIdentifier","preciseIdentifier":"s:s27StringInterpolationProtocolP0A11LiteralTypeQa"},{"kind":"text","text":")"}],"symbolKind":"method","roleHeading":"Instance Method","externalID":"s:s27StringInterpolationProtocolP13appendLiteralyy0aE4TypeQzF"},"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/StringInterpolationProtocol\/appendLiteral(_:)","interfaceLanguage":"swift"},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/StringInterpolationProtocol/StringLiteralType":{"role":"symbol","title":"StringLiteralType","required":true,"fragments":[{"kind":"keyword","text":"associatedtype"},{"text":" ","kind":"text"},{"kind":"identifier","text":"StringLiteralType"},{"kind":"text","text":" : "},{"text":"_ExpressibleByBuiltinStringLiteral","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"The type that should be used for literal segments."}],"url":"\/documentation\/compute\/stringinterpolationprotocol\/stringliteraltype","type":"topic","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/StringInterpolationProtocol\/StringLiteralType"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/StringInterpolationProtocol":{"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"StringInterpolationProtocol"}],"kind":"symbol","title":"StringInterpolationProtocol","abstract":[{"type":"text","text":"Represents the contents of a string literal with interpolations while it’s"},{"text":" ","type":"text"},{"type":"text","text":"being built up."}],"role":"symbol","type":"topic","navigatorTitle":[{"text":"StringInterpolationProtocol","kind":"identifier"}],"url":"\/documentation\/compute\/stringinterpolationprotocol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/StringInterpolationProtocol"},"doc://com.swallow.documentation.Compute/documentation/Compute/StringInterpolationProtocol/appendLiteral(_:)":{"role":"symbol","title":"appendLiteral(_:)","required":true,"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"appendLiteral"},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"StringLiteralType","kind":"typeIdentifier","preciseIdentifier":"s:s27StringInterpolationProtocolP0A11LiteralTypeQa"},{"kind":"text","text":")"}],"abstract":[{"text":"Appends a literal segment to the interpolation.","type":"text"}],"url":"\/documentation\/compute\/stringinterpolationprotocol\/appendliteral(_:)","type":"topic","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/StringInterpolationProtocol\/appendLiteral(_:)"}}}