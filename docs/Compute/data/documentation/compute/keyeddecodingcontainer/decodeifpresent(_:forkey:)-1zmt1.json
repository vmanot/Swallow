{"schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"decodeIfPresent"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Int8V","text":"Int8"},{"kind":"text","text":".Type, "},{"text":"forKey","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"KeyedDecodingContainer","preciseIdentifier":"s:s22KeyedDecodingContainerV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"K"},{"kind":"text","text":">."},{"text":"Key","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:s4Int8V","text":"Int8","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"role":"symbol","roleHeading":"Instance Method","modules":[{"name":"Compute"}],"title":"decodeIfPresent(_:forKey:)","externalID":"s:s22KeyedDecodingContainerV15decodeIfPresent_6forKeys4Int8VSgAFm_xtKF"},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/KeyedDecodingContainer"]]},"sections":[],"abstract":[{"text":"Decodes a value of the given type for the given key, if present.","type":"text"}],"variants":[{"paths":["\/documentation\/compute\/keyeddecodingcontainer\/decodeifpresent(_:forkey:)-1zmt1"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"decodeIfPresent","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"type"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8","kind":"typeIdentifier","preciseIdentifier":"s:s4Int8V","text":"Int8"},{"text":".Type, ","kind":"text"},{"text":"forKey","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"key","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"KeyedDecodingContainer","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/KeyedDecodingContainer","kind":"typeIdentifier","preciseIdentifier":"s:s22KeyedDecodingContainerV"},{"kind":"text","text":"<"},{"text":"K","kind":"typeIdentifier"},{"kind":"text","text":">."},{"kind":"typeIdentifier","text":"Key"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:s4Int8V","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8","text":"Int8","kind":"typeIdentifier"},{"text":"?","kind":"text"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"type","content":[{"type":"paragraph","inlineContent":[{"text":"The type of value to decode.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"The key that the decoded value is associated with.","type":"text"}]}],"name":"key"}]},{"content":[{"type":"heading","level":2,"text":"Return Value","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"text":"A decoded value of the requested type, or ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":" if the"},{"text":" ","type":"text"},{"type":"codeVoice","code":"Decoder"},{"text":" does not have an entry associated with the given key, or if","type":"text"},{"text":" ","type":"text"},{"text":"the value is a null value.","type":"text"}]}],"kind":"content"},{"kind":"content","content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"inlineContent":[{"type":"text","text":"This method returns "},{"code":"nil","type":"codeVoice"},{"type":"text","text":" if the container does not have a value"},{"text":" ","type":"text"},{"type":"text","text":"associated with "},{"code":"key","type":"codeVoice"},{"type":"text","text":", or if the value is null. The difference between"},{"type":"text","text":" "},{"type":"text","text":"these states can be distinguished with a "},{"type":"codeVoice","code":"contains(_:)"},{"type":"text","text":" call."}],"type":"paragraph"},{"name":"Throws","style":"note","content":[{"inlineContent":[{"text":"","type":"text"},{"code":"DecodingError.typeMismatch","type":"codeVoice"},{"type":"text","text":" if the encountered encoded value"},{"text":" ","type":"text"},{"type":"text","text":"is not convertible to the requested type."}],"type":"paragraph"}],"type":"aside"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/KeyedDecodingContainer\/decodeIfPresent(_:forKey:)-1zmt1"},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Int8":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Int8"}],"url":"\/documentation\/compute\/int8","title":"Int8","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Int8"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8","abstract":[{"text":"An 8-bit signed integer value","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"type."}]},"doc://com.swallow.documentation.Compute/documentation/Compute/KeyedDecodingContainer":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/KeyedDecodingContainer","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"KeyedDecodingContainer"}],"role":"symbol","url":"\/documentation\/compute\/keyeddecodingcontainer","title":"KeyedDecodingContainer","type":"topic","abstract":[{"text":"A concrete container that provides a view into a decoderâ€™s storage, making","type":"text"},{"type":"text","text":" "},{"text":"the encoded properties of a decodable type accessible by keys.","type":"text"}],"navigatorTitle":[{"text":"KeyedDecodingContainer","kind":"identifier"}],"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/KeyedDecodingContainer/decodeIfPresent(_:forKey:)-1zmt1":{"type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"decodeIfPresent","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Int8","preciseIdentifier":"s:s4Int8V"},{"text":".Type, ","kind":"text"},{"kind":"externalParam","text":"forKey"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s22KeyedDecodingContainerV","text":"KeyedDecodingContainer","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"K"},{"kind":"text","text":">."},{"text":"Key","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Int8V","text":"Int8"},{"kind":"text","text":"?"}],"url":"\/documentation\/compute\/keyeddecodingcontainer\/decodeifpresent(_:forkey:)-1zmt1","abstract":[{"type":"text","text":"Decodes a value of the given type for the given key, if present."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/KeyedDecodingContainer\/decodeIfPresent(_:forKey:)-1zmt1","title":"decodeIfPresent(_:forKey:)","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"}}}