{"topicSections":[{"anchor":"Initializers","identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeRawBufferPointer\/init(_:)-24m35","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeRawBufferPointer\/init(_:)-5ko6n","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeRawBufferPointer\/init(_:)-9uv4","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeRawBufferPointer\/init(_:)-rrzw","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeRawBufferPointer\/init(rebasing:)-9mh4j","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeRawBufferPointer\/init(rebasing:)-9sxid","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeRawBufferPointer\/init(start:count:)"],"generated":true,"title":"Initializers"},{"generated":true,"anchor":"Instance-Methods","identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeRawBufferPointer\/bindMemory(to:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeRawBufferPointer\/deallocate()","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeRawBufferPointer\/load(fromByteOffset:as:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeRawBufferPointer\/loadUnaligned(fromByteOffset:as:)-2r9sy","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeRawBufferPointer\/loadUnaligned(fromByteOffset:as:)-95fln","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeRawBufferPointer\/withMemoryRebound(to:_:)"],"title":"Instance Methods"},{"identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeRawBufferPointer\/BidirectionalCollection-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeRawBufferPointer\/BufferPointer-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeRawBufferPointer\/Collection-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeRawBufferPointer\/ConstantBufferPointer-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeRawBufferPointer\/CustomDebugStringConvertible-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeRawBufferPointer\/RandomAccessCollection-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeRawBufferPointer\/Sequence-Implementations"],"anchor":"Default-Implementations","title":"Default Implementations","generated":true}],"schemaVersion":{"patch":0,"major":0,"minor":3},"relationshipsSections":[{"type":"conformsTo","kind":"relationships","identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BidirectionalCollection","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BitwiseCopyable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Copyable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CustomDebugStringConvertible","doc:\/\/com.swallow.documentation.Compute\/10Foundation15ContiguousBytesP","doc:\/\/com.swallow.documentation.Compute\/10Foundation12DataProtocolP","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RandomAccessCollection","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence","doc:\/\/com.swallow.documentation.Compute\/7Swallow13BufferPointerP","doc:\/\/com.swallow.documentation.Compute\/7Swallow21ConstantBufferPointerP","doc:\/\/com.swallow.documentation.Compute\/7Swallow24ConstantRawBufferPointerP","doc:\/\/com.swallow.documentation.Compute\/7Swallow9CountableP","doc:\/\/com.swallow.documentation.Compute\/7Swallow22InitiableBufferPointerP","doc:\/\/com.swallow.documentation.Compute\/7Swallow18JoinableCollectionP","doc:\/\/com.swallow.documentation.Compute\/7Swallow16JoinableSequenceP","doc:\/\/com.swallow.documentation.Compute\/7Swallow32MutableRepresentationConvertibleP","doc:\/\/com.swallow.documentation.Compute\/7Swallow36NonDestroyingBidirectionalCollectionP","doc:\/\/com.swallow.documentation.Compute\/7Swallow23NonDestroyingCollectionP","doc:\/\/com.swallow.documentation.Compute\/7Swallow35NonDestroyingRandomAccessCollectionP","doc:\/\/com.swallow.documentation.Compute\/7Swallow21NonDestroyingSequenceP","doc:\/\/com.swallow.documentation.Compute\/7Swallow16RawBufferPointerP"],"title":"Conforms To"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"@frozen","kind":"attribute"},{"kind":"text","text":" "},{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"UnsafeRawBufferPointer"}]}]},{"kind":"content","content":[{"text":"Overview","level":2,"anchor":"overview","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can use an "},{"code":"UnsafeRawBufferPointer","type":"codeVoice"},{"text":" instance in low-level operations to eliminate","type":"text"},{"type":"text","text":" "},{"type":"text","text":"uniqueness checks and release mode bounds checks. Bounds checks are always"},{"text":" ","type":"text"},{"text":"performed in debug mode.","type":"text"}]},{"inlineContent":[{"type":"text","text":"An "},{"type":"codeVoice","code":"UnsafeRawBufferPointer"},{"type":"text","text":" instance is a view of the raw bytes in a region of memory."},{"text":" ","type":"text"},{"type":"text","text":"Each byte in memory is viewed as a "},{"code":"UInt8","type":"codeVoice"},{"text":" value independent of the type","type":"text"},{"type":"text","text":" "},{"type":"text","text":"of values held in that memory. Reading from memory through a raw buffer is"},{"type":"text","text":" "},{"text":"an untyped operation.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"In addition to its collection interface, an "},{"code":"UnsafeRawBufferPointer","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"instance also supports the "},{"type":"codeVoice","code":"load(fromByteOffset:as:)"},{"type":"text","text":" "},{"type":"text","text":"and "},{"type":"codeVoice","code":"loadUnaligned(fromByteOffset:as:)"},{"type":"text","text":" methods provided by"},{"type":"text","text":" "},{"type":"codeVoice","code":"UnsafeRawPointer"},{"type":"text","text":", including bounds checks in debug mode."}]},{"inlineContent":[{"text":"To access the underlying memory through typed operations, the memory must","type":"text"},{"type":"text","text":" "},{"type":"text","text":"be bound to a trivial type."}],"type":"paragraph"},{"type":"aside","style":"note","name":"Note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A "},{"type":"emphasis","inlineContent":[{"type":"text","text":"trivial type"}]},{"type":"text","text":" can be copied bit for bit with no indirection"},{"type":"text","text":" "},{"type":"text","text":"or reference-counting operations. Generally, native Swift types that do"},{"text":" ","type":"text"},{"type":"text","text":"not contain strong or weak references or other forms of indirection are"},{"text":" ","type":"text"},{"type":"text","text":"trivial, as are imported C structs and enums. Copying memory that"},{"type":"text","text":" "},{"type":"text","text":"contains values of nontrivial types can only be done safely with a typed"},{"type":"text","text":" "},{"type":"text","text":"pointer. Copying bytes directly from nontrivial, in-memory values does"},{"text":" ","type":"text"},{"text":"not produce valid copies and can only be done by calling a C API, such as","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"memmove()"},{"text":".","type":"text"}]}]},{"level":1,"anchor":"UnsafeRawBufferPointer-Semantics","text":"UnsafeRawBufferPointer Semantics","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"An ","type":"text"},{"type":"codeVoice","code":"UnsafeRawBufferPointer"},{"text":" instance is a view into memory and does not own the memory","type":"text"},{"text":" ","type":"text"},{"text":"that it references. Copying a variable or constant of type ","type":"text"},{"code":"UnsafeRawBufferPointer","type":"codeVoice"},{"type":"text","text":" does"},{"text":" ","type":"text"},{"type":"text","text":"not copy the underlying memory. However, initializing another collection"},{"type":"text","text":" "},{"text":"with an ","type":"text"},{"type":"codeVoice","code":"UnsafeRawBufferPointer"},{"text":" instance copies bytes out of the referenced memory and","type":"text"},{"type":"text","text":" "},{"type":"text","text":"into the new collection."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The following example uses "},{"code":"someBytes","type":"codeVoice"},{"type":"text","text":", an "},{"type":"codeVoice","code":"UnsafeRawBufferPointer"},{"type":"text","text":" instance, to"},{"type":"text","text":" "},{"text":"demonstrate the difference between assigning a buffer pointer and using a","type":"text"},{"type":"text","text":" "},{"type":"text","text":"buffer pointer as the source for another collection’s elements. Here, the"},{"type":"text","text":" "},{"text":"assignment to ","type":"text"},{"code":"destBytes","type":"codeVoice"},{"type":"text","text":" creates a new, nonowning buffer pointer"},{"text":" ","type":"text"},{"type":"text","text":"covering the first "},{"code":"n","type":"codeVoice"},{"type":"text","text":" bytes of the memory that "},{"code":"someBytes","type":"codeVoice"},{"type":"text","text":" "},{"text":"references—nothing is copied:","type":"text"}]},{"code":["var destBytes = someBytes[0..<n]"],"type":"codeListing","syntax":null},{"type":"paragraph","inlineContent":[{"type":"text","text":"Next, the bytes referenced by "},{"type":"codeVoice","code":"destBytes"},{"type":"text","text":" are copied into "},{"code":"byteArray","type":"codeVoice"},{"type":"text","text":", a"},{"type":"text","text":" "},{"type":"text","text":"new "},{"type":"codeVoice","code":"[UInt8]"},{"text":" array, and then the remainder of ","type":"text"},{"code":"someBytes","type":"codeVoice"},{"text":" is appended to","type":"text"},{"text":" ","type":"text"},{"code":"byteArray","type":"codeVoice"},{"type":"text","text":":"}]},{"type":"codeListing","syntax":null,"code":["var byteArray: [UInt8] = Array(destBytes)","byteArray += someBytes[n..<someBytes.count]"]}]}],"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeRawBufferPointer","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/unsaferawbufferpointer"]}],"kind":"symbol","sections":[],"abstract":[{"text":"A  nonowning collection interface to the bytes in a","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"region of memory."}],"metadata":{"navigatorTitle":[{"text":"UnsafeRawBufferPointer","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"UnsafeRawBufferPointer","kind":"identifier"}],"symbolKind":"struct","modules":[{"name":"Compute"}],"title":"UnsafeRawBufferPointer","externalID":"s:SW","roleHeading":"Structure","role":"symbol"},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute"]]},"references":{"doc://com.swallow.documentation.Compute/7Swallow21NonDestroyingSequenceP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow21NonDestroyingSequenceP","type":"unresolvable","title":"Swallow.NonDestroyingSequence"},"doc://com.swallow.documentation.Compute/7Swallow13BufferPointerP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow13BufferPointerP","type":"unresolvable","title":"Swallow.BufferPointer"},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeRawBufferPointer/BufferPointer-Implementations":{"role":"collectionGroup","type":"topic","abstract":[],"kind":"article","url":"\/documentation\/compute\/unsaferawbufferpointer\/bufferpointer-implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeRawBufferPointer\/BufferPointer-Implementations","title":"BufferPointer Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeRawBufferPointer/init(_:)-5ko6n":{"role":"symbol","type":"topic","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:Sw","text":"UnsafeMutableRawBufferPointer","kind":"typeIdentifier"},{"text":")","kind":"text"}],"abstract":[{"type":"text","text":"Creates a new buffer over the same memory as the given buffer."}],"title":"init(_:)","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeRawBufferPointer\/init(_:)-5ko6n","url":"\/documentation\/compute\/unsaferawbufferpointer\/init(_:)-5ko6n"},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeRawBufferPointer/init(rebasing:)-9sxid":{"role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"text":"rebasing","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Slice","preciseIdentifier":"s:s5SliceV"},{"kind":"text","text":"<"},{"text":"UnsafeMutableRawBufferPointer","preciseIdentifier":"s:Sw","kind":"typeIdentifier"},{"text":">)","kind":"text"}],"type":"topic","abstract":[{"type":"text","text":"Creates a raw buffer over the same memory as the given raw buffer slice,"},{"type":"text","text":" "},{"type":"text","text":"with the indices rebased to zero."}],"kind":"symbol","url":"\/documentation\/compute\/unsaferawbufferpointer\/init(rebasing:)-9sxid","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeRawBufferPointer\/init(rebasing:)-9sxid","title":"init(rebasing:)"},"doc://com.swallow.documentation.Compute/7Swallow16JoinableSequenceP":{"type":"unresolvable","title":"Swallow.JoinableSequence","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow16JoinableSequenceP"},"doc://com.swallow.documentation.Compute/7Swallow24ConstantRawBufferPointerP":{"type":"unresolvable","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow24ConstantRawBufferPointerP","title":"Swallow.ConstantRawBufferPointer"},"doc://com.swallow.documentation.Compute/7Swallow9CountableP":{"type":"unresolvable","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow9CountableP","title":"Swallow.Countable"},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeRawBufferPointer/loadUnaligned(fromByteOffset:as:)-95fln":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"loadUnaligned","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"fromByteOffset"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"text":"as","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","text":"T"}],"type":"topic","abstract":[],"kind":"symbol","url":"\/documentation\/compute\/unsaferawbufferpointer\/loadunaligned(frombyteoffset:as:)-95fln","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeRawBufferPointer\/loadUnaligned(fromByteOffset:as:)-95fln","title":"loadUnaligned(fromByteOffset:as:)"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeRawBufferPointer/init(_:)-24m35":{"role":"symbol","type":"topic","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"preciseIdentifier":"s:SW","text":"UnsafeRawBufferPointer","kind":"typeIdentifier"},{"text":")","kind":"text"}],"abstract":[{"type":"text","text":"Creates a new buffer over the same memory as the given buffer."}],"title":"init(_:)","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeRawBufferPointer\/init(_:)-24m35","url":"\/documentation\/compute\/unsaferawbufferpointer\/init(_:)-24m35"},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeRawBufferPointer/BidirectionalCollection-Implementations":{"role":"collectionGroup","kind":"article","title":"BidirectionalCollection Implementations","url":"\/documentation\/compute\/unsaferawbufferpointer\/bidirectionalcollection-implementations","abstract":[],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeRawBufferPointer\/BidirectionalCollection-Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeRawBufferPointer/init(rebasing:)-9mh4j":{"role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"rebasing"},{"text":": ","kind":"text"},{"text":"Slice","preciseIdentifier":"s:s5SliceV","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"UnsafeRawBufferPointer","preciseIdentifier":"s:SW"},{"text":">)","kind":"text"}],"type":"topic","abstract":[{"type":"text","text":"Creates a raw buffer over the same memory as the given raw buffer slice,"},{"type":"text","text":" "},{"type":"text","text":"with the indices rebased to zero."}],"kind":"symbol","url":"\/documentation\/compute\/unsaferawbufferpointer\/init(rebasing:)-9mh4j","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeRawBufferPointer\/init(rebasing:)-9mh4j","title":"init(rebasing:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/RandomAccessCollection":{"title":"RandomAccessCollection","abstract":[{"text":"A collection that supports efficient random-access index traversal.","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RandomAccessCollection","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RandomAccessCollection","url":"\/documentation\/compute\/randomaccesscollection","navigatorTitle":[{"text":"RandomAccessCollection","kind":"identifier"}],"kind":"symbol","role":"symbol","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeRawBufferPointer/ConstantBufferPointer-Implementations":{"role":"collectionGroup","type":"topic","abstract":[],"title":"ConstantBufferPointer Implementations","kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeRawBufferPointer\/ConstantBufferPointer-Implementations","url":"\/documentation\/compute\/unsaferawbufferpointer\/constantbufferpointer-implementations"},"doc://com.swallow.documentation.Compute/7Swallow18JoinableCollectionP":{"type":"unresolvable","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow18JoinableCollectionP","title":"Swallow.JoinableCollection"},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeRawBufferPointer/load(fromByteOffset:as:)":{"role":"symbol","kind":"symbol","type":"topic","abstract":[{"text":"Returns a new instance of the given type, read from the buffer pointer’s","type":"text"},{"type":"text","text":" "},{"text":"raw memory at the specified byte offset.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeRawBufferPointer\/load(fromByteOffset:as:)","title":"load(fromByteOffset:as:)","url":"\/documentation\/compute\/unsaferawbufferpointer\/load(frombyteoffset:as:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"load","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"fromByteOffset"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"text":"as","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":".Type) -> "},{"text":"T","kind":"typeIdentifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Collection":{"kind":"symbol","role":"symbol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Collection"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection","url":"\/documentation\/compute\/collection","abstract":[{"type":"text","text":"A sequence whose elements can be traversed multiple times,"},{"text":" ","type":"text"},{"text":"nondestructively, and accessed by an indexed subscript.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Collection"}],"title":"Collection"},"doc://com.swallow.documentation.Compute/documentation/Compute/BidirectionalCollection":{"navigatorTitle":[{"text":"BidirectionalCollection","kind":"identifier"}],"abstract":[{"text":"A collection that supports backward as well as forward traversal.","type":"text"}],"title":"BidirectionalCollection","kind":"symbol","url":"\/documentation\/compute\/bidirectionalcollection","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"BidirectionalCollection"}],"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BidirectionalCollection","type":"topic"},"doc://com.swallow.documentation.Compute/7Swallow36NonDestroyingBidirectionalCollectionP":{"type":"unresolvable","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow36NonDestroyingBidirectionalCollectionP","title":"Swallow.NonDestroyingBidirectionalCollection"},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence":{"url":"\/documentation\/compute\/sequence","navigatorTitle":[{"kind":"identifier","text":"Sequence"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence","title":"Sequence","kind":"symbol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Sequence","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"A type that provides sequential, iterated access to its elements."}]},"doc://com.swallow.documentation.Compute/10Foundation15ContiguousBytesP":{"type":"unresolvable","identifier":"doc:\/\/com.swallow.documentation.Compute\/10Foundation15ContiguousBytesP","title":"Foundation.ContiguousBytes"},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeRawBufferPointer/init(_:)-rrzw":{"role":"symbol","type":"topic","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"UnsafeMutableBufferPointer","preciseIdentifier":"s:Sr"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Creates a raw buffer over the contiguous bytes in the given typed buffer."}],"title":"init(_:)","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeRawBufferPointer\/init(_:)-rrzw","url":"\/documentation\/compute\/unsaferawbufferpointer\/init(_:)-rrzw"},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeRawBufferPointer/Sequence-Implementations":{"title":"Sequence Implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeRawBufferPointer\/Sequence-Implementations","kind":"article","type":"topic","role":"collectionGroup","url":"\/documentation\/compute\/unsaferawbufferpointer\/sequence-implementations","abstract":[]},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeRawBufferPointer":{"title":"UnsafeRawBufferPointer","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeRawBufferPointer","kind":"symbol","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"UnsafeRawBufferPointer","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"UnsafeRawBufferPointer"}],"url":"\/documentation\/compute\/unsaferawbufferpointer","abstract":[{"type":"text","text":"A  nonowning collection interface to the bytes in a"},{"text":" ","type":"text"},{"type":"text","text":"region of memory."}]},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeRawBufferPointer/init(_:)-9uv4":{"url":"\/documentation\/compute\/unsaferawbufferpointer\/init(_:)-9uv4","type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeRawBufferPointer\/init(_:)-9uv4","role":"symbol","abstract":[{"text":"Creates a raw buffer over the contiguous bytes in the given typed buffer.","type":"text"}],"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:SR","text":"UnsafeBufferPointer","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">)"}],"title":"init(_:)","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeRawBufferPointer/withMemoryRebound(to:_:)":{"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"withMemoryRebound"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":", "},{"text":"E","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Result","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"to","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"text":".Type, (","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SR","text":"UnsafeBufferPointer"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">) "},{"text":"throws","kind":"keyword"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"E"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Result"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":"(","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Result","kind":"typeIdentifier"}],"type":"topic","abstract":[{"type":"text","text":"Executes the given closure while temporarily binding the buffer to"},{"text":" ","type":"text"},{"text":"instances of type ","type":"text"},{"code":"T","type":"codeVoice"},{"text":".","type":"text"}],"kind":"symbol","url":"\/documentation\/compute\/unsaferawbufferpointer\/withmemoryrebound(to:_:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeRawBufferPointer\/withMemoryRebound(to:_:)","title":"withMemoryRebound(to:_:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeRawBufferPointer/RandomAccessCollection-Implementations":{"url":"\/documentation\/compute\/unsaferawbufferpointer\/randomaccesscollection-implementations","kind":"article","role":"collectionGroup","abstract":[],"title":"RandomAccessCollection Implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeRawBufferPointer\/RandomAccessCollection-Implementations","type":"topic"},"doc://com.swallow.documentation.Compute/7Swallow21ConstantBufferPointerP":{"title":"Swallow.ConstantBufferPointer","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow21ConstantBufferPointerP","type":"unresolvable"},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeRawBufferPointer/deallocate()":{"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"deallocate","kind":"identifier"},{"kind":"text","text":"()"}],"type":"topic","abstract":[{"text":"Deallocates the memory block previously allocated at this buffer pointer’s","type":"text"},{"text":" ","type":"text"},{"text":"base address.","type":"text"}],"kind":"symbol","url":"\/documentation\/compute\/unsaferawbufferpointer\/deallocate()","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeRawBufferPointer\/deallocate()","title":"deallocate()"},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeRawBufferPointer/init(start:count:)":{"type":"topic","kind":"symbol","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"text":"start","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UnsafeRawPointer","kind":"typeIdentifier","preciseIdentifier":"s:SV"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"count"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":")"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeRawBufferPointer\/init(start:count:)","abstract":[],"title":"init(start:count:)","url":"\/documentation\/compute\/unsaferawbufferpointer\/init(start:count:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeRawBufferPointer/CustomDebugStringConvertible-Implementations":{"title":"CustomDebugStringConvertible Implementations","role":"collectionGroup","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeRawBufferPointer\/CustomDebugStringConvertible-Implementations","kind":"article","url":"\/documentation\/compute\/unsaferawbufferpointer\/customdebugstringconvertible-implementations","abstract":[],"type":"topic"},"doc://com.swallow.documentation.Compute/7Swallow16RawBufferPointerP":{"title":"Swallow.RawBufferPointer","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow16RawBufferPointerP","type":"unresolvable"},"doc://com.swallow.documentation.Compute/documentation/Compute/BitwiseCopyable":{"title":"BitwiseCopyable","abstract":[],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BitwiseCopyable","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BitwiseCopyable","url":"\/documentation\/compute\/bitwisecopyable","navigatorTitle":[{"kind":"identifier","text":"BitwiseCopyable"}],"kind":"symbol","role":"symbol","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/Copyable":{"title":"Copyable","abstract":[{"type":"text","text":"A type whose values can be implicitly or explicitly copied."}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"Copyable","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Copyable","url":"\/documentation\/compute\/copyable","navigatorTitle":[{"text":"Copyable","kind":"identifier"}],"kind":"symbol","role":"symbol","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeRawBufferPointer/loadUnaligned(fromByteOffset:as:)-2r9sy":{"url":"\/documentation\/compute\/unsaferawbufferpointer\/loadunaligned(frombyteoffset:as:)-2r9sy","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"loadUnaligned","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"fromByteOffset","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"text":"as","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"kind":"typeIdentifier","text":"T"}],"role":"symbol","abstract":[{"text":"Returns a new instance of the given type, constructed from the raw memory","type":"text"},{"type":"text","text":" "},{"text":"at the specified offset.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeRawBufferPointer\/loadUnaligned(fromByteOffset:as:)-2r9sy","title":"loadUnaligned(fromByteOffset:as:)","kind":"symbol","type":"topic"},"doc://com.swallow.documentation.Compute/7Swallow23NonDestroyingCollectionP":{"title":"Swallow.NonDestroyingCollection","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow23NonDestroyingCollectionP","type":"unresolvable"},"doc://com.swallow.documentation.Compute/10Foundation12DataProtocolP":{"title":"Foundation.DataProtocol","identifier":"doc:\/\/com.swallow.documentation.Compute\/10Foundation12DataProtocolP","type":"unresolvable"},"doc://com.swallow.documentation.Compute/documentation/Compute/CustomDebugStringConvertible":{"url":"\/documentation\/compute\/customdebugstringconvertible","role":"symbol","abstract":[{"text":"A type with a customized textual representation suitable for debugging","type":"text"},{"type":"text","text":" "},{"text":"purposes.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CustomDebugStringConvertible","title":"CustomDebugStringConvertible","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CustomDebugStringConvertible","kind":"identifier"}],"navigatorTitle":[{"text":"CustomDebugStringConvertible","kind":"identifier"}],"kind":"symbol"},"doc://com.swallow.documentation.Compute/7Swallow35NonDestroyingRandomAccessCollectionP":{"title":"Swallow.NonDestroyingRandomAccessCollection","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow35NonDestroyingRandomAccessCollectionP","type":"unresolvable"},"doc://com.swallow.documentation.Compute/7Swallow22InitiableBufferPointerP":{"title":"Swallow.InitiableBufferPointer","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow22InitiableBufferPointerP","type":"unresolvable"},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeRawBufferPointer/Collection-Implementations":{"title":"Collection Implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeRawBufferPointer\/Collection-Implementations","role":"collectionGroup","kind":"article","abstract":[],"type":"topic","url":"\/documentation\/compute\/unsaferawbufferpointer\/collection-implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeRawBufferPointer/bindMemory(to:)":{"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"bindMemory","kind":"identifier"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"to"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":".Type) -> "},{"preciseIdentifier":"s:SR","kind":"typeIdentifier","text":"UnsafeBufferPointer"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":">"}],"type":"topic","abstract":[{"text":"Binds this buffer’s memory to the specified type and returns a typed","type":"text"},{"text":" ","type":"text"},{"text":"buffer of the bound memory.","type":"text"}],"kind":"symbol","url":"\/documentation\/compute\/unsaferawbufferpointer\/bindmemory(to:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeRawBufferPointer\/bindMemory(to:)","title":"bindMemory(to:)"},"doc://com.swallow.documentation.Compute/7Swallow32MutableRepresentationConvertibleP":{"title":"Swallow.MutableRepresentationConvertible","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow32MutableRepresentationConvertibleP","type":"unresolvable"}}}