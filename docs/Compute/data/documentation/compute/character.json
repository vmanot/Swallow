{"metadata":{"modules":[{"name":"Compute"}],"roleHeading":"Structure","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Character","kind":"identifier"}],"externalID":"s:SJ","symbolKind":"struct","navigatorTitle":[{"kind":"identifier","text":"Character"}],"title":"Character","role":"symbol"},"sections":[],"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Character","interfaceLanguage":"swift"},"topicSections":[{"title":"Initializers","generated":true,"anchor":"Initializers","identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Character\/init(_:)-8hq6x"]},{"title":"Instance Properties","anchor":"Instance-Properties","generated":true,"identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Character\/asciiValue","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Character\/hexDigitValue","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Character\/isASCII","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Character\/isCased","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Character\/isCurrencySymbol","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Character\/isHexDigit","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Character\/isLetter","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Character\/isLowercase","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Character\/isMathSymbol","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Character\/isNewline","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Character\/isNumber","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Character\/isPunctuation","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Character\/isSymbol","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Character\/isUppercase","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Character\/isWhitespace","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Character\/isWholeNumber","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Character\/unicodeScalars","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Character\/utf16","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Character\/utf8","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Character\/wholeNumberValue"]},{"identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Character\/lowercased()","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Character\/uppercased()"],"anchor":"Instance-Methods","title":"Instance Methods","generated":true},{"title":"Type Aliases","identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Character\/UTF16View","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Character\/UTF8View","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Character\/UnicodeScalarView"],"generated":true,"anchor":"Type-Aliases"},{"identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Character\/Comparable-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Character\/CustomDebugStringConvertible-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Character\/CustomReflectable-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Character\/CustomStringConvertible-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Character\/Equatable-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Character\/ExpressibleByExtendedGraphemeClusterLiteral-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Character\/ExpressibleByUnicodeScalarLiteral-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Character\/Hashable-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Character\/LosslessStringConvertible-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Character\/TextOutputStreamable-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Character\/_CustomPlaygroundQuickLookable-Implementations"],"anchor":"Default-Implementations","title":"Default Implementations","generated":true}],"relationshipsSections":[{"title":"Conforms To","identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Comparable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Copyable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CustomDebugStringConvertible","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CustomReflectable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CustomStringConvertible","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Decodable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Encodable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Equatable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ExpressibleByExtendedGraphemeClusterLiteral","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ExpressibleByUnicodeScalarLiteral","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Hashable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LosslessStringConvertible","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sendable","doc:\/\/com.swallow.documentation.Compute\/7Swallow15FailableWrapperP","doc:\/\/com.swallow.documentation.Compute\/7Swallow14MutableWrapperP","doc:\/\/com.swallow.documentation.Compute\/7Swallow11RandomnableP","doc:\/\/com.swallow.documentation.Compute\/7Swallow17StringConvertibleP","doc:\/\/com.swallow.documentation.Compute\/7Swallow19StringInitializableP","doc:\/\/com.swallow.documentation.Compute\/7Swallow17UTF8RepresentableP","doc:\/\/com.swallow.documentation.Compute\/7Swallow16ValueConvertibleP","doc:\/\/com.swallow.documentation.Compute\/7Swallow7WrapperP","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/TextOutputStreamable"],"kind":"relationships","type":"conformsTo"}],"schemaVersion":{"patch":0,"minor":3,"major":0},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute"]]},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"@frozen","kind":"attribute"},{"text":" ","kind":"text"},{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Character","kind":"identifier"}],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"content","content":[{"level":2,"type":"heading","text":"Overview","anchor":"overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"code":"Character","type":"codeVoice"},{"text":" type represents a character made up of one or more Unicode","type":"text"},{"type":"text","text":" "},{"text":"scalar values, grouped by a Unicode boundary algorithm. Generally, a","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"Character"},{"type":"text","text":" instance matches what the reader of a string will perceive as"},{"text":" ","type":"text"},{"type":"text","text":"a single character. Strings are collections of "},{"type":"codeVoice","code":"Character"},{"type":"text","text":" instances, so"},{"type":"text","text":" "},{"type":"text","text":"the number of visible characters is generally the most natural way to"},{"text":" ","type":"text"},{"type":"text","text":"count the length of a string."}]},{"code":["let greeting = \"Hello! üê•\"","print(\"Length: \\(greeting.count)\")","\/\/ Prints \"Length: 8\""],"type":"codeListing","syntax":null},{"inlineContent":[{"text":"Because each character in a string can be made up of one or more Unicode","type":"text"},{"type":"text","text":" "},{"text":"scalar values, the number of characters in a string may not match the","type":"text"},{"text":" ","type":"text"},{"text":"length of the Unicode scalar value representation or the length of the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"string in a particular binary representation."}],"type":"paragraph"},{"type":"codeListing","code":["print(\"Unicode scalar value count: \\(greeting.unicodeScalars.count)\")","\/\/ Prints \"Unicode scalar value count: 8\"","","print(\"UTF-8 representation count: \\(greeting.utf8.count)\")","\/\/ Prints \"UTF-8 representation count: 11\""],"syntax":null},{"type":"paragraph","inlineContent":[{"type":"text","text":"Every "},{"code":"Character","type":"codeVoice"},{"type":"text","text":" instance is composed of one or more Unicode scalar values"},{"text":" ","type":"text"},{"text":"that are grouped together as an ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"extended grapheme cluster"}]},{"type":"text","text":". The way these"},{"type":"text","text":" "},{"text":"scalar values are grouped is defined by a canonical, localized, or","type":"text"},{"type":"text","text":" "},{"type":"text","text":"otherwise tailored Unicode segmentation algorithm."}]},{"type":"paragraph","inlineContent":[{"text":"For example, a country‚Äôs Unicode flag character is made up of two regional","type":"text"},{"type":"text","text":" "},{"type":"text","text":"indicator scalar values that correspond to that country‚Äôs ISO 3166-1"},{"type":"text","text":" "},{"type":"text","text":"alpha-2 code. The alpha-2 code for The United States is ‚ÄúUS‚Äù, so its flag"},{"type":"text","text":" "},{"text":"character is made up of the Unicode scalar values ","type":"text"},{"code":"\"\\u{1F1FA}\"","type":"codeVoice"},{"text":" (REGIONAL","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"INDICATOR SYMBOL LETTER U) and "},{"type":"codeVoice","code":"\"\\u{1F1F8}\""},{"type":"text","text":" (REGIONAL INDICATOR SYMBOL"},{"text":" ","type":"text"},{"text":"LETTER S). When placed next to each other in a string literal, these two","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"scalar values are combined into a single grapheme cluster, represented by"},{"type":"text","text":" "},{"text":"a ","type":"text"},{"code":"Character","type":"codeVoice"},{"text":" instance in Swift.","type":"text"}]},{"type":"codeListing","code":["let usFlag: Character = \"\\u{1F1FA}\\u{1F1F8}\"","print(usFlag)","\/\/ Prints \"üá∫üá∏\""],"syntax":null},{"type":"paragraph","inlineContent":[{"text":"For more information about the Unicode terms used in this discussion, see","type":"text"},{"text":" ","type":"text"},{"text":"the ","type":"text"},{"identifier":"http:\/\/www.unicode.org\/glossary\/","isActive":true,"type":"reference"},{"type":"text","text":". In particular, this discussion"},{"text":" ","type":"text"},{"text":"mentions ","type":"text"},{"isActive":true,"identifier":"http:\/\/www.unicode.org\/glossary\/#extended_grapheme_cluster","type":"reference"},{"type":"text","text":" and "},{"isActive":true,"type":"reference","identifier":"http:\/\/www.unicode.org\/glossary\/#unicode_scalar_value"},{"text":".","type":"text"}]}]}],"variants":[{"paths":["\/documentation\/compute\/character"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"A single extended grapheme cluster that approximates a user-perceived"},{"text":" ","type":"text"},{"type":"text","text":"character."}],"kind":"symbol","references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Character/TextOutputStreamable-Implementations":{"title":"TextOutputStreamable Implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Character\/TextOutputStreamable-Implementations","kind":"article","type":"topic","role":"collectionGroup","url":"\/documentation\/compute\/character\/textoutputstreamable-implementations","abstract":[]},"doc://com.swallow.documentation.Compute/documentation/Compute/Hashable":{"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Hashable"}],"title":"Hashable","navigatorTitle":[{"text":"Hashable","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"A type that can be hashed into a "},{"type":"codeVoice","code":"Hasher"},{"type":"text","text":" to produce an integer hash value."}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Hashable","url":"\/documentation\/compute\/hashable","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Character/ExpressibleByExtendedGraphemeClusterLiteral-Implementations":{"title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Character\/ExpressibleByExtendedGraphemeClusterLiteral-Implementations","abstract":[],"type":"topic","role":"collectionGroup","url":"\/documentation\/compute\/character\/expressiblebyextendedgraphemeclusterliteral-implementations","kind":"article"},"doc://com.swallow.documentation.Compute/documentation/Compute/Encodable":{"url":"\/documentation\/compute\/encodable","navigatorTitle":[{"text":"Encodable","kind":"identifier"}],"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"Encodable","kind":"identifier"}],"abstract":[{"text":"A type that can encode itself to an external representation.","type":"text"}],"type":"topic","title":"Encodable","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Encodable"},"doc://com.swallow.documentation.Compute/7Swallow7WrapperP":{"type":"unresolvable","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow7WrapperP","title":"Swallow.Wrapper"},"doc://com.swallow.documentation.Compute/documentation/Compute/Character/UTF16View":{"role":"symbol","kind":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"text":"UTF16View","kind":"identifier"}],"title":"Character.UTF16View","url":"\/documentation\/compute\/character\/utf16view","abstract":[{"text":"A view of a character‚Äôs contents as a collection of UTF-16 code units. See","type":"text"},{"type":"text","text":" "},{"type":"text","text":"String.UTF16View for more information"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"UTF16View"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Character\/UTF16View"},"doc://com.swallow.documentation.Compute/documentation/Compute/Character/utf16":{"abstract":[{"type":"text","text":"A UTF-16 encoding of "},{"type":"codeVoice","code":"self"},{"type":"text","text":"."}],"url":"\/documentation\/compute\/character\/utf16","type":"topic","title":"utf16","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"utf16"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Character","preciseIdentifier":"s:SJ"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SJ9UTF16Viewa","text":"UTF16View"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Character\/utf16","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Character/isMathSymbol":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Character\/isMathSymbol","role":"symbol","title":"isMathSymbol","url":"\/documentation\/compute\/character\/ismathsymbol","kind":"symbol","type":"topic","abstract":[{"text":"A Boolean value indicating whether this character represents a symbol","type":"text"},{"type":"text","text":" "},{"type":"text","text":"that naturally appears in mathematical contexts."}],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"isMathSymbol"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/CustomDebugStringConvertible":{"url":"\/documentation\/compute\/customdebugstringconvertible","role":"symbol","abstract":[{"text":"A type with a customized textual representation suitable for debugging","type":"text"},{"type":"text","text":" "},{"text":"purposes.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CustomDebugStringConvertible","title":"CustomDebugStringConvertible","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CustomDebugStringConvertible","kind":"identifier"}],"navigatorTitle":[{"text":"CustomDebugStringConvertible","kind":"identifier"}],"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Character/CustomDebugStringConvertible-Implementations":{"title":"CustomDebugStringConvertible Implementations","type":"topic","kind":"article","url":"\/documentation\/compute\/character\/customdebugstringconvertible-implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Character\/CustomDebugStringConvertible-Implementations","role":"collectionGroup","abstract":[]},"doc://com.swallow.documentation.Compute/documentation/Compute/ExpressibleByUnicodeScalarLiteral":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ExpressibleByUnicodeScalarLiteral"}],"kind":"symbol","title":"ExpressibleByUnicodeScalarLiteral","abstract":[{"text":"A type that can be initialized with a string literal containing a single","type":"text"},{"type":"text","text":" "},{"text":"Unicode scalar value.","type":"text"}],"role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ExpressibleByUnicodeScalarLiteral"}],"url":"\/documentation\/compute\/expressiblebyunicodescalarliteral","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ExpressibleByUnicodeScalarLiteral"},"doc://com.swallow.documentation.Compute/documentation/Compute/Character/ExpressibleByUnicodeScalarLiteral-Implementations":{"abstract":[],"role":"collectionGroup","url":"\/documentation\/compute\/character\/expressiblebyunicodescalarliteral-implementations","type":"topic","title":"ExpressibleByUnicodeScalarLiteral Implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Character\/ExpressibleByUnicodeScalarLiteral-Implementations","kind":"article"},"doc://com.swallow.documentation.Compute/documentation/Compute/Character/isPunctuation":{"role":"symbol","title":"isPunctuation","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"isPunctuation","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Character\/isPunctuation","url":"\/documentation\/compute\/character\/ispunctuation","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"A Boolean value indicating whether this character represents punctuation."}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Character/LosslessStringConvertible-Implementations":{"title":"LosslessStringConvertible Implementations","url":"\/documentation\/compute\/character\/losslessstringconvertible-implementations","type":"topic","role":"collectionGroup","kind":"article","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Character\/LosslessStringConvertible-Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/Character/isLetter":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Character\/isLetter","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isLetter","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"kind":"symbol","role":"symbol","type":"topic","url":"\/documentation\/compute\/character\/isletter","abstract":[{"type":"text","text":"A Boolean value indicating whether this character is a letter."}],"title":"isLetter"},"doc://com.swallow.documentation.Compute/documentation/Compute/Character/UTF8View":{"title":"Character.UTF8View","navigatorTitle":[{"text":"UTF8View","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Character\/UTF8View","role":"symbol","kind":"symbol","abstract":[{"text":"A view of a character‚Äôs contents as a collection of UTF-8 code units. See","type":"text"},{"type":"text","text":" "},{"type":"text","text":"String.UTF8View for more information"}],"type":"topic","url":"\/documentation\/compute\/character\/utf8view","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"UTF8View"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Equatable":{"abstract":[{"text":"A type that can be compared for value equality.","type":"text"}],"type":"topic","title":"Equatable","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Equatable"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Equatable","role":"symbol","url":"\/documentation\/compute\/equatable","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Equatable","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/7Swallow17StringConvertibleP":{"type":"unresolvable","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow17StringConvertibleP","title":"Swallow.StringConvertible"},"doc://com.swallow.documentation.Compute/documentation/Compute/CustomStringConvertible":{"url":"\/documentation\/compute\/customstringconvertible","navigatorTitle":[{"kind":"identifier","text":"CustomStringConvertible"}],"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CustomStringConvertible","kind":"identifier"}],"abstract":[{"text":"A type with a customized textual representation.","type":"text"}],"type":"topic","title":"CustomStringConvertible","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CustomStringConvertible"},"doc://com.swallow.documentation.Compute/documentation/Compute/Character/isWhitespace":{"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Character\/isWhitespace","abstract":[{"type":"text","text":"A Boolean value indicating whether this character represents whitespace,"},{"type":"text","text":" "},{"type":"text","text":"including newlines."}],"title":"isWhitespace","kind":"symbol","url":"\/documentation\/compute\/character\/iswhitespace","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isWhitespace","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"role":"symbol"},"doc://com.swallow.documentation.Compute/7Swallow15FailableWrapperP":{"type":"unresolvable","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow15FailableWrapperP","title":"Swallow.FailableWrapper"},"doc://com.swallow.documentation.Compute/documentation/Compute/Character/lowercased()":{"title":"lowercased()","url":"\/documentation\/compute\/character\/lowercased()","role":"symbol","abstract":[{"type":"text","text":"Returns a lowercased version of this character."}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Character\/lowercased()","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"lowercased"},{"kind":"text","text":"() -> "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Character/unicodeScalars":{"type":"topic","abstract":[],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Character\/unicodeScalars","role":"symbol","title":"unicodeScalars","url":"\/documentation\/compute\/character\/unicodescalars","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"unicodeScalars","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Character","preciseIdentifier":"s:SJ","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"UnicodeScalarView","preciseIdentifier":"s:SJ17UnicodeScalarViewa","kind":"typeIdentifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Character/wholeNumberValue":{"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Character\/wholeNumberValue","role":"symbol","url":"\/documentation\/compute\/character\/wholenumbervalue","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"wholeNumberValue","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"text":"?","kind":"text"}],"title":"wholeNumberValue","abstract":[{"type":"text","text":"The numeric value this character represents, if it represents a whole"},{"type":"text","text":" "},{"type":"text","text":"number."}]},"http://www.unicode.org/glossary/":{"url":"http:\/\/www.unicode.org\/glossary\/","identifier":"http:\/\/www.unicode.org\/glossary\/","titleInlineContent":[{"text":"Unicode.org glossary","type":"text"}],"type":"link","title":"Unicode.org glossary"},"doc://com.swallow.documentation.Compute/7Swallow14MutableWrapperP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow14MutableWrapperP","type":"unresolvable","title":"Swallow.MutableWrapper"},"doc://com.swallow.documentation.Compute/documentation/Compute/Character/_CustomPlaygroundQuickLookable-Implementations":{"kind":"article","title":"_CustomPlaygroundQuickLookable Implementations","abstract":[],"role":"collectionGroup","type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Character\/_CustomPlaygroundQuickLookable-Implementations","url":"\/documentation\/compute\/character\/_customplaygroundquicklookable-implementations"},"http://www.unicode.org/glossary/#unicode_scalar_value":{"identifier":"http:\/\/www.unicode.org\/glossary\/#unicode_scalar_value","type":"link","url":"http:\/\/www.unicode.org\/glossary\/#unicode_scalar_value","title":"Unicode scalar values","titleInlineContent":[{"type":"text","text":"Unicode scalar"},{"type":"text","text":" "},{"text":"values","type":"text"}]},"doc://com.swallow.documentation.Compute/7Swallow19StringInitializableP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow19StringInitializableP","title":"Swallow.StringInitializable","type":"unresolvable"},"doc://com.swallow.documentation.Compute/documentation/Compute/LosslessStringConvertible":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LosslessStringConvertible","kind":"identifier"}],"kind":"symbol","title":"LosslessStringConvertible","abstract":[{"type":"text","text":"A type that can be represented as a string in a lossless, unambiguous way."}],"role":"symbol","type":"topic","navigatorTitle":[{"text":"LosslessStringConvertible","kind":"identifier"}],"url":"\/documentation\/compute\/losslessstringconvertible","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LosslessStringConvertible"},"doc://com.swallow.documentation.Compute/documentation/Compute/Character/Hashable-Implementations":{"role":"collectionGroup","abstract":[],"type":"topic","title":"Hashable Implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Character\/Hashable-Implementations","kind":"article","url":"\/documentation\/compute\/character\/hashable-implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/Character/hexDigitValue":{"abstract":[{"type":"text","text":"The numeric value this character represents, if it is a hexadecimal digit."}],"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"hexDigitValue","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"kind":"text","text":"?"}],"role":"symbol","url":"\/documentation\/compute\/character\/hexdigitvalue","type":"topic","title":"hexDigitValue","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Character\/hexDigitValue","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/ExpressibleByExtendedGraphemeClusterLiteral":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ExpressibleByExtendedGraphemeClusterLiteral"}],"kind":"symbol","title":"ExpressibleByExtendedGraphemeClusterLiteral","abstract":[{"type":"text","text":"A type that can be initialized with a string literal containing a single"},{"type":"text","text":" "},{"text":"extended grapheme cluster.","type":"text"}],"role":"symbol","type":"topic","navigatorTitle":[{"text":"ExpressibleByExtendedGraphemeClusterLiteral","kind":"identifier"}],"url":"\/documentation\/compute\/expressiblebyextendedgraphemeclusterliteral","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ExpressibleByExtendedGraphemeClusterLiteral"},"doc://com.swallow.documentation.Compute/documentation/Compute/Character/Comparable-Implementations":{"abstract":[],"title":"Comparable Implementations","type":"topic","role":"collectionGroup","kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Character\/Comparable-Implementations","url":"\/documentation\/compute\/character\/comparable-implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/Character/isCurrencySymbol":{"type":"topic","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Character\/isCurrencySymbol","role":"symbol","title":"isCurrencySymbol","abstract":[{"text":"A Boolean value indicating whether this character represents a currency","type":"text"},{"type":"text","text":" "},{"type":"text","text":"symbol."}],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"isCurrencySymbol","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"url":"\/documentation\/compute\/character\/iscurrencysymbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Character/isNumber":{"title":"isNumber","url":"\/documentation\/compute\/character\/isnumber","abstract":[{"text":"A Boolean value indicating whether this character represents a number.","type":"text"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"isNumber","kind":"identifier"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"type":"topic","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Character\/isNumber"},"doc://com.swallow.documentation.Compute/documentation/Compute/Copyable":{"title":"Copyable","abstract":[{"type":"text","text":"A type whose values can be implicitly or explicitly copied."}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"Copyable","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Copyable","url":"\/documentation\/compute\/copyable","navigatorTitle":[{"text":"Copyable","kind":"identifier"}],"kind":"symbol","role":"symbol","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/CustomReflectable":{"url":"\/documentation\/compute\/customreflectable","role":"symbol","abstract":[{"text":"A type that explicitly supplies its own mirror.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CustomReflectable","title":"CustomReflectable","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CustomReflectable"}],"navigatorTitle":[{"kind":"identifier","text":"CustomReflectable"}],"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Character/Equatable-Implementations":{"type":"topic","kind":"article","title":"Equatable Implementations","url":"\/documentation\/compute\/character\/equatable-implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Character\/Equatable-Implementations","role":"collectionGroup","abstract":[]},"doc://com.swallow.documentation.Compute/documentation/Compute/Character/isWholeNumber":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"isWholeNumber","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"role":"symbol","type":"topic","kind":"symbol","url":"\/documentation\/compute\/character\/iswholenumber","title":"isWholeNumber","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Character\/isWholeNumber","abstract":[{"text":"A Boolean value indicating whether this character represents a whole","type":"text"},{"type":"text","text":" "},{"type":"text","text":"number."}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Character/init(_:)-8hq6x":{"abstract":[{"text":"Creates a character containing the given Unicode scalar value.","type":"text"}],"type":"topic","title":"init(_:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Character\/init(_:)-8hq6x","kind":"symbol","url":"\/documentation\/compute\/character\/init(_:)-8hq6x","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"text":"Unicode","kind":"typeIdentifier","preciseIdentifier":"s:s7UnicodeO"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s7UnicodeO6ScalarV","text":"Scalar"},{"text":")","kind":"text"}],"role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Character/UnicodeScalarView":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Character\/UnicodeScalarView","title":"Character.UnicodeScalarView","role":"symbol","abstract":[],"type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"UnicodeScalarView"}],"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"text":"UnicodeScalarView","kind":"identifier"}],"url":"\/documentation\/compute\/character\/unicodescalarview"},"doc://com.swallow.documentation.Compute/documentation/Compute/Character/uppercased()":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"uppercased","kind":"identifier"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"}],"type":"topic","abstract":[{"type":"text","text":"Returns an uppercased version of this character."}],"role":"symbol","url":"\/documentation\/compute\/character\/uppercased()","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Character\/uppercased()","title":"uppercased()"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Character/CustomStringConvertible-Implementations":{"kind":"article","role":"collectionGroup","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Character\/CustomStringConvertible-Implementations","abstract":[],"type":"topic","url":"\/documentation\/compute\/character\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/Sendable":{"kind":"symbol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"Sendable","kind":"identifier"}],"title":"Sendable","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sendable","abstract":[],"url":"\/documentation\/compute\/sendable","role":"symbol","navigatorTitle":[{"text":"Sendable","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Character/isSymbol":{"url":"\/documentation\/compute\/character\/issymbol","role":"symbol","kind":"symbol","type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Character\/isSymbol","abstract":[{"type":"text","text":"A Boolean value indicating whether this character represents a symbol."}],"title":"isSymbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"isSymbol","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/TextOutputStreamable":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TextOutputStreamable","kind":"identifier"}],"kind":"symbol","title":"TextOutputStreamable","abstract":[{"text":"A source of text-streaming operations.","type":"text"}],"role":"symbol","type":"topic","navigatorTitle":[{"text":"TextOutputStreamable","kind":"identifier"}],"url":"\/documentation\/compute\/textoutputstreamable","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/TextOutputStreamable"},"doc://com.swallow.documentation.Compute/documentation/Compute/Character/isCased":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Character\/isCased","title":"isCased","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"isCased","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"type":"topic","abstract":[{"text":"A Boolean value indicating whether this character changes under any form","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"of case conversion."}],"url":"\/documentation\/compute\/character\/iscased","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Character/isLowercase":{"role":"symbol","kind":"symbol","url":"\/documentation\/compute\/character\/islowercase","title":"isLowercase","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Character\/isLowercase","abstract":[{"text":"A Boolean value indicating whether this character is considered lowercase.","type":"text"}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isLowercase","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/Character/isASCII":{"url":"\/documentation\/compute\/character\/isascii","kind":"symbol","title":"isASCII","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Character\/isASCII","type":"topic","role":"symbol","abstract":[{"type":"text","text":"A Boolean value indicating whether this is an ASCII character."}],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"isASCII"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Character/isUppercase":{"abstract":[{"type":"text","text":"A Boolean value indicating whether this character is considered uppercase."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Character\/isUppercase","url":"\/documentation\/compute\/character\/isuppercase","type":"topic","role":"symbol","kind":"symbol","title":"isUppercase","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isUppercase"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Character/isNewline":{"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isNewline"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"url":"\/documentation\/compute\/character\/isnewline","abstract":[{"text":"A Boolean value indicating whether this character represents a newline.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Character\/isNewline","type":"topic","role":"symbol","kind":"symbol","title":"isNewline"},"doc://com.swallow.documentation.Compute/7Swallow16ValueConvertibleP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow16ValueConvertibleP","title":"Swallow.ValueConvertible","type":"unresolvable"},"doc://com.swallow.documentation.Compute/7Swallow11RandomnableP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow11RandomnableP","title":"Swallow.Randomnable","type":"unresolvable"},"doc://com.swallow.documentation.Compute/documentation/Compute/Character/isHexDigit":{"title":"isHexDigit","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Character\/isHexDigit","url":"\/documentation\/compute\/character\/ishexdigit","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"isHexDigit","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"abstract":[{"text":"A Boolean value indicating whether this character represents a","type":"text"},{"type":"text","text":" "},{"type":"text","text":"hexadecimal digit."}],"role":"symbol"},"doc://com.swallow.documentation.Compute/7Swallow17UTF8RepresentableP":{"title":"Swallow.UTF8Representable","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow17UTF8RepresentableP","type":"unresolvable"},"doc://com.swallow.documentation.Compute/documentation/Compute/Character/utf8":{"url":"\/documentation\/compute\/character\/utf8","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"utf8"},{"text":": ","kind":"text"},{"text":"Character","kind":"typeIdentifier","preciseIdentifier":"s:SJ"},{"kind":"text","text":"."},{"preciseIdentifier":"s:SJ8UTF8Viewa","kind":"typeIdentifier","text":"UTF8View"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Character\/utf8","abstract":[{"type":"text","text":"A UTF-8 encoding of "},{"type":"codeVoice","code":"self"},{"type":"text","text":"."}],"title":"utf8"},"doc://com.swallow.documentation.Compute/documentation/Compute/Character/asciiValue":{"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Character\/asciiValue","kind":"symbol","type":"topic","url":"\/documentation\/compute\/character\/asciivalue","abstract":[{"type":"text","text":"The ASCII encoding value of this character, if it is an ASCII character."}],"title":"asciiValue","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"asciiValue","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"UInt8","preciseIdentifier":"s:s5UInt8V"},{"text":"?","kind":"text"}]},"http://www.unicode.org/glossary/#extended_grapheme_cluster":{"identifier":"http:\/\/www.unicode.org\/glossary\/#extended_grapheme_cluster","type":"link","url":"http:\/\/www.unicode.org\/glossary\/#extended_grapheme_cluster","title":"extended grapheme clusters","titleInlineContent":[{"type":"text","text":"extended grapheme clusters"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Character/CustomReflectable-Implementations":{"title":"CustomReflectable Implementations","type":"topic","kind":"article","role":"collectionGroup","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Character\/CustomReflectable-Implementations","url":"\/documentation\/compute\/character\/customreflectable-implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/Decodable":{"kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"Decodable","kind":"identifier"}],"title":"Decodable","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Decodable","abstract":[{"type":"text","text":"A type that can decode itself from an external representation."}],"url":"\/documentation\/compute\/decodable","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Decodable"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Comparable":{"url":"\/documentation\/compute\/comparable","type":"topic","kind":"symbol","role":"symbol","abstract":[{"text":"A type that can be compared using the relational operators ","type":"text"},{"code":"<","type":"codeVoice"},{"text":", ","type":"text"},{"code":"<=","type":"codeVoice"},{"text":", ","type":"text"},{"type":"codeVoice","code":">="},{"text":",","type":"text"},{"type":"text","text":" "},{"type":"text","text":"and "},{"type":"codeVoice","code":">"},{"text":".","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Comparable"}],"title":"Comparable","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Comparable","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"Comparable","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Character":{"title":"Character","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Character","abstract":[{"type":"text","text":"A single extended grapheme cluster that approximates a user-perceived"},{"type":"text","text":" "},{"text":"character.","type":"text"}],"type":"topic","role":"symbol","url":"\/documentation\/compute\/character","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Character"}],"navigatorTitle":[{"kind":"identifier","text":"Character"}]}}}