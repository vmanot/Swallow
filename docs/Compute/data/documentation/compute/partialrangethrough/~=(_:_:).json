{"schemaVersion":{"major":0,"patch":0,"minor":3},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"~=","kind":"identifier"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"text":"pattern","kind":"internalParam"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"value","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Bound","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RangeExpression\/Bound","preciseIdentifier":"s:SX5BoundQa"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bool","text":"Bool"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"name":"pattern","content":[{"inlineContent":[{"type":"text","text":"A range."}],"type":"paragraph"}]}]},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","level":2,"type":"heading"},{"inlineContent":[{"text":"You can use the pattern-matching operator (","type":"text"},{"type":"codeVoice","code":"~="},{"text":") to test whether a value","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"is included in a range. The pattern-matching operator is used"},{"type":"text","text":" "},{"type":"text","text":"internally in "},{"code":"case","type":"codeVoice"},{"text":" statements for pattern matching. The following","type":"text"},{"type":"text","text":" "},{"text":"example uses the ","type":"text"},{"type":"codeVoice","code":"~="},{"type":"text","text":" operator to test whether an integer is included in"},{"type":"text","text":" "},{"text":"a range of single-digit numbers:","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":["let chosenNumber = 3","if 0..<10 ~= chosenNumber {","    print(\"\\(chosenNumber) is a single digit.\")","}","\/\/ Prints \"3 is a single digit.\""]}]}],"variants":[{"paths":["\/documentation\/compute\/partialrangethrough\/~=(_:_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"metadata":{"roleHeading":"Operator","title":"~=(_:_:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"~="},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"Bound","kind":"typeIdentifier","preciseIdentifier":"s:SX5BoundQa"},{"kind":"text","text":") -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"extendedModule":"Swift","modules":[{"name":"Compute","relatedModules":["Swift"]}],"symbolKind":"op","externalID":"s:SXsE2teoiySbx_5BoundQztFZ::SYNTHESIZED::s:s19PartialRangeThroughV","role":"symbol"},"abstract":[{"type":"text","text":"Returns a Boolean value indicating whether a value is included in a"},{"text":" ","type":"text"},{"text":"range.","type":"text"}],"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/PartialRangeThrough\/~=(_:_:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/PartialRangeThrough","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/PartialRangeThrough\/RangeExpression-Implementations"]]},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Bool":{"url":"\/documentation\/compute\/bool","role":"symbol","title":"Bool","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Bool","kind":"identifier"}],"abstract":[{"type":"text","text":"A value type whose instances are either "},{"type":"codeVoice","code":"true"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"false"},{"text":".","type":"text"}],"navigatorTitle":[{"text":"Bool","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bool","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/RangeExpression/Bound":{"role":"symbol","type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RangeExpression\/Bound","title":"Bound","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"Bound"},{"kind":"text","text":" : "},{"text":"Comparable","kind":"typeIdentifier","preciseIdentifier":"s:SL"}],"url":"\/documentation\/compute\/rangeexpression\/bound","required":true,"abstract":[{"text":"The type for which the expression describes a range.","type":"text"}],"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/PartialRangeThrough/RangeExpression-Implementations":{"role":"collectionGroup","kind":"article","title":"RangeExpression Implementations","url":"\/documentation\/compute\/partialrangethrough\/rangeexpression-implementations","abstract":[],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/PartialRangeThrough\/RangeExpression-Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/PartialRangeThrough":{"title":"PartialRangeThrough","type":"topic","abstract":[{"type":"text","text":"A partial interval up to, and including, an upper bound."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/PartialRangeThrough","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"PartialRangeThrough"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"PartialRangeThrough"}],"kind":"symbol","url":"\/documentation\/compute\/partialrangethrough"},"doc://com.swallow.documentation.Compute/documentation/Compute/PartialRangeThrough/~=(_:_:)":{"role":"symbol","title":"~=(_:_:)","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"~=","kind":"identifier"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SX5BoundQa","text":"Bound"},{"kind":"text","text":") -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/PartialRangeThrough\/~=(_:_:)","url":"\/documentation\/compute\/partialrangethrough\/~=(_:_:)","type":"topic","kind":"symbol","abstract":[{"text":"Returns a Boolean value indicating whether a value is included in a","type":"text"},{"text":" ","type":"text"},{"text":"range.","type":"text"}]}}}