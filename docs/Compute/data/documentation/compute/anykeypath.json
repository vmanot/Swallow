{"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyKeyPath","interfaceLanguage":"swift"},"metadata":{"symbolKind":"class","externalID":"s:s10AnyKeyPathC","navigatorTitle":[{"text":"AnyKeyPath","kind":"identifier"}],"role":"symbol","modules":[{"name":"Compute"}],"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyKeyPath"}],"roleHeading":"Class","title":"AnyKeyPath"},"schemaVersion":{"patch":0,"minor":3,"major":0},"kind":"symbol","sections":[],"topicSections":[{"anchor":"Type-Properties","generated":true,"identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyKeyPath\/rootType","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyKeyPath\/valueType"],"title":"Type Properties"},{"generated":true,"identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyKeyPath\/CustomDebugStringConvertible-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyKeyPath\/Equatable-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyKeyPath\/Hashable-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyKeyPath\/_AppendKeyPath-Implementations"],"title":"Default Implementations","anchor":"Default-Implementations"}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"AnyKeyPath","kind":"identifier"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"}],"abstract":[{"type":"text","text":"A type-erased key path, from any root type to any resulting value"},{"type":"text","text":" "},{"text":"type.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute"]]},"relationshipsSections":[{"type":"inheritedBy","identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/PartialKeyPath"],"title":"Inherited By","kind":"relationships"},{"kind":"relationships","title":"Conforms To","identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Copyable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CustomDebugStringConvertible","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Equatable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Hashable"],"type":"conformsTo"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/anykeypath"]}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/AnyKeyPath/Equatable-Implementations":{"title":"Equatable Implementations","role":"collectionGroup","type":"topic","abstract":[],"url":"\/documentation\/compute\/anykeypath\/equatable-implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyKeyPath\/Equatable-Implementations","kind":"article"},"doc://com.swallow.documentation.Compute/documentation/Compute/PartialKeyPath":{"type":"topic","navigatorTitle":[{"text":"PartialKeyPath","kind":"identifier"}],"abstract":[{"type":"text","text":"A partially type-erased key path, from a concrete root type to any"},{"text":" ","type":"text"},{"type":"text","text":"resulting value type."}],"title":"PartialKeyPath","url":"\/documentation\/compute\/partialkeypath","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/PartialKeyPath","role":"symbol","kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"PartialKeyPath"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/AnyKeyPath":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyKeyPath","url":"\/documentation\/compute\/anykeypath","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"AnyKeyPath","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"AnyKeyPath"}],"role":"symbol","kind":"symbol","abstract":[{"text":"A type-erased key path, from any root type to any resulting value","type":"text"},{"type":"text","text":" "},{"type":"text","text":"type."}],"type":"topic","title":"AnyKeyPath"},"doc://com.swallow.documentation.Compute/documentation/Compute/Hashable":{"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Hashable"}],"title":"Hashable","navigatorTitle":[{"text":"Hashable","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"A type that can be hashed into a "},{"type":"codeVoice","code":"Hasher"},{"type":"text","text":" to produce an integer hash value."}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Hashable","url":"\/documentation\/compute\/hashable","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/AnyKeyPath/CustomDebugStringConvertible-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyKeyPath\/CustomDebugStringConvertible-Implementations","role":"collectionGroup","type":"topic","kind":"article","url":"\/documentation\/compute\/anykeypath\/customdebugstringconvertible-implementations","abstract":[],"title":"CustomDebugStringConvertible Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/Copyable":{"title":"Copyable","abstract":[{"type":"text","text":"A type whose values can be implicitly or explicitly copied."}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"Copyable","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Copyable","url":"\/documentation\/compute\/copyable","navigatorTitle":[{"text":"Copyable","kind":"identifier"}],"kind":"symbol","role":"symbol","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/AnyKeyPath/rootType":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyKeyPath\/rootType","title":"rootType","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"rootType","kind":"identifier"},{"text":": any ","kind":"text"},{"kind":"keyword","text":"Any"},{"kind":"text","text":".Type"}],"type":"topic","abstract":[{"type":"text","text":"The root type for this key path."}],"url":"\/documentation\/compute\/anykeypath\/roottype","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/CustomDebugStringConvertible":{"url":"\/documentation\/compute\/customdebugstringconvertible","role":"symbol","abstract":[{"text":"A type with a customized textual representation suitable for debugging","type":"text"},{"type":"text","text":" "},{"text":"purposes.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CustomDebugStringConvertible","title":"CustomDebugStringConvertible","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CustomDebugStringConvertible","kind":"identifier"}],"navigatorTitle":[{"text":"CustomDebugStringConvertible","kind":"identifier"}],"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/AnyKeyPath/_AppendKeyPath-Implementations":{"type":"topic","url":"\/documentation\/compute\/anykeypath\/_appendkeypath-implementations","title":"_AppendKeyPath Implementations","role":"collectionGroup","kind":"article","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyKeyPath\/_AppendKeyPath-Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/AnyKeyPath/valueType":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyKeyPath\/valueType","role":"symbol","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"valueType","kind":"identifier"},{"text":": any ","kind":"text"},{"kind":"keyword","text":"Any"},{"text":".Type","kind":"text"}],"url":"\/documentation\/compute\/anykeypath\/valuetype","abstract":[{"type":"text","text":"The value type for this key path."}],"title":"valueType"},"doc://com.swallow.documentation.Compute/documentation/Compute/AnyKeyPath/Hashable-Implementations":{"type":"topic","url":"\/documentation\/compute\/anykeypath\/hashable-implementations","title":"Hashable Implementations","kind":"article","role":"collectionGroup","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyKeyPath\/Hashable-Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/Equatable":{"abstract":[{"text":"A type that can be compared for value equality.","type":"text"}],"type":"topic","title":"Equatable","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Equatable"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Equatable","role":"symbol","url":"\/documentation\/compute\/equatable","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Equatable","kind":"identifier"}]}}}