{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/anyidentifiabletreenode\/foreachdepthfirst(mutating:)"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"mutating"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"forEachDepthFirst","kind":"identifier"},{"text":"(","kind":"text"},{"text":"mutating","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"body"},{"text":": (","kind":"text"},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:7Compute12TreeProtocolP0B5ValueQa","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/TreeProtocol\/TreeValue","kind":"typeIdentifier","text":"TreeValue"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Void","preciseIdentifier":"s:s4Voida","text":"Void"},{"text":") ","kind":"text"},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/HomogenousTree","kind":"typeIdentifier","text":"HomogenousTree","preciseIdentifier":"s:7Compute14HomogenousTreeP"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"text":"MutableRecursiveTree","kind":"typeIdentifier","preciseIdentifier":"s:7Compute20MutableRecursiveTreeP","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/MutableRecursiveTree"}]}]}],"sections":[],"kind":"symbol","identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyIdentifiableTreeNode\/forEachDepthFirst(mutating:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyIdentifiableTreeNode","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyIdentifiableTreeNode\/RecursiveTreeProtocol-Implementations"]]},"abstract":[{"text":"Inherited from ","type":"text"},{"type":"codeVoice","code":"RecursiveTreeProtocol.forEachDepthFirst(mutating:)"},{"text":".","type":"text"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"title":"forEachDepthFirst(mutating:)","roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"forEachDepthFirst"},{"text":"(","kind":"text"},{"text":"mutating","kind":"externalParam"},{"kind":"text","text":": ("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"text":"TreeValue","kind":"typeIdentifier","preciseIdentifier":"s:7Compute12TreeProtocolP0B5ValueQa"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")"}],"extendedModule":"Compute","role":"symbol","externalID":"s:7Compute21RecursiveTreeProtocolPAAE17forEachDepthFirst8mutatingyy0C5ValueAA0cD0PQzzXE_tAA010HomogenousC0RzAA07MutablebC0RzrlF::SYNTHESIZED::s:7Compute23AnyIdentifiableTreeNodeV","symbolKind":"method","modules":[{"name":"Compute"}]},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/AnyIdentifiableTreeNode/forEachDepthFirst(mutating:)":{"kind":"symbol","type":"topic","abstract":[],"url":"\/documentation\/compute\/anyidentifiabletreenode\/foreachdepthfirst(mutating:)","title":"forEachDepthFirst(mutating:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyIdentifiableTreeNode\/forEachDepthFirst(mutating:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"forEachDepthFirst"},{"text":"(","kind":"text"},{"text":"mutating","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Compute12TreeProtocolP0B5ValueQa","text":"TreeValue"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":")"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/HomogenousTree":{"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"HomogenousTree","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/HomogenousTree","url":"\/documentation\/compute\/homogenoustree","type":"topic","abstract":[],"title":"HomogenousTree","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"HomogenousTree","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/AnyIdentifiableTreeNode/RecursiveTreeProtocol-Implementations":{"role":"collectionGroup","abstract":[],"kind":"article","type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyIdentifiableTreeNode\/RecursiveTreeProtocol-Implementations","title":"RecursiveTreeProtocol Implementations","url":"\/documentation\/compute\/anyidentifiabletreenode\/recursivetreeprotocol-implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/TreeProtocol/TreeValue":{"url":"\/documentation\/compute\/treeprotocol\/treevalue","type":"topic","title":"TreeValue","fragments":[{"text":"associatedtype","kind":"keyword"},{"kind":"text","text":" "},{"text":"TreeValue","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/TreeProtocol\/TreeValue","kind":"symbol","abstract":[{"text":"The type of value stored in each node of the tree.","type":"text"}],"required":true,"role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/MutableRecursiveTree":{"type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"MutableRecursiveTree"}],"url":"\/documentation\/compute\/mutablerecursivetree","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"MutableRecursiveTree","kind":"identifier"}],"abstract":[{"type":"text","text":"A mutable tree."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/MutableRecursiveTree","title":"MutableRecursiveTree"},"doc://com.swallow.documentation.Compute/documentation/Compute/AnyIdentifiableTreeNode":{"abstract":[],"url":"\/documentation\/compute\/anyidentifiabletreenode","title":"AnyIdentifiableTreeNode","navigatorTitle":[{"text":"AnyIdentifiableTreeNode","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyIdentifiableTreeNode","type":"topic","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AnyIdentifiableTreeNode"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Void":{"abstract":[{"text":"The return type of functions that donâ€™t explicitly specify a return type,","type":"text"},{"text":" ","type":"text"},{"text":"that is, an empty tuple ","type":"text"},{"type":"codeVoice","code":"()"},{"type":"text","text":"."}],"type":"topic","title":"Void","url":"\/documentation\/compute\/void","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Void"}],"navigatorTitle":[{"text":"Void","kind":"identifier"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Void"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"}}}