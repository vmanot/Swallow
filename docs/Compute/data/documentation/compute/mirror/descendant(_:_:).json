{"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Mirror"]]},"abstract":[{"type":"text","text":"Returns a specific descendant of the reflected subject, or "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" if no"},{"type":"text","text":" "},{"type":"text","text":"such descendant exists."}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"descendant"},{"kind":"text","text":"("},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"first"},{"text":": any ","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/MirrorPath","text":"MirrorPath","preciseIdentifier":"s:s10MirrorPathP"},{"kind":"text","text":", "},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"rest","kind":"internalParam"},{"kind":"text","text":": any "},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/MirrorPath","text":"MirrorPath","kind":"typeIdentifier","preciseIdentifier":"s:s10MirrorPathP"},{"text":"...) -> ","kind":"text"},{"text":"Any","kind":"keyword"},{"text":"?","kind":"text"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"text":"The first mirror path component to access.","type":"text"}],"type":"paragraph"}],"name":"first"},{"name":"rest","content":[{"type":"paragraph","inlineContent":[{"text":"Any remaining mirror path components.","type":"text"}]}]}]},{"content":[{"type":"heading","level":2,"text":"Return Value","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The descendant of this mirror specified by the given mirror"},{"type":"text","text":" "},{"text":"path components if such a descendant exists; otherwise, ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"}]}],"kind":"content"},{"kind":"content","content":[{"level":2,"text":"Discussion","type":"heading","anchor":"discussion"},{"inlineContent":[{"text":"Pass a variadic list of string and integer arguments. Each string","type":"text"},{"type":"text","text":" "},{"type":"text","text":"argument selects the first child with a matching label. Each integer"},{"type":"text","text":" "},{"text":"argument selects the child at that offset. For example, passing","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"1, \"two\", 3"},{"type":"text","text":" as arguments to "},{"code":"myMirror.descendant(_:_:)","type":"codeVoice"},{"type":"text","text":" is equivalent"},{"type":"text","text":" "},{"text":"to:","type":"text"}],"type":"paragraph"},{"code":["var result: Any? = nil","let children = myMirror.children","if let i0 = children.index(","    children.startIndex, offsetBy: 1, limitedBy: children.endIndex),","    i0 != children.endIndex","{","    let grandChildren = Mirror(reflecting: children[i0].value).children","    if let i1 = grandChildren.firstIndex(where: { $0.label == \"two\" }) {","        let greatGrandChildren =","            Mirror(reflecting: grandChildren[i1].value).children","        if let i2 = greatGrandChildren.index(","            greatGrandChildren.startIndex,","            offsetBy: 3,","            limitedBy: greatGrandChildren.endIndex),","            i2 != greatGrandChildren.endIndex","        {","            \/\/ Success!","            result = greatGrandChildren[i2].value","        }","    }","}"],"syntax":null,"type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"This function is suitable for exploring the structure of a mirror in a","type":"text"},{"type":"text","text":" "},{"type":"text","text":"REPL or playground, but is not intended to be efficient. The efficiency"},{"type":"text","text":" "},{"type":"text","text":"of finding each element in the argument list depends on the argument"},{"type":"text","text":" "},{"type":"text","text":"type and the capabilities of the each level of the mirror’s "},{"code":"children","type":"codeVoice"},{"type":"text","text":" "},{"text":"collections. Each string argument requires a linear search, and unless","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the underlying collection supports random-access traversal, each integer"},{"type":"text","text":" "},{"text":"argument also requires a linear operation.","type":"text"}]}]}],"variants":[{"paths":["\/documentation\/compute\/mirror\/descendant(_:_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"symbolKind":"method","externalID":"s:s6MirrorV10descendantyypSgs0A4Path_p_sAE_pdtF","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"descendant"},{"text":"(any ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s10MirrorPathP","text":"MirrorPath"},{"text":", any ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s10MirrorPathP","text":"MirrorPath"},{"text":"...) -> ","kind":"text"},{"text":"Any","kind":"keyword"},{"text":"?","kind":"text"}],"roleHeading":"Instance Method","extendedModule":"Swift","role":"symbol","modules":[{"name":"Compute","relatedModules":["Swift"]}],"title":"descendant(_:_:)"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Mirror\/descendant(_:_:)"},"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"symbol","sections":[],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/MirrorPath":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/MirrorPath","url":"\/documentation\/compute\/mirrorpath","title":"MirrorPath","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"MirrorPath","kind":"identifier"}],"navigatorTitle":[{"text":"MirrorPath","kind":"identifier"}],"abstract":[{"text":"A protocol for legitimate arguments to ","type":"text"},{"type":"codeVoice","code":"Mirror"},{"text":"’s ","type":"text"},{"code":"descendant","type":"codeVoice"},{"text":" ","type":"text"},{"type":"text","text":"method."}],"kind":"symbol","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Mirror":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Mirror","kind":"symbol","abstract":[{"type":"text","text":"A representation of the substructure and display style of an instance of"},{"type":"text","text":" "},{"type":"text","text":"any type."}],"role":"symbol","title":"Mirror","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Mirror","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"Mirror"}],"url":"\/documentation\/compute\/mirror","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Mirror/descendant(_:_:)":{"role":"symbol","title":"descendant(_:_:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Mirror\/descendant(_:_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"descendant","kind":"identifier"},{"text":"(any ","kind":"text"},{"preciseIdentifier":"s:s10MirrorPathP","text":"MirrorPath","kind":"typeIdentifier"},{"text":", any ","kind":"text"},{"text":"MirrorPath","kind":"typeIdentifier","preciseIdentifier":"s:s10MirrorPathP"},{"kind":"text","text":"...) -> "},{"text":"Any","kind":"keyword"},{"text":"?","kind":"text"}],"abstract":[{"text":"Returns a specific descendant of the reflected subject, or ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":" if no"},{"type":"text","text":" "},{"type":"text","text":"such descendant exists."}],"url":"\/documentation\/compute\/mirror\/descendant(_:_:)","kind":"symbol","type":"topic"}}}