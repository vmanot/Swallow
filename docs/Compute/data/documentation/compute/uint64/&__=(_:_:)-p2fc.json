{"kind":"symbol","metadata":{"roleHeading":"Operator","title":"&<<=(_:_:)","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"&<<=","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:s6UInt64V","kind":"typeIdentifier","text":"UInt64"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:s6UInt64V","text":"UInt64","kind":"typeIdentifier"},{"text":")","kind":"text"}],"modules":[{"name":"Compute"}],"symbolKind":"op","externalID":"s:s6UInt64V4alleoiyyABz_ABtFZ","role":"symbol"},"abstract":[{"type":"text","text":"Returns the result of shifting a value’s binary representation the"},{"text":" ","type":"text"},{"type":"text","text":"specified number of digits to the left, masking the shift amount to the"},{"type":"text","text":" "},{"type":"text","text":"type’s bit width, and stores the result in the left-hand-side variable."}],"schemaVersion":{"patch":0,"minor":3,"major":0},"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/&__=(_:_:)-p2fc","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64"]]},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"&<<=","kind":"identifier"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"text":"lhs","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64","preciseIdentifier":"s:s6UInt64V","text":"UInt64"},{"kind":"text","text":", "},{"kind":"internalParam","text":"rhs"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64","text":"UInt64","preciseIdentifier":"s:s6UInt64V"},{"kind":"text","text":")"}]}],"kind":"declarations"},{"parameters":[{"name":"lhs","content":[{"inlineContent":[{"text":"The value to shift.","type":"text"}],"type":"paragraph"}]},{"name":"rhs","content":[{"inlineContent":[{"text":"The number of bits to shift ","type":"text"},{"type":"codeVoice","code":"lhs"},{"type":"text","text":" to the left. If "},{"code":"rhs","type":"codeVoice"},{"type":"text","text":" is"},{"text":" ","type":"text"},{"type":"text","text":"outside the range "},{"type":"codeVoice","code":"0..<lhs.bitWidth"},{"type":"text","text":", it is masked to produce a"},{"type":"text","text":" "},{"type":"text","text":"value within that range."}],"type":"paragraph"}]}],"kind":"parameters"},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"code":"&<<=","type":"codeVoice"},{"type":"text","text":" operator performs a "},{"type":"emphasis","inlineContent":[{"type":"text","text":"masking shift"}]},{"type":"text","text":", where the value used as"},{"type":"text","text":" "},{"code":"rhs","type":"codeVoice"},{"type":"text","text":" is masked to produce a value in the range "},{"type":"codeVoice","code":"0..<lhs.bitWidth"},{"type":"text","text":". The"},{"type":"text","text":" "},{"type":"text","text":"shift is performed using this masked value."}]},{"inlineContent":[{"type":"text","text":"The following example defines "},{"type":"codeVoice","code":"x"},{"type":"text","text":" as an instance of "},{"type":"codeVoice","code":"UInt8"},{"text":", an 8-bit,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"unsigned integer type. If you use "},{"type":"codeVoice","code":"2"},{"type":"text","text":" as the right-hand-side value in an"},{"type":"text","text":" "},{"text":"operation on ","type":"text"},{"type":"codeVoice","code":"x"},{"text":", the shift amount requires no masking.","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":["var x: UInt8 = 30                 \/\/ 0b00011110","x &<<= 2","\/\/ x == 120                       \/\/ 0b01111000"]},{"type":"paragraph","inlineContent":[{"text":"However, if you pass ","type":"text"},{"type":"codeVoice","code":"19"},{"type":"text","text":" as "},{"code":"rhs","type":"codeVoice"},{"type":"text","text":", the method first bitmasks "},{"code":"rhs","type":"codeVoice"},{"type":"text","text":" to"},{"type":"text","text":" "},{"code":"3","type":"codeVoice"},{"type":"text","text":", and then uses that masked value as the number of bits to shift "},{"type":"codeVoice","code":"lhs"},{"type":"text","text":"."}]},{"syntax":null,"code":["var y: UInt8 = 30                 \/\/ 0b00011110","y &<<= 19","\/\/ y == 240                       \/\/ 0b11110000"],"type":"codeListing"}]}],"sections":[],"variants":[{"paths":["\/documentation\/compute\/uint64\/&__=(_:_:)-p2fc"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/UInt64/&__=(_:_:)-p2fc":{"url":"\/documentation\/compute\/uint64\/&__=(_:_:)-p2fc","abstract":[{"text":"Returns the result of shifting a value’s binary representation the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"specified number of digits to the left, masking the shift amount to the"},{"text":" ","type":"text"},{"type":"text","text":"type’s bit width, and stores the result in the left-hand-side variable."}],"title":"&<<=(_:_:)","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/&__=(_:_:)-p2fc","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"&<<=","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"UInt64","preciseIdentifier":"s:s6UInt64V"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s6UInt64V","text":"UInt64"},{"text":")","kind":"text"}],"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt64":{"navigatorTitle":[{"text":"UInt64","kind":"identifier"}],"kind":"symbol","role":"symbol","type":"topic","title":"UInt64","abstract":[{"text":"A 64-bit unsigned integer value","type":"text"},{"type":"text","text":" "},{"type":"text","text":"type."}],"url":"\/documentation\/compute\/uint64","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"UInt64","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64"}}}