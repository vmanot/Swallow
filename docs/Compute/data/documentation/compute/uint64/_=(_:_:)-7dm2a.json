{"variants":[{"paths":["\/documentation\/compute\/uint64\/_=(_:_:)-7dm2a"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"type":"text","text":"Stores the result of performing a bitwise XOR operation on the two given"},{"type":"text","text":" "},{"text":"values in the left-hand-side variable.","type":"text"}],"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/_=(_:_:)-7dm2a","interfaceLanguage":"swift"},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"^=","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"kind":"internalParam","text":"lhs"},{"text":": ","kind":"text"},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:s6UInt64V","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64","kind":"typeIdentifier","text":"UInt64"},{"kind":"text","text":", "},{"text":"rhs","kind":"internalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s6UInt64V","kind":"typeIdentifier","text":"UInt64","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64"},{"text":")","kind":"text"}]}]},{"parameters":[{"name":"lhs","content":[{"inlineContent":[{"type":"text","text":"An integer value."}],"type":"paragraph"}]},{"name":"rhs","content":[{"inlineContent":[{"type":"text","text":"Another integer value."}],"type":"paragraph"}]}],"kind":"parameters"},{"kind":"content","content":[{"anchor":"discussion","level":2,"text":"Discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"A bitwise XOR operation, also known as an exclusive OR operation, results","type":"text"},{"type":"text","text":" "},{"text":"in a value that has each bit set to ","type":"text"},{"code":"1","type":"codeVoice"},{"type":"text","text":" where "},{"type":"emphasis","inlineContent":[{"type":"text","text":"one or the other but not"},{"text":" ","type":"text"},{"text":"both","type":"text"}]},{"text":" of its arguments had that bit set to ","type":"text"},{"type":"codeVoice","code":"1"},{"text":". For example:","type":"text"}]},{"syntax":null,"type":"codeListing","code":["var x: UInt8 = 5          \/\/ 0b00000101","let y: UInt8 = 14         \/\/ 0b00001110","x ^= y                    \/\/ 0b00001011"]}]}],"metadata":{"modules":[{"name":"Compute"}],"externalID":"s:s6UInt64V2xeoiyyABz_ABtFZ","title":"^=(_:_:)","role":"symbol","symbolKind":"op","roleHeading":"Operator","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"^="},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"UInt64","preciseIdentifier":"s:s6UInt64V"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"UInt64","preciseIdentifier":"s:s6UInt64V"},{"text":")","kind":"text"}]},"kind":"symbol","references":{"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt64/_=(_:_:)-7dm2a":{"url":"\/documentation\/compute\/uint64\/_=(_:_:)-7dm2a","abstract":[{"type":"text","text":"Stores the result of performing a bitwise XOR operation on the two given"},{"text":" ","type":"text"},{"type":"text","text":"values in the left-hand-side variable."}],"title":"^=(_:_:)","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/_=(_:_:)-7dm2a","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"^=","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"preciseIdentifier":"s:s6UInt64V","kind":"typeIdentifier","text":"UInt64"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"UInt64","preciseIdentifier":"s:s6UInt64V"},{"text":")","kind":"text"}],"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt64":{"navigatorTitle":[{"text":"UInt64","kind":"identifier"}],"kind":"symbol","role":"symbol","type":"topic","title":"UInt64","abstract":[{"text":"A 64-bit unsigned integer value","type":"text"},{"type":"text","text":" "},{"type":"text","text":"type."}],"url":"\/documentation\/compute\/uint64","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"UInt64","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64"}}}