{"metadata":{"role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"<<="},{"text":" ","kind":"text"},{"text":"<","kind":"text"},{"text":"Other","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"text":"Other","kind":"typeIdentifier"},{"kind":"text","text":")"}],"externalID":"s:s17FixedWidthIntegerPsE3lleoiyyxz_qd__tSzRd__lFZ::SYNTHESIZED::s:s6UInt64V","symbolKind":"op","roleHeading":"Operator","modules":[{"relatedModules":["Swift"],"name":"Compute"}],"title":"<<=(_:_:)","extendedModule":"Swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"<<="},{"text":" ","kind":"text"},{"text":"<","kind":"text"},{"text":"Other","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"lhs","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"kind":"internalParam","text":"rhs"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Other"},{"text":") ","kind":"text"},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Other"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:Sz","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryInteger","text":"BinaryInteger"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"name":"lhs","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The value to shift."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The number of bits to shift "},{"code":"lhs","type":"codeVoice"},{"text":" to the left.","type":"text"}]}],"name":"rhs"}]},{"content":[{"level":2,"text":"Discussion","type":"heading","anchor":"discussion"},{"inlineContent":[{"type":"text","text":"The "},{"code":"<<","type":"codeVoice"},{"type":"text","text":" operator performs a "},{"type":"emphasis","inlineContent":[{"type":"text","text":"smart shift"}]},{"text":", which defines a result for a","type":"text"},{"type":"text","text":" "},{"type":"text","text":"shift of any value."}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Using a negative value for "},{"type":"codeVoice","code":"rhs"},{"text":" performs a right shift using","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"abs(rhs)"},{"text":".","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Using a value for "},{"code":"rhs","type":"codeVoice"},{"type":"text","text":" that is greater than or equal to the bit width"},{"text":" ","type":"text"},{"text":"of ","type":"text"},{"type":"codeVoice","code":"lhs"},{"type":"text","text":" is an "},{"inlineContent":[{"type":"text","text":"overshift"}],"type":"emphasis"},{"text":", resulting in zero.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Using any other value for "},{"type":"codeVoice","code":"rhs"},{"type":"text","text":" performs a left shift on "},{"type":"codeVoice","code":"lhs"},{"text":" by that","type":"text"},{"type":"text","text":" "},{"type":"text","text":"amount."}],"type":"paragraph"}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The following example defines "},{"type":"codeVoice","code":"x"},{"type":"text","text":" as an instance of "},{"code":"UInt8","type":"codeVoice"},{"type":"text","text":", an 8-bit,"},{"text":" ","type":"text"},{"type":"text","text":"unsigned integer type. If you use "},{"code":"2","type":"codeVoice"},{"text":" as the right-hand-side value in an","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"operation on "},{"type":"codeVoice","code":"x"},{"type":"text","text":", the value is shifted left by two bits."}]},{"type":"codeListing","syntax":null,"code":["var x: UInt8 = 30                 \/\/ 0b00011110","x <<= 2","\/\/ x == 120                       \/\/ 0b01111000"]},{"type":"paragraph","inlineContent":[{"text":"If you use ","type":"text"},{"type":"codeVoice","code":"11"},{"text":" as ","type":"text"},{"code":"rhs","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"x"},{"text":" is overshifted such that all of its bits","type":"text"},{"type":"text","text":" "},{"type":"text","text":"are set to zero."}]},{"syntax":null,"type":"codeListing","code":["var y: UInt8 = 30                 \/\/ 0b00011110","y <<= 11","\/\/ y == 0                         \/\/ 0b00000000"]},{"type":"paragraph","inlineContent":[{"text":"Using a negative value as ","type":"text"},{"code":"rhs","type":"codeVoice"},{"text":" is the same as performing a right shift","type":"text"},{"type":"text","text":" "},{"text":"with ","type":"text"},{"code":"abs(rhs)","type":"codeVoice"},{"type":"text","text":"."}]},{"type":"codeListing","code":["var a: UInt8 = 30                 \/\/ 0b00011110","a <<= -3","\/\/ a == 3                         \/\/ 0b00000011","","var b: UInt8 = 30                 \/\/ 0b00011110","b >>= 3","\/\/ b == 3                         \/\/ 0b00000011"],"syntax":null}],"kind":"content"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/__=(_:_:)-7usr"},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/BinaryInteger-Implementations"]]},"sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"abstract":[{"text":"Stores the result of shifting a value’s binary representation the","type":"text"},{"text":" ","type":"text"},{"text":"specified number of digits to the left in the left-hand-side variable.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/uint64\/__=(_:_:)-7usr"]}],"kind":"symbol","references":{"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt64/BinaryInteger-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/BinaryInteger-Implementations","url":"\/documentation\/compute\/uint64\/binaryinteger-implementations","type":"topic","abstract":[],"role":"collectionGroup","title":"BinaryInteger Implementations","kind":"article"},"doc://com.swallow.documentation.Compute/documentation/Compute/BinaryInteger":{"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"BinaryInteger"}],"navigatorTitle":[{"kind":"identifier","text":"BinaryInteger"}],"url":"\/documentation\/compute\/binaryinteger","type":"topic","abstract":[{"type":"text","text":"An integer type with a binary representation."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryInteger","title":"BinaryInteger","kind":"symbol","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt64/__=(_:_:)-7usr":{"kind":"symbol","url":"\/documentation\/compute\/uint64\/__=(_:_:)-7usr","title":"<<=(_:_:)","abstract":[{"type":"text","text":"Stores the result of shifting a value’s binary representation the"},{"text":" ","type":"text"},{"text":"specified number of digits to the left in the left-hand-side variable.","type":"text"}],"type":"topic","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"<<=","kind":"identifier"},{"kind":"text","text":" "},{"text":"<","kind":"text"},{"text":"Other","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Other"},{"text":")","kind":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/__=(_:_:)-7usr","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt64":{"navigatorTitle":[{"text":"UInt64","kind":"identifier"}],"kind":"symbol","role":"symbol","type":"topic","title":"UInt64","abstract":[{"text":"A 64-bit unsigned integer value","type":"text"},{"type":"text","text":" "},{"type":"text","text":"type."}],"url":"\/documentation\/compute\/uint64","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"UInt64","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64"}}}