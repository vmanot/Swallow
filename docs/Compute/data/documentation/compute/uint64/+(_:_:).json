{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/+(_:_:)"},"kind":"symbol","variants":[{"paths":["\/documentation\/compute\/uint64\/+(_:_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"Adds two values and produces their sum."}],"schemaVersion":{"major":0,"patch":0,"minor":3},"metadata":{"extendedModule":"Swift","role":"symbol","title":"+(_:_:)","symbolKind":"op","externalID":"s:s6UInt64V1poiyA2B_ABtFZ","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"+","kind":"identifier"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"text":"UInt64","kind":"typeIdentifier","preciseIdentifier":"s:s6UInt64V"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:s6UInt64V","text":"UInt64","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:s6UInt64V","kind":"typeIdentifier","text":"UInt64"}],"roleHeading":"Operator","modules":[{"relatedModules":["Swift"],"name":"Compute"}]},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/BinaryInteger-Implementations"]]},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"+"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"internalParam","text":"lhs"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64","preciseIdentifier":"s:s6UInt64V","text":"UInt64"},{"text":", ","kind":"text"},{"kind":"internalParam","text":"rhs"},{"kind":"text","text":": "},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64","kind":"typeIdentifier","text":"UInt64","preciseIdentifier":"s:s6UInt64V"},{"text":") -> ","kind":"text"},{"text":"UInt64","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64","preciseIdentifier":"s:s6UInt64V","kind":"typeIdentifier"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"content":[{"inlineContent":[{"text":"The first value to add.","type":"text"}],"type":"paragraph"}],"name":"lhs"},{"content":[{"inlineContent":[{"type":"text","text":"The second value to add."}],"type":"paragraph"}],"name":"rhs"}],"kind":"parameters"},{"content":[{"text":"Discussion","anchor":"discussion","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"The addition operator ("},{"code":"+","type":"codeVoice"},{"type":"text","text":") calculates the sum of its two arguments. For"},{"text":" ","type":"text"},{"type":"text","text":"example:"}],"type":"paragraph"},{"code":["1 + 2                   \/\/ 3","-10 + 15                \/\/ 5","-15 + -5                \/\/ -20","21.5 + 3.25             \/\/ 24.75"],"type":"codeListing","syntax":null},{"type":"paragraph","inlineContent":[{"type":"text","text":"You cannot use "},{"type":"codeVoice","code":"+"},{"text":" with arguments of different types. To add values of","type":"text"},{"type":"text","text":" "},{"type":"text","text":"different types, convert one of the values to the other value’s type."}]},{"syntax":null,"code":["let x: Int8 = 21","let y: Int = 1000000","Int(x) + y              \/\/ 1000021"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"The sum of the two arguments must be representable in the arguments’","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"type. In the following example, the result of "},{"type":"codeVoice","code":"21 + 120"},{"type":"text","text":" is greater than"},{"text":" ","type":"text"},{"text":"the maximum representable ","type":"text"},{"code":"Int8","type":"codeVoice"},{"text":" value:","type":"text"}]},{"syntax":null,"type":"codeListing","code":["x + 120                 \/\/ Overflow error"]},{"type":"aside","style":"note","content":[{"inlineContent":[{"text":"Overflow checking is not performed in ","type":"text"},{"code":"-Ounchecked","type":"codeVoice"},{"type":"text","text":" builds."}],"type":"paragraph"}],"name":"Note"},{"inlineContent":[{"text":"If you want to opt out of overflow checking and wrap the result in case","type":"text"},{"type":"text","text":" "},{"text":"of any overflow, use the overflow addition operator (","type":"text"},{"code":"&+","type":"codeVoice"},{"type":"text","text":")."}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":["x &+ 120                \/\/ -115"]}],"kind":"content"}],"sections":[],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/UInt64":{"navigatorTitle":[{"text":"UInt64","kind":"identifier"}],"kind":"symbol","role":"symbol","type":"topic","title":"UInt64","abstract":[{"text":"A 64-bit unsigned integer value","type":"text"},{"type":"text","text":" "},{"type":"text","text":"type."}],"url":"\/documentation\/compute\/uint64","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"UInt64","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt64/BinaryInteger-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/BinaryInteger-Implementations","url":"\/documentation\/compute\/uint64\/binaryinteger-implementations","type":"topic","abstract":[],"role":"collectionGroup","title":"BinaryInteger Implementations","kind":"article"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt64/+(_:_:)":{"kind":"symbol","url":"\/documentation\/compute\/uint64\/+(_:_:)","title":"+(_:_:)","abstract":[{"type":"text","text":"Adds two values and produces their sum."}],"type":"topic","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"+"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"preciseIdentifier":"s:s6UInt64V","kind":"typeIdentifier","text":"UInt64"},{"kind":"text","text":", "},{"preciseIdentifier":"s:s6UInt64V","kind":"typeIdentifier","text":"UInt64"},{"text":") -> ","kind":"text"},{"text":"UInt64","kind":"typeIdentifier","preciseIdentifier":"s:s6UInt64V"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/+(_:_:)","role":"symbol"}}}