{"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/BinaryInteger-Implementations"]]},"sections":[],"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/__(_:_:)-83yhh","interfaceLanguage":"swift"},"abstract":[{"text":"Returns the result of shifting a value’s binary representation the","type":"text"},{"text":" ","type":"text"},{"text":"specified number of digits to the left.","type":"text"}],"metadata":{"roleHeading":"Operator","modules":[{"relatedModules":["Swift"],"name":"Compute"}],"externalID":"s:SzsE2lloiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:s6UInt64V","symbolKind":"op","extendedModule":"Swift","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"<<"},{"kind":"text","text":" "},{"text":"<","kind":"text"},{"text":"RHS","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"RHS"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"title":"<<(_:_:)","role":"symbol"},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"<<","kind":"identifier"},{"text":" ","kind":"text"},{"text":"<","kind":"text"},{"text":"RHS","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"internalParam","text":"lhs"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"rhs","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"RHS"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":" "},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"RHS"},{"text":" : ","kind":"text"},{"text":"BinaryInteger","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryInteger","preciseIdentifier":"s:Sz"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The value to shift."}]}],"name":"lhs"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The number of bits to shift "},{"type":"codeVoice","code":"lhs"},{"text":" to the left.","type":"text"}]}],"name":"rhs"}]},{"kind":"content","content":[{"anchor":"discussion","text":"Discussion","type":"heading","level":2},{"inlineContent":[{"text":"The ","type":"text"},{"type":"codeVoice","code":"<<"},{"type":"text","text":" operator performs a "},{"inlineContent":[{"text":"smart shift","type":"text"}],"type":"emphasis"},{"text":", which defines a result for a","type":"text"},{"type":"text","text":" "},{"text":"shift of any value.","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Using a negative value for ","type":"text"},{"type":"codeVoice","code":"rhs"},{"type":"text","text":" performs a right shift using"},{"text":" ","type":"text"},{"code":"abs(rhs)","type":"codeVoice"},{"type":"text","text":"."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Using a value for "},{"type":"codeVoice","code":"rhs"},{"text":" that is greater than or equal to the bit width","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"of "},{"code":"lhs","type":"codeVoice"},{"type":"text","text":" is an "},{"type":"emphasis","inlineContent":[{"type":"text","text":"overshift"}]},{"type":"text","text":", resulting in zero."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Using any other value for ","type":"text"},{"code":"rhs","type":"codeVoice"},{"text":" performs a left shift on ","type":"text"},{"type":"codeVoice","code":"lhs"},{"type":"text","text":" by that"},{"type":"text","text":" "},{"text":"amount.","type":"text"}]}]}],"type":"unorderedList"},{"inlineContent":[{"type":"text","text":"The following example defines "},{"code":"x","type":"codeVoice"},{"text":" as an instance of ","type":"text"},{"type":"codeVoice","code":"UInt8"},{"text":", an 8-bit,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"unsigned integer type. If you use "},{"code":"2","type":"codeVoice"},{"type":"text","text":" as the right-hand-side value in an"},{"text":" ","type":"text"},{"type":"text","text":"operation on "},{"type":"codeVoice","code":"x"},{"type":"text","text":", the value is shifted left by two bits."}],"type":"paragraph"},{"type":"codeListing","code":["let x: UInt8 = 30                 \/\/ 0b00011110","let y = x << 2","\/\/ y == 120                       \/\/ 0b01111000"],"syntax":null},{"type":"paragraph","inlineContent":[{"text":"If you use ","type":"text"},{"code":"11","type":"codeVoice"},{"text":" as ","type":"text"},{"type":"codeVoice","code":"rhs"},{"type":"text","text":", "},{"code":"x","type":"codeVoice"},{"type":"text","text":" is overshifted such that all of its bits"},{"type":"text","text":" "},{"text":"are set to zero.","type":"text"}]},{"type":"codeListing","syntax":null,"code":["let z = x << 11","\/\/ z == 0                         \/\/ 0b00000000"]},{"type":"paragraph","inlineContent":[{"text":"Using a negative value as ","type":"text"},{"type":"codeVoice","code":"rhs"},{"text":" is the same as performing a right shift","type":"text"},{"type":"text","text":" "},{"text":"with ","type":"text"},{"type":"codeVoice","code":"abs(rhs)"},{"type":"text","text":"."}]},{"syntax":null,"code":["let a = x << -3","\/\/ a == 3                         \/\/ 0b00000011","let b = x >> 3","\/\/ b == 3                         \/\/ 0b00000011"],"type":"codeListing"}]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/uint64\/__(_:_:)-83yhh"]}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/UInt64/BinaryInteger-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/BinaryInteger-Implementations","url":"\/documentation\/compute\/uint64\/binaryinteger-implementations","type":"topic","abstract":[],"role":"collectionGroup","title":"BinaryInteger Implementations","kind":"article"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt64/__(_:_:)-83yhh":{"title":"<<(_:_:)","abstract":[{"type":"text","text":"Returns the result of shifting a value’s binary representation the"},{"text":" ","type":"text"},{"type":"text","text":"specified number of digits to the left."}],"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"<<"},{"text":" ","kind":"text"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"RHS"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"RHS"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/__(_:_:)-83yhh","url":"\/documentation\/compute\/uint64\/__(_:_:)-83yhh","role":"symbol","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt64":{"navigatorTitle":[{"text":"UInt64","kind":"identifier"}],"kind":"symbol","role":"symbol","type":"topic","title":"UInt64","abstract":[{"text":"A 64-bit unsigned integer value","type":"text"},{"type":"text","text":" "},{"type":"text","text":"type."}],"url":"\/documentation\/compute\/uint64","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"UInt64","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/BinaryInteger":{"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"BinaryInteger"}],"navigatorTitle":[{"kind":"identifier","text":"BinaryInteger"}],"url":"\/documentation\/compute\/binaryinteger","type":"topic","abstract":[{"type":"text","text":"An integer type with a binary representation."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryInteger","title":"BinaryInteger","kind":"symbol","role":"symbol"}}}