{"abstract":[{"text":"Multiplies two values and produces their product.","type":"text"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/BinaryInteger-Implementations"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"*"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"lhs","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64","preciseIdentifier":"s:s6UInt64V","text":"UInt64"},{"kind":"text","text":", "},{"kind":"internalParam","text":"rhs"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64","text":"UInt64","kind":"typeIdentifier","preciseIdentifier":"s:s6UInt64V"},{"text":") -> ","kind":"text"},{"text":"UInt64","preciseIdentifier":"s:s6UInt64V","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64","kind":"typeIdentifier"}],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The first value to multiply."}]}],"name":"lhs"},{"name":"rhs","content":[{"type":"paragraph","inlineContent":[{"text":"The second value to multiply.","type":"text"}]}]}]},{"kind":"content","content":[{"level":2,"type":"heading","text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"The multiplication operator (","type":"text"},{"type":"codeVoice","code":"*"},{"text":") calculates the product of its two","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"arguments. For example:"}]},{"type":"codeListing","code":["2 * 3                   \/\/ 6","100 * 21                \/\/ 2100","-10 * 15                \/\/ -150","3.5 * 2.25              \/\/ 7.875"],"syntax":null},{"type":"paragraph","inlineContent":[{"text":"You cannot use ","type":"text"},{"code":"*","type":"codeVoice"},{"type":"text","text":" with arguments of different types. To multiply values"},{"type":"text","text":" "},{"text":"of different types, convert one of the values to the other value’s type.","type":"text"}]},{"type":"codeListing","code":["let x: Int8 = 21","let y: Int = 1000000","Int(x) * y              \/\/ 21000000"],"syntax":null},{"type":"paragraph","inlineContent":[{"type":"text","text":"The product of the two arguments must be representable in the arguments’"},{"text":" ","type":"text"},{"type":"text","text":"type. In the following example, the result of "},{"type":"codeVoice","code":"21 * 21"},{"type":"text","text":" is greater than"},{"text":" ","type":"text"},{"type":"text","text":"the maximum representable "},{"type":"codeVoice","code":"Int8"},{"text":" value:","type":"text"}]},{"type":"codeListing","code":["x * 21                  \/\/ Overflow error"],"syntax":null},{"content":[{"type":"paragraph","inlineContent":[{"text":"Overflow checking is not performed in ","type":"text"},{"type":"codeVoice","code":"-Ounchecked"},{"type":"text","text":" builds."}]}],"style":"note","name":"Note","type":"aside"},{"type":"paragraph","inlineContent":[{"text":"If you want to opt out of overflow checking and wrap the result in case","type":"text"},{"type":"text","text":" "},{"text":"of any overflow, use the overflow multiplication operator (","type":"text"},{"code":"&*","type":"codeVoice"},{"text":").","type":"text"}]},{"type":"codeListing","syntax":null,"code":["x &* 21                \/\/ -115"]}]}],"sections":[],"metadata":{"roleHeading":"Operator","symbolKind":"op","modules":[{"name":"Compute","relatedModules":["Swift"]}],"externalID":"s:s6UInt64V1moiyA2B_ABtFZ","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"*"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"preciseIdentifier":"s:s6UInt64V","kind":"typeIdentifier","text":"UInt64"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s6UInt64V","text":"UInt64"},{"text":") -> ","kind":"text"},{"text":"UInt64","kind":"typeIdentifier","preciseIdentifier":"s:s6UInt64V"}],"extendedModule":"Swift","title":"*(_:_:)"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/uint64\/*(_:_:)"]}],"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/*(_:_:)"},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/UInt64":{"navigatorTitle":[{"text":"UInt64","kind":"identifier"}],"kind":"symbol","role":"symbol","type":"topic","title":"UInt64","abstract":[{"text":"A 64-bit unsigned integer value","type":"text"},{"type":"text","text":" "},{"type":"text","text":"type."}],"url":"\/documentation\/compute\/uint64","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"UInt64","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt64/*(_:_:)":{"title":"*(_:_:)","url":"\/documentation\/compute\/uint64\/*(_:_:)","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"*","kind":"identifier"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"preciseIdentifier":"s:s6UInt64V","text":"UInt64","kind":"typeIdentifier"},{"kind":"text","text":", "},{"preciseIdentifier":"s:s6UInt64V","text":"UInt64","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:s6UInt64V","text":"UInt64","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/*(_:_:)","kind":"symbol","abstract":[{"type":"text","text":"Multiplies two values and produces their product."}],"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt64/BinaryInteger-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/BinaryInteger-Implementations","url":"\/documentation\/compute\/uint64\/binaryinteger-implementations","type":"topic","abstract":[],"role":"collectionGroup","title":"BinaryInteger Implementations","kind":"article"}}}