{"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"&-=","kind":"identifier"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"text":"lhs","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"internalParam","text":"rhs"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":")"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"A numeric value.","type":"text"}]}],"name":"lhs"},{"name":"rhs","content":[{"type":"paragraph","inlineContent":[{"text":"The value to subtract from ","type":"text"},{"code":"lhs","type":"codeVoice"},{"text":".","type":"text"}]}]}]},{"kind":"content","content":[{"text":"Discussion","type":"heading","anchor":"discussion","level":2},{"type":"paragraph","inlineContent":[{"text":"The masking subtraction assignment operator (","type":"text"},{"type":"codeVoice","code":"&-="},{"type":"text","text":") silently wraps any"},{"text":" ","type":"text"},{"type":"text","text":"overflow that occurs during the operation. In the following example, the"},{"type":"text","text":" "},{"text":"difference of ","type":"text"},{"code":"10","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"21"},{"text":" is less than zero, the minimum representable","type":"text"},{"text":" ","type":"text"},{"code":"UInt","type":"codeVoice"},{"type":"text","text":" value, so the result is the result is the partial value after"},{"text":" ","type":"text"},{"type":"text","text":"discarding the overflowing bits."}]},{"syntax":null,"code":["var x: Int8 = 21","x &-= 10","\/\/ x == 11","var y: UInt8 = 10","y &-= 21","\/\/ y == 245 (after overflow)"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"For more about arithmetic with overflow operators, see ","type":"text"},{"type":"reference","identifier":"https:\/\/docs.swift.org\/swift-book\/LanguageGuide\/AdvancedOperators.html#ID37","isActive":true},{"text":" in ","type":"text"},{"type":"emphasis","inlineContent":[{"isActive":true,"identifier":"https:\/\/docs.swift.org\/swift-book\/","type":"reference"}]},{"text":".","type":"text"}]}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"symbol","identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/&-=(_:_:)","interfaceLanguage":"swift"},"metadata":{"role":"symbol","extendedModule":"Swift","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"&-=","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":")"}],"title":"&-=(_:_:)","roleHeading":"Operator","modules":[{"name":"Compute","relatedModules":["Swift"]}],"symbolKind":"op","externalID":"s:s17FixedWidthIntegerPsE3aseoiyyxz_xtFZ::SYNTHESIZED::s:s6UInt64V"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/uint64\/&-=(_:_:)"]}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/FixedWidthInteger-Implementations"]]},"sections":[],"abstract":[{"text":"Subtracts the second value from the first and stores the difference in the","type":"text"},{"text":" ","type":"text"},{"text":"left-hand-side variable, wrapping any overflow.","type":"text"}],"references":{"https://docs.swift.org/swift-book/LanguageGuide/AdvancedOperators.html#ID37":{"type":"link","identifier":"https:\/\/docs.swift.org\/swift-book\/LanguageGuide\/AdvancedOperators.html#ID37","title":"Overflow Operators","titleInlineContent":[{"text":"Overflow","type":"text"},{"type":"text","text":" "},{"text":"Operators","type":"text"}],"url":"https:\/\/docs.swift.org\/swift-book\/LanguageGuide\/AdvancedOperators.html#ID37"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt64/&-=(_:_:)":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/&-=(_:_:)","url":"\/documentation\/compute\/uint64\/&-=(_:_:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"&-=","kind":"identifier"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"text":")","kind":"text"}],"type":"topic","abstract":[{"text":"Subtracts the second value from the first and stores the difference in the","type":"text"},{"type":"text","text":" "},{"text":"left-hand-side variable, wrapping any overflow.","type":"text"}],"role":"symbol","title":"&-=(_:_:)","kind":"symbol"},"https://docs.swift.org/swift-book/":{"type":"link","identifier":"https:\/\/docs.swift.org\/swift-book\/","title":"The Swift Programming Language","titleInlineContent":[{"type":"text","text":"The Swift Programming Language"}],"url":"https:\/\/docs.swift.org\/swift-book\/"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt64":{"navigatorTitle":[{"text":"UInt64","kind":"identifier"}],"kind":"symbol","role":"symbol","type":"topic","title":"UInt64","abstract":[{"text":"A 64-bit unsigned integer value","type":"text"},{"type":"text","text":" "},{"type":"text","text":"type."}],"url":"\/documentation\/compute\/uint64","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"UInt64","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt64/FixedWidthInteger-Implementations":{"url":"\/documentation\/compute\/uint64\/fixedwidthinteger-implementations","title":"FixedWidthInteger Implementations","kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/FixedWidthInteger-Implementations","role":"collectionGroup","type":"topic","abstract":[]}}}