{"abstract":[{"text":"Returns the result of shifting a value’s binary representation the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"specified number of digits to the right."}],"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"symbol","sections":[],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/BinaryInteger-Implementations"]]},"metadata":{"symbolKind":"op","roleHeading":"Operator","externalID":"s:SzsE2ggoiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:s6UInt64V","role":"symbol","modules":[{"relatedModules":["Swift"],"name":"Compute"}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":">>","kind":"identifier"},{"text":" ","kind":"text"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"RHS"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"text":"RHS","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"extendedModule":"Swift","title":">>(_:_:)"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":">>","kind":"identifier"},{"text":" ","kind":"text"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"RHS"},{"text":">(","kind":"text"},{"text":"lhs","kind":"internalParam"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"internalParam","text":"rhs"},{"text":": ","kind":"text"},{"text":"RHS","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":" ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RHS","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryInteger","text":"BinaryInteger","preciseIdentifier":"s:Sz","kind":"typeIdentifier"}],"languages":["swift"]}]},{"parameters":[{"name":"lhs","content":[{"inlineContent":[{"type":"text","text":"The value to shift."}],"type":"paragraph"}]},{"name":"rhs","content":[{"type":"paragraph","inlineContent":[{"text":"The number of bits to shift ","type":"text"},{"type":"codeVoice","code":"lhs"},{"type":"text","text":" to the right."}]}]}],"kind":"parameters"},{"kind":"content","content":[{"anchor":"discussion","level":2,"text":"Discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"code":">>","type":"codeVoice"},{"type":"text","text":" operator performs a "},{"type":"emphasis","inlineContent":[{"text":"smart shift","type":"text"}]},{"text":", which defines a result for a","type":"text"},{"type":"text","text":" "},{"type":"text","text":"shift of any value."}]},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Using a negative value for "},{"code":"rhs","type":"codeVoice"},{"type":"text","text":" performs a left shift using"},{"type":"text","text":" "},{"type":"codeVoice","code":"abs(rhs)"},{"text":".","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Using a value for "},{"code":"rhs","type":"codeVoice"},{"text":" that is greater than or equal to the bit width","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"of "},{"type":"codeVoice","code":"lhs"},{"text":" is an ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"overshift"}]},{"type":"text","text":". An overshift results in "},{"type":"codeVoice","code":"-1"},{"type":"text","text":" for a"},{"text":" ","type":"text"},{"type":"text","text":"negative value of "},{"code":"lhs","type":"codeVoice"},{"text":" or ","type":"text"},{"code":"0","type":"codeVoice"},{"text":" for a nonnegative value.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Using any other value for "},{"type":"codeVoice","code":"rhs"},{"text":" performs a right shift on ","type":"text"},{"type":"codeVoice","code":"lhs"},{"text":" by that","type":"text"},{"text":" ","type":"text"},{"text":"amount.","type":"text"}]}]}],"type":"unorderedList"},{"inlineContent":[{"text":"The following example defines ","type":"text"},{"code":"x","type":"codeVoice"},{"type":"text","text":" as an instance of "},{"type":"codeVoice","code":"UInt8"},{"type":"text","text":", an 8-bit,"},{"text":" ","type":"text"},{"text":"unsigned integer type. If you use ","type":"text"},{"code":"2","type":"codeVoice"},{"type":"text","text":" as the right-hand-side value in an"},{"text":" ","type":"text"},{"type":"text","text":"operation on "},{"type":"codeVoice","code":"x"},{"text":", the value is shifted right by two bits.","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":["let x: UInt8 = 30                 \/\/ 0b00011110","let y = x >> 2","\/\/ y == 7                         \/\/ 0b00000111"]},{"inlineContent":[{"type":"text","text":"If you use "},{"code":"11","type":"codeVoice"},{"text":" as ","type":"text"},{"code":"rhs","type":"codeVoice"},{"text":", ","type":"text"},{"code":"x","type":"codeVoice"},{"type":"text","text":" is overshifted such that all of its bits"},{"text":" ","type":"text"},{"type":"text","text":"are set to zero."}],"type":"paragraph"},{"code":["let z = x >> 11","\/\/ z == 0                         \/\/ 0b00000000"],"type":"codeListing","syntax":null},{"type":"paragraph","inlineContent":[{"type":"text","text":"Using a negative value as "},{"type":"codeVoice","code":"rhs"},{"type":"text","text":" is the same as performing a left shift"},{"type":"text","text":" "},{"type":"text","text":"using "},{"type":"codeVoice","code":"abs(rhs)"},{"text":".","type":"text"}]},{"syntax":null,"type":"codeListing","code":["let a = x >> -3","\/\/ a == 240                       \/\/ 0b11110000","let b = x << 3","\/\/ b == 240                       \/\/ 0b11110000"]},{"inlineContent":[{"type":"text","text":"Right shift operations on negative values “fill in” the high bits with"},{"text":" ","type":"text"},{"type":"text","text":"ones instead of zeros."}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":["let q: Int8 = -30                 \/\/ 0b11100010","let r = q >> 2","\/\/ r == -8                        \/\/ 0b11111000","","let s = q >> 11","\/\/ s == -1                        \/\/ 0b11111111"]}]}],"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/__(_:_:)-7rk6f","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/compute\/uint64\/__(_:_:)-7rk6f"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/UInt64/BinaryInteger-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/BinaryInteger-Implementations","url":"\/documentation\/compute\/uint64\/binaryinteger-implementations","type":"topic","abstract":[],"role":"collectionGroup","title":"BinaryInteger Implementations","kind":"article"},"doc://com.swallow.documentation.Compute/documentation/Compute/BinaryInteger":{"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"BinaryInteger"}],"navigatorTitle":[{"kind":"identifier","text":"BinaryInteger"}],"url":"\/documentation\/compute\/binaryinteger","type":"topic","abstract":[{"type":"text","text":"An integer type with a binary representation."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryInteger","title":"BinaryInteger","kind":"symbol","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt64/__(_:_:)-7rk6f":{"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":">>"},{"kind":"text","text":" "},{"kind":"text","text":"<"},{"text":"RHS","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"RHS","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"role":"symbol","title":">>(_:_:)","url":"\/documentation\/compute\/uint64\/__(_:_:)-7rk6f","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/__(_:_:)-7rk6f","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Returns the result of shifting a value’s binary representation the"},{"type":"text","text":" "},{"type":"text","text":"specified number of digits to the right."}]},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt64":{"navigatorTitle":[{"text":"UInt64","kind":"identifier"}],"kind":"symbol","role":"symbol","type":"topic","title":"UInt64","abstract":[{"text":"A 64-bit unsigned integer value","type":"text"},{"type":"text","text":" "},{"type":"text","text":"type."}],"url":"\/documentation\/compute\/uint64","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"UInt64","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"}}}