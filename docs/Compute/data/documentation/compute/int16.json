{"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/int16"]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"type":"text","text":"A 16-bit signed integer value"},{"type":"text","text":" "},{"type":"text","text":"type."}],"sections":[],"metadata":{"modules":[{"name":"Compute"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Int16"}],"roleHeading":"Structure","symbolKind":"struct","title":"Int16","externalID":"s:s5Int16V","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Int16"}]},"topicSections":[{"generated":true,"title":"Structures","identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/Words-swift.struct"],"anchor":"Structures"},{"identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/!=(_:_:)-748td","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/&=(_:_:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/&__=(_:_:)-99pwo","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/&__=(_:_:)-p5ty","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/*=(_:_:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/+=(_:_:)-91rzm","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/-=(_:_:)-1rfmf","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/==(_:_:)-78bjx","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/_(_:_:)-47ytd","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/_=(_:_:)-15qjk","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/_=(_:_:)-1zcaj","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/_=(_:_:)-3hk1a","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/_=(_:_:)-9yk6s"],"anchor":"Operators","title":"Operators","generated":true},{"identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/init(_:)-192r7","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/init(_:)-4h6i5","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/init(_:)-6paha","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/init(bitPattern:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/init(exactly:)-3vet0","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/init(exactly:)-5zk1","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/init(exactly:)-8v4ka"],"anchor":"Initializers","generated":true,"title":"Initializers"},{"title":"Instance Properties","anchor":"Instance-Properties","generated":true,"identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/byteSwapped","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/leadingZeroBitCount","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/magnitude-swift.property","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/nonzeroBitCount","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/trailingZeroBitCount","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/words-swift.property"]},{"generated":true,"identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/addingReportingOverflow(_:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/dividedReportingOverflow(by:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/dividingFullWidth(_:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/multipliedFullWidth(by:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/multipliedReportingOverflow(by:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/remainderReportingOverflow(dividingBy:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/signum()","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/subtractingReportingOverflow(_:)"],"anchor":"Instance-Methods","title":"Instance Methods"},{"title":"Type Aliases","anchor":"Type-Aliases","identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/IntegerLiteralType","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/Magnitude-swift.typealias","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/Stride"],"generated":true},{"title":"Type Properties","generated":true,"identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/bitWidth-swift.type.property"],"anchor":"Type-Properties"},{"title":"Default Implementations","generated":true,"identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/AdditiveArithmetic-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/BinaryInteger-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/Comparable-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/CustomReflectable-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/Decodable-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/Encodable-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/Equatable-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/ExpressibleByIntegerLiteral-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/FixedWidthInteger-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/Hashable-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/SIMDScalar-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/SignedInteger-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/SignedNumeric-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/Strideable-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/_CustomPlaygroundQuickLookable-Implementations"],"anchor":"Default-Implementations"}],"relationshipsSections":[{"title":"Conforms To","kind":"relationships","identifiers":["doc:\/\/com.swallow.documentation.Compute\/10Accelerate10BNNSScalarP","doc:\/\/com.swallow.documentation.Compute\/10Accelerate23vDSP_IntegerConvertableP","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AdditiveArithmetic","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryInteger","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BitwiseCopyable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CVarArg","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Comparable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Copyable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CustomReflectable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CustomStringConvertible","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Decodable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Encodable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Equatable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ExpressibleByIntegerLiteral","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FixedWidthInteger","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Hashable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LosslessStringConvertible","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Numeric","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMDScalar","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sendable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SignedInteger","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SignedNumeric","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Strideable","doc:\/\/com.swallow.documentation.Compute\/7Swallow18AdditionOperatableP","doc:\/\/com.swallow.documentation.Compute\/7Swallow21AnyCodableConvertibleP","doc:\/\/com.swallow.documentation.Compute\/7Swallow22ApproximatelyEquatableP","doc:\/\/com.swallow.documentation.Compute\/7Swallow20ArithmeticOperatableP","doc:\/\/com.swallow.documentation.Compute\/7Swallow16BooleanInitiableP","doc:\/\/com.swallow.documentation.Compute\/7Swallow7BoundedP","doc:\/\/com.swallow.documentation.Compute\/7Swallow18BoundedRandomnableP","doc:\/\/com.swallow.documentation.Compute\/7Swallow18ByteOrderSwappableP","doc:\/\/com.swallow.documentation.Compute\/7Swallow20ByteTupleConvertibleP","doc:\/\/com.swallow.documentation.Compute\/7Swallow14CoderPrimitiveP","doc:\/\/com.swallow.documentation.Compute\/7Swallow13DataDecodableP","doc:\/\/com.swallow.documentation.Compute\/7Swallow13DataEncodableP","doc:\/\/com.swallow.documentation.Compute\/7Swallow8DiscreteP","doc:\/\/com.swallow.documentation.Compute\/7Swallow20DiscreteOrContinuousP","doc:\/\/com.swallow.documentation.Compute\/7Swallow18DivisionOperatableP","doc:\/\/com.swallow.documentation.Compute\/7Swallow22FloatingPointInitiableP","doc:\/\/com.swallow.documentation.Compute\/7Swallow9InitiableP","doc:\/\/com.swallow.documentation.Compute\/7Swallow16IntegerInitiableP","doc:\/\/com.swallow.documentation.Compute\/7Swallow24MultiplicationOperatableP","doc:\/\/com.swallow.documentation.Compute\/7Swallow25MutableAdditionOperatableP","doc:\/\/com.swallow.documentation.Compute\/7Swallow27MutableArithmeticOperatableP","doc:\/\/com.swallow.documentation.Compute\/7Swallow25MutableDivisionOperatableP","doc:\/\/com.swallow.documentation.Compute\/7Swallow31MutableMultiplicationOperatableP","doc:\/\/com.swallow.documentation.Compute\/7Swallow28MutableSubtractionOperatableP","doc:\/\/com.swallow.documentation.Compute\/7Swallow6NumberP","doc:\/\/com.swallow.documentation.Compute\/7Swallow17NumberConvertibleP","doc:\/\/com.swallow.documentation.Compute\/7Swallow15NumberInitiableP","doc:\/\/com.swallow.documentation.Compute\/7Swallow11RandomnableP","doc:\/\/com.swallow.documentation.Compute\/7Swallow26ShouldNotBeDecodedFromBoolP","doc:\/\/com.swallow.documentation.Compute\/7Swallow6SignedP","doc:\/\/com.swallow.documentation.Compute\/7Swallow22SignedIntegerInitiableP","doc:\/\/com.swallow.documentation.Compute\/7Swallow16SignedOrUnsignedP","doc:\/\/com.swallow.documentation.Compute\/7Swallow21SubtractionOperatableP","doc:\/\/com.swallow.documentation.Compute\/7Swallow7TrivialP","doc:\/\/com.swallow.documentation.Compute\/7Swallow24UnsignedIntegerInitiableP"],"type":"conformsTo"}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute"]]},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"@frozen","kind":"attribute"},{"text":" ","kind":"text"},{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Int16","kind":"identifier"}]}],"kind":"declarations"}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Int16/Strideable-Implementations":{"title":"Strideable Implementations","type":"topic","role":"collectionGroup","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/Strideable-Implementations","url":"\/documentation\/compute\/int16\/strideable-implementations","abstract":[],"kind":"article"},"doc://com.swallow.documentation.Compute/7Swallow24UnsignedIntegerInitiableP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow24UnsignedIntegerInitiableP","type":"unresolvable","title":"Swallow.UnsignedIntegerInitiable"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int16/SIMDScalar-Implementations":{"url":"\/documentation\/compute\/int16\/simdscalar-implementations","role":"collectionGroup","abstract":[],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/SIMDScalar-Implementations","title":"SIMDScalar Implementations","kind":"article"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int16/init(exactly:)-8v4ka":{"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/init(exactly:)-8v4ka","abstract":[{"text":"Creates an integer from the given floating-point value, if it can be","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"represented exactly."}],"role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"text":"?(","kind":"text"},{"kind":"externalParam","text":"exactly"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Float","preciseIdentifier":"s:Sf"},{"text":")","kind":"text"}],"title":"init(exactly:)","kind":"symbol","url":"\/documentation\/compute\/int16\/init(exactly:)-8v4ka"},"doc://com.swallow.documentation.Compute/documentation/Compute/Decodable":{"kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"Decodable","kind":"identifier"}],"title":"Decodable","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Decodable","abstract":[{"type":"text","text":"A type that can decode itself from an external representation."}],"url":"\/documentation\/compute\/decodable","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Decodable"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Int16/leadingZeroBitCount":{"role":"symbol","url":"\/documentation\/compute\/int16\/leadingzerobitcount","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"leadingZeroBitCount","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"abstract":[{"text":"The number of leading zeros in this value’s binary representation.","type":"text"}],"type":"topic","kind":"symbol","title":"leadingZeroBitCount","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/leadingZeroBitCount"},"doc://com.swallow.documentation.Compute/7Swallow20DiscreteOrContinuousP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow20DiscreteOrContinuousP","type":"unresolvable","title":"Swallow.DiscreteOrContinuous"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int16/init(_:)-4h6i5":{"abstract":[],"fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sf","text":"Float"},{"kind":"text","text":")"}],"url":"\/documentation\/compute\/int16\/init(_:)-4h6i5","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/init(_:)-4h6i5","type":"topic","kind":"symbol","title":"init(_:)"},"doc://com.swallow.documentation.Compute/7Swallow18DivisionOperatableP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow18DivisionOperatableP","type":"unresolvable","title":"Swallow.DivisionOperatable"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int16/signum()":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"signum","kind":"identifier"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:s5Int16V","kind":"typeIdentifier","text":"Int16"}],"role":"symbol","type":"topic","url":"\/documentation\/compute\/int16\/signum()","abstract":[{"text":"Returns ","type":"text"},{"code":"-1","type":"codeVoice"},{"text":" if this value is negative and ","type":"text"},{"code":"1","type":"codeVoice"},{"type":"text","text":" if it’s positive;"},{"text":" ","type":"text"},{"text":"otherwise, ","type":"text"},{"type":"codeVoice","code":"0"},{"text":".","type":"text"}],"kind":"symbol","title":"signum()","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/signum()"},"doc://com.swallow.documentation.Compute/10Accelerate23vDSP_IntegerConvertableP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/10Accelerate23vDSP_IntegerConvertableP","type":"unresolvable","title":"Accelerate.vDSP_IntegerConvertable"},"doc://com.swallow.documentation.Compute/documentation/Compute/CustomReflectable":{"url":"\/documentation\/compute\/customreflectable","role":"symbol","abstract":[{"text":"A type that explicitly supplies its own mirror.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CustomReflectable","title":"CustomReflectable","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CustomReflectable"}],"navigatorTitle":[{"kind":"identifier","text":"CustomReflectable"}],"kind":"symbol"},"doc://com.swallow.documentation.Compute/7Swallow15NumberInitiableP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow15NumberInitiableP","type":"unresolvable","title":"Swallow.NumberInitiable"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int16/ExpressibleByIntegerLiteral-Implementations":{"title":"ExpressibleByIntegerLiteral Implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/ExpressibleByIntegerLiteral-Implementations","kind":"article","url":"\/documentation\/compute\/int16\/expressiblebyintegerliteral-implementations","abstract":[],"role":"collectionGroup","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int16/_=(_:_:)-3hk1a":{"abstract":[{"text":"Stores the result of performing a bitwise XOR operation on the two given","type":"text"},{"text":" ","type":"text"},{"text":"values in the left-hand-side variable.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/_=(_:_:)-3hk1a","type":"topic","title":"^=(_:_:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"^=","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"preciseIdentifier":"s:s5Int16V","text":"Int16","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:s5Int16V","kind":"typeIdentifier","text":"Int16"},{"kind":"text","text":")"}],"url":"\/documentation\/compute\/int16\/_=(_:_:)-3hk1a","role":"symbol","kind":"symbol"},"doc://com.swallow.documentation.Compute/7Swallow16IntegerInitiableP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow16IntegerInitiableP","type":"unresolvable","title":"Swallow.IntegerInitiable"},"doc://com.swallow.documentation.Compute/7Swallow31MutableMultiplicationOperatableP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow31MutableMultiplicationOperatableP","type":"unresolvable","title":"Swallow.MutableMultiplicationOperatable"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int16/_=(_:_:)-9yk6s":{"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/_=(_:_:)-9yk6s","abstract":[{"type":"text","text":"Stores the result of performing a bitwise OR operation on the two given"},{"type":"text","text":" "},{"type":"text","text":"values in the left-hand-side variable."}],"type":"topic","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"|="},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s5Int16V","text":"Int16"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:s5Int16V","kind":"typeIdentifier","text":"Int16"},{"kind":"text","text":")"}],"role":"symbol","title":"|=(_:_:)","url":"\/documentation\/compute\/int16\/_=(_:_:)-9yk6s"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int16/IntegerLiteralType":{"role":"symbol","url":"\/documentation\/compute\/int16\/integerliteraltype","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"IntegerLiteralType"}],"navigatorTitle":[{"text":"IntegerLiteralType","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/IntegerLiteralType","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"A type that represents an integer literal."}],"title":"Int16.IntegerLiteralType"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int16/!=(_:_:)-748td":{"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/!=(_:_:)-748td","url":"\/documentation\/compute\/int16\/!=(_:_:)-748td","type":"topic","title":"!=(_:_:)","abstract":[],"role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"!=","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"preciseIdentifier":"s:s5Int16V","kind":"typeIdentifier","text":"Int16"},{"text":", ","kind":"text"},{"text":"Int16","preciseIdentifier":"s:s5Int16V","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Int16/multipliedReportingOverflow(by:)":{"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/multipliedReportingOverflow(by:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"multipliedReportingOverflow"},{"kind":"text","text":"("},{"text":"by","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int16","preciseIdentifier":"s:s5Int16V"},{"text":") -> (partialValue","kind":"text"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s5Int16V","text":"Int16"},{"kind":"text","text":", overflow"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":")"}],"type":"topic","url":"\/documentation\/compute\/int16\/multipliedreportingoverflow(by:)","kind":"symbol","abstract":[{"text":"Returns the product of this value and the given value, along with a","type":"text"},{"type":"text","text":" "},{"text":"Boolean value indicating whether overflow occurred in the operation.","type":"text"}],"title":"multipliedReportingOverflow(by:)"},"doc://com.swallow.documentation.Compute/7Swallow14CoderPrimitiveP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow14CoderPrimitiveP","type":"unresolvable","title":"Swallow.CoderPrimitive"},"doc://com.swallow.documentation.Compute/documentation/Compute/Hashable":{"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Hashable"}],"title":"Hashable","navigatorTitle":[{"text":"Hashable","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"A type that can be hashed into a "},{"type":"codeVoice","code":"Hasher"},{"type":"text","text":" to produce an integer hash value."}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Hashable","url":"\/documentation\/compute\/hashable","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int16/FixedWidthInteger-Implementations":{"url":"\/documentation\/compute\/int16\/fixedwidthinteger-implementations","kind":"article","title":"FixedWidthInteger Implementations","role":"collectionGroup","type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/FixedWidthInteger-Implementations","abstract":[]},"doc://com.swallow.documentation.Compute/documentation/Compute/Int16/Equatable-Implementations":{"url":"\/documentation\/compute\/int16\/equatable-implementations","title":"Equatable Implementations","type":"topic","kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/Equatable-Implementations","abstract":[],"role":"collectionGroup"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int16/byteSwapped":{"role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"A representation of this integer with the byte order swapped."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/byteSwapped","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"byteSwapped","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Int16","kind":"typeIdentifier","preciseIdentifier":"s:s5Int16V"}],"title":"byteSwapped","type":"topic","url":"\/documentation\/compute\/int16\/byteswapped"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int16/Words-swift.struct":{"title":"Int16.Words","navigatorTitle":[{"kind":"identifier","text":"Words"}],"abstract":[{"text":"A type that represents the words of this integer.","type":"text"}],"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Words"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/Words-swift.struct","role":"symbol","type":"topic","url":"\/documentation\/compute\/int16\/words-swift.struct"},"doc://com.swallow.documentation.Compute/7Swallow22ApproximatelyEquatableP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow22ApproximatelyEquatableP","type":"unresolvable","title":"Swallow.ApproximatelyEquatable"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMDScalar":{"kind":"symbol","navigatorTitle":[{"text":"SIMDScalar","kind":"identifier"}],"type":"topic","title":"SIMDScalar","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMDScalar","abstract":[{"type":"text","text":"A type that can be used as an element in a SIMD vector."}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SIMDScalar","kind":"identifier"}],"url":"\/documentation\/compute\/simdscalar"},"doc://com.swallow.documentation.Compute/7Swallow6NumberP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow6NumberP","type":"unresolvable","title":"Swallow.Number"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int16/&=(_:_:)":{"title":"&=(_:_:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/&=(_:_:)","url":"\/documentation\/compute\/int16\/&=(_:_:)","kind":"symbol","abstract":[{"type":"text","text":"Stores the result of performing a bitwise AND operation on the two given"},{"type":"text","text":" "},{"text":"values in the left-hand-side variable.","type":"text"}],"type":"topic","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"&=","kind":"identifier"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:s5Int16V","text":"Int16","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:s5Int16V","text":"Int16","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Strideable":{"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/compute\/strideable","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Strideable","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Strideable"}],"navigatorTitle":[{"text":"Strideable","kind":"identifier"}],"abstract":[{"type":"text","text":"A type representing continuous, one-dimensional values that can be offset"},{"type":"text","text":" "},{"type":"text","text":"and measured."}],"title":"Strideable"},"doc://com.swallow.documentation.Compute/documentation/Compute/SignedNumeric":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SignedNumeric","url":"\/documentation\/compute\/signednumeric","title":"SignedNumeric","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"SignedNumeric"}],"navigatorTitle":[{"text":"SignedNumeric","kind":"identifier"}],"abstract":[{"type":"text","text":"A numeric type with a negation operation."}],"kind":"symbol","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int16":{"title":"Int16","abstract":[{"text":"A 16-bit signed integer value","type":"text"},{"type":"text","text":" "},{"text":"type.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Int16"}],"type":"topic","url":"\/documentation\/compute\/int16","navigatorTitle":[{"kind":"identifier","text":"Int16"}]},"doc://com.swallow.documentation.Compute/7Swallow8DiscreteP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow8DiscreteP","type":"unresolvable","title":"Swallow.Discrete"},"doc://com.swallow.documentation.Compute/7Swallow22FloatingPointInitiableP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow22FloatingPointInitiableP","type":"unresolvable","title":"Swallow.FloatingPointInitiable"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int16/Decodable-Implementations":{"type":"topic","role":"collectionGroup","url":"\/documentation\/compute\/int16\/decodable-implementations","kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/Decodable-Implementations","abstract":[],"title":"Decodable Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int16/Stride":{"role":"symbol","title":"Int16.Stride","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/Stride","type":"topic","abstract":[{"type":"text","text":"A type that represents the distance between two values."}],"url":"\/documentation\/compute\/int16\/stride","navigatorTitle":[{"kind":"identifier","text":"Stride"}],"kind":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Stride"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/LosslessStringConvertible":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LosslessStringConvertible","kind":"identifier"}],"kind":"symbol","title":"LosslessStringConvertible","abstract":[{"type":"text","text":"A type that can be represented as a string in a lossless, unambiguous way."}],"role":"symbol","type":"topic","navigatorTitle":[{"text":"LosslessStringConvertible","kind":"identifier"}],"url":"\/documentation\/compute\/losslessstringconvertible","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LosslessStringConvertible"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int16/BinaryInteger-Implementations":{"role":"collectionGroup","type":"topic","title":"BinaryInteger Implementations","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/BinaryInteger-Implementations","kind":"article","url":"\/documentation\/compute\/int16\/binaryinteger-implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int16/init(_:)-192r7":{"kind":"symbol","type":"topic","url":"\/documentation\/compute\/int16\/init(_:)-192r7","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"text":"Float16","preciseIdentifier":"s:s7Float16V","kind":"typeIdentifier"},{"text":")","kind":"text"}],"abstract":[{"type":"text","text":"Creates an integer from the given floating-point value, rounding toward"},{"text":" ","type":"text"},{"type":"text","text":"zero."}],"title":"init(_:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/init(_:)-192r7","role":"symbol"},"doc://com.swallow.documentation.Compute/7Swallow20ArithmeticOperatableP":{"type":"unresolvable","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow20ArithmeticOperatableP","title":"Swallow.ArithmeticOperatable"},"doc://com.swallow.documentation.Compute/7Swallow21SubtractionOperatableP":{"type":"unresolvable","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow21SubtractionOperatableP","title":"Swallow.SubtractionOperatable"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int16/+=(_:_:)-91rzm":{"url":"\/documentation\/compute\/int16\/+=(_:_:)-91rzm","title":"+=(_:_:)","kind":"symbol","role":"symbol","type":"topic","abstract":[{"type":"text","text":"Adds two values and stores the result in the left-hand-side variable."}],"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"+="},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Int16","preciseIdentifier":"s:s5Int16V"},{"kind":"text","text":", "},{"text":"Int16","kind":"typeIdentifier","preciseIdentifier":"s:s5Int16V"},{"text":")","kind":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/+=(_:_:)-91rzm"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int16/SignedNumeric-Implementations":{"role":"collectionGroup","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/SignedNumeric-Implementations","url":"\/documentation\/compute\/int16\/signednumeric-implementations","title":"SignedNumeric Implementations","kind":"article","type":"topic","abstract":[]},"doc://com.swallow.documentation.Compute/documentation/Compute/Int16/addingReportingOverflow(_:)":{"abstract":[{"type":"text","text":"Returns the sum of this value and the given value, along with a Boolean"},{"type":"text","text":" "},{"text":"value indicating whether overflow occurred in the operation.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"addingReportingOverflow"},{"kind":"text","text":"("},{"text":"Int16","kind":"typeIdentifier","preciseIdentifier":"s:s5Int16V"},{"kind":"text","text":") -> (partialValue"},{"kind":"text","text":": "},{"text":"Int16","kind":"typeIdentifier","preciseIdentifier":"s:s5Int16V"},{"kind":"text","text":", overflow"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"kind":"text","text":")"}],"url":"\/documentation\/compute\/int16\/addingreportingoverflow(_:)","title":"addingReportingOverflow(_:)","role":"symbol","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/addingReportingOverflow(_:)","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int16/Magnitude-swift.typealias":{"title":"Int16.Magnitude","role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Magnitude"}],"type":"topic","abstract":[{"type":"text","text":"A type that can represent the absolute value of any possible value of"},{"text":" ","type":"text"},{"type":"text","text":"this type."}],"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"text":"Magnitude","kind":"identifier"}],"url":"\/documentation\/compute\/int16\/magnitude-swift.typealias","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/Magnitude-swift.typealias"},"doc://com.swallow.documentation.Compute/7Swallow26ShouldNotBeDecodedFromBoolP":{"type":"unresolvable","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow26ShouldNotBeDecodedFromBoolP","title":"Swallow.ShouldNotBeDecodedFromBool"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int16/&__=(_:_:)-p5ty":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/&__=(_:_:)-p5ty","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Calculates the result of shifting a value’s binary representation the"},{"type":"text","text":" "},{"type":"text","text":"specified number of digits to the right, masking the shift amount to the"},{"text":" ","type":"text"},{"type":"text","text":"type’s bit width, and stores the result in the left-hand-side variable."}],"role":"symbol","url":"\/documentation\/compute\/int16\/&__=(_:_:)-p5ty","title":"&>>=(_:_:)","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"&>>=","kind":"identifier"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Int16","kind":"typeIdentifier","preciseIdentifier":"s:s5Int16V"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:s5Int16V","kind":"typeIdentifier","text":"Int16"},{"kind":"text","text":")"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/SignedInteger":{"abstract":[{"type":"text","text":"An integer type that can represent both positive and negative values."}],"kind":"symbol","url":"\/documentation\/compute\/signedinteger","navigatorTitle":[{"kind":"identifier","text":"SignedInteger"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SignedInteger","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"SignedInteger","kind":"identifier"}],"title":"SignedInteger"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int16/Comparable-Implementations":{"kind":"article","type":"topic","title":"Comparable Implementations","role":"collectionGroup","url":"\/documentation\/compute\/int16\/comparable-implementations","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/Comparable-Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int16/words-swift.property":{"role":"symbol","title":"words","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"words","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s5Int16V","text":"Int16","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Words","preciseIdentifier":"s:s5Int16V5WordsV"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/words-swift.property","url":"\/documentation\/compute\/int16\/words-swift.property","type":"topic","kind":"symbol","abstract":[{"text":"A collection containing the words of this value’s binary","type":"text"},{"text":" ","type":"text"},{"text":"representation, in order from the least significant to most significant.","type":"text"}]},"doc://com.swallow.documentation.Compute/7Swallow18ByteOrderSwappableP":{"type":"unresolvable","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow18ByteOrderSwappableP","title":"Swallow.ByteOrderSwappable"},"doc://com.swallow.documentation.Compute/7Swallow18AdditionOperatableP":{"type":"unresolvable","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow18AdditionOperatableP","title":"Swallow.AdditionOperatable"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int16/AdditiveArithmetic-Implementations":{"type":"topic","kind":"article","title":"AdditiveArithmetic Implementations","url":"\/documentation\/compute\/int16\/additivearithmetic-implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/AdditiveArithmetic-Implementations","role":"collectionGroup","abstract":[]},"doc://com.swallow.documentation.Compute/7Swallow13DataDecodableP":{"type":"unresolvable","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow13DataDecodableP","title":"Swallow.DataDecodable"},"doc://com.swallow.documentation.Compute/documentation/Compute/BinaryInteger":{"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"BinaryInteger"}],"navigatorTitle":[{"kind":"identifier","text":"BinaryInteger"}],"url":"\/documentation\/compute\/binaryinteger","type":"topic","abstract":[{"type":"text","text":"An integer type with a binary representation."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryInteger","title":"BinaryInteger","kind":"symbol","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int16/_=(_:_:)-15qjk":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/_=(_:_:)-15qjk","url":"\/documentation\/compute\/int16\/_=(_:_:)-15qjk","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"\/=","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"preciseIdentifier":"s:s5Int16V","text":"Int16","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:s5Int16V","text":"Int16"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Divides the first value by the second and stores the quotient in the"},{"text":" ","type":"text"},{"type":"text","text":"left-hand-side variable."}],"type":"topic","role":"symbol","title":"\/=(_:_:)","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int16/SignedInteger-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/SignedInteger-Implementations","kind":"article","role":"collectionGroup","abstract":[],"type":"topic","title":"SignedInteger Implementations","url":"\/documentation\/compute\/int16\/signedinteger-implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int16/&__=(_:_:)-99pwo":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/&__=(_:_:)-99pwo","title":"&<<=(_:_:)","kind":"symbol","type":"topic","url":"\/documentation\/compute\/int16\/&__=(_:_:)-99pwo","role":"symbol","abstract":[{"text":"Returns the result of shifting a value’s binary representation the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"specified number of digits to the left, masking the shift amount to the"},{"text":" ","type":"text"},{"text":"type’s bit width, and stores the result in the left-hand-side variable.","type":"text"}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"&<<="},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"text":"Int16","kind":"typeIdentifier","preciseIdentifier":"s:s5Int16V"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:s5Int16V","text":"Int16"},{"text":")","kind":"text"}]},"doc://com.swallow.documentation.Compute/7Swallow16SignedOrUnsignedP":{"type":"unresolvable","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow16SignedOrUnsignedP","title":"Swallow.SignedOrUnsigned"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int16/dividedReportingOverflow(by:)":{"title":"dividedReportingOverflow(by:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"dividedReportingOverflow","kind":"identifier"},{"kind":"text","text":"("},{"text":"by","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int16","kind":"typeIdentifier","preciseIdentifier":"s:s5Int16V"},{"text":") -> (partialValue","kind":"text"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int16","preciseIdentifier":"s:s5Int16V"},{"text":", overflow","kind":"text"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"text":")","kind":"text"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/dividedReportingOverflow(by:)","kind":"symbol","abstract":[{"type":"text","text":"Returns the quotient obtained by dividing this value by the given value,"},{"text":" ","type":"text"},{"type":"text","text":"along with a Boolean value indicating whether overflow occurred in the"},{"text":" ","type":"text"},{"type":"text","text":"operation."}],"role":"symbol","url":"\/documentation\/compute\/int16\/dividedreportingoverflow(by:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/FixedWidthInteger":{"title":"FixedWidthInteger","kind":"symbol","navigatorTitle":[{"text":"FixedWidthInteger","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FixedWidthInteger","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"FixedWidthInteger","kind":"identifier"}],"abstract":[{"text":"An integer type that uses a fixed size for every instance.","type":"text"}],"type":"topic","url":"\/documentation\/compute\/fixedwidthinteger"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int16/CustomReflectable-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/CustomReflectable-Implementations","role":"collectionGroup","url":"\/documentation\/compute\/int16\/customreflectable-implementations","title":"CustomReflectable Implementations","kind":"article","abstract":[],"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/Copyable":{"title":"Copyable","abstract":[{"type":"text","text":"A type whose values can be implicitly or explicitly copied."}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"Copyable","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Copyable","url":"\/documentation\/compute\/copyable","navigatorTitle":[{"text":"Copyable","kind":"identifier"}],"kind":"symbol","role":"symbol","type":"topic"},"doc://com.swallow.documentation.Compute/7Swallow28MutableSubtractionOperatableP":{"type":"unresolvable","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow28MutableSubtractionOperatableP","title":"Swallow.MutableSubtractionOperatable"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int16/Hashable-Implementations":{"url":"\/documentation\/compute\/int16\/hashable-implementations","role":"collectionGroup","title":"Hashable Implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/Hashable-Implementations","abstract":[],"type":"topic","kind":"article"},"doc://com.swallow.documentation.Compute/7Swallow20ByteTupleConvertibleP":{"type":"unresolvable","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow20ByteTupleConvertibleP","title":"Swallow.ByteTupleConvertible"},"doc://com.swallow.documentation.Compute/documentation/Compute/Sendable":{"kind":"symbol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"Sendable","kind":"identifier"}],"title":"Sendable","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sendable","abstract":[],"url":"\/documentation\/compute\/sendable","role":"symbol","navigatorTitle":[{"text":"Sendable","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Int16/multipliedFullWidth(by:)":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"multipliedFullWidth","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"by"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s5Int16V","text":"Int16"},{"kind":"text","text":") -> (high"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s5Int16V","text":"Int16","kind":"typeIdentifier"},{"text":", low","kind":"text"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s5Int16V","text":"Int16","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:s5Int16V9Magnitudea","kind":"typeIdentifier","text":"Magnitude"},{"text":")","kind":"text"}],"abstract":[{"text":"Returns a tuple containing the high and low parts of the result of","type":"text"},{"type":"text","text":" "},{"type":"text","text":"multiplying this value by the given value."}],"type":"topic","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/multipliedFullWidth(by:)","title":"multipliedFullWidth(by:)","url":"\/documentation\/compute\/int16\/multipliedfullwidth(by:)","kind":"symbol"},"doc://com.swallow.documentation.Compute/7Swallow11RandomnableP":{"type":"unresolvable","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow11RandomnableP","title":"Swallow.Randomnable"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/10Accelerate10BNNSScalarP":{"type":"unresolvable","identifier":"doc:\/\/com.swallow.documentation.Compute\/10Accelerate10BNNSScalarP","title":"Accelerate.BNNSScalar"},"doc://com.swallow.documentation.Compute/documentation/Compute/CVarArg":{"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CVarArg"}],"abstract":[{"text":"A type whose instances can be encoded, and appropriately passed, as","type":"text"},{"text":" ","type":"text"},{"text":"elements of a C ","type":"text"},{"type":"codeVoice","code":"va_list"},{"text":".","type":"text"}],"navigatorTitle":[{"text":"CVarArg","kind":"identifier"}],"title":"CVarArg","type":"topic","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CVarArg","url":"\/documentation\/compute\/cvararg"},"doc://com.swallow.documentation.Compute/7Swallow9InitiableP":{"type":"unresolvable","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow9InitiableP","title":"Swallow.Initiable"},"doc://com.swallow.documentation.Compute/documentation/Compute/Equatable":{"abstract":[{"text":"A type that can be compared for value equality.","type":"text"}],"type":"topic","title":"Equatable","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Equatable"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Equatable","role":"symbol","url":"\/documentation\/compute\/equatable","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Equatable","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Int16/_=(_:_:)-1zcaj":{"url":"\/documentation\/compute\/int16\/_=(_:_:)-1zcaj","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/_=(_:_:)-1zcaj","role":"symbol","type":"topic","kind":"symbol","title":"%=(_:_:)","abstract":[{"type":"text","text":"Divides the first value by the second and stores the remainder in the"},{"type":"text","text":" "},{"text":"left-hand-side variable.","type":"text"}],"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"%=","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:s5Int16V","text":"Int16"},{"text":", ","kind":"text"},{"text":"Int16","preciseIdentifier":"s:s5Int16V","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Int16/init(exactly:)-3vet0":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/init(exactly:)-3vet0","role":"symbol","kind":"symbol","url":"\/documentation\/compute\/int16\/init(exactly:)-3vet0","type":"topic","abstract":[{"type":"text","text":"Creates an integer from the given floating-point value, if it can be"},{"type":"text","text":" "},{"type":"text","text":"represented exactly."}],"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"?("},{"text":"exactly","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":")"}],"title":"init(exactly:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int16/*=(_:_:)":{"abstract":[{"text":"Multiplies two values and stores the result in the left-hand-side","type":"text"},{"type":"text","text":" "},{"text":"variable.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/*=(_:_:)","title":"*=(_:_:)","url":"\/documentation\/compute\/int16\/*=(_:_:)","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"*="},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s5Int16V","text":"Int16"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:s5Int16V","text":"Int16"},{"kind":"text","text":")"}],"type":"topic","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Comparable":{"url":"\/documentation\/compute\/comparable","type":"topic","kind":"symbol","role":"symbol","abstract":[{"text":"A type that can be compared using the relational operators ","type":"text"},{"code":"<","type":"codeVoice"},{"text":", ","type":"text"},{"code":"<=","type":"codeVoice"},{"text":", ","type":"text"},{"type":"codeVoice","code":">="},{"text":",","type":"text"},{"type":"text","text":" "},{"type":"text","text":"and "},{"type":"codeVoice","code":">"},{"text":".","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Comparable"}],"title":"Comparable","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Comparable","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"Comparable","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/AdditiveArithmetic":{"type":"topic","title":"AdditiveArithmetic","abstract":[{"text":"A type with values that support addition and subtraction.","type":"text"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AdditiveArithmetic"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AdditiveArithmetic","url":"\/documentation\/compute\/additivearithmetic","role":"symbol","navigatorTitle":[{"text":"AdditiveArithmetic","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/7Swallow27MutableArithmeticOperatableP":{"type":"unresolvable","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow27MutableArithmeticOperatableP","title":"Swallow.MutableArithmeticOperatable"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int16/==(_:_:)-78bjx":{"url":"\/documentation\/compute\/int16\/==(_:_:)-78bjx","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"==","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:s5Int16V","text":"Int16","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Int16","kind":"typeIdentifier","preciseIdentifier":"s:s5Int16V"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/==(_:_:)-78bjx","title":"==(_:_:)","role":"symbol","abstract":[{"text":"Returns a Boolean value indicating whether two values are equal.","type":"text"}],"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int16/remainderReportingOverflow(dividingBy:)":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/remainderReportingOverflow(dividingBy:)","role":"symbol","type":"topic","abstract":[{"text":"Returns the remainder after dividing this value by the given value, along","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"with a Boolean value indicating whether overflow occurred during division."}],"kind":"symbol","title":"remainderReportingOverflow(dividingBy:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"remainderReportingOverflow"},{"text":"(","kind":"text"},{"text":"dividingBy","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int16","preciseIdentifier":"s:s5Int16V"},{"kind":"text","text":") -> (partialValue"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s5Int16V","text":"Int16","kind":"typeIdentifier"},{"text":", overflow","kind":"text"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":")","kind":"text"}],"url":"\/documentation\/compute\/int16\/remainderreportingoverflow(dividingby:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int16/init(exactly:)-5zk1":{"type":"topic","fragments":[{"kind":"identifier","text":"init"},{"text":"?(","kind":"text"},{"text":"exactly","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Float16","kind":"typeIdentifier","preciseIdentifier":"s:s7Float16V"},{"text":")","kind":"text"}],"url":"\/documentation\/compute\/int16\/init(exactly:)-5zk1","title":"init(exactly:)","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/init(exactly:)-5zk1","abstract":[{"type":"text","text":"Creates an integer from the given floating-point value, if it can be"},{"type":"text","text":" "},{"text":"represented exactly.","type":"text"}],"role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int16/magnitude-swift.property":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/magnitude-swift.property","role":"symbol","title":"magnitude","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"magnitude","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"UInt16","preciseIdentifier":"s:s6UInt16V"}],"kind":"symbol","type":"topic","url":"\/documentation\/compute\/int16\/magnitude-swift.property","abstract":[{"type":"text","text":"The magnitude of this value."}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Encodable":{"url":"\/documentation\/compute\/encodable","navigatorTitle":[{"text":"Encodable","kind":"identifier"}],"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"Encodable","kind":"identifier"}],"abstract":[{"text":"A type that can encode itself to an external representation.","type":"text"}],"type":"topic","title":"Encodable","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Encodable"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int16/bitWidth-swift.type.property":{"kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"bitWidth","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"}],"type":"topic","url":"\/documentation\/compute\/int16\/bitwidth-swift.type.property","role":"symbol","abstract":[{"text":"The number of bits used for the underlying binary representation of","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"values of this type."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/bitWidth-swift.type.property","title":"bitWidth"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int16/Encodable-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/Encodable-Implementations","role":"collectionGroup","type":"topic","kind":"article","url":"\/documentation\/compute\/int16\/encodable-implementations","title":"Encodable Implementations","abstract":[]},"doc://com.swallow.documentation.Compute/documentation/Compute/Int16/init(_:)-6paha":{"kind":"symbol","url":"\/documentation\/compute\/int16\/init(_:)-6paha","role":"symbol","type":"topic","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/init(_:)-6paha","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:Sd","text":"Double","kind":"typeIdentifier"},{"kind":"text","text":")"}],"title":"init(_:)"},"doc://com.swallow.documentation.Compute/7Swallow6SignedP":{"type":"unresolvable","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow6SignedP","title":"Swallow.Signed"},"doc://com.swallow.documentation.Compute/7Swallow17NumberConvertibleP":{"type":"unresolvable","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow17NumberConvertibleP","title":"Swallow.NumberConvertible"},"doc://com.swallow.documentation.Compute/7Swallow22SignedIntegerInitiableP":{"type":"unresolvable","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow22SignedIntegerInitiableP","title":"Swallow.SignedIntegerInitiable"},"doc://com.swallow.documentation.Compute/documentation/Compute/Numeric":{"abstract":[{"type":"text","text":"A type with values that support multiplication."}],"kind":"symbol","url":"\/documentation\/compute\/numeric","navigatorTitle":[{"text":"Numeric","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Numeric","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Numeric"}],"title":"Numeric"},"doc://com.swallow.documentation.Compute/7Swallow7TrivialP":{"type":"unresolvable","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow7TrivialP","title":"Swallow.Trivial"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int16/-=(_:_:)-1rfmf":{"url":"\/documentation\/compute\/int16\/-=(_:_:)-1rfmf","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"-=","kind":"identifier"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:s5Int16V","kind":"typeIdentifier","text":"Int16"},{"text":", ","kind":"text"},{"text":"Int16","kind":"typeIdentifier","preciseIdentifier":"s:s5Int16V"},{"kind":"text","text":")"}],"title":"-=(_:_:)","abstract":[{"type":"text","text":"Subtracts the second value from the first and stores the difference in the"},{"type":"text","text":" "},{"type":"text","text":"left-hand-side variable."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/-=(_:_:)-1rfmf","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int16/subtractingReportingOverflow(_:)":{"kind":"symbol","title":"subtractingReportingOverflow(_:)","url":"\/documentation\/compute\/int16\/subtractingreportingoverflow(_:)","type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/subtractingReportingOverflow(_:)","abstract":[{"type":"text","text":"Returns the difference obtained by subtracting the given value from this"},{"type":"text","text":" "},{"text":"value, along with a Boolean value indicating whether overflow occurred in","type":"text"},{"type":"text","text":" "},{"text":"the operation.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"subtractingReportingOverflow"},{"text":"(","kind":"text"},{"text":"Int16","preciseIdentifier":"s:s5Int16V","kind":"typeIdentifier"},{"kind":"text","text":") -> (partialValue"},{"kind":"text","text":": "},{"text":"Int16","kind":"typeIdentifier","preciseIdentifier":"s:s5Int16V"},{"kind":"text","text":", overflow"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":")","kind":"text"}]},"doc://com.swallow.documentation.Compute/7Swallow25MutableAdditionOperatableP":{"type":"unresolvable","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow25MutableAdditionOperatableP","title":"Swallow.MutableAdditionOperatable"},"doc://com.swallow.documentation.Compute/documentation/Compute/BitwiseCopyable":{"title":"BitwiseCopyable","abstract":[],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BitwiseCopyable","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BitwiseCopyable","url":"\/documentation\/compute\/bitwisecopyable","navigatorTitle":[{"kind":"identifier","text":"BitwiseCopyable"}],"kind":"symbol","role":"symbol","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int16/nonzeroBitCount":{"role":"symbol","abstract":[{"type":"text","text":"The number of bits equal to 1 in this value’s binary representation."}],"title":"nonzeroBitCount","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"nonzeroBitCount"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/nonzeroBitCount","url":"\/documentation\/compute\/int16\/nonzerobitcount"},"doc://com.swallow.documentation.Compute/7Swallow21AnyCodableConvertibleP":{"type":"unresolvable","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow21AnyCodableConvertibleP","title":"Swallow.AnyCodableConvertible"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int16/_CustomPlaygroundQuickLookable-Implementations":{"kind":"article","abstract":[],"type":"topic","role":"collectionGroup","title":"_CustomPlaygroundQuickLookable Implementations","url":"\/documentation\/compute\/int16\/_customplaygroundquicklookable-implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/_CustomPlaygroundQuickLookable-Implementations"},"doc://com.swallow.documentation.Compute/7Swallow24MultiplicationOperatableP":{"type":"unresolvable","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow24MultiplicationOperatableP","title":"Swallow.MultiplicationOperatable"},"doc://com.swallow.documentation.Compute/7Swallow25MutableDivisionOperatableP":{"type":"unresolvable","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow25MutableDivisionOperatableP","title":"Swallow.MutableDivisionOperatable"},"doc://com.swallow.documentation.Compute/7Swallow16BooleanInitiableP":{"type":"unresolvable","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow16BooleanInitiableP","title":"Swallow.BooleanInitiable"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int16/dividingFullWidth(_:)":{"abstract":[{"text":"Returns a tuple containing the quotient and remainder of dividing the","type":"text"},{"type":"text","text":" "},{"text":"given value by this value.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"dividingFullWidth"},{"text":"((high","kind":"text"},{"text":": ","kind":"text"},{"text":"Int16","preciseIdentifier":"s:s5Int16V","kind":"typeIdentifier"},{"kind":"text","text":", low"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s5Int16V","kind":"typeIdentifier","text":"Int16"},{"text":".","kind":"text"},{"text":"Magnitude","kind":"typeIdentifier","preciseIdentifier":"s:s5Int16V9Magnitudea"},{"kind":"text","text":")) -> (quotient"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Int16","preciseIdentifier":"s:s5Int16V"},{"text":", remainder","kind":"text"},{"kind":"text","text":": "},{"text":"Int16","kind":"typeIdentifier","preciseIdentifier":"s:s5Int16V"},{"text":")","kind":"text"}],"role":"symbol","url":"\/documentation\/compute\/int16\/dividingfullwidth(_:)","type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/dividingFullWidth(_:)","title":"dividingFullWidth(_:)","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int16/init(bitPattern:)":{"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/init(bitPattern:)","kind":"symbol","abstract":[{"text":"Creates a new instance with the same memory representation as the given","type":"text"},{"text":" ","type":"text"},{"text":"value.","type":"text"}],"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"text":"bitPattern","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt16","kind":"typeIdentifier","preciseIdentifier":"s:s6UInt16V"},{"kind":"text","text":")"}],"url":"\/documentation\/compute\/int16\/init(bitpattern:)","role":"symbol","title":"init(bitPattern:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int16/_(_:_:)-47ytd":{"abstract":[{"text":"Returns a Boolean value indicating whether the value of the first","type":"text"},{"type":"text","text":" "},{"type":"text","text":"argument is less than that of the second argument."}],"role":"symbol","url":"\/documentation\/compute\/int16\/_(_:_:)-47ytd","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/_(_:_:)-47ytd","type":"topic","title":"<(_:_:)","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"<","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s5Int16V","text":"Int16"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:s5Int16V","text":"Int16"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/CustomStringConvertible":{"url":"\/documentation\/compute\/customstringconvertible","navigatorTitle":[{"kind":"identifier","text":"CustomStringConvertible"}],"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CustomStringConvertible","kind":"identifier"}],"abstract":[{"text":"A type with a customized textual representation.","type":"text"}],"type":"topic","title":"CustomStringConvertible","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CustomStringConvertible"},"doc://com.swallow.documentation.Compute/7Swallow18BoundedRandomnableP":{"type":"unresolvable","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow18BoundedRandomnableP","title":"Swallow.BoundedRandomnable"},"doc://com.swallow.documentation.Compute/7Swallow7BoundedP":{"type":"unresolvable","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow7BoundedP","title":"Swallow.Bounded"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int16/trailingZeroBitCount":{"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/trailingZeroBitCount","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"trailingZeroBitCount"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"}],"type":"topic","kind":"symbol","url":"\/documentation\/compute\/int16\/trailingzerobitcount","abstract":[{"text":"The number of trailing zeros in this value’s binary representation.","type":"text"}],"title":"trailingZeroBitCount"},"doc://com.swallow.documentation.Compute/documentation/Compute/ExpressibleByIntegerLiteral":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ExpressibleByIntegerLiteral","url":"\/documentation\/compute\/expressiblebyintegerliteral","title":"ExpressibleByIntegerLiteral","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ExpressibleByIntegerLiteral","kind":"identifier"}],"navigatorTitle":[{"text":"ExpressibleByIntegerLiteral","kind":"identifier"}],"abstract":[{"text":"A type that can be initialized with an integer literal.","type":"text"}],"kind":"symbol","role":"symbol"},"doc://com.swallow.documentation.Compute/7Swallow13DataEncodableP":{"type":"unresolvable","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow13DataEncodableP","title":"Swallow.DataEncodable"}}}