{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/DefaultIndices\/reduce(_:_:)-2zhy"},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"reduce"},{"kind":"text","text":"<"},{"text":"Result","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"text":"initialResult","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"nextPartialResult","kind":"internalParam"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Result"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","text":"Element","preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Result"}],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"name":"initialResult","content":[{"inlineContent":[{"text":"The value to use as the initial accumulating value.","type":"text"},{"text":" ","type":"text"},{"code":"initialResult","type":"codeVoice"},{"type":"text","text":" is passed to "},{"code":"nextPartialResult","type":"codeVoice"},{"text":" the first time the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"closure is executed."}],"type":"paragraph"}]},{"name":"nextPartialResult","content":[{"type":"paragraph","inlineContent":[{"text":"A closure that combines an accumulating value and","type":"text"},{"type":"text","text":" "},{"text":"an element of the sequence into a new accumulating value, to be used","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"in the next call of the "},{"code":"nextPartialResult","type":"codeVoice"},{"type":"text","text":" closure or returned to"},{"text":" ","type":"text"},{"text":"the caller.","type":"text"}]}]}],"kind":"parameters"},{"content":[{"anchor":"return-value","text":"Return Value","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"The final accumulated value. If the sequence has no elements,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the result is "},{"type":"codeVoice","code":"initialResult"},{"type":"text","text":"."}]}],"kind":"content"},{"content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"Use the ","type":"text"},{"type":"codeVoice","code":"reduce(_:_:)"},{"type":"text","text":" method to produce a single value from the elements"},{"text":" ","type":"text"},{"text":"of an entire sequence. For example, you can use this method on an array","type":"text"},{"type":"text","text":" "},{"type":"text","text":"of numbers to find their sum or product."}]},{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"type":"codeVoice","code":"nextPartialResult"},{"text":" closure is called sequentially with an","type":"text"},{"type":"text","text":" "},{"type":"text","text":"accumulating value initialized to "},{"code":"initialResult","type":"codeVoice"},{"text":" and each element of","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the sequence. This example shows how to find the sum of an array of"},{"type":"text","text":" "},{"type":"text","text":"numbers."}]},{"type":"codeListing","code":["let numbers = [1, 2, 3, 4]","let numberSum = numbers.reduce(0, { x, y in","    x + y","})","\/\/ numberSum == 10"],"syntax":null},{"inlineContent":[{"text":"When ","type":"text"},{"type":"codeVoice","code":"numbers.reduce(_:_:)"},{"type":"text","text":" is called, the following steps occur:"}],"type":"paragraph"},{"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"code":"nextPartialResult","type":"codeVoice"},{"type":"text","text":" closure is called with "},{"code":"initialResult","type":"codeVoice"},{"type":"text","text":"—"},{"code":"0","type":"codeVoice"},{"type":"text","text":" "},{"text":"in this case—and the first element of ","type":"text"},{"code":"numbers","type":"codeVoice"},{"text":", returning the sum:","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"1"},{"type":"text","text":"."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The closure is called again repeatedly with the previous call’s return"},{"type":"text","text":" "},{"type":"text","text":"value and each element of the sequence."}]}]},{"content":[{"inlineContent":[{"text":"When the sequence is exhausted, the last value returned from the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"closure is returned to the caller."}],"type":"paragraph"}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If the sequence has no elements, "},{"type":"codeVoice","code":"nextPartialResult"},{"text":" is never executed","type":"text"},{"type":"text","text":" "},{"text":"and ","type":"text"},{"code":"initialResult","type":"codeVoice"},{"type":"text","text":" is the result of the call to "},{"code":"reduce(_:_:)","type":"codeVoice"},{"type":"text","text":"."}]},{"content":[{"inlineContent":[{"type":"text","text":"O("},{"type":"emphasis","inlineContent":[{"type":"text","text":"n"}]},{"text":"), where ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"n"}]},{"type":"text","text":" is the length of the sequence."}],"type":"paragraph"}],"name":"Complexity","style":"note","type":"aside"}],"kind":"content"}],"kind":"symbol","sections":[],"metadata":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"reduce","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Result"},{"kind":"text","text":">("},{"text":"Result","kind":"typeIdentifier"},{"text":", (","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:ST7ElementQa"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Result"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Result","kind":"typeIdentifier"}],"modules":[{"name":"Compute","relatedModules":["Swift"]}],"title":"reduce(_:_:)","roleHeading":"Instance Method","role":"symbol","extendedModule":"Swift","symbolKind":"method","externalID":"s:STsE6reduceyqd__qd___qd__qd___7ElementQztKXEtKlF::SYNTHESIZED::s:SI"},"schemaVersion":{"patch":0,"minor":3,"major":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/defaultindices\/reduce(_:_:)-2zhy"]}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/DefaultIndices","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/DefaultIndices\/Sequence-Implementations"]]},"abstract":[{"text":"Returns the result of combining the elements of the sequence using the","type":"text"},{"text":" ","type":"text"},{"text":"given closure.","type":"text"}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/DefaultIndices/reduce(_:_:)-2zhy":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"reduce","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Result","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"Result"},{"text":", (","kind":"text"},{"kind":"typeIdentifier","text":"Result"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Result","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"rethrows","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Result","kind":"typeIdentifier"}],"url":"\/documentation\/compute\/defaultindices\/reduce(_:_:)-2zhy","type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/DefaultIndices\/reduce(_:_:)-2zhy","role":"symbol","title":"reduce(_:_:)","abstract":[{"text":"Returns the result of combining the elements of the sequence using the","type":"text"},{"type":"text","text":" "},{"text":"given closure.","type":"text"}],"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/DefaultIndices/Sequence-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/DefaultIndices\/Sequence-Implementations","url":"\/documentation\/compute\/defaultindices\/sequence-implementations","title":"Sequence Implementations","kind":"article","type":"topic","abstract":[],"role":"collectionGroup"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/DefaultIndices":{"type":"topic","abstract":[{"type":"text","text":"A collection of indices for an arbitrary collection"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/DefaultIndices","navigatorTitle":[{"text":"DefaultIndices","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/compute\/defaultindices","role":"symbol","title":"DefaultIndices","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DefaultIndices","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence/Element":{"type":"topic","required":true,"abstract":[{"type":"text","text":"A type representing the sequence’s elements."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"symbol","url":"\/documentation\/compute\/sequence\/element","role":"symbol","title":"Element","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"identifier"}]}}}