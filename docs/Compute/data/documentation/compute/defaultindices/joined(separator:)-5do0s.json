{"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/DefaultIndices","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/DefaultIndices\/BidirectionalCollection-Implementations"]]},"kind":"symbol","identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/DefaultIndices\/joined(separator:)-5do0s","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"joined"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"separator"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":" = \"\") -> "},{"text":"String","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String","preciseIdentifier":"s:SS"}],"platforms":["macOS"],"languages":["swift"]}]},{"parameters":[{"name":"separator","content":[{"inlineContent":[{"type":"text","text":"A string to insert between each of the elements"},{"type":"text","text":" "},{"text":"in this sequence. The default separator is an empty string.","type":"text"}],"type":"paragraph"}]}],"kind":"parameters"},{"content":[{"type":"heading","level":2,"anchor":"return-value","text":"Return Value"},{"type":"paragraph","inlineContent":[{"text":"A single, concatenated string.","type":"text"}]}],"kind":"content"},{"content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"The following example shows how an array of strings can be joined to a","type":"text"},{"type":"text","text":" "},{"text":"single, comma-separated string:","type":"text"}]},{"type":"codeListing","syntax":null,"code":["let cast = [\"Vivien\", \"Marlon\", \"Kim\", \"Karl\"]","let list = cast.joined(separator: \", \")","print(list)","\/\/ Prints \"Vivien, Marlon, Kim, Karl\""]}],"kind":"content"}],"metadata":{"extendedModule":"Swift","modules":[{"name":"Compute","relatedModules":["Swift"]}],"symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"joined"},{"kind":"text","text":"("},{"kind":"externalParam","text":"separator"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":") -> "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Element","type":"codeVoice"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"String"},{"type":"text","text":"."}]},"roleHeading":"Instance Method","externalID":"s:SKsSS7ElementRtzrlE6joined9separatorS2S_tF::SYNTHESIZED::s:SI","title":"joined(separator:)","role":"symbol"},"abstract":[{"type":"text","text":"Returns a new string by concatenating the elements of the sequence,"},{"text":" ","type":"text"},{"type":"text","text":"adding the given separator between each element."}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/defaultindices\/joined(separator:)-5do0s"]}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/DefaultIndices/joined(separator:)-5do0s":{"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/DefaultIndices\/joined(separator:)-5do0s","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"joined","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"separator"},{"kind":"text","text":": "},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"}],"role":"symbol","conformance":{"constraints":[{"type":"codeVoice","code":"Element"},{"type":"text","text":" is "},{"code":"String","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"url":"\/documentation\/compute\/defaultindices\/joined(separator:)-5do0s","abstract":[{"type":"text","text":"Returns a new string by concatenating the elements of the sequence,"},{"type":"text","text":" "},{"type":"text","text":"adding the given separator between each element."}],"title":"joined(separator:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/DefaultIndices":{"type":"topic","abstract":[{"type":"text","text":"A collection of indices for an arbitrary collection"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/DefaultIndices","navigatorTitle":[{"text":"DefaultIndices","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/compute\/defaultindices","role":"symbol","title":"DefaultIndices","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DefaultIndices","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/DefaultIndices/BidirectionalCollection-Implementations":{"type":"topic","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/DefaultIndices\/BidirectionalCollection-Implementations","kind":"article","url":"\/documentation\/compute\/defaultindices\/bidirectionalcollection-implementations","role":"collectionGroup","title":"BidirectionalCollection Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/String":{"type":"topic","navigatorTitle":[{"kind":"identifier","text":"String"}],"title":"String","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"String","kind":"identifier"}],"abstract":[{"type":"text","text":"A Unicode string value that is a collection of characters."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String","kind":"symbol","role":"symbol","url":"\/documentation\/compute\/string"}}}