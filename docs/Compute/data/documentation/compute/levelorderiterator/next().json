{"abstract":[{"type":"text","text":"Advances to the next element and returns it, or "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" if no next element"},{"text":" ","type":"text"},{"text":"exists.","type":"text"}],"kind":"symbol","variants":[{"paths":["\/documentation\/compute\/levelorderiterator\/next()"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"mutating","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"next","kind":"identifier"},{"kind":"text","text":"() -> "},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LevelOrderIterator\/Element","kind":"typeIdentifier","preciseIdentifier":"s:7Compute18LevelOrderIteratorV7Elementa","text":"Element"},{"kind":"text","text":"?"}]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","anchor":"return-value","text":"Return Value","level":2},{"inlineContent":[{"text":"The next element in the underlying sequence, if a next element","type":"text"},{"type":"text","text":" "},{"type":"text","text":"exists; otherwise, "},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}]},{"content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Repeatedly calling this method returns, in order, all the elements of the"},{"text":" ","type":"text"},{"text":"underlying sequence. As soon as the sequence has run out of elements, all","type":"text"},{"type":"text","text":" "},{"type":"text","text":"subsequent calls return "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."}]},{"inlineContent":[{"type":"text","text":"You must not call this method if any other copy of this iterator has been"},{"type":"text","text":" "},{"type":"text","text":"advanced with a call to its "},{"code":"next()","type":"codeVoice"},{"text":" method.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The following example shows how an iterator can be used explicitly to"},{"text":" ","type":"text"},{"type":"text","text":"emulate a "},{"type":"codeVoice","code":"for"},{"type":"text","text":"-"},{"type":"codeVoice","code":"in"},{"type":"text","text":" loop. First, retrieve a sequence’s iterator, and"},{"text":" ","type":"text"},{"text":"then call the iterator’s ","type":"text"},{"type":"codeVoice","code":"next()"},{"text":" method until it returns ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"}]},{"code":["let numbers = [2, 3, 5, 7]","var numbersIterator = numbers.makeIterator()","","while let num = numbersIterator.next() {","    print(num)","}","\/\/ Prints \"2\"","\/\/ Prints \"3\"","\/\/ Prints \"5\"","\/\/ Prints \"7\""],"type":"codeListing","syntax":null}],"kind":"content"}],"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LevelOrderIterator\/next()","interfaceLanguage":"swift"},"metadata":{"roleHeading":"Instance Method","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"next","kind":"identifier"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:7Compute18LevelOrderIteratorV7Elementa"},{"text":"?","kind":"text"}],"externalID":"s:7Compute18LevelOrderIteratorV4nextxSgyF","modules":[{"name":"Compute"}],"role":"symbol","title":"next()"},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LevelOrderIterator"]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/LevelOrderIterator":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LevelOrderIterator","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"LevelOrderIterator"}],"type":"topic","role":"symbol","abstract":[],"title":"LevelOrderIterator","url":"\/documentation\/compute\/levelorderiterator","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LevelOrderIterator","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/LevelOrderIterator/Element":{"role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"text":"Element","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Element"}],"abstract":[{"text":"The type of element traversed by the iterator.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LevelOrderIterator\/Element","title":"LevelOrderIterator.Element","url":"\/documentation\/compute\/levelorderiterator\/element"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/LevelOrderIterator/next()":{"abstract":[{"text":"Advances to the next element and returns it, or ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":" if no next element","type":"text"},{"type":"text","text":" "},{"text":"exists.","type":"text"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LevelOrderIterator\/next()","type":"topic","url":"\/documentation\/compute\/levelorderiterator\/next()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"next","kind":"identifier"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:7Compute18LevelOrderIteratorV7Elementa","kind":"typeIdentifier","text":"Element"},{"text":"?","kind":"text"}],"title":"next()"}}}