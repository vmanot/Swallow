{"metadata":{"roleHeading":"Type Method","role":"symbol","extendedModule":"Swift","externalID":"s:SBss17FixedWidthInteger14RawSignificandRpzrlE6random2inxSnyxG_tFZ::SYNTHESIZED::s:s7Float16V","conformance":{"constraints":[{"type":"codeVoice","code":"RawSignificand"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"FixedWidthInteger"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"modules":[{"name":"Compute","relatedModules":["Swift"]}],"title":"random(in:)","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"random"},{"kind":"text","text":"("},{"text":"in","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sn","kind":"typeIdentifier","text":"Range"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":">) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"symbolKind":"method"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/float16\/random(in:)-4blql"]}],"abstract":[{"text":"Returns a random value within the specified range.","type":"text"}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"random"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"in"},{"text":" ","kind":"text"},{"text":"range","kind":"internalParam"},{"kind":"text","text":": "},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Range","kind":"typeIdentifier","preciseIdentifier":"s:Sn","text":"Range"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":">) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"name":"range","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The range in which to create a random value."},{"type":"text","text":" "},{"type":"codeVoice","code":"range"},{"text":" must be finite and non-empty.","type":"text"}]}]}]},{"content":[{"level":2,"anchor":"return-value","text":"Return Value","type":"heading"},{"inlineContent":[{"type":"text","text":"A random value within the bounds of "},{"type":"codeVoice","code":"range"},{"text":".","type":"text"}],"type":"paragraph"}],"kind":"content"},{"content":[{"anchor":"discussion","level":2,"text":"Discussion","type":"heading"},{"inlineContent":[{"text":"Use this method to generate a floating-point value within a specific","type":"text"},{"type":"text","text":" "},{"text":"range. This example creates three new values in the range","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"10.0 ..< 20.0"},{"type":"text","text":"."}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":["for _ in 1...3 {","    print(Double.random(in: 10.0 ..< 20.0))","}","\/\/ Prints \"18.1900709259179\"","\/\/ Prints \"14.2286325689993\"","\/\/ Prints \"13.1485686260762\""]},{"inlineContent":[{"text":"The ","type":"text"},{"type":"codeVoice","code":"random()"},{"type":"text","text":" static method chooses a random value from a continuous"},{"text":" ","type":"text"},{"type":"text","text":"uniform distribution in "},{"type":"codeVoice","code":"range"},{"text":", and then converts that value to the","type":"text"},{"type":"text","text":" "},{"text":"nearest representable value in this type. Depending on the size and span","type":"text"},{"type":"text","text":" "},{"type":"text","text":"of "},{"type":"codeVoice","code":"range"},{"text":", some concrete values may be represented more frequently than","type":"text"},{"type":"text","text":" "},{"type":"text","text":"others."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"This method is equivalent to calling "},{"code":"random(in:using:)","type":"codeVoice"},{"text":", passing in the","type":"text"},{"type":"text","text":" "},{"text":"systemâ€™s default random generator.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float16\/random(in:)-4blql","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float16","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float16\/BinaryFloatingPoint-Implementations"]]},"sections":[],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Float16/random(in:)-4blql":{"conformance":{"constraints":[{"code":"RawSignificand","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"FixedWidthInteger","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"abstract":[{"text":"Returns a random value within the specified range.","type":"text"}],"url":"\/documentation\/compute\/float16\/random(in:)-4blql","type":"topic","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"random"},{"kind":"text","text":"("},{"kind":"externalParam","text":"in"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Range","preciseIdentifier":"s:Sn"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"text":"Self","kind":"typeIdentifier"}],"title":"random(in:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float16\/random(in:)-4blql","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Float16":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float16","navigatorTitle":[{"kind":"identifier","text":"Float16"}],"role":"symbol","title":"Float16","url":"\/documentation\/compute\/float16","type":"topic","abstract":[{"type":"text","text":"A half-precision (16b), floating-point value type."}],"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Float16"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Float16/BinaryFloatingPoint-Implementations":{"url":"\/documentation\/compute\/float16\/binaryfloatingpoint-implementations","title":"BinaryFloatingPoint Implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float16\/BinaryFloatingPoint-Implementations","kind":"article","type":"topic","abstract":[],"role":"collectionGroup"},"doc://com.swallow.documentation.Compute/documentation/Compute/Range":{"kind":"symbol","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Range","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Range","url":"\/documentation\/compute\/range","abstract":[{"text":"A half-open interval from a lower bound up to, but not including, an upper","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"bound."}],"navigatorTitle":[{"text":"Range","kind":"identifier"}],"title":"Range"}}}