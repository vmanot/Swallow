{"metadata":{"roleHeading":"Instance Method","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"squareRoot","kind":"identifier"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Self"}],"modules":[{"name":"Compute","relatedModules":["Swift"]}],"role":"symbol","externalID":"s:SFsE10squareRootxyF::SYNTHESIZED::s:s7Float16V","extendedModule":"Swift","title":"squareRoot()"},"schemaVersion":{"minor":3,"major":0,"patch":0},"sections":[],"abstract":[{"type":"text","text":"Returns the square root of the value, rounded to a representable value."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/float16\/squareroot()"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"squareRoot","kind":"identifier"},{"kind":"text","text":"() -> "},{"text":"Self","kind":"typeIdentifier"}],"platforms":["macOS"]}]},{"kind":"content","content":[{"text":"Return Value","anchor":"return-value","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"text":"The square root of the value.","type":"text"}]}]},{"content":[{"text":"Discussion","anchor":"discussion","level":2,"type":"heading"},{"inlineContent":[{"text":"The following example declares a function that calculates the length of","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the hypotenuse of a right triangle given its two perpendicular sides."}],"type":"paragraph"},{"code":["func hypotenuse(_ a: Double, _ b: Double) -> Double {","    return (a * a + b * b).squareRoot()","}","","let (dx, dy) = (3.0, 4.0)","let distance = hypotenuse(dx, dy)","\/\/ distance == 5.0"],"type":"codeListing","syntax":null}],"kind":"content"}],"kind":"symbol","identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float16\/squareRoot()","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float16","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float16\/FloatingPoint-Implementations"]]},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Float16":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float16","navigatorTitle":[{"kind":"identifier","text":"Float16"}],"role":"symbol","title":"Float16","url":"\/documentation\/compute\/float16","type":"topic","abstract":[{"type":"text","text":"A half-precision (16b), floating-point value type."}],"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Float16"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Float16/FloatingPoint-Implementations":{"url":"\/documentation\/compute\/float16\/floatingpoint-implementations","role":"collectionGroup","abstract":[],"type":"topic","title":"FloatingPoint Implementations","kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float16\/FloatingPoint-Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/Float16/squareRoot()":{"role":"symbol","abstract":[{"type":"text","text":"Returns the square root of the value, rounded to a representable value."}],"type":"topic","kind":"symbol","title":"squareRoot()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"squareRoot","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"url":"\/documentation\/compute\/float16\/squareroot()","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float16\/squareRoot()"}}}