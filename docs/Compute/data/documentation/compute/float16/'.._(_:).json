{"metadata":{"extendedModule":"Swift","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"..<"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"PartialRangeUpTo","preciseIdentifier":"s:s16PartialRangeUpToV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":">","kind":"text"}],"externalID":"s:SLsE3zzlopys16PartialRangeUpToVyxGxFZ::SYNTHESIZED::s:s7Float16V","symbolKind":"op","modules":[{"relatedModules":["Swift"],"name":"Compute"}],"role":"symbol","roleHeading":"Operator","title":"..<(_:)"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float16","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float16\/Comparable-Implementations"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/float16\/'.._(_:)"]}],"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float16\/.._(_:)","interfaceLanguage":"swift"},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"..<","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"maximum","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/PartialRangeUpTo","text":"PartialRangeUpTo","preciseIdentifier":"s:s16PartialRangeUpToV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":">","kind":"text"}],"platforms":["macOS"]}]},{"parameters":[{"content":[{"inlineContent":[{"type":"text","text":"The upper bound for the range."}],"type":"paragraph"}],"name":"maximum"}],"kind":"parameters"},{"kind":"content","content":[{"level":2,"text":"Discussion","anchor":"discussion","type":"heading"},{"inlineContent":[{"text":"Use the prefix half-open range operator (prefix ","type":"text"},{"type":"codeVoice","code":"..<"},{"type":"text","text":") to create a"},{"text":" ","type":"text"},{"type":"text","text":"partial range of any type that conforms to the "},{"type":"codeVoice","code":"Comparable"},{"type":"text","text":" protocol."},{"type":"text","text":" "},{"type":"text","text":"This example creates a "},{"code":"PartialRangeUpTo<Double>","type":"codeVoice"},{"text":" instance that includes","type":"text"},{"text":" ","type":"text"},{"text":"any value less than ","type":"text"},{"type":"codeVoice","code":"5.0"},{"text":".","type":"text"}],"type":"paragraph"},{"syntax":null,"type":"codeListing","code":["let upToFive = ..<5.0","","upToFive.contains(3.14)       \/\/ true","upToFive.contains(6.28)       \/\/ false","upToFive.contains(5.0)        \/\/ false"]},{"inlineContent":[{"text":"You can use this type of partial range of a collection’s indices to","type":"text"},{"text":" ","type":"text"},{"text":"represent the range from the start of the collection up to, but not","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"including, the partial range’s upper bound."}],"type":"paragraph"},{"syntax":null,"code":["let numbers = [10, 20, 30, 40, 50, 60, 70]","print(numbers[..<3])","\/\/ Prints \"[10, 20, 30]\""],"type":"codeListing"},{"type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"maximum"},{"text":" must compare equal to itself (i.e. cannot be NaN).","type":"text"}]}],"style":"note","name":"Precondition"}]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"abstract":[{"type":"text","text":"Returns a partial range up to, but not including, its upper bound."}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Float16/Comparable-Implementations":{"type":"topic","role":"collectionGroup","title":"Comparable Implementations","abstract":[],"url":"\/documentation\/compute\/float16\/comparable-implementations","kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float16\/Comparable-Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/Float16":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float16","navigatorTitle":[{"kind":"identifier","text":"Float16"}],"role":"symbol","title":"Float16","url":"\/documentation\/compute\/float16","type":"topic","abstract":[{"type":"text","text":"A half-precision (16b), floating-point value type."}],"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Float16"}]},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Float16/.._(_:)":{"kind":"symbol","url":"\/documentation\/compute\/float16\/'.._(_:)","title":"..<(_:)","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"..<","kind":"identifier"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"PartialRangeUpTo","kind":"typeIdentifier","preciseIdentifier":"s:s16PartialRangeUpToV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float16\/.._(_:)","role":"symbol","abstract":[{"text":"Returns a partial range up to, but not including, its upper bound.","type":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/PartialRangeUpTo":{"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"PartialRangeUpTo","kind":"identifier"}],"type":"topic","url":"\/documentation\/compute\/partialrangeupto","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/PartialRangeUpTo","abstract":[{"type":"text","text":"A partial half-open interval up to, but not including, an upper bound."}],"navigatorTitle":[{"text":"PartialRangeUpTo","kind":"identifier"}],"title":"PartialRangeUpTo"}}}