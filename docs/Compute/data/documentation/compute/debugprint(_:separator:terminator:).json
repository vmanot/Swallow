{"abstract":[{"text":"Writes the textual representations of the given items most suitable for","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"debugging into the standard output."}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"debugPrint","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"text":"items","kind":"internalParam"},{"kind":"text","text":": "},{"text":"Any","kind":"keyword"},{"kind":"text","text":"..., "},{"kind":"externalParam","text":"separator"},{"text":": ","kind":"text"},{"text":"String","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":" = \" \", ","kind":"text"},{"kind":"externalParam","text":"terminator"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String","text":"String","kind":"typeIdentifier"},{"kind":"text","text":" = \"\\n\")"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"items","content":[{"inlineContent":[{"text":"Zero or more items to print.","type":"text"}],"type":"paragraph"}]},{"name":"separator","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A string to print between each item. The default is a single"},{"type":"text","text":" "},{"text":"space (","type":"text"},{"type":"codeVoice","code":"\" \""},{"type":"text","text":")."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"The string to print after all items have been printed. The"},{"text":" ","type":"text"},{"text":"default is a newline (","type":"text"},{"type":"codeVoice","code":"\"\\n\""},{"type":"text","text":")."}],"type":"paragraph"}],"name":"terminator"}]},{"content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"You can pass zero or more items to the","type":"text"},{"type":"text","text":" "},{"code":"debugPrint(_:separator:terminator:)","type":"codeVoice"},{"type":"text","text":" function. The textual representation"},{"type":"text","text":" "},{"type":"text","text":"for each item is the same as that obtained by calling"},{"type":"text","text":" "},{"type":"codeVoice","code":"String(reflecting: item)"},{"text":". The following example prints the debugging","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"representation of a string, a closed range of integers, and a group of"},{"type":"text","text":" "},{"text":"floating-point values to standard output:","type":"text"}]},{"syntax":null,"type":"codeListing","code":["debugPrint(\"One two three four five\")","\/\/ Prints \"One two three four five\"","","debugPrint(1...5)","\/\/ Prints \"ClosedRange(1...5)\"","","debugPrint(1.0, 2.0, 3.0, 4.0, 5.0)","\/\/ Prints \"1.0 2.0 3.0 4.0 5.0\""]},{"inlineContent":[{"type":"text","text":"To print the items separated by something other than a space, pass a string"},{"type":"text","text":" "},{"type":"text","text":"as "},{"type":"codeVoice","code":"separator"},{"type":"text","text":"."}],"type":"paragraph"},{"syntax":null,"code":["debugPrint(1.0, 2.0, 3.0, 4.0, 5.0, separator: \" ... \")","\/\/ Prints \"1.0 ... 2.0 ... 3.0 ... 4.0 ... 5.0\""],"type":"codeListing"},{"inlineContent":[{"text":"The output from each call to ","type":"text"},{"code":"debugPrint(_:separator:terminator:)","type":"codeVoice"},{"text":" includes","type":"text"},{"type":"text","text":" "},{"text":"a newline by default. To print the items without a trailing newline, pass","type":"text"},{"text":" ","type":"text"},{"text":"an empty string as ","type":"text"},{"type":"codeVoice","code":"terminator"},{"text":".","type":"text"}],"type":"paragraph"},{"code":["for n in 1...5 {","    debugPrint(n, terminator: \"\")","}","\/\/ Prints \"12345\""],"type":"codeListing","syntax":null}],"kind":"content"}],"metadata":{"symbolKind":"func","externalID":"s:s10debugPrint_9separator10terminatoryypd_S2StF","role":"symbol","modules":[{"name":"Compute"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"debugPrint","kind":"identifier"},{"kind":"text","text":"("},{"text":"Any","kind":"keyword"},{"kind":"text","text":"..., "},{"text":"separator","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"text":"terminator","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":")","kind":"text"}],"roleHeading":"Function","title":"debugPrint(_:separator:terminator:)"},"sections":[],"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/debugPrint(_:separator:terminator:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/debugprint(_:separator:terminator:)"]}],"kind":"symbol","references":{"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/String":{"type":"topic","navigatorTitle":[{"kind":"identifier","text":"String"}],"title":"String","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"String","kind":"identifier"}],"abstract":[{"type":"text","text":"A Unicode string value that is a collection of characters."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String","kind":"symbol","role":"symbol","url":"\/documentation\/compute\/string"},"doc://com.swallow.documentation.Compute/documentation/Compute/debugPrint(_:separator:terminator:)":{"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/debugPrint(_:separator:terminator:)","role":"symbol","url":"\/documentation\/compute\/debugprint(_:separator:terminator:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"debugPrint","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"keyword","text":"Any"},{"kind":"text","text":"..., "},{"kind":"externalParam","text":"separator"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":", "},{"text":"terminator","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":")","kind":"text"}],"abstract":[{"type":"text","text":"Writes the textual representations of the given items most suitable for"},{"type":"text","text":" "},{"text":"debugging into the standard output.","type":"text"}],"title":"debugPrint(_:separator:terminator:)","kind":"symbol"}}}