{"sections":[],"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/SIMD-Implementations","interfaceLanguage":"swift"},"kind":"article","topicSections":[{"title":"Operators","identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&(_:_:)-3y4ee","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&(_:_:)-5hn2d","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&(_:_:)-6m27n","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&*(_:_:)-18c2j","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&*(_:_:)-39jwx","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&*(_:_:)-7snfm","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&*=(_:_:)-317ft","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&*=(_:_:)-4o8xl","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&+(_:_:)-2klka","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&+(_:_:)-5s8y2","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&+(_:_:)-6wi7o","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&+=(_:_:)-1ho7b","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&+=(_:_:)-579bp","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&-(_:_:)-1e36y","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&-(_:_:)-4705x","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&-(_:_:)-8s9k4","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&-=(_:_:)-594jw","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&-=(_:_:)-5pn4x","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&=(_:_:)-5eswa","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&=(_:_:)-9jgzy","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&__(_:_:)-29eng","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&__(_:_:)-4gsmr","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&__(_:_:)-78ish","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&__(_:_:)-7zqu8","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&__(_:_:)-89xqs","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&__(_:_:)-9hia9","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&__=(_:_:)-3ali8","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&__=(_:_:)-762kk","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&__=(_:_:)-815bv","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&__=(_:_:)-92dly","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/*(_:_:)-2s55h","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/*(_:_:)-418m6","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/*(_:_:)-4x7hq","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/*(_:_:)-7q0sz","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/*(_:_:)-7shb0","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/*(_:_:)-9qya8","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/*=(_:_:)-1i0tm","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/*=(_:_:)-36zit","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/*=(_:_:)-46f5z","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/*=(_:_:)-8kra8","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/+(_:_:)-2phi3","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/+(_:_:)-473a4","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/+(_:_:)-4w7pm","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/+(_:_:)-59ak9","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/+(_:_:)-5rl9l","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/+(_:_:)-tzme","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/+=(_:_:)-2gvba","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/+=(_:_:)-318n3","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/+=(_:_:)-6aukb","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/+=(_:_:)-9yj49","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/-(_:)-2kg0","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/-(_:)-719ie","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/-(_:_:)-27153","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/-(_:_:)-2zgvi","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/-(_:_:)-4vvz","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/-(_:_:)-7rtph","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/-(_:_:)-8y206","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/-(_:_:)-ily3","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/-=(_:_:)-1bm21","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/-=(_:_:)-2aro2","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/-=(_:_:)-4c6ab","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/-=(_:_:)-6ujbc","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/.!=(_:_:)-2u3yd","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/.!=(_:_:)-6dgv1","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/.!=(_:_:)-968x6","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/.==(_:_:)-5y9oc","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/.==(_:_:)-6oddf","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/.==(_:_:)-8sr5e","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._(_:_:)-28t6e","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._(_:_:)-4ahoi","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._(_:_:)-6xg1q","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._(_:_:)-78u7r","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._(_:_:)-7bowa","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._(_:_:)-89ezy","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._=(_:_:)-2c2t0","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._=(_:_:)-3t7xa","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._=(_:_:)-58tjg","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._=(_:_:)-5htya","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._=(_:_:)-64co6","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._=(_:_:)-9lx6q","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/==(_:_:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/_(_:_:)-34uwb","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/_(_:_:)-3w1pz","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/_(_:_:)-414xo","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/_(_:_:)-44n0x","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/_(_:_:)-474ry","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/_(_:_:)-4lwb2","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/_(_:_:)-4n158","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/_(_:_:)-4ucgx","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/_(_:_:)-50id9","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/_(_:_:)-5j9uq","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/_(_:_:)-5y65m","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/_(_:_:)-6zy","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/_(_:_:)-7fea3","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/_(_:_:)-8nial","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/_(_:_:)-pk1j","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/_=(_:_:)-11pnj","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/_=(_:_:)-1vap7","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/_=(_:_:)-20gc6","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/_=(_:_:)-26y2h","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/_=(_:_:)-2dyv7","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/_=(_:_:)-2okko","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/_=(_:_:)-49dhy","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/_=(_:_:)-4prs","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/_=(_:_:)-66xdx","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/_=(_:_:)-8y875","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/~(_:)"],"anchor":"Operators","generated":true},{"anchor":"Initializers","identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/init(_:)-5s7gg","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/init(_:)-6afuc","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/init(arrayLiteral:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/init(from:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/init(repeating:)"],"title":"Initializers","generated":true},{"identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/description","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/indices","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/leadingZeroBitCount","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/nonzeroBitCount","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/trailingZeroBitCount"],"title":"Instance Properties","anchor":"Instance-Properties","generated":true},{"generated":true,"title":"Instance Methods","identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/addProduct(_:_:)-2e6v4","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/addProduct(_:_:)-65sbs","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/addProduct(_:_:)-9epk7","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/addingProduct(_:_:)-7uual","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/addingProduct(_:_:)-8gka","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/addingProduct(_:_:)-8svnk","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/clamp(lowerBound:upperBound:)-mfa1","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/clamp(lowerBound:upperBound:)-r8mu","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/clamped(lowerBound:upperBound:)-3fn6n","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/clamped(lowerBound:upperBound:)-5edvy","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/encode(to:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/formSquareRoot()","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/hash(into:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/max()-36c8c","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/max()-9t6zm","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/min()-5cvw3","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/min()-9a3ey","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/replace(with:where:)-7o8hd","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/replace(with:where:)-9jte6","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/replacing(with:where:)-3v5ph","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/replacing(with:where:)-h40g","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/round(_:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/rounded(_:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/squareRoot()","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/sum()","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/wrappedSum()"],"anchor":"Instance-Methods"},{"generated":true,"identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/one-13jdz","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/one-3mop8","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/zero-2wd1r","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/zero-3kong"],"anchor":"Type-Properties","title":"Type Properties"},{"title":"Type Methods","generated":true,"identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/random(in:)-3w4wf","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/random(in:)-82yup","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/random(in:using:)-7fl57","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/random(in:using:)-7xfit"],"anchor":"Type-Methods"}],"metadata":{"role":"collectionGroup","modules":[{"name":"Compute"}],"title":"SIMD Implementations","roleHeading":"API Collection"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/simd32\/simd-implementations"]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32"]]},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/squareRoot()":{"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"FloatingPoint"},{"text":".","type":"text"}]},"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/squareRoot()","title":"squareRoot()","kind":"symbol","url":"\/documentation\/compute\/simd32\/squareroot()","role":"symbol","abstract":[],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"squareRoot","kind":"identifier"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Self"}],"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/&+(_:_:)-2klka":{"abstract":[],"role":"symbol","title":"&+(_:_:)","type":"topic","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Scalar"},{"type":"text","text":" conforms to "},{"code":"FixedWidthInteger","type":"codeVoice"},{"type":"text","text":"."}]},"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&+(_:_:)-2klka","kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"&+"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:s11SIMDStorageP6ScalarQa","kind":"typeIdentifier","text":"Scalar"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"url":"\/documentation\/compute\/simd32\/&+(_:_:)-2klka"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/replace(with:where:)-9jte6":{"kind":"symbol","type":"topic","title":"replace(with:where:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"replace"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:s11SIMDStorageP6ScalarQa","text":"Scalar","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"where","kind":"externalParam"},{"kind":"text","text":": "},{"text":"SIMDMask","kind":"typeIdentifier","preciseIdentifier":"s:s8SIMDMaskV"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:s4SIMDP11MaskStorageQa","text":"MaskStorage"},{"text":">)","kind":"text"}],"url":"\/documentation\/compute\/simd32\/replace(with:where:)-9jte6","abstract":[{"type":"text","text":"Replaces elements of this vector with "},{"code":"other","type":"codeVoice"},{"type":"text","text":" in the lanes where "},{"code":"mask","type":"codeVoice"},{"text":" ","type":"text"},{"text":"is ","type":"text"},{"type":"codeVoice","code":"true"},{"text":".","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/replace(with:where:)-9jte6","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/&__(_:_:)-78ish":{"abstract":[],"role":"symbol","title":"&>>(_:_:)","type":"topic","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"FixedWidthInteger","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&__(_:_:)-78ish","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"&>>","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:s11SIMDStorageP6ScalarQa","text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"}],"url":"\/documentation\/compute\/simd32\/&__(_:_:)-78ish"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/&+=(_:_:)-1ho7b":{"role":"symbol","type":"topic","conformance":{"constraints":[{"type":"codeVoice","code":"Scalar"},{"text":" conforms to ","type":"text"},{"code":"FixedWidthInteger","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"&+=","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"text":")","kind":"text"}],"kind":"symbol","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&+=(_:_:)-1ho7b","title":"&+=(_:_:)","url":"\/documentation\/compute\/simd32\/&+=(_:_:)-1ho7b"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/.==(_:_:)-6oddf":{"kind":"symbol","type":"topic","title":".==(_:_:)","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":".==","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:s11SIMDStorageP6ScalarQa","kind":"typeIdentifier","text":"Scalar"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:s8SIMDMaskV","text":"SIMDMask","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:s4SIMDP11MaskStorageQa","text":"MaskStorage","kind":"typeIdentifier"},{"text":">","kind":"text"}],"url":"\/documentation\/compute\/simd32\/'.==(_:_:)-6oddf","abstract":[{"text":"Returns a vector mask with the result of a pointwise equality comparison.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/.==(_:_:)-6oddf","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/trailingZeroBitCount":{"type":"topic","role":"symbol","url":"\/documentation\/compute\/simd32\/trailingzerobitcount","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"trailingZeroBitCount"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/trailingZeroBitCount","title":"trailingZeroBitCount","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"FixedWidthInteger"},{"type":"text","text":"."}]}},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/rounded(_:)":{"abstract":[{"text":"A vector formed by rounding each lane of the source vector to an integral","type":"text"},{"type":"text","text":" "},{"type":"text","text":"value according to the specified rounding "},{"code":"rule","type":"codeVoice"},{"text":".","type":"text"}],"role":"symbol","title":"rounded(_:)","type":"topic","conformance":{"constraints":[{"type":"codeVoice","code":"Scalar"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"FloatingPoint"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/rounded(_:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"rounded","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:s25FloatingPointRoundingRuleO","text":"FloatingPointRoundingRule","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"}],"url":"\/documentation\/compute\/simd32\/rounded(_:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/+(_:_:)-tzme":{"kind":"symbol","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"FloatingPoint","type":"codeVoice"},{"text":".","type":"text"}]},"type":"topic","title":"+(_:_:)","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"+","kind":"identifier"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"url":"\/documentation\/compute\/simd32\/+(_:_:)-tzme","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/+(_:_:)-tzme","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/&__(_:_:)-4gsmr":{"abstract":[],"role":"symbol","title":"&>>(_:_:)","type":"topic","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"FixedWidthInteger"},{"type":"text","text":"."}]},"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&__(_:_:)-4gsmr","kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"&>>"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:s11SIMDStorageP6ScalarQa","text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"}],"url":"\/documentation\/compute\/simd32\/&__(_:_:)-4gsmr"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/-(_:_:)-4vvz":{"kind":"symbol","conformance":{"constraints":[{"type":"codeVoice","code":"Scalar"},{"text":" conforms to ","type":"text"},{"code":"FixedWidthInteger","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"deprecated":true,"type":"topic","title":"-(_:_:)","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"-","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:s11SIMDStorageP6ScalarQa","text":"Scalar","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"url":"\/documentation\/compute\/simd32\/-(_:_:)-4vvz","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/-(_:_:)-4vvz","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/max()-9t6zm":{"type":"topic","url":"\/documentation\/compute\/simd32\/max()-9t6zm","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"max","kind":"identifier"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Scalar","kind":"typeIdentifier","preciseIdentifier":"s:s11SIMDStorageP6ScalarQa"}],"abstract":[{"type":"text","text":"The greatest element in the vector."}],"title":"max()","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/max()-9t6zm","role":"symbol","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Comparable"},{"text":".","type":"text"}]}},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/encode(to:)":{"abstract":[{"text":"Encodes the scalars of this vector into the given encoder in an unkeyed","type":"text"},{"type":"text","text":" "},{"type":"text","text":"container."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"encode"},{"kind":"text","text":"("},{"text":"to","kind":"externalParam"},{"kind":"text","text":": any "},{"kind":"typeIdentifier","preciseIdentifier":"s:s7EncoderP","text":"Encoder"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"kind":"symbol","url":"\/documentation\/compute\/simd32\/encode(to:)","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/encode(to:)","title":"encode(to:)","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/addProduct(_:_:)-9epk7":{"abstract":[],"role":"symbol","title":"addProduct(_:_:)","type":"topic","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Scalar"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"FloatingPoint"},{"type":"text","text":"."}]},"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/addProduct(_:_:)-9epk7","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"addProduct","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:s11SIMDStorageP6ScalarQa","kind":"typeIdentifier","text":"Scalar"},{"text":")","kind":"text"}],"url":"\/documentation\/compute\/simd32\/addproduct(_:_:)-9epk7"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/init(from:)":{"kind":"symbol","type":"topic","title":"init(from:)","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"text":"from","kind":"externalParam"},{"kind":"text","text":": any "},{"kind":"typeIdentifier","text":"Decoder","preciseIdentifier":"s:s7DecoderP"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"}],"url":"\/documentation\/compute\/simd32\/init(from:)","abstract":[{"text":"Creates a new vector by decoding scalars from the given decoder.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/init(from:)","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/one-13jdz":{"abstract":[{"text":"A vector with one in all lanes.","type":"text"}],"role":"symbol","title":"one","type":"topic","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"FixedWidthInteger"},{"text":".","type":"text"}]},"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/one-13jdz","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"one","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"url":"\/documentation\/compute\/simd32\/one-13jdz"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/&*(_:_:)-39jwx":{"kind":"symbol","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Scalar"},{"type":"text","text":" conforms to "},{"code":"FixedWidthInteger","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"type":"topic","title":"&*(_:_:)","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"&*"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:s11SIMDStorageP6ScalarQa","kind":"typeIdentifier","text":"Scalar"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"url":"\/documentation\/compute\/simd32\/&*(_:_:)-39jwx","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&*(_:_:)-39jwx","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/_=(_:_:)-26y2h":{"abstract":[],"role":"symbol","title":"|=(_:_:)","type":"topic","conformance":{"constraints":[{"type":"codeVoice","code":"Scalar"},{"text":" conforms to ","type":"text"},{"code":"FixedWidthInteger","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/_=(_:_:)-26y2h","kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"|="},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/compute\/simd32\/_=(_:_:)-26y2h"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/init(repeating:)":{"kind":"symbol","type":"topic","title":"init(repeating:)","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"repeating"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Scalar","kind":"typeIdentifier","preciseIdentifier":"s:s11SIMDStorageP6ScalarQa"},{"kind":"text","text":")"}],"url":"\/documentation\/compute\/simd32\/init(repeating:)","abstract":[{"text":"A vector with the specified value in all lanes.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/init(repeating:)","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/indices":{"abstract":[{"text":"The valid indices for subscripting the vector.","type":"text"}],"role":"symbol","title":"indices","type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/indices","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"indices"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","text":"Range"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"text":">","kind":"text"}],"url":"\/documentation\/compute\/simd32\/indices"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/._(_:_:)-78u7r":{"kind":"symbol","conformance":{"constraints":[{"code":"Scalar","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Comparable","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"type":"topic","title":".<(_:_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":".<"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s11SIMDStorageP6ScalarQa","text":"Scalar"},{"text":") -> ","kind":"text"},{"text":"SIMDMask","preciseIdentifier":"s:s8SIMDMaskV","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4SIMDP11MaskStorageQa","text":"MaskStorage"},{"text":">","kind":"text"}],"url":"\/documentation\/compute\/simd32\/'._(_:_:)-78u7r","abstract":[{"type":"text","text":"Returns a vector mask with the result of a pointwise less than comparison."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._(_:_:)-78u7r","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/-=(_:_:)-6ujbc":{"abstract":[],"role":"symbol","title":"-=(_:_:)","type":"topic","deprecated":true,"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Scalar"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"FixedWidthInteger"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/-=(_:_:)-6ujbc","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"-=","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:s11SIMDStorageP6ScalarQa","kind":"typeIdentifier","text":"Scalar"},{"text":")","kind":"text"}],"url":"\/documentation\/compute\/simd32\/-=(_:_:)-6ujbc"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/.!=(_:_:)-2u3yd":{"kind":"symbol","type":"topic","title":".!=(_:_:)","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":".!=","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:s11SIMDStorageP6ScalarQa","text":"Scalar","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:s8SIMDMaskV","text":"SIMDMask","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"MaskStorage","kind":"typeIdentifier","preciseIdentifier":"s:s4SIMDP11MaskStorageQa"},{"kind":"text","text":">"}],"url":"\/documentation\/compute\/simd32\/'.!=(_:_:)-2u3yd","abstract":[{"text":"Returns a vector mask with the result of a pointwise inequality comparison.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/.!=(_:_:)-2u3yd","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/one-3mop8":{"abstract":[{"text":"A vector with one in all lanes.","type":"text"}],"role":"symbol","title":"one","type":"topic","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Scalar"},{"text":" conforms to ","type":"text"},{"code":"FloatingPoint","type":"codeVoice"},{"type":"text","text":"."}]},"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/one-3mop8","kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"one"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"url":"\/documentation\/compute\/simd32\/one-3mop8"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/._=(_:_:)-3t7xa":{"kind":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Scalar"},{"type":"text","text":" conforms to "},{"code":"Comparable","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"type":"topic","title":".>=(_:_:)","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":".>=","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"text":"SIMDMask","kind":"typeIdentifier","preciseIdentifier":"s:s8SIMDMaskV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"MaskStorage","kind":"typeIdentifier","preciseIdentifier":"s:s4SIMDP11MaskStorageQa"},{"kind":"text","text":">"}],"url":"\/documentation\/compute\/simd32\/'._=(_:_:)-3t7xa","abstract":[{"type":"text","text":"Returns a vector mask with the result of a pointwise greater than or"},{"type":"text","text":" "},{"type":"text","text":"equal comparison."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._=(_:_:)-3t7xa","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/_=(_:_:)-1vap7":{"url":"\/documentation\/compute\/simd32\/_=(_:_:)-1vap7","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"FixedWidthInteger","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"abstract":[],"type":"topic","role":"symbol","title":"%=(_:_:)","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"%="},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":")","kind":"text"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/_=(_:_:)-1vap7"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/&__(_:_:)-7zqu8":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&__(_:_:)-7zqu8","title":"&<<(_:_:)","type":"topic","abstract":[],"role":"symbol","kind":"symbol","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"FixedWidthInteger"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"url":"\/documentation\/compute\/simd32\/&__(_:_:)-7zqu8","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"&<<","kind":"identifier"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Scalar","kind":"typeIdentifier","preciseIdentifier":"s:s11SIMDStorageP6ScalarQa"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/&__(_:_:)-89xqs":{"abstract":[],"role":"symbol","title":"&>>(_:_:)","type":"topic","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Scalar"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"FixedWidthInteger"},{"type":"text","text":"."}]},"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&__(_:_:)-89xqs","kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"&>>","kind":"identifier"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"url":"\/documentation\/compute\/simd32\/&__(_:_:)-89xqs"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/init(arrayLiteral:)":{"kind":"symbol","type":"topic","title":"init(arrayLiteral:)","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"text":"arrayLiteral","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Scalar","kind":"typeIdentifier","preciseIdentifier":"s:s11SIMDStorageP6ScalarQa"},{"kind":"text","text":"...)"}],"url":"\/documentation\/compute\/simd32\/init(arrayliteral:)","abstract":[{"type":"text","text":"Creates a vector from the specified elements."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/init(arrayLiteral:)","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/*=(_:_:)-8kra8":{"abstract":[],"role":"symbol","title":"*=(_:_:)","type":"topic","conformance":{"constraints":[{"code":"Scalar","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"FloatingPoint","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/*=(_:_:)-8kra8","kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"*="},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:s11SIMDStorageP6ScalarQa","kind":"typeIdentifier","text":"Scalar"},{"text":")","kind":"text"}],"url":"\/documentation\/compute\/simd32\/*=(_:_:)-8kra8"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/&+(_:_:)-6wi7o":{"kind":"symbol","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"FixedWidthInteger"},{"text":".","type":"text"}]},"type":"topic","title":"&+(_:_:)","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"&+","kind":"identifier"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"}],"url":"\/documentation\/compute\/simd32\/&+(_:_:)-6wi7o","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&+(_:_:)-6wi7o","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/addProduct(_:_:)-2e6v4":{"abstract":[],"role":"symbol","title":"addProduct(_:_:)","type":"topic","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"FloatingPoint"},{"text":".","type":"text"}]},"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/addProduct(_:_:)-2e6v4","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"addProduct","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Scalar","preciseIdentifier":"s:s11SIMDStorageP6ScalarQa","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":")"}],"url":"\/documentation\/compute\/simd32\/addproduct(_:_:)-2e6v4"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/*(_:_:)-9qya8":{"kind":"symbol","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Scalar"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"FloatingPoint"},{"text":".","type":"text"}]},"type":"topic","title":"*(_:_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"*"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"}],"url":"\/documentation\/compute\/simd32\/*(_:_:)-9qya8","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/*(_:_:)-9qya8","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/clamp(lowerBound:upperBound:)-r8mu":{"url":"\/documentation\/compute\/simd32\/clamp(lowerbound:upperbound:)-r8mu","type":"topic","role":"symbol","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Comparable"},{"text":".","type":"text"}]},"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"clamp","kind":"identifier"},{"text":"(","kind":"text"},{"text":"lowerBound","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"upperBound","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":")","kind":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/clamp(lowerBound:upperBound:)-r8mu","kind":"symbol","abstract":[],"title":"clamp(lowerBound:upperBound:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/*(_:_:)-418m6":{"abstract":[],"role":"symbol","title":"*(_:_:)","type":"topic","deprecated":true,"conformance":{"constraints":[{"type":"codeVoice","code":"Scalar"},{"type":"text","text":" conforms to "},{"code":"FixedWidthInteger","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/*(_:_:)-418m6","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"*","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:s11SIMDStorageP6ScalarQa","text":"Scalar"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"}],"url":"\/documentation\/compute\/simd32\/*(_:_:)-418m6"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/*(_:_:)-2s55h":{"kind":"symbol","url":"\/documentation\/compute\/simd32\/*(_:_:)-2s55h","abstract":[],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"*","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s11SIMDStorageP6ScalarQa","text":"Scalar"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/*(_:_:)-2s55h","title":"*(_:_:)","type":"topic","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"FloatingPoint"},{"type":"text","text":"."}]}},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/init(_:)-5s7gg":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/init(_:)-5s7gg","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Scalar","preciseIdentifier":"s:s11SIMDStorageP6ScalarQa","kind":"typeIdentifier"},{"kind":"text","text":")"}],"kind":"symbol","abstract":[],"url":"\/documentation\/compute\/simd32\/init(_:)-5s7gg","deprecated":true,"role":"symbol","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/max()-36c8c":{"abstract":[{"text":"The greatest scalar in the vector.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/max()-36c8c","role":"symbol","title":"max()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"max","kind":"identifier"},{"kind":"text","text":"() -> "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Scalar","kind":"typeIdentifier","preciseIdentifier":"s:s11SIMDStorageP6ScalarQa"}],"kind":"symbol","type":"topic","conformance":{"constraints":[{"type":"codeVoice","code":"Scalar"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"FloatingPoint"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"url":"\/documentation\/compute\/simd32\/max()-36c8c"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/_(_:_:)-44n0x":{"kind":"symbol","conformance":{"constraints":[{"code":"Scalar","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"FixedWidthInteger"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"type":"topic","title":"|(_:_:)","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"|","kind":"identifier"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:s11SIMDStorageP6ScalarQa","text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"}],"url":"\/documentation\/compute\/simd32\/_(_:_:)-44n0x","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/_(_:_:)-44n0x","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/._(_:_:)-6xg1q":{"url":"\/documentation\/compute\/simd32\/'._(_:_:)-6xg1q","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":".>","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"SIMDMask","kind":"typeIdentifier","preciseIdentifier":"s:s8SIMDMaskV"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"MaskStorage","preciseIdentifier":"s:s4SIMDP11MaskStorageQa","kind":"typeIdentifier"},{"text":">","kind":"text"}],"role":"symbol","abstract":[{"text":"Returns a vector mask with the result of a pointwise greater than","type":"text"},{"text":" ","type":"text"},{"text":"comparison.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._(_:_:)-6xg1q","title":".>(_:_:)","type":"topic","kind":"symbol","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Scalar"},{"type":"text","text":" conforms to "},{"code":"Comparable","type":"codeVoice"},{"type":"text","text":"."}]}},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/&(_:_:)-3y4ee":{"abstract":[],"role":"symbol","title":"&(_:_:)","type":"topic","conformance":{"constraints":[{"type":"codeVoice","code":"Scalar"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"FixedWidthInteger"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&(_:_:)-3y4ee","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"&","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"url":"\/documentation\/compute\/simd32\/&(_:_:)-3y4ee"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/_(_:_:)-4n158":{"kind":"symbol","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Scalar"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"FixedWidthInteger"},{"type":"text","text":"."}]},"type":"topic","title":"\/(_:_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"\/"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"}],"url":"\/documentation\/compute\/simd32\/_(_:_:)-4n158","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/_(_:_:)-4n158","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/*=(_:_:)-1i0tm":{"abstract":[],"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"*="},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":")","kind":"text"}],"conformance":{"constraints":[{"type":"codeVoice","code":"Scalar"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"FloatingPoint"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"url":"\/documentation\/compute\/simd32\/*=(_:_:)-1i0tm","title":"*=(_:_:)","role":"symbol","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/*=(_:_:)-1i0tm","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/-=(_:_:)-2aro2":{"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"-=","kind":"identifier"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":")"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/-=(_:_:)-2aro2","deprecated":true,"type":"topic","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"FixedWidthInteger"},{"type":"text","text":"."}]},"title":"-=(_:_:)","role":"symbol","abstract":[],"kind":"symbol","url":"\/documentation\/compute\/simd32\/-=(_:_:)-2aro2"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/&*=(_:_:)-317ft":{"abstract":[],"role":"symbol","title":"&*=(_:_:)","type":"topic","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Scalar"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"FixedWidthInteger"},{"text":".","type":"text"}]},"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&*=(_:_:)-317ft","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"&*=","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":")"}],"url":"\/documentation\/compute\/simd32\/&*=(_:_:)-317ft"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/&-=(_:_:)-594jw":{"kind":"symbol","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Scalar"},{"text":" conforms to ","type":"text"},{"code":"FixedWidthInteger","type":"codeVoice"},{"text":".","type":"text"}]},"type":"topic","title":"&-=(_:_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"&-=","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:s11SIMDStorageP6ScalarQa","text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":")"}],"url":"\/documentation\/compute\/simd32\/&-=(_:_:)-594jw","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&-=(_:_:)-594jw","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/+=(_:_:)-6aukb":{"abstract":[],"role":"symbol","title":"+=(_:_:)","type":"topic","deprecated":true,"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"FixedWidthInteger"},{"type":"text","text":"."}]},"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/+=(_:_:)-6aukb","kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"+=","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":")"}],"url":"\/documentation\/compute\/simd32\/+=(_:_:)-6aukb"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/replace(with:where:)-7o8hd":{"kind":"symbol","type":"topic","title":"replace(with:where:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"replace","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"where","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s8SIMDMaskV","text":"SIMDMask"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:s4SIMDP11MaskStorageQa","text":"MaskStorage"},{"kind":"text","text":">)"}],"url":"\/documentation\/compute\/simd32\/replace(with:where:)-7o8hd","abstract":[{"type":"text","text":"Replaces elements of this vector with elements of "},{"type":"codeVoice","code":"other"},{"type":"text","text":" in the lanes"},{"text":" ","type":"text"},{"type":"text","text":"where "},{"type":"codeVoice","code":"mask"},{"type":"text","text":" is "},{"code":"true","type":"codeVoice"},{"type":"text","text":"."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/replace(with:where:)-7o8hd","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/_(_:_:)-7fea3":{"abstract":[],"role":"symbol","title":"%(_:_:)","type":"topic","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"FixedWidthInteger"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/_(_:_:)-7fea3","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"%","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:s11SIMDStorageP6ScalarQa","text":"Scalar"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"url":"\/documentation\/compute\/simd32\/_(_:_:)-7fea3"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/&+(_:_:)-5s8y2":{"kind":"symbol","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Scalar"},{"text":" conforms to ","type":"text"},{"code":"FixedWidthInteger","type":"codeVoice"},{"text":".","type":"text"}]},"type":"topic","title":"&+(_:_:)","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"&+"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:s11SIMDStorageP6ScalarQa","text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"}],"url":"\/documentation\/compute\/simd32\/&+(_:_:)-5s8y2","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&+(_:_:)-5s8y2","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/-(_:_:)-7rtph":{"abstract":[],"kind":"symbol","deprecated":true,"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/-(_:_:)-7rtph","type":"topic","url":"\/documentation\/compute\/simd32\/-(_:_:)-7rtph","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"-","kind":"identifier"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Scalar"},{"type":"text","text":" conforms to "},{"code":"FixedWidthInteger","type":"codeVoice"},{"text":".","type":"text"}]},"title":"-(_:_:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/-(_:_:)-2zgvi":{"type":"topic","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"-","kind":"identifier"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Scalar","kind":"typeIdentifier","preciseIdentifier":"s:s11SIMDStorageP6ScalarQa"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"title":"-(_:_:)","kind":"symbol","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"FloatingPoint"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/-(_:_:)-2zgvi","url":"\/documentation\/compute\/simd32\/-(_:_:)-2zgvi","abstract":[],"role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/leadingZeroBitCount":{"abstract":[],"role":"symbol","title":"leadingZeroBitCount","type":"topic","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"FixedWidthInteger","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/leadingZeroBitCount","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"leadingZeroBitCount","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"url":"\/documentation\/compute\/simd32\/leadingzerobitcount"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/random(in:using:)-7xfit":{"type":"topic","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"random"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"in"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ClosedRange","preciseIdentifier":"s:SN"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Scalar","kind":"typeIdentifier","preciseIdentifier":"s:s11SIMDStorageP6ScalarQa"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"using"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/random(in:using:)-7xfit","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Scalar"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"FixedWidthInteger"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"title":"random(in:using:)","abstract":[{"text":"Returns a vector with random values from within the specified range in","type":"text"},{"text":" ","type":"text"},{"text":"all lanes, using the given generator as a source for randomness.","type":"text"}],"kind":"symbol","url":"\/documentation\/compute\/simd32\/random(in:using:)-7xfit"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/.==(_:_:)-8sr5e":{"kind":"symbol","type":"topic","title":".==(_:_:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":".==","kind":"identifier"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Scalar","kind":"typeIdentifier","preciseIdentifier":"s:s11SIMDStorageP6ScalarQa"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"SIMDMask","preciseIdentifier":"s:s8SIMDMaskV"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:s4SIMDP11MaskStorageQa","kind":"typeIdentifier","text":"MaskStorage"},{"kind":"text","text":">"}],"url":"\/documentation\/compute\/simd32\/'.==(_:_:)-8sr5e","abstract":[{"type":"text","text":"Returns a vector mask with the result of a pointwise equality comparison."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/.==(_:_:)-8sr5e","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/_=(_:_:)-4prs":{"abstract":[],"role":"symbol","title":"^=(_:_:)","type":"topic","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Scalar"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"FixedWidthInteger"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/_=(_:_:)-4prs","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"^=","kind":"identifier"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":")"}],"url":"\/documentation\/compute\/simd32\/_=(_:_:)-4prs"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/&__=(_:_:)-815bv":{"type":"topic","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"&<<=","kind":"identifier"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/compute\/simd32\/&__=(_:_:)-815bv","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&__=(_:_:)-815bv","abstract":[],"kind":"symbol","title":"&<<=(_:_:)","role":"symbol","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Scalar"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"FixedWidthInteger"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]}},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/&-=(_:_:)-5pn4x":{"title":"&-=(_:_:)","abstract":[],"url":"\/documentation\/compute\/simd32\/&-=(_:_:)-5pn4x","kind":"symbol","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"&-=","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":")"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Scalar"},{"type":"text","text":" conforms to "},{"code":"FixedWidthInteger","type":"codeVoice"},{"type":"text","text":"."}]},"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&-=(_:_:)-5pn4x"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/+(_:_:)-59ak9":{"kind":"symbol","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"FixedWidthInteger","type":"codeVoice"},{"text":".","type":"text"}]},"deprecated":true,"type":"topic","title":"+(_:_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"+","kind":"identifier"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Scalar","kind":"typeIdentifier","preciseIdentifier":"s:s11SIMDStorageP6ScalarQa"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"url":"\/documentation\/compute\/simd32\/+(_:_:)-59ak9","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/+(_:_:)-59ak9","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/clamp(lowerBound:upperBound:)-mfa1":{"title":"clamp(lowerBound:upperBound:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"clamp"},{"kind":"text","text":"("},{"kind":"externalParam","text":"lowerBound"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"externalParam","text":"upperBound"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"text":")","kind":"text"}],"role":"symbol","type":"topic","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Scalar"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"FloatingPoint"},{"type":"text","text":"."}]},"abstract":[],"url":"\/documentation\/compute\/simd32\/clamp(lowerbound:upperbound:)-mfa1","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/clamp(lowerBound:upperBound:)-mfa1","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/random(in:)-3w4wf":{"abstract":[{"type":"text","text":"Returns a vector with random values from within the specified range in"},{"type":"text","text":" "},{"type":"text","text":"all lanes."}],"role":"symbol","title":"random(in:)","type":"topic","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"FixedWidthInteger","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/random(in:)-3w4wf","kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"random"},{"kind":"text","text":"("},{"text":"in","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SN","text":"ClosedRange"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Scalar","preciseIdentifier":"s:s11SIMDStorageP6ScalarQa","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"text":"Self","kind":"typeIdentifier"}],"url":"\/documentation\/compute\/simd32\/random(in:)-3w4wf"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/_=(_:_:)-11pnj":{"kind":"symbol","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"FixedWidthInteger","type":"codeVoice"},{"text":".","type":"text"}]},"type":"topic","title":"|=(_:_:)","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"|="},{"kind":"text","text":" "},{"kind":"text","text":"("},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Scalar","kind":"typeIdentifier","preciseIdentifier":"s:s11SIMDStorageP6ScalarQa"},{"kind":"text","text":")"}],"url":"\/documentation\/compute\/simd32\/_=(_:_:)-11pnj","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/_=(_:_:)-11pnj","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/+(_:_:)-2phi3":{"type":"topic","abstract":[],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"+","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Scalar","preciseIdentifier":"s:s11SIMDStorageP6ScalarQa"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"kind":"symbol","url":"\/documentation\/compute\/simd32\/+(_:_:)-2phi3","title":"+(_:_:)","role":"symbol","conformance":{"constraints":[{"code":"Scalar","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"FloatingPoint"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/+(_:_:)-2phi3"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/_=(_:_:)-66xdx":{"abstract":[],"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/_=(_:_:)-66xdx","type":"topic","url":"\/documentation\/compute\/simd32\/_=(_:_:)-66xdx","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"\/=","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:s11SIMDStorageP6ScalarQa","text":"Scalar"},{"kind":"text","text":")"}],"conformance":{"constraints":[{"code":"Scalar","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"FixedWidthInteger"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"title":"\/=(_:_:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/addingProduct(_:_:)-7uual":{"url":"\/documentation\/compute\/simd32\/addingproduct(_:_:)-7uual","title":"addingProduct(_:_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"addingProduct","kind":"identifier"},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:s11SIMDStorageP6ScalarQa","kind":"typeIdentifier","text":"Scalar"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"}],"type":"topic","role":"symbol","conformance":{"constraints":[{"code":"Scalar","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"FloatingPoint","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/addingProduct(_:_:)-7uual","abstract":[],"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/._=(_:_:)-58tjg":{"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._=(_:_:)-58tjg","abstract":[{"text":"Returns a vector mask with the result of a pointwise less than or equal","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"comparison."}],"kind":"symbol","url":"\/documentation\/compute\/simd32\/'._=(_:_:)-58tjg","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":".<="},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:s11SIMDStorageP6ScalarQa","text":"Scalar"},{"kind":"text","text":") -> "},{"text":"SIMDMask","kind":"typeIdentifier","preciseIdentifier":"s:s8SIMDMaskV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"MaskStorage","kind":"typeIdentifier","preciseIdentifier":"s:s4SIMDP11MaskStorageQa"},{"kind":"text","text":">"}],"title":".<=(_:_:)","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Scalar"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Comparable"},{"text":".","type":"text"}]}},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/_(_:_:)-3w1pz":{"abstract":[],"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"|","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"Scalar","kind":"typeIdentifier","preciseIdentifier":"s:s11SIMDStorageP6ScalarQa"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"type":"topic","title":"|(_:_:)","role":"symbol","url":"\/documentation\/compute\/simd32\/_(_:_:)-3w1pz","kind":"symbol","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Scalar"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"FixedWidthInteger"},{"type":"text","text":"."}]},"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/_(_:_:)-3w1pz"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/&+=(_:_:)-579bp":{"abstract":[],"role":"symbol","title":"&+=(_:_:)","type":"topic","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Scalar"},{"text":" conforms to ","type":"text"},{"code":"FixedWidthInteger","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&+=(_:_:)-579bp","kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"&+="},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s11SIMDStorageP6ScalarQa","text":"Scalar"},{"text":")","kind":"text"}],"url":"\/documentation\/compute\/simd32\/&+=(_:_:)-579bp"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/.==(_:_:)-5y9oc":{"kind":"symbol","type":"topic","title":".==(_:_:)","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":".=="},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:s8SIMDMaskV","text":"SIMDMask","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:s4SIMDP11MaskStorageQa","text":"MaskStorage"},{"text":">","kind":"text"}],"url":"\/documentation\/compute\/simd32\/'.==(_:_:)-5y9oc","abstract":[{"type":"text","text":"A vector mask with the result of a pointwise equality comparison."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/.==(_:_:)-5y9oc","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/-=(_:_:)-4c6ab":{"abstract":[],"role":"symbol","title":"-=(_:_:)","type":"topic","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"FloatingPoint"},{"type":"text","text":"."}]},"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/-=(_:_:)-4c6ab","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"-="},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:s11SIMDStorageP6ScalarQa","text":"Scalar"},{"kind":"text","text":")"}],"url":"\/documentation\/compute\/simd32\/-=(_:_:)-4c6ab"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/*(_:_:)-7shb0":{"kind":"symbol","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"FixedWidthInteger"},{"text":".","type":"text"}]},"deprecated":true,"type":"topic","title":"*(_:_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"*","kind":"identifier"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"url":"\/documentation\/compute\/simd32\/*(_:_:)-7shb0","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/*(_:_:)-7shb0","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/&-(_:_:)-4705x":{"abstract":[],"role":"symbol","title":"&-(_:_:)","type":"topic","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"FixedWidthInteger","type":"codeVoice"},{"text":".","type":"text"}]},"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&-(_:_:)-4705x","kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"&-"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s11SIMDStorageP6ScalarQa","text":"Scalar"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"url":"\/documentation\/compute\/simd32\/&-(_:_:)-4705x"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/wrappedSum()":{"kind":"symbol","conformance":{"constraints":[{"code":"Scalar","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"FixedWidthInteger","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"type":"topic","title":"wrappedSum()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"wrappedSum","kind":"identifier"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Scalar","preciseIdentifier":"s:s11SIMDStorageP6ScalarQa"}],"url":"\/documentation\/compute\/simd32\/wrappedsum()","abstract":[{"text":"Returns the sum of the scalars in the vector, computed with wrapping","type":"text"},{"type":"text","text":" "},{"type":"text","text":"addition."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/wrappedSum()","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/_=(_:_:)-49dhy":{"abstract":[],"role":"symbol","title":"^=(_:_:)","type":"topic","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"FixedWidthInteger"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/_=(_:_:)-49dhy","kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"^="},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s11SIMDStorageP6ScalarQa","text":"Scalar"},{"text":")","kind":"text"}],"url":"\/documentation\/compute\/simd32\/_=(_:_:)-49dhy"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/clamped(lowerBound:upperBound:)-3fn6n":{"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Comparable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"url":"\/documentation\/compute\/simd32\/clamped(lowerbound:upperbound:)-3fn6n","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"clamped","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"lowerBound"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"text":"upperBound","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/clamped(lowerBound:upperBound:)-3fn6n","kind":"symbol","role":"symbol","title":"clamped(lowerBound:upperBound:)","abstract":[],"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/&__=(_:_:)-92dly":{"role":"symbol","url":"\/documentation\/compute\/simd32\/&__=(_:_:)-92dly","conformance":{"constraints":[{"code":"Scalar","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"FixedWidthInteger"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"kind":"symbol","type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&__=(_:_:)-92dly","abstract":[],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"&<<=","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Scalar","preciseIdentifier":"s:s11SIMDStorageP6ScalarQa","kind":"typeIdentifier"},{"kind":"text","text":")"}],"title":"&<<=(_:_:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/+(_:_:)-473a4":{"url":"\/documentation\/compute\/simd32\/+(_:_:)-473a4","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/+(_:_:)-473a4","kind":"symbol","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Scalar"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"FixedWidthInteger"},{"text":".","type":"text"}]},"role":"symbol","abstract":[],"title":"+(_:_:)","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"+","kind":"identifier"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"deprecated":true,"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/._(_:_:)-28t6e":{"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Comparable"},{"type":"text","text":"."}]},"url":"\/documentation\/compute\/simd32\/'._(_:_:)-28t6e","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":".<","kind":"identifier"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:s8SIMDMaskV","text":"SIMDMask","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"MaskStorage","kind":"typeIdentifier","preciseIdentifier":"s:s4SIMDP11MaskStorageQa"},{"kind":"text","text":">"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._(_:_:)-28t6e","kind":"symbol","role":"symbol","title":".<(_:_:)","abstract":[{"type":"text","text":"Returns a vector mask with the result of a pointwise less than"},{"text":" ","type":"text"},{"text":"comparison.","type":"text"}],"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/init(_:)-6afuc":{"url":"\/documentation\/compute\/simd32\/init(_:)-6afuc","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/init(_:)-6afuc","kind":"symbol","role":"symbol","abstract":[{"text":"Creates a vector from the given sequence.","type":"text"}],"title":"init(_:)","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"S"},{"text":">(","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"kind":"text","text":")"}],"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/_(_:_:)-8nial":{"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"FloatingPoint"},{"type":"text","text":"."}]},"url":"\/documentation\/compute\/simd32\/_(_:_:)-8nial","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"\/"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s11SIMDStorageP6ScalarQa","text":"Scalar"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/_(_:_:)-8nial","kind":"symbol","role":"symbol","title":"\/(_:_:)","abstract":[],"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/_(_:_:)-4lwb2":{"url":"\/documentation\/compute\/simd32\/_(_:_:)-4lwb2","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/_(_:_:)-4lwb2","kind":"symbol","conformance":{"constraints":[{"code":"Scalar","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"FixedWidthInteger"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"role":"symbol","abstract":[],"title":"\/(_:_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"\/"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s11SIMDStorageP6ScalarQa","text":"Scalar"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/*(_:_:)-7q0sz":{"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Scalar"},{"text":" conforms to ","type":"text"},{"code":"FixedWidthInteger","type":"codeVoice"},{"type":"text","text":"."}]},"url":"\/documentation\/compute\/simd32\/*(_:_:)-7q0sz","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"*"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s11SIMDStorageP6ScalarQa","text":"Scalar"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/*(_:_:)-7q0sz","kind":"symbol","role":"symbol","title":"*(_:_:)","abstract":[],"deprecated":true,"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/+=(_:_:)-2gvba":{"url":"\/documentation\/compute\/simd32\/+=(_:_:)-2gvba","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/+=(_:_:)-2gvba","kind":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Scalar"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"FloatingPoint"},{"type":"text","text":"."}]},"role":"symbol","abstract":[],"title":"+=(_:_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"+="},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:s11SIMDStorageP6ScalarQa","kind":"typeIdentifier","text":"Scalar"},{"kind":"text","text":")"}],"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/&*(_:_:)-18c2j":{"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Scalar"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"FixedWidthInteger"},{"type":"text","text":"."}]},"url":"\/documentation\/compute\/simd32\/&*(_:_:)-18c2j","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"&*"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&*(_:_:)-18c2j","kind":"symbol","role":"symbol","title":"&*(_:_:)","abstract":[],"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/._=(_:_:)-9lx6q":{"url":"\/documentation\/compute\/simd32\/'._=(_:_:)-9lx6q","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._=(_:_:)-9lx6q","kind":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Comparable","type":"codeVoice"},{"type":"text","text":"."}]},"role":"symbol","abstract":[{"type":"text","text":"Returns a vector mask with the result of a pointwise less than or equal"},{"text":" ","type":"text"},{"type":"text","text":"comparison."}],"title":".<=(_:_:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":".<="},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Scalar","preciseIdentifier":"s:s11SIMDStorageP6ScalarQa"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"text":"SIMDMask","kind":"typeIdentifier","preciseIdentifier":"s:s8SIMDMaskV"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:s4SIMDP11MaskStorageQa","text":"MaskStorage"},{"kind":"text","text":">"}],"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/._(_:_:)-7bowa":{"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Comparable","type":"codeVoice"},{"text":".","type":"text"}]},"url":"\/documentation\/compute\/simd32\/'._(_:_:)-7bowa","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":".<","kind":"identifier"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:s11SIMDStorageP6ScalarQa","text":"Scalar"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s8SIMDMaskV","text":"SIMDMask"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:s4SIMDP11MaskStorageQa","text":"MaskStorage","kind":"typeIdentifier"},{"text":">","kind":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._(_:_:)-7bowa","kind":"symbol","role":"symbol","title":".<(_:_:)","abstract":[{"type":"text","text":"Returns a vector mask with the result of a pointwise less than comparison."}],"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/+=(_:_:)-9yj49":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/+=(_:_:)-9yj49","conformance":{"constraints":[{"code":"Scalar","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"FloatingPoint"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"role":"symbol","url":"\/documentation\/compute\/simd32\/+=(_:_:)-9yj49","type":"topic","title":"+=(_:_:)","kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"+=","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":")"}],"abstract":[]},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/&__(_:_:)-29eng":{"url":"\/documentation\/compute\/simd32\/&__(_:_:)-29eng","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&__(_:_:)-29eng","kind":"symbol","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"FixedWidthInteger","type":"codeVoice"},{"type":"text","text":"."}]},"role":"symbol","abstract":[],"title":"&<<(_:_:)","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"&<<","kind":"identifier"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Scalar","preciseIdentifier":"s:s11SIMDStorageP6ScalarQa"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/~(_:)":{"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"FixedWidthInteger","type":"codeVoice"},{"type":"text","text":"."}]},"url":"\/documentation\/compute\/simd32\/~(_:)","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"~"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/~(_:)","kind":"symbol","role":"symbol","title":"~(_:)","abstract":[],"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/_=(_:_:)-8y875":{"url":"\/documentation\/compute\/simd32\/_=(_:_:)-8y875","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/_=(_:_:)-8y875","kind":"symbol","conformance":{"constraints":[{"code":"Scalar","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"FixedWidthInteger"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","abstract":[],"title":"%=(_:_:)","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"%=","kind":"identifier"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Scalar","preciseIdentifier":"s:s11SIMDStorageP6ScalarQa"},{"kind":"text","text":")"}],"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/replacing(with:where:)-h40g":{"title":"replacing(with:where:)","type":"topic","abstract":[{"type":"text","text":"Returns a copy of this vector, with elements "},{"code":"other","type":"codeVoice"},{"type":"text","text":" in the lanes where"},{"type":"text","text":" "},{"code":"mask","type":"codeVoice"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"true"},{"text":".","type":"text"}],"url":"\/documentation\/compute\/simd32\/replacing(with:where:)-h40g","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"replacing","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Scalar","kind":"typeIdentifier","preciseIdentifier":"s:s11SIMDStorageP6ScalarQa"},{"text":", ","kind":"text"},{"text":"where","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s8SIMDMaskV","text":"SIMDMask"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"MaskStorage","kind":"typeIdentifier","preciseIdentifier":"s:s4SIMDP11MaskStorageQa"},{"text":">) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/replacing(with:where:)-h40g"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/+(_:_:)-4w7pm":{"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"FloatingPoint"},{"type":"text","text":"."}]},"url":"\/documentation\/compute\/simd32\/+(_:_:)-4w7pm","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"+","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Scalar","kind":"typeIdentifier","preciseIdentifier":"s:s11SIMDStorageP6ScalarQa"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/+(_:_:)-4w7pm","kind":"symbol","role":"symbol","title":"+(_:_:)","abstract":[],"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/&*=(_:_:)-4o8xl":{"url":"\/documentation\/compute\/simd32\/&*=(_:_:)-4o8xl","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&*=(_:_:)-4o8xl","kind":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"FixedWidthInteger"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"role":"symbol","abstract":[],"title":"&*=(_:_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"&*="},{"kind":"text","text":" "},{"kind":"text","text":"("},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:s11SIMDStorageP6ScalarQa","text":"Scalar"},{"text":")","kind":"text"}],"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/_(_:_:)-50id9":{"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"FixedWidthInteger","type":"codeVoice"},{"type":"text","text":"."}]},"url":"\/documentation\/compute\/simd32\/_(_:_:)-50id9","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"|"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/_(_:_:)-50id9","kind":"symbol","role":"symbol","title":"|(_:_:)","abstract":[],"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/_(_:_:)-5j9uq":{"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/_(_:_:)-5j9uq","title":"\/(_:_:)","url":"\/documentation\/compute\/simd32\/_(_:_:)-5j9uq","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"\/"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:s11SIMDStorageP6ScalarQa","text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"conformance":{"constraints":[{"type":"codeVoice","code":"Scalar"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"FloatingPoint"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"abstract":[],"type":"topic","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/*=(_:_:)-46f5z":{"url":"\/documentation\/compute\/simd32\/*=(_:_:)-46f5z","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/*=(_:_:)-46f5z","kind":"symbol","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"FixedWidthInteger","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"role":"symbol","abstract":[],"title":"*=(_:_:)","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"*=","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:s11SIMDStorageP6ScalarQa","kind":"typeIdentifier","text":"Scalar"},{"text":")","kind":"text"}],"deprecated":true,"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/&*(_:_:)-7snfm":{"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Scalar"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"FixedWidthInteger"},{"type":"text","text":"."}]},"url":"\/documentation\/compute\/simd32\/&*(_:_:)-7snfm","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"&*"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Scalar","preciseIdentifier":"s:s11SIMDStorageP6ScalarQa"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&*(_:_:)-7snfm","kind":"symbol","role":"symbol","title":"&*(_:_:)","abstract":[],"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/zero-2wd1r":{"url":"\/documentation\/compute\/simd32\/zero-2wd1r","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/zero-2wd1r","kind":"symbol","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"FixedWidthInteger","type":"codeVoice"},{"text":".","type":"text"}]},"role":"symbol","abstract":[{"type":"text","text":"A vector with zero in all lanes."}],"title":"zero","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"zero","kind":"identifier"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"}],"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/_(_:_:)-414xo":{"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"FixedWidthInteger","type":"codeVoice"},{"type":"text","text":"."}]},"url":"\/documentation\/compute\/simd32\/_(_:_:)-414xo","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"^","kind":"identifier"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/_(_:_:)-414xo","kind":"symbol","role":"symbol","title":"^(_:_:)","abstract":[],"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/._(_:_:)-89ezy":{"url":"\/documentation\/compute\/simd32\/'._(_:_:)-89ezy","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._(_:_:)-89ezy","kind":"symbol","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Scalar"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Comparable"},{"type":"text","text":"."}]},"role":"symbol","abstract":[{"type":"text","text":"Returns a vector mask with the result of a pointwise greater than"},{"text":" ","type":"text"},{"text":"comparison.","type":"text"}],"title":".>(_:_:)","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":".>","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:s11SIMDStorageP6ScalarQa","text":"Scalar","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s8SIMDMaskV","text":"SIMDMask"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"MaskStorage","preciseIdentifier":"s:s4SIMDP11MaskStorageQa","kind":"typeIdentifier"},{"kind":"text","text":">"}],"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/zero-3kong":{"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"FloatingPoint"},{"type":"text","text":"."}]},"url":"\/documentation\/compute\/simd32\/zero-3kong","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"zero"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/zero-3kong","kind":"symbol","role":"symbol","title":"zero","abstract":[{"text":"A vector with zero in all lanes.","type":"text"}],"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/&-(_:_:)-1e36y":{"url":"\/documentation\/compute\/simd32\/&-(_:_:)-1e36y","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&-(_:_:)-1e36y","kind":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Scalar"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"FixedWidthInteger"},{"text":".","type":"text"}]},"role":"symbol","abstract":[],"title":"&-(_:_:)","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"&-"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:s11SIMDStorageP6ScalarQa","text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/&(_:_:)-6m27n":{"kind":"symbol","type":"topic","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"&","kind":"identifier"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Scalar","preciseIdentifier":"s:s11SIMDStorageP6ScalarQa"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"title":"&(_:_:)","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"FixedWidthInteger"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&(_:_:)-6m27n","abstract":[],"url":"\/documentation\/compute\/simd32\/&(_:_:)-6m27n","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/.!=(_:_:)-968x6":{"url":"\/documentation\/compute\/simd32\/'.!=(_:_:)-968x6","type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/.!=(_:_:)-968x6","role":"symbol","abstract":[{"type":"text","text":"A vector mask with the result of a pointwise inequality comparison."}],"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":".!="},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:s8SIMDMaskV","kind":"typeIdentifier","text":"SIMDMask"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"MaskStorage","preciseIdentifier":"s:s4SIMDP11MaskStorageQa","kind":"typeIdentifier"},{"kind":"text","text":">"}],"title":".!=(_:_:)","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/._=(_:_:)-64co6":{"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Comparable","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"url":"\/documentation\/compute\/simd32\/'._=(_:_:)-64co6","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":".>=","kind":"identifier"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:s11SIMDStorageP6ScalarQa","text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"text":"SIMDMask","kind":"typeIdentifier","preciseIdentifier":"s:s8SIMDMaskV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MaskStorage","preciseIdentifier":"s:s4SIMDP11MaskStorageQa"},{"kind":"text","text":">"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._=(_:_:)-64co6","kind":"symbol","role":"symbol","title":".>=(_:_:)","abstract":[{"type":"text","text":"Returns a vector mask with the result of a pointwise greater than or"},{"type":"text","text":" "},{"type":"text","text":"equal comparison."}],"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/.!=(_:_:)-6dgv1":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":".!="},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Scalar","preciseIdentifier":"s:s11SIMDStorageP6ScalarQa","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"SIMDMask","preciseIdentifier":"s:s8SIMDMaskV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"MaskStorage","preciseIdentifier":"s:s4SIMDP11MaskStorageQa","kind":"typeIdentifier"},{"kind":"text","text":">"}],"url":"\/documentation\/compute\/simd32\/'.!=(_:_:)-6dgv1","type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/.!=(_:_:)-6dgv1","kind":"symbol","title":".!=(_:_:)","abstract":[{"text":"Returns a vector mask with the result of a pointwise inequality comparison.","type":"text"}],"role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/_(_:_:)-474ry":{"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"^"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Scalar","kind":"typeIdentifier","preciseIdentifier":"s:s11SIMDStorageP6ScalarQa"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"url":"\/documentation\/compute\/simd32\/_(_:_:)-474ry","type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/_(_:_:)-474ry","kind":"symbol","title":"^(_:_:)","abstract":[],"role":"symbol","conformance":{"constraints":[{"code":"Scalar","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"FixedWidthInteger","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]}},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/addingProduct(_:_:)-8svnk":{"url":"\/documentation\/compute\/simd32\/addingproduct(_:_:)-8svnk","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"addingProduct","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:s11SIMDStorageP6ScalarQa","text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"type":"topic","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/addingProduct(_:_:)-8svnk","title":"addingProduct(_:_:)","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"FloatingPoint","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"kind":"symbol","abstract":[]},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/_(_:_:)-5y65m":{"title":"^(_:_:)","type":"topic","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"^","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:s11SIMDStorageP6ScalarQa","text":"Scalar"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"kind":"symbol","role":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Scalar"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"FixedWidthInteger"},{"type":"text","text":"."}]},"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/_(_:_:)-5y65m","url":"\/documentation\/compute\/simd32\/_(_:_:)-5y65m","abstract":[]},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/_(_:_:)-pk1j":{"url":"\/documentation\/compute\/simd32\/_(_:_:)-pk1j","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"\/","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:s11SIMDStorageP6ScalarQa","text":"Scalar","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"type":"topic","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/_(_:_:)-pk1j","title":"\/(_:_:)","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Scalar"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"FixedWidthInteger"},{"text":".","type":"text"}]},"abstract":[],"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/-(_:_:)-ily3":{"title":"-(_:_:)","deprecated":true,"abstract":[],"role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"-"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Scalar","preciseIdentifier":"s:s11SIMDStorageP6ScalarQa","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/-(_:_:)-ily3","type":"topic","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"FixedWidthInteger","type":"codeVoice"},{"text":".","type":"text"}]},"url":"\/documentation\/compute\/simd32\/-(_:_:)-ily3"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/-=(_:_:)-1bm21":{"type":"topic","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/-=(_:_:)-1bm21","kind":"symbol","url":"\/documentation\/compute\/simd32\/-=(_:_:)-1bm21","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"-="},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":")","kind":"text"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"FloatingPoint"},{"text":".","type":"text"}]},"abstract":[],"title":"-=(_:_:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/*=(_:_:)-36zit":{"type":"topic","role":"symbol","deprecated":true,"url":"\/documentation\/compute\/simd32\/*=(_:_:)-36zit","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/*=(_:_:)-36zit","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"*="},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"text":")","kind":"text"}],"title":"*=(_:_:)","abstract":[],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Scalar"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"FixedWidthInteger"},{"type":"text","text":"."}]}},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/&-(_:_:)-8s9k4":{"title":"&-(_:_:)","abstract":[],"role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"&-"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&-(_:_:)-8s9k4","type":"topic","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"FixedWidthInteger","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"url":"\/documentation\/compute\/simd32\/&-(_:_:)-8s9k4"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/min()-9a3ey":{"type":"topic","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/min()-9a3ey","kind":"symbol","url":"\/documentation\/compute\/simd32\/min()-9a3ey","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"min"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:s11SIMDStorageP6ScalarQa","text":"Scalar"}],"conformance":{"constraints":[{"code":"Scalar","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"FloatingPoint"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"abstract":[{"type":"text","text":"The least scalar in the vector."}],"title":"min()"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/._=(_:_:)-5htya":{"title":".<=(_:_:)","abstract":[{"type":"text","text":"Returns a vector mask with the result of a pointwise less than or equal"},{"text":" ","type":"text"},{"text":"comparison.","type":"text"}],"role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":".<=","kind":"identifier"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"text":"SIMDMask","kind":"typeIdentifier","preciseIdentifier":"s:s8SIMDMaskV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"MaskStorage","preciseIdentifier":"s:s4SIMDP11MaskStorageQa","kind":"typeIdentifier"},{"text":">","kind":"text"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._=(_:_:)-5htya","type":"topic","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Scalar"},{"type":"text","text":" conforms to "},{"code":"Comparable","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"url":"\/documentation\/compute\/simd32\/'._=(_:_:)-5htya"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/&=(_:_:)-5eswa":{"type":"topic","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&=(_:_:)-5eswa","kind":"symbol","url":"\/documentation\/compute\/simd32\/&=(_:_:)-5eswa","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"&="},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:s11SIMDStorageP6ScalarQa","kind":"typeIdentifier","text":"Scalar"},{"kind":"text","text":")"}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Scalar"},{"text":" conforms to ","type":"text"},{"code":"FixedWidthInteger","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"abstract":[],"title":"&=(_:_:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/sum()":{"title":"sum()","abstract":[{"text":"The sum of the scalars in the vector.","type":"text"}],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"sum","kind":"identifier"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:s11SIMDStorageP6ScalarQa","text":"Scalar"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/sum()","type":"topic","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Scalar"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"FloatingPoint"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"url":"\/documentation\/compute\/simd32\/sum()"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/&(_:_:)-5hn2d":{"type":"topic","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&(_:_:)-5hn2d","kind":"symbol","url":"\/documentation\/compute\/simd32\/&(_:_:)-5hn2d","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"&"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:s11SIMDStorageP6ScalarQa","text":"Scalar","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Scalar"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"FixedWidthInteger"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"abstract":[],"title":"&(_:_:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/min()-5cvw3":{"title":"min()","abstract":[{"type":"text","text":"The least element in the vector."}],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"min","kind":"identifier"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Scalar","kind":"typeIdentifier","preciseIdentifier":"s:s11SIMDStorageP6ScalarQa"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/min()-5cvw3","type":"topic","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Scalar"},{"text":" conforms to ","type":"text"},{"code":"Comparable","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"url":"\/documentation\/compute\/simd32\/min()-5cvw3"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/_(_:_:)-6zy":{"type":"topic","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/_(_:_:)-6zy","kind":"symbol","url":"\/documentation\/compute\/simd32\/_(_:_:)-6zy","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"%"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Scalar","kind":"typeIdentifier","preciseIdentifier":"s:s11SIMDStorageP6ScalarQa"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"conformance":{"constraints":[{"type":"codeVoice","code":"Scalar"},{"type":"text","text":" conforms to "},{"code":"FixedWidthInteger","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"abstract":[],"title":"%(_:_:)"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/-(_:_:)-27153":{"title":"-(_:_:)","abstract":[],"role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"-","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/-(_:_:)-27153","type":"topic","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Scalar"},{"text":" conforms to ","type":"text"},{"code":"FloatingPoint","type":"codeVoice"},{"text":".","type":"text"}]},"url":"\/documentation\/compute\/simd32\/-(_:_:)-27153"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/&__(_:_:)-9hia9":{"type":"topic","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&__(_:_:)-9hia9","kind":"symbol","url":"\/documentation\/compute\/simd32\/&__(_:_:)-9hia9","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"&<<"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Scalar"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"FixedWidthInteger"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"abstract":[],"title":"&<<(_:_:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/+(_:_:)-5rl9l":{"title":"+(_:_:)","role":"symbol","conformance":{"constraints":[{"code":"Scalar","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"FixedWidthInteger"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/+(_:_:)-5rl9l","kind":"symbol","type":"topic","deprecated":true,"abstract":[],"url":"\/documentation\/compute\/simd32\/+(_:_:)-5rl9l","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"+"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Scalar","kind":"typeIdentifier","preciseIdentifier":"s:s11SIMDStorageP6ScalarQa"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/_=(_:_:)-20gc6":{"title":"\/=(_:_:)","abstract":[],"role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"\/="},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Scalar","kind":"typeIdentifier","preciseIdentifier":"s:s11SIMDStorageP6ScalarQa"},{"kind":"text","text":")"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/_=(_:_:)-20gc6","type":"topic","conformance":{"constraints":[{"code":"Scalar","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"FloatingPoint","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"url":"\/documentation\/compute\/simd32\/_=(_:_:)-20gc6"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/-(_:)-2kg0":{"title":"-(_:)","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"-","kind":"identifier"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/-(_:)-2kg0","url":"\/documentation\/compute\/simd32\/-(_:)-2kg0","abstract":[],"type":"topic","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"FixedWidthInteger","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"deprecated":true,"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/_(_:_:)-4ucgx":{"url":"\/documentation\/compute\/simd32\/_(_:_:)-4ucgx","type":"topic","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Scalar"},{"type":"text","text":" conforms to "},{"code":"FloatingPoint","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"title":"\/(_:_:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/_(_:_:)-4ucgx","abstract":[],"kind":"symbol","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"\/"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/*(_:_:)-4x7hq":{"role":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Scalar"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"FloatingPoint"},{"type":"text","text":"."}]},"type":"topic","title":"*(_:_:)","abstract":[],"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"*"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s11SIMDStorageP6ScalarQa","text":"Scalar"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/*(_:_:)-4x7hq","kind":"symbol","url":"\/documentation\/compute\/simd32\/*(_:_:)-4x7hq"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/._=(_:_:)-2c2t0":{"type":"topic","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._=(_:_:)-2c2t0","kind":"symbol","url":"\/documentation\/compute\/simd32\/'._=(_:_:)-2c2t0","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":".>="},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Scalar","preciseIdentifier":"s:s11SIMDStorageP6ScalarQa"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s8SIMDMaskV","text":"SIMDMask"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"MaskStorage","preciseIdentifier":"s:s4SIMDP11MaskStorageQa","kind":"typeIdentifier"},{"text":">","kind":"text"}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Comparable"},{"type":"text","text":"."}]},"abstract":[{"text":"Returns a vector mask with the result of a pointwise greater than or","type":"text"},{"text":" ","type":"text"},{"text":"equal comparison.","type":"text"}],"title":".>=(_:_:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/&__=(_:_:)-3ali8":{"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Scalar"},{"type":"text","text":" conforms to "},{"code":"FixedWidthInteger","type":"codeVoice"},{"text":".","type":"text"}]},"url":"\/documentation\/compute\/simd32\/&__=(_:_:)-3ali8","role":"symbol","type":"topic","kind":"symbol","title":"&>>=(_:_:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&__=(_:_:)-3ali8","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"&>>="},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Scalar","kind":"typeIdentifier","preciseIdentifier":"s:s11SIMDStorageP6ScalarQa"},{"kind":"text","text":")"}],"abstract":[]},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/addingProduct(_:_:)-8gka":{"abstract":[],"type":"topic","url":"\/documentation\/compute\/simd32\/addingproduct(_:_:)-8gka","kind":"symbol","role":"symbol","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"FloatingPoint","type":"codeVoice"},{"type":"text","text":"."}]},"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"addingProduct"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/addingProduct(_:_:)-8gka","title":"addingProduct(_:_:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/random(in:using:)-7fl57":{"title":"random(in:using:)","abstract":[{"text":"Returns a vector with random values from within the specified range in","type":"text"},{"text":" ","type":"text"},{"text":"all lanes, using the given generator as a source for randomness.","type":"text"}],"role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"random","kind":"identifier"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"in","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Range","kind":"typeIdentifier","preciseIdentifier":"s:Sn"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Scalar","preciseIdentifier":"s:s11SIMDStorageP6ScalarQa"},{"kind":"text","text":">, "},{"text":"using","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/random(in:using:)-7fl57","type":"topic","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Scalar"},{"text":" conforms to ","type":"text"},{"code":"FixedWidthInteger","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"url":"\/documentation\/compute\/simd32\/random(in:using:)-7fl57"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/-(_:)-719ie":{"type":"topic","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/-(_:)-719ie","kind":"symbol","url":"\/documentation\/compute\/simd32\/-(_:)-719ie","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"-","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Scalar"},{"type":"text","text":" conforms to "},{"code":"FloatingPoint","type":"codeVoice"},{"text":".","type":"text"}]},"abstract":[],"title":"-(_:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/-(_:_:)-8y206":{"title":"-(_:_:)","abstract":[],"role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"-","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Scalar","preciseIdentifier":"s:s11SIMDStorageP6ScalarQa","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/-(_:_:)-8y206","type":"topic","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Scalar"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"FloatingPoint"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"url":"\/documentation\/compute\/simd32\/-(_:_:)-8y206"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/&=(_:_:)-9jgzy":{"type":"topic","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&=(_:_:)-9jgzy","kind":"symbol","url":"\/documentation\/compute\/simd32\/&=(_:_:)-9jgzy","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"&="},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":")"}],"conformance":{"constraints":[{"type":"codeVoice","code":"Scalar"},{"type":"text","text":" conforms to "},{"code":"FixedWidthInteger","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"abstract":[],"title":"&=(_:_:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/&__=(_:_:)-762kk":{"title":"&>>=(_:_:)","abstract":[],"role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"&>>="},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":")"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&__=(_:_:)-762kk","type":"topic","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Scalar"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"FixedWidthInteger"},{"type":"text","text":"."}]},"url":"\/documentation\/compute\/simd32\/&__=(_:_:)-762kk"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/round(_:)":{"type":"topic","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/round(_:)","kind":"symbol","url":"\/documentation\/compute\/simd32\/round(_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"round","kind":"identifier"},{"kind":"text","text":"("},{"text":"FloatingPointRoundingRule","kind":"typeIdentifier","preciseIdentifier":"s:s25FloatingPointRoundingRuleO"},{"kind":"text","text":")"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Scalar"},{"text":" conforms to ","type":"text"},{"code":"FloatingPoint","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"abstract":[],"title":"round(_:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/formSquareRoot()":{"title":"formSquareRoot()","abstract":[],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"formSquareRoot"},{"text":"()","kind":"text"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/formSquareRoot()","type":"topic","conformance":{"constraints":[{"type":"codeVoice","code":"Scalar"},{"type":"text","text":" conforms to "},{"code":"FloatingPoint","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"url":"\/documentation\/compute\/simd32\/formsquareroot()"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/nonzeroBitCount":{"type":"topic","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/nonzeroBitCount","kind":"symbol","url":"\/documentation\/compute\/simd32\/nonzerobitcount","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"nonzeroBitCount","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Scalar"},{"type":"text","text":" conforms to "},{"code":"FixedWidthInteger","type":"codeVoice"},{"type":"text","text":"."}]},"abstract":[],"title":"nonzeroBitCount"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/description":{"title":"description","abstract":[{"text":"A textual description of the vector.","type":"text"}],"role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"description"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/description","type":"topic","url":"\/documentation\/compute\/simd32\/description"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/_(_:_:)-34uwb":{"type":"topic","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/_(_:_:)-34uwb","kind":"symbol","url":"\/documentation\/compute\/simd32\/_(_:_:)-34uwb","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"%","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"FixedWidthInteger"},{"text":".","type":"text"}]},"abstract":[],"title":"%(_:_:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/replacing(with:where:)-3v5ph":{"title":"replacing(with:where:)","abstract":[{"type":"text","text":"Returns a copy of this vector, with elements replaced by elements of"},{"text":" ","type":"text"},{"type":"codeVoice","code":"other"},{"text":" in the lanes where ","type":"text"},{"code":"mask","type":"codeVoice"},{"type":"text","text":" is "},{"type":"codeVoice","code":"true"},{"text":".","type":"text"}],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"replacing","kind":"identifier"},{"kind":"text","text":"("},{"text":"with","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"where"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s8SIMDMaskV","text":"SIMDMask"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"MaskStorage","kind":"typeIdentifier","preciseIdentifier":"s:s4SIMDP11MaskStorageQa"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/replacing(with:where:)-3v5ph","type":"topic","url":"\/documentation\/compute\/simd32\/replacing(with:where:)-3v5ph"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/+=(_:_:)-318n3":{"type":"topic","role":"symbol","deprecated":true,"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/+=(_:_:)-318n3","kind":"symbol","url":"\/documentation\/compute\/simd32\/+=(_:_:)-318n3","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"+=","kind":"identifier"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Scalar","preciseIdentifier":"s:s11SIMDStorageP6ScalarQa"},{"text":")","kind":"text"}],"conformance":{"constraints":[{"type":"codeVoice","code":"Scalar"},{"type":"text","text":" conforms to "},{"code":"FixedWidthInteger","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"abstract":[],"title":"+=(_:_:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/clamped(lowerBound:upperBound:)-5edvy":{"title":"clamped(lowerBound:upperBound:)","kind":"symbol","abstract":[],"conformance":{"constraints":[{"code":"Scalar","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"FloatingPoint","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"url":"\/documentation\/compute\/simd32\/clamped(lowerbound:upperbound:)-5edvy","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"clamped","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"lowerBound"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"text":"upperBound","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/clamped(lowerBound:upperBound:)-5edvy","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/._(_:_:)-4ahoi":{"kind":"symbol","abstract":[{"type":"text","text":"Returns a vector mask with the result of a pointwise greater than"},{"text":" ","type":"text"},{"type":"text","text":"comparison."}],"url":"\/documentation\/compute\/simd32\/'._(_:_:)-4ahoi","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/._(_:_:)-4ahoi","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":".>"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Scalar","kind":"typeIdentifier","preciseIdentifier":"s:s11SIMDStorageP6ScalarQa"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s8SIMDMaskV","text":"SIMDMask"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:s4SIMDP11MaskStorageQa","kind":"typeIdentifier","text":"MaskStorage"},{"text":">","kind":"text"}],"type":"topic","conformance":{"constraints":[{"code":"Scalar","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Comparable"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"title":".>(_:_:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/_=(_:_:)-2okko":{"title":"\/=(_:_:)","abstract":[],"role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"\/="},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":")","kind":"text"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/_=(_:_:)-2okko","type":"topic","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Scalar"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"FloatingPoint"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"url":"\/documentation\/compute\/simd32\/_=(_:_:)-2okko"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"SIMD32","kind":"identifier"}],"title":"SIMD32","navigatorTitle":[{"kind":"identifier","text":"SIMD32"}],"type":"topic","abstract":[{"type":"text","text":"A vector of 32 scalar values."}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32","url":"\/documentation\/compute\/simd32","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/_=(_:_:)-2dyv7":{"type":"topic","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/_=(_:_:)-2dyv7","kind":"symbol","url":"\/documentation\/compute\/simd32\/_=(_:_:)-2dyv7","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"\/=","kind":"identifier"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":")","kind":"text"}],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Scalar"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"FixedWidthInteger"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"abstract":[],"title":"\/=(_:_:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/hash(into:)":{"title":"hash(into:)","abstract":[{"text":"Hashes the elements of the vector using the given hasher.","type":"text"}],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"hash","kind":"identifier"},{"text":"(","kind":"text"},{"text":"into","kind":"externalParam"},{"kind":"text","text":": "},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"text":"Hasher","kind":"typeIdentifier","preciseIdentifier":"s:s6HasherV"},{"text":")","kind":"text"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/hash(into:)","type":"topic","url":"\/documentation\/compute\/simd32\/hash(into:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/addProduct(_:_:)-65sbs":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/addProduct(_:_:)-65sbs","role":"symbol","conformance":{"constraints":[{"code":"Scalar","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"FloatingPoint"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"kind":"symbol","url":"\/documentation\/compute\/simd32\/addproduct(_:_:)-65sbs","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"addProduct"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":")","kind":"text"}],"title":"addProduct(_:_:)","type":"topic","abstract":[]},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/==(_:_:)":{"type":"topic","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/==(_:_:)","kind":"symbol","url":"\/documentation\/compute\/simd32\/==(_:_:)","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"==","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"abstract":[{"text":"Returns a Boolean value indicating whether two vectors are equal.","type":"text"}],"title":"==(_:_:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/random(in:)-82yup":{"title":"random(in:)","abstract":[{"text":"Returns a vector with random values from within the specified range in","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"all lanes."}],"role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"random","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"in"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Range","preciseIdentifier":"s:Sn"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"Scalar","kind":"typeIdentifier","preciseIdentifier":"s:s11SIMDStorageP6ScalarQa"},{"text":">) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/random(in:)-82yup","type":"topic","conformance":{"constraints":[{"code":"Scalar","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"FixedWidthInteger","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"url":"\/documentation\/compute\/simd32\/random(in:)-82yup"}}}