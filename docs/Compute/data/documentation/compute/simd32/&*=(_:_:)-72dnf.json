{"kind":"symbol","sections":[],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"&*="},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"internalParam","text":"a"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32","text":"SIMD32","kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"b","kind":"internalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s6SIMD32V","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32","text":"SIMD32"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":">)"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/simd32\/&*=(_:_:)-72dnf"]}],"metadata":{"extendedModule":"Swift","symbolKind":"op","modules":[{"name":"Compute","relatedModules":["Swift"]}],"externalID":"s:s6SIMD32Vss4Int8VRszrlE3ameoiyyAByADGz_AFtFZ","title":"&*=(_:_:)","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"&*=","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"preciseIdentifier":"s:s6SIMD32V","kind":"typeIdentifier","text":"SIMD32"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V","text":"SIMD32"},{"kind":"text","text":"<"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">)","kind":"text"}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Int8","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"roleHeading":"Operator"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&*=(_:_:)-72dnf"},"abstract":[{"text":"Updates the left hand side with the pointwise wrapping product of two","type":"text"},{"text":" ","type":"text"},{"text":"vectors.","type":"text"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32"]]},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/&*=(_:_:)-72dnf":{"role":"symbol","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"&*=","kind":"identifier"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"text":"SIMD32","kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Scalar"},{"text":">, ","kind":"text"},{"text":"SIMD32","kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V"},{"text":"<","kind":"text"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">)","kind":"text"}],"title":"&*=(_:_:)","url":"\/documentation\/compute\/simd32\/&*=(_:_:)-72dnf","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Int8"},{"type":"text","text":"."}]},"abstract":[{"type":"text","text":"Updates the left hand side with the pointwise wrapping product of two"},{"type":"text","text":" "},{"type":"text","text":"vectors."}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&*=(_:_:)-72dnf"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"SIMD32","kind":"identifier"}],"title":"SIMD32","navigatorTitle":[{"kind":"identifier","text":"SIMD32"}],"type":"topic","abstract":[{"type":"text","text":"A vector of 32 scalar values."}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32","url":"\/documentation\/compute\/simd32","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"}}}