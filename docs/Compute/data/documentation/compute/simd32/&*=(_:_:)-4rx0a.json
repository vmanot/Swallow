{"kind":"symbol","identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&*=(_:_:)-4rx0a","interfaceLanguage":"swift"},"metadata":{"roleHeading":"Operator","modules":[{"relatedModules":["Swift"],"name":"Compute"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"UInt8","type":"codeVoice"},{"type":"text","text":"."}]},"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"&*="},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"text":"SIMD32","preciseIdentifier":"s:s6SIMD32V","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"SIMD32","kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Scalar"},{"text":">)","kind":"text"}],"symbolKind":"op","externalID":"s:s6SIMD32Vss5UInt8VRszrlE3ameoiyyAByADGz_AFtFZ","role":"symbol","title":"&*=(_:_:)","extendedModule":"Swift"},"schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32"]]},"abstract":[{"type":"text","text":"Updates the left hand side with the pointwise wrapping product of two"},{"text":" ","type":"text"},{"type":"text","text":"vectors."}],"variants":[{"paths":["\/documentation\/compute\/simd32\/&*=(_:_:)-4rx0a"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"&*=","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"a","kind":"internalParam"},{"kind":"text","text":": "},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32","preciseIdentifier":"s:s6SIMD32V","text":"SIMD32"},{"kind":"text","text":"<"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"b","kind":"internalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s6SIMD32V","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32","text":"SIMD32","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Scalar"},{"text":">)","kind":"text"}]}],"kind":"declarations"}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"SIMD32","kind":"identifier"}],"title":"SIMD32","navigatorTitle":[{"kind":"identifier","text":"SIMD32"}],"type":"topic","abstract":[{"type":"text","text":"A vector of 32 scalar values."}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32","url":"\/documentation\/compute\/simd32","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/&*=(_:_:)-4rx0a":{"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Scalar"},{"text":" is ","type":"text"},{"code":"UInt8","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/&*=(_:_:)-4rx0a","url":"\/documentation\/compute\/simd32\/&*=(_:_:)-4rx0a","type":"topic","abstract":[{"type":"text","text":"Updates the left hand side with the pointwise wrapping product of two"},{"type":"text","text":" "},{"type":"text","text":"vectors."}],"role":"symbol","title":"&*=(_:_:)","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"&*=","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V","text":"SIMD32"},{"kind":"text","text":"<"},{"text":"Scalar","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD32V","text":"SIMD32"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Scalar"},{"kind":"text","text":">)"}],"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"}}}