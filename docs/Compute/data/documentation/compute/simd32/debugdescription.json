{"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/CustomDebugStringConvertible-Implementations"]]},"kind":"symbol","schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/debugDescription","interfaceLanguage":"swift"},"abstract":[{"text":"A textual representation of this instance, suitable for debugging.","type":"text"}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"debugDescription"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String","preciseIdentifier":"s:SS"},{"text":" { ","kind":"text"},{"text":"get","kind":"keyword"},{"text":" }","kind":"text"}],"platforms":["macOS"]}],"kind":"declarations"},{"content":[{"level":2,"anchor":"discussion","type":"heading","text":"Discussion"},{"inlineContent":[{"type":"text","text":"Calling this property directly is discouraged. Instead, convert an"},{"type":"text","text":" "},{"type":"text","text":"instance of any type to a string by using the "},{"code":"String(reflecting:)","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"initializer. This initializer works with any type, and uses the custom"},{"type":"text","text":" "},{"code":"debugDescription","type":"codeVoice"},{"type":"text","text":" property for types that conform to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"CustomDebugStringConvertible"},{"text":":","type":"text"}],"type":"paragraph"},{"syntax":null,"type":"codeListing","code":["struct Point: CustomDebugStringConvertible {","    let x: Int, y: Int","","    var debugDescription: String {","        return \"(\\(x), \\(y))\"","    }","}","","let p = Point(x: 21, y: 30)","let s = String(reflecting: p)","print(s)","\/\/ Prints \"(21, 30)\""]},{"inlineContent":[{"text":"The conversion of ","type":"text"},{"code":"p","type":"codeVoice"},{"text":" to a string in the assignment to ","type":"text"},{"type":"codeVoice","code":"s"},{"type":"text","text":" uses the"},{"type":"text","text":" "},{"type":"codeVoice","code":"Point"},{"type":"text","text":" typeâ€™s "},{"type":"codeVoice","code":"debugDescription"},{"text":" property.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"metadata":{"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"debugDescription","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Scalar"},{"type":"text","text":" conforms to "},{"code":"SIMDScalar","type":"codeVoice"},{"text":".","type":"text"}]},"role":"symbol","extendedModule":"Swift","externalID":"s:s6SIMD32V16debugDescriptionSSvp","roleHeading":"Instance Property","modules":[{"relatedModules":["Swift"],"name":"Compute"}],"title":"debugDescription","symbolKind":"property"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/simd32\/debugdescription"]}],"sections":[],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/debugDescription":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/debugDescription","type":"topic","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"debugDescription"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"}],"role":"symbol","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Scalar"},{"text":" conforms to ","type":"text"},{"code":"SIMDScalar","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"url":"\/documentation\/compute\/simd32\/debugdescription","abstract":[{"text":"A textual representation of this instance, suitable for debugging.","type":"text"}],"title":"debugDescription"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"SIMD32","kind":"identifier"}],"title":"SIMD32","navigatorTitle":[{"kind":"identifier","text":"SIMD32"}],"type":"topic","abstract":[{"type":"text","text":"A vector of 32 scalar values."}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32","url":"\/documentation\/compute\/simd32","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32/CustomDebugStringConvertible-Implementations":{"role":"collectionGroup","kind":"article","title":"CustomDebugStringConvertible Implementations","url":"\/documentation\/compute\/simd32\/customdebugstringconvertible-implementations","abstract":[],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32\/CustomDebugStringConvertible-Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/String":{"type":"topic","navigatorTitle":[{"kind":"identifier","text":"String"}],"title":"String","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"String","kind":"identifier"}],"abstract":[{"type":"text","text":"A Unicode string value that is a collection of characters."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String","kind":"symbol","role":"symbol","url":"\/documentation\/compute\/string"}}}