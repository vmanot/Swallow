{"kind":"symbol","variants":[{"paths":["\/documentation\/compute\/unicode\/scalar\/'.._(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"Returns a partial range up to, but not including, its upper bound."}],"schemaVersion":{"minor":3,"patch":0,"major":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"..<"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"kind":"internalParam","text":"maximum"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/PartialRangeUpTo","preciseIdentifier":"s:s16PartialRangeUpToV","text":"PartialRangeUpTo"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}]}]},{"kind":"parameters","parameters":[{"name":"maximum","content":[{"inlineContent":[{"type":"text","text":"The upper bound for the range."}],"type":"paragraph"}]}]},{"kind":"content","content":[{"level":2,"anchor":"discussion","text":"Discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"Use the prefix half-open range operator (prefix ","type":"text"},{"code":"..<","type":"codeVoice"},{"type":"text","text":") to create a"},{"text":" ","type":"text"},{"type":"text","text":"partial range of any type that conforms to the "},{"type":"codeVoice","code":"Comparable"},{"type":"text","text":" protocol."},{"type":"text","text":" "},{"type":"text","text":"This example creates a "},{"type":"codeVoice","code":"PartialRangeUpTo<Double>"},{"type":"text","text":" instance that includes"},{"type":"text","text":" "},{"text":"any value less than ","type":"text"},{"code":"5.0","type":"codeVoice"},{"text":".","type":"text"}]},{"code":["let upToFive = ..<5.0","","upToFive.contains(3.14)       \/\/ true","upToFive.contains(6.28)       \/\/ false","upToFive.contains(5.0)        \/\/ false"],"type":"codeListing","syntax":null},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can use this type of partial range of a collection’s indices to"},{"text":" ","type":"text"},{"text":"represent the range from the start of the collection up to, but not","type":"text"},{"type":"text","text":" "},{"type":"text","text":"including, the partial range’s upper bound."}]},{"type":"codeListing","syntax":null,"code":["let numbers = [10, 20, 30, 40, 50, 60, 70]","print(numbers[..<3])","\/\/ Prints \"[10, 20, 30]\""]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"maximum"},{"type":"text","text":" must compare equal to itself (i.e. cannot be NaN)."}]}],"style":"note","type":"aside","name":"Precondition"}]}],"metadata":{"extendedModule":"Swift","role":"symbol","roleHeading":"Operator","title":"..<(_:)","externalID":"s:SLsE3zzlopys16PartialRangeUpToVyxGxFZ::SYNTHESIZED::s:s7UnicodeO6ScalarV","symbolKind":"op","modules":[{"relatedModules":["Swift"],"name":"Compute"}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"..<","kind":"identifier"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:s16PartialRangeUpToV","kind":"typeIdentifier","text":"PartialRangeUpTo"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":">","kind":"text"}]},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Unicode","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Unicode\/Scalar","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Unicode\/Scalar\/Comparable-Implementations"]]},"sections":[],"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Unicode\/Scalar\/.._(_:)","interfaceLanguage":"swift"},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Unicode/Scalar":{"title":"Unicode.Scalar","type":"topic","kind":"symbol","navigatorTitle":[{"text":"Scalar","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Scalar","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Unicode\/Scalar","abstract":[{"type":"text","text":"A Unicode scalar value."}],"role":"symbol","url":"\/documentation\/compute\/unicode\/scalar"},"doc://com.swallow.documentation.Compute/documentation/Compute/Unicode":{"url":"\/documentation\/compute\/unicode","title":"Unicode","abstract":[{"type":"text","text":"A namespace for Unicode utilities."}],"type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"Unicode","kind":"identifier"}],"navigatorTitle":[{"text":"Unicode","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Unicode"},"doc://com.swallow.documentation.Compute/documentation/Compute/Unicode/Scalar/.._(_:)":{"kind":"symbol","abstract":[{"type":"text","text":"Returns a partial range up to, but not including, its upper bound."}],"title":"..<(_:)","type":"topic","role":"symbol","url":"\/documentation\/compute\/unicode\/scalar\/'.._(_:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Unicode\/Scalar\/.._(_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"..<"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"text":"PartialRangeUpTo","preciseIdentifier":"s:s16PartialRangeUpToV","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Unicode/Scalar/Comparable-Implementations":{"kind":"article","role":"collectionGroup","type":"topic","abstract":[],"url":"\/documentation\/compute\/unicode\/scalar\/comparable-implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Unicode\/Scalar\/Comparable-Implementations","title":"Comparable Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/PartialRangeUpTo":{"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"PartialRangeUpTo","kind":"identifier"}],"type":"topic","url":"\/documentation\/compute\/partialrangeupto","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/PartialRangeUpTo","abstract":[{"type":"text","text":"A partial half-open interval up to, but not including, an upper bound."}],"navigatorTitle":[{"text":"PartialRangeUpTo","kind":"identifier"}],"title":"PartialRangeUpTo"}}}