{"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"transcodedLength"},{"text":"<","kind":"text"},{"text":"Input","kind":"genericParameter"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Encoding"},{"text":">(","kind":"text"},{"text":"of","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"input"},{"kind":"text","text":": "},{"text":"Input","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"decodedAs","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"sourceEncoding"},{"text":": ","kind":"text"},{"text":"Encoding","kind":"typeIdentifier"},{"text":".Type, ","kind":"text"},{"text":"repairingIllFormedSequences","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") -> (count"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","text":"Int","kind":"typeIdentifier"},{"text":", isASCII","kind":"text"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":")? "},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"text":"Input","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"IteratorProtocol","kind":"typeIdentifier","preciseIdentifier":"s:St","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/IteratorProtocol"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Encoding"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"_UnicodeEncoding"},{"text":", ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":".","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/IteratorProtocol\/Element","kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:St7ElementQa"},{"text":" == ","kind":"text"},{"text":"Encoding","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"CodeUnit","preciseIdentifier":"s:s16_UnicodeEncodingP8CodeUnitQa","kind":"typeIdentifier"}]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"An iterator of code units to be translated, encoded as"},{"text":" ","type":"text"},{"type":"codeVoice","code":"sourceEncoding"},{"text":". If ","type":"text"},{"type":"codeVoice","code":"repairingIllFormedSequences"},{"type":"text","text":" is "},{"type":"codeVoice","code":"true"},{"type":"text","text":", the"},{"text":" ","type":"text"},{"type":"text","text":"entire iterator will be exhausted. Otherwise, iteration will stop if"},{"text":" ","type":"text"},{"text":"an ill-formed sequence is detected.","type":"text"}]}],"name":"input"},{"name":"sourceEncoding","content":[{"inlineContent":[{"type":"text","text":"The Unicode encoding of "},{"code":"input","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Pass "},{"code":"true","type":"codeVoice"},{"type":"text","text":" to measure the length of"},{"type":"text","text":" "},{"type":"codeVoice","code":"input"},{"text":" even when ","type":"text"},{"code":"input","type":"codeVoice"},{"text":" contains ill-formed sequences. Each","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"ill-formed sequence is replaced with a Unicode replacement character"},{"text":" ","type":"text"},{"text":"(","type":"text"},{"type":"codeVoice","code":"\"\\u{FFFD}\""},{"text":") and is measured as such. Pass ","type":"text"},{"code":"false","type":"codeVoice"},{"text":" to immediately","type":"text"},{"type":"text","text":" "},{"text":"stop measuring ","type":"text"},{"type":"codeVoice","code":"input"},{"type":"text","text":" when an ill-formed sequence is encountered."}]}],"name":"repairingIllFormedSequences"}]},{"kind":"content","content":[{"text":"Return Value","anchor":"return-value","type":"heading","level":2},{"inlineContent":[{"text":"A tuple containing the number of UTF-16 code units required to","type":"text"},{"text":" ","type":"text"},{"text":"encode ","type":"text"},{"type":"codeVoice","code":"input"},{"type":"text","text":" and a Boolean value that indicates whether the "},{"code":"input","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"contained only ASCII characters. If "},{"code":"repairingIllFormedSequences","type":"codeVoice"},{"text":" is","type":"text"},{"text":" ","type":"text"},{"code":"false","type":"codeVoice"},{"text":" and an ill-formed sequence is detected, this method returns","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"}],"type":"paragraph"}]},{"content":[{"text":"Discussion","anchor":"discussion","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"The following example finds the length of the UTF-16 encoding of the"},{"text":" ","type":"text"},{"type":"text","text":"string "},{"type":"codeVoice","code":"\"Fermata ùÑê\""},{"type":"text","text":", starting with its UTF-8 representation."}],"type":"paragraph"},{"code":["let fermata = \"Fermata ùÑê\"","let bytes = fermata.utf8","print(Array(bytes))","\/\/ Prints \"[70, 101, 114, 109, 97, 116, 97, 32, 240, 157, 132, 144]\"","","let result = UTF16.transcodedLength(of: bytes.makeIterator(),","                                    decodedAs: UTF8.self,","                                    repairingIllFormedSequences: false)","print(result)","\/\/ Prints \"Optional((count: 10, isASCII: false))\""],"type":"codeListing","syntax":null}],"kind":"content"}],"kind":"symbol","sections":[],"metadata":{"roleHeading":"Type Method","symbolKind":"method","modules":[{"name":"Compute","relatedModules":["Swift"]}],"title":"transcodedLength(of:decodedAs:repairingIllFormedSequences:)","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"transcodedLength"},{"kind":"text","text":"<"},{"text":"Input","kind":"genericParameter"},{"kind":"text","text":", "},{"text":"Encoding","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"of","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Input"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"decodedAs"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Encoding"},{"kind":"text","text":".Type, "},{"text":"repairingIllFormedSequences","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":") -> (count"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":", isASCII","kind":"text"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":")?"}],"extendedModule":"Swift","externalID":"s:s7UnicodeO5UTF16O16transcodedLength2of9decodedAs27repairingIllFormedSequencesSi5count_Sb7isASCIItSgx_q_mSbtStRzs01_A8EncodingR_8CodeUnitQy_7ElementRtzr0_lFZ"},"schemaVersion":{"major":0,"patch":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Unicode","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Unicode\/UTF16"]]},"abstract":[{"type":"text","text":"Returns the number of UTF-16 code units required for the given code unit"},{"type":"text","text":" "},{"type":"text","text":"sequence when transcoded to UTF-16, and a Boolean value indicating"},{"text":" ","type":"text"},{"type":"text","text":"whether the sequence was found to contain only ASCII characters."}],"variants":[{"paths":["\/documentation\/compute\/unicode\/utf16\/transcodedlength(of:decodedas:repairingillformedsequences:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Unicode\/UTF16\/transcodedLength(of:decodedAs:repairingIllFormedSequences:)","interfaceLanguage":"swift"},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Unicode/UTF16":{"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"UTF16"}],"abstract":[],"fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"UTF16"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Unicode\/UTF16","url":"\/documentation\/compute\/unicode\/utf16","type":"topic","kind":"symbol","title":"Unicode.UTF16"},"doc://com.swallow.documentation.Compute/documentation/Compute/Bool":{"url":"\/documentation\/compute\/bool","role":"symbol","title":"Bool","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Bool","kind":"identifier"}],"abstract":[{"type":"text","text":"A value type whose instances are either "},{"type":"codeVoice","code":"true"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"false"},{"text":".","type":"text"}],"navigatorTitle":[{"text":"Bool","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bool","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","abstract":[{"type":"text","text":"A signed integer value type."}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Int","kind":"identifier"}],"navigatorTitle":[{"text":"Int","kind":"identifier"}],"title":"Int","url":"\/documentation\/compute\/int","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Unicode/UTF16/transcodedLength(of:decodedAs:repairingIllFormedSequences:)":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Unicode\/UTF16\/transcodedLength(of:decodedAs:repairingIllFormedSequences:)","type":"topic","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"transcodedLength","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Input"},{"text":", ","kind":"text"},{"text":"Encoding","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"of"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":", "},{"text":"decodedAs","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Encoding","kind":"typeIdentifier"},{"kind":"text","text":".Type, "},{"kind":"externalParam","text":"repairingIllFormedSequences"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"text":") -> (count","kind":"text"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":", isASCII","kind":"text"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"kind":"text","text":")?"}],"abstract":[{"type":"text","text":"Returns the number of UTF-16 code units required for the given code unit"},{"text":" ","type":"text"},{"type":"text","text":"sequence when transcoded to UTF-16, and a Boolean value indicating"},{"type":"text","text":" "},{"text":"whether the sequence was found to contain only ASCII characters.","type":"text"}],"role":"symbol","title":"transcodedLength(of:decodedAs:repairingIllFormedSequences:)","kind":"symbol","url":"\/documentation\/compute\/unicode\/utf16\/transcodedlength(of:decodedas:repairingillformedsequences:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/IteratorProtocol":{"url":"\/documentation\/compute\/iteratorprotocol","navigatorTitle":[{"kind":"identifier","text":"IteratorProtocol"}],"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"IteratorProtocol"}],"abstract":[{"type":"text","text":"A type that supplies the values of a sequence one at a time."}],"type":"topic","title":"IteratorProtocol","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/IteratorProtocol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Unicode":{"url":"\/documentation\/compute\/unicode","title":"Unicode","abstract":[{"type":"text","text":"A namespace for Unicode utilities."}],"type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"Unicode","kind":"identifier"}],"navigatorTitle":[{"text":"Unicode","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Unicode"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/IteratorProtocol/Element":{"fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"text":"Element","kind":"identifier"}],"type":"topic","url":"\/documentation\/compute\/iteratorprotocol\/element","abstract":[{"text":"The type of element traversed by the iterator.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/IteratorProtocol\/Element","title":"Element","kind":"symbol","required":true,"role":"symbol"}}}