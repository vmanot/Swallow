{"topicSections":[{"anchor":"Operators","identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Unicode\/UTF32\/!=(_:_:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Unicode\/UTF32\/==(_:)"],"generated":true,"title":"Operators"},{"identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Unicode\/UTF32\/eraseToAnyEquatable()"],"generated":true,"title":"Instance Methods","anchor":"Instance-Methods"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/unicode\/utf32\/equatable-implementations"]}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Unicode","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Unicode\/UTF32"]]},"sections":[],"metadata":{"roleHeading":"API Collection","role":"collectionGroup","title":"Equatable Implementations","modules":[{"name":"Compute"}]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Unicode\/UTF32\/Equatable-Implementations"},"kind":"article","schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Unicode/UTF32":{"role":"symbol","abstract":[],"url":"\/documentation\/compute\/unicode\/utf32","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Unicode\/UTF32","title":"Unicode.UTF32","type":"topic","navigatorTitle":[{"text":"UTF32","kind":"identifier"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"UTF32","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Unicode/UTF32/==(_:)":{"title":"==(_:)","type":"topic","abstract":[],"url":"\/documentation\/compute\/unicode\/utf32\/==(_:)","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"=="},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> (("},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":")"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Unicode\/UTF32\/==(_:)","kind":"symbol","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Unicode":{"url":"\/documentation\/compute\/unicode","title":"Unicode","abstract":[{"type":"text","text":"A namespace for Unicode utilities."}],"type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"Unicode","kind":"identifier"}],"navigatorTitle":[{"text":"Unicode","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Unicode"},"doc://com.swallow.documentation.Compute/documentation/Compute/Unicode/UTF32/!=(_:_:)":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Unicode\/UTF32\/!=(_:_:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"!=","kind":"identifier"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"kind":"symbol","role":"symbol","type":"topic","url":"\/documentation\/compute\/unicode\/utf32\/!=(_:_:)","abstract":[{"type":"text","text":"Returns a Boolean value indicating whether two values are not equal."}],"title":"!=(_:_:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/Unicode/UTF32/eraseToAnyEquatable()":{"kind":"symbol","title":"eraseToAnyEquatable()","abstract":[],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"eraseToAnyEquatable","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"AnyEquatable","kind":"typeIdentifier","preciseIdentifier":"s:7Swallow12AnyEquatableV"}],"type":"topic","url":"\/documentation\/compute\/unicode\/utf32\/erasetoanyequatable()","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Unicode\/UTF32\/eraseToAnyEquatable()"}}}