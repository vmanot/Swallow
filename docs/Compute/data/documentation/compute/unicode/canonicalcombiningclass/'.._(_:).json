{"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Unicode","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Unicode\/CanonicalCombiningClass","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Unicode\/CanonicalCombiningClass\/Comparable-Implementations"]]},"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Unicode\/CanonicalCombiningClass\/.._(_:)"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"..<","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"internalParam","text":"maximum"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:s16PartialRangeUpToV","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/PartialRangeUpTo","text":"PartialRangeUpTo","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"name":"maximum","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The upper bound for the range."}]}]}]},{"kind":"content","content":[{"text":"Discussion","level":2,"anchor":"discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"Use the prefix half-open range operator (prefix ","type":"text"},{"type":"codeVoice","code":"..<"},{"text":") to create a","type":"text"},{"type":"text","text":" "},{"text":"partial range of any type that conforms to the ","type":"text"},{"type":"codeVoice","code":"Comparable"},{"type":"text","text":" protocol."},{"text":" ","type":"text"},{"text":"This example creates a ","type":"text"},{"code":"PartialRangeUpTo<Double>","type":"codeVoice"},{"type":"text","text":" instance that includes"},{"type":"text","text":" "},{"type":"text","text":"any value less than "},{"code":"5.0","type":"codeVoice"},{"type":"text","text":"."}]},{"syntax":null,"type":"codeListing","code":["let upToFive = ..<5.0","","upToFive.contains(3.14)       \/\/ true","upToFive.contains(6.28)       \/\/ false","upToFive.contains(5.0)        \/\/ false"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can use this type of partial range of a collection’s indices to"},{"text":" ","type":"text"},{"type":"text","text":"represent the range from the start of the collection up to, but not"},{"text":" ","type":"text"},{"type":"text","text":"including, the partial range’s upper bound."}]},{"code":["let numbers = [10, 20, 30, 40, 50, 60, 70]","print(numbers[..<3])","\/\/ Prints \"[10, 20, 30]\""],"type":"codeListing","syntax":null},{"name":"Precondition","style":"note","type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"code":"maximum","type":"codeVoice"},{"type":"text","text":" must compare equal to itself (i.e. cannot be NaN)."}]}]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/unicode\/canonicalcombiningclass\/'.._(_:)"]}],"metadata":{"symbolKind":"op","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"..<","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s16PartialRangeUpToV","text":"PartialRangeUpTo"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":">","kind":"text"}],"role":"symbol","modules":[{"name":"Compute","relatedModules":["Swift"]}],"roleHeading":"Operator","extendedModule":"Swift","title":"..<(_:)","externalID":"s:SLsE3zzlopys16PartialRangeUpToVyxGxFZ::SYNTHESIZED::s:s7UnicodeO23CanonicalCombiningClassV"},"kind":"symbol","abstract":[{"type":"text","text":"Returns a partial range up to, but not including, its upper bound."}],"schemaVersion":{"patch":0,"minor":3,"major":0},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Unicode":{"url":"\/documentation\/compute\/unicode","title":"Unicode","abstract":[{"type":"text","text":"A namespace for Unicode utilities."}],"type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"Unicode","kind":"identifier"}],"navigatorTitle":[{"text":"Unicode","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Unicode"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/PartialRangeUpTo":{"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"PartialRangeUpTo","kind":"identifier"}],"type":"topic","url":"\/documentation\/compute\/partialrangeupto","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/PartialRangeUpTo","abstract":[{"type":"text","text":"A partial half-open interval up to, but not including, an upper bound."}],"navigatorTitle":[{"text":"PartialRangeUpTo","kind":"identifier"}],"title":"PartialRangeUpTo"},"doc://com.swallow.documentation.Compute/documentation/Compute/Unicode/CanonicalCombiningClass/Comparable-Implementations":{"title":"Comparable Implementations","url":"\/documentation\/compute\/unicode\/canonicalcombiningclass\/comparable-implementations","role":"collectionGroup","type":"topic","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Unicode\/CanonicalCombiningClass\/Comparable-Implementations","kind":"article"},"doc://com.swallow.documentation.Compute/documentation/Compute/Unicode/CanonicalCombiningClass/.._(_:)":{"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"..<","kind":"identifier"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s16PartialRangeUpToV","text":"PartialRangeUpTo"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"type":"topic","role":"symbol","abstract":[{"text":"Returns a partial range up to, but not including, its upper bound.","type":"text"}],"url":"\/documentation\/compute\/unicode\/canonicalcombiningclass\/'.._(_:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Unicode\/CanonicalCombiningClass\/.._(_:)","title":"..<(_:)","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Unicode/CanonicalCombiningClass":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Unicode\/CanonicalCombiningClass","type":"topic","title":"Unicode.CanonicalCombiningClass","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"CanonicalCombiningClass","kind":"identifier"}],"navigatorTitle":[{"text":"CanonicalCombiningClass","kind":"identifier"}],"url":"\/documentation\/compute\/unicode\/canonicalcombiningclass","role":"symbol","kind":"symbol","abstract":[{"text":"The classification of a scalar used in the Canonical Ordering Algorithm","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"defined by the Unicode Standard."}]}}}