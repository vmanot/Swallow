{"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"article","sections":[],"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Unicode\/CanonicalCombiningClass\/Comparable-Implementations","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Unicode","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Unicode\/CanonicalCombiningClass"]]},"variants":[{"paths":["\/documentation\/compute\/unicode\/canonicalcombiningclass\/comparable-implementations"],"traits":[{"interfaceLanguage":"swift"}]}],"topicSections":[{"generated":true,"title":"Operators","anchor":"Operators","identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Unicode\/CanonicalCombiningClass\/...(_:)-5seus","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Unicode\/CanonicalCombiningClass\/...(_:)-6pi3","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Unicode\/CanonicalCombiningClass\/...(_:_:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Unicode\/CanonicalCombiningClass\/.._(_:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Unicode\/CanonicalCombiningClass\/.._(_:_:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Unicode\/CanonicalCombiningClass\/_(_:_:)-5jtn9","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Unicode\/CanonicalCombiningClass\/_=(_:_:)-4pgnv","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Unicode\/CanonicalCombiningClass\/_=(_:_:)-q66b"]},{"anchor":"Instance-Properties","title":"Instance Properties","generated":true,"identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Unicode\/CanonicalCombiningClass\/erasedAsAnyComparable"]}],"metadata":{"roleHeading":"API Collection","modules":[{"name":"Compute"}],"title":"Comparable Implementations","role":"collectionGroup"},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Unicode/CanonicalCombiningClass/.._(_:)":{"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"..<","kind":"identifier"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s16PartialRangeUpToV","text":"PartialRangeUpTo"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"type":"topic","role":"symbol","abstract":[{"text":"Returns a partial range up to, but not including, its upper bound.","type":"text"}],"url":"\/documentation\/compute\/unicode\/canonicalcombiningclass\/'.._(_:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Unicode\/CanonicalCombiningClass\/.._(_:)","title":"..<(_:)","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Unicode/CanonicalCombiningClass/...(_:_:)":{"type":"topic","abstract":[{"type":"text","text":"Returns a closed range that contains both of its bounds."}],"kind":"symbol","title":"...(_:_:)","role":"symbol","url":"\/documentation\/compute\/unicode\/canonicalcombiningclass\/'...(_:_:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Unicode\/CanonicalCombiningClass\/...(_:_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"...","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SN","text":"ClosedRange"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Unicode/CanonicalCombiningClass/_=(_:_:)-4pgnv":{"type":"topic","title":"<=(_:_:)","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"<=","kind":"identifier"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"abstract":[{"text":"Returns a Boolean value indicating whether the value of the first argument","type":"text"},{"type":"text","text":" "},{"text":"is less than or equal to that of the second argument.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Unicode\/CanonicalCombiningClass\/_=(_:_:)-4pgnv","url":"\/documentation\/compute\/unicode\/canonicalcombiningclass\/_=(_:_:)-4pgnv","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Unicode":{"url":"\/documentation\/compute\/unicode","title":"Unicode","abstract":[{"type":"text","text":"A namespace for Unicode utilities."}],"type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"Unicode","kind":"identifier"}],"navigatorTitle":[{"text":"Unicode","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Unicode"},"doc://com.swallow.documentation.Compute/documentation/Compute/Unicode/CanonicalCombiningClass/...(_:)-5seus":{"abstract":[{"text":"Returns a partial range up to, and including, its upper bound.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Unicode\/CanonicalCombiningClass\/...(_:)-5seus","title":"...(_:)","url":"\/documentation\/compute\/unicode\/canonicalcombiningclass\/'...(_:)-5seus","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"...","kind":"identifier"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"PartialRangeThrough","kind":"typeIdentifier","preciseIdentifier":"s:s19PartialRangeThroughV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"type":"topic","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Unicode/CanonicalCombiningClass/...(_:)-6pi3":{"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Unicode\/CanonicalCombiningClass\/...(_:)-6pi3","abstract":[{"type":"text","text":"Returns a partial range extending upward from a lower bound."}],"role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"..."},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s16PartialRangeFromV","text":"PartialRangeFrom"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"title":"...(_:)","kind":"symbol","url":"\/documentation\/compute\/unicode\/canonicalcombiningclass\/'...(_:)-6pi3"},"doc://com.swallow.documentation.Compute/documentation/Compute/Unicode/CanonicalCombiningClass/erasedAsAnyComparable":{"title":"erasedAsAnyComparable","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"erasedAsAnyComparable","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Swallow13AnyComparableV","text":"AnyComparable","kind":"typeIdentifier"}],"abstract":[],"type":"topic","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Unicode\/CanonicalCombiningClass\/erasedAsAnyComparable","kind":"symbol","url":"\/documentation\/compute\/unicode\/canonicalcombiningclass\/erasedasanycomparable"},"doc://com.swallow.documentation.Compute/documentation/Compute/Unicode/CanonicalCombiningClass/_=(_:_:)-q66b":{"url":"\/documentation\/compute\/unicode\/canonicalcombiningclass\/_=(_:_:)-q66b","role":"symbol","title":">=(_:_:)","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":">="},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Unicode\/CanonicalCombiningClass\/_=(_:_:)-q66b","abstract":[{"text":"Returns a Boolean value indicating whether the value of the first argument","type":"text"},{"type":"text","text":" "},{"text":"is greater than or equal to that of the second argument.","type":"text"}],"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Unicode/CanonicalCombiningClass":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Unicode\/CanonicalCombiningClass","type":"topic","title":"Unicode.CanonicalCombiningClass","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"CanonicalCombiningClass","kind":"identifier"}],"navigatorTitle":[{"text":"CanonicalCombiningClass","kind":"identifier"}],"url":"\/documentation\/compute\/unicode\/canonicalcombiningclass","role":"symbol","kind":"symbol","abstract":[{"text":"The classification of a scalar used in the Canonical Ordering Algorithm","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"defined by the Unicode Standard."}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Unicode/CanonicalCombiningClass/_(_:_:)-5jtn9":{"role":"symbol","abstract":[{"type":"text","text":"Returns a Boolean value indicating whether the value of the first argument"},{"type":"text","text":" "},{"type":"text","text":"is greater than that of the second argument."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Unicode\/CanonicalCombiningClass\/_(_:_:)-5jtn9","url":"\/documentation\/compute\/unicode\/canonicalcombiningclass\/_(_:_:)-5jtn9","title":">(_:_:)","kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":">"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/Unicode/CanonicalCombiningClass/.._(_:_:)":{"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"..<"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sn","text":"Range","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"abstract":[{"text":"Returns a half-open range that contains its lower bound but not its upper","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"bound."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Unicode\/CanonicalCombiningClass\/.._(_:_:)","url":"\/documentation\/compute\/unicode\/canonicalcombiningclass\/'.._(_:_:)","title":"..<(_:_:)","kind":"symbol"}}}