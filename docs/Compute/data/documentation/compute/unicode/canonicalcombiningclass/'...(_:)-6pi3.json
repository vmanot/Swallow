{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/unicode\/canonicalcombiningclass\/'...(_:)-6pi3"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Unicode\/CanonicalCombiningClass\/...(_:)-6pi3"},"abstract":[{"text":"Returns a partial range extending upward from a lower bound.","type":"text"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Unicode","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Unicode\/CanonicalCombiningClass","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Unicode\/CanonicalCombiningClass\/Comparable-Implementations"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"...","kind":"identifier"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"text":"minimum","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"PartialRangeFrom","preciseIdentifier":"s:s16PartialRangeFromV","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/PartialRangeFrom"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":">","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"The lower bound for the range."}],"type":"paragraph"}],"name":"minimum"}]},{"content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"Use the postfix range operator (postfix ","type":"text"},{"type":"codeVoice","code":"..."},{"type":"text","text":") to create a partial range"},{"type":"text","text":" "},{"text":"of any type that conforms to the ","type":"text"},{"type":"codeVoice","code":"Comparable"},{"type":"text","text":" protocol. This example"},{"type":"text","text":" "},{"type":"text","text":"creates a "},{"code":"PartialRangeFrom<Double>","type":"codeVoice"},{"text":" instance that includes any value","type":"text"},{"text":" ","type":"text"},{"text":"greater than or equal to ","type":"text"},{"type":"codeVoice","code":"5.0"},{"text":".","type":"text"}]},{"syntax":null,"type":"codeListing","code":["let atLeastFive = 5.0...","","atLeastFive.contains(4.0)     \/\/ false","atLeastFive.contains(5.0)     \/\/ true","atLeastFive.contains(6.0)     \/\/ true"]},{"type":"paragraph","inlineContent":[{"text":"You can use this type of partial range of a collection’s indices to","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"represent the range from the partial range’s lower bound up to the end"},{"text":" ","type":"text"},{"type":"text","text":"of the collection."}]},{"syntax":null,"code":["let numbers = [10, 20, 30, 40, 50, 60, 70]","print(numbers[3...])","\/\/ Prints \"[40, 50, 60, 70]\""],"type":"codeListing"},{"name":"Precondition","style":"note","content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"type":"codeVoice","code":"minimum"},{"text":" must compare equal to itself (i.e. cannot be NaN).","type":"text"}]}],"type":"aside"}],"kind":"content"}],"kind":"symbol","sections":[],"metadata":{"title":"...(_:)","role":"symbol","externalID":"s:SLsE3zzzoPys16PartialRangeFromVyxGxFZ::SYNTHESIZED::s:s7UnicodeO23CanonicalCombiningClassV","modules":[{"name":"Compute","relatedModules":["Swift"]}],"extendedModule":"Swift","roleHeading":"Operator","symbolKind":"op","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"...","kind":"identifier"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"PartialRangeFrom","preciseIdentifier":"s:s16PartialRangeFromV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}]},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Unicode":{"url":"\/documentation\/compute\/unicode","title":"Unicode","abstract":[{"type":"text","text":"A namespace for Unicode utilities."}],"type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"Unicode","kind":"identifier"}],"navigatorTitle":[{"text":"Unicode","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Unicode"},"doc://com.swallow.documentation.Compute/documentation/Compute/PartialRangeFrom":{"kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"PartialRangeFrom","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/PartialRangeFrom","url":"\/documentation\/compute\/partialrangefrom","navigatorTitle":[{"kind":"identifier","text":"PartialRangeFrom"}],"abstract":[{"type":"text","text":"A partial interval extending upward from a lower bound."}],"role":"symbol","title":"PartialRangeFrom"},"doc://com.swallow.documentation.Compute/documentation/Compute/Unicode/CanonicalCombiningClass":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Unicode\/CanonicalCombiningClass","type":"topic","title":"Unicode.CanonicalCombiningClass","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"CanonicalCombiningClass","kind":"identifier"}],"navigatorTitle":[{"text":"CanonicalCombiningClass","kind":"identifier"}],"url":"\/documentation\/compute\/unicode\/canonicalcombiningclass","role":"symbol","kind":"symbol","abstract":[{"text":"The classification of a scalar used in the Canonical Ordering Algorithm","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"defined by the Unicode Standard."}]},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Unicode/CanonicalCombiningClass/Comparable-Implementations":{"title":"Comparable Implementations","url":"\/documentation\/compute\/unicode\/canonicalcombiningclass\/comparable-implementations","role":"collectionGroup","type":"topic","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Unicode\/CanonicalCombiningClass\/Comparable-Implementations","kind":"article"},"doc://com.swallow.documentation.Compute/documentation/Compute/Unicode/CanonicalCombiningClass/...(_:)-6pi3":{"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Unicode\/CanonicalCombiningClass\/...(_:)-6pi3","abstract":[{"type":"text","text":"Returns a partial range extending upward from a lower bound."}],"role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"..."},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s16PartialRangeFromV","text":"PartialRangeFrom"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"title":"...(_:)","kind":"symbol","url":"\/documentation\/compute\/unicode\/canonicalcombiningclass\/'...(_:)-6pi3"}}}