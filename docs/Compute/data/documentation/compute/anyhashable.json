{"relationshipsSections":[{"type":"conformsTo","identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Copyable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CustomDebugStringConvertible","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CustomReflectable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CustomStringConvertible","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Equatable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Hashable"],"kind":"relationships","title":"Conforms To"}],"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyHashable","interfaceLanguage":"swift"},"topicSections":[{"identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyHashable\/init(_:)"],"anchor":"Initializers","generated":true,"title":"Initializers"},{"anchor":"Instance-Properties","title":"Instance Properties","identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyHashable\/base"],"generated":true},{"anchor":"Default-Implementations","title":"Default Implementations","identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyHashable\/CustomDebugStringConvertible-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyHashable\/CustomReflectable-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyHashable\/CustomStringConvertible-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyHashable\/Equatable-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyHashable\/Hashable-Implementations"],"generated":true}],"schemaVersion":{"minor":3,"major":0,"patch":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"@frozen","kind":"attribute"},{"kind":"text","text":" "},{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"AnyHashable","kind":"identifier"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"content","content":[{"text":"Overview","anchor":"overview","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"The "},{"code":"AnyHashable","type":"codeVoice"},{"text":" type forwards equality comparisons and hashing operations","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"to an underlying hashable value, hiding the type of the wrapped value."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Where conversion using "},{"code":"as","type":"codeVoice"},{"type":"text","text":" or "},{"type":"codeVoice","code":"as?"},{"type":"text","text":" is possible between two types (such as"},{"type":"text","text":" "},{"type":"codeVoice","code":"Int"},{"type":"text","text":" and "},{"code":"NSNumber","type":"codeVoice"},{"type":"text","text":"), "},{"type":"codeVoice","code":"AnyHashable"},{"type":"text","text":" uses a canonical representation of the"},{"text":" ","type":"text"},{"text":"type-erased value so that instances wrapping the same value of either type","type":"text"},{"type":"text","text":" "},{"type":"text","text":"compare as equal. For example, "},{"type":"codeVoice","code":"AnyHashable(42)"},{"text":" compares as equal to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"AnyHashable(42 as NSNumber)"},{"type":"text","text":"."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"You can store mixed-type keys in dictionaries and other collections that"},{"type":"text","text":" "},{"type":"text","text":"require "},{"type":"codeVoice","code":"Hashable"},{"text":" conformance by wrapping mixed-type keys in","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"AnyHashable"},{"text":" instances:","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":["let descriptions: [AnyHashable: Any] = [","    42: \"an Int\",","    43 as Int8: \"an Int8\",","    [\"a\", \"b\"] as Set: \"a set of strings\"","]","print(descriptions[42]!)                \/\/ prints \"an Int\"","print(descriptions[42 as Int8]!)        \/\/ prints \"an Int\"","print(descriptions[43 as Int8]!)        \/\/ prints \"an Int8\"","print(descriptions[44])                 \/\/ prints \"nil\"","print(descriptions[[\"a\", \"b\"] as Set]!) \/\/ prints \"a set of strings\""]},{"inlineContent":[{"text":"Note that ","type":"text"},{"code":"AnyHashable","type":"codeVoice"},{"text":" does not guarantee that it preserves the hash","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"encoding of wrapped values. Do not rely on "},{"code":"AnyHashable","type":"codeVoice"},{"text":" generating such","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"compatible hashes, as the hash encoding that it uses may change between any"},{"type":"text","text":" "},{"type":"text","text":"two releases of the standard library."}],"type":"paragraph"}]}],"variants":[{"paths":["\/documentation\/compute\/anyhashable"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"role":"symbol","title":"AnyHashable","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AnyHashable"}],"symbolKind":"struct","roleHeading":"Structure","navigatorTitle":[{"text":"AnyHashable","kind":"identifier"}],"modules":[{"name":"Compute"}],"externalID":"s:s11AnyHashableV"},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute"]]},"sections":[],"kind":"symbol","abstract":[{"type":"text","text":"A type-erased hashable value."}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/CustomDebugStringConvertible":{"url":"\/documentation\/compute\/customdebugstringconvertible","role":"symbol","abstract":[{"text":"A type with a customized textual representation suitable for debugging","type":"text"},{"type":"text","text":" "},{"text":"purposes.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CustomDebugStringConvertible","title":"CustomDebugStringConvertible","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CustomDebugStringConvertible","kind":"identifier"}],"navigatorTitle":[{"text":"CustomDebugStringConvertible","kind":"identifier"}],"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/AnyHashable/init(_:)":{"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyHashable\/init(_:)","title":"init(_:)","url":"\/documentation\/compute\/anyhashable\/init(_:)","fragments":[{"kind":"identifier","text":"init"},{"text":"<","kind":"text"},{"text":"H","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"H","kind":"typeIdentifier"},{"kind":"text","text":")"}],"role":"symbol","abstract":[{"type":"text","text":"Creates a type-erased hashable value that wraps the given instance."}],"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/CustomStringConvertible":{"url":"\/documentation\/compute\/customstringconvertible","navigatorTitle":[{"kind":"identifier","text":"CustomStringConvertible"}],"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CustomStringConvertible","kind":"identifier"}],"abstract":[{"text":"A type with a customized textual representation.","type":"text"}],"type":"topic","title":"CustomStringConvertible","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CustomStringConvertible"},"doc://com.swallow.documentation.Compute/documentation/Compute/Equatable":{"abstract":[{"text":"A type that can be compared for value equality.","type":"text"}],"type":"topic","title":"Equatable","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Equatable"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Equatable","role":"symbol","url":"\/documentation\/compute\/equatable","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Equatable","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/CustomReflectable":{"url":"\/documentation\/compute\/customreflectable","role":"symbol","abstract":[{"text":"A type that explicitly supplies its own mirror.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CustomReflectable","title":"CustomReflectable","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CustomReflectable"}],"navigatorTitle":[{"kind":"identifier","text":"CustomReflectable"}],"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Copyable":{"title":"Copyable","abstract":[{"type":"text","text":"A type whose values can be implicitly or explicitly copied."}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"Copyable","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Copyable","url":"\/documentation\/compute\/copyable","navigatorTitle":[{"text":"Copyable","kind":"identifier"}],"kind":"symbol","role":"symbol","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/AnyHashable/Hashable-Implementations":{"title":"Hashable Implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyHashable\/Hashable-Implementations","kind":"article","role":"collectionGroup","url":"\/documentation\/compute\/anyhashable\/hashable-implementations","type":"topic","abstract":[]},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/AnyHashable/Equatable-Implementations":{"abstract":[],"kind":"article","url":"\/documentation\/compute\/anyhashable\/equatable-implementations","type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyHashable\/Equatable-Implementations","role":"collectionGroup","title":"Equatable Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/AnyHashable/CustomStringConvertible-Implementations":{"type":"topic","role":"collectionGroup","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyHashable\/CustomStringConvertible-Implementations","title":"CustomStringConvertible Implementations","kind":"article","url":"\/documentation\/compute\/anyhashable\/customstringconvertible-implementations","abstract":[]},"doc://com.swallow.documentation.Compute/documentation/Compute/AnyHashable/CustomReflectable-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyHashable\/CustomReflectable-Implementations","abstract":[],"url":"\/documentation\/compute\/anyhashable\/customreflectable-implementations","role":"collectionGroup","type":"topic","title":"CustomReflectable Implementations","kind":"article"},"doc://com.swallow.documentation.Compute/documentation/Compute/AnyHashable/CustomDebugStringConvertible-Implementations":{"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyHashable\/CustomDebugStringConvertible-Implementations","title":"CustomDebugStringConvertible Implementations","url":"\/documentation\/compute\/anyhashable\/customdebugstringconvertible-implementations","role":"collectionGroup","abstract":[],"kind":"article"},"doc://com.swallow.documentation.Compute/documentation/Compute/AnyHashable/base":{"abstract":[{"type":"text","text":"The value wrapped by this instance."}],"role":"symbol","title":"base","type":"topic","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyHashable\/base","url":"\/documentation\/compute\/anyhashable\/base","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"base","kind":"identifier"},{"kind":"text","text":": "},{"text":"Any","kind":"keyword"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/AnyHashable":{"role":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyHashable","kind":"identifier"}],"abstract":[{"text":"A type-erased hashable value.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyHashable","navigatorTitle":[{"text":"AnyHashable","kind":"identifier"}],"url":"\/documentation\/compute\/anyhashable","title":"AnyHashable","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Hashable":{"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Hashable"}],"title":"Hashable","navigatorTitle":[{"text":"Hashable","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"A type that can be hashed into a "},{"type":"codeVoice","code":"Hasher"},{"type":"text","text":" to produce an integer hash value."}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Hashable","url":"\/documentation\/compute\/hashable","role":"symbol"}}}