{"variants":[{"paths":["\/documentation\/compute\/treevaluestraversalsequence\/joined(separator:)-8h56"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/TreeValuesTraversalSequence","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/TreeValuesTraversalSequence\/Sequence-Implementations"]]},"sections":[],"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/TreeValuesTraversalSequence\/joined(separator:)-8h56","interfaceLanguage":"swift"},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"joined"},{"kind":"text","text":"<"},{"text":"Separator","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"separator","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Separator","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"JoinedSequence","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/JoinedSequence","preciseIdentifier":"s:s14JoinedSequenceV"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":"> ","kind":"text"},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"text":"Separator","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","text":"Sequence","preciseIdentifier":"s:ST","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence"},{"text":", ","kind":"text"},{"text":"Separator","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"kind":"text","text":" == "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element"}]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"text":"A sequence to insert between each of this","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"sequence’s elements."}],"type":"paragraph"}],"name":"separator"}]},{"kind":"content","content":[{"level":2,"text":"Return Value","anchor":"return-value","type":"heading"},{"inlineContent":[{"type":"text","text":"The joined sequence of elements."}],"type":"paragraph"}]},{"content":[{"level":2,"type":"heading","anchor":"discussion","text":"Discussion"},{"inlineContent":[{"text":"This example shows how an array of ","type":"text"},{"code":"[Int]","type":"codeVoice"},{"text":" instances can be joined, using","type":"text"},{"type":"text","text":" "},{"text":"another ","type":"text"},{"code":"[Int]","type":"codeVoice"},{"text":" instance as the separator:","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":["let nestedNumbers = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]","let joined = nestedNumbers.joined(separator: [-1, -2])","print(Array(joined))","\/\/ Prints \"[1, 2, 3, -1, -2, 4, 5, 6, -1, -2, 7, 8, 9]\""],"syntax":null}],"kind":"content"}],"metadata":{"extendedModule":"Swift","title":"joined(separator:)","role":"symbol","externalID":"s:STsST7ElementRpzrlE6joined9separators14JoinedSequenceVyxGqd___tSTRd__AA_AAQZAARtd__lF::SYNTHESIZED::s:7Compute27TreeValuesTraversalSequenceV","roleHeading":"Instance Method","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sequence"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"joined","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Separator","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"separator","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Separator","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s14JoinedSequenceV","text":"JoinedSequence"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}],"modules":[{"name":"Compute","relatedModules":["Swift"]}],"symbolKind":"method"},"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"text":"Returns the concatenated elements of this sequence of sequences,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"inserting the given separator between each element."}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/TreeValuesTraversalSequence":{"url":"\/documentation\/compute\/treevaluestraversalsequence","navigatorTitle":[{"kind":"identifier","text":"TreeValuesTraversalSequence"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"TreeValuesTraversalSequence","kind":"identifier"}],"abstract":[],"type":"topic","title":"TreeValuesTraversalSequence","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/TreeValuesTraversalSequence"},"doc://com.swallow.documentation.Compute/documentation/Compute/TreeValuesTraversalSequence/Sequence-Implementations":{"url":"\/documentation\/compute\/treevaluestraversalsequence\/sequence-implementations","role":"collectionGroup","abstract":[],"type":"topic","title":"Sequence Implementations","kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/TreeValuesTraversalSequence\/Sequence-Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence":{"url":"\/documentation\/compute\/sequence","navigatorTitle":[{"kind":"identifier","text":"Sequence"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence","title":"Sequence","kind":"symbol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Sequence","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"A type that provides sequential, iterated access to its elements."}]},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/JoinedSequence":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/JoinedSequence","title":"JoinedSequence","abstract":[{"type":"text","text":"A sequence that presents the elements of a base sequence of sequences"},{"type":"text","text":" "},{"text":"concatenated using a given separator.","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"JoinedSequence","kind":"identifier"}],"url":"\/documentation\/compute\/joinedsequence","type":"topic","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"JoinedSequence","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence/Element":{"type":"topic","required":true,"abstract":[{"type":"text","text":"A type representing the sequence’s elements."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"symbol","url":"\/documentation\/compute\/sequence\/element","role":"symbol","title":"Element","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/TreeValuesTraversalSequence/joined(separator:)-8h56":{"kind":"symbol","role":"symbol","title":"joined(separator:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/TreeValuesTraversalSequence\/joined(separator:)-8h56","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"joined","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Separator","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"separator","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Separator"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s14JoinedSequenceV","text":"JoinedSequence"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":">","kind":"text"}],"conformance":{"constraints":[{"type":"codeVoice","code":"Element"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Sequence"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"url":"\/documentation\/compute\/treevaluestraversalsequence\/joined(separator:)-8h56","abstract":[{"text":"Returns the concatenated elements of this sequence of sequences,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"inserting the given separator between each element."}],"type":"topic"}}}