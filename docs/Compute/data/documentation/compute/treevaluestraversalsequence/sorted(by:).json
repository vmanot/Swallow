{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/TreeValuesTraversalSequence\/sorted(by:)"},"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"sorted","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"by"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"Element","preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> [","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"text":"]","kind":"text"}],"role":"symbol","externalID":"s:STsE6sorted2bySay7ElementQzGSbAD_ADtKXE_tKF::SYNTHESIZED::s:7Compute27TreeValuesTraversalSequenceV","modules":[{"name":"Compute","relatedModules":["Swift"]}],"title":"sorted(by:)","symbolKind":"method","extendedModule":"Swift","roleHeading":"Instance Method"},"sections":[],"abstract":[{"type":"text","text":"Returns the elements of the sequence, sorted using the given predicate as"},{"type":"text","text":" "},{"type":"text","text":"the comparison between elements."}],"kind":"symbol","variants":[{"paths":["\/documentation\/compute\/treevaluestraversalsequence\/sorted(by:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/TreeValuesTraversalSequence","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/TreeValuesTraversalSequence\/Sequence-Implementations"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"sorted"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"by"},{"text":" ","kind":"text"},{"text":"areInIncreasingOrder","kind":"internalParam"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"Element","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:ST7ElementQa","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bool","preciseIdentifier":"s:Sb","text":"Bool"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"kind":"text","text":" -> ["},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","text":"Element","preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"name":"areInIncreasingOrder","content":[{"inlineContent":[{"type":"text","text":"A predicate that returns "},{"code":"true","type":"codeVoice"},{"text":" if its","type":"text"},{"text":" ","type":"text"},{"text":"first argument should be ordered before its second argument;","type":"text"},{"type":"text","text":" "},{"type":"text","text":"otherwise, "},{"code":"false","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}]}]},{"kind":"content","content":[{"text":"Return Value","level":2,"type":"heading","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"text":"A sorted array of the sequence’s elements.","type":"text"}]}]},{"kind":"content","content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"When you want to sort a sequence of elements that don’t conform to the","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"Comparable"},{"text":" protocol, pass a predicate to this method that returns","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"true"},{"text":" when the first element should be ordered before the second. The","type":"text"},{"text":" ","type":"text"},{"text":"elements of the resulting array are ordered according to the given","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"predicate."}]},{"type":"paragraph","inlineContent":[{"text":"In the following example, the predicate provides an ordering for an array","type":"text"},{"type":"text","text":" "},{"text":"of a custom ","type":"text"},{"code":"HTTPResponse","type":"codeVoice"},{"type":"text","text":" type. The predicate orders errors before"},{"type":"text","text":" "},{"type":"text","text":"successes and sorts the error responses by their error code."}]},{"syntax":null,"type":"codeListing","code":["enum HTTPResponse {","    case ok","    case error(Int)","}","","let responses: [HTTPResponse] = [.error(500), .ok, .ok, .error(404), .error(403)]","let sortedResponses = responses.sorted {","    switch ($0, $1) {","    \/\/ Order errors by code","    case let (.error(aCode), .error(bCode)):","        return aCode < bCode","","    \/\/ All successes are equivalent, so none is before any other","    case (.ok, .ok): return false","","    \/\/ Order errors before successes","    case (.error, .ok): return true","    case (.ok, .error): return false","    }","}","print(sortedResponses)","\/\/ Prints \"[.error(403), .error(404), .error(500), .ok, .ok]\""]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You also use this method to sort elements that conform to the"},{"type":"text","text":" "},{"type":"codeVoice","code":"Comparable"},{"text":" protocol in descending order. To sort your sequence in","type":"text"},{"type":"text","text":" "},{"text":"descending order, pass the greater-than operator (","type":"text"},{"code":">","type":"codeVoice"},{"text":") as the","type":"text"},{"text":" ","type":"text"},{"code":"areInIncreasingOrder","type":"codeVoice"},{"text":" parameter.","type":"text"}]},{"type":"codeListing","code":["let students: Set = [\"Kofi\", \"Abena\", \"Peter\", \"Kweku\", \"Akosua\"]","let descendingStudents = students.sorted(by: >)","print(descendingStudents)","\/\/ Prints \"[\"Peter\", \"Kweku\", \"Kofi\", \"Akosua\", \"Abena\"]\""],"syntax":null},{"type":"paragraph","inlineContent":[{"type":"text","text":"Calling the related "},{"type":"codeVoice","code":"sorted()"},{"text":" method is equivalent to calling this","type":"text"},{"text":" ","type":"text"},{"text":"method and passing the less-than operator (","type":"text"},{"code":"<","type":"codeVoice"},{"type":"text","text":") as the predicate."}]},{"type":"codeListing","code":["print(students.sorted())","\/\/ Prints \"[\"Abena\", \"Akosua\", \"Kofi\", \"Kweku\", \"Peter\"]\"","print(students.sorted(by: <))","\/\/ Prints \"[\"Abena\", \"Akosua\", \"Kofi\", \"Kweku\", \"Peter\"]\""],"syntax":null},{"type":"paragraph","inlineContent":[{"type":"text","text":"The predicate must be a "},{"inlineContent":[{"text":"strict weak ordering","type":"text"}],"type":"emphasis"},{"type":"text","text":" over the elements. That"},{"type":"text","text":" "},{"text":"is, for any elements ","type":"text"},{"type":"codeVoice","code":"a"},{"text":", ","type":"text"},{"type":"codeVoice","code":"b"},{"type":"text","text":", and "},{"code":"c","type":"codeVoice"},{"type":"text","text":", the following conditions must"},{"type":"text","text":" "},{"text":"hold:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"code":"areInIncreasingOrder(a, a)","type":"codeVoice"},{"text":" is always ","type":"text"},{"code":"false","type":"codeVoice"},{"text":". (Irreflexivity)","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"If ","type":"text"},{"type":"codeVoice","code":"areInIncreasingOrder(a, b)"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"areInIncreasingOrder(b, c)"},{"type":"text","text":" are"},{"type":"text","text":" "},{"text":"both ","type":"text"},{"type":"codeVoice","code":"true"},{"text":", then ","type":"text"},{"code":"areInIncreasingOrder(a, c)","type":"codeVoice"},{"text":" is also ","type":"text"},{"code":"true","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"(Transitive comparability)"}]}]},{"content":[{"inlineContent":[{"text":"Two elements are ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"incomparable","type":"text"}]},{"type":"text","text":" if neither is ordered before the other"},{"type":"text","text":" "},{"text":"according to the predicate. If ","type":"text"},{"type":"codeVoice","code":"a"},{"type":"text","text":" and "},{"code":"b","type":"codeVoice"},{"text":" are incomparable, and ","type":"text"},{"type":"codeVoice","code":"b"},{"type":"text","text":" "},{"type":"text","text":"and "},{"type":"codeVoice","code":"c"},{"type":"text","text":" are incomparable, then "},{"code":"a","type":"codeVoice"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"c"},{"text":" are also incomparable.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"(Transitive incomparability)"}],"type":"paragraph"}]}]},{"inlineContent":[{"text":"The sorting algorithm is guaranteed to be stable. A stable sort","type":"text"},{"type":"text","text":" "},{"type":"text","text":"preserves the relative order of elements for which"},{"type":"text","text":" "},{"type":"codeVoice","code":"areInIncreasingOrder"},{"type":"text","text":" does not establish an order."}],"type":"paragraph"},{"name":"Complexity","type":"aside","content":[{"inlineContent":[{"type":"text","text":"O("},{"type":"emphasis","inlineContent":[{"type":"text","text":"n"}]},{"text":" log ","type":"text"},{"inlineContent":[{"text":"n","type":"text"}],"type":"emphasis"},{"text":"), where ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"n","type":"text"}]},{"type":"text","text":" is the length of the sequence."}],"type":"paragraph"}],"style":"note"}]}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/TreeValuesTraversalSequence":{"url":"\/documentation\/compute\/treevaluestraversalsequence","navigatorTitle":[{"kind":"identifier","text":"TreeValuesTraversalSequence"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"TreeValuesTraversalSequence","kind":"identifier"}],"abstract":[],"type":"topic","title":"TreeValuesTraversalSequence","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/TreeValuesTraversalSequence"},"doc://com.swallow.documentation.Compute/documentation/Compute/Bool":{"url":"\/documentation\/compute\/bool","role":"symbol","title":"Bool","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Bool","kind":"identifier"}],"abstract":[{"type":"text","text":"A value type whose instances are either "},{"type":"codeVoice","code":"true"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"false"},{"text":".","type":"text"}],"navigatorTitle":[{"text":"Bool","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bool","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/TreeValuesTraversalSequence/Sequence-Implementations":{"url":"\/documentation\/compute\/treevaluestraversalsequence\/sequence-implementations","role":"collectionGroup","abstract":[],"type":"topic","title":"Sequence Implementations","kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/TreeValuesTraversalSequence\/Sequence-Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/TreeValuesTraversalSequence/sorted(by:)":{"url":"\/documentation\/compute\/treevaluestraversalsequence\/sorted(by:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"sorted","kind":"identifier"},{"kind":"text","text":"("},{"text":"by","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:ST7ElementQa","text":"Element","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> [","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"role":"symbol","abstract":[{"type":"text","text":"Returns the elements of the sequence, sorted using the given predicate as"},{"text":" ","type":"text"},{"type":"text","text":"the comparison between elements."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/TreeValuesTraversalSequence\/sorted(by:)","title":"sorted(by:)","kind":"symbol","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence/Element":{"type":"topic","required":true,"abstract":[{"type":"text","text":"A type representing the sequence’s elements."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"symbol","url":"\/documentation\/compute\/sequence\/element","role":"symbol","title":"Element","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"identifier"}]}}}