{"metadata":{"modules":[{"name":"Compute","relatedModules":["Swift"]}],"title":"compactMap(_:)","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"compactMap","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"ElementOfResult"},{"kind":"text","text":">(("},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"ElementOfResult"},{"text":"?) ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"kind":"text","text":" -> ["},{"kind":"typeIdentifier","text":"ElementOfResult"},{"kind":"text","text":"]"}],"roleHeading":"Instance Method","externalID":"s:STsE10compactMapySayqd__Gqd__Sg7ElementQzKXEKlF::SYNTHESIZED::s:7Compute27TreeValuesTraversalSequenceV","role":"symbol","extendedModule":"Swift"},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/treevaluestraversalsequence\/compactmap(_:)-ycq5"]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"abstract":[{"text":"Returns an array containing the non-","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":" results of calling the given"},{"text":" ","type":"text"},{"text":"transformation with each element of this sequence.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/TreeValuesTraversalSequence","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/TreeValuesTraversalSequence\/Sequence-Implementations"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"compactMap"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"ElementOfResult"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"transform"},{"text":": (","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"ElementOfResult"},{"kind":"text","text":"?) "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> ["},{"text":"ElementOfResult","kind":"typeIdentifier"},{"text":"]","kind":"text"}]}]},{"parameters":[{"content":[{"inlineContent":[{"type":"text","text":"A closure that accepts an element of this"},{"type":"text","text":" "},{"type":"text","text":"sequence as its argument and returns an optional value."}],"type":"paragraph"}],"name":"transform"}],"kind":"parameters"},{"kind":"content","content":[{"type":"heading","level":2,"text":"Return Value","anchor":"return-value"},{"inlineContent":[{"type":"text","text":"An array of the non-"},{"code":"nil","type":"codeVoice"},{"text":" results of calling ","type":"text"},{"code":"transform","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"with each element of the sequence."}],"type":"paragraph"}]},{"kind":"content","content":[{"text":"Discussion","type":"heading","anchor":"discussion","level":2},{"type":"paragraph","inlineContent":[{"text":"Use this method to receive an array of non-optional values when your","type":"text"},{"type":"text","text":" "},{"text":"transformation produces an optional value.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"In this example, note the difference in the result of using ","type":"text"},{"type":"codeVoice","code":"map"},{"text":" and","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"compactMap"},{"text":" with a transformation that returns an optional ","type":"text"},{"code":"Int","type":"codeVoice"},{"type":"text","text":" value."}]},{"type":"codeListing","syntax":null,"code":["let possibleNumbers = [\"1\", \"2\", \"three\", \"\/\/\/4\/\/\/\", \"5\"]","","let mapped: [Int?] = possibleNumbers.map { str in Int(str) }","\/\/ [1, 2, nil, nil, 5]","","let compactMapped: [Int] = possibleNumbers.compactMap { str in Int(str) }","\/\/ [1, 2, 5]"]},{"content":[{"inlineContent":[{"type":"text","text":"O("},{"inlineContent":[{"type":"text","text":"n"}],"type":"emphasis"},{"type":"text","text":"), where "},{"inlineContent":[{"text":"n","type":"text"}],"type":"emphasis"},{"text":" is the length of this sequence.","type":"text"}],"type":"paragraph"}],"style":"note","name":"Complexity","type":"aside"}]}],"kind":"symbol","identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/TreeValuesTraversalSequence\/compactMap(_:)-ycq5","interfaceLanguage":"swift"},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence/Element":{"type":"topic","required":true,"abstract":[{"type":"text","text":"A type representing the sequenceâ€™s elements."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"symbol","url":"\/documentation\/compute\/sequence\/element","role":"symbol","title":"Element","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/TreeValuesTraversalSequence":{"url":"\/documentation\/compute\/treevaluestraversalsequence","navigatorTitle":[{"kind":"identifier","text":"TreeValuesTraversalSequence"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"TreeValuesTraversalSequence","kind":"identifier"}],"abstract":[],"type":"topic","title":"TreeValuesTraversalSequence","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/TreeValuesTraversalSequence"},"doc://com.swallow.documentation.Compute/documentation/Compute/TreeValuesTraversalSequence/compactMap(_:)-ycq5":{"title":"compactMap(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"compactMap"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"ElementOfResult"},{"text":">((","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"ElementOfResult"},{"kind":"text","text":"?) "},{"kind":"keyword","text":"rethrows"},{"text":" -> [","kind":"text"},{"kind":"typeIdentifier","text":"ElementOfResult"},{"text":"]","kind":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/TreeValuesTraversalSequence\/compactMap(_:)-ycq5","type":"topic","abstract":[{"type":"text","text":"Returns an array containing the non-"},{"code":"nil","type":"codeVoice"},{"text":" results of calling the given","type":"text"},{"text":" ","type":"text"},{"text":"transformation with each element of this sequence.","type":"text"}],"kind":"symbol","role":"symbol","url":"\/documentation\/compute\/treevaluestraversalsequence\/compactmap(_:)-ycq5"},"doc://com.swallow.documentation.Compute/documentation/Compute/TreeValuesTraversalSequence/Sequence-Implementations":{"url":"\/documentation\/compute\/treevaluestraversalsequence\/sequence-implementations","role":"collectionGroup","abstract":[],"type":"topic","title":"Sequence Implementations","kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/TreeValuesTraversalSequence\/Sequence-Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"}}}