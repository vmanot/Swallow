{"schemaVersion":{"major":0,"patch":0,"minor":3},"sections":[],"metadata":{"symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"advanced","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"by"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:SV","text":"UnsafeRawPointer"}],"roleHeading":"Instance Method","externalID":"s:SV8advanced2bySVSi_tF","role":"symbol","title":"advanced(by:)","modules":[{"name":"Compute","relatedModules":["Swift"]}],"extendedModule":"Swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"advanced"},{"kind":"text","text":"("},{"kind":"externalParam","text":"by"},{"text":" ","kind":"text"},{"text":"n","kind":"internalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","text":"Int"},{"kind":"text","text":") -> "},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeRawPointer","kind":"typeIdentifier","preciseIdentifier":"s:SV","text":"UnsafeRawPointer"}]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The distance to advance this value.","type":"text"}]}],"name":"n"}]},{"kind":"content","content":[{"anchor":"return-value","text":"Return Value","type":"heading","level":2},{"inlineContent":[{"text":"A value that is offset from this value by ","type":"text"},{"type":"codeVoice","code":"n"},{"text":".","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Use the "},{"type":"codeVoice","code":"advanced(by:)"},{"text":" method in generic code to offset a value by a","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"specified distance. If you’re working directly with numeric values, use"},{"type":"text","text":" "},{"text":"the addition operator (","type":"text"},{"code":"+","type":"codeVoice"},{"text":") instead of this method.","type":"text"}]},{"type":"codeListing","code":["func addOne<T: Strideable>(to x: T) -> T","    where T.Stride: ExpressibleByIntegerLiteral","{","    return x.advanced(by: 1)","}","","let x = addOne(to: 5)","\/\/ x == 6","let y = addOne(to: 3.5)","\/\/ y = 4.5"],"syntax":null},{"type":"paragraph","inlineContent":[{"text":"If this type’s ","type":"text"},{"type":"codeVoice","code":"Stride"},{"type":"text","text":" type conforms to "},{"type":"codeVoice","code":"BinaryInteger"},{"type":"text","text":", then for a"},{"type":"text","text":" "},{"text":"value ","type":"text"},{"code":"x","type":"codeVoice"},{"type":"text","text":", a distance "},{"type":"codeVoice","code":"n"},{"text":", and a value ","type":"text"},{"code":"y = x.advanced(by: n)","type":"codeVoice"},{"type":"text","text":","},{"text":" ","type":"text"},{"code":"x.distance(to: y) == n","type":"codeVoice"},{"type":"text","text":". Using this method with types that have a"},{"text":" ","type":"text"},{"type":"text","text":"noninteger "},{"type":"codeVoice","code":"Stride"},{"type":"text","text":" may result in an approximation. If the result of"},{"text":" ","type":"text"},{"type":"text","text":"advancing by "},{"code":"n","type":"codeVoice"},{"text":" is not representable as a value of this type, then a","type":"text"},{"type":"text","text":" "},{"type":"text","text":"runtime error may occur."}]},{"style":"note","type":"aside","content":[{"inlineContent":[{"text":"O(1)","type":"text"}],"type":"paragraph"}],"name":"Complexity"}],"kind":"content"}],"abstract":[{"text":"Returns a value that is offset the specified distance from this value.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeRawPointer","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeRawPointer\/Strideable-Implementations"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/unsaferawpointer\/advanced(by:)"]}],"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeRawPointer\/advanced(by:)"},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeRawPointer":{"role":"symbol","abstract":[{"text":"A raw pointer for accessing untyped data.","type":"text"}],"title":"UnsafeRawPointer","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"UnsafeRawPointer"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeRawPointer","kind":"symbol","navigatorTitle":[{"text":"UnsafeRawPointer","kind":"identifier"}],"url":"\/documentation\/compute\/unsaferawpointer","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","abstract":[{"type":"text","text":"A signed integer value type."}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Int","kind":"identifier"}],"navigatorTitle":[{"text":"Int","kind":"identifier"}],"title":"Int","url":"\/documentation\/compute\/int","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeRawPointer/Strideable-Implementations":{"kind":"article","url":"\/documentation\/compute\/unsaferawpointer\/strideable-implementations","type":"topic","abstract":[],"role":"collectionGroup","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeRawPointer\/Strideable-Implementations","title":"Strideable Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeRawPointer/advanced(by:)":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeRawPointer\/advanced(by:)","url":"\/documentation\/compute\/unsaferawpointer\/advanced(by:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"advanced","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"by"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:SV","kind":"typeIdentifier","text":"UnsafeRawPointer"}],"type":"topic","kind":"symbol","role":"symbol","title":"advanced(by:)","abstract":[{"text":"Returns a value that is offset the specified distance from this value.","type":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"}}}