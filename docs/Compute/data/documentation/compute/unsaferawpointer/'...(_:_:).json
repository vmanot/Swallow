{"primaryContentSections":[{"declarations":[{"tokens":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"..."},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"internalParam","text":"minimum"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"maximum","kind":"internalParam"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ClosedRange","preciseIdentifier":"s:SN","kind":"typeIdentifier","text":"ClosedRange"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The lower bound for the range.","type":"text"}]}],"name":"minimum"},{"name":"maximum","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The upper bound for the range."}]}]}],"kind":"parameters"},{"kind":"content","content":[{"level":2,"type":"heading","anchor":"discussion","text":"Discussion"},{"inlineContent":[{"text":"Use the closed range operator (","type":"text"},{"type":"codeVoice","code":"..."},{"text":") to create a closed range of any type","type":"text"},{"text":" ","type":"text"},{"text":"that conforms to the ","type":"text"},{"code":"Comparable","type":"codeVoice"},{"type":"text","text":" protocol. This example creates a"},{"text":" ","type":"text"},{"type":"codeVoice","code":"ClosedRange<Character>"},{"text":" from “a” up to, and including, “z”.","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":["let lowercase = \"a\"...\"z\"","print(lowercase.contains(\"z\"))","\/\/ Prints \"true\""],"syntax":null},{"name":"Precondition","style":"note","type":"aside","content":[{"inlineContent":[{"type":"text","text":""},{"code":"minimum <= maximum","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}]}]}],"metadata":{"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"..."},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"ClosedRange","kind":"typeIdentifier","preciseIdentifier":"s:SN"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"roleHeading":"Operator","externalID":"s:SLsE3zzzoiySNyxGx_xtFZ::SYNTHESIZED::s:SV","modules":[{"relatedModules":["Swift"],"name":"Compute"}],"symbolKind":"op","title":"...(_:_:)","extendedModule":"Swift","role":"symbol"},"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeRawPointer\/...(_:_:)","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/unsaferawpointer\/'...(_:_:)"]}],"abstract":[{"text":"Returns a closed range that contains both of its bounds.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeRawPointer","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeRawPointer\/Comparable-Implementations"]]},"sections":[],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeRawPointer/Comparable-Implementations":{"kind":"article","url":"\/documentation\/compute\/unsaferawpointer\/comparable-implementations","abstract":[],"role":"collectionGroup","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeRawPointer\/Comparable-Implementations","type":"topic","title":"Comparable Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeRawPointer":{"role":"symbol","abstract":[{"text":"A raw pointer for accessing untyped data.","type":"text"}],"title":"UnsafeRawPointer","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"UnsafeRawPointer"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeRawPointer","kind":"symbol","navigatorTitle":[{"text":"UnsafeRawPointer","kind":"identifier"}],"url":"\/documentation\/compute\/unsaferawpointer","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/ClosedRange":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ClosedRange","kind":"identifier"}],"role":"symbol","title":"ClosedRange","url":"\/documentation\/compute\/closedrange","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ClosedRange","abstract":[{"text":"An interval from a lower bound up to, and including, an upper bound.","type":"text"}],"type":"topic","navigatorTitle":[{"text":"ClosedRange","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeRawPointer/...(_:_:)":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"...","kind":"identifier"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:SN","kind":"typeIdentifier","text":"ClosedRange"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":">","kind":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeRawPointer\/...(_:_:)","abstract":[{"text":"Returns a closed range that contains both of its bounds.","type":"text"}],"kind":"symbol","title":"...(_:_:)","role":"symbol","url":"\/documentation\/compute\/unsaferawpointer\/'...(_:_:)","type":"topic"}}}