{"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyIterator","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyIterator\/Sequence-Implementations"]]},"abstract":[{"text":"Returns a sequence of pairs (","type":"text"},{"type":"emphasis","inlineContent":[{"text":"n","type":"text"}]},{"text":", ","type":"text"},{"inlineContent":[{"text":"x","type":"text"}],"type":"emphasis"},{"type":"text","text":"), where "},{"type":"emphasis","inlineContent":[{"text":"n","type":"text"}]},{"text":" represents a","type":"text"},{"text":" ","type":"text"},{"text":"consecutive integer starting at zero and ","type":"text"},{"inlineContent":[{"type":"text","text":"x"}],"type":"emphasis"},{"text":" represents an element of","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the sequence."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"enumerated"},{"kind":"text","text":"() -> "},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/EnumeratedSequence","kind":"typeIdentifier","preciseIdentifier":"s:s18EnumeratedSequenceV","text":"EnumeratedSequence"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}],"languages":["swift"],"platforms":["macOS"]}]},{"content":[{"anchor":"return-value","text":"Return Value","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"A sequence of pairs enumerating the sequence."}]}],"kind":"content"},{"content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"inlineContent":[{"type":"text","text":"This example enumerates the characters of the string “Swift” and prints"},{"text":" ","type":"text"},{"type":"text","text":"each character along with its place in the string."}],"type":"paragraph"},{"code":["for (n, c) in \"Swift\".enumerated() {","    print(\"\\(n): '\\(c)'\")","}","\/\/ Prints \"0: 'S'\"","\/\/ Prints \"1: 'w'\"","\/\/ Prints \"2: 'i'\"","\/\/ Prints \"3: 'f'\"","\/\/ Prints \"4: 't'\""],"type":"codeListing","syntax":null},{"type":"paragraph","inlineContent":[{"text":"When you enumerate a collection, the integer part of each pair is a counter","type":"text"},{"type":"text","text":" "},{"type":"text","text":"for the enumeration, but is not necessarily the index of the paired value."},{"type":"text","text":" "},{"text":"These counters can be used as indices only in instances of zero-based,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"integer-indexed collections, such as "},{"code":"Array","type":"codeVoice"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"ContiguousArray"},{"text":". For","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"other collections the counters may be out of range or of the wrong type"},{"type":"text","text":" "},{"type":"text","text":"to use as an index. To iterate over the elements of a collection with its"},{"type":"text","text":" "},{"type":"text","text":"indices, use the "},{"type":"codeVoice","code":"zip(_:_:)"},{"type":"text","text":" function."}]},{"inlineContent":[{"type":"text","text":"This example iterates over the indices and elements of a set, building a"},{"type":"text","text":" "},{"text":"list consisting of indices of names with five or fewer letters.","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":["let names: Set = [\"Sofia\", \"Camilla\", \"Martina\", \"Mateo\", \"Nicolás\"]","var shorterIndices: [Set<String>.Index] = []","for (i, name) in zip(names.indices, names) {","    if name.count <= 5 {","        shorterIndices.append(i)","    }","}"]},{"type":"paragraph","inlineContent":[{"text":"Now that the ","type":"text"},{"code":"shorterIndices","type":"codeVoice"},{"text":" array holds the indices of the shorter","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"names in the "},{"type":"codeVoice","code":"names"},{"text":" set, you can use those indices to access elements in","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the set."}]},{"type":"codeListing","syntax":null,"code":["for i in shorterIndices {","    print(names[i])","}","\/\/ Prints \"Sofia\"","\/\/ Prints \"Mateo\""]},{"name":"Complexity","style":"note","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"O(1)"}]}]}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/anyiterator\/enumerated()"]}],"metadata":{"modules":[{"name":"Compute","relatedModules":["Swift"]}],"symbolKind":"method","extendedModule":"Swift","roleHeading":"Instance Method","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"enumerated","kind":"identifier"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:s18EnumeratedSequenceV","kind":"typeIdentifier","text":"EnumeratedSequence"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":">","kind":"text"}],"externalID":"s:STsE10enumerateds18EnumeratedSequenceVyxGyF::SYNTHESIZED::s:s11AnyIteratorV","title":"enumerated()"},"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyIterator\/enumerated()","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"major":0,"patch":0},"kind":"symbol","sections":[],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/AnyIterator/enumerated()":{"kind":"symbol","title":"enumerated()","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyIterator\/enumerated()","abstract":[{"type":"text","text":"Returns a sequence of pairs ("},{"inlineContent":[{"text":"n","type":"text"}],"type":"emphasis"},{"text":", ","type":"text"},{"inlineContent":[{"type":"text","text":"x"}],"type":"emphasis"},{"type":"text","text":"), where "},{"type":"emphasis","inlineContent":[{"text":"n","type":"text"}]},{"text":" represents a","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"consecutive integer starting at zero and "},{"inlineContent":[{"text":"x","type":"text"}],"type":"emphasis"},{"type":"text","text":" represents an element of"},{"text":" ","type":"text"},{"text":"the sequence.","type":"text"}],"url":"\/documentation\/compute\/anyiterator\/enumerated()","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"enumerated","kind":"identifier"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"EnumeratedSequence","preciseIdentifier":"s:s18EnumeratedSequenceV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":">","kind":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/AnyIterator/Sequence-Implementations":{"type":"topic","abstract":[],"role":"collectionGroup","title":"Sequence Implementations","kind":"article","url":"\/documentation\/compute\/anyiterator\/sequence-implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyIterator\/Sequence-Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/EnumeratedSequence":{"url":"\/documentation\/compute\/enumeratedsequence","navigatorTitle":[{"text":"EnumeratedSequence","kind":"identifier"}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"EnumeratedSequence"}],"abstract":[{"text":"An enumeration of the elements of a sequence or collection.","type":"text"}],"type":"topic","title":"EnumeratedSequence","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/EnumeratedSequence"},"doc://com.swallow.documentation.Compute/documentation/Compute/AnyIterator":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyIterator","title":"AnyIterator","url":"\/documentation\/compute\/anyiterator","navigatorTitle":[{"text":"AnyIterator","kind":"identifier"}],"type":"topic","role":"symbol","abstract":[{"text":"A type-erased iterator of ","type":"text"},{"type":"codeVoice","code":"Element"},{"text":".","type":"text"}],"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"AnyIterator","kind":"identifier"}]}}}