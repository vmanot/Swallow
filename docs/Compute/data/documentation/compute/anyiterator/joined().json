{"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyIterator","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyIterator\/Sequence-Implementations"]]},"schemaVersion":{"major":0,"patch":0,"minor":3},"sections":[],"kind":"symbol","metadata":{"externalID":"s:STsST7ElementRpzrlE6joineds15FlattenSequenceVyxGyF::SYNTHESIZED::s:s11AnyIteratorV","role":"symbol","roleHeading":"Instance Method","title":"joined()","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"code":"Sequence","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"modules":[{"relatedModules":["Swift"],"name":"Compute"}],"extendedModule":"Swift","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"joined"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s15FlattenSequenceV","text":"FlattenSequence"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}],"symbolKind":"method"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"joined","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"FlattenSequence","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FlattenSequence","preciseIdentifier":"s:s15FlattenSequenceV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":">","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}]},{"content":[{"text":"Return Value","anchor":"return-value","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A flattened view of the elements of this"},{"type":"text","text":" "},{"text":"sequence of sequences.","type":"text"}]}],"kind":"content"},{"content":[{"level":2,"text":"Discussion","anchor":"discussion","type":"heading"},{"inlineContent":[{"text":"In this example, an array of three ranges is flattened so that the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"elements of each range can be iterated in turn."}],"type":"paragraph"},{"syntax":null,"type":"codeListing","code":["let ranges = [0..<3, 8..<10, 15..<17]","","\/\/ A for-in loop over 'ranges' accesses each range:","for range in ranges {","  print(range)","}","\/\/ Prints \"0..<3\"","\/\/ Prints \"8..<10\"","\/\/ Prints \"15..<17\"","","\/\/ Use 'joined()' to access each element of each range:","for index in ranges.joined() {","    print(index, terminator: \" \")","}","\/\/ Prints: \"0 1 2 8 9 15 16\""]}],"kind":"content"}],"abstract":[{"text":"Returns the elements of this sequence of sequences, concatenated.","type":"text"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyIterator\/joined()"},"variants":[{"paths":["\/documentation\/compute\/anyiterator\/joined()"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/AnyIterator":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyIterator","title":"AnyIterator","url":"\/documentation\/compute\/anyiterator","navigatorTitle":[{"text":"AnyIterator","kind":"identifier"}],"type":"topic","role":"symbol","abstract":[{"text":"A type-erased iterator of ","type":"text"},{"type":"codeVoice","code":"Element"},{"text":".","type":"text"}],"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"AnyIterator","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/AnyIterator/Sequence-Implementations":{"type":"topic","abstract":[],"role":"collectionGroup","title":"Sequence Implementations","kind":"article","url":"\/documentation\/compute\/anyiterator\/sequence-implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyIterator\/Sequence-Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/FlattenSequence":{"url":"\/documentation\/compute\/flattensequence","navigatorTitle":[{"kind":"identifier","text":"FlattenSequence"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FlattenSequence","title":"FlattenSequence","kind":"symbol","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"FlattenSequence"}],"type":"topic","abstract":[{"type":"text","text":"A sequence consisting of all the elements contained in each segment"},{"text":" ","type":"text"},{"text":"contained in some ","type":"text"},{"code":"Base","type":"codeVoice"},{"type":"text","text":" sequence."}]},"doc://com.swallow.documentation.Compute/documentation/Compute/AnyIterator/joined()":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyIterator\/joined()","role":"symbol","abstract":[{"text":"Returns the elements of this sequence of sequences, concatenated.","type":"text"}],"kind":"symbol","url":"\/documentation\/compute\/anyiterator\/joined()","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"joined","kind":"identifier"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:s15FlattenSequenceV","kind":"typeIdentifier","text":"FlattenSequence"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}],"conformance":{"constraints":[{"type":"codeVoice","code":"Element"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Sequence"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"type":"topic","title":"joined()"}}}