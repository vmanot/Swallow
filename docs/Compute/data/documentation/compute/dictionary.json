{"topicSections":[{"title":"Structures","identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary\/Keys-swift.struct","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary\/Values-swift.struct"],"generated":true,"anchor":"Structures"},{"title":"Initializers","generated":true,"identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary\/init()","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary\/init(_:uniquingKeysWith:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary\/init(grouping:by:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary\/init(minimumCapacity:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary\/init(uniqueKeysWithValues:)"],"anchor":"Initializers"},{"title":"Instance Properties","generated":true,"identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary\/capacity"],"anchor":"Instance-Properties"},{"identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary\/compactMapValues(_:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary\/filter(_:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary\/index(forKey:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary\/mapValues(_:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary\/merge(_:uniquingKeysWith:)-7smbb","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary\/merge(_:uniquingKeysWith:)-m2ub","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary\/merging(_:uniquingKeysWith:)-3vtfs","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary\/merging(_:uniquingKeysWith:)-9bik6","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary\/popFirst()","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary\/remove(at:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary\/removeAll(keepingCapacity:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary\/reserveCapacity(_:)"],"anchor":"Instance-Methods","title":"Instance Methods","generated":true},{"generated":true,"anchor":"Subscripts","title":"Subscripts","identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary\/subscript(_:default:)"]},{"identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary\/Element"],"title":"Type Aliases","generated":true,"anchor":"Type-Aliases"},{"anchor":"Default-Implementations","identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary\/Collection-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary\/CustomDebugStringConvertible-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary\/CustomReflectable-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary\/CustomStringConvertible-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary\/Decodable-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary\/Encodable-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary\/Equatable-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary\/ExpressibleByDictionaryLiteral-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary\/Hashable-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary\/KeysExposingDictionaryProtocol-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary\/MutableDictionaryProtocol-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary\/Partializable-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary\/Sequence-Implementations"],"generated":true,"title":"Default Implementations"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"attribute","text":"@frozen"},{"kind":"text","text":" "},{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Dictionary"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Key"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"text":"Key","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"text":"Hashable","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Hashable","preciseIdentifier":"s:SH"}]}]},{"kind":"content","content":[{"level":2,"text":"Overview","anchor":"overview","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"A dictionary is a type of hash table, providing fast access to the entries","type":"text"},{"text":" ","type":"text"},{"text":"it contains. Each entry in the table is identified using its key, which is","type":"text"},{"type":"text","text":" "},{"text":"a hashable type such as a string or number. You use that key to retrieve","type":"text"},{"type":"text","text":" "},{"text":"the corresponding value, which can be any object. In other languages,","type":"text"},{"type":"text","text":" "},{"text":"similar data types are known as hashes or associated arrays.","type":"text"}]},{"inlineContent":[{"type":"text","text":"Create a new dictionary by using a dictionary literal. A dictionary literal"},{"type":"text","text":" "},{"text":"is a comma-separated list of key-value pairs, in which a colon separates","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"each key from its associated value, surrounded by square brackets. You can"},{"text":" ","type":"text"},{"type":"text","text":"assign a dictionary literal to a variable or constant or pass it to a"},{"type":"text","text":" "},{"text":"function that expects a dictionary.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"Here’s how you would create a dictionary of HTTP response codes and their","type":"text"},{"type":"text","text":" "},{"type":"text","text":"related messages:"}]},{"code":["var responseMessages = [200: \"OK\",","                        403: \"Access forbidden\",","                        404: \"File not found\",","                        500: \"Internal server error\"]"],"type":"codeListing","syntax":null},{"inlineContent":[{"type":"text","text":"The "},{"code":"responseMessages","type":"codeVoice"},{"type":"text","text":" variable is inferred to have type "},{"code":"[Int: String]","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"The "},{"code":"Key","type":"codeVoice"},{"type":"text","text":" type of the dictionary is "},{"code":"Int","type":"codeVoice"},{"type":"text","text":", and the "},{"type":"codeVoice","code":"Value"},{"text":" type of the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"dictionary is "},{"code":"String","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"To create a dictionary with no key-value pairs, use an empty dictionary"},{"type":"text","text":" "},{"type":"text","text":"literal ("},{"type":"codeVoice","code":"[:]"},{"type":"text","text":")."}]},{"type":"codeListing","syntax":null,"code":["var emptyDict: [String: String] = [:]"]},{"type":"paragraph","inlineContent":[{"text":"Any type that conforms to the ","type":"text"},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":" protocol can be used as a"},{"text":" ","type":"text"},{"type":"text","text":"dictionary’s "},{"type":"codeVoice","code":"Key"},{"type":"text","text":" type, including all of Swift’s basic types. You can use"},{"text":" ","type":"text"},{"text":"your own custom types as dictionary keys by making them conform to the","type":"text"},{"text":" ","type":"text"},{"code":"Hashable","type":"codeVoice"},{"text":" protocol.","type":"text"}]},{"type":"heading","text":"Getting and Setting Dictionary Values","level":1,"anchor":"Getting-and-Setting-Dictionary-Values"},{"inlineContent":[{"type":"text","text":"The most common way to access values in a dictionary is to use a key as a"},{"type":"text","text":" "},{"type":"text","text":"subscript. Subscripting with a key takes the following form:"}],"type":"paragraph"},{"type":"codeListing","code":["print(responseMessages[200])","\/\/ Prints \"Optional(\"OK\")\""],"syntax":null},{"type":"paragraph","inlineContent":[{"type":"text","text":"Subscripting a dictionary with a key returns an optional value, because a"},{"text":" ","type":"text"},{"type":"text","text":"dictionary might not hold a value for the key that you use in the"},{"type":"text","text":" "},{"text":"subscript.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The next example uses key-based subscripting of the "},{"type":"codeVoice","code":"responseMessages"},{"type":"text","text":" "},{"text":"dictionary with two keys that exist in the dictionary and one that does","type":"text"},{"type":"text","text":" "},{"text":"not.","type":"text"}]},{"code":["let httpResponseCodes = [200, 403, 301]","for code in httpResponseCodes {","    if let message = responseMessages[code] {","        print(\"Response \\(code): \\(message)\")","    } else {","        print(\"Unknown response \\(code)\")","    }","}","\/\/ Prints \"Response 200: OK\"","\/\/ Prints \"Response 403: Access forbidden\"","\/\/ Prints \"Unknown response 301\""],"type":"codeListing","syntax":null},{"type":"paragraph","inlineContent":[{"text":"You can also update, modify, or remove keys and values from a dictionary","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"using the key-based subscript. To add a new key-value pair, assign a value"},{"type":"text","text":" "},{"type":"text","text":"to a key that isn’t yet a part of the dictionary."}]},{"type":"codeListing","code":["responseMessages[301] = \"Moved permanently\"","print(responseMessages[301])","\/\/ Prints \"Optional(\"Moved permanently\")\""],"syntax":null},{"type":"paragraph","inlineContent":[{"text":"Update an existing value by assigning a new value to a key that already","type":"text"},{"type":"text","text":" "},{"text":"exists in the dictionary. If you assign ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":" to an existing key, the key"},{"text":" ","type":"text"},{"text":"and its associated value are removed. The following example updates the","type":"text"},{"type":"text","text":" "},{"text":"value for the ","type":"text"},{"type":"codeVoice","code":"404"},{"text":" code to be simply “Not found” and removes the","type":"text"},{"type":"text","text":" "},{"text":"key-value pair for the ","type":"text"},{"code":"500","type":"codeVoice"},{"text":" code entirely.","type":"text"}]},{"syntax":null,"code":["responseMessages[404] = \"Not found\"","responseMessages[500] = nil","print(responseMessages)","\/\/ Prints \"[301: \"Moved permanently\", 200: \"OK\", 403: \"Access forbidden\", 404: \"Not found\"]\""],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"In a mutable "},{"type":"codeVoice","code":"Dictionary"},{"type":"text","text":" instance, you can modify in place a value that"},{"text":" ","type":"text"},{"text":"you’ve accessed through a keyed subscript. The code sample below declares a","type":"text"},{"type":"text","text":" "},{"type":"text","text":"dictionary called "},{"code":"interestingNumbers","type":"codeVoice"},{"type":"text","text":" with string keys and values that"},{"text":" ","type":"text"},{"type":"text","text":"are integer arrays, then sorts each array in-place in descending order."}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":["var interestingNumbers = [\"primes\": [2, 3, 5, 7, 11, 13, 17],","                          \"triangular\": [1, 3, 6, 10, 15, 21, 28],","                          \"hexagonal\": [1, 6, 15, 28, 45, 66, 91]]","for key in interestingNumbers.keys {","    interestingNumbers[key]?.sort(by: >)","}","","print(interestingNumbers[\"primes\"]!)","\/\/ Prints \"[17, 13, 11, 7, 5, 3, 2]\""]},{"level":1,"text":"Iterating Over the Contents of a Dictionary","anchor":"Iterating-Over-the-Contents-of-a-Dictionary","type":"heading"},{"inlineContent":[{"type":"text","text":"Every dictionary is an unordered collection of key-value pairs. You can"},{"type":"text","text":" "},{"type":"text","text":"iterate over a dictionary using a "},{"type":"codeVoice","code":"for"},{"type":"text","text":"-"},{"code":"in","type":"codeVoice"},{"type":"text","text":" loop, decomposing each"},{"type":"text","text":" "},{"text":"key-value pair into the elements of a tuple.","type":"text"}],"type":"paragraph"},{"code":["let imagePaths = [\"star\": \"\/glyphs\/star.png\",","                  \"portrait\": \"\/images\/content\/portrait.jpg\",","                  \"spacer\": \"\/images\/shared\/spacer.gif\"]","","for (name, path) in imagePaths {","    print(\"The path to '\\(name)' is '\\(path)'.\")","}","\/\/ Prints \"The path to 'star' is '\/glyphs\/star.png'.\"","\/\/ Prints \"The path to 'portrait' is '\/images\/content\/portrait.jpg'.\"","\/\/ Prints \"The path to 'spacer' is '\/images\/shared\/spacer.gif'.\""],"type":"codeListing","syntax":null},{"inlineContent":[{"text":"The order of key-value pairs in a dictionary is stable between mutations","type":"text"},{"type":"text","text":" "},{"type":"text","text":"but is otherwise unpredictable. If you need an ordered collection of"},{"text":" ","type":"text"},{"text":"key-value pairs and don’t need the fast key lookup that ","type":"text"},{"code":"Dictionary","type":"codeVoice"},{"text":" ","type":"text"},{"type":"text","text":"provides, see the "},{"code":"KeyValuePairs","type":"codeVoice"},{"text":" type for an alternative.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"You can search a dictionary’s contents for a particular value using the","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"contains(where:)"},{"type":"text","text":" or "},{"code":"firstIndex(where:)","type":"codeVoice"},{"type":"text","text":" methods supplied by default"},{"text":" ","type":"text"},{"type":"text","text":"implementation. The following example checks to see if "},{"code":"imagePaths","type":"codeVoice"},{"type":"text","text":" contains"},{"type":"text","text":" "},{"type":"text","text":"any paths in the "},{"type":"codeVoice","code":"\"\/glyphs\""},{"text":" directory:","type":"text"}],"type":"paragraph"},{"syntax":null,"code":["let glyphIndex = imagePaths.firstIndex(where: { $0.value.hasPrefix(\"\/glyphs\") })","if let index = glyphIndex {","    print(\"The '\\(imagePaths[index].key)' image is a glyph.\")","} else {","    print(\"No glyphs found!\")","}","\/\/ Prints \"The 'star' image is a glyph.\")"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Note that in this example, "},{"type":"codeVoice","code":"imagePaths"},{"text":" is subscripted using a dictionary","type":"text"},{"text":" ","type":"text"},{"text":"index. Unlike the key-based subscript, the index-based subscript returns","type":"text"},{"type":"text","text":" "},{"text":"the corresponding key-value pair as a non-optional tuple.","type":"text"}]},{"type":"codeListing","code":["print(imagePaths[glyphIndex!])","\/\/ Prints \"(key: \"star\", value: \"\/glyphs\/star.png\")\""],"syntax":null},{"inlineContent":[{"type":"text","text":"A dictionary’s indices stay valid across additions to the dictionary as"},{"text":" ","type":"text"},{"type":"text","text":"long as the dictionary has enough capacity to store the added values"},{"type":"text","text":" "},{"text":"without allocating more buffer. When a dictionary outgrows its buffer,","type":"text"},{"type":"text","text":" "},{"text":"existing indices may be invalidated without any notification.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"When you know how many new values you’re adding to a dictionary, use the","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"init(minimumCapacity:)"},{"text":" initializer to allocate the correct amount of","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"buffer."}]},{"text":"Bridging Between Dictionary and NSDictionary","level":1,"anchor":"Bridging-Between-Dictionary-and-NSDictionary","type":"heading"},{"inlineContent":[{"type":"text","text":"You can bridge between "},{"type":"codeVoice","code":"Dictionary"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"NSDictionary"},{"type":"text","text":" using the "},{"code":"as","type":"codeVoice"},{"type":"text","text":" "},{"text":"operator. For bridging to be possible, the ","type":"text"},{"code":"Key","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Value"},{"type":"text","text":" types of a"},{"text":" ","type":"text"},{"type":"text","text":"dictionary must be classes, "},{"type":"codeVoice","code":"@objc"},{"text":" protocols, or types that bridge to","type":"text"},{"text":" ","type":"text"},{"text":"Foundation types.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"Bridging from ","type":"text"},{"type":"codeVoice","code":"Dictionary"},{"type":"text","text":" to "},{"code":"NSDictionary","type":"codeVoice"},{"text":" always takes O(1) time and","type":"text"},{"type":"text","text":" "},{"type":"text","text":"space. When the dictionary’s "},{"type":"codeVoice","code":"Key"},{"type":"text","text":" and "},{"code":"Value","type":"codeVoice"},{"text":" types are neither classes","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"nor "},{"code":"@objc","type":"codeVoice"},{"type":"text","text":" protocols, any required bridging of elements occurs at the"},{"type":"text","text":" "},{"type":"text","text":"first access of each element. For this reason, the first operation that"},{"text":" ","type":"text"},{"text":"uses the contents of the dictionary may take O(","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"n"}]},{"text":").","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Bridging from "},{"type":"codeVoice","code":"NSDictionary"},{"text":" to ","type":"text"},{"code":"Dictionary","type":"codeVoice"},{"type":"text","text":" first calls the "},{"type":"codeVoice","code":"copy(with:)"},{"type":"text","text":" "},{"type":"text","text":"method ("},{"type":"codeVoice","code":"- copyWithZone:"},{"text":" in Objective-C) on the dictionary to get an","type":"text"},{"type":"text","text":" "},{"type":"text","text":"immutable copy and then performs additional Swift bookkeeping work that"},{"text":" ","type":"text"},{"type":"text","text":"takes O(1) time. For instances of "},{"type":"codeVoice","code":"NSDictionary"},{"type":"text","text":" that are already"},{"text":" ","type":"text"},{"type":"text","text":"immutable, "},{"type":"codeVoice","code":"copy(with:)"},{"text":" usually returns the same dictionary in O(1) time;","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"otherwise, the copying performance is unspecified. The instances of"},{"type":"text","text":" "},{"type":"codeVoice","code":"NSDictionary"},{"text":" and ","type":"text"},{"code":"Dictionary","type":"codeVoice"},{"text":" share buffer using the same copy-on-write","type":"text"},{"type":"text","text":" "},{"type":"text","text":"optimization that is used when two instances of "},{"type":"codeVoice","code":"Dictionary"},{"text":" share","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"buffer."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute"]]},"abstract":[{"text":"A collection whose elements are key-value pairs.","type":"text"}],"relationshipsSections":[{"title":"Conforms To","identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CVarArg","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Copyable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CustomDebugStringConvertible","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CustomReflectable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CustomStringConvertible","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Decodable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Encodable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Equatable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ExpressibleByDictionaryLiteral","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Hashable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Partializable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sendable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence","doc:\/\/com.swallow.documentation.Compute\/7Swallow21AnyCodableConvertibleP","doc:\/\/com.swallow.documentation.Compute\/7Swallow9CountableP","doc:\/\/com.swallow.documentation.Compute\/7Swallow28DestructivelyMutableSequenceP","doc:\/\/com.swallow.documentation.Compute\/7Swallow18DictionaryProtocolP","doc:\/\/com.swallow.documentation.Compute\/7Swallow8DiffableP","doc:\/\/com.swallow.documentation.Compute\/7Swallow45ElementRemoveableDestructivelyMutableSequenceP","doc:\/\/com.swallow.documentation.Compute\/7Swallow18ExtensibleSequenceP","doc:\/\/com.swallow.documentation.Compute\/7Swallow9InitiableP","doc:\/\/com.swallow.documentation.Compute\/7Swallow36KeyExposingMutableDictionaryProtocolP","doc:\/\/com.swallow.documentation.Compute\/7Swallow11KeyedValuesP","doc:\/\/com.swallow.documentation.Compute\/7Swallow30KeysExposingDictionaryProtocolP","doc:\/\/com.swallow.documentation.Compute\/7Swallow25MutableDictionaryProtocolP","doc:\/\/com.swallow.documentation.Compute\/7Swallow15MutableSequenceP","doc:\/\/com.swallow.documentation.Compute\/7Swallow23NonDestroyingCollectionP","doc:\/\/com.swallow.documentation.Compute\/7Swallow21NonDestroyingSequenceP","doc:\/\/com.swallow.documentation.Compute\/7Swallow017SequenceInitiableB0P"],"kind":"relationships","type":"conformsTo"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary"},"sections":[],"variants":[{"paths":["\/documentation\/compute\/dictionary"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"symbolKind":"struct","title":"Dictionary","externalID":"s:SD","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Dictionary","kind":"identifier"}],"modules":[{"name":"Compute"}],"roleHeading":"Structure","navigatorTitle":[{"text":"Dictionary","kind":"identifier"}],"role":"symbol"},"kind":"symbol","references":{"doc://com.swallow.documentation.Compute/7Swallow21NonDestroyingSequenceP":{"type":"unresolvable","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow21NonDestroyingSequenceP","title":"Swallow.NonDestroyingSequence"},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence","title":"Sequence","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Sequence"}],"type":"topic","navigatorTitle":[{"text":"Sequence","kind":"identifier"}],"abstract":[{"type":"text","text":"A type that provides sequential, iterated access to its elements."}],"url":"\/documentation\/compute\/sequence","role":"symbol","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Key"},{"text":" conforms to ","type":"text"},{"code":"Hashable","type":"codeVoice"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"code":"Copyable","type":"codeVoice"},{"text":", and ","type":"text"},{"code":"Value","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Escapable"},{"text":".","type":"text"}]}},"doc://com.swallow.documentation.Compute/documentation/Compute/Dictionary/merging(_:uniquingKeysWith:)-9bik6":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"merging","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"S"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"uniquingKeysWith"},{"kind":"text","text":": ("},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> ["},{"text":"Key","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":"]"}],"conformance":{"constraints":[{"code":"Key","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Hashable","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"kind":"symbol","abstract":[{"type":"text","text":"Creates a dictionary by merging key-value pairs in a sequence into the"},{"text":" ","type":"text"},{"type":"text","text":"dictionary, using a combining closure to determine the value for"},{"type":"text","text":" "},{"text":"duplicate keys.","type":"text"}],"title":"merging(_:uniquingKeysWith:)","type":"topic","url":"\/documentation\/compute\/dictionary\/merging(_:uniquingkeyswith:)-9bik6","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary\/merging(_:uniquingKeysWith:)-9bik6"},"doc://com.swallow.documentation.Compute/documentation/Compute/Copyable":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Copyable"}],"conformance":{"constraints":[{"type":"codeVoice","code":"Key"},{"text":" conforms to ","type":"text"},{"code":"Hashable","type":"codeVoice"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"url":"\/documentation\/compute\/copyable","title":"Copyable","abstract":[{"type":"text","text":"A type whose values can be implicitly or explicitly copied."}],"type":"topic","navigatorTitle":[{"text":"Copyable","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Copyable","kind":"symbol","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Dictionary/MutableDictionaryProtocol-Implementations":{"url":"\/documentation\/compute\/dictionary\/mutabledictionaryprotocol-implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary\/MutableDictionaryProtocol-Implementations","kind":"article","type":"topic","title":"MutableDictionaryProtocol Implementations","abstract":[],"role":"collectionGroup"},"doc://com.swallow.documentation.Compute/documentation/Compute/Collection":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection","title":"Collection","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Collection","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"Collection","kind":"identifier"}],"abstract":[{"text":"A sequence whose elements can be traversed multiple times,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"nondestructively, and accessed by an indexed subscript."}],"url":"\/documentation\/compute\/collection","role":"symbol","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Key","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":", "},{"type":"codeVoice","code":"Value"},{"text":" conforms to ","type":"text"},{"code":"Copyable","type":"codeVoice"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Escapable"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]}},"doc://com.swallow.documentation.Compute/documentation/Compute/Dictionary/merging(_:uniquingKeysWith:)-3vtfs":{"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"merging"},{"kind":"text","text":"(["},{"text":"Key","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":"], "},{"text":"uniquingKeysWith","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Value","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> [","kind":"text"},{"text":"Key","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Key","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Hashable","type":"codeVoice"},{"text":".","type":"text"}]},"url":"\/documentation\/compute\/dictionary\/merging(_:uniquingkeyswith:)-3vtfs","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary\/merging(_:uniquingKeysWith:)-3vtfs","role":"symbol","abstract":[{"type":"text","text":"Creates a dictionary by merging the given dictionary into this"},{"text":" ","type":"text"},{"type":"text","text":"dictionary, using a combining closure to determine the value for"},{"text":" ","type":"text"},{"text":"duplicate keys.","type":"text"}],"title":"merging(_:uniquingKeysWith:)","type":"topic"},"doc://com.swallow.documentation.Compute/7Swallow18DictionaryProtocolP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow18DictionaryProtocolP","title":"Swallow.DictionaryProtocol","type":"unresolvable"},"doc://com.swallow.documentation.Compute/documentation/Compute/Dictionary/Partializable-Implementations":{"role":"collectionGroup","title":"Partializable Implementations","type":"topic","kind":"article","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary\/Partializable-Implementations","url":"\/documentation\/compute\/dictionary\/partializable-implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/Equatable":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Equatable","title":"Equatable","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Equatable","kind":"identifier"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"Equatable"}],"abstract":[{"text":"A type that can be compared for value equality.","type":"text"}],"url":"\/documentation\/compute\/equatable","role":"symbol","conformance":{"constraints":[{"code":"Key","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Value"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]}},"doc://com.swallow.documentation.Compute/7Swallow11KeyedValuesP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow11KeyedValuesP","title":"Swallow.KeyedValues","type":"unresolvable"},"doc://com.swallow.documentation.Compute/7Swallow36KeyExposingMutableDictionaryProtocolP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow36KeyExposingMutableDictionaryProtocolP","type":"unresolvable","title":"Swallow.KeyExposingMutableDictionaryProtocol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Encodable":{"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"Encodable","kind":"identifier"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Key"},{"type":"text","text":" conforms to "},{"code":"Encodable","type":"codeVoice"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Key"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Value"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Encodable"},{"type":"text","text":"."}]},"url":"\/documentation\/compute\/encodable","title":"Encodable","abstract":[{"text":"A type that can encode itself to an external representation.","type":"text"}],"type":"topic","navigatorTitle":[{"text":"Encodable","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Encodable","kind":"symbol","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Dictionary/Keys-swift.struct":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Keys","kind":"identifier"}],"type":"topic","title":"Dictionary.Keys","url":"\/documentation\/compute\/dictionary\/keys-swift.struct","navigatorTitle":[{"kind":"identifier","text":"Keys"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary\/Keys-swift.struct","role":"symbol","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Key"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":"."}]},"abstract":[{"text":"A view of a dictionary’s keys.","type":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Dictionary/filter(_:)":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary\/filter(_:)","title":"filter(_:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"filter","kind":"identifier"},{"text":"((","kind":"text"},{"text":"Dictionary","preciseIdentifier":"s:SD","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Key","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Value","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:SD7Elementa"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":") "},{"text":"rethrows","kind":"keyword"},{"text":" -> [","kind":"text"},{"text":"Key","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"type":"topic","abstract":[{"type":"text","text":"Returns a new dictionary containing the key-value pairs of the dictionary"},{"text":" ","type":"text"},{"type":"text","text":"that satisfy the given predicate."}],"url":"\/documentation\/compute\/dictionary\/filter(_:)","role":"symbol","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Key"},{"type":"text","text":" conforms to "},{"code":"Hashable","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}]}},"doc://com.swallow.documentation.Compute/documentation/Compute/Dictionary/subscript(_:default:)":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary\/subscript(_:default:)","url":"\/documentation\/compute\/dictionary\/subscript(_:default:)","fragments":[{"text":"subscript","kind":"keyword"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Key"},{"text":", ","kind":"text"},{"text":"default","kind":"externalParam"},{"text":" _: ","kind":"text"},{"text":"@autoclosure ","kind":"attribute"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Value"},{"text":") -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"}],"kind":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Key","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Hashable"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"subscript(_:default:)","type":"topic","abstract":[{"text":"Accesses the value with the given key, falling back to the given default","type":"text"},{"text":" ","type":"text"},{"text":"value if the key isn’t found.","type":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Dictionary/init(_:uniquingKeysWith:)":{"kind":"symbol","url":"\/documentation\/compute\/dictionary\/init(_:uniquingkeyswith:)","role":"symbol","type":"topic","title":"init(_:uniquingKeysWith:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary\/init(_:uniquingKeysWith:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"text":"S","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"S","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"uniquingKeysWith","kind":"externalParam"},{"kind":"text","text":": ("},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"text":") ","kind":"text"},{"kind":"keyword","text":"rethrows"}],"abstract":[{"type":"text","text":"Creates a new dictionary from the key-value pairs in the given sequence,"},{"text":" ","type":"text"},{"text":"using a combining closure to determine the value for any duplicate keys.","type":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Dictionary/CustomStringConvertible-Implementations":{"kind":"article","url":"\/documentation\/compute\/dictionary\/customstringconvertible-implementations","type":"topic","title":"CustomStringConvertible Implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary\/CustomStringConvertible-Implementations","abstract":[],"role":"collectionGroup"},"doc://com.swallow.documentation.Compute/documentation/Compute/Dictionary/init(grouping:by:)":{"abstract":[{"text":"Creates a new dictionary whose keys are the groupings returned by the","type":"text"},{"type":"text","text":" "},{"text":"given closure and whose values are arrays of the elements that returned","type":"text"},{"text":" ","type":"text"},{"text":"each key.","type":"text"}],"fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"S"},{"text":">(","kind":"text"},{"text":"grouping","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"S"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"by"},{"text":": (","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Key","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"rethrows"}],"url":"\/documentation\/compute\/dictionary\/init(grouping:by:)","title":"init(grouping:by:)","role":"symbol","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary\/init(grouping:by:)","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/Dictionary/ExpressibleByDictionaryLiteral-Implementations":{"title":"ExpressibleByDictionaryLiteral Implementations","kind":"article","url":"\/documentation\/compute\/dictionary\/expressiblebydictionaryliteral-implementations","type":"topic","abstract":[],"role":"collectionGroup","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary\/ExpressibleByDictionaryLiteral-Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/Dictionary/Equatable-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary\/Equatable-Implementations","type":"topic","title":"Equatable Implementations","url":"\/documentation\/compute\/dictionary\/equatable-implementations","role":"collectionGroup","kind":"article","abstract":[]},"doc://com.swallow.documentation.Compute/documentation/Compute/CustomReflectable":{"title":"CustomReflectable","type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CustomReflectable","conformance":{"constraints":[{"type":"codeVoice","code":"Key"},{"type":"text","text":" conforms to "},{"code":"Hashable","type":"codeVoice"},{"type":"text","text":", "},{"code":"Value","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Copyable"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Value"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Escapable"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"navigatorTitle":[{"text":"CustomReflectable","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/compute\/customreflectable","role":"symbol","abstract":[{"text":"A type that explicitly supplies its own mirror.","type":"text"}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CustomReflectable"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Dictionary/Collection-Implementations":{"kind":"article","type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary\/Collection-Implementations","url":"\/documentation\/compute\/dictionary\/collection-implementations","abstract":[],"role":"collectionGroup","title":"Collection Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/Dictionary/compactMapValues(_:)":{"abstract":[{"text":"Returns a new dictionary containing only the key-value pairs that have","type":"text"},{"type":"text","text":" "},{"text":"non-","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":" values as the result of transformation by the given closure."}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary\/compactMapValues(_:)","title":"compactMapValues(_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"compactMapValues","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">(("},{"text":"Value","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":"?) ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:SD","text":"Dictionary","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Key"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Key"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":"."}]},"url":"\/documentation\/compute\/dictionary\/compactmapvalues(_:)","type":"topic","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Dictionary/Decodable-Implementations":{"kind":"article","abstract":[],"role":"collectionGroup","title":"Decodable Implementations","url":"\/documentation\/compute\/dictionary\/decodable-implementations","type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary\/Decodable-Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/Dictionary/merge(_:uniquingKeysWith:)-7smbb":{"abstract":[{"type":"text","text":"Merges the key-value pairs in the given sequence into the dictionary,"},{"type":"text","text":" "},{"text":"using a combining closure to determine the value for any duplicate keys.","type":"text"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Key","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":"."}]},"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary\/merge(_:uniquingKeysWith:)-7smbb","role":"symbol","type":"topic","url":"\/documentation\/compute\/dictionary\/merge(_:uniquingkeyswith:)-7smbb","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"merge","kind":"identifier"},{"kind":"text","text":"<"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"uniquingKeysWith"},{"text":": (","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Value"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"}],"title":"merge(_:uniquingKeysWith:)","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Dictionary/popFirst()":{"kind":"symbol","type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary\/popFirst()","abstract":[{"type":"text","text":"Removes and returns the first key-value pair of the dictionary if the"},{"type":"text","text":" "},{"type":"text","text":"dictionary isn’t empty."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"popFirst","kind":"identifier"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SD","text":"Dictionary"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Key"},{"text":", ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SD7Elementa","text":"Element"},{"kind":"text","text":"?"}],"url":"\/documentation\/compute\/dictionary\/popfirst()","title":"popFirst()","role":"symbol","conformance":{"constraints":[{"type":"codeVoice","code":"Key"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]}},"doc://com.swallow.documentation.Compute/documentation/Compute/Dictionary/Hashable-Implementations":{"role":"collectionGroup","abstract":[],"url":"\/documentation\/compute\/dictionary\/hashable-implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary\/Hashable-Implementations","title":"Hashable Implementations","type":"topic","kind":"article"},"doc://com.swallow.documentation.Compute/7Swallow28DestructivelyMutableSequenceP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow28DestructivelyMutableSequenceP","type":"unresolvable","title":"Swallow.DestructivelyMutableSequence"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Dictionary/Element":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary\/Element","navigatorTitle":[{"text":"Element","kind":"identifier"}],"role":"symbol","title":"Dictionary.Element","fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"text":"Element","kind":"identifier"}],"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"The element type of a dictionary: a tuple containing an individual"},{"text":" ","type":"text"},{"type":"text","text":"key-value pair."}],"url":"\/documentation\/compute\/dictionary\/element"},"doc://com.swallow.documentation.Compute/documentation/Compute/CustomDebugStringConvertible":{"navigatorTitle":[{"text":"CustomDebugStringConvertible","kind":"identifier"}],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Key"},{"type":"text","text":" conforms to "},{"code":"Hashable","type":"codeVoice"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"code":"Copyable","type":"codeVoice"},{"type":"text","text":", and "},{"code":"Value","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Escapable"},{"text":".","type":"text"}]},"role":"symbol","url":"\/documentation\/compute\/customdebugstringconvertible","abstract":[{"text":"A type with a customized textual representation suitable for debugging","type":"text"},{"type":"text","text":" "},{"type":"text","text":"purposes."}],"kind":"symbol","type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CustomDebugStringConvertible","title":"CustomDebugStringConvertible","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CustomDebugStringConvertible","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Decodable":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Decodable","title":"Decodable","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Decodable","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"Decodable","kind":"identifier"}],"abstract":[{"text":"A type that can decode itself from an external representation.","type":"text"}],"url":"\/documentation\/compute\/decodable","role":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Key"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Decodable"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Key"},{"type":"text","text":" conforms to "},{"code":"Hashable","type":"codeVoice"},{"text":", and ","type":"text"},{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"code":"Decodable","type":"codeVoice"},{"text":".","type":"text"}]}},"doc://com.swallow.documentation.Compute/documentation/Compute/Sendable":{"navigatorTitle":[{"text":"Sendable","kind":"identifier"}],"type":"topic","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Key"},{"type":"text","text":" conforms to "},{"code":"Hashable","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"Key"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"code":"Copyable","type":"codeVoice"},{"type":"text","text":", "},{"code":"Value","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Escapable","type":"codeVoice"},{"type":"text","text":", and "},{"code":"Value","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Sendable"},{"text":".","type":"text"}]},"role":"symbol","url":"\/documentation\/compute\/sendable","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sendable","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"Sendable","kind":"identifier"}],"abstract":[],"title":"Sendable","kind":"symbol"},"doc://com.swallow.documentation.Compute/7Swallow21AnyCodableConvertibleP":{"type":"unresolvable","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow21AnyCodableConvertibleP","title":"Swallow.AnyCodableConvertible"},"doc://com.swallow.documentation.Compute/documentation/Compute/Dictionary/Values-swift.struct":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Values","kind":"identifier"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Key","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Hashable","type":"codeVoice"},{"text":".","type":"text"}]},"role":"symbol","title":"Dictionary.Values","url":"\/documentation\/compute\/dictionary\/values-swift.struct","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary\/Values-swift.struct","abstract":[{"type":"text","text":"A view of a dictionary’s values."}],"type":"topic","navigatorTitle":[{"text":"Values","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/7Swallow45ElementRemoveableDestructivelyMutableSequenceP":{"type":"unresolvable","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow45ElementRemoveableDestructivelyMutableSequenceP","title":"Swallow.ElementRemoveableDestructivelyMutableSequence"},"doc://com.swallow.documentation.Compute/documentation/Compute/Dictionary/capacity":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary\/capacity","abstract":[{"type":"text","text":"The total number of key-value pairs that the dictionary can contain without"},{"type":"text","text":" "},{"type":"text","text":"allocating new storage."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"capacity"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"role":"symbol","title":"capacity","type":"topic","url":"\/documentation\/compute\/dictionary\/capacity","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Key","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]}},"doc://com.swallow.documentation.Compute/7Swallow8DiffableP":{"type":"unresolvable","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow8DiffableP","title":"Swallow.Diffable"},"doc://com.swallow.documentation.Compute/7Swallow25MutableDictionaryProtocolP":{"type":"unresolvable","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow25MutableDictionaryProtocolP","title":"Swallow.MutableDictionaryProtocol"},"doc://com.swallow.documentation.Compute/7Swallow15MutableSequenceP":{"type":"unresolvable","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow15MutableSequenceP","title":"Swallow.MutableSequence"},"doc://com.swallow.documentation.Compute/documentation/Compute/Dictionary/index(forKey:)":{"url":"\/documentation\/compute\/dictionary\/index(forkey:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"index","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"forKey"},{"kind":"text","text":": "},{"text":"Key","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:SD","kind":"typeIdentifier","text":"Dictionary"},{"kind":"text","text":"<"},{"text":"Key","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">."},{"preciseIdentifier":"s:SD5IndexV","kind":"typeIdentifier","text":"Index"},{"kind":"text","text":"?"}],"abstract":[{"text":"Returns the index for the given key.","type":"text"}],"type":"topic","title":"index(forKey:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary\/index(forKey:)","conformance":{"constraints":[{"type":"codeVoice","code":"Key"},{"text":" conforms to ","type":"text"},{"code":"Hashable","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Hashable":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Hashable","title":"Hashable","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"Hashable","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"Hashable","kind":"identifier"}],"abstract":[{"type":"text","text":"A type that can be hashed into a "},{"type":"codeVoice","code":"Hasher"},{"text":" to produce an integer hash value.","type":"text"}],"url":"\/documentation\/compute\/hashable","role":"symbol","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Key"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Value"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Hashable"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]}},"doc://com.swallow.documentation.Compute/documentation/Compute/Dictionary/KeysExposingDictionaryProtocol-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary\/KeysExposingDictionaryProtocol-Implementations","title":"KeysExposingDictionaryProtocol Implementations","role":"collectionGroup","type":"topic","url":"\/documentation\/compute\/dictionary\/keysexposingdictionaryprotocol-implementations","kind":"article","abstract":[]},"doc://com.swallow.documentation.Compute/documentation/Compute/Dictionary/CustomReflectable-Implementations":{"abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary\/CustomReflectable-Implementations","title":"CustomReflectable Implementations","url":"\/documentation\/compute\/dictionary\/customreflectable-implementations","role":"collectionGroup","type":"topic","kind":"article"},"doc://com.swallow.documentation.Compute/documentation/Compute/CustomStringConvertible":{"navigatorTitle":[{"kind":"identifier","text":"CustomStringConvertible"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Key","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":", "},{"type":"codeVoice","code":"Value"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Copyable"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"code":"Escapable","type":"codeVoice"},{"type":"text","text":"."}]},"role":"symbol","url":"\/documentation\/compute\/customstringconvertible","abstract":[{"type":"text","text":"A type with a customized textual representation."}],"kind":"symbol","title":"CustomStringConvertible","type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CustomStringConvertible","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"CustomStringConvertible","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Dictionary/reserveCapacity(_:)":{"abstract":[{"text":"Reserves enough space to store the specified number of key-value pairs.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"reserveCapacity","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"text":")","kind":"text"}],"role":"symbol","url":"\/documentation\/compute\/dictionary\/reservecapacity(_:)","type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary\/reserveCapacity(_:)","title":"reserveCapacity(_:)","kind":"symbol","conformance":{"constraints":[{"type":"codeVoice","code":"Key"},{"text":" conforms to ","type":"text"},{"code":"Hashable","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]}},"doc://com.swallow.documentation.Compute/documentation/Compute/Dictionary/removeAll(keepingCapacity:)":{"abstract":[{"type":"text","text":"Removes all key-value pairs from the dictionary."}],"role":"symbol","type":"topic","title":"removeAll(keepingCapacity:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary\/removeAll(keepingCapacity:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"removeAll"},{"kind":"text","text":"("},{"kind":"externalParam","text":"keepingCapacity"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":")","kind":"text"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Key","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Hashable","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"url":"\/documentation\/compute\/dictionary\/removeall(keepingcapacity:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/Dictionary/remove(at:)":{"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Key","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Hashable","type":"codeVoice"},{"type":"text","text":"."}]},"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary\/remove(at:)","abstract":[{"type":"text","text":"Removes and returns the key-value pair at the specified index."}],"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"remove","kind":"identifier"},{"kind":"text","text":"("},{"text":"at","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Dictionary","preciseIdentifier":"s:SD","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Key"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">."},{"text":"Index","kind":"typeIdentifier","preciseIdentifier":"s:SD5IndexV"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SD","text":"Dictionary"},{"text":"<","kind":"text"},{"text":"Key","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">."},{"preciseIdentifier":"s:SD7Elementa","text":"Element","kind":"typeIdentifier"}],"role":"symbol","url":"\/documentation\/compute\/dictionary\/remove(at:)","title":"remove(at:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/Dictionary/Encodable-Implementations":{"role":"collectionGroup","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary\/Encodable-Implementations","type":"topic","kind":"article","title":"Encodable Implementations","url":"\/documentation\/compute\/dictionary\/encodable-implementations"},"doc://com.swallow.documentation.Compute/7Swallow23NonDestroyingCollectionP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow23NonDestroyingCollectionP","title":"Swallow.NonDestroyingCollection","type":"unresolvable"},"doc://com.swallow.documentation.Compute/documentation/Compute/Dictionary/mapValues(_:)":{"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Key","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"text":".","type":"text"}]},"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary\/mapValues(_:)","abstract":[{"text":"Returns a new dictionary containing the keys of this dictionary with the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"values transformed by the given closure."}],"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"mapValues","kind":"identifier"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"text":">((","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"T","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SD","text":"Dictionary"},{"text":"<","kind":"text"},{"text":"Key","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":">"}],"role":"symbol","url":"\/documentation\/compute\/dictionary\/mapvalues(_:)","title":"mapValues(_:)"},"doc://com.swallow.documentation.Compute/7Swallow9InitiableP":{"type":"unresolvable","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow9InitiableP","title":"Swallow.Initiable"},"doc://com.swallow.documentation.Compute/7Swallow30KeysExposingDictionaryProtocolP":{"type":"unresolvable","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow30KeysExposingDictionaryProtocolP","title":"Swallow.KeysExposingDictionaryProtocol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Dictionary/init(minimumCapacity:)":{"type":"topic","title":"init(minimumCapacity:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"minimumCapacity"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":")","kind":"text"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary\/init(minimumCapacity:)","abstract":[{"type":"text","text":"Creates an empty dictionary with preallocated space for at least the"},{"type":"text","text":" "},{"type":"text","text":"specified number of elements."}],"url":"\/documentation\/compute\/dictionary\/init(minimumcapacity:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/Dictionary/init(uniqueKeysWithValues:)":{"title":"init(uniqueKeysWithValues:)","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary\/init(uniqueKeysWithValues:)","kind":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"text":"uniqueKeysWithValues","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Creates a new dictionary from the key-value pairs in the given sequence."}],"type":"topic","url":"\/documentation\/compute\/dictionary\/init(uniquekeyswithvalues:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/Dictionary/merge(_:uniquingKeysWith:)-m2ub":{"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary\/merge(_:uniquingKeysWith:)-m2ub","kind":"symbol","abstract":[{"type":"text","text":"Merges the given dictionary into this dictionary, using a combining"},{"text":" ","type":"text"},{"type":"text","text":"closure to determine the value for any duplicate keys."}],"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"merge","kind":"identifier"},{"text":"([","kind":"text"},{"kind":"typeIdentifier","text":"Key"},{"kind":"text","text":" : "},{"text":"Value","kind":"typeIdentifier"},{"text":"], ","kind":"text"},{"kind":"externalParam","text":"uniquingKeysWith"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"text":", ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Key"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":"."}]},"url":"\/documentation\/compute\/dictionary\/merge(_:uniquingkeyswith:)-m2ub","title":"merge(_:uniquingKeysWith:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/Dictionary/init()":{"kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"url":"\/documentation\/compute\/dictionary\/init()","role":"symbol","title":"init()","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary\/init()","abstract":[],"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/Dictionary/CustomDebugStringConvertible-Implementations":{"kind":"article","role":"collectionGroup","type":"topic","abstract":[],"title":"CustomDebugStringConvertible Implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary\/CustomDebugStringConvertible-Implementations","url":"\/documentation\/compute\/dictionary\/customdebugstringconvertible-implementations"},"doc://com.swallow.documentation.Compute/7Swallow18ExtensibleSequenceP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow18ExtensibleSequenceP","title":"Swallow.ExtensibleSequence","type":"unresolvable"},"doc://com.swallow.documentation.Compute/documentation/Compute/Partializable":{"abstract":[{"text":"A type that can be formed by coalescing its partials.","type":"text"}],"navigatorTitle":[{"text":"Partializable","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Partializable"}],"role":"symbol","url":"\/documentation\/compute\/partializable","type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Partializable","title":"Partializable","kind":"symbol","conformance":{"constraints":[{"code":"Key","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Hashable","type":"codeVoice"},{"type":"text","text":", "},{"code":"Value","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Copyable"},{"text":", and ","type":"text"},{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Escapable"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]}},"doc://com.swallow.documentation.Compute/7Swallow9CountableP":{"title":"Swallow.Countable","type":"unresolvable","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow9CountableP"},"doc://com.swallow.documentation.Compute/documentation/Compute/Dictionary/Sequence-Implementations":{"abstract":[],"url":"\/documentation\/compute\/dictionary\/sequence-implementations","kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary\/Sequence-Implementations","title":"Sequence Implementations","role":"collectionGroup","type":"topic"},"doc://com.swallow.documentation.Compute/7Swallow017SequenceInitiableB0P":{"title":"Swallow.SequenceInitiableSequence","type":"unresolvable","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow017SequenceInitiableB0P"},"doc://com.swallow.documentation.Compute/documentation/Compute/ExpressibleByDictionaryLiteral":{"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Key"},{"text":" conforms to ","type":"text"},{"code":"Hashable","type":"codeVoice"},{"type":"text","text":", "},{"code":"Value","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Copyable","type":"codeVoice"},{"type":"text","text":", and "},{"code":"Value","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Escapable","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"kind":"symbol","navigatorTitle":[{"text":"ExpressibleByDictionaryLiteral","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ExpressibleByDictionaryLiteral","abstract":[{"type":"text","text":"A type that can be initialized using a dictionary literal."}],"type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ExpressibleByDictionaryLiteral","kind":"identifier"}],"role":"symbol","url":"\/documentation\/compute\/expressiblebydictionaryliteral","title":"ExpressibleByDictionaryLiteral"},"doc://com.swallow.documentation.Compute/documentation/Compute/Dictionary":{"role":"symbol","title":"Dictionary","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Dictionary"}],"type":"topic","kind":"symbol","abstract":[{"text":"A collection whose elements are key-value pairs.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary","navigatorTitle":[{"text":"Dictionary","kind":"identifier"}],"url":"\/documentation\/compute\/dictionary"},"doc://com.swallow.documentation.Compute/documentation/Compute/CVarArg":{"abstract":[{"text":"A type whose instances can be encoded, and appropriately passed, as","type":"text"},{"text":" ","type":"text"},{"text":"elements of a C ","type":"text"},{"type":"codeVoice","code":"va_list"},{"type":"text","text":"."}],"navigatorTitle":[{"text":"CVarArg","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"CVarArg"}],"role":"symbol","url":"\/documentation\/compute\/cvararg","type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CVarArg","title":"CVarArg","kind":"symbol","conformance":{"constraints":[{"code":"Key","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Hashable","type":"codeVoice"},{"type":"text","text":", "},{"code":"Value","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Copyable"},{"text":", and ","type":"text"},{"type":"codeVoice","code":"Value"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Escapable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]}}}}