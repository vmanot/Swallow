{"relationshipsSections":[{"type":"conformsTo","title":"Conforms To","kind":"relationships","identifiers":["doc:\/\/com.swallow.documentation.Compute\/10Accelerate0A6BufferP","doc:\/\/com.swallow.documentation.Compute\/10Accelerate0A13MutableBufferP","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BidirectionalCollection","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Copyable","doc:\/\/com.swallow.documentation.Compute\/10Foundation15ContiguousBytesP","doc:\/\/com.swallow.documentation.Compute\/10Foundation12DataProtocolP","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazySequenceProtocol","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/MutableCollection","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RandomAccessCollection","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RangeReplaceableCollection","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sendable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence","doc:\/\/com.swallow.documentation.Compute\/7Swallow8DiffableP"]}],"kind":"symbol","abstract":[{"text":"A view into a subsequence of elements of another collection.","type":"text"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute"]]},"topicSections":[{"identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/init(base:bounds:)"],"anchor":"Initializers","title":"Initializers","generated":true},{"identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/base"],"anchor":"Instance-Properties","title":"Instance Properties","generated":true},{"title":"Instance Methods","generated":true,"identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/assumingMemoryBound(to:)-3f579","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/assumingMemoryBound(to:)-48vo9","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/bindMemory(to:)-2brpa","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/bindMemory(to:)-jmit","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/copyBytes(from:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/deinitialize()","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/deinitializeElement(at:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/initialize(from:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/initialize(fromContentsOf:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/initialize(repeating:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/initializeElement(at:to:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/initializeMemory(as:from:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/initializeMemory(as:fromContentsOf:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/initializeMemory(as:repeating:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/insert(_:at:)-4n5zz","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/insert(contentsOf:at:)-3z6ts","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/load(fromByteOffset:as:)-3vjps","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/load(fromByteOffset:as:)-45bko","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/loadUnaligned(fromByteOffset:as:)-6jvd4","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/loadUnaligned(fromByteOffset:as:)-6u1jm","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/loadUnaligned(fromByteOffset:as:)-7jjnt","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/loadUnaligned(fromByteOffset:as:)-9gtr0","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/moveElement(from:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/moveInitialize(fromContentsOf:)-82ebd","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/moveInitialize(fromContentsOf:)-iasq","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/moveInitializeMemory(as:fromContentsOf:)-1uz4a","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/moveInitializeMemory(as:fromContentsOf:)-4gqrz","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/moveUpdate(fromContentsOf:)-5i98g","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/moveUpdate(fromContentsOf:)-ou4d","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/remove(at:)-pbti","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/removeSubrange(_:)-8hbh1","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/replaceSubrange(_:with:)-904p8","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/storeBytes(of:toByteOffset:as:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/update(from:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/update(fromContentsOf:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/update(repeating:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/withContiguousMutableStorageIfAvailable(_:)-2ader","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/withMemoryRebound(to:_:)-2hfy7","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/withMemoryRebound(to:_:)-31406","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/withMemoryRebound(to:_:)-3jeob","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/withMemoryRebound(to:_:)-6nviy"],"anchor":"Instance-Methods"},{"anchor":"Default-Implementations","identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/BidirectionalCollection-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/Collection-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/LazySequenceProtocol-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/MutableCollection-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/RandomAccessCollection-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/RangeReplaceableCollection-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/Sequence-Implementations"],"title":"Default Implementations","generated":true}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/slice"]}],"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"@frozen","kind":"attribute"},{"text":" ","kind":"text"},{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Slice"},{"text":"<","kind":"text"},{"text":"Base","kind":"genericParameter"},{"kind":"text","text":"> "},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Base","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sl","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection","text":"Collection"}],"platforms":["macOS"]}]},{"content":[{"level":2,"text":"Overview","type":"heading","anchor":"overview"},{"inlineContent":[{"text":"A slice stores a base collection and the start and end indices of the view.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"It does not copy the elements from the collection into separate storage."},{"type":"text","text":" "},{"text":"Thus, creating a slice has O(1) complexity.","type":"text"}],"type":"paragraph"},{"level":2,"type":"heading","text":"Slices Share Indices","anchor":"Slices-Share-Indices"},{"inlineContent":[{"text":"Indices of a slice can be used interchangeably with indices of the base","type":"text"},{"type":"text","text":" "},{"type":"text","text":"collection. An element of a slice is located under the same index in the"},{"text":" ","type":"text"},{"text":"slice and in the base collection, as long as neither the collection nor","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the slice has been mutated since the slice was created."}],"type":"paragraph"},{"inlineContent":[{"text":"For example, suppose you have an array holding the number of absences from","type":"text"},{"type":"text","text":" "},{"text":"each class during a session.","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":["var absences = [0, 2, 0, 4, 0, 3, 1, 0]"],"syntax":null},{"inlineContent":[{"type":"text","text":"Youâ€™re tasked with finding the day with the most absences in the second"},{"text":" ","type":"text"},{"type":"text","text":"half of the session. To find the index of the day in question, follow"},{"type":"text","text":" "},{"text":"these steps:","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Create a slice of the "},{"type":"codeVoice","code":"absences"},{"type":"text","text":" array that holds the second half of the"},{"type":"text","text":" "},{"text":"days.","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Use the ","type":"text"},{"type":"codeVoice","code":"max(by:)"},{"text":" method to determine the index of the day with the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"most absences."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Print the result using the index found in step 2 on the original","type":"text"},{"text":" ","type":"text"},{"code":"absences","type":"codeVoice"},{"type":"text","text":" array."}],"type":"paragraph"}]}],"type":"orderedList"},{"type":"paragraph","inlineContent":[{"text":"Hereâ€™s an implementation of those steps:","type":"text"}]},{"type":"codeListing","code":["let secondHalf = absences.suffix(absences.count \/ 2)","if let i = secondHalf.indices.max(by: { secondHalf[$0] < secondHalf[$1] }) {","    print(\"Highest second-half absences: \\(absences[i])\")","}","\/\/ Prints \"Highest second-half absences: 3\""],"syntax":null},{"text":"Slices Inherit Semantics","anchor":"Slices-Inherit-Semantics","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"A slice inherits the value or reference semantics of its base collection.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"That is, if a "},{"type":"codeVoice","code":"Slice"},{"type":"text","text":" instance is wrapped around a mutable collection that"},{"type":"text","text":" "},{"text":"has value semantics, such as an array, mutating the original collection","type":"text"},{"type":"text","text":" "},{"type":"text","text":"would trigger a copy of that collection, and not affect the base"},{"type":"text","text":" "},{"type":"text","text":"collection stored inside of the slice."}]},{"type":"paragraph","inlineContent":[{"text":"For example, if you update the last element of the ","type":"text"},{"code":"absences","type":"codeVoice"},{"type":"text","text":" array from"},{"type":"text","text":" "},{"code":"0","type":"codeVoice"},{"type":"text","text":" to "},{"code":"2","type":"codeVoice"},{"type":"text","text":", the "},{"type":"codeVoice","code":"secondHalf"},{"type":"text","text":" slice is unchanged."}]},{"code":["absences[7] = 2","print(absences)","\/\/ Prints \"[0, 2, 0, 4, 0, 3, 1, 2]\"","print(secondHalf)","\/\/ Prints \"[0, 3, 1, 0]\""],"type":"codeListing","syntax":null},{"type":"paragraph","inlineContent":[{"text":"Use slices only for transient computation. A slice may hold a reference to","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the entire storage of a larger collection, not just to the portion it"},{"text":" ","type":"text"},{"type":"text","text":"presents, even after the base collectionâ€™s lifetime ends. Long-term"},{"type":"text","text":" "},{"text":"storage of a slice may therefore prolong the lifetime of elements that are","type":"text"},{"text":" ","type":"text"},{"text":"no longer otherwise accessible, which can erroneously appear to be memory","type":"text"},{"type":"text","text":" "},{"type":"text","text":"leakage."}]},{"name":"Note","type":"aside","content":[{"inlineContent":[{"type":"text","text":"Using a "},{"type":"codeVoice","code":"Slice"},{"type":"text","text":" instance with a mutable collection requires that"},{"type":"text","text":" "},{"type":"text","text":"the base collectionâ€™s "},{"type":"codeVoice","code":"subscript(_: Index)"},{"type":"text","text":" setter does not invalidate"},{"text":" ","type":"text"},{"type":"text","text":"indices. If mutations need to invalidate indices in your custom"},{"type":"text","text":" "},{"text":"collection type, donâ€™t use ","type":"text"},{"type":"codeVoice","code":"Slice"},{"text":" as its subsequence type. Instead,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"define your own subsequence type that takes your index invalidation"},{"type":"text","text":" "},{"type":"text","text":"requirements into account."}],"type":"paragraph"}],"style":"note"}],"kind":"content"}],"sections":[],"metadata":{"symbolKind":"struct","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Slice"}],"roleHeading":"Structure","title":"Slice","navigatorTitle":[{"text":"Slice","kind":"identifier"}],"modules":[{"name":"Compute"}],"externalID":"s:s5SliceV"},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Slice/LazySequenceProtocol-Implementations":{"type":"topic","role":"collectionGroup","url":"\/documentation\/compute\/slice\/lazysequenceprotocol-implementations","kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/LazySequenceProtocol-Implementations","abstract":[],"title":"LazySequenceProtocol Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/BidirectionalCollection":{"title":"BidirectionalCollection","url":"\/documentation\/compute\/bidirectionalcollection","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"BidirectionalCollection"}],"kind":"symbol","conformance":{"constraints":[{"code":"Base","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"RandomAccessCollection"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BidirectionalCollection","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"BidirectionalCollection"}],"type":"topic","abstract":[{"type":"text","text":"A collection that supports backward as well as forward traversal."}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Slice":{"kind":"symbol","title":"Slice","abstract":[{"type":"text","text":"A view into a subsequence of elements of another collection."}],"url":"\/documentation\/compute\/slice","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Slice","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice","navigatorTitle":[{"text":"Slice","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Slice/initializeMemory(as:from:)":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/initializeMemory(as:from:)","url":"\/documentation\/compute\/slice\/initializememory(as:from:)","role":"symbol","kind":"symbol","title":"initializeMemory(as:from:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"initializeMemory","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"S"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"as"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"S"},{"text":".","kind":"text"},{"preciseIdentifier":"s:ST7ElementQa","text":"Element","kind":"typeIdentifier"},{"kind":"text","text":".Type, "},{"text":"from","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"S"},{"text":") -> (unwritten","kind":"text"},{"text":": ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Iterator","preciseIdentifier":"s:ST8IteratorQa"},{"kind":"text","text":", initialized"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sr","text":"UnsafeMutableBufferPointer"},{"kind":"text","text":"<"},{"text":"S","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:ST7ElementQa","text":"Element","kind":"typeIdentifier"},{"kind":"text","text":">)"}],"conformance":{"constraints":[{"type":"codeVoice","code":"Base"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"UnsafeMutableRawBufferPointer"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"type":"topic","abstract":[{"type":"text","text":"Initializes the bufferâ€™s memory with the given elements, binding the"},{"type":"text","text":" "},{"type":"text","text":"initialized memory to the elementsâ€™ type."}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Slice/initialize(fromContentsOf:)":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"initialize","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Element"},{"text":">(","kind":"text"},{"text":"fromContentsOf","kind":"externalParam"},{"text":": some ","kind":"text"},{"kind":"typeIdentifier","text":"Collection","preciseIdentifier":"s:Sl"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Slice","preciseIdentifier":"s:s5SliceV"},{"kind":"text","text":"<"},{"text":"Base","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"text":"Index","kind":"typeIdentifier"}],"conformance":{"constraints":[{"code":"Base","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Collection"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"kind":"symbol","url":"\/documentation\/compute\/slice\/initialize(fromcontentsof:)","role":"symbol","title":"initialize(fromContentsOf:)","abstract":[{"text":"Initializes the buffer sliceâ€™s memory with with","type":"text"},{"text":" ","type":"text"},{"text":"every element of the source.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/initialize(fromContentsOf:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/Slice/insert(contentsOf:at:)-3z6ts":{"url":"\/documentation\/compute\/slice\/insert(contentsof:at:)-3z6ts","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"insert"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"contentsOf","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"S"},{"text":", ","kind":"text"},{"text":"at","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s5SliceV","text":"Slice","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Base","kind":"typeIdentifier"},{"kind":"text","text":">."},{"kind":"typeIdentifier","text":"Index"},{"kind":"text","text":")"}],"role":"symbol","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/insert(contentsOf:at:)-3z6ts","title":"insert(contentsOf:at:)","type":"topic","kind":"symbol","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Base","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"BidirectionalCollection"},{"text":" and ","type":"text"},{"code":"RangeReplaceableCollection","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]}},"doc://com.swallow.documentation.Compute/documentation/Compute/Slice/Collection-Implementations":{"role":"collectionGroup","type":"topic","url":"\/documentation\/compute\/slice\/collection-implementations","title":"Collection Implementations","abstract":[],"kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/Collection-Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/Slice/BidirectionalCollection-Implementations":{"url":"\/documentation\/compute\/slice\/bidirectionalcollection-implementations","title":"BidirectionalCollection Implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/BidirectionalCollection-Implementations","role":"collectionGroup","type":"topic","kind":"article","abstract":[]},"doc://com.swallow.documentation.Compute/documentation/Compute/Slice/base":{"role":"symbol","title":"base","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/base","type":"topic","url":"\/documentation\/compute\/slice\/base","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"base"},{"kind":"text","text":": "},{"text":"Base","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"The underlying collection of the slice."}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Collection":{"type":"topic","role":"symbol","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Collection","kind":"identifier"}],"url":"\/documentation\/compute\/collection","title":"Collection","navigatorTitle":[{"text":"Collection","kind":"identifier"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Base","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"RangeReplaceableCollection"},{"type":"text","text":"."}]},"abstract":[{"type":"text","text":"A sequence whose elements can be traversed multiple times,"},{"type":"text","text":" "},{"type":"text","text":"nondestructively, and accessed by an indexed subscript."}]},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Slice/init(base:bounds:)":{"type":"topic","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"base","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Base"},{"kind":"text","text":", "},{"text":"bounds","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","text":"Range"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Base"},{"text":".","kind":"text"},{"text":"Index","preciseIdentifier":"s:Sl5IndexQa","kind":"typeIdentifier"},{"text":">)","kind":"text"}],"url":"\/documentation\/compute\/slice\/init(base:bounds:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/init(base:bounds:)","abstract":[{"type":"text","text":"Creates a view into the given collection that allows access to elements"},{"type":"text","text":" "},{"type":"text","text":"within the specified range."}],"title":"init(base:bounds:)","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Slice/moveUpdate(fromContentsOf:)-5i98g":{"kind":"symbol","type":"topic","role":"symbol","url":"\/documentation\/compute\/slice\/moveupdate(fromcontentsof:)-5i98g","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"moveUpdate","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Element","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"fromContentsOf","kind":"externalParam"},{"kind":"text","text":": "},{"text":"UnsafeMutableBufferPointer","kind":"typeIdentifier","preciseIdentifier":"s:Sr"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">) -> "},{"preciseIdentifier":"s:s5SliceV","text":"Slice","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Base","kind":"typeIdentifier"},{"kind":"text","text":">."},{"kind":"typeIdentifier","text":"Index"}],"abstract":[{"type":"text","text":"Updates this buffer sliceâ€™s initialized memory initialized memory by"},{"type":"text","text":" "},{"type":"text","text":"moving every element from the source buffer,"},{"type":"text","text":" "},{"text":"leaving the source memory uninitialized.","type":"text"}],"conformance":{"constraints":[{"type":"codeVoice","code":"Base"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Collection"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/moveUpdate(fromContentsOf:)-5i98g","title":"moveUpdate(fromContentsOf:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/Copyable":{"title":"Copyable","url":"\/documentation\/compute\/copyable","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Copyable"}],"kind":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Base"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"RangeReplaceableCollection"},{"text":".","type":"text"}]},"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Copyable","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Copyable"}],"type":"topic","abstract":[{"type":"text","text":"A type whose values can be implicitly or explicitly copied."}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Slice/withMemoryRebound(to:_:)-2hfy7":{"role":"symbol","title":"withMemoryRebound(to:_:)","url":"\/documentation\/compute\/slice\/withmemoryrebound(to:_:)-2hfy7","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Base"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Collection"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"withMemoryRebound"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":", "},{"text":"Result","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Element","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"to","kind":"externalParam"},{"kind":"text","text":": "},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":".Type, ("},{"preciseIdentifier":"s:Sr","text":"UnsafeMutableBufferPointer","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":">) ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Result"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Result","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/withMemoryRebound(to:_:)-2hfy7","abstract":[{"text":"Executes the given closure while temporarily binding the memory referenced","type":"text"},{"type":"text","text":" "},{"text":"by this buffer slice to the given type.","type":"text"}],"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Slice/Sequence-Implementations":{"type":"topic","role":"collectionGroup","title":"Sequence Implementations","abstract":[],"url":"\/documentation\/compute\/slice\/sequence-implementations","kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/Sequence-Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence":{"type":"topic","role":"symbol","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Sequence"}],"url":"\/documentation\/compute\/sequence","title":"Sequence","navigatorTitle":[{"text":"Sequence","kind":"identifier"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Base"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Collection"},{"type":"text","text":" and "},{"type":"codeVoice","code":"LazySequenceProtocol"},{"type":"text","text":"."}]},"abstract":[{"type":"text","text":"A type that provides sequential, iterated access to its elements."}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Slice/initializeMemory(as:fromContentsOf:)":{"role":"symbol","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Base"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"UnsafeMutableRawBufferPointer"},{"text":".","type":"text"}]},"abstract":[{"type":"text","text":"Initializes the buffer sliceâ€™s memory with every element of the source,"},{"type":"text","text":" "},{"type":"text","text":"binding the initialized memory to the elementsâ€™ type."}],"kind":"symbol","url":"\/documentation\/compute\/slice\/initializememory(as:fromcontentsof:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"initializeMemory","kind":"identifier"},{"kind":"text","text":"<"},{"text":"C","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"as","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"text":".Type, ","kind":"text"},{"text":"fromContentsOf","kind":"externalParam"},{"kind":"text","text":": "},{"text":"C","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"UnsafeMutableBufferPointer","preciseIdentifier":"s:Sr","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"kind":"text","text":">"}],"title":"initializeMemory(as:fromContentsOf:)","type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/initializeMemory(as:fromContentsOf:)"},"doc://com.swallow.documentation.Compute/10Accelerate0A13MutableBufferP":{"type":"unresolvable","identifier":"doc:\/\/com.swallow.documentation.Compute\/10Accelerate0A13MutableBufferP","title":"Accelerate.AccelerateMutableBuffer"},"doc://com.swallow.documentation.Compute/documentation/Compute/Slice/moveInitializeMemory(as:fromContentsOf:)-4gqrz":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"moveInitializeMemory"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"as","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":".Type, ","kind":"text"},{"text":"fromContentsOf","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sr","text":"UnsafeMutableBufferPointer"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sr","text":"UnsafeMutableBufferPointer"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"title":"moveInitializeMemory(as:fromContentsOf:)","conformance":{"constraints":[{"type":"codeVoice","code":"Base"},{"type":"text","text":" is "},{"type":"codeVoice","code":"UnsafeMutableRawBufferPointer"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/moveInitializeMemory(as:fromContentsOf:)-4gqrz","kind":"symbol","url":"\/documentation\/compute\/slice\/moveinitializememory(as:fromcontentsof:)-4gqrz","type":"topic","abstract":[{"text":"Moves every element of an initialized source buffer into the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"uninitialized memory referenced by this buffer slice, leaving"},{"text":" ","type":"text"},{"type":"text","text":"the source memory uninitialized and this sliceâ€™s memory initialized."}],"role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Slice/bindMemory(to:)-2brpa":{"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Base"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"UnsafeMutableRawBufferPointer"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/bindMemory(to:)-2brpa","kind":"symbol","role":"symbol","title":"bindMemory(to:)","url":"\/documentation\/compute\/slice\/bindmemory(to:)-2brpa","abstract":[{"text":"Binds this buffer sliceâ€™s memory to the specified type and returns","type":"text"},{"type":"text","text":" "},{"type":"text","text":"a typed buffer of the bound memory."}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"bindMemory"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"to","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"kind":"typeIdentifier","text":"UnsafeMutableBufferPointer","preciseIdentifier":"s:Sr"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":">"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Slice/storeBytes(of:toByteOffset:as:)":{"type":"topic","role":"symbol","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/storeBytes(of:toByteOffset:as:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"storeBytes","kind":"identifier"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"of","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"toByteOffset"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"text":", ","kind":"text"},{"text":"as","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":".Type)","kind":"text"}],"url":"\/documentation\/compute\/slice\/storebytes(of:tobyteoffset:as:)","title":"storeBytes(of:toByteOffset:as:)","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Base","type":"codeVoice"},{"type":"text","text":" is "},{"type":"codeVoice","code":"UnsafeMutableRawBufferPointer"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"abstract":[{"type":"text","text":"Stores a valueâ€™s bytes into the buffer pointer sliceâ€™s raw memory at the"},{"text":" ","type":"text"},{"type":"text","text":"specified byte offset."}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Slice/RandomAccessCollection-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/RandomAccessCollection-Implementations","type":"topic","abstract":[],"kind":"article","role":"collectionGroup","title":"RandomAccessCollection Implementations","url":"\/documentation\/compute\/slice\/randomaccesscollection-implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/Slice/insert(_:at:)-4n5zz":{"title":"insert(_:at:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/insert(_:at:)-4n5zz","type":"topic","abstract":[],"role":"symbol","kind":"symbol","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Base","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"BidirectionalCollection","type":"codeVoice"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"RangeReplaceableCollection"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"url":"\/documentation\/compute\/slice\/insert(_:at:)-4n5zz","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"insert","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Base"},{"text":".","kind":"text"},{"preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier","text":"Element"},{"text":", ","kind":"text"},{"text":"at","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Slice","preciseIdentifier":"s:s5SliceV","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Base","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"kind":"typeIdentifier","text":"Index"},{"kind":"text","text":")"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Slice/assumingMemoryBound(to:)-48vo9":{"title":"assumingMemoryBound(to:)","type":"topic","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Returns a typed buffer to the memory referenced by this buffer slice,"},{"text":" ","type":"text"},{"type":"text","text":"assuming that the memory is already bound to the specified type."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/assumingMemoryBound(to:)-48vo9","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"assumingMemoryBound"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"to"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"kind":"typeIdentifier","text":"UnsafeBufferPointer","preciseIdentifier":"s:SR"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"text":">","kind":"text"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Base"},{"type":"text","text":" is "},{"type":"codeVoice","code":"UnsafeRawBufferPointer"},{"text":".","type":"text"}]},"url":"\/documentation\/compute\/slice\/assumingmemorybound(to:)-48vo9"},"doc://com.swallow.documentation.Compute/documentation/Compute/LazySequenceProtocol":{"title":"LazySequenceProtocol","url":"\/documentation\/compute\/lazysequenceprotocol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"LazySequenceProtocol"}],"kind":"symbol","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Base"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Collection"},{"type":"text","text":" and "},{"type":"codeVoice","code":"LazySequenceProtocol"},{"type":"text","text":"."}]},"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazySequenceProtocol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"LazySequenceProtocol"}],"type":"topic","abstract":[{"type":"text","text":"A sequence on which normally-eager sequence operations are implemented"},{"text":" ","type":"text"},{"type":"text","text":"lazily."}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Slice/withMemoryRebound(to:_:)-6nviy":{"url":"\/documentation\/compute\/slice\/withmemoryrebound(to:_:)-6nviy","title":"withMemoryRebound(to:_:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"withMemoryRebound","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Result"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Element"},{"text":">(","kind":"text"},{"text":"to","kind":"externalParam"},{"kind":"text","text":": "},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":".Type, ("},{"text":"UnsafeBufferPointer","kind":"typeIdentifier","preciseIdentifier":"s:SR"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">) ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Result","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"rethrows","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Result","kind":"typeIdentifier"}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Base"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Collection"},{"type":"text","text":"."}]},"type":"topic","role":"symbol","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/withMemoryRebound(to:_:)-6nviy","abstract":[{"type":"text","text":"Executes the given closure while temporarily binding the memory referenced"},{"type":"text","text":" "},{"text":"by this buffer slice to the given type.","type":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Slice/loadUnaligned(fromByteOffset:as:)-6jvd4":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/loadUnaligned(fromByteOffset:as:)-6jvd4","type":"topic","abstract":[],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"loadUnaligned","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"text":"fromByteOffset","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"as"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"conformance":{"constraints":[{"type":"codeVoice","code":"Base"},{"type":"text","text":" is "},{"type":"codeVoice","code":"UnsafeRawBufferPointer"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"url":"\/documentation\/compute\/slice\/loadunaligned(frombyteoffset:as:)-6jvd4","title":"loadUnaligned(fromByteOffset:as:)","kind":"symbol","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Slice/moveInitialize(fromContentsOf:)-iasq":{"type":"topic","role":"symbol","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/moveInitialize(fromContentsOf:)-iasq","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"moveInitialize"},{"text":"<","kind":"text"},{"text":"Element","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"fromContentsOf"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s5SliceV","kind":"typeIdentifier","text":"Slice"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:Sr","kind":"typeIdentifier","text":"UnsafeMutableBufferPointer"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Element"},{"text":">>) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Slice","preciseIdentifier":"s:s5SliceV"},{"text":"<","kind":"text"},{"text":"Base","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"text":"Index","kind":"typeIdentifier"}],"url":"\/documentation\/compute\/slice\/moveinitialize(fromcontentsof:)-iasq","title":"moveInitialize(fromContentsOf:)","conformance":{"constraints":[{"type":"codeVoice","code":"Base"},{"type":"text","text":" conforms to "},{"code":"Collection","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"abstract":[{"type":"text","text":"Moves every element of an initialized source buffer slice into the"},{"text":" ","type":"text"},{"type":"text","text":"uninitialized memory referenced by this buffer slice, leaving the"},{"text":" ","type":"text"},{"text":"source memory uninitialized and this buffer sliceâ€™s memory initialized.","type":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Slice/MutableCollection-Implementations":{"abstract":[],"type":"topic","title":"MutableCollection Implementations","role":"collectionGroup","kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/MutableCollection-Implementations","url":"\/documentation\/compute\/slice\/mutablecollection-implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/RangeReplaceableCollection":{"abstract":[{"text":"A collection that supports replacement of an arbitrary subrange of elements","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"with the elements of another collection."}],"url":"\/documentation\/compute\/rangereplaceablecollection","kind":"symbol","title":"RangeReplaceableCollection","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RangeReplaceableCollection"}],"navigatorTitle":[{"kind":"identifier","text":"RangeReplaceableCollection"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Base"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"RangeReplaceableCollection"},{"type":"text","text":"."}]},"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RangeReplaceableCollection"},"doc://com.swallow.documentation.Compute/documentation/Compute/Slice/withContiguousMutableStorageIfAvailable(_:)-2ader":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"withContiguousMutableStorageIfAvailable"},{"text":"<","kind":"text"},{"text":"R","kind":"genericParameter"},{"kind":"text","text":", "},{"text":"Element","kind":"genericParameter"},{"kind":"text","text":">(("},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"UnsafeMutableBufferPointer","preciseIdentifier":"s:Sr"},{"text":"<","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":">) ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"R"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"R","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Base"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Collection"},{"type":"text","text":"."}]},"type":"topic","title":"withContiguousMutableStorageIfAvailable(_:)","url":"\/documentation\/compute\/slice\/withcontiguousmutablestorageifavailable(_:)-2ader","kind":"symbol","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/withContiguousMutableStorageIfAvailable(_:)-2ader","abstract":[]},"doc://com.swallow.documentation.Compute/documentation/Compute/Slice/loadUnaligned(fromByteOffset:as:)-7jjnt":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"loadUnaligned"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"fromByteOffset"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"as"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","text":"T"}],"type":"topic","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Base","type":"codeVoice"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"UnsafeRawBufferPointer"},{"type":"text","text":"."}]},"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/loadUnaligned(fromByteOffset:as:)-7jjnt","url":"\/documentation\/compute\/slice\/loadunaligned(frombyteoffset:as:)-7jjnt","role":"symbol","title":"loadUnaligned(fromByteOffset:as:)","abstract":[{"text":"Returns a new instance of the given type, read from the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"specified offset into the buffer pointer sliceâ€™s raw memory."}],"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Slice/withMemoryRebound(to:_:)-3jeob":{"type":"topic","abstract":[{"text":"Executes the given closure while temporarily binding the buffer slice to","type":"text"},{"type":"text","text":" "},{"text":"instances of type ","type":"text"},{"code":"T","type":"codeVoice"},{"type":"text","text":"."}],"kind":"symbol","title":"withMemoryRebound(to:_:)","role":"symbol","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Base"},{"text":" is ","type":"text"},{"code":"UnsafeMutableRawBufferPointer","type":"codeVoice"},{"text":".","type":"text"}]},"url":"\/documentation\/compute\/slice\/withmemoryrebound(to:_:)-3jeob","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/withMemoryRebound(to:_:)-3jeob","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"withMemoryRebound","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"text":", ","kind":"text"},{"text":"Result","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"E","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"to","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":".Type, ("},{"text":"UnsafeMutableBufferPointer","kind":"typeIdentifier","preciseIdentifier":"s:Sr"},{"kind":"text","text":"<"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":">) "},{"kind":"keyword","text":"throws"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"E"},{"kind":"text","text":") -> "},{"text":"Result","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"text":"(","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Result"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Sendable":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sendable","abstract":[],"type":"topic","kind":"symbol","url":"\/documentation\/compute\/sendable","title":"Sendable","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Base","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Collection"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Base"},{"text":" conforms to ","type":"text"},{"code":"Sendable","type":"codeVoice"},{"text":", and ","type":"text"},{"code":"Base.Index","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Sendable","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Sendable","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"Sendable"}],"role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/MutableCollection":{"type":"topic","role":"symbol","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/MutableCollection","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MutableCollection","kind":"identifier"}],"url":"\/documentation\/compute\/mutablecollection","title":"MutableCollection","navigatorTitle":[{"kind":"identifier","text":"MutableCollection"}],"conformance":{"constraints":[{"type":"codeVoice","code":"Base"},{"type":"text","text":" conforms to "},{"code":"MutableCollection","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"abstract":[{"text":"A collection that supports subscript assignment.","type":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Slice/removeSubrange(_:)-8hbh1":{"kind":"symbol","abstract":[],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"removeSubrange"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Range","preciseIdentifier":"s:Sn"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s5SliceV","text":"Slice","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Base","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"kind":"typeIdentifier","text":"Index"},{"kind":"text","text":">)"}],"url":"\/documentation\/compute\/slice\/removesubrange(_:)-8hbh1","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/removeSubrange(_:)-8hbh1","type":"topic","title":"removeSubrange(_:)","conformance":{"constraints":[{"code":"Base","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"BidirectionalCollection","type":"codeVoice"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"RangeReplaceableCollection"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]}},"doc://com.swallow.documentation.Compute/documentation/Compute/Slice/initialize(from:)":{"abstract":[{"text":"Initializes the buffer sliceâ€™s memory with the given elements.","type":"text"}],"url":"\/documentation\/compute\/slice\/initialize(from:)","kind":"symbol","title":"initialize(from:)","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"initialize","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"S"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"from"},{"kind":"text","text":": "},{"text":"S","kind":"typeIdentifier"},{"text":") -> (unwritten","kind":"text"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"S"},{"text":".","kind":"text"},{"text":"Iterator","kind":"typeIdentifier","preciseIdentifier":"s:ST8IteratorQa"},{"text":", index","kind":"text"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s5SliceV","text":"Slice","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Base"},{"kind":"text","text":">."},{"kind":"typeIdentifier","text":"Index"},{"kind":"text","text":")"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Base"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Collection"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/initialize(from:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/Slice/loadUnaligned(fromByteOffset:as:)-9gtr0":{"abstract":[],"title":"loadUnaligned(fromByteOffset:as:)","kind":"symbol","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Base"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"UnsafeMutableRawBufferPointer"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/loadUnaligned(fromByteOffset:as:)-9gtr0","type":"topic","url":"\/documentation\/compute\/slice\/loadunaligned(frombyteoffset:as:)-9gtr0","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"loadUnaligned"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"text":"fromByteOffset","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"text":", ","kind":"text"},{"text":"as","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"text":".Type) -> ","kind":"text"},{"kind":"typeIdentifier","text":"T"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Slice/remove(at:)-pbti":{"role":"symbol","type":"topic","conformance":{"constraints":[{"type":"codeVoice","code":"Base"},{"type":"text","text":" conforms to "},{"code":"BidirectionalCollection","type":"codeVoice"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"RangeReplaceableCollection"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"remove"},{"kind":"text","text":"("},{"kind":"externalParam","text":"at"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s5SliceV","text":"Slice"},{"kind":"text","text":"<"},{"text":"Base","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"text":"Index","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Base"},{"text":".","kind":"text"},{"preciseIdentifier":"s:ST7ElementQa","text":"Element","kind":"typeIdentifier"}],"kind":"symbol","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/remove(at:)-pbti","title":"remove(at:)","url":"\/documentation\/compute\/slice\/remove(at:)-pbti"},"doc://com.swallow.documentation.Compute/documentation/Compute/Slice/load(fromByteOffset:as:)-45bko":{"type":"topic","role":"symbol","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Base","type":"codeVoice"},{"type":"text","text":" is "},{"type":"codeVoice","code":"UnsafeMutableRawBufferPointer"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"load"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"fromByteOffset","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"text":", ","kind":"text"},{"text":"as","kind":"externalParam"},{"kind":"text","text":": "},{"text":"T","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"kind":"typeIdentifier","text":"T"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/load(fromByteOffset:as:)-45bko","abstract":[{"type":"text","text":"Returns a new instance of the given type, read from the"},{"type":"text","text":" "},{"text":"specified offset into the buffer pointer sliceâ€™s raw memory.","type":"text"}],"url":"\/documentation\/compute\/slice\/load(frombyteoffset:as:)-45bko","kind":"symbol","title":"load(fromByteOffset:as:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/Slice/moveUpdate(fromContentsOf:)-ou4d":{"type":"topic","abstract":[{"text":"Updates this buffer sliceâ€™s initialized memory initialized memory by","type":"text"},{"type":"text","text":" "},{"type":"text","text":"moving every element from the source buffer slice,"},{"type":"text","text":" "},{"type":"text","text":"leaving the source memory uninitialized."}],"kind":"symbol","role":"symbol","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Base"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Collection"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"title":"moveUpdate(fromContentsOf:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"moveUpdate","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Element"},{"text":">(","kind":"text"},{"text":"fromContentsOf","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s5SliceV","text":"Slice","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:Sr","kind":"typeIdentifier","text":"UnsafeMutableBufferPointer"},{"text":"<","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":">>) -> ","kind":"text"},{"preciseIdentifier":"s:s5SliceV","kind":"typeIdentifier","text":"Slice"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Base"},{"text":">.","kind":"text"},{"text":"Index","kind":"typeIdentifier"}],"url":"\/documentation\/compute\/slice\/moveupdate(fromcontentsof:)-ou4d","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/moveUpdate(fromContentsOf:)-ou4d"},"doc://com.swallow.documentation.Compute/documentation/Compute/Slice/load(fromByteOffset:as:)-3vjps":{"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"load"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"fromByteOffset"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"text":"as","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","text":"T"}],"kind":"symbol","title":"load(fromByteOffset:as:)","abstract":[{"text":"Returns a new instance of the given type, read from the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"specified offset into the buffer pointer sliceâ€™s raw memory."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/load(fromByteOffset:as:)-3vjps","url":"\/documentation\/compute\/slice\/load(frombyteoffset:as:)-3vjps","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Base"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"UnsafeRawBufferPointer"},{"type":"text","text":"."}]},"type":"topic"},"doc://com.swallow.documentation.Compute/10Foundation12DataProtocolP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/10Foundation12DataProtocolP","title":"Foundation.DataProtocol","type":"unresolvable"},"doc://com.swallow.documentation.Compute/documentation/Compute/Slice/moveElement(from:)":{"title":"moveElement(from:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/moveElement(from:)","type":"topic","role":"symbol","url":"\/documentation\/compute\/slice\/moveelement(from:)","abstract":[{"text":"Retrieves and returns the element at ","type":"text"},{"type":"codeVoice","code":"index"},{"text":",","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"leaving that elementâ€™s underlying memory uninitialized."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"moveElement","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Element","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"from"},{"text":": ","kind":"text"},{"text":"Slice","kind":"typeIdentifier","preciseIdentifier":"s:s5SliceV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Base"},{"text":">.","kind":"text"},{"kind":"typeIdentifier","text":"Index"},{"kind":"text","text":") -> "},{"text":"Element","kind":"typeIdentifier"}],"conformance":{"constraints":[{"type":"codeVoice","code":"Base"},{"text":" conforms to ","type":"text"},{"code":"Collection","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Slice/deinitialize()":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/deinitialize()","kind":"symbol","type":"topic","title":"deinitialize()","abstract":[{"type":"text","text":"Deinitializes every instance in this buffer slice."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"deinitialize"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Element"},{"text":">() -> ","kind":"text"},{"preciseIdentifier":"s:Sw","kind":"typeIdentifier","text":"UnsafeMutableRawBufferPointer"}],"role":"symbol","url":"\/documentation\/compute\/slice\/deinitialize()","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Base","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Collection","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]}},"doc://com.swallow.documentation.Compute/documentation/Compute/Slice/loadUnaligned(fromByteOffset:as:)-6u1jm":{"type":"topic","abstract":[{"text":"Returns a new instance of the given type, read from the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"specified offset into the buffer pointer sliceâ€™s raw memory."}],"kind":"symbol","role":"symbol","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Base"},{"type":"text","text":" is "},{"code":"UnsafeMutableRawBufferPointer","type":"codeVoice"},{"text":".","type":"text"}]},"title":"loadUnaligned(fromByteOffset:as:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"loadUnaligned"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"fromByteOffset","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"text":", ","kind":"text"},{"text":"as","kind":"externalParam"},{"kind":"text","text":": "},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","text":"T"}],"url":"\/documentation\/compute\/slice\/loadunaligned(frombyteoffset:as:)-6u1jm","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/loadUnaligned(fromByteOffset:as:)-6u1jm"},"doc://com.swallow.documentation.Compute/documentation/Compute/Slice/update(repeating:)":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/update(repeating:)","type":"topic","kind":"symbol","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Base"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Collection"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"role":"symbol","url":"\/documentation\/compute\/slice\/update(repeating:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"update","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Element","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"repeating","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Updates every element of this buffer sliceâ€™s initialized memory."}],"title":"update(repeating:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/Slice/RangeReplaceableCollection-Implementations":{"abstract":[],"kind":"article","role":"collectionGroup","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/RangeReplaceableCollection-Implementations","title":"RangeReplaceableCollection Implementations","type":"topic","url":"\/documentation\/compute\/slice\/rangereplaceablecollection-implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/Slice/assumingMemoryBound(to:)-3f579":{"title":"assumingMemoryBound(to:)","abstract":[{"type":"text","text":"Returns a typed buffer to the memory referenced by this buffer slice,"},{"text":" ","type":"text"},{"type":"text","text":"assuming that the memory is already bound to the specified type."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"assumingMemoryBound"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"to","kind":"externalParam"},{"kind":"text","text":": "},{"text":"T","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sr","text":"UnsafeMutableBufferPointer"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":">"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/assumingMemoryBound(to:)-3f579","type":"topic","url":"\/documentation\/compute\/slice\/assumingmemorybound(to:)-3f579","role":"symbol","conformance":{"constraints":[{"type":"codeVoice","code":"Base"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"UnsafeMutableRawBufferPointer"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"kind":"symbol"},"doc://com.swallow.documentation.Compute/7Swallow8DiffableP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow8DiffableP","title":"Swallow.Diffable","type":"unresolvable"},"doc://com.swallow.documentation.Compute/documentation/Compute/Slice/initialize(repeating:)":{"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/initialize(repeating:)","title":"initialize(repeating:)","url":"\/documentation\/compute\/slice\/initialize(repeating:)","kind":"symbol","role":"symbol","abstract":[{"text":"Initializes every element in this buffer sliceâ€™s memory to","type":"text"},{"type":"text","text":" "},{"type":"text","text":"a copy of the given value."}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"initialize","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Element","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"repeating","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Element","kind":"typeIdentifier"},{"text":")","kind":"text"}],"conformance":{"constraints":[{"type":"codeVoice","code":"Base"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Collection"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]}},"doc://com.swallow.documentation.Compute/documentation/Compute/Slice/moveInitialize(fromContentsOf:)-82ebd":{"type":"topic","abstract":[{"text":"Moves every element of an initialized source buffer into the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"uninitialized memory referenced by this buffer slice, leaving the"},{"type":"text","text":" "},{"type":"text","text":"source memory uninitialized and this buffer sliceâ€™s memory initialized."}],"kind":"symbol","role":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Base","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Collection","type":"codeVoice"},{"type":"text","text":"."}]},"title":"moveInitialize(fromContentsOf:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"moveInitialize","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Element"},{"text":">(","kind":"text"},{"text":"fromContentsOf","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sr","text":"UnsafeMutableBufferPointer","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Element"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s5SliceV","text":"Slice"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Base"},{"kind":"text","text":">."},{"text":"Index","kind":"typeIdentifier"}],"url":"\/documentation\/compute\/slice\/moveinitialize(fromcontentsof:)-82ebd","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/moveInitialize(fromContentsOf:)-82ebd"},"doc://com.swallow.documentation.Compute/documentation/Compute/Slice/withMemoryRebound(to:_:)-31406":{"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/compute\/slice\/withmemoryrebound(to:_:)-31406","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"withMemoryRebound","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"text":", ","kind":"text"},{"text":"Result","kind":"genericParameter"},{"kind":"text","text":", "},{"text":"E","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"to","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"text":".Type, (","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SR","text":"UnsafeBufferPointer"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">) "},{"text":"throws","kind":"keyword"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"E"},{"text":") -> ","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"E"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Result"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Base"},{"type":"text","text":" is "},{"code":"UnsafeRawBufferPointer","type":"codeVoice"},{"text":".","type":"text"}]},"abstract":[{"text":"Executes the given closure while temporarily binding the buffer slice to","type":"text"},{"type":"text","text":" "},{"text":"instances of type ","type":"text"},{"code":"T","type":"codeVoice"},{"text":".","type":"text"}],"title":"withMemoryRebound(to:_:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/withMemoryRebound(to:_:)-31406"},"doc://com.swallow.documentation.Compute/documentation/Compute/Slice/copyBytes(from:)":{"role":"symbol","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"copyBytes","kind":"identifier"},{"text":"<","kind":"text"},{"text":"C","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"from","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":")"}],"title":"copyBytes(from:)","url":"\/documentation\/compute\/slice\/copybytes(from:)","conformance":{"constraints":[{"type":"codeVoice","code":"Base"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"UnsafeMutableRawBufferPointer"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"abstract":[{"text":"Copies from a collection of ","type":"text"},{"type":"codeVoice","code":"UInt8"},{"type":"text","text":" into this buffer sliceâ€™s memory."}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/copyBytes(from:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/Slice/bindMemory(to:)-jmit":{"title":"bindMemory(to:)","url":"\/documentation\/compute\/slice\/bindmemory(to:)-jmit","type":"topic","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Base","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"UnsafeRawBufferPointer","type":"codeVoice"},{"text":".","type":"text"}]},"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/bindMemory(to:)-jmit","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Binds this buffer sliceâ€™s memory to the specified type and returns"},{"text":" ","type":"text"},{"type":"text","text":"a typed buffer of the bound memory."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"bindMemory","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"text":"T","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"preciseIdentifier":"s:SR","text":"UnsafeBufferPointer","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"T","kind":"typeIdentifier"},{"text":">","kind":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Slice/update(fromContentsOf:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"update","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Element"},{"kind":"text","text":">("},{"kind":"externalParam","text":"fromContentsOf"},{"text":": some ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sl","text":"Collection"},{"text":") -> ","kind":"text"},{"text":"Slice","preciseIdentifier":"s:s5SliceV","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Base"},{"kind":"text","text":">."},{"text":"Index","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/update(fromContentsOf:)","kind":"symbol","conformance":{"constraints":[{"type":"codeVoice","code":"Base"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Collection"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"type":"topic","title":"update(fromContentsOf:)","abstract":[{"text":"Updates the buffer sliceâ€™s initialized memory with","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"every element of the source."}],"url":"\/documentation\/compute\/slice\/update(fromcontentsof:)","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Slice/replaceSubrange(_:with:)-904p8":{"type":"topic","role":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Base","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"BidirectionalCollection"},{"type":"text","text":" and "},{"type":"codeVoice","code":"RangeReplaceableCollection"},{"type":"text","text":"."}]},"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"replaceSubrange"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"C"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:Sn","kind":"typeIdentifier","text":"Range"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s5SliceV","text":"Slice","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Base","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"kind":"typeIdentifier","text":"Index"},{"text":">, ","kind":"text"},{"text":"with","kind":"externalParam"},{"kind":"text","text":": "},{"text":"C","kind":"typeIdentifier"},{"text":")","kind":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/replaceSubrange(_:with:)-904p8","abstract":[],"url":"\/documentation\/compute\/slice\/replacesubrange(_:with:)-904p8","kind":"symbol","title":"replaceSubrange(_:with:)"},"doc://com.swallow.documentation.Compute/10Foundation15ContiguousBytesP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/10Foundation15ContiguousBytesP","title":"Foundation.ContiguousBytes","type":"unresolvable"},"doc://com.swallow.documentation.Compute/documentation/Compute/Slice/moveInitializeMemory(as:fromContentsOf:)-1uz4a":{"type":"topic","role":"symbol","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Base"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"UnsafeMutableRawBufferPointer"},{"type":"text","text":"."}]},"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"moveInitializeMemory","kind":"identifier"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"as"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":".Type, "},{"kind":"externalParam","text":"fromContentsOf"},{"kind":"text","text":": "},{"text":"Slice","kind":"typeIdentifier","preciseIdentifier":"s:s5SliceV"},{"text":"<","kind":"text"},{"text":"UnsafeMutableBufferPointer","kind":"typeIdentifier","preciseIdentifier":"s:Sr"},{"kind":"text","text":"<"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":">>) -> "},{"preciseIdentifier":"s:Sr","text":"UnsafeMutableBufferPointer","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":">"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/moveInitializeMemory(as:fromContentsOf:)-1uz4a","abstract":[{"text":"Moves every element from an initialized source buffer slice into the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"uninitialized memory referenced by this buffer slice, leaving"},{"text":" ","type":"text"},{"type":"text","text":"the source memory uninitialized and this sliceâ€™s memory initialized."}],"url":"\/documentation\/compute\/slice\/moveinitializememory(as:fromcontentsof:)-1uz4a","kind":"symbol","title":"moveInitializeMemory(as:fromContentsOf:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/Slice/initializeElement(at:to:)":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/initializeElement(at:to:)","abstract":[{"type":"text","text":"Initializes the element at "},{"type":"codeVoice","code":"index"},{"type":"text","text":" to the given value."}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"initializeElement","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Element","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"at","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"to"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Element"},{"text":")","kind":"text"}],"kind":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Base"},{"type":"text","text":" conforms to "},{"code":"Collection","type":"codeVoice"},{"type":"text","text":"."}]},"role":"symbol","type":"topic","title":"initializeElement(at:to:)","url":"\/documentation\/compute\/slice\/initializeelement(at:to:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/Slice/initializeMemory(as:repeating:)":{"type":"topic","abstract":[{"type":"text","text":"Initializes the memory referenced by this buffer slice with the given"},{"text":" ","type":"text"},{"type":"text","text":"value, binds the memory to the valueâ€™s type, and returns a typed"},{"type":"text","text":" "},{"text":"buffer of the initialized memory.","type":"text"}],"kind":"symbol","role":"symbol","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Base","type":"codeVoice"},{"type":"text","text":" is "},{"type":"codeVoice","code":"UnsafeMutableRawBufferPointer"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"title":"initializeMemory(as:repeating:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"initializeMemory","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"as"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":".Type, ","kind":"text"},{"kind":"externalParam","text":"repeating"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"text":"UnsafeMutableBufferPointer","kind":"typeIdentifier","preciseIdentifier":"s:Sr"},{"kind":"text","text":"<"},{"text":"T","kind":"typeIdentifier"},{"text":">","kind":"text"}],"url":"\/documentation\/compute\/slice\/initializememory(as:repeating:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/initializeMemory(as:repeating:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/Slice/update(from:)":{"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/update(from:)","url":"\/documentation\/compute\/slice\/update(from:)","abstract":[{"text":"Updates the buffer sliceâ€™s initialized memory with the given elements.","type":"text"}],"title":"update(from:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"update"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"from"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":") -> (unwritten"},{"text":": ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:ST8IteratorQa","text":"Iterator"},{"kind":"text","text":", index"},{"kind":"text","text":": "},{"text":"Slice","kind":"typeIdentifier","preciseIdentifier":"s:s5SliceV"},{"text":"<","kind":"text"},{"text":"Base","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"text":"Index","kind":"typeIdentifier"},{"kind":"text","text":")"}],"type":"topic","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Base"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Collection"},{"type":"text","text":"."}]},"kind":"symbol"},"doc://com.swallow.documentation.Compute/10Accelerate0A6BufferP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/10Accelerate0A6BufferP","type":"unresolvable","title":"Accelerate.AccelerateBuffer"},"doc://com.swallow.documentation.Compute/documentation/Compute/RandomAccessCollection":{"type":"topic","navigatorTitle":[{"kind":"identifier","text":"RandomAccessCollection"}],"abstract":[{"text":"A collection that supports efficient random-access index traversal.","type":"text"}],"kind":"symbol","role":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Base","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"RandomAccessCollection"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"title":"RandomAccessCollection","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"RandomAccessCollection","kind":"identifier"}],"url":"\/documentation\/compute\/randomaccesscollection","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RandomAccessCollection"},"doc://com.swallow.documentation.Compute/documentation/Compute/Slice/deinitializeElement(at:)":{"role":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Base","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Collection","type":"codeVoice"},{"text":".","type":"text"}]},"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/deinitializeElement(at:)","type":"topic","abstract":[{"text":"Deinitializes the memory underlying the element at ","type":"text"},{"type":"codeVoice","code":"index"},{"type":"text","text":"."}],"title":"deinitializeElement(at:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"deinitializeElement"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Element"},{"kind":"text","text":">("},{"kind":"externalParam","text":"at"},{"text":": ","kind":"text"},{"text":"UnsafeMutableBufferPointer","kind":"typeIdentifier","preciseIdentifier":"s:Sr"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">."},{"text":"Index","preciseIdentifier":"s:SrsRi_zrlE5Indexa","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/compute\/slice\/deinitializeelement(at:)"}}}