{"sections":[],"abstract":[{"text":"Creates a new collection by concatenating the elements of a collection and","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"a sequence."}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"+","kind":"identifier"},{"kind":"text","text":" "},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Other"},{"text":">(","kind":"text"},{"kind":"internalParam","text":"lhs"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"kind":"internalParam","text":"rhs"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Other"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":" ","kind":"text"},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Other"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:ST","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence","text":"Sequence"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","text":"Element","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element"},{"text":" == ","kind":"text"},{"kind":"typeIdentifier","text":"Other"},{"kind":"text","text":"."},{"preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","text":"Element"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"A range-replaceable collection.","type":"text"}]}],"name":"lhs"},{"name":"rhs","content":[{"inlineContent":[{"type":"text","text":"A collection or finite sequence."}],"type":"paragraph"}]}]},{"kind":"content","content":[{"anchor":"discussion","type":"heading","level":2,"text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"The two arguments must have the same ","type":"text"},{"code":"Element","type":"codeVoice"},{"type":"text","text":" type. For example, you can"},{"text":" ","type":"text"},{"text":"concatenate the elements of an integer array and a ","type":"text"},{"code":"Range<Int>","type":"codeVoice"},{"type":"text","text":" instance."}]},{"type":"codeListing","syntax":null,"code":["let numbers = [1, 2, 3, 4]","let moreNumbers = numbers + (5...10)","print(moreNumbers)","\/\/ Prints \"[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\""]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The resulting collection has the type of the argument on the left-hand"},{"text":" ","type":"text"},{"text":"side. In the example above, ","type":"text"},{"type":"codeVoice","code":"moreNumbers"},{"text":" has the same type as ","type":"text"},{"type":"codeVoice","code":"numbers"},{"type":"text","text":","},{"type":"text","text":" "},{"text":"which is ","type":"text"},{"type":"codeVoice","code":"[Int]"},{"text":".","type":"text"}]}]}],"variants":[{"paths":["\/documentation\/compute\/contiguousarray\/+(_:_:)-1rz1t"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"roleHeading":"Operator","title":"+(_:_:)","role":"symbol","externalID":"s:SmsE1poiyxx_qd__tSTRd__7ElementQyd__ABRtzlFZ::SYNTHESIZED::s:s15ContiguousArrayV","modules":[{"name":"Compute","relatedModules":["Swift"]}],"extendedModule":"Swift","symbolKind":"op","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"+"},{"text":" ","kind":"text"},{"text":"<","kind":"text"},{"text":"Other","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Other"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ContiguousArray\/+(_:_:)-1rz1t"},"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ContiguousArray","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ContiguousArray\/RangeReplaceableCollection-Implementations"]]},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/ContiguousArray/+(_:_:)-1rz1t":{"role":"symbol","url":"\/documentation\/compute\/contiguousarray\/+(_:_:)-1rz1t","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ContiguousArray\/+(_:_:)-1rz1t","abstract":[{"text":"Creates a new collection by concatenating the elements of a collection and","type":"text"},{"type":"text","text":" "},{"text":"a sequence.","type":"text"}],"kind":"symbol","title":"+(_:_:)","type":"topic","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"+","kind":"identifier"},{"text":" ","kind":"text"},{"text":"<","kind":"text"},{"text":"Other","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Other"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence":{"url":"\/documentation\/compute\/sequence","navigatorTitle":[{"kind":"identifier","text":"Sequence"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence","title":"Sequence","kind":"symbol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Sequence","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"A type that provides sequential, iterated access to its elements."}]},"doc://com.swallow.documentation.Compute/documentation/Compute/ContiguousArray/RangeReplaceableCollection-Implementations":{"url":"\/documentation\/compute\/contiguousarray\/rangereplaceablecollection-implementations","title":"RangeReplaceableCollection Implementations","role":"collectionGroup","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ContiguousArray\/RangeReplaceableCollection-Implementations","abstract":[],"kind":"article","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/ContiguousArray":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ContiguousArray","url":"\/documentation\/compute\/contiguousarray","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ContiguousArray"}],"title":"ContiguousArray","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ContiguousArray"}],"role":"symbol","abstract":[{"text":"A contiguously stored array.","type":"text"}],"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence/Element":{"type":"topic","required":true,"abstract":[{"type":"text","text":"A type representing the sequenceâ€™s elements."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"symbol","url":"\/documentation\/compute\/sequence\/element","role":"symbol","title":"Element","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"identifier"}]}}}