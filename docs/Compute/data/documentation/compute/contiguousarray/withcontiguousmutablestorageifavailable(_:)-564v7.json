{"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ContiguousArray","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ContiguousArray\/MutableCollection-Implementations"]]},"sections":[],"variants":[{"paths":["\/documentation\/compute\/contiguousarray\/withcontiguousmutablestorageifavailable(_:)-564v7"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"mutating","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"withContiguousMutableStorageIfAvailable","kind":"identifier"},{"kind":"text","text":"<"},{"text":"R","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"text":"body","kind":"internalParam"},{"text":": (","kind":"text"},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"UnsafeMutableBufferPointer","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableBufferPointer","preciseIdentifier":"s:Sr"},{"text":"<","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"kind":"text","text":">) "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"R"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"text":" -> ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"kind":"text","text":"?"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"body","content":[{"type":"paragraph","inlineContent":[{"text":"A closure that receives an in-out","type":"text"},{"text":" ","type":"text"},{"code":"UnsafeMutableBufferPointer","type":"codeVoice"},{"text":" to the collection’s contiguous storage.","type":"text"}]}]}]},{"content":[{"text":"Return Value","type":"heading","level":2,"anchor":"return-value"},{"inlineContent":[{"type":"text","text":"The value returned from "},{"type":"codeVoice","code":"body"},{"text":", unless the collection doesn’t","type":"text"},{"text":" ","type":"text"},{"text":"support contiguous storage, in which case the method ignores ","type":"text"},{"type":"codeVoice","code":"body"},{"type":"text","text":" and"},{"text":" ","type":"text"},{"text":"returns ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."}],"type":"paragraph"}],"kind":"content"},{"kind":"content","content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"inlineContent":[{"type":"text","text":"This method calls "},{"type":"codeVoice","code":"body(buffer)"},{"text":", where ","type":"text"},{"type":"codeVoice","code":"buffer"},{"text":" provides access to the","type":"text"},{"type":"text","text":" "},{"text":"contiguous mutable storage of the entire collection. If the contiguous","type":"text"},{"type":"text","text":" "},{"type":"text","text":"storage doesn’t exist, the collection creates it. If the collection"},{"text":" ","type":"text"},{"text":"doesn’t support an internal representation in the form of contiguous","type":"text"},{"text":" ","type":"text"},{"text":"mutable storage, this method doesn’t call ","type":"text"},{"type":"codeVoice","code":"body"},{"text":" — it immediately","type":"text"},{"text":" ","type":"text"},{"text":"returns ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."}],"type":"paragraph"},{"inlineContent":[{"text":"The optimizer can often eliminate bounds- and uniqueness-checking","type":"text"},{"type":"text","text":" "},{"text":"within an algorithm. When that fails, however, invoking the same","type":"text"},{"text":" ","type":"text"},{"text":"algorithm on the ","type":"text"},{"type":"codeVoice","code":"buffer"},{"type":"text","text":" argument may let you trade safety for speed."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"Always perform any necessary cleanup in the closure, because the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"method makes no guarantees about the state of the collection if the"},{"text":" ","type":"text"},{"type":"text","text":"closure throws an error. Your changes to the collection may be absent"},{"type":"text","text":" "},{"type":"text","text":"from the collection after throwing the error, because the closure could"},{"text":" ","type":"text"},{"type":"text","text":"receive a temporary copy rather than direct access to the collection’s"},{"type":"text","text":" "},{"text":"storage.","type":"text"}]},{"name":"Warning","type":"aside","style":"warning","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Your "},{"type":"codeVoice","code":"body"},{"text":" closure must not replace ","type":"text"},{"type":"codeVoice","code":"buffer"},{"type":"text","text":". This leads"},{"type":"text","text":" "},{"type":"text","text":"to a crash in all implementations of this method within the standard"},{"type":"text","text":" "},{"type":"text","text":"library."}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Successive calls to this method may provide a different pointer on each"},{"type":"text","text":" "},{"type":"text","text":"call. Don’t store "},{"type":"codeVoice","code":"buffer"},{"type":"text","text":" outside of this method."}]},{"inlineContent":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"Collection"},{"type":"text","text":" that provides its own implementation of this method"},{"type":"text","text":" "},{"text":"must provide contiguous storage to its elements in the same order","type":"text"},{"type":"text","text":" "},{"text":"as they appear in the collection. This guarantees that it’s possible to","type":"text"},{"text":" ","type":"text"},{"text":"generate contiguous mutable storage to any of its subsequences by slicing","type":"text"},{"type":"text","text":" "},{"code":"buffer","type":"codeVoice"},{"text":" with a range formed from the distances to the subsequence’s","type":"text"},{"type":"text","text":" "},{"code":"startIndex","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"endIndex","type":"codeVoice"},{"type":"text","text":", respectively."}],"type":"paragraph"}]}],"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ContiguousArray\/withContiguousMutableStorageIfAvailable(_:)-564v7","interfaceLanguage":"swift"},"kind":"symbol","abstract":[{"text":"Executes a closure on the collection’s contiguous storage.","type":"text"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"role":"symbol","roleHeading":"Instance Method","symbolKind":"method","modules":[{"name":"Compute","relatedModules":["Swift"]}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"withContiguousMutableStorageIfAvailable","kind":"identifier"},{"kind":"text","text":"<"},{"text":"R","kind":"genericParameter"},{"kind":"text","text":">(("},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"UnsafeMutableBufferPointer","preciseIdentifier":"s:Sr"},{"kind":"text","text":"<"},{"text":"Element","kind":"typeIdentifier"},{"text":">) ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"R","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"text":"R","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"extendedModule":"Swift","externalID":"s:s15ContiguousArrayV04withA25MutableStorageIfAvailableyqd__Sgqd__SryxGzKXEKlF","title":"withContiguousMutableStorageIfAvailable(_:)"},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/ContiguousArray/withContiguousMutableStorageIfAvailable(_:)-564v7":{"abstract":[{"text":"Executes a closure on the collection’s contiguous storage.","type":"text"}],"title":"withContiguousMutableStorageIfAvailable(_:)","kind":"symbol","type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ContiguousArray\/withContiguousMutableStorageIfAvailable(_:)-564v7","url":"\/documentation\/compute\/contiguousarray\/withcontiguousmutablestorageifavailable(_:)-564v7","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"withContiguousMutableStorageIfAvailable"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"R"},{"text":">((","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UnsafeMutableBufferPointer","kind":"typeIdentifier","preciseIdentifier":"s:Sr"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">) "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"R"},{"text":"?","kind":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/ContiguousArray":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ContiguousArray","url":"\/documentation\/compute\/contiguousarray","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ContiguousArray"}],"title":"ContiguousArray","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ContiguousArray"}],"role":"symbol","abstract":[{"text":"A contiguously stored array.","type":"text"}],"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeMutableBufferPointer":{"kind":"symbol","url":"\/documentation\/compute\/unsafemutablebufferpointer","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"UnsafeMutableBufferPointer","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"UnsafeMutableBufferPointer"}],"abstract":[{"type":"text","text":"A nonowning collection interface to a buffer of mutable"},{"text":" ","type":"text"},{"text":"elements stored contiguously in memory.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableBufferPointer","title":"UnsafeMutableBufferPointer","type":"topic","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/ContiguousArray/MutableCollection-Implementations":{"role":"collectionGroup","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ContiguousArray\/MutableCollection-Implementations","kind":"article","abstract":[],"type":"topic","url":"\/documentation\/compute\/contiguousarray\/mutablecollection-implementations","title":"MutableCollection Implementations"}}}