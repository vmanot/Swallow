{"sections":[],"metadata":{"symbolKind":"method","role":"symbol","externalID":"s:s15ContiguousArrayV15replaceSubrange_4withySnySiG_qd__nt7ElementQyd__RszSlRd__lF","roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"replaceSubrange","kind":"identifier"},{"text":"<","kind":"text"},{"text":"C","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"Range","kind":"typeIdentifier","preciseIdentifier":"s:Sn"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":">, "},{"text":"with","kind":"externalParam"},{"kind":"text","text":": "},{"text":"C","kind":"typeIdentifier"},{"kind":"text","text":")"}],"extendedModule":"Swift","modules":[{"relatedModules":["Swift"],"name":"Compute"}],"title":"replaceSubrange(_:with:)"},"schemaVersion":{"minor":3,"major":0,"patch":0},"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ContiguousArray\/replaceSubrange(_:with:)-1gkro","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/compute\/contiguousarray\/replacesubrange(_:with:)-1gkro"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","abstract":[{"type":"text","text":"Replaces a range of elements with the elements in the specified"},{"text":" ","type":"text"},{"type":"text","text":"collection."}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ContiguousArray","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ContiguousArray\/RangeReplaceableCollection-Implementations"]]},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"mutating"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"replaceSubrange","kind":"identifier"},{"text":"<","kind":"text"},{"text":"C","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"text":"subrange","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Range","kind":"typeIdentifier","preciseIdentifier":"s:Sn","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Range"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int"},{"text":">, ","kind":"text"},{"text":"with","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"newElements"},{"kind":"text","text":": "},{"text":"C","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Element"},{"text":" == ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":" : "},{"text":"Collection","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection","preciseIdentifier":"s:Sl"}],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"subrange","content":[{"inlineContent":[{"type":"text","text":"The subrange of the array to replace. The start and end of"},{"type":"text","text":" "},{"text":"a subrange must be valid indices of the array.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"The new elements to add to the array."}],"type":"paragraph"}],"name":"newElements"}]},{"kind":"content","content":[{"anchor":"discussion","text":"Discussion","level":2,"type":"heading"},{"inlineContent":[{"text":"This method has the effect of removing the specified range of elements","type":"text"},{"text":" ","type":"text"},{"text":"from the array and inserting the new elements at the same location. The","type":"text"},{"type":"text","text":" "},{"type":"text","text":"number of new elements need not match the number of elements being"},{"text":" ","type":"text"},{"text":"removed.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"In this example, three elements in the middle of an array of integers are"},{"text":" ","type":"text"},{"text":"replaced by the five elements of a ","type":"text"},{"code":"Repeated<Int>","type":"codeVoice"},{"text":" instance.","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":[" var nums = [10, 20, 30, 40, 50]"," nums.replaceSubrange(1...3, with: repeatElement(1, count: 5))"," print(nums)"," \/\/ Prints \"[10, 1, 1, 1, 1, 1, 50]\""]},{"inlineContent":[{"type":"text","text":"If you pass a zero-length range as the "},{"type":"codeVoice","code":"subrange"},{"text":" parameter, this method","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"inserts the elements of "},{"type":"codeVoice","code":"newElements"},{"text":" at ","type":"text"},{"type":"codeVoice","code":"subrange.startIndex"},{"text":". Calling","type":"text"},{"type":"text","text":" "},{"text":"the ","type":"text"},{"type":"codeVoice","code":"insert(contentsOf:at:)"},{"text":" method instead is preferred.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Likewise, if you pass a zero-length collection as the "},{"code":"newElements","type":"codeVoice"},{"text":" ","type":"text"},{"text":"parameter, this method removes the elements in the given subrange","type":"text"},{"text":" ","type":"text"},{"text":"without replacement. Calling the ","type":"text"},{"type":"codeVoice","code":"removeSubrange(_:)"},{"type":"text","text":" method instead is"},{"text":" ","type":"text"},{"type":"text","text":"preferred."}],"type":"paragraph"},{"content":[{"inlineContent":[{"text":"O(","type":"text"},{"type":"emphasis","inlineContent":[{"text":"n","type":"text"}]},{"type":"text","text":" + "},{"type":"emphasis","inlineContent":[{"text":"m","type":"text"}]},{"type":"text","text":"), where "},{"inlineContent":[{"text":"n","type":"text"}],"type":"emphasis"},{"type":"text","text":" is length of the array and"},{"text":" ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"m","type":"text"}]},{"text":" is the length of ","type":"text"},{"type":"codeVoice","code":"newElements"},{"text":". If the call to this method simply","type":"text"},{"type":"text","text":" "},{"text":"appends the contents of ","type":"text"},{"code":"newElements","type":"codeVoice"},{"text":" to the array, this method is","type":"text"},{"type":"text","text":" "},{"type":"text","text":"equivalent to "},{"code":"append(contentsOf:)","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}],"name":"Complexity","style":"note","type":"aside"}]}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Collection":{"kind":"symbol","role":"symbol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Collection"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection","url":"\/documentation\/compute\/collection","abstract":[{"type":"text","text":"A sequence whose elements can be traversed multiple times,"},{"text":" ","type":"text"},{"text":"nondestructively, and accessed by an indexed subscript.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Collection"}],"title":"Collection"},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence/Element":{"type":"topic","required":true,"abstract":[{"type":"text","text":"A type representing the sequenceâ€™s elements."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"symbol","url":"\/documentation\/compute\/sequence\/element","role":"symbol","title":"Element","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/ContiguousArray/replaceSubrange(_:with:)-1gkro":{"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ContiguousArray\/replaceSubrange(_:with:)-1gkro","url":"\/documentation\/compute\/contiguousarray\/replacesubrange(_:with:)-1gkro","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"replaceSubrange"},{"text":"<","kind":"text"},{"text":"C","kind":"genericParameter"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:Sn","text":"Range","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"C"},{"text":")","kind":"text"}],"abstract":[{"text":"Replaces a range of elements with the elements in the specified","type":"text"},{"text":" ","type":"text"},{"text":"collection.","type":"text"}],"title":"replaceSubrange(_:with:)","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Range":{"kind":"symbol","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Range","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Range","url":"\/documentation\/compute\/range","abstract":[{"text":"A half-open interval from a lower bound up to, but not including, an upper","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"bound."}],"navigatorTitle":[{"text":"Range","kind":"identifier"}],"title":"Range"},"doc://com.swallow.documentation.Compute/documentation/Compute/ContiguousArray/RangeReplaceableCollection-Implementations":{"url":"\/documentation\/compute\/contiguousarray\/rangereplaceablecollection-implementations","title":"RangeReplaceableCollection Implementations","role":"collectionGroup","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ContiguousArray\/RangeReplaceableCollection-Implementations","abstract":[],"kind":"article","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","abstract":[{"type":"text","text":"A signed integer value type."}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Int","kind":"identifier"}],"navigatorTitle":[{"text":"Int","kind":"identifier"}],"title":"Int","url":"\/documentation\/compute\/int","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/ContiguousArray":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ContiguousArray","url":"\/documentation\/compute\/contiguousarray","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ContiguousArray"}],"title":"ContiguousArray","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ContiguousArray"}],"role":"symbol","abstract":[{"text":"A contiguously stored array.","type":"text"}],"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"}}}