{"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ContiguousArray","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ContiguousArray\/Collection-Implementations"]]},"metadata":{"externalID":"s:SlsE6prefix4upTo11SubSequenceQz5IndexQz_tF::SYNTHESIZED::s:s15ContiguousArrayV","extendedModule":"Swift","title":"prefix(upTo:)","roleHeading":"Instance Method","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"prefix","kind":"identifier"},{"kind":"text","text":"("},{"text":"upTo","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Index","preciseIdentifier":"s:Sl5IndexQa"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sl11SubSequenceQa","text":"SubSequence"}],"modules":[{"relatedModules":["Swift"],"name":"Compute"}],"role":"symbol"},"variants":[{"paths":["\/documentation\/compute\/contiguousarray\/prefix(upto:)"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"type":"text","text":"Returns a subsequence from the start of the collection up to, but not"},{"type":"text","text":" "},{"text":"including, the specified position.","type":"text"}],"kind":"symbol","identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ContiguousArray\/prefix(upTo:)","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"prefix"},{"kind":"text","text":"("},{"kind":"externalParam","text":"upTo"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"end"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/Index","kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa","text":"Index"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/SubSequence","preciseIdentifier":"s:Sl11SubSequenceQa","text":"SubSequence"}],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The “past the end” index of the resulting subsequence."},{"type":"text","text":" "},{"type":"codeVoice","code":"end"},{"text":" must be a valid index of the collection.","type":"text"}]}],"name":"end"}]},{"content":[{"type":"heading","anchor":"return-value","text":"Return Value","level":2},{"inlineContent":[{"type":"text","text":"A subsequence up to, but not including, the "},{"code":"end","type":"codeVoice"},{"text":" position.","type":"text"}],"type":"paragraph"}],"kind":"content"},{"content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"The resulting subsequence ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"does not include"}]},{"type":"text","text":" the element at the position"},{"text":" ","type":"text"},{"type":"codeVoice","code":"end"},{"text":". The following example searches for the index of the number ","type":"text"},{"code":"40","type":"codeVoice"},{"text":" ","type":"text"},{"text":"in an array of integers, and then prints the prefix of the array up to,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"but not including, that index:"}]},{"type":"codeListing","syntax":null,"code":["let numbers = [10, 20, 30, 40, 50, 60]","if let i = numbers.firstIndex(of: 40) {","    print(numbers.prefix(upTo: i))","}","\/\/ Prints \"[10, 20, 30]\""]},{"inlineContent":[{"text":"Passing the collection’s starting index as the ","type":"text"},{"code":"end","type":"codeVoice"},{"type":"text","text":" parameter results in"},{"text":" ","type":"text"},{"type":"text","text":"an empty subsequence."}],"type":"paragraph"},{"code":["print(numbers.prefix(upTo: numbers.startIndex))","\/\/ Prints \"[]\""],"syntax":null,"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Using the "},{"code":"prefix(upTo:)","type":"codeVoice"},{"type":"text","text":" method is equivalent to using a partial"},{"text":" ","type":"text"},{"type":"text","text":"half-open range as the collection’s subscript. The subscript notation is"},{"text":" ","type":"text"},{"type":"text","text":"preferred over "},{"type":"codeVoice","code":"prefix(upTo:)"},{"type":"text","text":"."}]},{"type":"codeListing","syntax":null,"code":["if let i = numbers.firstIndex(of: 40) {","    print(numbers[..<i])","}","\/\/ Prints \"[10, 20, 30]\""]},{"name":"Complexity","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"O(1)"}]}],"style":"note","type":"aside"}],"kind":"content"}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Collection/Index":{"url":"\/documentation\/compute\/collection\/index","required":true,"role":"symbol","title":"Index","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Index","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"Comparable","preciseIdentifier":"s:SL","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"A type that represents a position in the collection."}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/Index","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Collection/SubSequence":{"url":"\/documentation\/compute\/collection\/subsequence","title":"SubSequence","abstract":[{"type":"text","text":"A collection representing a contiguous subrange of this collection’s"},{"type":"text","text":" "},{"text":"elements. The subsequence shares indices with the original collection.","type":"text"}],"type":"topic","kind":"symbol","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SubSequence"},{"kind":"text","text":" : "},{"text":"Collection","preciseIdentifier":"s:Sl","kind":"typeIdentifier"},{"text":" = ","kind":"text"},{"text":"Slice","preciseIdentifier":"s:s5SliceV","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":">","kind":"text"}],"required":true,"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/SubSequence"},"doc://com.swallow.documentation.Compute/documentation/Compute/ContiguousArray/prefix(upTo:)":{"title":"prefix(upTo:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"prefix","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"upTo"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa","text":"Index"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"SubSequence","preciseIdentifier":"s:Sl11SubSequenceQa"}],"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/compute\/contiguousarray\/prefix(upto:)","abstract":[{"text":"Returns a subsequence from the start of the collection up to, but not","type":"text"},{"text":" ","type":"text"},{"text":"including, the specified position.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ContiguousArray\/prefix(upTo:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/ContiguousArray":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ContiguousArray","url":"\/documentation\/compute\/contiguousarray","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ContiguousArray"}],"title":"ContiguousArray","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ContiguousArray"}],"role":"symbol","abstract":[{"text":"A contiguously stored array.","type":"text"}],"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/ContiguousArray/Collection-Implementations":{"abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ContiguousArray\/Collection-Implementations","url":"\/documentation\/compute\/contiguousarray\/collection-implementations","type":"topic","title":"Collection Implementations","role":"collectionGroup","kind":"article"}}}