{"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ContiguousArray\/init(unsafeUninitializedCapacity:initializingWith:)","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/contiguousarray\/init(unsafeuninitializedcapacity:initializingwith:)"]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"symbol","metadata":{"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"text":"unsafeUninitializedCapacity","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":", ","kind":"text"},{"text":"initializingWith","kind":"externalParam"},{"kind":"text","text":": ("},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sr","text":"UnsafeMutableBufferPointer"},{"kind":"text","text":"<"},{"text":"Element","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":") "},{"text":"rethrows","kind":"keyword"}],"roleHeading":"Initializer","externalID":"s:s15ContiguousArrayV27unsafeUninitializedCapacity16initializingWithAByxGSi_ySryxGz_SiztKXEtKcfc","modules":[{"name":"Compute","relatedModules":["Swift"]}],"symbolKind":"init","title":"init(unsafeUninitializedCapacity:initializingWith:)","extendedModule":"Swift","role":"symbol"},"abstract":[{"text":"Creates an array with the specified capacity, then calls the given","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"closure with a buffer covering the array’s uninitialized memory."}],"sections":[],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ContiguousArray"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"unsafeUninitializedCapacity"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Int","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"text":"initializingWith","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"initializer"},{"kind":"text","text":": ("},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UnsafeMutableBufferPointer","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableBufferPointer","preciseIdentifier":"s:Sr"},{"text":"<","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"preciseIdentifier":"s:Si","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","kind":"typeIdentifier","text":"Int"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Void","text":"Void"},{"text":") ","kind":"text"},{"kind":"keyword","text":"rethrows"}]}]},{"kind":"parameters","parameters":[{"name":"unsafeUninitializedCapacity","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The number of elements to allocate"},{"text":" ","type":"text"},{"type":"text","text":"space for in the new array."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"A closure that initializes elements and sets the count"},{"type":"text","text":" "},{"text":"of the new array.","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"text":"Parameters:","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"buffer: A buffer covering uninitialized memory with room for the"},{"type":"text","text":" "},{"type":"text","text":"specified number of elements."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"initializedCount: The count of initialized elements in the array,"},{"text":" ","type":"text"},{"text":"which begins as zero. Set ","type":"text"},{"type":"codeVoice","code":"initializedCount"},{"type":"text","text":" to the number of"},{"type":"text","text":" "},{"type":"text","text":"elements you initialize."}],"type":"paragraph"}]}]}]}],"type":"unorderedList"}],"name":"initializer"}]},{"content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"inlineContent":[{"text":"Inside the closure, set the ","type":"text"},{"code":"initializedCount","type":"codeVoice"},{"type":"text","text":" parameter to the number of"},{"type":"text","text":" "},{"text":"elements that are initialized by the closure. The memory in the range","type":"text"},{"type":"text","text":" "},{"code":"buffer[0..<initializedCount]","type":"codeVoice"},{"text":" must be initialized at the end of the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"closure’s execution, and the memory in the range"},{"text":" ","type":"text"},{"code":"buffer[initializedCount...]","type":"codeVoice"},{"text":" must be uninitialized. This postcondition","type":"text"},{"type":"text","text":" "},{"type":"text","text":"must hold even if the "},{"type":"codeVoice","code":"initializer"},{"text":" closure throws an error.","type":"text"}],"type":"paragraph"},{"name":"Note","type":"aside","style":"note","content":[{"inlineContent":[{"type":"text","text":"While the resulting array may have a capacity larger than the"},{"type":"text","text":" "},{"type":"text","text":"requested amount, the buffer passed to the closure will cover exactly"},{"type":"text","text":" "},{"type":"text","text":"the requested number of elements."}],"type":"paragraph"}]}],"kind":"content"}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/ContiguousArray":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ContiguousArray","url":"\/documentation\/compute\/contiguousarray","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ContiguousArray"}],"title":"ContiguousArray","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ContiguousArray"}],"role":"symbol","abstract":[{"text":"A contiguously stored array.","type":"text"}],"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","abstract":[{"type":"text","text":"A signed integer value type."}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Int","kind":"identifier"}],"navigatorTitle":[{"text":"Int","kind":"identifier"}],"title":"Int","url":"\/documentation\/compute\/int","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeMutableBufferPointer":{"kind":"symbol","url":"\/documentation\/compute\/unsafemutablebufferpointer","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"UnsafeMutableBufferPointer","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"UnsafeMutableBufferPointer"}],"abstract":[{"type":"text","text":"A nonowning collection interface to a buffer of mutable"},{"text":" ","type":"text"},{"text":"elements stored contiguously in memory.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableBufferPointer","title":"UnsafeMutableBufferPointer","type":"topic","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/ContiguousArray/init(unsafeUninitializedCapacity:initializingWith:)":{"role":"symbol","type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ContiguousArray\/init(unsafeUninitializedCapacity:initializingWith:)","kind":"symbol","abstract":[{"text":"Creates an array with the specified capacity, then calls the given","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"closure with a buffer covering the array’s uninitialized memory."}],"title":"init(unsafeUninitializedCapacity:initializingWith:)","url":"\/documentation\/compute\/contiguousarray\/init(unsafeuninitializedcapacity:initializingwith:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"text":"unsafeUninitializedCapacity","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"initializingWith"},{"kind":"text","text":": ("},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:Sr","text":"UnsafeMutableBufferPointer","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">, "},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"rethrows","kind":"keyword"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Void":{"abstract":[{"text":"The return type of functions that don’t explicitly specify a return type,","type":"text"},{"text":" ","type":"text"},{"text":"that is, an empty tuple ","type":"text"},{"type":"codeVoice","code":"()"},{"type":"text","text":"."}],"type":"topic","title":"Void","url":"\/documentation\/compute\/void","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Void"}],"navigatorTitle":[{"text":"Void","kind":"identifier"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Void"}}}