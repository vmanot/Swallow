{"sections":[],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"sorted","kind":"identifier"},{"kind":"text","text":"() -> ["},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","text":"Element"},{"text":"]","kind":"text"}],"platforms":["macOS"]}],"kind":"declarations"},{"content":[{"level":2,"text":"Return Value","anchor":"return-value","type":"heading"},{"inlineContent":[{"type":"text","text":"A sorted array of the sequence’s elements."}],"type":"paragraph"}],"kind":"content"},{"content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can sort any sequence of elements that conform to the "},{"code":"Comparable","type":"codeVoice"},{"text":" ","type":"text"},{"type":"text","text":"protocol by calling this method. Elements are sorted in ascending order."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Here’s an example of sorting a list of students’ names. Strings in Swift"},{"type":"text","text":" "},{"type":"text","text":"conform to the "},{"code":"Comparable","type":"codeVoice"},{"text":" protocol, so the names are sorted in","type":"text"},{"text":" ","type":"text"},{"text":"ascending order according to the less-than operator (","type":"text"},{"type":"codeVoice","code":"<"},{"type":"text","text":")."}]},{"code":["let students: Set = [\"Kofi\", \"Abena\", \"Peter\", \"Kweku\", \"Akosua\"]","let sortedStudents = students.sorted()","print(sortedStudents)","\/\/ Prints \"[\"Abena\", \"Akosua\", \"Kofi\", \"Kweku\", \"Peter\"]\""],"syntax":null,"type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"To sort the elements of your sequence in descending order, pass the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"greater-than operator ("},{"code":">","type":"codeVoice"},{"text":") to the ","type":"text"},{"code":"sorted(by:)","type":"codeVoice"},{"type":"text","text":" method."}]},{"code":["let descendingStudents = students.sorted(by: >)","print(descendingStudents)","\/\/ Prints \"[\"Peter\", \"Kweku\", \"Kofi\", \"Akosua\", \"Abena\"]\""],"type":"codeListing","syntax":null},{"type":"paragraph","inlineContent":[{"text":"The sorting algorithm is guaranteed to be stable. A stable sort","type":"text"},{"type":"text","text":" "},{"text":"preserves the relative order of elements that compare as equal.","type":"text"}]},{"style":"note","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"O("},{"type":"emphasis","inlineContent":[{"type":"text","text":"n"}]},{"type":"text","text":" log "},{"type":"emphasis","inlineContent":[{"type":"text","text":"n"}]},{"text":"), where ","type":"text"},{"inlineContent":[{"type":"text","text":"n"}],"type":"emphasis"},{"text":" is the length of the sequence.","type":"text"}]}],"name":"Complexity"}],"kind":"content"}],"abstract":[{"type":"text","text":"Returns the elements of the sequence, sorted."}],"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableRawBufferPointer\/sorted()","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"major":0,"minor":3},"variants":[{"paths":["\/documentation\/compute\/unsafemutablerawbufferpointer\/sorted()"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"extendedModule":"Swift","modules":[{"name":"Compute","relatedModules":["Swift"]}],"roleHeading":"Instance Method","externalID":"s:STsSL7ElementRpzrlE6sortedSayABGyF::SYNTHESIZED::s:Sw","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"sorted","kind":"identifier"},{"kind":"text","text":"() -> ["},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier","text":"Element"},{"text":"]","kind":"text"}],"conformance":{"constraints":[{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Comparable"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"title":"sorted()","role":"symbol","symbolKind":"method"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableRawBufferPointer","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableRawBufferPointer\/Sequence-Implementations"]]},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence/Element":{"type":"topic","required":true,"abstract":[{"type":"text","text":"A type representing the sequence’s elements."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"symbol","url":"\/documentation\/compute\/sequence\/element","role":"symbol","title":"Element","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeMutableRawBufferPointer/sorted()":{"kind":"symbol","abstract":[{"text":"Returns the elements of the sequence, sorted.","type":"text"}],"url":"\/documentation\/compute\/unsafemutablerawbufferpointer\/sorted()","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"sorted","kind":"identifier"},{"text":"() -> [","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"text":"]","kind":"text"}],"conformance":{"constraints":[{"code":"Element","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Comparable","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableRawBufferPointer\/sorted()","title":"sorted()","role":"symbol","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeMutableRawBufferPointer/Sequence-Implementations":{"role":"collectionGroup","abstract":[],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableRawBufferPointer\/Sequence-Implementations","url":"\/documentation\/compute\/unsafemutablerawbufferpointer\/sequence-implementations","title":"Sequence Implementations","kind":"article"},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeMutableRawBufferPointer":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableRawBufferPointer","type":"topic","title":"UnsafeMutableRawBufferPointer","kind":"symbol","url":"\/documentation\/compute\/unsafemutablerawbufferpointer","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"UnsafeMutableRawBufferPointer"}],"role":"symbol","navigatorTitle":[{"text":"UnsafeMutableRawBufferPointer","kind":"identifier"}],"abstract":[{"text":"A mutable nonowning collection interface to the bytes in a","type":"text"},{"type":"text","text":" "},{"text":"region of memory.","type":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"}}}