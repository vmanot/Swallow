{"metadata":{"symbolKind":"method","role":"symbol","externalID":"s:Sw17withMemoryRebound2to_q0_xm_q0_SryxGq_YKXEtq_YKs5ErrorR_Ri_zRi_0_r1_lF","extendedModule":"Swift","modules":[{"relatedModules":["Swift"],"name":"Compute"}],"title":"withMemoryRebound(to:_:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"withMemoryRebound"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"E"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"Result"},{"kind":"text","text":">("},{"text":"to","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":".Type, (","kind":"text"},{"text":"UnsafeMutableBufferPointer","preciseIdentifier":"s:Sr","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">) "},{"kind":"keyword","text":"throws"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"E"},{"kind":"text","text":") -> "},{"text":"Result","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":"(","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Result","kind":"typeIdentifier"}],"roleHeading":"Instance Method"},"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"abstract":[{"text":"Executes the given closure while temporarily binding the buffer to","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"instances of type "},{"type":"codeVoice","code":"T"},{"text":".","type":"text"}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"withMemoryRebound"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"text":", ","kind":"text"},{"text":"E","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Result","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"to","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"type","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":".Type, ","kind":"text"},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"body"},{"text":": (","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableBufferPointer","kind":"typeIdentifier","preciseIdentifier":"s:Sr","text":"UnsafeMutableBufferPointer"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">) ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":"(","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Result"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":"("},{"text":"E","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"kind":"text","text":" "},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"E"},{"text":" : ","kind":"text"},{"text":"Error","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Error","preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"T","kind":"typeIdentifier"},{"text":" : ~Copyable, ","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":" : ~Copyable","kind":"text"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"type","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The type to temporarily bind the memory referenced by this"},{"text":" ","type":"text"},{"text":"buffer.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"A closure that takes a typed pointer to the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"same memory as this pointer, only bound to type "},{"type":"codeVoice","code":"T"},{"type":"text","text":". The closure’s"},{"text":" ","type":"text"},{"type":"text","text":"pointer argument is valid only for the duration of the closure’s"},{"type":"text","text":" "},{"text":"execution. If ","type":"text"},{"type":"codeVoice","code":"body"},{"type":"text","text":" has a return value, that value is also used as"},{"type":"text","text":" "},{"text":"the return value for the ","type":"text"},{"type":"codeVoice","code":"withMemoryRebound(to:capacity:_:)"},{"type":"text","text":" method."}]}],"name":"body"}]},{"content":[{"anchor":"return-value","text":"Return Value","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"The return value, if any, of the "},{"code":"body","type":"codeVoice"},{"text":" closure parameter.","type":"text"}],"type":"paragraph"}],"kind":"content"},{"content":[{"level":2,"type":"heading","text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Use this method when you have a buffer to raw memory and you need"},{"type":"text","text":" "},{"type":"text","text":"to access that memory as instances of a given type "},{"code":"T","type":"codeVoice"},{"type":"text","text":". Accessing"},{"type":"text","text":" "},{"type":"text","text":"memory as a type "},{"type":"codeVoice","code":"T"},{"type":"text","text":" requires that the memory be bound to that type."},{"type":"text","text":" "},{"type":"text","text":"A memory location may only be bound to one type at a time, so accessing"},{"text":" ","type":"text"},{"type":"text","text":"the same memory as an unrelated type without first rebinding the memory"},{"type":"text","text":" "},{"type":"text","text":"is undefined."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Any instance of "},{"type":"codeVoice","code":"T"},{"type":"text","text":" within the re-bound region may be initialized or"},{"text":" ","type":"text"},{"text":"uninitialized. The memory underlying any individual instance of ","type":"text"},{"code":"T","type":"codeVoice"},{"text":" ","type":"text"},{"type":"text","text":"must have the same initialization state (i.e.  initialized or"},{"type":"text","text":" "},{"type":"text","text":"uninitialized.) Accessing a "},{"type":"codeVoice","code":"T"},{"type":"text","text":" whose underlying memory"},{"text":" ","type":"text"},{"type":"text","text":"is in a mixed initialization state shall be undefined behaviour."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If the byte count of the original buffer is not a multiple of"},{"text":" ","type":"text"},{"type":"text","text":"the stride of "},{"code":"T","type":"codeVoice"},{"type":"text","text":", then the re-bound buffer is shorter"},{"text":" ","type":"text"},{"type":"text","text":"than the original buffer."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"After executing "},{"code":"body","type":"codeVoice"},{"text":", this method rebinds memory back to its original","type":"text"},{"text":" ","type":"text"},{"text":"binding state. This can be unbound memory, or bound to a different type.","type":"text"}]},{"content":[{"inlineContent":[{"text":"The buffer’s base address must match the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"alignment of "},{"code":"T","type":"codeVoice"},{"text":" (as reported by ","type":"text"},{"code":"MemoryLayout<T>.alignment","type":"codeVoice"},{"type":"text","text":")."},{"text":" ","type":"text"},{"text":"That is, ","type":"text"},{"code":"Int(bitPattern: self.baseAddress) % MemoryLayout<T>.alignment","type":"codeVoice"},{"type":"text","text":" "},{"text":"must equal zero.","type":"text"}],"type":"paragraph"}],"type":"aside","name":"Note","style":"note"},{"type":"aside","name":"Note","style":"note","content":[{"type":"paragraph","inlineContent":[{"text":"A raw buffer may represent memory that has been bound to a type.","type":"text"},{"text":" ","type":"text"},{"text":"If that is the case, then ","type":"text"},{"code":"T","type":"codeVoice"},{"type":"text","text":" must be layout compatible with the"},{"type":"text","text":" "},{"type":"text","text":"type to which the memory has been bound. This requirement does not"},{"type":"text","text":" "},{"text":"apply if the raw buffer represents memory that has not been bound","type":"text"},{"type":"text","text":" "},{"type":"text","text":"to any type."}]}]}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableRawBufferPointer"]]},"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableRawBufferPointer\/withMemoryRebound(to:_:)","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/compute\/unsafemutablerawbufferpointer\/withmemoryrebound(to:_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeMutableRawBufferPointer/withMemoryRebound(to:_:)":{"role":"symbol","type":"topic","title":"withMemoryRebound(to:_:)","abstract":[{"type":"text","text":"Executes the given closure while temporarily binding the buffer to"},{"type":"text","text":" "},{"type":"text","text":"instances of type "},{"code":"T","type":"codeVoice"},{"type":"text","text":"."}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"withMemoryRebound","kind":"identifier"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"E"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"Result"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"to"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":".Type, (","kind":"text"},{"text":"UnsafeMutableBufferPointer","kind":"typeIdentifier","preciseIdentifier":"s:Sr"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">) ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"E"},{"text":") -> ","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":"("},{"text":"E","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Result","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableRawBufferPointer\/withMemoryRebound(to:_:)","kind":"symbol","url":"\/documentation\/compute\/unsafemutablerawbufferpointer\/withmemoryrebound(to:_:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeMutableRawBufferPointer":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableRawBufferPointer","type":"topic","title":"UnsafeMutableRawBufferPointer","kind":"symbol","url":"\/documentation\/compute\/unsafemutablerawbufferpointer","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"UnsafeMutableRawBufferPointer"}],"role":"symbol","navigatorTitle":[{"text":"UnsafeMutableRawBufferPointer","kind":"identifier"}],"abstract":[{"text":"A mutable nonowning collection interface to the bytes in a","type":"text"},{"type":"text","text":" "},{"text":"region of memory.","type":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Error":{"url":"\/documentation\/compute\/error","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Error"}],"navigatorTitle":[{"text":"Error","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Error","type":"topic","role":"symbol","abstract":[{"type":"text","text":"A type representing an error value that can be thrown."}],"kind":"symbol","title":"Error"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeMutableBufferPointer":{"kind":"symbol","url":"\/documentation\/compute\/unsafemutablebufferpointer","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"UnsafeMutableBufferPointer","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"UnsafeMutableBufferPointer"}],"abstract":[{"type":"text","text":"A nonowning collection interface to a buffer of mutable"},{"text":" ","type":"text"},{"text":"elements stored contiguously in memory.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableBufferPointer","title":"UnsafeMutableBufferPointer","type":"topic","role":"symbol"}}}