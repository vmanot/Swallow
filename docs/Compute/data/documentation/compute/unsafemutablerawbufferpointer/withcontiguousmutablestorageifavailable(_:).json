{"sections":[],"variants":[{"paths":["\/documentation\/compute\/unsafemutablerawbufferpointer\/withcontiguousmutablestorageifavailable(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"withContiguousMutableStorageIfAvailable","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"R"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"body"},{"text":": (","kind":"text"},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableBufferPointer","kind":"typeIdentifier","text":"UnsafeMutableBufferPointer","preciseIdentifier":"s:Sr"},{"kind":"text","text":"<"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableRawBufferPointer","text":"UnsafeMutableRawBufferPointer","kind":"typeIdentifier","preciseIdentifier":"s:Sw"},{"kind":"text","text":"."},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableRawBufferPointer\/Element","kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:Sw7Elementa"},{"text":">) ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"R"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"text":"R","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}]},{"parameters":[{"content":[{"inlineContent":[{"type":"text","text":"A closure that receives an in-out"},{"type":"text","text":" "},{"code":"UnsafeMutableBufferPointer","type":"codeVoice"},{"text":" to the collection’s contiguous storage.","type":"text"}],"type":"paragraph"}],"name":"body"}],"kind":"parameters"},{"kind":"content","content":[{"text":"Return Value","level":2,"type":"heading","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"text":"The value returned from ","type":"text"},{"type":"codeVoice","code":"body"},{"text":", unless the collection doesn’t","type":"text"},{"type":"text","text":" "},{"text":"support contiguous storage, in which case the method ignores ","type":"text"},{"type":"codeVoice","code":"body"},{"type":"text","text":" and"},{"type":"text","text":" "},{"text":"returns ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"}]}]},{"content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"inlineContent":[{"text":"This method calls ","type":"text"},{"type":"codeVoice","code":"body(buffer)"},{"text":", where ","type":"text"},{"code":"buffer","type":"codeVoice"},{"type":"text","text":" provides access to the"},{"type":"text","text":" "},{"text":"contiguous mutable storage of the entire collection. If the contiguous","type":"text"},{"type":"text","text":" "},{"text":"storage doesn’t exist, the collection creates it. If the collection","type":"text"},{"type":"text","text":" "},{"text":"doesn’t support an internal representation in the form of contiguous","type":"text"},{"text":" ","type":"text"},{"text":"mutable storage, this method doesn’t call ","type":"text"},{"type":"codeVoice","code":"body"},{"type":"text","text":" — it immediately"},{"type":"text","text":" "},{"type":"text","text":"returns "},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The optimizer can often eliminate bounds- and uniqueness-checking"},{"type":"text","text":" "},{"type":"text","text":"within an algorithm. When that fails, however, invoking the same"},{"text":" ","type":"text"},{"text":"algorithm on the ","type":"text"},{"type":"codeVoice","code":"buffer"},{"text":" argument may let you trade safety for speed.","type":"text"}]},{"inlineContent":[{"text":"Always perform any necessary cleanup in the closure, because the","type":"text"},{"text":" ","type":"text"},{"text":"method makes no guarantees about the state of the collection if the","type":"text"},{"text":" ","type":"text"},{"text":"closure throws an error. Your changes to the collection may be absent","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"from the collection after throwing the error, because the closure could"},{"text":" ","type":"text"},{"type":"text","text":"receive a temporary copy rather than direct access to the collection’s"},{"type":"text","text":" "},{"text":"storage.","type":"text"}],"type":"paragraph"},{"type":"aside","style":"warning","name":"Warning","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Your "},{"code":"body","type":"codeVoice"},{"text":" closure must not replace ","type":"text"},{"code":"buffer","type":"codeVoice"},{"type":"text","text":". This leads"},{"text":" ","type":"text"},{"text":"to a crash in all implementations of this method within the standard","type":"text"},{"type":"text","text":" "},{"text":"library.","type":"text"}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Successive calls to this method may provide a different pointer on each"},{"type":"text","text":" "},{"text":"call. Don’t store ","type":"text"},{"code":"buffer","type":"codeVoice"},{"type":"text","text":" outside of this method."}]},{"inlineContent":[{"text":"A ","type":"text"},{"code":"Collection","type":"codeVoice"},{"text":" that provides its own implementation of this method","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"must provide contiguous storage to its elements in the same order"},{"type":"text","text":" "},{"text":"as they appear in the collection. This guarantees that it’s possible to","type":"text"},{"text":" ","type":"text"},{"text":"generate contiguous mutable storage to any of its subsequences by slicing","type":"text"},{"type":"text","text":" "},{"code":"buffer","type":"codeVoice"},{"type":"text","text":" with a range formed from the distances to the subsequence’s"},{"type":"text","text":" "},{"code":"startIndex","type":"codeVoice"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"endIndex"},{"text":", respectively.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"abstract":[{"text":"Executes a closure on the collection’s contiguous storage.","type":"text"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableRawBufferPointer\/withContiguousMutableStorageIfAvailable(_:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableRawBufferPointer","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableRawBufferPointer\/MutableCollection-Implementations"]]},"metadata":{"symbolKind":"method","role":"symbol","roleHeading":"Instance Method","externalID":"s:Sw39withContiguousMutableStorageIfAvailableyxSgxSrys5UInt8VGzKXEKlF","modules":[{"relatedModules":["Swift"],"name":"Compute"}],"extendedModule":"Swift","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"withContiguousMutableStorageIfAvailable"},{"kind":"text","text":"<"},{"text":"R","kind":"genericParameter"},{"kind":"text","text":">(("},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"text":"UnsafeMutableBufferPointer","kind":"typeIdentifier","preciseIdentifier":"s:Sr"},{"kind":"text","text":"<"},{"text":"UnsafeMutableRawBufferPointer","kind":"typeIdentifier","preciseIdentifier":"s:Sw"},{"text":".","kind":"text"},{"preciseIdentifier":"s:Sw7Elementa","text":"Element","kind":"typeIdentifier"},{"kind":"text","text":">) "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"rethrows"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"R"},{"kind":"text","text":"?"}],"title":"withContiguousMutableStorageIfAvailable(_:)"},"kind":"symbol","references":{"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeMutableRawBufferPointer/withContiguousMutableStorageIfAvailable(_:)":{"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableRawBufferPointer\/withContiguousMutableStorageIfAvailable(_:)","abstract":[{"text":"Executes a closure on the collection’s contiguous storage.","type":"text"}],"url":"\/documentation\/compute\/unsafemutablerawbufferpointer\/withcontiguousmutablestorageifavailable(_:)","title":"withContiguousMutableStorageIfAvailable(_:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"withContiguousMutableStorageIfAvailable","kind":"identifier"},{"kind":"text","text":"<"},{"text":"R","kind":"genericParameter"},{"text":">((","kind":"text"},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"text":"UnsafeMutableBufferPointer","kind":"typeIdentifier","preciseIdentifier":"s:Sr"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:Sw","text":"UnsafeMutableRawBufferPointer","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:Sw7Elementa"},{"kind":"text","text":">) "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"rethrows"},{"text":" -> ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeMutableRawBufferPointer/MutableCollection-Implementations":{"role":"collectionGroup","type":"topic","title":"MutableCollection Implementations","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableRawBufferPointer\/MutableCollection-Implementations","kind":"article","url":"\/documentation\/compute\/unsafemutablerawbufferpointer\/mutablecollection-implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeMutableRawBufferPointer":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableRawBufferPointer","type":"topic","title":"UnsafeMutableRawBufferPointer","kind":"symbol","url":"\/documentation\/compute\/unsafemutablerawbufferpointer","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"UnsafeMutableRawBufferPointer"}],"role":"symbol","navigatorTitle":[{"text":"UnsafeMutableRawBufferPointer","kind":"identifier"}],"abstract":[{"text":"A mutable nonowning collection interface to the bytes in a","type":"text"},{"type":"text","text":" "},{"text":"region of memory.","type":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeMutableRawBufferPointer/Element":{"navigatorTitle":[{"text":"Element","kind":"identifier"}],"role":"symbol","abstract":[{"text":"A type representing the sequence’s elements.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableRawBufferPointer\/Element","url":"\/documentation\/compute\/unsafemutablerawbufferpointer\/element","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Element"}],"title":"UnsafeMutableRawBufferPointer.Element","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeMutableBufferPointer":{"kind":"symbol","url":"\/documentation\/compute\/unsafemutablebufferpointer","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"UnsafeMutableBufferPointer","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"UnsafeMutableBufferPointer"}],"abstract":[{"type":"text","text":"A nonowning collection interface to a buffer of mutable"},{"text":" ","type":"text"},{"text":"elements stored contiguously in memory.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableBufferPointer","title":"UnsafeMutableBufferPointer","type":"topic","role":"symbol"}}}