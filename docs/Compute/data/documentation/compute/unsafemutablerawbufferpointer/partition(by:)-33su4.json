{"sections":[],"abstract":[{"type":"text","text":"Reorders the elements of the collection such that all the elements"},{"text":" ","type":"text"},{"text":"that match the given predicate are after all the elements that don’t","type":"text"},{"text":" ","type":"text"},{"text":"match.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableRawBufferPointer","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableRawBufferPointer\/MutableCollection-Implementations"]]},"metadata":{"extendedModule":"Swift","symbolKind":"method","externalID":"s:SMsSKRzrlE9partition2by5IndexSlQzSb7ElementSTQzKXE_tKF::SYNTHESIZED::s:Sw","modules":[{"name":"Compute","relatedModules":["Swift"]}],"title":"partition(by:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"partition","kind":"identifier"},{"text":"(","kind":"text"},{"text":"by","kind":"externalParam"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:Sl5IndexQa","text":"Index","kind":"typeIdentifier"}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"BidirectionalCollection"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"roleHeading":"Instance Method"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/unsafemutablerawbufferpointer\/partition(by:)-33su4"]}],"kind":"symbol","identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableRawBufferPointer\/partition(by:)-33su4","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"minor":3,"major":0},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"mutating","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"partition","kind":"identifier"},{"text":"(","kind":"text"},{"text":"by","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"belongsInSecondPartition","kind":"internalParam"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","text":"Element"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bool","text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Index","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/Index","preciseIdentifier":"s:Sl5IndexQa"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"belongsInSecondPartition","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A predicate used to partition"},{"text":" ","type":"text"},{"type":"text","text":"the collection. All elements satisfying this predicate are ordered"},{"text":" ","type":"text"},{"text":"after all elements not satisfying it.","type":"text"}]}]}]},{"content":[{"level":2,"type":"heading","anchor":"return-value","text":"Return Value"},{"inlineContent":[{"type":"text","text":"The index of the first element in the reordered collection"},{"type":"text","text":" "},{"type":"text","text":"that matches "},{"type":"codeVoice","code":"belongsInSecondPartition"},{"text":". If no elements in the","type":"text"},{"type":"text","text":" "},{"text":"collection match ","type":"text"},{"type":"codeVoice","code":"belongsInSecondPartition"},{"type":"text","text":", the returned index is"},{"text":" ","type":"text"},{"text":"equal to the collection’s ","type":"text"},{"type":"codeVoice","code":"endIndex"},{"type":"text","text":"."}],"type":"paragraph"}],"kind":"content"},{"kind":"content","content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"inlineContent":[{"type":"text","text":"After partitioning a collection, there is a pivot index "},{"type":"codeVoice","code":"p"},{"type":"text","text":" where"},{"text":" ","type":"text"},{"type":"text","text":"no element before "},{"type":"codeVoice","code":"p"},{"type":"text","text":" satisfies the "},{"code":"belongsInSecondPartition","type":"codeVoice"},{"text":" ","type":"text"},{"type":"text","text":"predicate and every element at or after "},{"type":"codeVoice","code":"p"},{"type":"text","text":" satisfies"},{"text":" ","type":"text"},{"type":"codeVoice","code":"belongsInSecondPartition"},{"type":"text","text":". This operation isn’t guaranteed to be"},{"text":" ","type":"text"},{"text":"stable, so the relative ordering of elements within the partitions might","type":"text"},{"type":"text","text":" "},{"type":"text","text":"change."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"In the following example, an array of numbers is partitioned by a"},{"text":" ","type":"text"},{"type":"text","text":"predicate that matches elements greater than 30."}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":["var numbers = [30, 40, 20, 30, 30, 60, 10]","let p = numbers.partition(by: { $0 > 30 })","\/\/ p == 5","\/\/ numbers == [30, 10, 20, 30, 30, 60, 40]"]},{"inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"numbers"},{"type":"text","text":" array is now arranged in two partitions. The first"},{"text":" ","type":"text"},{"type":"text","text":"partition, "},{"code":"numbers[..<p]","type":"codeVoice"},{"text":", is made up of the elements that","type":"text"},{"type":"text","text":" "},{"type":"text","text":"are not greater than 30. The second partition, "},{"type":"codeVoice","code":"numbers[p...]"},{"text":",","type":"text"},{"type":"text","text":" "},{"type":"text","text":"is made up of the elements that "},{"inlineContent":[{"text":"are","type":"text"}],"type":"emphasis"},{"type":"text","text":" greater than 30."}],"type":"paragraph"},{"code":["let first = numbers[..<p]","\/\/ first == [30, 10, 20, 30, 30]","let second = numbers[p...]","\/\/ second == [60, 40]"],"syntax":null,"type":"codeListing"},{"inlineContent":[{"type":"text","text":"Note that the order of elements in both partitions changed."},{"text":" ","type":"text"},{"text":"That is, ","type":"text"},{"type":"codeVoice","code":"40"},{"text":" appears before ","type":"text"},{"type":"codeVoice","code":"60"},{"type":"text","text":" in the original collection,"},{"type":"text","text":" "},{"type":"text","text":"but, after calling "},{"code":"partition(by:)","type":"codeVoice"},{"type":"text","text":", "},{"code":"60","type":"codeVoice"},{"type":"text","text":" appears before "},{"type":"codeVoice","code":"40"},{"type":"text","text":"."}],"type":"paragraph"},{"type":"aside","style":"note","content":[{"inlineContent":[{"type":"text","text":"O("},{"inlineContent":[{"text":"n","type":"text"}],"type":"emphasis"},{"text":"), where ","type":"text"},{"inlineContent":[{"type":"text","text":"n"}],"type":"emphasis"},{"type":"text","text":" is the length of the collection."}],"type":"paragraph"}],"name":"Complexity"}]}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeMutableRawBufferPointer/MutableCollection-Implementations":{"role":"collectionGroup","type":"topic","title":"MutableCollection Implementations","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableRawBufferPointer\/MutableCollection-Implementations","kind":"article","url":"\/documentation\/compute\/unsafemutablerawbufferpointer\/mutablecollection-implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence/Element":{"type":"topic","required":true,"abstract":[{"type":"text","text":"A type representing the sequence’s elements."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"symbol","url":"\/documentation\/compute\/sequence\/element","role":"symbol","title":"Element","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Bool":{"url":"\/documentation\/compute\/bool","role":"symbol","title":"Bool","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Bool","kind":"identifier"}],"abstract":[{"type":"text","text":"A value type whose instances are either "},{"type":"codeVoice","code":"true"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"false"},{"text":".","type":"text"}],"navigatorTitle":[{"text":"Bool","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bool","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Collection/Index":{"url":"\/documentation\/compute\/collection\/index","required":true,"role":"symbol","title":"Index","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Index","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"Comparable","preciseIdentifier":"s:SL","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"A type that represents a position in the collection."}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/Index","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeMutableRawBufferPointer/partition(by:)-33su4":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"partition","kind":"identifier"},{"kind":"text","text":"("},{"text":"by","kind":"externalParam"},{"kind":"text","text":": ("},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Index","preciseIdentifier":"s:Sl5IndexQa"}],"conformance":{"constraints":[{"code":"Self","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"BidirectionalCollection"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"url":"\/documentation\/compute\/unsafemutablerawbufferpointer\/partition(by:)-33su4","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Reorders the elements of the collection such that all the elements"},{"type":"text","text":" "},{"type":"text","text":"that match the given predicate are after all the elements that don’t"},{"type":"text","text":" "},{"type":"text","text":"match."}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableRawBufferPointer\/partition(by:)-33su4","title":"partition(by:)"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeMutableRawBufferPointer":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableRawBufferPointer","type":"topic","title":"UnsafeMutableRawBufferPointer","kind":"symbol","url":"\/documentation\/compute\/unsafemutablerawbufferpointer","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"UnsafeMutableRawBufferPointer"}],"role":"symbol","navigatorTitle":[{"text":"UnsafeMutableRawBufferPointer","kind":"identifier"}],"abstract":[{"text":"A mutable nonowning collection interface to the bytes in a","type":"text"},{"type":"text","text":" "},{"text":"region of memory.","type":"text"}]}}}