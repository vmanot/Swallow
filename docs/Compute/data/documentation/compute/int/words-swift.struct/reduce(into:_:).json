{"abstract":[{"type":"text","text":"Returns the result of combining the elements of the sequence using the"},{"type":"text","text":" "},{"type":"text","text":"given closure."}],"kind":"symbol","metadata":{"symbolKind":"method","modules":[{"name":"Compute","relatedModules":["Swift"]}],"roleHeading":"Instance Method","title":"reduce(into:_:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"reduce","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Result"},{"kind":"text","text":">("},{"text":"into","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":", (","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> ()) "},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Result"}],"extendedModule":"Swift","externalID":"s:STsE6reduce4into_qd__qd__n_yqd__z_7ElementQztKXEtKlF::SYNTHESIZED::s:Si5WordsV","role":"symbol"},"sections":[],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"reduce"},{"kind":"text","text":"<"},{"text":"Result","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"into","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"initialResult","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"text":"updateAccumulatingResult","kind":"internalParam"},{"text":": (","kind":"text"},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Result"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Element","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> ()) "},{"kind":"keyword","text":"rethrows"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Result"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"initialResult","content":[{"type":"paragraph","inlineContent":[{"text":"The value to use as the initial accumulating value.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"A closure that updates the accumulating"},{"type":"text","text":" "},{"text":"value with an element of the sequence.","type":"text"}],"type":"paragraph"}],"name":"updateAccumulatingResult"}]},{"content":[{"anchor":"return-value","text":"Return Value","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"The final accumulated value. If the sequence has no elements,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the result is "},{"type":"codeVoice","code":"initialResult"},{"type":"text","text":"."}]}],"kind":"content"},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","level":2,"type":"heading"},{"inlineContent":[{"text":"Use the ","type":"text"},{"code":"reduce(into:_:)","type":"codeVoice"},{"type":"text","text":" method to produce a single value from the"},{"text":" ","type":"text"},{"text":"elements of an entire sequence. For example, you can use this method on an","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"array of integers to filter adjacent equal entries or count frequencies."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method is preferred over "},{"type":"codeVoice","code":"reduce(_:_:)"},{"text":" for efficiency when the","type":"text"},{"type":"text","text":" "},{"text":"result is a copy-on-write type, for example an Array or a Dictionary.","type":"text"}]},{"inlineContent":[{"text":"The ","type":"text"},{"type":"codeVoice","code":"updateAccumulatingResult"},{"text":" closure is called sequentially with a","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"mutable accumulating value initialized to "},{"code":"initialResult","type":"codeVoice"},{"type":"text","text":" and each element"},{"type":"text","text":" "},{"type":"text","text":"of the sequence. This example shows how to build a dictionary of letter"},{"type":"text","text":" "},{"type":"text","text":"frequencies of a string."}],"type":"paragraph"},{"syntax":null,"code":["let letters = \"abracadabra\"","let letterCount = letters.reduce(into: [:]) { counts, letter in","    counts[letter, default: 0] += 1","}","\/\/ letterCount == [\"a\": 5, \"b\": 2, \"r\": 2, \"c\": 1, \"d\": 1]"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"When "},{"type":"codeVoice","code":"letters.reduce(into:_:)"},{"text":" is called, the following steps occur:","type":"text"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"type":"codeVoice","code":"updateAccumulatingResult"},{"text":" closure is called with the initial","type":"text"},{"type":"text","text":" "},{"text":"accumulating value—","type":"text"},{"type":"codeVoice","code":"[:]"},{"text":" in this case—and the first character of","type":"text"},{"type":"text","text":" "},{"code":"letters","type":"codeVoice"},{"text":", modifying the accumulating value by setting ","type":"text"},{"type":"codeVoice","code":"1"},{"type":"text","text":" for the key"},{"type":"text","text":" "},{"type":"codeVoice","code":"\"a\""},{"type":"text","text":"."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The closure is called again repeatedly with the updated accumulating"},{"text":" ","type":"text"},{"type":"text","text":"value and each element of the sequence."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"When the sequence is exhausted, the accumulating value is returned to","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the caller."}]}]}],"type":"orderedList"},{"type":"paragraph","inlineContent":[{"text":"If the sequence has no elements, ","type":"text"},{"type":"codeVoice","code":"updateAccumulatingResult"},{"text":" is never","type":"text"},{"text":" ","type":"text"},{"text":"executed and ","type":"text"},{"type":"codeVoice","code":"initialResult"},{"type":"text","text":" is the result of the call to"},{"type":"text","text":" "},{"type":"codeVoice","code":"reduce(into:_:)"},{"type":"text","text":"."}]},{"type":"aside","name":"Complexity","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"O("},{"inlineContent":[{"type":"text","text":"n"}],"type":"emphasis"},{"type":"text","text":"), where "},{"type":"emphasis","inlineContent":[{"text":"n","type":"text"}]},{"type":"text","text":" is the length of the sequence."}]}],"style":"note"}]}],"variants":[{"paths":["\/documentation\/compute\/int\/words-swift.struct\/reduce(into:_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int\/Words-swift.struct\/reduce(into:_:)","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"major":0,"patch":0},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int\/Words-swift.struct","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int\/Words-swift.struct\/Sequence-Implementations"]]},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Int":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","abstract":[{"type":"text","text":"A signed integer value type."}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Int","kind":"identifier"}],"navigatorTitle":[{"text":"Int","kind":"identifier"}],"title":"Int","url":"\/documentation\/compute\/int","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence/Element":{"type":"topic","required":true,"abstract":[{"type":"text","text":"A type representing the sequence’s elements."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"symbol","url":"\/documentation\/compute\/sequence\/element","role":"symbol","title":"Element","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int/Words-swift.struct/Sequence-Implementations":{"abstract":[],"role":"collectionGroup","type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int\/Words-swift.struct\/Sequence-Implementations","kind":"article","url":"\/documentation\/compute\/int\/words-swift.struct\/sequence-implementations","title":"Sequence Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int/Words-swift.struct":{"abstract":[{"type":"text","text":"A type that represents the words of this integer."}],"navigatorTitle":[{"text":"Words","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int\/Words-swift.struct","title":"Int.Words","kind":"symbol","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Words"}],"url":"\/documentation\/compute\/int\/words-swift.struct","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int/Words-swift.struct/reduce(into:_:)":{"title":"reduce(into:_:)","url":"\/documentation\/compute\/int\/words-swift.struct\/reduce(into:_:)","abstract":[{"type":"text","text":"Returns the result of combining the elements of the sequence using the"},{"text":" ","type":"text"},{"text":"given closure.","type":"text"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int\/Words-swift.struct\/reduce(into:_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"reduce","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Result","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"into","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"kind":"text","text":", ("},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Result"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier","text":"Element"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ()) ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Result"}],"type":"topic"}}}