{"schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"kind":"symbol","identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int\/*(_:_:)","interfaceLanguage":"swift"},"metadata":{"roleHeading":"Operator","title":"*(_:_:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"*"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"text":", ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"}],"symbolKind":"op","modules":[{"name":"Compute","relatedModules":["Swift"]}],"extendedModule":"Swift","externalID":"s:Si1moiyS2i_SitFZ","role":"symbol"},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int\/BinaryInteger-Implementations"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/int\/*(_:_:)"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"*","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"lhs","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","preciseIdentifier":"s:Si"},{"text":", ","kind":"text"},{"kind":"internalParam","text":"rhs"},{"text":": ","kind":"text"},{"text":"Int","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"name":"lhs","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The first value to multiply."}]}]},{"name":"rhs","content":[{"inlineContent":[{"text":"The second value to multiply.","type":"text"}],"type":"paragraph"}]}]},{"content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"The multiplication operator (","type":"text"},{"type":"codeVoice","code":"*"},{"type":"text","text":") calculates the product of its two"},{"type":"text","text":" "},{"type":"text","text":"arguments. For example:"}]},{"type":"codeListing","syntax":null,"code":["2 * 3                   \/\/ 6","100 * 21                \/\/ 2100","-10 * 15                \/\/ -150","3.5 * 2.25              \/\/ 7.875"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You cannot use "},{"code":"*","type":"codeVoice"},{"type":"text","text":" with arguments of different types. To multiply values"},{"type":"text","text":" "},{"text":"of different types, convert one of the values to the other value’s type.","type":"text"}]},{"syntax":null,"type":"codeListing","code":["let x: Int8 = 21","let y: Int = 1000000","Int(x) * y              \/\/ 21000000"]},{"type":"paragraph","inlineContent":[{"text":"The product of the two arguments must be representable in the arguments’","type":"text"},{"type":"text","text":" "},{"type":"text","text":"type. In the following example, the result of "},{"code":"21 * 21","type":"codeVoice"},{"type":"text","text":" is greater than"},{"text":" ","type":"text"},{"text":"the maximum representable ","type":"text"},{"code":"Int8","type":"codeVoice"},{"type":"text","text":" value:"}]},{"code":["x * 21                  \/\/ Overflow error"],"type":"codeListing","syntax":null},{"name":"Note","type":"aside","content":[{"inlineContent":[{"type":"text","text":"Overflow checking is not performed in "},{"type":"codeVoice","code":"-Ounchecked"},{"type":"text","text":" builds."}],"type":"paragraph"}],"style":"note"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you want to opt out of overflow checking and wrap the result in case"},{"text":" ","type":"text"},{"text":"of any overflow, use the overflow multiplication operator (","type":"text"},{"code":"&*","type":"codeVoice"},{"text":").","type":"text"}]},{"syntax":null,"type":"codeListing","code":["x &* 21                \/\/ -115"]}],"kind":"content"}],"abstract":[{"text":"Multiplies two values and produces their product.","type":"text"}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int/*(_:_:)":{"title":"*(_:_:)","url":"\/documentation\/compute\/int\/*(_:_:)","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int\/*(_:_:)","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"*"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"}],"abstract":[{"text":"Multiplies two values and produces their product.","type":"text"}],"role":"symbol","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int/BinaryInteger-Implementations":{"url":"\/documentation\/compute\/int\/binaryinteger-implementations","title":"BinaryInteger Implementations","role":"collectionGroup","kind":"article","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int\/BinaryInteger-Implementations","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","abstract":[{"type":"text","text":"A signed integer value type."}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Int","kind":"identifier"}],"navigatorTitle":[{"text":"Int","kind":"identifier"}],"title":"Int","url":"\/documentation\/compute\/int","kind":"symbol"}}}