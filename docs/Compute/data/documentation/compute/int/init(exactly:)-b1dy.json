{"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"?<"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"exactly","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"source"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") "},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:Sz","text":"BinaryInteger","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryInteger","kind":"typeIdentifier"}],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"A value to convert to this type of integer.","type":"text"}]}],"name":"source"}]},{"content":[{"level":2,"anchor":"discussion","text":"Discussion","type":"heading"},{"inlineContent":[{"text":"If the value passed as ","type":"text"},{"code":"source","type":"codeVoice"},{"text":" is not representable exactly, the result","type":"text"},{"type":"text","text":" "},{"text":"is ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":". In the following example, the constant ","type":"text"},{"type":"codeVoice","code":"x"},{"type":"text","text":" is successfully"},{"type":"text","text":" "},{"text":"created from a value of ","type":"text"},{"code":"100","type":"codeVoice"},{"text":", while the attempt to initialize the","type":"text"},{"text":" ","type":"text"},{"text":"constant ","type":"text"},{"type":"codeVoice","code":"y"},{"type":"text","text":" from "},{"type":"codeVoice","code":"1_000"},{"type":"text","text":" fails because the "},{"code":"Int8","type":"codeVoice"},{"text":" type can represent","type":"text"},{"type":"text","text":" "},{"code":"127","type":"codeVoice"},{"type":"text","text":" at maximum:"}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":["let x = Int8(exactly: 100)","\/\/ x == Optional(100)","let y = Int8(exactly: 1_000)","\/\/ y == nil"]}],"kind":"content"}],"abstract":[{"type":"text","text":"Creates a new instance from the given integer, if it can be represented"},{"type":"text","text":" "},{"type":"text","text":"exactly."}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int\/SignedInteger-Implementations"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"?<"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"exactly","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"text":")","kind":"text"}],"extendedModule":"Swift","modules":[{"name":"Compute","relatedModules":["Swift"]}],"title":"init(exactly:)","symbolKind":"init","roleHeading":"Initializer","conformance":{"constraints":[{"code":"Self","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"FixedWidthInteger"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"externalID":"s:SZss17FixedWidthIntegerRzrlE7exactlyxSgqd___tcSzRd__lufc::SYNTHESIZED::s:Si"},"sections":[],"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int\/init(exactly:)-b1dy","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/int\/init(exactly:)-b1dy"]}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Int":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","abstract":[{"type":"text","text":"A signed integer value type."}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Int","kind":"identifier"}],"navigatorTitle":[{"text":"Int","kind":"identifier"}],"title":"Int","url":"\/documentation\/compute\/int","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int/init(exactly:)-b1dy":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int\/init(exactly:)-b1dy","kind":"symbol","title":"init(exactly:)","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"?<"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"exactly","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Creates a new instance from the given integer, if it can be represented"},{"type":"text","text":" "},{"type":"text","text":"exactly."}],"role":"symbol","url":"\/documentation\/compute\/int\/init(exactly:)-b1dy","type":"topic","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"FixedWidthInteger"},{"type":"text","text":"."}]}},"doc://com.swallow.documentation.Compute/documentation/Compute/BinaryInteger":{"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"BinaryInteger"}],"navigatorTitle":[{"kind":"identifier","text":"BinaryInteger"}],"url":"\/documentation\/compute\/binaryinteger","type":"topic","abstract":[{"type":"text","text":"An integer type with a binary representation."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryInteger","title":"BinaryInteger","kind":"symbol","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int/SignedInteger-Implementations":{"role":"collectionGroup","abstract":[],"title":"SignedInteger Implementations","type":"topic","kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int\/SignedInteger-Implementations","url":"\/documentation\/compute\/int\/signedinteger-implementations"}}}