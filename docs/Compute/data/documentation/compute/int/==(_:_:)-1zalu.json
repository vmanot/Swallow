{"variants":[{"paths":["\/documentation\/compute\/int\/==(_:_:)-1zalu"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"roleHeading":"Operator","role":"symbol","symbolKind":"op","extendedModule":"Swift","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"==","kind":"identifier"},{"text":" ","kind":"text"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Other"},{"kind":"text","text":">("},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Other","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"modules":[{"name":"Compute","relatedModules":["Swift"]}],"title":"==(_:_:)","externalID":"s:SzsE2eeoiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:Si"},"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int\/==(_:_:)-1zalu"},"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"type":"text","text":"Returns a Boolean value indicating whether the two given values are"},{"type":"text","text":" "},{"text":"equal.","type":"text"}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"=="},{"text":" ","kind":"text"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Other"},{"kind":"text","text":">("},{"kind":"internalParam","text":"lhs"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"internalParam","text":"rhs"},{"kind":"text","text":": "},{"text":"Other","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bool","text":"Bool","preciseIdentifier":"s:Sb"},{"text":" ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Other","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryInteger","text":"BinaryInteger","kind":"typeIdentifier","preciseIdentifier":"s:Sz"}],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"An integer to compare."}]}],"name":"lhs"},{"name":"rhs","content":[{"inlineContent":[{"text":"Another integer to compare.","type":"text"}],"type":"paragraph"}]}]},{"kind":"content","content":[{"level":2,"text":"Discussion","anchor":"discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"You can check the equality of instances of any ","type":"text"},{"type":"codeVoice","code":"BinaryInteger"},{"type":"text","text":" types"},{"type":"text","text":" "},{"type":"text","text":"using the equal-to operator ("},{"type":"codeVoice","code":"=="},{"text":"). For example, you can test whether","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the first "},{"type":"codeVoice","code":"UInt8"},{"type":"text","text":" value in a stringâ€™s UTF-8 encoding is equal to the"},{"type":"text","text":" "},{"text":"first ","type":"text"},{"code":"UInt32","type":"codeVoice"},{"type":"text","text":" value in its Unicode scalar view:"}]},{"syntax":null,"type":"codeListing","code":["let gameName = \"Red Light, Green Light\"","if let firstUTF8 = gameName.utf8.first,","    let firstScalar = gameName.unicodeScalars.first?.value {","    print(\"First code values are equal: \\(firstUTF8 == firstScalar)\")","}","\/\/ Prints \"First code values are equal: true\""]}]}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int\/BinaryInteger-Implementations"]]},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Int/==(_:_:)-1zalu":{"role":"symbol","url":"\/documentation\/compute\/int\/==(_:_:)-1zalu","type":"topic","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"==","kind":"identifier"},{"text":" ","kind":"text"},{"kind":"text","text":"<"},{"text":"Other","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"text":"Other","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"text":"Returns a Boolean value indicating whether the two given values are","type":"text"},{"type":"text","text":" "},{"type":"text","text":"equal."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int\/==(_:_:)-1zalu","title":"==(_:_:)","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","abstract":[{"type":"text","text":"A signed integer value type."}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Int","kind":"identifier"}],"navigatorTitle":[{"text":"Int","kind":"identifier"}],"title":"Int","url":"\/documentation\/compute\/int","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int/BinaryInteger-Implementations":{"url":"\/documentation\/compute\/int\/binaryinteger-implementations","title":"BinaryInteger Implementations","role":"collectionGroup","kind":"article","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int\/BinaryInteger-Implementations","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Bool":{"url":"\/documentation\/compute\/bool","role":"symbol","title":"Bool","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Bool","kind":"identifier"}],"abstract":[{"type":"text","text":"A value type whose instances are either "},{"type":"codeVoice","code":"true"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"false"},{"text":".","type":"text"}],"navigatorTitle":[{"text":"Bool","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bool","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/BinaryInteger":{"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"BinaryInteger"}],"navigatorTitle":[{"kind":"identifier","text":"BinaryInteger"}],"url":"\/documentation\/compute\/binaryinteger","type":"topic","abstract":[{"type":"text","text":"An integer type with a binary representation."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryInteger","title":"BinaryInteger","kind":"symbol","role":"symbol"}}}