{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int\/init(_:radix:)"},"sections":[],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int\/FixedWidthInteger-Implementations"]]},"abstract":[{"type":"text","text":"Creates a new integer value from the given string and radix."}],"metadata":{"roleHeading":"Initializer","title":"init(_:radix:)","externalID":"s:s17FixedWidthIntegerPsE_5radixxSgqd___SitcSyRd__lufc::SYNTHESIZED::s:Si","modules":[{"relatedModules":["Swift"],"name":"Compute"}],"role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"?<"},{"text":"S","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"S","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"radix","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":")"}],"extendedModule":"Swift","symbolKind":"init"},"kind":"symbol","primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"init","kind":"keyword"},{"kind":"text","text":"?<"},{"kind":"genericParameter","text":"S"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"text"},{"kind":"text","text":": "},{"text":"S","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"radix"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","preciseIdentifier":"s:Si"},{"text":" = 10) ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/StringProtocol","preciseIdentifier":"s:Sy","text":"StringProtocol"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"text","content":[{"type":"paragraph","inlineContent":[{"text":"The ASCII representation of a number in the radix passed as","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"radix"},{"type":"text","text":"."}]}]},{"name":"radix","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The radix, or base, to use for converting "},{"type":"codeVoice","code":"text"},{"type":"text","text":" to an integer"},{"type":"text","text":" "},{"type":"text","text":"value. "},{"type":"codeVoice","code":"radix"},{"type":"text","text":" must be in the range "},{"code":"2...36","type":"codeVoice"},{"type":"text","text":". The default is 10."}]}]}]},{"kind":"content","content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The string passed as "},{"type":"codeVoice","code":"text"},{"type":"text","text":" may begin with a plus or minus sign character"},{"text":" ","type":"text"},{"type":"text","text":"("},{"code":"+","type":"codeVoice"},{"text":" or ","type":"text"},{"code":"-","type":"codeVoice"},{"text":"), followed by one or more numeric digits (","type":"text"},{"code":"0-9","type":"codeVoice"},{"type":"text","text":") or letters"},{"type":"text","text":" "},{"text":"(","type":"text"},{"type":"codeVoice","code":"a-z"},{"text":" or ","type":"text"},{"code":"A-Z","type":"codeVoice"},{"text":"). Parsing of the string is case insensitive.","type":"text"}]},{"syntax":null,"code":["let x = Int(\"123\")","\/\/ x == 123","","let y = Int(\"-123\", radix: 8)","\/\/ y == -83","let y = Int(\"+123\", radix: 8)","\/\/ y == +83","","let z = Int(\"07b\", radix: 16)","\/\/ z == 123"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"If ","type":"text"},{"type":"codeVoice","code":"text"},{"type":"text","text":" is in an invalid format or contains characters that are out of"},{"text":" ","type":"text"},{"text":"bounds for the given ","type":"text"},{"type":"codeVoice","code":"radix"},{"text":", or if the value it denotes in the given","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"radix"},{"text":" is not representable, the result is ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":". For example, the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"following conversions result in "},{"type":"codeVoice","code":"nil"},{"text":":","type":"text"}]},{"type":"codeListing","code":["Int(\" 100\")                       \/\/ Includes whitespace","Int(\"21-50\")                      \/\/ Invalid format","Int(\"ff6600\")                     \/\/ Characters out of bounds","Int(\"zzzzzzzzzzzzz\", radix: 36)   \/\/ Out of range"],"syntax":null}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/int\/init(_:radix:)"]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Int/init(_:radix:)":{"kind":"symbol","abstract":[{"type":"text","text":"Creates a new integer value from the given string and radix."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int\/init(_:radix:)","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"?<","kind":"text"},{"text":"S","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"S","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"radix","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":")","kind":"text"}],"title":"init(_:radix:)","type":"topic","url":"\/documentation\/compute\/int\/init(_:radix:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/StringProtocol":{"url":"\/documentation\/compute\/stringprotocol","role":"symbol","abstract":[{"type":"text","text":"A type that can represent a string as a collection of characters."}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/StringProtocol","title":"StringProtocol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StringProtocol","kind":"identifier"}],"navigatorTitle":[{"text":"StringProtocol","kind":"identifier"}],"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int/FixedWidthInteger-Implementations":{"url":"\/documentation\/compute\/int\/fixedwidthinteger-implementations","type":"topic","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int\/FixedWidthInteger-Implementations","title":"FixedWidthInteger Implementations","kind":"article","role":"collectionGroup"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","abstract":[{"type":"text","text":"A signed integer value type."}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Int","kind":"identifier"}],"navigatorTitle":[{"text":"Int","kind":"identifier"}],"title":"Int","url":"\/documentation\/compute\/int","kind":"symbol"}}}