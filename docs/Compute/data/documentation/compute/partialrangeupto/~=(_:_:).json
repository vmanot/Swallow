{"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/PartialRangeUpTo","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/PartialRangeUpTo\/RangeExpression-Implementations"]]},"metadata":{"role":"symbol","modules":[{"name":"Compute","relatedModules":["Swift"]}],"symbolKind":"op","title":"~=(_:_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"~="},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Bound","kind":"typeIdentifier","preciseIdentifier":"s:SX5BoundQa"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"extendedModule":"Swift","externalID":"s:SXsE2teoiySbx_5BoundQztFZ::SYNTHESIZED::s:s16PartialRangeUpToV","roleHeading":"Operator"},"sections":[],"abstract":[{"type":"text","text":"Returns a Boolean value indicating whether a value is included in a"},{"text":" ","type":"text"},{"text":"range.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"~="},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"text":"pattern","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"internalParam","text":"value"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RangeExpression\/Bound","preciseIdentifier":"s:SX5BoundQa","text":"Bound"},{"kind":"text","text":") -> "},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bool","kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"name":"pattern","content":[{"type":"paragraph","inlineContent":[{"text":"A range.","type":"text"}]}]}]},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"You can use the pattern-matching operator (","type":"text"},{"type":"codeVoice","code":"~="},{"type":"text","text":") to test whether a value"},{"text":" ","type":"text"},{"type":"text","text":"is included in a range. The pattern-matching operator is used"},{"text":" ","type":"text"},{"type":"text","text":"internally in "},{"type":"codeVoice","code":"case"},{"text":" statements for pattern matching. The following","type":"text"},{"type":"text","text":" "},{"type":"text","text":"example uses the "},{"type":"codeVoice","code":"~="},{"text":" operator to test whether an integer is included in","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"a range of single-digit numbers:"}]},{"type":"codeListing","syntax":null,"code":["let chosenNumber = 3","if 0..<10 ~= chosenNumber {","    print(\"\\(chosenNumber) is a single digit.\")","}","\/\/ Prints \"3 is a single digit.\""]}]}],"variants":[{"paths":["\/documentation\/compute\/partialrangeupto\/~=(_:_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/PartialRangeUpTo\/~=(_:_:)","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"symbol","references":{"doc://com.swallow.documentation.Compute/documentation/Compute/PartialRangeUpTo/~=(_:_:)":{"kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"~="},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:SX5BoundQa","text":"Bound","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"url":"\/documentation\/compute\/partialrangeupto\/~=(_:_:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/PartialRangeUpTo\/~=(_:_:)","abstract":[{"text":"Returns a Boolean value indicating whether a value is included in a","type":"text"},{"type":"text","text":" "},{"type":"text","text":"range."}],"title":"~=(_:_:)","role":"symbol","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/Bool":{"url":"\/documentation\/compute\/bool","role":"symbol","title":"Bool","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Bool","kind":"identifier"}],"abstract":[{"type":"text","text":"A value type whose instances are either "},{"type":"codeVoice","code":"true"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"false"},{"text":".","type":"text"}],"navigatorTitle":[{"text":"Bool","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bool","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/PartialRangeUpTo/RangeExpression-Implementations":{"url":"\/documentation\/compute\/partialrangeupto\/rangeexpression-implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/PartialRangeUpTo\/RangeExpression-Implementations","type":"topic","role":"collectionGroup","abstract":[],"title":"RangeExpression Implementations","kind":"article"},"doc://com.swallow.documentation.Compute/documentation/Compute/PartialRangeUpTo":{"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"PartialRangeUpTo","kind":"identifier"}],"type":"topic","url":"\/documentation\/compute\/partialrangeupto","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/PartialRangeUpTo","abstract":[{"type":"text","text":"A partial half-open interval up to, but not including, an upper bound."}],"navigatorTitle":[{"text":"PartialRangeUpTo","kind":"identifier"}],"title":"PartialRangeUpTo"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/RangeExpression/Bound":{"role":"symbol","type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RangeExpression\/Bound","title":"Bound","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"Bound"},{"kind":"text","text":" : "},{"text":"Comparable","kind":"typeIdentifier","preciseIdentifier":"s:SL"}],"url":"\/documentation\/compute\/rangeexpression\/bound","required":true,"abstract":[{"text":"The type for which the expression describes a range.","type":"text"}],"kind":"symbol"}}}