{"sections":[],"kind":"symbol","schemaVersion":{"minor":3,"patch":0,"major":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/partialrangeupto\/encode(to:)"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"encode","kind":"identifier"},{"text":"(","kind":"text"},{"text":"to","kind":"externalParam"},{"kind":"text","text":" "},{"text":"encoder","kind":"internalParam"},{"text":": any ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s7EncoderP","text":"Encoder","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Encoder"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}]}]},{"kind":"parameters","parameters":[{"name":"encoder","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The encoder to write data to."}]}]}]},{"content":[{"text":"Discussion","anchor":"discussion","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"text":"If the value fails to encode anything, ","type":"text"},{"code":"encoder","type":"codeVoice"},{"text":" will encode an empty","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"keyed container in its place."}]},{"inlineContent":[{"text":"This function throws an error if any values are invalid for the given","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"encoderâ€™s format."}],"type":"paragraph"}],"kind":"content"}],"metadata":{"symbolKind":"method","roleHeading":"Instance Method","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Bound","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Comparable"},{"text":" and ","type":"text"},{"code":"Encodable","type":"codeVoice"},{"type":"text","text":"."}]},"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"encode","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"to"},{"kind":"text","text":": any "},{"preciseIdentifier":"s:s7EncoderP","text":"Encoder","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"}],"externalID":"s:s16PartialRangeUpToVsSERzrlE6encode2toys7Encoder_p_tKF","title":"encode(to:)","extendedModule":"Swift","role":"symbol","modules":[{"relatedModules":["Swift"],"name":"Compute"}]},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/PartialRangeUpTo","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/PartialRangeUpTo\/Encodable-Implementations"]]},"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/PartialRangeUpTo\/encode(to:)","interfaceLanguage":"swift"},"abstract":[{"text":"Encodes this value into the given encoder.","type":"text"}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Encoder":{"title":"Encoder","url":"\/documentation\/compute\/encoder","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Encoder","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Encoder","kind":"identifier"}],"abstract":[{"text":"A type that can encode values into a native format for external","type":"text"},{"type":"text","text":" "},{"type":"text","text":"representation."}],"navigatorTitle":[{"text":"Encoder","kind":"identifier"}],"role":"symbol","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/PartialRangeUpTo/Encodable-Implementations":{"url":"\/documentation\/compute\/partialrangeupto\/encodable-implementations","kind":"article","role":"collectionGroup","abstract":[],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/PartialRangeUpTo\/Encodable-Implementations","title":"Encodable Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/PartialRangeUpTo/encode(to:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"encode"},{"text":"(","kind":"text"},{"text":"to","kind":"externalParam"},{"kind":"text","text":": any "},{"kind":"typeIdentifier","text":"Encoder","preciseIdentifier":"s:s7EncoderP"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"kind":"symbol","title":"encode(to:)","type":"topic","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Bound"},{"text":" conforms to ","type":"text"},{"code":"Comparable","type":"codeVoice"},{"type":"text","text":" and "},{"code":"Encodable","type":"codeVoice"},{"text":".","type":"text"}]},"url":"\/documentation\/compute\/partialrangeupto\/encode(to:)","abstract":[{"text":"Encodes this value into the given encoder.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/PartialRangeUpTo\/encode(to:)","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/PartialRangeUpTo":{"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"PartialRangeUpTo","kind":"identifier"}],"type":"topic","url":"\/documentation\/compute\/partialrangeupto","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/PartialRangeUpTo","abstract":[{"type":"text","text":"A partial half-open interval up to, but not including, an upper bound."}],"navigatorTitle":[{"text":"PartialRangeUpTo","kind":"identifier"}],"title":"PartialRangeUpTo"}}}