{"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeRawBufferPointer\/deallocate()","interfaceLanguage":"swift"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeRawBufferPointer"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"deallocate"},{"kind":"text","text":"()"}],"languages":["swift"],"platforms":["macOS"]}]},{"content":[{"level":2,"text":"Discussion","anchor":"discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This buffer pointer’s "},{"type":"codeVoice","code":"baseAddress"},{"type":"text","text":" must be "},{"type":"codeVoice","code":"nil"},{"text":" or a pointer to a memory","type":"text"},{"text":" ","type":"text"},{"text":"block previously returned by a Swift allocation method. If ","type":"text"},{"code":"baseAddress","type":"codeVoice"},{"text":" is","type":"text"},{"type":"text","text":" "},{"code":"nil","type":"codeVoice"},{"type":"text","text":", this function does nothing. Otherwise, the memory must not be initialized"},{"text":" ","type":"text"},{"type":"text","text":"or "},{"type":"codeVoice","code":"Pointee"},{"text":" must be a trivial type. This buffer pointer’s byte ","type":"text"},{"type":"codeVoice","code":"count"},{"type":"text","text":" must"},{"type":"text","text":" "},{"type":"text","text":"be equal to the originally allocated size of the memory block."}]}],"kind":"content"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"metadata":{"externalID":"s:SW10deallocateyyF","extendedModule":"Swift","title":"deallocate()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"deallocate","kind":"identifier"},{"text":"()","kind":"text"}],"modules":[{"name":"Compute","relatedModules":["Swift"]}],"roleHeading":"Instance Method","role":"symbol","symbolKind":"method"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/unsaferawbufferpointer\/deallocate()"]}],"sections":[],"abstract":[{"type":"text","text":"Deallocates the memory block previously allocated at this buffer pointer’s"},{"type":"text","text":" "},{"type":"text","text":"base address."}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeRawBufferPointer":{"title":"UnsafeRawBufferPointer","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeRawBufferPointer","kind":"symbol","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"UnsafeRawBufferPointer","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"UnsafeRawBufferPointer"}],"url":"\/documentation\/compute\/unsaferawbufferpointer","abstract":[{"type":"text","text":"A  nonowning collection interface to the bytes in a"},{"text":" ","type":"text"},{"type":"text","text":"region of memory."}]},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeRawBufferPointer/deallocate()":{"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"deallocate","kind":"identifier"},{"kind":"text","text":"()"}],"type":"topic","abstract":[{"text":"Deallocates the memory block previously allocated at this buffer pointer’s","type":"text"},{"text":" ","type":"text"},{"text":"base address.","type":"text"}],"kind":"symbol","url":"\/documentation\/compute\/unsaferawbufferpointer\/deallocate()","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeRawBufferPointer\/deallocate()","title":"deallocate()"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"}}}