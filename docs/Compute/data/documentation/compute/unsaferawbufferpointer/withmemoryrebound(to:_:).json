{"kind":"symbol","sections":[],"variants":[{"paths":["\/documentation\/compute\/unsaferawbufferpointer\/withmemoryrebound(to:_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"withMemoryRebound"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"E"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Result"},{"kind":"text","text":">("},{"kind":"externalParam","text":"to"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"type"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":".Type, ","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"text":"body","kind":"internalParam"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeBufferPointer","text":"UnsafeBufferPointer","preciseIdentifier":"s:SR"},{"kind":"text","text":"<"},{"text":"T","kind":"typeIdentifier"},{"text":">) ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"E"},{"text":") -> ","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"E"},{"text":") -> ","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":" ","kind":"text"},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"E"},{"kind":"text","text":" : "},{"text":"Error","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Error","preciseIdentifier":"s:s5ErrorP"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":" : ~Copyable, "},{"text":"Result","kind":"typeIdentifier"},{"kind":"text","text":" : ~Copyable"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"type","content":[{"inlineContent":[{"type":"text","text":"The type to temporarily bind the memory referenced by this"},{"text":" ","type":"text"},{"text":"buffer.","type":"text"}],"type":"paragraph"}]},{"name":"body","content":[{"type":"paragraph","inlineContent":[{"text":"A closure that takes a typed pointer to the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"same memory as this pointer, only bound to type "},{"code":"T","type":"codeVoice"},{"type":"text","text":". The closure’s"},{"type":"text","text":" "},{"text":"pointer argument is valid only for the duration of the closure’s","type":"text"},{"type":"text","text":" "},{"type":"text","text":"execution. If "},{"type":"codeVoice","code":"body"},{"type":"text","text":" has a return value, that value is also used as"},{"text":" ","type":"text"},{"text":"the return value for the ","type":"text"},{"type":"codeVoice","code":"withMemoryRebound(to:capacity:_:)"},{"type":"text","text":" method."}]}]}]},{"content":[{"level":2,"type":"heading","text":"Return Value","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The return value, if any, of the "},{"type":"codeVoice","code":"body"},{"type":"text","text":" closure parameter."}]}],"kind":"content"},{"content":[{"level":2,"text":"Discussion","type":"heading","anchor":"discussion"},{"inlineContent":[{"text":"Use this method when you have a buffer to raw memory and you need","type":"text"},{"text":" ","type":"text"},{"text":"to access that memory as instances of a given type ","type":"text"},{"type":"codeVoice","code":"T"},{"type":"text","text":". Accessing"},{"text":" ","type":"text"},{"text":"memory as a type ","type":"text"},{"type":"codeVoice","code":"T"},{"type":"text","text":" requires that the memory be bound to that type."},{"text":" ","type":"text"},{"text":"A memory location may only be bound to one type at a time, so accessing","type":"text"},{"type":"text","text":" "},{"text":"the same memory as an unrelated type without first rebinding the memory","type":"text"},{"type":"text","text":" "},{"text":"is undefined.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"Any instance of ","type":"text"},{"type":"codeVoice","code":"T"},{"text":" within the re-bound region may be initialized or","type":"text"},{"text":" ","type":"text"},{"text":"uninitialized. The memory underlying any individual instance of ","type":"text"},{"type":"codeVoice","code":"T"},{"type":"text","text":" "},{"text":"must have the same initialization state (i.e.  initialized or","type":"text"},{"type":"text","text":" "},{"type":"text","text":"uninitialized.) Accessing a "},{"code":"T","type":"codeVoice"},{"type":"text","text":" whose underlying memory"},{"type":"text","text":" "},{"text":"is in a mixed initialization state shall be undefined behaviour.","type":"text"}]},{"inlineContent":[{"type":"text","text":"If the byte count of the original buffer is not a multiple of"},{"type":"text","text":" "},{"text":"the stride of ","type":"text"},{"type":"codeVoice","code":"T"},{"type":"text","text":", then the re-bound buffer is shorter"},{"type":"text","text":" "},{"type":"text","text":"than the original buffer."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"After executing "},{"code":"body","type":"codeVoice"},{"text":", this method rebinds memory back to its original","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"binding state. This can be unbound memory, or bound to a different type."}]},{"type":"aside","name":"Note","content":[{"type":"paragraph","inlineContent":[{"text":"The buffer’s base address must match the","type":"text"},{"type":"text","text":" "},{"text":"alignment of ","type":"text"},{"type":"codeVoice","code":"T"},{"type":"text","text":" (as reported by "},{"code":"MemoryLayout<T>.alignment","type":"codeVoice"},{"type":"text","text":")."},{"type":"text","text":" "},{"type":"text","text":"That is, "},{"code":"Int(bitPattern: self.baseAddress) % MemoryLayout<T>.alignment","type":"codeVoice"},{"text":" ","type":"text"},{"text":"must equal zero.","type":"text"}]}],"style":"note"},{"name":"Note","type":"aside","style":"note","content":[{"inlineContent":[{"type":"text","text":"A raw buffer may represent memory that has been bound to a type."},{"text":" ","type":"text"},{"text":"If that is the case, then ","type":"text"},{"code":"T","type":"codeVoice"},{"type":"text","text":" must be layout compatible with the"},{"text":" ","type":"text"},{"type":"text","text":"type to which the memory has been bound. This requirement does not"},{"text":" ","type":"text"},{"type":"text","text":"apply if the raw buffer represents memory that has not been bound"},{"text":" ","type":"text"},{"text":"to any type.","type":"text"}],"type":"paragraph"}]}],"kind":"content"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeRawBufferPointer"]]},"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeRawBufferPointer\/withMemoryRebound(to:_:)","interfaceLanguage":"swift"},"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"withMemoryRebound","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"E"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"Result"},{"text":">(","kind":"text"},{"text":"to","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":".Type, ("},{"text":"UnsafeBufferPointer","kind":"typeIdentifier","preciseIdentifier":"s:SR"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">) "},{"text":"throws","kind":"keyword"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"E"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Result"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":"(","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Result","kind":"typeIdentifier"}],"role":"symbol","externalID":"s:SW17withMemoryRebound2to_q0_xm_q0_SRyxGq_YKXEtq_YKs5ErrorR_Ri_zRi_0_r1_lF","extendedModule":"Swift","roleHeading":"Instance Method","modules":[{"name":"Compute","relatedModules":["Swift"]}],"title":"withMemoryRebound(to:_:)","symbolKind":"method"},"abstract":[{"text":"Executes the given closure while temporarily binding the buffer to","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"instances of type "},{"type":"codeVoice","code":"T"},{"type":"text","text":"."}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Error":{"url":"\/documentation\/compute\/error","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Error"}],"navigatorTitle":[{"text":"Error","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Error","type":"topic","role":"symbol","abstract":[{"type":"text","text":"A type representing an error value that can be thrown."}],"kind":"symbol","title":"Error"},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeRawBufferPointer":{"title":"UnsafeRawBufferPointer","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeRawBufferPointer","kind":"symbol","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"UnsafeRawBufferPointer","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"UnsafeRawBufferPointer"}],"url":"\/documentation\/compute\/unsaferawbufferpointer","abstract":[{"type":"text","text":"A  nonowning collection interface to the bytes in a"},{"text":" ","type":"text"},{"type":"text","text":"region of memory."}]},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeRawBufferPointer/withMemoryRebound(to:_:)":{"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"withMemoryRebound"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":", "},{"text":"E","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Result","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"to","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"text":".Type, (","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SR","text":"UnsafeBufferPointer"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">) "},{"text":"throws","kind":"keyword"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"E"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Result"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":"(","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Result","kind":"typeIdentifier"}],"type":"topic","abstract":[{"type":"text","text":"Executes the given closure while temporarily binding the buffer to"},{"text":" ","type":"text"},{"text":"instances of type ","type":"text"},{"code":"T","type":"codeVoice"},{"text":".","type":"text"}],"kind":"symbol","url":"\/documentation\/compute\/unsaferawbufferpointer\/withmemoryrebound(to:_:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeRawBufferPointer\/withMemoryRebound(to:_:)","title":"withMemoryRebound(to:_:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeBufferPointer":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeBufferPointer","abstract":[{"type":"text","text":"A nonowning collection interface to a buffer of"},{"type":"text","text":" "},{"text":"elements stored contiguously in memory.","type":"text"}],"role":"symbol","type":"topic","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UnsafeBufferPointer","kind":"identifier"}],"title":"UnsafeBufferPointer","navigatorTitle":[{"kind":"identifier","text":"UnsafeBufferPointer"}],"url":"\/documentation\/compute\/unsafebufferpointer"}}}