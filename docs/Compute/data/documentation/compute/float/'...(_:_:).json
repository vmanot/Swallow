{"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float\/...(_:_:)","interfaceLanguage":"swift"},"sections":[],"schemaVersion":{"minor":3,"major":0,"patch":0},"abstract":[{"text":"Returns a closed range that contains both of its bounds.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"..."},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"minimum","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"kind":"internalParam","text":"maximum"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"ClosedRange","kind":"typeIdentifier","preciseIdentifier":"s:SN","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ClosedRange"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The lower bound for the range."}]}],"name":"minimum"},{"content":[{"inlineContent":[{"text":"The upper bound for the range.","type":"text"}],"type":"paragraph"}],"name":"maximum"}]},{"content":[{"text":"Discussion","level":2,"anchor":"discussion","type":"heading"},{"inlineContent":[{"type":"text","text":"Use the closed range operator ("},{"type":"codeVoice","code":"..."},{"type":"text","text":") to create a closed range of any type"},{"type":"text","text":" "},{"text":"that conforms to the ","type":"text"},{"type":"codeVoice","code":"Comparable"},{"type":"text","text":" protocol. This example creates a"},{"text":" ","type":"text"},{"code":"ClosedRange<Character>","type":"codeVoice"},{"type":"text","text":" from “a” up to, and including, “z”."}],"type":"paragraph"},{"type":"codeListing","code":["let lowercase = \"a\"...\"z\"","print(lowercase.contains(\"z\"))","\/\/ Prints \"true\""],"syntax":null},{"style":"note","content":[{"inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"minimum <= maximum"},{"type":"text","text":"."}],"type":"paragraph"}],"name":"Precondition","type":"aside"}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/float\/'...(_:_:)"]}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float\/Comparable-Implementations"]]},"kind":"symbol","metadata":{"symbolKind":"op","externalID":"s:SLsE3zzzoiySNyxGx_xtFZ::SYNTHESIZED::s:Sf","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"...","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"text":"ClosedRange","kind":"typeIdentifier","preciseIdentifier":"s:SN"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"extendedModule":"Swift","role":"symbol","roleHeading":"Operator","title":"...(_:_:)","modules":[{"name":"Compute","relatedModules":["Swift"]}]},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Float":{"type":"topic","abstract":[{"text":"A single-precision, floating-point value type.","type":"text"}],"url":"\/documentation\/compute\/float","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Float"}],"navigatorTitle":[{"text":"Float","kind":"identifier"}],"title":"Float"},"doc://com.swallow.documentation.Compute/documentation/Compute/ClosedRange":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ClosedRange","kind":"identifier"}],"role":"symbol","title":"ClosedRange","url":"\/documentation\/compute\/closedrange","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ClosedRange","abstract":[{"text":"An interval from a lower bound up to, and including, an upper bound.","type":"text"}],"type":"topic","navigatorTitle":[{"text":"ClosedRange","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Float/Comparable-Implementations":{"role":"collectionGroup","abstract":[],"title":"Comparable Implementations","kind":"article","type":"topic","url":"\/documentation\/compute\/float\/comparable-implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float\/Comparable-Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Float/...(_:_:)":{"role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"...","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:SN","kind":"typeIdentifier","text":"ClosedRange"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Returns a closed range that contains both of its bounds."}],"url":"\/documentation\/compute\/float\/'...(_:_:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float\/...(_:_:)","type":"topic","title":"...(_:_:)","kind":"symbol"}}}