{"metadata":{"symbolKind":"property","modules":[{"relatedModules":["Swift"],"name":"Compute"}],"role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isNaN"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"title":"isNaN","externalID":"s:Sf5isNaNSbvp","extendedModule":"Swift","roleHeading":"Instance Property"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float\/isNaN"},"variants":[{"paths":["\/documentation\/compute\/float\/isnan"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float\/FloatingPoint-Implementations"]]},"kind":"symbol","sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"isNaN","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bool"},{"kind":"text","text":" { "},{"kind":"keyword","text":"get"},{"text":" }","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Because NaN is not equal to any value, including NaN, use this property"},{"type":"text","text":" "},{"type":"text","text":"instead of the equal-to operator ("},{"type":"codeVoice","code":"=="},{"text":") or not-equal-to operator (","type":"text"},{"code":"!=","type":"codeVoice"},{"text":")","type":"text"},{"type":"text","text":" "},{"text":"to test whether a value is or is not NaN. For example:","type":"text"}]},{"code":["let x = 0.0","let y = x * .infinity","\/\/ y is a NaN","","\/\/ Comparing with the equal-to operator never returns 'true'","print(x == Double.nan)","\/\/ Prints \"false\"","print(y == Double.nan)","\/\/ Prints \"false\"","","\/\/ Test with the 'isNaN' property instead","print(x.isNaN)","\/\/ Prints \"false\"","print(y.isNaN)","\/\/ Prints \"true\""],"type":"codeListing","syntax":null},{"type":"paragraph","inlineContent":[{"type":"text","text":"This property is "},{"code":"true","type":"codeVoice"},{"text":" for both quiet and signaling NaNs.","type":"text"}]}]}],"abstract":[{"type":"text","text":"A Boolean value indicating whether the instance is NaN (“not a number”)."}],"schemaVersion":{"patch":0,"minor":3,"major":0},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Float/FloatingPoint-Implementations":{"url":"\/documentation\/compute\/float\/floatingpoint-implementations","kind":"article","type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float\/FloatingPoint-Implementations","role":"collectionGroup","abstract":[],"title":"FloatingPoint Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/Float/isNaN":{"kind":"symbol","abstract":[{"text":"A Boolean value indicating whether the instance is NaN (“not a number”).","type":"text"}],"role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"isNaN"},{"kind":"text","text":": "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float\/isNaN","title":"isNaN","url":"\/documentation\/compute\/float\/isnan"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Float":{"type":"topic","abstract":[{"text":"A single-precision, floating-point value type.","type":"text"}],"url":"\/documentation\/compute\/float","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Float"}],"navigatorTitle":[{"text":"Float","kind":"identifier"}],"title":"Float"},"doc://com.swallow.documentation.Compute/documentation/Compute/Bool":{"url":"\/documentation\/compute\/bool","role":"symbol","title":"Bool","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Bool","kind":"identifier"}],"abstract":[{"type":"text","text":"A value type whose instances are either "},{"type":"codeVoice","code":"true"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"false"},{"text":".","type":"text"}],"navigatorTitle":[{"text":"Bool","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bool","kind":"symbol"}}}