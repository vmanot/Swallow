{"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"@frozen","kind":"attribute"},{"text":" ","kind":"text"},{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"SIMD32Storage","kind":"identifier"}]}]}],"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/float\/simd32storage"]}],"metadata":{"externalID":"s:Sf13SIMD32StorageV","roleHeading":"Structure","extendedModule":"Swift","modules":[{"name":"Compute","relatedModules":["Swift"]}],"title":"Float.SIMD32Storage","symbolKind":"struct","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SIMD32Storage"}],"navigatorTitle":[{"text":"SIMD32Storage","kind":"identifier"}]},"relationshipsSections":[{"kind":"relationships","title":"Conforms To","type":"conformsTo","identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BitwiseCopyable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMDStorage","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sendable"]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float\/SIMD32Storage","interfaceLanguage":"swift"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float\/SIMDScalar-Implementations"]]},"abstract":[{"type":"text","text":"Storage for a vector of 32 floating-point values."}],"topicSections":[{"anchor":"Initializers","identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float\/SIMD32Storage\/init()"],"generated":true,"title":"Initializers"},{"anchor":"Instance-Properties","identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float\/SIMD32Storage\/scalarCount"],"generated":true,"title":"Instance Properties"},{"generated":true,"identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float\/SIMD32Storage\/subscript(_:)"],"title":"Subscripts","anchor":"Subscripts"},{"anchor":"Type-Aliases","title":"Type Aliases","identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float\/SIMD32Storage\/Scalar"],"generated":true}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Sendable":{"kind":"symbol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"Sendable","kind":"identifier"}],"title":"Sendable","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sendable","abstract":[],"url":"\/documentation\/compute\/sendable","role":"symbol","navigatorTitle":[{"text":"Sendable","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Float/SIMD32Storage/init()":{"url":"\/documentation\/compute\/float\/simd32storage\/init()","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"type":"topic","role":"symbol","title":"init()","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float\/SIMD32Storage\/init()","kind":"symbol","abstract":[{"type":"text","text":"Creates a vector with zero in all lanes."}]},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Float/SIMD32Storage/Scalar":{"role":"symbol","navigatorTitle":[{"text":"Scalar","kind":"identifier"}],"url":"\/documentation\/compute\/float\/simd32storage\/scalar","abstract":[],"title":"Float.SIMD32Storage.Scalar","kind":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Scalar","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float\/SIMD32Storage\/Scalar"},"doc://com.swallow.documentation.Compute/documentation/Compute/BitwiseCopyable":{"title":"BitwiseCopyable","abstract":[],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BitwiseCopyable","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BitwiseCopyable","url":"\/documentation\/compute\/bitwisecopyable","navigatorTitle":[{"kind":"identifier","text":"BitwiseCopyable"}],"kind":"symbol","role":"symbol","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/Float/SIMD32Storage":{"navigatorTitle":[{"kind":"identifier","text":"SIMD32Storage"}],"url":"\/documentation\/compute\/float\/simd32storage","abstract":[{"text":"Storage for a vector of 32 floating-point values.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float\/SIMD32Storage","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SIMD32Storage","kind":"identifier"}],"title":"Float.SIMD32Storage","type":"topic","kind":"symbol","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Float/SIMD32Storage/scalarCount":{"role":"symbol","url":"\/documentation\/compute\/float\/simd32storage\/scalarcount","abstract":[{"type":"text","text":"The number of scalars, or elements, in the vector."}],"title":"scalarCount","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"scalarCount","kind":"identifier"},{"kind":"text","text":": "},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float\/SIMD32Storage\/scalarCount"},"doc://com.swallow.documentation.Compute/documentation/Compute/Float":{"type":"topic","abstract":[{"text":"A single-precision, floating-point value type.","type":"text"}],"url":"\/documentation\/compute\/float","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Float"}],"navigatorTitle":[{"text":"Float","kind":"identifier"}],"title":"Float"},"doc://com.swallow.documentation.Compute/documentation/Compute/Float/SIMD32Storage/subscript(_:)":{"url":"\/documentation\/compute\/float\/simd32storage\/subscript(_:)","abstract":[{"text":"Accesses the element at the specified index.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float\/SIMD32Storage\/subscript(_:)","fragments":[{"kind":"keyword","text":"subscript"},{"text":"(","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sf","text":"Float","kind":"typeIdentifier"}],"title":"subscript(_:)","type":"topic","kind":"symbol","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMDStorage":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMDStorage","kind":"symbol","abstract":[{"text":"A type that can function as storage for a SIMD vector type.","type":"text"}],"role":"symbol","title":"SIMDStorage","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"SIMDStorage","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"SIMDStorage"}],"url":"\/documentation\/compute\/simdstorage","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/Float/SIMDScalar-Implementations":{"role":"collectionGroup","abstract":[],"kind":"article","url":"\/documentation\/compute\/float\/simdscalar-implementations","title":"SIMDScalar Implementations","type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float\/SIMDScalar-Implementations"}}}