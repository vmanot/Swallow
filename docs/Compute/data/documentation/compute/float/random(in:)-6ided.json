{"metadata":{"roleHeading":"Type Method","title":"random(in:)","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"random"},{"kind":"text","text":"("},{"text":"in","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sn","kind":"typeIdentifier","text":"Range"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":">) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"modules":[{"name":"Compute","relatedModules":["Swift"]}],"role":"symbol","symbolKind":"method","externalID":"s:SBss17FixedWidthInteger14RawSignificandRpzrlE6random2inxSnyxG_tFZ::SYNTHESIZED::s:Sf","conformance":{"constraints":[{"type":"codeVoice","code":"RawSignificand"},{"type":"text","text":" conforms to "},{"code":"FixedWidthInteger","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"extendedModule":"Swift"},"kind":"symbol","schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"abstract":[{"text":"Returns a random value within the specified range.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"random"},{"text":"(","kind":"text"},{"text":"in","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"range","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Range","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Range","preciseIdentifier":"s:Sn"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Self"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"name":"range","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The range in which to create a random value."},{"type":"text","text":" "},{"type":"codeVoice","code":"range"},{"text":" must be finite and non-empty.","type":"text"}]}]}]},{"kind":"content","content":[{"level":2,"text":"Return Value","type":"heading","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"text":"A random value within the bounds of ","type":"text"},{"type":"codeVoice","code":"range"},{"text":".","type":"text"}]}]},{"kind":"content","content":[{"level":2,"text":"Discussion","type":"heading","anchor":"discussion"},{"inlineContent":[{"text":"Use this method to generate a floating-point value within a specific","type":"text"},{"type":"text","text":" "},{"type":"text","text":"range. This example creates three new values in the range"},{"type":"text","text":" "},{"code":"10.0 ..< 20.0","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"},{"type":"codeListing","code":["for _ in 1...3 {","    print(Double.random(in: 10.0 ..< 20.0))","}","\/\/ Prints \"18.1900709259179\"","\/\/ Prints \"14.2286325689993\"","\/\/ Prints \"13.1485686260762\""],"syntax":null},{"inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"random()"},{"text":" static method chooses a random value from a continuous","type":"text"},{"type":"text","text":" "},{"text":"uniform distribution in ","type":"text"},{"type":"codeVoice","code":"range"},{"type":"text","text":", and then converts that value to the"},{"text":" ","type":"text"},{"type":"text","text":"nearest representable value in this type. Depending on the size and span"},{"text":" ","type":"text"},{"text":"of ","type":"text"},{"type":"codeVoice","code":"range"},{"text":", some concrete values may be represented more frequently than","type":"text"},{"text":" ","type":"text"},{"text":"others.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method is equivalent to calling "},{"type":"codeVoice","code":"random(in:using:)"},{"text":", passing in the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"systemâ€™s default random generator."}]}]}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float\/BinaryFloatingPoint-Implementations"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float\/random(in:)-6ided"},"variants":[{"paths":["\/documentation\/compute\/float\/random(in:)-6ided"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Range":{"kind":"symbol","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Range","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Range","url":"\/documentation\/compute\/range","abstract":[{"text":"A half-open interval from a lower bound up to, but not including, an upper","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"bound."}],"navigatorTitle":[{"text":"Range","kind":"identifier"}],"title":"Range"},"doc://com.swallow.documentation.Compute/documentation/Compute/Float/random(in:)-6ided":{"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"random","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"in"},{"text":": ","kind":"text"},{"text":"Range","kind":"typeIdentifier","preciseIdentifier":"s:Sn"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":">) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"abstract":[{"text":"Returns a random value within the specified range.","type":"text"}],"type":"topic","url":"\/documentation\/compute\/float\/random(in:)-6ided","title":"random(in:)","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"RawSignificand","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"FixedWidthInteger","type":"codeVoice"},{"type":"text","text":"."}]},"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float\/random(in:)-6ided"},"doc://com.swallow.documentation.Compute/documentation/Compute/Float/BinaryFloatingPoint-Implementations":{"abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float\/BinaryFloatingPoint-Implementations","title":"BinaryFloatingPoint Implementations","url":"\/documentation\/compute\/float\/binaryfloatingpoint-implementations","role":"collectionGroup","kind":"article","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/Float":{"type":"topic","abstract":[{"text":"A single-precision, floating-point value type.","type":"text"}],"url":"\/documentation\/compute\/float","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Float"}],"navigatorTitle":[{"text":"Float","kind":"identifier"}],"title":"Float"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"}}}