{"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"distance","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"from"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"start"},{"text":": ","kind":"text"},{"text":"Substring","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Substring","preciseIdentifier":"s:Ss","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Index","preciseIdentifier":"s:Ss5Indexa","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Substring\/Index","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"to"},{"text":" ","kind":"text"},{"text":"end","kind":"internalParam"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Substring","text":"Substring","kind":"typeIdentifier","preciseIdentifier":"s:Ss"},{"kind":"text","text":"."},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Substring\/Index","text":"Index","preciseIdentifier":"s:Ss5Indexa","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Int","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"}],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"text":"A valid index of the collection.","type":"text"}],"type":"paragraph"}],"name":"start"},{"name":"end","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Another valid index of the collection. If "},{"type":"codeVoice","code":"end"},{"text":" is equal to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"start"},{"text":", the result is zero.","type":"text"}]}]}]},{"kind":"content","content":[{"anchor":"return-value","level":2,"text":"Return Value","type":"heading"},{"inlineContent":[{"type":"text","text":"The distance between "},{"code":"start","type":"codeVoice"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"end"},{"text":". The result can be","type":"text"},{"type":"text","text":" "},{"text":"negative only if the collection conforms to the","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"BidirectionalCollection"},{"type":"text","text":" protocol."}],"type":"paragraph"}]},{"kind":"content","content":[{"level":2,"type":"heading","anchor":"discussion","text":"Discussion"},{"inlineContent":[{"text":"Unless the collection conforms to the ","type":"text"},{"code":"BidirectionalCollection","type":"codeVoice"},{"type":"text","text":" protocol,"},{"text":" ","type":"text"},{"type":"codeVoice","code":"start"},{"text":" must be less than or equal to ","type":"text"},{"code":"end","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"},{"content":[{"type":"paragraph","inlineContent":[{"text":"O(1) if the collection conforms to","type":"text"},{"type":"text","text":" "},{"code":"RandomAccessCollection","type":"codeVoice"},{"text":"; otherwise, O(","type":"text"},{"inlineContent":[{"type":"text","text":"k"}],"type":"emphasis"},{"text":"), where ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"k"}]},{"type":"text","text":" is the"},{"type":"text","text":" "},{"text":"resulting distance.","type":"text"}]}],"name":"Complexity","type":"aside","style":"note"}]}],"variants":[{"paths":["\/documentation\/compute\/substring\/distance(from:to:)"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"metadata":{"role":"symbol","roleHeading":"Instance Method","title":"distance(from:to:)","extendedModule":"Swift","externalID":"s:Ss8distance4from2toSiSS5IndexV_AEtF","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"distance"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"from"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Ss","text":"Substring"},{"text":".","kind":"text"},{"text":"Index","kind":"typeIdentifier","preciseIdentifier":"s:Ss5Indexa"},{"text":", ","kind":"text"},{"text":"to","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Substring","preciseIdentifier":"s:Ss"},{"kind":"text","text":"."},{"preciseIdentifier":"s:Ss5Indexa","kind":"typeIdentifier","text":"Index"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"}],"modules":[{"name":"Compute","relatedModules":["Swift"]}],"symbolKind":"method"},"abstract":[{"type":"text","text":"Returns the distance between two indices."}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Substring","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Substring\/BidirectionalCollection-Implementations"]]},"sections":[],"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Substring\/distance(from:to:)"},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Substring/Index":{"role":"symbol","type":"topic","title":"Substring.Index","abstract":[{"text":"A type that represents a position in the collection.","type":"text"}],"fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"text":"Index","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Substring\/Index","navigatorTitle":[{"kind":"identifier","text":"Index"}],"kind":"symbol","url":"\/documentation\/compute\/substring\/index"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","abstract":[{"type":"text","text":"A signed integer value type."}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Int","kind":"identifier"}],"navigatorTitle":[{"text":"Int","kind":"identifier"}],"title":"Int","url":"\/documentation\/compute\/int","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Substring":{"navigatorTitle":[{"kind":"identifier","text":"Substring"}],"url":"\/documentation\/compute\/substring","title":"Substring","abstract":[{"text":"A slice of a string.","type":"text"}],"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Substring","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Substring","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Substring/distance(from:to:)":{"abstract":[{"text":"Returns the distance between two indices.","type":"text"}],"title":"distance(from:to:)","url":"\/documentation\/compute\/substring\/distance(from:to:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Substring\/distance(from:to:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"distance","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"from"},{"kind":"text","text":": "},{"text":"Substring","preciseIdentifier":"s:Ss","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:Ss5Indexa","kind":"typeIdentifier","text":"Index"},{"kind":"text","text":", "},{"text":"to","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Substring","kind":"typeIdentifier","preciseIdentifier":"s:Ss"},{"kind":"text","text":"."},{"text":"Index","kind":"typeIdentifier","preciseIdentifier":"s:Ss5Indexa"},{"text":") -> ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"}],"type":"topic","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Substring/BidirectionalCollection-Implementations":{"url":"\/documentation\/compute\/substring\/bidirectionalcollection-implementations","role":"collectionGroup","abstract":[],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Substring\/BidirectionalCollection-Implementations","title":"BidirectionalCollection Implementations","kind":"article"}}}