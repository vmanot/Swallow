{"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"index"},{"kind":"text","text":"("},{"preciseIdentifier":"s:Ss","text":"Substring","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:Ss9UTF16ViewV","text":"UTF16View","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Index","kind":"typeIdentifier","preciseIdentifier":"s:Ss9UTF16ViewV5Indexa"},{"text":", ","kind":"text"},{"text":"offsetBy","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"limitedBy"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Ss","text":"Substring","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:Ss9UTF16ViewV","kind":"typeIdentifier","text":"UTF16View"},{"text":".","kind":"text"},{"preciseIdentifier":"s:Ss9UTF16ViewV5Indexa","kind":"typeIdentifier","text":"Index"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Ss","text":"Substring","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:Ss9UTF16ViewV","kind":"typeIdentifier","text":"UTF16View"},{"kind":"text","text":"."},{"preciseIdentifier":"s:Ss9UTF16ViewV5Indexa","text":"Index","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"roleHeading":"Instance Method","externalID":"s:Ss9UTF16ViewV5index_8offsetBy07limitedE0SS5IndexVSgAG_SiAGtF","modules":[{"relatedModules":["Swift"],"name":"Compute"}],"symbolKind":"method","title":"index(_:offsetBy:limitedBy:)","extendedModule":"Swift","role":"symbol"},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Substring","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Substring\/StringProtocol-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Substring\/UTF16View","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Substring\/UTF16View\/BidirectionalCollection-Implementations"]]},"schemaVersion":{"patch":0,"minor":3,"major":0},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"index"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"i"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Substring","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Substring","preciseIdentifier":"s:Ss"},{"text":".","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Substring\/UTF16View","kind":"typeIdentifier","preciseIdentifier":"s:Ss9UTF16ViewV","text":"UTF16View"},{"text":".","kind":"text"},{"text":"Index","preciseIdentifier":"s:Ss9UTF16ViewV5Indexa","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Substring\/UTF16View\/Index","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"offsetBy"},{"kind":"text","text":" "},{"kind":"internalParam","text":"n"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","text":"Int","preciseIdentifier":"s:Si"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"limitedBy"},{"kind":"text","text":" "},{"text":"limit","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Substring","kind":"typeIdentifier","preciseIdentifier":"s:Ss","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Substring"},{"kind":"text","text":"."},{"preciseIdentifier":"s:Ss9UTF16ViewV","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Substring\/UTF16View","text":"UTF16View","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:Ss9UTF16ViewV5Indexa","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Substring\/UTF16View\/Index","kind":"typeIdentifier","text":"Index"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Ss","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Substring","text":"Substring"},{"text":".","kind":"text"},{"text":"UTF16View","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Substring\/UTF16View","preciseIdentifier":"s:Ss9UTF16ViewV"},{"text":".","kind":"text"},{"preciseIdentifier":"s:Ss9UTF16ViewV5Indexa","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Substring\/UTF16View\/Index","kind":"typeIdentifier","text":"Index"},{"kind":"text","text":"?"}]}],"kind":"declarations"},{"parameters":[{"name":"i","content":[{"inlineContent":[{"text":"A valid index of the collection.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"A valid index of the collection to use as a limit. If","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"distance > 0"},{"type":"text","text":", a limit that is less than "},{"code":"i","type":"codeVoice"},{"text":" has no effect.","type":"text"},{"type":"text","text":" "},{"text":"Likewise, if ","type":"text"},{"type":"codeVoice","code":"distance < 0"},{"type":"text","text":", a limit that is greater than "},{"code":"i","type":"codeVoice"},{"text":" has no","type":"text"},{"type":"text","text":" "},{"type":"text","text":"effect."}]}],"name":"limit"}],"kind":"parameters"},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"return-value","text":"Return Value"},{"inlineContent":[{"text":"An index offset by ","type":"text"},{"code":"distance","type":"codeVoice"},{"type":"text","text":" from the index "},{"type":"codeVoice","code":"i"},{"text":", unless that","type":"text"},{"type":"text","text":" "},{"text":"index would be beyond ","type":"text"},{"code":"limit","type":"codeVoice"},{"type":"text","text":" in the direction of movement. In that"},{"type":"text","text":" "},{"type":"text","text":"case, the method returns "},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}]},{"kind":"content","content":[{"level":2,"text":"Discussion","type":"heading","anchor":"discussion"},{"inlineContent":[{"text":"The following example obtains an index advanced four positions from a","type":"text"},{"type":"text","text":" "},{"type":"text","text":"string’s starting index and then prints the character at that position."},{"text":" ","type":"text"},{"type":"text","text":"The operation doesn’t require going beyond the limiting "},{"type":"codeVoice","code":"s.endIndex"},{"text":" ","type":"text"},{"text":"value, so it succeeds.","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":["let s = \"Swift\"","if let i = s.index(s.startIndex, offsetBy: 4, limitedBy: s.endIndex) {","    print(s[i])","}","\/\/ Prints \"t\""]},{"inlineContent":[{"type":"text","text":"The next example attempts to retrieve an index six positions from"},{"type":"text","text":" "},{"code":"s.startIndex","type":"codeVoice"},{"text":" but fails, because that distance is beyond the index","type":"text"},{"type":"text","text":" "},{"text":"passed as ","type":"text"},{"type":"codeVoice","code":"limit"},{"type":"text","text":"."}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":["let j = s.index(s.startIndex, offsetBy: 6, limitedBy: s.endIndex)","print(j)","\/\/ Prints \"nil\""]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The value passed as "},{"code":"distance","type":"codeVoice"},{"type":"text","text":" must not offset "},{"type":"codeVoice","code":"i"},{"type":"text","text":" beyond the bounds of"},{"type":"text","text":" "},{"type":"text","text":"the collection, unless the index passed as "},{"code":"limit","type":"codeVoice"},{"text":" prevents offsetting","type":"text"},{"type":"text","text":" "},{"text":"beyond those bounds.","type":"text"}]},{"content":[{"inlineContent":[{"text":"O(1) if the collection conforms to","type":"text"},{"type":"text","text":" "},{"code":"RandomAccessCollection","type":"codeVoice"},{"type":"text","text":"; otherwise, O("},{"inlineContent":[{"text":"k","type":"text"}],"type":"emphasis"},{"text":"), where ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"k"}]},{"text":" is the absolute","type":"text"},{"type":"text","text":" "},{"text":"value of ","type":"text"},{"code":"distance","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}],"type":"aside","style":"note","name":"Complexity"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/substring\/utf16view\/index(_:offsetby:limitedby:)"]}],"kind":"symbol","sections":[],"abstract":[{"type":"text","text":"Returns an index that is the specified distance from the given index,"},{"type":"text","text":" "},{"text":"unless that distance is beyond a given limiting index.","type":"text"}],"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Substring\/UTF16View\/index(_:offsetBy:limitedBy:)","interfaceLanguage":"swift"},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Substring/UTF16View/Index":{"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Substring\/UTF16View\/Index","abstract":[{"text":"A type that represents a position in the collection.","type":"text"}],"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Index","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"Index"}],"kind":"symbol","title":"Substring.UTF16View.Index","url":"\/documentation\/compute\/substring\/utf16view\/index","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Substring":{"navigatorTitle":[{"kind":"identifier","text":"Substring"}],"url":"\/documentation\/compute\/substring","title":"Substring","abstract":[{"text":"A slice of a string.","type":"text"}],"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Substring","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Substring","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Substring/UTF16View/BidirectionalCollection-Implementations":{"title":"BidirectionalCollection Implementations","type":"topic","url":"\/documentation\/compute\/substring\/utf16view\/bidirectionalcollection-implementations","role":"collectionGroup","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Substring\/UTF16View\/BidirectionalCollection-Implementations","kind":"article"},"doc://com.swallow.documentation.Compute/documentation/Compute/Substring/UTF16View":{"url":"\/documentation\/compute\/substring\/utf16view","role":"symbol","title":"Substring.UTF16View","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"UTF16View"}],"abstract":[],"navigatorTitle":[{"text":"UTF16View","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Substring\/UTF16View","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Substring/UTF16View/index(_:offsetBy:limitedBy:)":{"url":"\/documentation\/compute\/substring\/utf16view\/index(_:offsetby:limitedby:)","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Substring\/UTF16View\/index(_:offsetBy:limitedBy:)","title":"index(_:offsetBy:limitedBy:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"index"},{"text":"(","kind":"text"},{"text":"Substring","kind":"typeIdentifier","preciseIdentifier":"s:Ss"},{"text":".","kind":"text"},{"text":"UTF16View","kind":"typeIdentifier","preciseIdentifier":"s:Ss9UTF16ViewV"},{"text":".","kind":"text"},{"text":"Index","preciseIdentifier":"s:Ss9UTF16ViewV5Indexa","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"offsetBy"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"text":", ","kind":"text"},{"text":"limitedBy","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Substring","preciseIdentifier":"s:Ss"},{"text":".","kind":"text"},{"preciseIdentifier":"s:Ss9UTF16ViewV","text":"UTF16View","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:Ss9UTF16ViewV5Indexa","text":"Index"},{"kind":"text","text":") -> "},{"text":"Substring","kind":"typeIdentifier","preciseIdentifier":"s:Ss"},{"text":".","kind":"text"},{"preciseIdentifier":"s:Ss9UTF16ViewV","kind":"typeIdentifier","text":"UTF16View"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:Ss9UTF16ViewV5Indexa","text":"Index"},{"text":"?","kind":"text"}],"abstract":[{"text":"Returns an index that is the specified distance from the given index,","type":"text"},{"text":" ","type":"text"},{"text":"unless that distance is beyond a given limiting index.","type":"text"}],"role":"symbol","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/Substring/StringProtocol-Implementations":{"url":"\/documentation\/compute\/substring\/stringprotocol-implementations","title":"StringProtocol Implementations","abstract":[],"type":"topic","kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Substring\/StringProtocol-Implementations","role":"collectionGroup"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","abstract":[{"type":"text","text":"A signed integer value type."}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Int","kind":"identifier"}],"navigatorTitle":[{"text":"Int","kind":"identifier"}],"title":"Int","url":"\/documentation\/compute\/int","kind":"symbol"}}}