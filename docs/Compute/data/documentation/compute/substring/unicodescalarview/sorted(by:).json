{"variants":[{"paths":["\/documentation\/compute\/substring\/unicodescalarview\/sorted(by:)"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"Returns the elements of the sequence, sorted using the given predicate as"},{"type":"text","text":" "},{"type":"text","text":"the comparison between elements."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"sorted"},{"kind":"text","text":"("},{"kind":"externalParam","text":"by"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"areInIncreasingOrder"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Element","preciseIdentifier":"s:ST7ElementQa","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:ST7ElementQa","text":"Element","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bool","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"kind":"text","text":" -> ["},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","text":"Element","preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier"},{"kind":"text","text":"]"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"A predicate that returns ","type":"text"},{"code":"true","type":"codeVoice"},{"type":"text","text":" if its"},{"type":"text","text":" "},{"type":"text","text":"first argument should be ordered before its second argument;"},{"type":"text","text":" "},{"text":"otherwise, ","type":"text"},{"type":"codeVoice","code":"false"},{"type":"text","text":"."}]}],"name":"areInIncreasingOrder"}]},{"content":[{"text":"Return Value","level":2,"type":"heading","anchor":"return-value"},{"inlineContent":[{"text":"A sorted array of the sequence’s elements.","type":"text"}],"type":"paragraph"}],"kind":"content"},{"kind":"content","content":[{"level":2,"text":"Discussion","anchor":"discussion","type":"heading"},{"inlineContent":[{"type":"text","text":"When you want to sort a sequence of elements that don’t conform to the"},{"text":" ","type":"text"},{"type":"codeVoice","code":"Comparable"},{"type":"text","text":" protocol, pass a predicate to this method that returns"},{"type":"text","text":" "},{"code":"true","type":"codeVoice"},{"type":"text","text":" when the first element should be ordered before the second. The"},{"type":"text","text":" "},{"text":"elements of the resulting array are ordered according to the given","type":"text"},{"type":"text","text":" "},{"type":"text","text":"predicate."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"In the following example, the predicate provides an ordering for an array"},{"text":" ","type":"text"},{"type":"text","text":"of a custom "},{"type":"codeVoice","code":"HTTPResponse"},{"text":" type. The predicate orders errors before","type":"text"},{"type":"text","text":" "},{"type":"text","text":"successes and sorts the error responses by their error code."}]},{"type":"codeListing","syntax":null,"code":["enum HTTPResponse {","    case ok","    case error(Int)","}","","let responses: [HTTPResponse] = [.error(500), .ok, .ok, .error(404), .error(403)]","let sortedResponses = responses.sorted {","    switch ($0, $1) {","    \/\/ Order errors by code","    case let (.error(aCode), .error(bCode)):","        return aCode < bCode","","    \/\/ All successes are equivalent, so none is before any other","    case (.ok, .ok): return false","","    \/\/ Order errors before successes","    case (.error, .ok): return true","    case (.ok, .error): return false","    }","}","print(sortedResponses)","\/\/ Prints \"[.error(403), .error(404), .error(500), .ok, .ok]\""]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You also use this method to sort elements that conform to the"},{"type":"text","text":" "},{"code":"Comparable","type":"codeVoice"},{"text":" protocol in descending order. To sort your sequence in","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"descending order, pass the greater-than operator ("},{"code":">","type":"codeVoice"},{"text":") as the","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"areInIncreasingOrder"},{"text":" parameter.","type":"text"}]},{"syntax":null,"code":["let students: Set = [\"Kofi\", \"Abena\", \"Peter\", \"Kweku\", \"Akosua\"]","let descendingStudents = students.sorted(by: >)","print(descendingStudents)","\/\/ Prints \"[\"Peter\", \"Kweku\", \"Kofi\", \"Akosua\", \"Abena\"]\""],"type":"codeListing"},{"inlineContent":[{"text":"Calling the related ","type":"text"},{"code":"sorted()","type":"codeVoice"},{"text":" method is equivalent to calling this","type":"text"},{"type":"text","text":" "},{"type":"text","text":"method and passing the less-than operator ("},{"code":"<","type":"codeVoice"},{"text":") as the predicate.","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":["print(students.sorted())","\/\/ Prints \"[\"Abena\", \"Akosua\", \"Kofi\", \"Kweku\", \"Peter\"]\"","print(students.sorted(by: <))","\/\/ Prints \"[\"Abena\", \"Akosua\", \"Kofi\", \"Kweku\", \"Peter\"]\""],"syntax":null},{"inlineContent":[{"type":"text","text":"The predicate must be a "},{"type":"emphasis","inlineContent":[{"text":"strict weak ordering","type":"text"}]},{"type":"text","text":" over the elements. That"},{"text":" ","type":"text"},{"type":"text","text":"is, for any elements "},{"type":"codeVoice","code":"a"},{"type":"text","text":", "},{"code":"b","type":"codeVoice"},{"type":"text","text":", and "},{"type":"codeVoice","code":"c"},{"text":", the following conditions must","type":"text"},{"type":"text","text":" "},{"type":"text","text":"hold:"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"codeVoice","code":"areInIncreasingOrder(a, a)"},{"text":" is always ","type":"text"},{"code":"false","type":"codeVoice"},{"type":"text","text":". (Irreflexivity)"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"If "},{"type":"codeVoice","code":"areInIncreasingOrder(a, b)"},{"type":"text","text":" and "},{"type":"codeVoice","code":"areInIncreasingOrder(b, c)"},{"type":"text","text":" are"},{"text":" ","type":"text"},{"type":"text","text":"both "},{"type":"codeVoice","code":"true"},{"type":"text","text":", then "},{"type":"codeVoice","code":"areInIncreasingOrder(a, c)"},{"text":" is also ","type":"text"},{"code":"true","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"(Transitive comparability)","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Two elements are ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"incomparable","type":"text"}]},{"type":"text","text":" if neither is ordered before the other"},{"type":"text","text":" "},{"text":"according to the predicate. If ","type":"text"},{"code":"a","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"b"},{"type":"text","text":" are incomparable, and "},{"code":"b","type":"codeVoice"},{"text":" ","type":"text"},{"type":"text","text":"and "},{"type":"codeVoice","code":"c"},{"text":" are incomparable, then ","type":"text"},{"type":"codeVoice","code":"a"},{"type":"text","text":" and "},{"code":"c","type":"codeVoice"},{"type":"text","text":" are also incomparable."},{"type":"text","text":" "},{"text":"(Transitive incomparability)","type":"text"}]}]}]},{"type":"paragraph","inlineContent":[{"text":"The sorting algorithm is guaranteed to be stable. A stable sort","type":"text"},{"text":" ","type":"text"},{"text":"preserves the relative order of elements for which","type":"text"},{"type":"text","text":" "},{"code":"areInIncreasingOrder","type":"codeVoice"},{"text":" does not establish an order.","type":"text"}]},{"name":"Complexity","type":"aside","content":[{"inlineContent":[{"text":"O(","type":"text"},{"inlineContent":[{"type":"text","text":"n"}],"type":"emphasis"},{"type":"text","text":" log "},{"inlineContent":[{"text":"n","type":"text"}],"type":"emphasis"},{"type":"text","text":"), where "},{"type":"emphasis","inlineContent":[{"type":"text","text":"n"}]},{"type":"text","text":" is the length of the sequence."}],"type":"paragraph"}],"style":"note"}]}],"metadata":{"extendedModule":"Swift","title":"sorted(by:)","externalID":"s:STsE6sorted2bySay7ElementQzGSbAD_ADtKXE_tKF::SYNTHESIZED::s:Ss17UnicodeScalarViewV","symbolKind":"method","roleHeading":"Instance Method","modules":[{"name":"Compute","relatedModules":["Swift"]}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"sorted","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"by"},{"text":": (","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier","text":"Element"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:ST7ElementQa","text":"Element","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") ","kind":"text"},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> ["},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"text":"]","kind":"text"}],"role":"symbol"},"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Substring\/UnicodeScalarView\/sorted(by:)"},"sections":[],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Substring","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Substring\/StringProtocol-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Substring\/UnicodeScalarView","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Substring\/UnicodeScalarView\/Sequence-Implementations"]]},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Substring/UnicodeScalarView":{"title":"Substring.UnicodeScalarView","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Substring\/UnicodeScalarView","url":"\/documentation\/compute\/substring\/unicodescalarview","kind":"symbol","abstract":[],"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"UnicodeScalarView"}],"role":"symbol","navigatorTitle":[{"text":"UnicodeScalarView","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence/Element":{"type":"topic","required":true,"abstract":[{"type":"text","text":"A type representing the sequence’s elements."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"symbol","url":"\/documentation\/compute\/sequence\/element","role":"symbol","title":"Element","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Bool":{"url":"\/documentation\/compute\/bool","role":"symbol","title":"Bool","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Bool","kind":"identifier"}],"abstract":[{"type":"text","text":"A value type whose instances are either "},{"type":"codeVoice","code":"true"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"false"},{"text":".","type":"text"}],"navigatorTitle":[{"text":"Bool","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bool","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Substring/StringProtocol-Implementations":{"url":"\/documentation\/compute\/substring\/stringprotocol-implementations","title":"StringProtocol Implementations","abstract":[],"type":"topic","kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Substring\/StringProtocol-Implementations","role":"collectionGroup"},"doc://com.swallow.documentation.Compute/documentation/Compute/Substring/UnicodeScalarView/sorted(by:)":{"role":"symbol","abstract":[{"text":"Returns the elements of the sequence, sorted using the given predicate as","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the comparison between elements."}],"url":"\/documentation\/compute\/substring\/unicodescalarview\/sorted(by:)","type":"topic","kind":"symbol","title":"sorted(by:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Substring\/UnicodeScalarView\/sorted(by:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"sorted"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"by"},{"kind":"text","text":": ("},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:ST7ElementQa","text":"Element","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> [","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"kind":"text","text":"]"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Substring":{"navigatorTitle":[{"kind":"identifier","text":"Substring"}],"url":"\/documentation\/compute\/substring","title":"Substring","abstract":[{"text":"A slice of a string.","type":"text"}],"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Substring","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Substring","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Substring/UnicodeScalarView/Sequence-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Substring\/UnicodeScalarView\/Sequence-Implementations","abstract":[],"title":"Sequence Implementations","type":"topic","url":"\/documentation\/compute\/substring\/unicodescalarview\/sequence-implementations","role":"collectionGroup","kind":"article"}}}