{"sections":[],"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Substring\/UnicodeScalarView\/reduce(_:_:)-8xpmb","interfaceLanguage":"swift"},"kind":"symbol","abstract":[{"type":"text","text":"Returns the result of combining the elements of the sequence using the"},{"text":" ","type":"text"},{"text":"given closure.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"reduce","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Result"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"text":"initialResult","kind":"internalParam"},{"kind":"text","text":": "},{"text":"Result","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"nextPartialResult"},{"kind":"text","text":": ("},{"text":"Result","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Result","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Result"}],"languages":["swift"],"platforms":["macOS"]}]},{"parameters":[{"name":"initialResult","content":[{"type":"paragraph","inlineContent":[{"text":"The value to use as the initial accumulating value.","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"initialResult"},{"type":"text","text":" is passed to "},{"type":"codeVoice","code":"nextPartialResult"},{"type":"text","text":" the first time the"},{"type":"text","text":" "},{"type":"text","text":"closure is executed."}]}]},{"name":"nextPartialResult","content":[{"inlineContent":[{"type":"text","text":"A closure that combines an accumulating value and"},{"type":"text","text":" "},{"type":"text","text":"an element of the sequence into a new accumulating value, to be used"},{"text":" ","type":"text"},{"type":"text","text":"in the next call of the "},{"code":"nextPartialResult","type":"codeVoice"},{"text":" closure or returned to","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the caller."}],"type":"paragraph"}]}],"kind":"parameters"},{"kind":"content","content":[{"type":"heading","level":2,"text":"Return Value","anchor":"return-value"},{"inlineContent":[{"text":"The final accumulated value. If the sequence has no elements,","type":"text"},{"text":" ","type":"text"},{"text":"the result is ","type":"text"},{"type":"codeVoice","code":"initialResult"},{"type":"text","text":"."}],"type":"paragraph"}]},{"kind":"content","content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"inlineContent":[{"text":"Use the ","type":"text"},{"type":"codeVoice","code":"reduce(_:_:)"},{"type":"text","text":" method to produce a single value from the elements"},{"text":" ","type":"text"},{"text":"of an entire sequence. For example, you can use this method on an array","type":"text"},{"type":"text","text":" "},{"type":"text","text":"of numbers to find their sum or product."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"code":"nextPartialResult","type":"codeVoice"},{"type":"text","text":" closure is called sequentially with an"},{"type":"text","text":" "},{"text":"accumulating value initialized to ","type":"text"},{"type":"codeVoice","code":"initialResult"},{"type":"text","text":" and each element of"},{"type":"text","text":" "},{"text":"the sequence. This example shows how to find the sum of an array of","type":"text"},{"type":"text","text":" "},{"text":"numbers.","type":"text"}]},{"code":["let numbers = [1, 2, 3, 4]","let numberSum = numbers.reduce(0, { x, y in","    x + y","})","\/\/ numberSum == 10"],"type":"codeListing","syntax":null},{"type":"paragraph","inlineContent":[{"type":"text","text":"When "},{"code":"numbers.reduce(_:_:)","type":"codeVoice"},{"type":"text","text":" is called, the following steps occur:"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"nextPartialResult"},{"text":" closure is called with ","type":"text"},{"code":"initialResult","type":"codeVoice"},{"type":"text","text":"—"},{"code":"0","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"in this case—and the first element of "},{"type":"codeVoice","code":"numbers"},{"text":", returning the sum:","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"1"},{"type":"text","text":"."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"The closure is called again repeatedly with the previous call’s return"},{"text":" ","type":"text"},{"type":"text","text":"value and each element of the sequence."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"When the sequence is exhausted, the last value returned from the","type":"text"},{"type":"text","text":" "},{"text":"closure is returned to the caller.","type":"text"}]}]}],"type":"orderedList"},{"inlineContent":[{"type":"text","text":"If the sequence has no elements, "},{"code":"nextPartialResult","type":"codeVoice"},{"text":" is never executed","type":"text"},{"type":"text","text":" "},{"type":"text","text":"and "},{"code":"initialResult","type":"codeVoice"},{"type":"text","text":" is the result of the call to "},{"type":"codeVoice","code":"reduce(_:_:)"},{"type":"text","text":"."}],"type":"paragraph"},{"type":"aside","style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"O("},{"inlineContent":[{"text":"n","type":"text"}],"type":"emphasis"},{"text":"), where ","type":"text"},{"inlineContent":[{"type":"text","text":"n"}],"type":"emphasis"},{"type":"text","text":" is the length of the sequence."}]}],"name":"Complexity"}]}],"variants":[{"paths":["\/documentation\/compute\/substring\/unicodescalarview\/reduce(_:_:)-8xpmb"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"modules":[{"name":"Compute","relatedModules":["Swift"]}],"symbolKind":"method","extendedModule":"Swift","title":"reduce(_:_:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"reduce"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Result"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"Result"},{"text":", (","kind":"text"},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Result"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Result","kind":"typeIdentifier"}],"role":"symbol","roleHeading":"Instance Method","externalID":"s:STsE6reduceyqd__qd___qd__qd___7ElementQztKXEtKlF::SYNTHESIZED::s:Ss17UnicodeScalarViewV"},"schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Substring","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Substring\/StringProtocol-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Substring\/UnicodeScalarView","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Substring\/UnicodeScalarView\/Sequence-Implementations"]]},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Substring/StringProtocol-Implementations":{"url":"\/documentation\/compute\/substring\/stringprotocol-implementations","title":"StringProtocol Implementations","abstract":[],"type":"topic","kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Substring\/StringProtocol-Implementations","role":"collectionGroup"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence/Element":{"type":"topic","required":true,"abstract":[{"type":"text","text":"A type representing the sequence’s elements."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"symbol","url":"\/documentation\/compute\/sequence\/element","role":"symbol","title":"Element","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Substring/UnicodeScalarView":{"title":"Substring.UnicodeScalarView","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Substring\/UnicodeScalarView","url":"\/documentation\/compute\/substring\/unicodescalarview","kind":"symbol","abstract":[],"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"UnicodeScalarView"}],"role":"symbol","navigatorTitle":[{"text":"UnicodeScalarView","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Substring/UnicodeScalarView/reduce(_:_:)-8xpmb":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Substring\/UnicodeScalarView\/reduce(_:_:)-8xpmb","kind":"symbol","abstract":[{"text":"Returns the result of combining the elements of the sequence using the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"given closure."}],"url":"\/documentation\/compute\/substring\/unicodescalarview\/reduce(_:_:)-8xpmb","type":"topic","role":"symbol","title":"reduce(_:_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"reduce","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Result","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":", ("},{"kind":"typeIdentifier","text":"Result"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Result"},{"text":") ","kind":"text"},{"kind":"keyword","text":"rethrows"},{"text":" -> ","kind":"text"},{"text":"Result","kind":"typeIdentifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Substring":{"navigatorTitle":[{"kind":"identifier","text":"Substring"}],"url":"\/documentation\/compute\/substring","title":"Substring","abstract":[{"text":"A slice of a string.","type":"text"}],"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Substring","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Substring","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Substring/UnicodeScalarView/Sequence-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Substring\/UnicodeScalarView\/Sequence-Implementations","abstract":[],"title":"Sequence Implementations","type":"topic","url":"\/documentation\/compute\/substring\/unicodescalarview\/sequence-implementations","role":"collectionGroup","kind":"article"}}}