{"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute"]]},"kind":"symbol","abstract":[{"text":"The IEEE 754 floating-point classes.","type":"text"}],"metadata":{"role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"FloatingPointClassification"}],"modules":[{"name":"Compute"}],"roleHeading":"Enumeration","navigatorTitle":[{"text":"FloatingPointClassification","kind":"identifier"}],"title":"FloatingPointClassification","externalID":"s:s27FloatingPointClassificationO","symbolKind":"enum"},"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPointClassification","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"minor":3,"patch":0},"relationshipsSections":[{"kind":"relationships","type":"conformsTo","identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BitwiseCopyable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Copyable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Equatable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Hashable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sendable"],"title":"Conforms To"}],"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"@frozen","kind":"attribute"},{"kind":"text","text":" "},{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"FloatingPointClassification"}],"platforms":["macOS"],"languages":["swift"]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/floatingpointclassification"]}],"topicSections":[{"anchor":"Operators","title":"Operators","generated":true,"identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPointClassification\/==(_:_:)"]},{"identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPointClassification\/negativeInfinity","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPointClassification\/negativeNormal","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPointClassification\/negativeSubnormal","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPointClassification\/negativeZero","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPointClassification\/positiveInfinity","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPointClassification\/positiveNormal","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPointClassification\/positiveSubnormal","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPointClassification\/positiveZero","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPointClassification\/quietNaN","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPointClassification\/signalingNaN"],"title":"Enumeration Cases","generated":true,"anchor":"Enumeration-Cases"},{"title":"Instance Properties","identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPointClassification\/hashValue"],"generated":true,"anchor":"Instance-Properties"},{"identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPointClassification\/hash(into:)"],"anchor":"Instance-Methods","generated":true,"title":"Instance Methods"},{"generated":true,"identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPointClassification\/Equatable-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPointClassification\/Hashable-Implementations"],"title":"Default Implementations","anchor":"Default-Implementations"}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Sendable":{"kind":"symbol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"Sendable","kind":"identifier"}],"title":"Sendable","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sendable","abstract":[],"url":"\/documentation\/compute\/sendable","role":"symbol","navigatorTitle":[{"text":"Sendable","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/FloatingPointClassification/positiveSubnormal":{"url":"\/documentation\/compute\/floatingpointclassification\/positivesubnormal","abstract":[{"type":"text","text":"A positive, nonzero number that does not use the full precision of the"},{"text":" ","type":"text"},{"text":"floating-point type.","type":"text"}],"fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"text":"positiveSubnormal","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPointClassification\/positiveSubnormal","role":"symbol","title":"FloatingPointClassification.positiveSubnormal","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/FloatingPointClassification/positiveNormal":{"role":"symbol","title":"FloatingPointClassification.positiveNormal","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"positiveNormal","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPointClassification\/positiveNormal","url":"\/documentation\/compute\/floatingpointclassification\/positivenormal","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"A positive value that uses the full precision of the floating-point type."}]},"doc://com.swallow.documentation.Compute/documentation/Compute/FloatingPointClassification/Hashable-Implementations":{"url":"\/documentation\/compute\/floatingpointclassification\/hashable-implementations","title":"Hashable Implementations","role":"collectionGroup","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPointClassification\/Hashable-Implementations","abstract":[],"kind":"article","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/FloatingPointClassification/signalingNaN":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPointClassification\/signalingNaN","type":"topic","title":"FloatingPointClassification.signalingNaN","abstract":[{"text":"A signaling NaN (“not a number”).","type":"text"}],"role":"symbol","url":"\/documentation\/compute\/floatingpointclassification\/signalingnan","kind":"symbol","fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"signalingNaN"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/FloatingPointClassification/hashValue":{"role":"symbol","title":"hashValue","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"hashValue","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"}],"url":"\/documentation\/compute\/floatingpointclassification\/hashvalue","type":"topic","kind":"symbol","abstract":[{"text":"The hash value.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPointClassification\/hashValue"},"doc://com.swallow.documentation.Compute/documentation/Compute/FloatingPointClassification/Equatable-Implementations":{"kind":"article","role":"collectionGroup","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPointClassification\/Equatable-Implementations","type":"topic","title":"Equatable Implementations","abstract":[],"url":"\/documentation\/compute\/floatingpointclassification\/equatable-implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/FloatingPointClassification":{"url":"\/documentation\/compute\/floatingpointclassification","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FloatingPointClassification","kind":"identifier"}],"title":"FloatingPointClassification","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPointClassification","abstract":[{"text":"The IEEE 754 floating-point classes.","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"FloatingPointClassification","kind":"identifier"}],"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/FloatingPointClassification/hash(into:)":{"kind":"symbol","abstract":[{"text":"Hashes the essential components of this value by feeding them into the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"given hasher."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPointClassification\/hash(into:)","url":"\/documentation\/compute\/floatingpointclassification\/hash(into:)","title":"hash(into:)","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"hash","kind":"identifier"},{"kind":"text","text":"("},{"text":"into","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:s6HasherV","kind":"typeIdentifier","text":"Hasher"},{"text":")","kind":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/FloatingPointClassification/positiveZero":{"url":"\/documentation\/compute\/floatingpointclassification\/positivezero","abstract":[{"text":"A value equal to zero with a positive sign.","type":"text"}],"fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"kind":"identifier","text":"positiveZero"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPointClassification\/positiveZero","role":"symbol","title":"FloatingPointClassification.positiveZero","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Copyable":{"title":"Copyable","abstract":[{"type":"text","text":"A type whose values can be implicitly or explicitly copied."}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"Copyable","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Copyable","url":"\/documentation\/compute\/copyable","navigatorTitle":[{"text":"Copyable","kind":"identifier"}],"kind":"symbol","role":"symbol","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/FloatingPointClassification/positiveInfinity":{"kind":"symbol","abstract":[{"text":"A value equal to ","type":"text"},{"type":"codeVoice","code":"+infinity"},{"type":"text","text":"."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPointClassification\/positiveInfinity","url":"\/documentation\/compute\/floatingpointclassification\/positiveinfinity","title":"FloatingPointClassification.positiveInfinity","type":"topic","role":"symbol","fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"text":"positiveInfinity","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/FloatingPointClassification/negativeInfinity":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPointClassification\/negativeInfinity","abstract":[{"text":"A value equal to ","type":"text"},{"code":"-infinity","type":"codeVoice"},{"type":"text","text":"."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"text":"negativeInfinity","kind":"identifier"}],"title":"FloatingPointClassification.negativeInfinity","role":"symbol","url":"\/documentation\/compute\/floatingpointclassification\/negativeinfinity","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/FloatingPointClassification/==(_:_:)":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPointClassification\/==(_:_:)","url":"\/documentation\/compute\/floatingpointclassification\/==(_:_:)","role":"symbol","kind":"symbol","title":"==(_:_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"==","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s27FloatingPointClassificationO","text":"FloatingPointClassification"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:s27FloatingPointClassificationO","text":"FloatingPointClassification"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"type":"topic","abstract":[{"type":"text","text":"Returns a Boolean value indicating whether two values are equal."}]},"doc://com.swallow.documentation.Compute/documentation/Compute/FloatingPointClassification/quietNaN":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPointClassification\/quietNaN","abstract":[{"type":"text","text":"A silent NaN (“not a number”) value."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"text":"quietNaN","kind":"identifier"}],"title":"FloatingPointClassification.quietNaN","role":"symbol","url":"\/documentation\/compute\/floatingpointclassification\/quietnan","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/BitwiseCopyable":{"title":"BitwiseCopyable","abstract":[],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BitwiseCopyable","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BitwiseCopyable","url":"\/documentation\/compute\/bitwisecopyable","navigatorTitle":[{"kind":"identifier","text":"BitwiseCopyable"}],"kind":"symbol","role":"symbol","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/FloatingPointClassification/negativeZero":{"type":"topic","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPointClassification\/negativeZero","abstract":[{"text":"A value equal to zero with a negative sign.","type":"text"}],"title":"FloatingPointClassification.negativeZero","url":"\/documentation\/compute\/floatingpointclassification\/negativezero","role":"symbol","fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"text":"negativeZero","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/FloatingPointClassification/negativeSubnormal":{"url":"\/documentation\/compute\/floatingpointclassification\/negativesubnormal","abstract":[{"type":"text","text":"A negative, nonzero number that does not use the full precision of the"},{"text":" ","type":"text"},{"text":"floating-point type.","type":"text"}],"fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"kind":"identifier","text":"negativeSubnormal"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPointClassification\/negativeSubnormal","role":"symbol","title":"FloatingPointClassification.negativeSubnormal","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/FloatingPointClassification/negativeNormal":{"title":"FloatingPointClassification.negativeNormal","fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"kind":"identifier","text":"negativeNormal"}],"kind":"symbol","role":"symbol","abstract":[{"text":"A negative value that uses the full precision of the floating-point type.","type":"text"}],"type":"topic","url":"\/documentation\/compute\/floatingpointclassification\/negativenormal","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPointClassification\/negativeNormal"},"doc://com.swallow.documentation.Compute/documentation/Compute/Hashable":{"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Hashable"}],"title":"Hashable","navigatorTitle":[{"text":"Hashable","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"A type that can be hashed into a "},{"type":"codeVoice","code":"Hasher"},{"type":"text","text":" to produce an integer hash value."}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Hashable","url":"\/documentation\/compute\/hashable","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Equatable":{"abstract":[{"text":"A type that can be compared for value equality.","type":"text"}],"type":"topic","title":"Equatable","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Equatable"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Equatable","role":"symbol","url":"\/documentation\/compute\/equatable","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Equatable","kind":"identifier"}]}}}