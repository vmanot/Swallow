{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ContiguousArray"},"sections":[],"relationshipsSections":[{"identifiers":["doc:\/\/com.swallow.documentation.Compute\/10Accelerate0A6BufferP","doc:\/\/com.swallow.documentation.Compute\/10Accelerate0A13MutableBufferP","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BidirectionalCollection","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Copyable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CustomDebugStringConvertible","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CustomReflectable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CustomStringConvertible","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Decodable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Encodable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Equatable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ExpressibleByArrayLiteral","doc:\/\/com.swallow.documentation.Compute\/10Foundation15ContiguousBytesP","doc:\/\/com.swallow.documentation.Compute\/10Foundation12DataProtocolP","doc:\/\/com.swallow.documentation.Compute\/10Foundation19MutableDataProtocolP","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Hashable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/MutableCollection","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Partializable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RandomAccessCollection","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RangeReplaceableCollection","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sendable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence","doc:\/\/com.swallow.documentation.Compute\/7Swallow17ContiguousStorageP","doc:\/\/com.swallow.documentation.Compute\/7Swallow9CountableP","doc:\/\/com.swallow.documentation.Compute\/7Swallow28DestructivelyMutableSequenceP","doc:\/\/com.swallow.documentation.Compute\/7Swallow8DiffableP","doc:\/\/com.swallow.documentation.Compute\/7Swallow20ExtensibleCollectionP","doc:\/\/com.swallow.documentation.Compute\/7Swallow36ExtensibleRangeReplaceableCollectionP","doc:\/\/com.swallow.documentation.Compute\/7Swallow18ExtensibleSequenceP","doc:\/\/com.swallow.documentation.Compute\/7Swallow9InitiableP","doc:\/\/com.swallow.documentation.Compute\/7Swallow18JoinableCollectionP","doc:\/\/com.swallow.documentation.Compute\/7Swallow16JoinableSequenceP","doc:\/\/com.swallow.documentation.Compute\/7Swallow24MutableContiguousStorageP","doc:\/\/com.swallow.documentation.Compute\/7Swallow15MutableSequenceP","doc:\/\/com.swallow.documentation.Compute\/7Swallow36NonDestroyingBidirectionalCollectionP","doc:\/\/com.swallow.documentation.Compute\/7Swallow23NonDestroyingCollectionP","doc:\/\/com.swallow.documentation.Compute\/7Swallow42NonDestroyingMutableRandomAccessCollectionP","doc:\/\/com.swallow.documentation.Compute\/7Swallow28NonDestroyingMutableSequenceP","doc:\/\/com.swallow.documentation.Compute\/7Swallow35NonDestroyingRandomAccessCollectionP","doc:\/\/com.swallow.documentation.Compute\/7Swallow21NonDestroyingSequenceP","doc:\/\/com.swallow.documentation.Compute\/7Swallow19ResizableCollectionP","doc:\/\/com.swallow.documentation.Compute\/7Swallow17ResizableSequenceP","doc:\/\/com.swallow.documentation.Compute\/7Swallow017SequenceInitiableB0P"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"kind":"symbol","metadata":{"navigatorTitle":[{"kind":"identifier","text":"ContiguousArray"}],"symbolKind":"struct","roleHeading":"Structure","externalID":"s:s15ContiguousArrayV","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ContiguousArray","kind":"identifier"}],"role":"symbol","title":"ContiguousArray","modules":[{"name":"Compute"}]},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"attribute","text":"@frozen"},{"text":" ","kind":"text"},{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"ContiguousArray","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Element","kind":"genericParameter"},{"text":">","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"type":"heading","level":2,"anchor":"overview","text":"Overview"},{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"code":"ContiguousArray","type":"codeVoice"},{"type":"text","text":" type is a specialized array that always stores its"},{"type":"text","text":" "},{"type":"text","text":"elements in a contiguous region of memory. This contrasts with "},{"type":"codeVoice","code":"Array"},{"text":",","type":"text"},{"text":" ","type":"text"},{"text":"which can store its elements in either a contiguous region of memory or an","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"NSArray"},{"text":" instance if its ","type":"text"},{"type":"codeVoice","code":"Element"},{"text":" type is a class or ","type":"text"},{"code":"@objc","type":"codeVoice"},{"type":"text","text":" protocol."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If your array’s "},{"type":"codeVoice","code":"Element"},{"type":"text","text":" type is a class or "},{"code":"@objc","type":"codeVoice"},{"type":"text","text":" protocol and you do"},{"text":" ","type":"text"},{"type":"text","text":"not need to bridge the array to "},{"type":"codeVoice","code":"NSArray"},{"type":"text","text":" or pass the array to Objective-C"},{"type":"text","text":" "},{"text":"APIs, using ","type":"text"},{"code":"ContiguousArray","type":"codeVoice"},{"text":" may be more efficient and have more","type":"text"},{"type":"text","text":" "},{"type":"text","text":"predictable performance than "},{"type":"codeVoice","code":"Array"},{"type":"text","text":". If the array’s "},{"type":"codeVoice","code":"Element"},{"type":"text","text":" type is a"},{"type":"text","text":" "},{"text":"struct or enumeration, ","type":"text"},{"type":"codeVoice","code":"Array"},{"type":"text","text":" and "},{"type":"codeVoice","code":"ContiguousArray"},{"type":"text","text":" should have similar"},{"type":"text","text":" "},{"type":"text","text":"efficiency."}]},{"inlineContent":[{"text":"For more information about using arrays, see ","type":"text"},{"code":"Array","type":"codeVoice"},{"type":"text","text":" and "},{"code":"ArraySlice","type":"codeVoice"},{"type":"text","text":", with"},{"type":"text","text":" "},{"text":"which ","type":"text"},{"code":"ContiguousArray","type":"codeVoice"},{"type":"text","text":" shares most properties and methods."}],"type":"paragraph"}],"kind":"content"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute"]]},"topicSections":[{"identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ContiguousArray\/init(unsafeUninitializedCapacity:initializingWith:)"],"generated":true,"title":"Initializers","anchor":"Initializers"},{"title":"Default Implementations","anchor":"Default-Implementations","identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ContiguousArray\/AccelerateBuffer-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ContiguousArray\/AccelerateMutableBuffer-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ContiguousArray\/BidirectionalCollection-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ContiguousArray\/Collection-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ContiguousArray\/CustomDebugStringConvertible-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ContiguousArray\/CustomReflectable-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ContiguousArray\/CustomStringConvertible-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ContiguousArray\/Decodable-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ContiguousArray\/Encodable-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ContiguousArray\/Equatable-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ContiguousArray\/ExpressibleByArrayLiteral-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ContiguousArray\/Hashable-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ContiguousArray\/MutableCollection-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ContiguousArray\/MutableContiguousStorage-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ContiguousArray\/Partializable-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ContiguousArray\/RandomAccessCollection-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ContiguousArray\/RangeReplaceableCollection-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ContiguousArray\/Sequence-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ContiguousArray\/_ArrayProtocol-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ContiguousArray\/_HasContiguousBytes-Implementations"],"generated":true}],"variants":[{"paths":["\/documentation\/compute\/contiguousarray"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"A contiguously stored array."}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/ContiguousArray/Sequence-Implementations":{"url":"\/documentation\/compute\/contiguousarray\/sequence-implementations","role":"collectionGroup","type":"topic","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ContiguousArray\/Sequence-Implementations","title":"Sequence Implementations","kind":"article"},"doc://com.swallow.documentation.Compute/7Swallow17ContiguousStorageP":{"title":"Swallow.ContiguousStorage","type":"unresolvable","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow17ContiguousStorageP"},"doc://com.swallow.documentation.Compute/7Swallow9CountableP":{"type":"unresolvable","title":"Swallow.Countable","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow9CountableP"},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Sequence","kind":"identifier"}],"role":"symbol","kind":"symbol","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Element"},{"text":" conforms to ","type":"text"},{"code":"Copyable","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"Escapable","type":"codeVoice"},{"text":".","type":"text"}]},"navigatorTitle":[{"text":"Sequence","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"A type that provides sequential, iterated access to its elements."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence","url":"\/documentation\/compute\/sequence","title":"Sequence"},"doc://com.swallow.documentation.Compute/documentation/Compute/ExpressibleByArrayLiteral":{"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Element"},{"text":" conforms to ","type":"text"},{"code":"Copyable","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Escapable"},{"text":".","type":"text"}]},"role":"symbol","type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ExpressibleByArrayLiteral","navigatorTitle":[{"kind":"identifier","text":"ExpressibleByArrayLiteral"}],"kind":"symbol","abstract":[{"type":"text","text":"A type that can be initialized using an array literal."}],"title":"ExpressibleByArrayLiteral","url":"\/documentation\/compute\/expressiblebyarrayliteral","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ExpressibleByArrayLiteral","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/7Swallow18JoinableCollectionP":{"type":"unresolvable","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow18JoinableCollectionP","title":"Swallow.JoinableCollection"},"doc://com.swallow.documentation.Compute/documentation/Compute/ContiguousArray/MutableCollection-Implementations":{"role":"collectionGroup","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ContiguousArray\/MutableCollection-Implementations","kind":"article","abstract":[],"type":"topic","url":"\/documentation\/compute\/contiguousarray\/mutablecollection-implementations","title":"MutableCollection Implementations"},"doc://com.swallow.documentation.Compute/10Foundation15ContiguousBytesP":{"type":"unresolvable","identifier":"doc:\/\/com.swallow.documentation.Compute\/10Foundation15ContiguousBytesP","title":"Foundation.ContiguousBytes"},"doc://com.swallow.documentation.Compute/documentation/Compute/CustomStringConvertible":{"abstract":[{"type":"text","text":"A type with a customized textual representation."}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"CustomStringConvertible"}],"type":"topic","title":"CustomStringConvertible","role":"symbol","url":"\/documentation\/compute\/customstringconvertible","kind":"symbol","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Element","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Copyable","type":"codeVoice"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Escapable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CustomStringConvertible","navigatorTitle":[{"text":"CustomStringConvertible","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/7Swallow36NonDestroyingBidirectionalCollectionP":{"type":"unresolvable","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow36NonDestroyingBidirectionalCollectionP","title":"Swallow.NonDestroyingBidirectionalCollection"},"doc://com.swallow.documentation.Compute/documentation/Compute/ContiguousArray/Decodable-Implementations":{"url":"\/documentation\/compute\/contiguousarray\/decodable-implementations","role":"collectionGroup","abstract":[],"type":"topic","title":"Decodable Implementations","kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ContiguousArray\/Decodable-Implementations"},"doc://com.swallow.documentation.Compute/7Swallow19ResizableCollectionP":{"type":"unresolvable","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow19ResizableCollectionP","title":"Swallow.ResizableCollection"},"doc://com.swallow.documentation.Compute/documentation/Compute/RangeReplaceableCollection":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RangeReplaceableCollection","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"RangeReplaceableCollection","kind":"identifier"}],"kind":"symbol","role":"symbol","type":"topic","url":"\/documentation\/compute\/rangereplaceablecollection","abstract":[{"type":"text","text":"A collection that supports replacement of an arbitrary subrange of elements"},{"text":" ","type":"text"},{"type":"text","text":"with the elements of another collection."}],"navigatorTitle":[{"kind":"identifier","text":"RangeReplaceableCollection"}],"title":"RangeReplaceableCollection","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Copyable"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Escapable"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}]}},"doc://com.swallow.documentation.Compute/documentation/Compute/CustomReflectable":{"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Copyable"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Escapable"},{"text":".","type":"text"}]},"role":"symbol","type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CustomReflectable","navigatorTitle":[{"text":"CustomReflectable","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"A type that explicitly supplies its own mirror.","type":"text"}],"title":"CustomReflectable","url":"\/documentation\/compute\/customreflectable","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"CustomReflectable","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Decodable":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Decodable","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Decodable"}],"kind":"symbol","role":"symbol","type":"topic","url":"\/documentation\/compute\/decodable","abstract":[{"text":"A type that can decode itself from an external representation.","type":"text"}],"navigatorTitle":[{"text":"Decodable","kind":"identifier"}],"title":"Decodable","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Element","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Decodable"},{"text":".","type":"text"}]}},"doc://com.swallow.documentation.Compute/documentation/Compute/ContiguousArray/ExpressibleByArrayLiteral-Implementations":{"role":"collectionGroup","type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ContiguousArray\/ExpressibleByArrayLiteral-Implementations","kind":"article","abstract":[],"title":"ExpressibleByArrayLiteral Implementations","url":"\/documentation\/compute\/contiguousarray\/expressiblebyarrayliteral-implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/Sendable":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sendable","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Sendable"}],"kind":"symbol","role":"symbol","type":"topic","url":"\/documentation\/compute\/sendable","abstract":[],"navigatorTitle":[{"kind":"identifier","text":"Sendable"}],"title":"Sendable","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Element","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Copyable"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Escapable"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Sendable"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]}},"doc://com.swallow.documentation.Compute/7Swallow23NonDestroyingCollectionP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow23NonDestroyingCollectionP","type":"unresolvable","title":"Swallow.NonDestroyingCollection"},"doc://com.swallow.documentation.Compute/7Swallow42NonDestroyingMutableRandomAccessCollectionP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow42NonDestroyingMutableRandomAccessCollectionP","type":"unresolvable","title":"Swallow.NonDestroyingMutableRandomAccessCollection"},"doc://com.swallow.documentation.Compute/documentation/Compute/RandomAccessCollection":{"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Element"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Copyable"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Escapable"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"role":"symbol","type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RandomAccessCollection","navigatorTitle":[{"kind":"identifier","text":"RandomAccessCollection"}],"kind":"symbol","abstract":[{"text":"A collection that supports efficient random-access index traversal.","type":"text"}],"title":"RandomAccessCollection","url":"\/documentation\/compute\/randomaccesscollection","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RandomAccessCollection"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/ContiguousArray/CustomDebugStringConvertible-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ContiguousArray\/CustomDebugStringConvertible-Implementations","kind":"article","role":"collectionGroup","type":"topic","url":"\/documentation\/compute\/contiguousarray\/customdebugstringconvertible-implementations","abstract":[],"title":"CustomDebugStringConvertible Implementations"},"doc://com.swallow.documentation.Compute/10Foundation19MutableDataProtocolP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/10Foundation19MutableDataProtocolP","type":"unresolvable","title":"Foundation.MutableDataProtocol"},"doc://com.swallow.documentation.Compute/documentation/Compute/ContiguousArray/Encodable-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ContiguousArray\/Encodable-Implementations","kind":"article","role":"collectionGroup","type":"topic","url":"\/documentation\/compute\/contiguousarray\/encodable-implementations","abstract":[],"title":"Encodable Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/ContiguousArray/Hashable-Implementations":{"role":"collectionGroup","type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ContiguousArray\/Hashable-Implementations","kind":"article","abstract":[],"title":"Hashable Implementations","url":"\/documentation\/compute\/contiguousarray\/hashable-implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/MutableCollection":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/MutableCollection","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"MutableCollection","kind":"identifier"}],"kind":"symbol","role":"symbol","type":"topic","url":"\/documentation\/compute\/mutablecollection","abstract":[{"type":"text","text":"A collection that supports subscript assignment."}],"navigatorTitle":[{"kind":"identifier","text":"MutableCollection"}],"title":"MutableCollection","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Copyable"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Escapable"},{"text":".","type":"text"}]}},"doc://com.swallow.documentation.Compute/documentation/Compute/CustomDebugStringConvertible":{"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Element"},{"text":" conforms to ","type":"text"},{"code":"Copyable","type":"codeVoice"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Escapable"},{"type":"text","text":"."}]},"role":"symbol","type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CustomDebugStringConvertible","navigatorTitle":[{"kind":"identifier","text":"CustomDebugStringConvertible"}],"kind":"symbol","abstract":[{"text":"A type with a customized textual representation suitable for debugging","type":"text"},{"text":" ","type":"text"},{"text":"purposes.","type":"text"}],"title":"CustomDebugStringConvertible","url":"\/documentation\/compute\/customdebugstringconvertible","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CustomDebugStringConvertible"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/BidirectionalCollection":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BidirectionalCollection","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BidirectionalCollection","kind":"identifier"}],"kind":"symbol","role":"symbol","type":"topic","url":"\/documentation\/compute\/bidirectionalcollection","abstract":[{"type":"text","text":"A collection that supports backward as well as forward traversal."}],"navigatorTitle":[{"kind":"identifier","text":"BidirectionalCollection"}],"title":"BidirectionalCollection","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"code":"Copyable","type":"codeVoice"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Escapable"},{"type":"text","text":"."}]}},"doc://com.swallow.documentation.Compute/documentation/Compute/ContiguousArray/BidirectionalCollection-Implementations":{"title":"BidirectionalCollection Implementations","kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ContiguousArray\/BidirectionalCollection-Implementations","role":"collectionGroup","url":"\/documentation\/compute\/contiguousarray\/bidirectionalcollection-implementations","abstract":[],"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/ContiguousArray/RangeReplaceableCollection-Implementations":{"url":"\/documentation\/compute\/contiguousarray\/rangereplaceablecollection-implementations","title":"RangeReplaceableCollection Implementations","role":"collectionGroup","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ContiguousArray\/RangeReplaceableCollection-Implementations","abstract":[],"kind":"article","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/7Swallow28NonDestroyingMutableSequenceP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow28NonDestroyingMutableSequenceP","type":"unresolvable","title":"Swallow.NonDestroyingMutableSequence"},"doc://com.swallow.documentation.Compute/documentation/Compute/Hashable":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Hashable","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"Hashable","kind":"identifier"}],"role":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Element","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Hashable","type":"codeVoice"},{"type":"text","text":"."}]},"abstract":[{"text":"A type that can be hashed into a ","type":"text"},{"type":"codeVoice","code":"Hasher"},{"text":" to produce an integer hash value.","type":"text"}],"type":"topic","title":"Hashable","navigatorTitle":[{"text":"Hashable","kind":"identifier"}],"url":"\/documentation\/compute\/hashable","kind":"symbol"},"doc://com.swallow.documentation.Compute/7Swallow8DiffableP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow8DiffableP","type":"unresolvable","title":"Swallow.Diffable"},"doc://com.swallow.documentation.Compute/7Swallow36ExtensibleRangeReplaceableCollectionP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow36ExtensibleRangeReplaceableCollectionP","type":"unresolvable","title":"Swallow.ExtensibleRangeReplaceableCollection"},"doc://com.swallow.documentation.Compute/7Swallow16JoinableSequenceP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow16JoinableSequenceP","type":"unresolvable","title":"Swallow.JoinableSequence"},"doc://com.swallow.documentation.Compute/documentation/Compute/ContiguousArray/AccelerateBuffer-Implementations":{"role":"collectionGroup","type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ContiguousArray\/AccelerateBuffer-Implementations","kind":"article","abstract":[],"title":"AccelerateBuffer Implementations","url":"\/documentation\/compute\/contiguousarray\/acceleratebuffer-implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/ContiguousArray/Partializable-Implementations":{"type":"topic","role":"collectionGroup","url":"\/documentation\/compute\/contiguousarray\/partializable-implementations","kind":"article","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ContiguousArray\/Partializable-Implementations","title":"Partializable Implementations"},"doc://com.swallow.documentation.Compute/10Accelerate0A13MutableBufferP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/10Accelerate0A13MutableBufferP","type":"unresolvable","title":"Accelerate.AccelerateMutableBuffer"},"doc://com.swallow.documentation.Compute/documentation/Compute/Encodable":{"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Element"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Encodable"},{"text":".","type":"text"}]},"role":"symbol","type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Encodable","navigatorTitle":[{"kind":"identifier","text":"Encodable"}],"kind":"symbol","abstract":[{"type":"text","text":"A type that can encode itself to an external representation."}],"title":"Encodable","url":"\/documentation\/compute\/encodable","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Encodable"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/ContiguousArray/CustomStringConvertible-Implementations":{"title":"CustomStringConvertible Implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ContiguousArray\/CustomStringConvertible-Implementations","kind":"article","role":"collectionGroup","type":"topic","abstract":[],"url":"\/documentation\/compute\/contiguousarray\/customstringconvertible-implementations"},"doc://com.swallow.documentation.Compute/7Swallow17ResizableSequenceP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow17ResizableSequenceP","title":"Swallow.ResizableSequence","type":"unresolvable"},"doc://com.swallow.documentation.Compute/documentation/Compute/ContiguousArray/init(unsafeUninitializedCapacity:initializingWith:)":{"role":"symbol","type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ContiguousArray\/init(unsafeUninitializedCapacity:initializingWith:)","kind":"symbol","abstract":[{"text":"Creates an array with the specified capacity, then calls the given","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"closure with a buffer covering the array’s uninitialized memory."}],"title":"init(unsafeUninitializedCapacity:initializingWith:)","url":"\/documentation\/compute\/contiguousarray\/init(unsafeuninitializedcapacity:initializingwith:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"text":"unsafeUninitializedCapacity","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"initializingWith"},{"kind":"text","text":": ("},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:Sr","text":"UnsafeMutableBufferPointer","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">, "},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"rethrows","kind":"keyword"}]},"doc://com.swallow.documentation.Compute/7Swallow017SequenceInitiableB0P":{"title":"Swallow.SequenceInitiableSequence","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow017SequenceInitiableB0P","type":"unresolvable"},"doc://com.swallow.documentation.Compute/documentation/Compute/ContiguousArray/AccelerateMutableBuffer-Implementations":{"role":"collectionGroup","type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ContiguousArray\/AccelerateMutableBuffer-Implementations","kind":"article","abstract":[],"title":"AccelerateMutableBuffer Implementations","url":"\/documentation\/compute\/contiguousarray\/acceleratemutablebuffer-implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/ContiguousArray/_ArrayProtocol-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ContiguousArray\/_ArrayProtocol-Implementations","kind":"article","role":"collectionGroup","type":"topic","url":"\/documentation\/compute\/contiguousarray\/_arrayprotocol-implementations","abstract":[],"title":"_ArrayProtocol Implementations"},"doc://com.swallow.documentation.Compute/7Swallow28DestructivelyMutableSequenceP":{"title":"Swallow.DestructivelyMutableSequence","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow28DestructivelyMutableSequenceP","type":"unresolvable"},"doc://com.swallow.documentation.Compute/7Swallow24MutableContiguousStorageP":{"title":"Swallow.MutableContiguousStorage","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow24MutableContiguousStorageP","type":"unresolvable"},"doc://com.swallow.documentation.Compute/documentation/Compute/Equatable":{"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Element","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Equatable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"role":"symbol","type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Equatable","navigatorTitle":[{"kind":"identifier","text":"Equatable"}],"kind":"symbol","abstract":[{"text":"A type that can be compared for value equality.","type":"text"}],"title":"Equatable","url":"\/documentation\/compute\/equatable","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"Equatable","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/7Swallow18ExtensibleSequenceP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow18ExtensibleSequenceP","title":"Swallow.ExtensibleSequence","type":"unresolvable"},"doc://com.swallow.documentation.Compute/7Swallow20ExtensibleCollectionP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow20ExtensibleCollectionP","title":"Swallow.ExtensibleCollection","type":"unresolvable"},"doc://com.swallow.documentation.Compute/7Swallow9InitiableP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow9InitiableP","title":"Swallow.Initiable","type":"unresolvable"},"doc://com.swallow.documentation.Compute/7Swallow15MutableSequenceP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow15MutableSequenceP","title":"Swallow.MutableSequence","type":"unresolvable"},"doc://com.swallow.documentation.Compute/10Accelerate0A6BufferP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/10Accelerate0A6BufferP","title":"Accelerate.AccelerateBuffer","type":"unresolvable"},"doc://com.swallow.documentation.Compute/10Foundation12DataProtocolP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/10Foundation12DataProtocolP","title":"Foundation.DataProtocol","type":"unresolvable"},"doc://com.swallow.documentation.Compute/documentation/Compute/Copyable":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Copyable","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"Copyable","kind":"identifier"}],"kind":"symbol","role":"symbol","type":"topic","url":"\/documentation\/compute\/copyable","abstract":[{"text":"A type whose values can be implicitly or explicitly copied.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Copyable"}],"title":"Copyable","conformance":{"constraints":[{"type":"codeVoice","code":"Element"},{"text":" conforms to ","type":"text"},{"code":"Equatable","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]}},"doc://com.swallow.documentation.Compute/documentation/Compute/ContiguousArray/RandomAccessCollection-Implementations":{"kind":"article","type":"topic","title":"RandomAccessCollection Implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ContiguousArray\/RandomAccessCollection-Implementations","abstract":[],"url":"\/documentation\/compute\/contiguousarray\/randomaccesscollection-implementations","role":"collectionGroup"},"doc://com.swallow.documentation.Compute/documentation/Compute/ContiguousArray/Equatable-Implementations":{"role":"collectionGroup","type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ContiguousArray\/Equatable-Implementations","kind":"article","abstract":[],"title":"Equatable Implementations","url":"\/documentation\/compute\/contiguousarray\/equatable-implementations"},"doc://com.swallow.documentation.Compute/7Swallow21NonDestroyingSequenceP":{"type":"unresolvable","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow21NonDestroyingSequenceP","title":"Swallow.NonDestroyingSequence"},"doc://com.swallow.documentation.Compute/documentation/Compute/ContiguousArray/_HasContiguousBytes-Implementations":{"role":"collectionGroup","type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ContiguousArray\/_HasContiguousBytes-Implementations","kind":"article","abstract":[],"title":"_HasContiguousBytes Implementations","url":"\/documentation\/compute\/contiguousarray\/_hascontiguousbytes-implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/Collection":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Collection"}],"kind":"symbol","role":"symbol","type":"topic","url":"\/documentation\/compute\/collection","abstract":[{"type":"text","text":"A sequence whose elements can be traversed multiple times,"},{"type":"text","text":" "},{"text":"nondestructively, and accessed by an indexed subscript.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Collection"}],"title":"Collection","conformance":{"constraints":[{"code":"Element","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Copyable"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Escapable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]}},"doc://com.swallow.documentation.Compute/documentation/Compute/ContiguousArray":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ContiguousArray","url":"\/documentation\/compute\/contiguousarray","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ContiguousArray"}],"title":"ContiguousArray","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ContiguousArray"}],"role":"symbol","abstract":[{"text":"A contiguously stored array.","type":"text"}],"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/ContiguousArray/MutableContiguousStorage-Implementations":{"role":"collectionGroup","type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ContiguousArray\/MutableContiguousStorage-Implementations","kind":"article","abstract":[],"title":"MutableContiguousStorage Implementations","url":"\/documentation\/compute\/contiguousarray\/mutablecontiguousstorage-implementations"},"doc://com.swallow.documentation.Compute/7Swallow35NonDestroyingRandomAccessCollectionP":{"title":"Swallow.NonDestroyingRandomAccessCollection","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow35NonDestroyingRandomAccessCollectionP","type":"unresolvable"},"doc://com.swallow.documentation.Compute/documentation/Compute/ContiguousArray/CustomReflectable-Implementations":{"role":"collectionGroup","type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ContiguousArray\/CustomReflectable-Implementations","kind":"article","abstract":[],"title":"CustomReflectable Implementations","url":"\/documentation\/compute\/contiguousarray\/customreflectable-implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/Partializable":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Partializable","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Partializable"}],"kind":"symbol","role":"symbol","type":"topic","url":"\/documentation\/compute\/partializable","abstract":[{"text":"A type that can be formed by coalescing its partials.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Partializable"}],"title":"Partializable","conformance":{"constraints":[{"code":"Element","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Copyable"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Escapable"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]}},"doc://com.swallow.documentation.Compute/documentation/Compute/ContiguousArray/Collection-Implementations":{"abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ContiguousArray\/Collection-Implementations","url":"\/documentation\/compute\/contiguousarray\/collection-implementations","type":"topic","title":"Collection Implementations","role":"collectionGroup","kind":"article"}}}