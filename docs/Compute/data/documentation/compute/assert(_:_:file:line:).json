{"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"assert","kind":"identifier"},{"text":"(","kind":"text"},{"text":"@autoclosure ","kind":"attribute"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"attribute","text":"@autoclosure "},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":", "},{"text":"file","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"kind":"text","text":": "},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"text":")","kind":"text"}],"modules":[{"name":"Compute"}],"role":"symbol","roleHeading":"Function","externalID":"s:s6assert__4file4lineySbyXK_SSyXKs12StaticStringVSutF","symbolKind":"func","title":"assert(_:_:file:line:)"},"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/assert(_:_:file:line:)","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"patch":0,"minor":3},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/assert(_:_:file:line:)"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"assert"},{"kind":"text","text":"("},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"condition","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"attribute","text":"@autoclosure "},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bool","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":", "},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"message"},{"kind":"text","text":": "},{"text":"@autoclosure ","kind":"attribute"},{"kind":"text","text":"() -> "},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String","text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":" = String(), "},{"kind":"externalParam","text":"file"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV","text":"StaticString"},{"text":" = ","kind":"text"},{"kind":"keyword","text":"#file"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"text":"UInt","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"text":" = ","kind":"text"},{"kind":"keyword","text":"#line"},{"text":")","kind":"text"}]}]},{"parameters":[{"name":"condition","content":[{"type":"paragraph","inlineContent":[{"text":"The condition to test. ","type":"text"},{"type":"codeVoice","code":"condition"},{"type":"text","text":" is only evaluated in"},{"type":"text","text":" "},{"text":"playgrounds and ","type":"text"},{"type":"codeVoice","code":"-Onone"},{"text":" builds.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"A string to print if "},{"code":"condition","type":"codeVoice"},{"text":" is evaluated to ","type":"text"},{"code":"false","type":"codeVoice"},{"type":"text","text":". The"},{"type":"text","text":" "},{"text":"default is an empty string.","type":"text"}],"type":"paragraph"}],"name":"message"},{"name":"file","content":[{"type":"paragraph","inlineContent":[{"text":"The file name to print with ","type":"text"},{"code":"message","type":"codeVoice"},{"text":" if the assertion fails. The","type":"text"},{"type":"text","text":" "},{"text":"default is the file where ","type":"text"},{"type":"codeVoice","code":"assert(_:_:file:line:)"},{"type":"text","text":" is called."}]}]},{"name":"line","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The line number to print along with "},{"code":"message","type":"codeVoice"},{"type":"text","text":" if the assertion"},{"type":"text","text":" "},{"type":"text","text":"fails. The default is the line number where "},{"code":"assert(_:_:file:line:)","type":"codeVoice"},{"type":"text","text":" "},{"text":"is called.","type":"text"}]}]}],"kind":"parameters"},{"kind":"content","content":[{"level":2,"type":"heading","text":"Discussion","anchor":"discussion"},{"inlineContent":[{"text":"Use this function for internal consistency checks that are active during testing","type":"text"},{"type":"text","text":" "},{"type":"text","text":"but do not impact performance of shipping code. To check for invalid usage"},{"text":" ","type":"text"},{"text":"in Release builds, see ","type":"text"},{"code":"precondition(_:_:file:line:)","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"text":"In playgrounds and ","type":"text"},{"code":"-Onone","type":"codeVoice"},{"text":" builds (the default for Xcode’s Debug","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"configuration): If "},{"code":"condition","type":"codeVoice"},{"type":"text","text":" evaluates to "},{"code":"false","type":"codeVoice"},{"text":", stop program","type":"text"},{"type":"text","text":" "},{"type":"text","text":"execution in a debuggable state after printing "},{"type":"codeVoice","code":"message"},{"type":"text","text":"."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"In ","type":"text"},{"type":"codeVoice","code":"-O"},{"text":" builds (the default for Xcode’s Release configuration),","type":"text"},{"type":"text","text":" "},{"code":"condition","type":"codeVoice"},{"text":" is not evaluated, and there are no effects.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"In ","type":"text"},{"type":"codeVoice","code":"-Ounchecked"},{"type":"text","text":" builds, "},{"type":"codeVoice","code":"condition"},{"type":"text","text":" is not evaluated, but the optimizer"},{"type":"text","text":" "},{"type":"text","text":"may assume that it "},{"type":"emphasis","inlineContent":[{"type":"text","text":"always"}]},{"type":"text","text":" evaluates to "},{"type":"codeVoice","code":"true"},{"text":". Failure to satisfy that","type":"text"},{"text":" ","type":"text"},{"text":"assumption is a serious programming error.","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"}]}],"kind":"symbol","abstract":[{"text":"Performs a traditional C-style assert with an optional message.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute"]]},"sections":[],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/UInt":{"kind":"symbol","navigatorTitle":[{"text":"UInt","kind":"identifier"}],"type":"topic","title":"UInt","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt","abstract":[{"text":"An unsigned integer value type.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"UInt","kind":"identifier"}],"url":"\/documentation\/compute\/uint"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Bool":{"url":"\/documentation\/compute\/bool","role":"symbol","title":"Bool","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Bool","kind":"identifier"}],"abstract":[{"type":"text","text":"A value type whose instances are either "},{"type":"codeVoice","code":"true"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"false"},{"text":".","type":"text"}],"navigatorTitle":[{"text":"Bool","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bool","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/assert(_:_:file:line:)":{"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/assert(_:_:file:line:)","role":"symbol","url":"\/documentation\/compute\/assert(_:_:file:line:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"assert","kind":"identifier"},{"kind":"text","text":"("},{"kind":"attribute","text":"@autoclosure "},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"attribute","text":"@autoclosure "},{"text":"() -> ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"file"},{"text":": ","kind":"text"},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"},{"kind":"text","text":")"}],"abstract":[{"text":"Performs a traditional C-style assert with an optional message.","type":"text"}],"title":"assert(_:_:file:line:)","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/String":{"type":"topic","navigatorTitle":[{"kind":"identifier","text":"String"}],"title":"String","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"String","kind":"identifier"}],"abstract":[{"type":"text","text":"A Unicode string value that is a collection of characters."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String","kind":"symbol","role":"symbol","url":"\/documentation\/compute\/string"},"doc://com.swallow.documentation.Compute/documentation/Compute/StaticString":{"url":"\/documentation\/compute\/staticstring","navigatorTitle":[{"kind":"identifier","text":"StaticString"}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"StaticString"}],"abstract":[{"type":"text","text":"A string type designed to represent text that is known at compile time."}],"type":"topic","title":"StaticString","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/StaticString"}}}