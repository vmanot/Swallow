{"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"difference"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"C"},{"kind":"text","text":">("},{"text":"from","kind":"externalParam"},{"kind":"text","text":" "},{"text":"other","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"C"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CollectionDifference","text":"CollectionDifference","preciseIdentifier":"s:s20CollectionDifferenceV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","text":"Element"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"text":"C","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BidirectionalCollection","text":"BidirectionalCollection","preciseIdentifier":"s:SK"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":"."},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:ST7ElementQa"}]}]},{"parameters":[{"name":"other","content":[{"inlineContent":[{"type":"text","text":"The base state."}],"type":"paragraph"}]}],"kind":"parameters"},{"content":[{"anchor":"return-value","text":"Return Value","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The difference needed to produce this collection’s ordered"},{"text":" ","type":"text"},{"text":"elements from the given collection.","type":"text"}]}],"kind":"content"},{"content":[{"type":"heading","anchor":"discussion","text":"Discussion","level":2},{"inlineContent":[{"text":"This function does not infer element moves. If you need to infer moves,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"call the "},{"type":"codeVoice","code":"inferringMoves()"},{"type":"text","text":" method on the resulting difference."}],"type":"paragraph"},{"style":"note","name":"Complexity","type":"aside","content":[{"inlineContent":[{"type":"text","text":"Worst case performance is O("},{"type":"emphasis","inlineContent":[{"type":"text","text":"n"}]},{"text":" * ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"m","type":"text"}]},{"type":"text","text":"), where "},{"type":"emphasis","inlineContent":[{"type":"text","text":"n"}]},{"type":"text","text":" is the"},{"type":"text","text":" "},{"type":"text","text":"count of this collection and "},{"inlineContent":[{"type":"text","text":"m"}],"type":"emphasis"},{"type":"text","text":" is "},{"type":"codeVoice","code":"other.count"},{"type":"text","text":". You can expect"},{"text":" ","type":"text"},{"text":"faster execution when the collections share many common elements, or","type":"text"},{"type":"text","text":" "},{"type":"text","text":"if "},{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"text":".","type":"text"}],"type":"paragraph"}]}],"kind":"content"}],"abstract":[{"type":"text","text":"Returns the difference needed to produce this collection’s ordered"},{"type":"text","text":" "},{"type":"text","text":"elements from the given collection."}],"metadata":{"roleHeading":"Instance Method","externalID":"s:SKsSQ7ElementRpzrlE10difference4froms20CollectionDifferenceVyABGqd___tSKRd__AAQyd__ABRSlF::SYNTHESIZED::s:s21LazyDropWhileSequenceV","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Element","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Equatable","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"platforms":[{"introducedAt":"13.0","unavailable":false,"deprecated":false,"name":"iOS","beta":false},{"deprecated":false,"introducedAt":"10.15","unavailable":false,"beta":false,"name":"macOS"},{"introducedAt":"13.0","unavailable":false,"name":"tvOS","deprecated":false,"beta":false},{"name":"watchOS","deprecated":false,"introducedAt":"6.0","beta":false,"unavailable":false}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"difference","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"C"},{"kind":"text","text":">("},{"text":"from","kind":"externalParam"},{"kind":"text","text":": "},{"text":"C","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"CollectionDifference","preciseIdentifier":"s:s20CollectionDifferenceV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier"},{"kind":"text","text":">"}],"role":"symbol","extendedModule":"Swift","title":"difference(from:)","symbolKind":"method","modules":[{"relatedModules":["Swift"],"name":"Compute"}]},"schemaVersion":{"major":0,"patch":0,"minor":3},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/lazydropwhilesequence\/difference(from:)"]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyDropWhileSequence","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyDropWhileSequence\/BidirectionalCollection-Implementations"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyDropWhileSequence\/difference(from:)"},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/LazyDropWhileSequence/difference(from:)":{"kind":"symbol","url":"\/documentation\/compute\/lazydropwhilesequence\/difference(from:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyDropWhileSequence\/difference(from:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"difference"},{"text":"<","kind":"text"},{"text":"C","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"from","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"CollectionDifference","preciseIdentifier":"s:s20CollectionDifferenceV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Returns the difference needed to produce this collection’s ordered"},{"text":" ","type":"text"},{"type":"text","text":"elements from the given collection."}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Element","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Equatable"},{"text":".","type":"text"}]},"type":"topic","role":"symbol","title":"difference(from:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/CollectionDifference":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CollectionDifference","kind":"identifier"}],"url":"\/documentation\/compute\/collectiondifference","type":"topic","title":"CollectionDifference","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"CollectionDifference"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CollectionDifference","abstract":[{"type":"text","text":"A collection of insertions and removals that describe the difference"},{"text":" ","type":"text"},{"text":"between two ordered collection states.","type":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/LazyDropWhileSequence/BidirectionalCollection-Implementations":{"type":"topic","kind":"article","abstract":[],"role":"collectionGroup","url":"\/documentation\/compute\/lazydropwhilesequence\/bidirectionalcollection-implementations","title":"BidirectionalCollection Implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyDropWhileSequence\/BidirectionalCollection-Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/BidirectionalCollection":{"navigatorTitle":[{"text":"BidirectionalCollection","kind":"identifier"}],"abstract":[{"text":"A collection that supports backward as well as forward traversal.","type":"text"}],"title":"BidirectionalCollection","kind":"symbol","url":"\/documentation\/compute\/bidirectionalcollection","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"BidirectionalCollection"}],"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BidirectionalCollection","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/LazyDropWhileSequence":{"abstract":[{"type":"text","text":"A sequence whose elements consist of the elements that follow the initial"},{"type":"text","text":" "},{"type":"text","text":"consecutive elements of some base sequence that satisfy a given predicate."}],"role":"symbol","navigatorTitle":[{"text":"LazyDropWhileSequence","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"LazyDropWhileSequence"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyDropWhileSequence","type":"topic","title":"LazyDropWhileSequence","url":"\/documentation\/compute\/lazydropwhilesequence"},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence/Element":{"type":"topic","required":true,"abstract":[{"type":"text","text":"A type representing the sequence’s elements."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"symbol","url":"\/documentation\/compute\/sequence\/element","role":"symbol","title":"Element","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"identifier"}]}}}