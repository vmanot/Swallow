{"sections":[],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"subscript"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"between"},{"kind":"text","text":" "},{"text":"range","kind":"internalParam"},{"kind":"text","text":": "},{"text":"Range","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Range","preciseIdentifier":"s:Sn"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Int","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","preciseIdentifier":"s:Si"},{"text":">) -> ","kind":"text"},{"text":"PrefixSequence","kind":"typeIdentifier","preciseIdentifier":"s:s14PrefixSequenceV","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/PrefixSequence"},{"kind":"text","text":"<"},{"text":"DropFirstSequence","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/DropFirstSequence","preciseIdentifier":"s:s17DropFirstSequenceV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">> { ","kind":"text"},{"kind":"keyword","text":"get"},{"text":" }","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/lazydropwhilesequence\/subscript(between:)"]}],"kind":"symbol","metadata":{"title":"subscript(between:)","extendedModule":"Swift","role":"symbol","modules":[{"name":"Compute","relatedModules":["Swift"]}],"symbolKind":"subscript","externalID":"s:ST20_SwallowSwiftOverlayE7betweens14PrefixSequenceVys09DropFirstF0VyxGGSnySiG_tcip::SYNTHESIZED::s:s21LazyDropWhileSequenceV","roleHeading":"Instance Subscript","fragments":[{"text":"subscript","kind":"keyword"},{"text":"(","kind":"text"},{"text":"between","kind":"externalParam"},{"text":" _: ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","text":"Range"},{"kind":"text","text":"<"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"text":"PrefixSequence","kind":"typeIdentifier","preciseIdentifier":"s:s14PrefixSequenceV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"DropFirstSequence","preciseIdentifier":"s:s17DropFirstSequenceV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">>","kind":"text"}]},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyDropWhileSequence","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyDropWhileSequence\/Sequence-Implementations"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyDropWhileSequence\/subscript(between:)"},"schemaVersion":{"patch":0,"minor":3,"major":0},"abstract":[{"text":"Inherited from ","type":"text"},{"type":"codeVoice","code":"Sequence.subscript(between:)"},{"text":".","type":"text"}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Int":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","abstract":[{"type":"text","text":"A signed integer value type."}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Int","kind":"identifier"}],"navigatorTitle":[{"text":"Int","kind":"identifier"}],"title":"Int","url":"\/documentation\/compute\/int","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/LazyDropWhileSequence":{"abstract":[{"type":"text","text":"A sequence whose elements consist of the elements that follow the initial"},{"type":"text","text":" "},{"type":"text","text":"consecutive elements of some base sequence that satisfy a given predicate."}],"role":"symbol","navigatorTitle":[{"text":"LazyDropWhileSequence","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"LazyDropWhileSequence"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyDropWhileSequence","type":"topic","title":"LazyDropWhileSequence","url":"\/documentation\/compute\/lazydropwhilesequence"},"doc://com.swallow.documentation.Compute/documentation/Compute/LazyDropWhileSequence/subscript(between:)":{"role":"symbol","type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyDropWhileSequence\/subscript(between:)","title":"subscript(between:)","fragments":[{"text":"subscript","kind":"keyword"},{"kind":"text","text":"("},{"kind":"externalParam","text":"between"},{"kind":"text","text":" _: "},{"text":"Range","kind":"typeIdentifier","preciseIdentifier":"s:Sn"},{"text":"<","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","text":"PrefixSequence","preciseIdentifier":"s:s14PrefixSequenceV"},{"text":"<","kind":"text"},{"text":"DropFirstSequence","kind":"typeIdentifier","preciseIdentifier":"s:s17DropFirstSequenceV"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">>"}],"kind":"symbol","abstract":[],"url":"\/documentation\/compute\/lazydropwhilesequence\/subscript(between:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/Range":{"kind":"symbol","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Range","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Range","url":"\/documentation\/compute\/range","abstract":[{"text":"A half-open interval from a lower bound up to, but not including, an upper","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"bound."}],"navigatorTitle":[{"text":"Range","kind":"identifier"}],"title":"Range"},"doc://com.swallow.documentation.Compute/documentation/Compute/LazyDropWhileSequence/Sequence-Implementations":{"role":"collectionGroup","type":"topic","kind":"article","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyDropWhileSequence\/Sequence-Implementations","url":"\/documentation\/compute\/lazydropwhilesequence\/sequence-implementations","title":"Sequence Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/PrefixSequence":{"url":"\/documentation\/compute\/prefixsequence","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/PrefixSequence","role":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PrefixSequence","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"PrefixSequence"}],"title":"PrefixSequence","abstract":[{"type":"text","text":"A sequence that only consumes up to "},{"type":"codeVoice","code":"n"},{"type":"text","text":" elements from an underlying"},{"text":" ","type":"text"},{"type":"codeVoice","code":"Base"},{"text":" iterator.","type":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/DropFirstSequence":{"abstract":[{"type":"text","text":"A sequence that lazily consumes and drops "},{"type":"codeVoice","code":"n"},{"type":"text","text":" elements from an underlying"},{"text":" ","type":"text"},{"code":"Base","type":"codeVoice"},{"type":"text","text":" iterator before possibly returning the first available element."}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"DropFirstSequence"}],"type":"topic","role":"symbol","url":"\/documentation\/compute\/dropfirstsequence","navigatorTitle":[{"kind":"identifier","text":"DropFirstSequence"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/DropFirstSequence","title":"DropFirstSequence","kind":"symbol"}}}