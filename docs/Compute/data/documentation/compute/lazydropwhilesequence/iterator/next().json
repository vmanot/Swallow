{"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"mutating"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"next","kind":"identifier"},{"kind":"text","text":"() -> "},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyDropWhileSequence","preciseIdentifier":"s:s21LazyDropWhileSequenceV","text":"LazyDropWhileSequence","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Base"},{"kind":"text","text":">."},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyDropWhileSequence\/Iterator","preciseIdentifier":"s:s21LazyDropWhileSequenceV8IteratorV","text":"Iterator"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"content","content":[{"text":"Return Value","type":"heading","level":2,"anchor":"return-value"},{"inlineContent":[{"text":"The next element in the underlying sequence, if a next element","type":"text"},{"type":"text","text":" "},{"text":"exists; otherwise, ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}]},{"content":[{"level":2,"anchor":"discussion","type":"heading","text":"Discussion"},{"inlineContent":[{"type":"text","text":"Repeatedly calling this method returns, in order, all the elements of the"},{"type":"text","text":" "},{"text":"underlying sequence. As soon as the sequence has run out of elements, all","type":"text"},{"type":"text","text":" "},{"text":"subsequent calls return ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"You must not call this method if any other copy of this iterator has been"},{"text":" ","type":"text"},{"type":"text","text":"advanced with a call to its "},{"type":"codeVoice","code":"next()"},{"type":"text","text":" method."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The following example shows how an iterator can be used explicitly to"},{"type":"text","text":" "},{"type":"text","text":"emulate a "},{"type":"codeVoice","code":"for"},{"type":"text","text":"-"},{"code":"in","type":"codeVoice"},{"text":" loop. First, retrieve a sequence’s iterator, and","type":"text"},{"text":" ","type":"text"},{"text":"then call the iterator’s ","type":"text"},{"type":"codeVoice","code":"next()"},{"text":" method until it returns ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."}]},{"code":["let numbers = [2, 3, 5, 7]","var numbersIterator = numbers.makeIterator()","","while let num = numbersIterator.next() {","    print(num)","}","\/\/ Prints \"2\"","\/\/ Prints \"3\"","\/\/ Prints \"5\"","\/\/ Prints \"7\""],"type":"codeListing","syntax":null}],"kind":"content"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyDropWhileSequence\/Iterator\/next()"},"metadata":{"symbolKind":"method","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Base","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Sequence"},{"text":".","type":"text"}]},"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"next","kind":"identifier"},{"kind":"text","text":"() -> "},{"text":"LazyDropWhileSequence","kind":"typeIdentifier","preciseIdentifier":"s:s21LazyDropWhileSequenceV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Base"},{"text":">.","kind":"text"},{"text":"Iterator","kind":"typeIdentifier","preciseIdentifier":"s:s21LazyDropWhileSequenceV8IteratorV"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"roleHeading":"Instance Method","externalID":"s:s21LazyDropWhileSequenceV8IteratorV4next7ElementQzSgyF","role":"symbol","extendedModule":"Swift","modules":[{"relatedModules":["Swift"],"name":"Compute"}],"title":"next()"},"abstract":[{"text":"Advances to the next element and returns it, or ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":" if no next element"},{"type":"text","text":" "},{"type":"text","text":"exists."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/lazydropwhilesequence\/iterator\/next()"]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyDropWhileSequence","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyDropWhileSequence\/Sequence-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyDropWhileSequence\/Iterator","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyDropWhileSequence\/Iterator\/IteratorProtocol-Implementations"]]},"kind":"symbol","references":{"doc://com.swallow.documentation.Compute/documentation/Compute/LazyDropWhileSequence/Iterator/next()":{"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"next"},{"text":"() -> ","kind":"text"},{"text":"LazyDropWhileSequence","preciseIdentifier":"s:s21LazyDropWhileSequenceV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Base","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"text":"Iterator","preciseIdentifier":"s:s21LazyDropWhileSequenceV8IteratorV","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":"?"}],"url":"\/documentation\/compute\/lazydropwhilesequence\/iterator\/next()","abstract":[{"text":"Advances to the next element and returns it, or ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":" if no next element","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"exists."}],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Base"},{"type":"text","text":" conforms to "},{"code":"Sequence","type":"codeVoice"},{"type":"text","text":"."}]},"title":"next()","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyDropWhileSequence\/Iterator\/next()","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/LazyDropWhileSequence/Sequence-Implementations":{"role":"collectionGroup","type":"topic","kind":"article","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyDropWhileSequence\/Sequence-Implementations","url":"\/documentation\/compute\/lazydropwhilesequence\/sequence-implementations","title":"Sequence Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/LazyDropWhileSequence":{"abstract":[{"type":"text","text":"A sequence whose elements consist of the elements that follow the initial"},{"type":"text","text":" "},{"type":"text","text":"consecutive elements of some base sequence that satisfy a given predicate."}],"role":"symbol","navigatorTitle":[{"text":"LazyDropWhileSequence","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"LazyDropWhileSequence"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyDropWhileSequence","type":"topic","title":"LazyDropWhileSequence","url":"\/documentation\/compute\/lazydropwhilesequence"},"doc://com.swallow.documentation.Compute/documentation/Compute/LazyDropWhileSequence/Iterator":{"url":"\/documentation\/compute\/lazydropwhilesequence\/iterator","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Iterator","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"Iterator"}],"role":"symbol","abstract":[{"text":"An iterator over the elements traversed by a base iterator that follow the","type":"text"},{"type":"text","text":" "},{"text":"initial consecutive elements that satisfy a given predicate.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyDropWhileSequence\/Iterator","title":"LazyDropWhileSequence.Iterator","type":"topic","kind":"symbol","conformance":{"constraints":[{"type":"codeVoice","code":"Base"},{"type":"text","text":" conforms to "},{"code":"Sequence","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]}},"doc://com.swallow.documentation.Compute/documentation/Compute/LazyDropWhileSequence/Iterator/IteratorProtocol-Implementations":{"url":"\/documentation\/compute\/lazydropwhilesequence\/iterator\/iteratorprotocol-implementations","role":"collectionGroup","title":"IteratorProtocol Implementations","abstract":[],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyDropWhileSequence\/Iterator\/IteratorProtocol-Implementations","kind":"article"}}}