{"variants":[{"paths":["\/documentation\/compute\/unsafemutablerawpointer\/advanced(by:)"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"symbolKind":"method","title":"advanced(by:)","roleHeading":"Instance Method","modules":[{"relatedModules":["Swift"],"name":"Compute"}],"externalID":"s:Sv8advanced2bySvSi_tF","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"advanced"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"by"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"UnsafeMutableRawPointer","preciseIdentifier":"s:Sv"}],"role":"symbol","extendedModule":"Swift"},"schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableRawPointer\/advanced(by:)"},"abstract":[{"text":"Returns a value that is offset the specified distance from this value.","type":"text"}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"advanced"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"by"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"n"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","kind":"typeIdentifier","text":"Int"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sv","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableRawPointer","text":"UnsafeMutableRawPointer"}]}]},{"kind":"parameters","parameters":[{"name":"n","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The distance to advance this value."}]}]}]},{"content":[{"level":2,"type":"heading","anchor":"return-value","text":"Return Value"},{"inlineContent":[{"text":"A value that is offset from this value by ","type":"text"},{"type":"codeVoice","code":"n"},{"text":".","type":"text"}],"type":"paragraph"}],"kind":"content"},{"kind":"content","content":[{"anchor":"discussion","text":"Discussion","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"Use the "},{"type":"codeVoice","code":"advanced(by:)"},{"type":"text","text":" method in generic code to offset a value by a"},{"text":" ","type":"text"},{"text":"specified distance. If you’re working directly with numeric values, use","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the addition operator ("},{"type":"codeVoice","code":"+"},{"type":"text","text":") instead of this method."}],"type":"paragraph"},{"syntax":null,"code":["func addOne<T: Strideable>(to x: T) -> T","    where T.Stride: ExpressibleByIntegerLiteral","{","    return x.advanced(by: 1)","}","","let x = addOne(to: 5)","\/\/ x == 6","let y = addOne(to: 3.5)","\/\/ y = 4.5"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If this type’s "},{"type":"codeVoice","code":"Stride"},{"text":" type conforms to ","type":"text"},{"code":"BinaryInteger","type":"codeVoice"},{"type":"text","text":", then for a"},{"text":" ","type":"text"},{"type":"text","text":"value "},{"type":"codeVoice","code":"x"},{"type":"text","text":", a distance "},{"type":"codeVoice","code":"n"},{"type":"text","text":", and a value "},{"type":"codeVoice","code":"y = x.advanced(by: n)"},{"type":"text","text":","},{"text":" ","type":"text"},{"code":"x.distance(to: y) == n","type":"codeVoice"},{"type":"text","text":". Using this method with types that have a"},{"text":" ","type":"text"},{"type":"text","text":"noninteger "},{"code":"Stride","type":"codeVoice"},{"text":" may result in an approximation. If the result of","type":"text"},{"text":" ","type":"text"},{"text":"advancing by ","type":"text"},{"type":"codeVoice","code":"n"},{"type":"text","text":" is not representable as a value of this type, then a"},{"text":" ","type":"text"},{"text":"runtime error may occur.","type":"text"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"O(1)","type":"text"}]}],"name":"Complexity","style":"note","type":"aside"}]}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableRawPointer","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableRawPointer\/Strideable-Implementations"]]},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeMutableRawPointer":{"kind":"symbol","type":"topic","abstract":[{"text":"A raw pointer for accessing and manipulating untyped data.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableRawPointer","url":"\/documentation\/compute\/unsafemutablerawpointer","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"UnsafeMutableRawPointer"}],"title":"UnsafeMutableRawPointer","navigatorTitle":[{"kind":"identifier","text":"UnsafeMutableRawPointer"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Int":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","abstract":[{"type":"text","text":"A signed integer value type."}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Int","kind":"identifier"}],"navigatorTitle":[{"text":"Int","kind":"identifier"}],"title":"Int","url":"\/documentation\/compute\/int","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeMutableRawPointer/advanced(by:)":{"kind":"symbol","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"advanced","kind":"identifier"},{"text":"(","kind":"text"},{"text":"by","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sv","text":"UnsafeMutableRawPointer"}],"url":"\/documentation\/compute\/unsafemutablerawpointer\/advanced(by:)","title":"advanced(by:)","abstract":[{"type":"text","text":"Returns a value that is offset the specified distance from this value."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableRawPointer\/advanced(by:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeMutableRawPointer/Strideable-Implementations":{"abstract":[],"role":"collectionGroup","title":"Strideable Implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableRawPointer\/Strideable-Implementations","type":"topic","url":"\/documentation\/compute\/unsafemutablerawpointer\/strideable-implementations","kind":"article"}}}