{"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"modules":[{"relatedModules":["Swift"],"name":"Compute"}],"role":"symbol","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"initializeMemory"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"as"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":".Type, ","kind":"text"},{"text":"to","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"consuming","kind":"keyword"},{"kind":"text","text":" "},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"UnsafeMutablePointer","kind":"typeIdentifier","preciseIdentifier":"s:Sp"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":">"}],"symbolKind":"method","extendedModule":"Swift","externalID":"s:Sv16initializeMemory2as2toSpyxGxm_xntRi_zlF","title":"initializeMemory(as:to:)"},"abstract":[{"text":"Initializes the memory referenced by this pointer with the given value,","type":"text"},{"text":" ","type":"text"},{"text":"binds the memory to the value’s type, and returns a typed pointer to the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"initialized memory."}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"attribute","text":"@discardableResult"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"initializeMemory"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"as","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"type"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":".Type, "},{"text":"to","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"value","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"keyword","text":"consuming"},{"text":" ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutablePointer","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"T","kind":"typeIdentifier"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":" : ~Copyable"}]}],"kind":"declarations"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The type to which this memory will be bound."}]}],"name":"type"},{"name":"value","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The value used to initialize this memory."}]}]}],"kind":"parameters"},{"content":[{"level":2,"text":"Return Value","type":"heading","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"text":"A typed pointer to the memory referenced by this raw pointer.","type":"text"}]}],"kind":"content"},{"content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"inlineContent":[{"type":"text","text":"The memory referenced by this pointer must be uninitialized or"},{"text":" ","type":"text"},{"text":"initialized to a trivial type, and must be properly aligned for","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"accessing "},{"code":"T","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"The following example allocates raw memory for one instance of ","type":"text"},{"code":"UInt","type":"codeVoice"},{"text":",","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and then uses the "},{"code":"initializeMemory(as:to:)","type":"codeVoice"},{"type":"text","text":" method"},{"text":" ","type":"text"},{"text":"to initialize the allocated memory.","type":"text"}]},{"type":"codeListing","code":["let bytePointer = UnsafeMutableRawPointer.allocate(","        byteCount: MemoryLayout<UInt>.stride,","        alignment: MemoryLayout<UInt>.alignment)","let int8Pointer = bytePointer.initializeMemory(as: UInt.self, to: 0)","","\/\/ After using 'int8Pointer':","int8Pointer.deallocate()"],"syntax":null},{"inlineContent":[{"type":"text","text":"After calling this method on a raw pointer "},{"code":"p","type":"codeVoice"},{"text":", the region starting at","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"self"},{"text":" and continuing up to ","type":"text"},{"type":"codeVoice","code":"p + MemoryLayout<T>.stride"},{"text":" is bound","type":"text"},{"type":"text","text":" "},{"type":"text","text":"to type "},{"code":"T","type":"codeVoice"},{"type":"text","text":" and initialized. If "},{"type":"codeVoice","code":"T"},{"text":" is a nontrivial type, you must","type":"text"},{"type":"text","text":" "},{"text":"eventually deinitialize the memory in this region to avoid memory leaks.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableRawPointer\/initializeMemory(as:to:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableRawPointer"]]},"variants":[{"paths":["\/documentation\/compute\/unsafemutablerawpointer\/initializememory(as:to:)"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"kind":"symbol","references":{"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeMutablePointer":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutablePointer","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"UnsafeMutablePointer"}],"url":"\/documentation\/compute\/unsafemutablepointer","type":"topic","abstract":[{"type":"text","text":"A pointer for accessing and manipulating data of a"},{"text":" ","type":"text"},{"text":"specific type.","type":"text"}],"kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"UnsafeMutablePointer"}],"title":"UnsafeMutablePointer"},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeMutableRawPointer/initializeMemory(as:to:)":{"type":"topic","url":"\/documentation\/compute\/unsafemutablerawpointer\/initializememory(as:to:)","title":"initializeMemory(as:to:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableRawPointer\/initializeMemory(as:to:)","role":"symbol","abstract":[{"text":"Initializes the memory referenced by this pointer with the given value,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"binds the memory to the value’s type, and returns a typed pointer to the"},{"type":"text","text":" "},{"text":"initialized memory.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"initializeMemory","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"as"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":".Type, ","kind":"text"},{"kind":"externalParam","text":"to"},{"text":": ","kind":"text"},{"text":"consuming","kind":"keyword"},{"text":" ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">","kind":"text"}],"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeMutableRawPointer":{"kind":"symbol","type":"topic","abstract":[{"text":"A raw pointer for accessing and manipulating untyped data.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableRawPointer","url":"\/documentation\/compute\/unsafemutablerawpointer","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"UnsafeMutableRawPointer"}],"title":"UnsafeMutableRawPointer","navigatorTitle":[{"kind":"identifier","text":"UnsafeMutableRawPointer"}]}}}