{"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableRawPointer"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableRawPointer\/loadUnaligned(fromByteOffset:as:)-4br03"},"schemaVersion":{"patch":0,"major":0,"minor":3},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/unsafemutablerawpointer\/loadunaligned(frombyteoffset:as:)-4br03"]}],"abstract":[{"type":"text","text":"Returns a new instance of the given type, constructed from the raw memory"},{"type":"text","text":" "},{"type":"text","text":"at the specified offset."}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"loadUnaligned","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"fromByteOffset"},{"kind":"text","text":" "},{"kind":"internalParam","text":"offset"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","text":"Int","kind":"typeIdentifier"},{"text":" = 0, ","kind":"text"},{"text":"as","kind":"externalParam"},{"kind":"text","text":" "},{"text":"type","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":".Type) -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}]}],"kind":"declarations"},{"parameters":[{"name":"offset","content":[{"inlineContent":[{"text":"The offset from this pointer, in bytes. ","type":"text"},{"code":"offset","type":"codeVoice"},{"type":"text","text":" must be"},{"text":" ","type":"text"},{"text":"nonnegative. The default is zero.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"The type of the instance to create.","type":"text"}]}],"name":"type"}],"kind":"parameters"},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"return-value","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A new instance of type "},{"type":"codeVoice","code":"T"},{"type":"text","text":", read from the raw bytes at"},{"text":" ","type":"text"},{"code":"offset","type":"codeVoice"},{"text":". The returned instance isnâ€™t associated","type":"text"},{"type":"text","text":" "},{"type":"text","text":"with the value in the range of memory referenced by this pointer."}]}]},{"content":[{"level":2,"text":"Discussion","type":"heading","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"This function only supports loading trivial types,","type":"text"},{"type":"text","text":" "},{"text":"and will trap if this precondition is not met.","type":"text"},{"text":" ","type":"text"},{"text":"A trivial type does not contain any reference-counted property","type":"text"},{"text":" ","type":"text"},{"text":"within its in-memory representation.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"The memory at this pointer plus "},{"type":"codeVoice","code":"offset"},{"text":" must be laid out","type":"text"},{"text":" ","type":"text"},{"text":"identically to the in-memory representation of ","type":"text"},{"type":"codeVoice","code":"T"},{"text":".","type":"text"}]},{"style":"note","name":"Note","content":[{"type":"paragraph","inlineContent":[{"text":"A trivial type can be copied with just a bit-for-bit copy without","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"any indirection or reference-counting operations. Generally, native"},{"type":"text","text":" "},{"text":"Swift types that do not contain strong or weak references or other","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"forms of indirection are trivial, as are imported C structs and enums."}]}],"type":"aside"}],"kind":"content"}],"sections":[],"metadata":{"roleHeading":"Instance Method","modules":[{"relatedModules":["Swift"],"name":"Compute"}],"extendedModule":"Swift","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"loadUnaligned"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"fromByteOffset","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"as"},{"kind":"text","text":": "},{"text":"T","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"role":"symbol","title":"loadUnaligned(fromByteOffset:as:)","symbolKind":"method","externalID":"s:Sv13loadUnaligned14fromByteOffset2asxSi_xmtlF"},"kind":"symbol","references":{"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","abstract":[{"type":"text","text":"A signed integer value type."}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Int","kind":"identifier"}],"navigatorTitle":[{"text":"Int","kind":"identifier"}],"title":"Int","url":"\/documentation\/compute\/int","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeMutableRawPointer/loadUnaligned(fromByteOffset:as:)-4br03":{"type":"topic","url":"\/documentation\/compute\/unsafemutablerawpointer\/loadunaligned(frombyteoffset:as:)-4br03","title":"loadUnaligned(fromByteOffset:as:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableRawPointer\/loadUnaligned(fromByteOffset:as:)-4br03","role":"symbol","abstract":[{"text":"Returns a new instance of the given type, constructed from the raw memory","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"at the specified offset."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"loadUnaligned"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"fromByteOffset","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"as"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeMutableRawPointer":{"kind":"symbol","type":"topic","abstract":[{"text":"A raw pointer for accessing and manipulating untyped data.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableRawPointer","url":"\/documentation\/compute\/unsafemutablerawpointer","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"UnsafeMutableRawPointer"}],"title":"UnsafeMutableRawPointer","navigatorTitle":[{"kind":"identifier","text":"UnsafeMutableRawPointer"}]}}}