{"kind":"symbol","schemaVersion":{"minor":3,"patch":0,"major":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"map","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"NewSuccess"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"text":"transform","kind":"internalParam"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"Success"},{"text":") -> ","kind":"text"},{"text":"NewSuccess","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Result","preciseIdentifier":"s:s6ResultO","text":"Result"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"NewSuccess"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Failure"},{"text":"> ","kind":"text"},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"NewSuccess"},{"text":" : ~Copyable","kind":"text"}]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A closure that takes the success value of this"},{"text":" ","type":"text"},{"type":"text","text":"instance."}]}],"name":"transform"}]},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"return-value","text":"Return Value"},{"inlineContent":[{"type":"text","text":"A "},{"code":"Result","type":"codeVoice"},{"text":" instance with the result of evaluating ","type":"text"},{"code":"transform","type":"codeVoice"},{"text":" ","type":"text"},{"text":"as the new success value if this instance represents a success.","type":"text"}],"type":"paragraph"}]},{"kind":"content","content":[{"level":2,"text":"Discussion","anchor":"discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"Use this method when you need to transform the value of a ","type":"text"},{"type":"codeVoice","code":"Result"},{"text":" ","type":"text"},{"type":"text","text":"instance when it represents a success. The following example transforms"},{"text":" ","type":"text"},{"type":"text","text":"the integer success value of a result into a string:"}]},{"type":"codeListing","syntax":null,"code":["func getNextInteger() -> Result<Int, Error> { \/* ... *\/ }","","let integerResult = getNextInteger()","\/\/ integerResult == .success(5)","let stringResult = integerResult.map { String($0) }","\/\/ stringResult == .success(\"5\")"]}]}],"metadata":{"extendedModule":"Swift","title":"map(_:)","role":"symbol","externalID":"s:s6ResultO3mapyAByqd__q_Gqd__xXERi_d__lF","roleHeading":"Instance Method","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Failure"},{"text":" conforms to ","type":"text"},{"code":"Error","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"map","kind":"identifier"},{"text":"<","kind":"text"},{"text":"NewSuccess","kind":"genericParameter"},{"kind":"text","text":">(("},{"text":"Success","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"NewSuccess","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Result","kind":"typeIdentifier","preciseIdentifier":"s:s6ResultO"},{"kind":"text","text":"<"},{"text":"NewSuccess","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Failure"},{"text":">","kind":"text"}],"modules":[{"name":"Compute","relatedModules":["Swift"]}],"symbolKind":"method"},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Result"]]},"sections":[],"abstract":[{"type":"text","text":"Returns a new result, mapping any success value using the given"},{"type":"text","text":" "},{"type":"text","text":"transformation."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/result\/map(_:)"]}],"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Result\/map(_:)","interfaceLanguage":"swift"},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Result/map(_:)":{"kind":"symbol","abstract":[{"text":"Returns a new result, mapping any success value using the given","type":"text"},{"type":"text","text":" "},{"text":"transformation.","type":"text"}],"url":"\/documentation\/compute\/result\/map(_:)","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Failure"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Error"},{"text":".","type":"text"}]},"role":"symbol","type":"topic","title":"map(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"map"},{"text":"<","kind":"text"},{"text":"NewSuccess","kind":"genericParameter"},{"text":">((","kind":"text"},{"text":"Success","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"NewSuccess","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:s6ResultO","kind":"typeIdentifier","text":"Result"},{"kind":"text","text":"<"},{"text":"NewSuccess","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Failure","kind":"typeIdentifier"},{"kind":"text","text":">"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Result\/map(_:)"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Result":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Result","kind":"symbol","abstract":[{"type":"text","text":"A value that represents either a success or a failure, including an"},{"type":"text","text":" "},{"type":"text","text":"associated value in each case."}],"role":"symbol","title":"Result","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"Result","kind":"identifier"}],"navigatorTitle":[{"text":"Result","kind":"identifier"}],"url":"\/documentation\/compute\/result","type":"topic"}}}