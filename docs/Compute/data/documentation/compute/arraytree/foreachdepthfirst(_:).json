{"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArrayTree\/forEachDepthFirst(_:)","interfaceLanguage":"swift"},"kind":"symbol","sections":[],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"forEachDepthFirst"},{"kind":"text","text":"("},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"body"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/TreeProtocol\/TreeValue","text":"TreeValue","preciseIdentifier":"s:7Compute12TreeProtocolP0B5ValueQa"},{"text":") -> ","kind":"text"},{"text":"Void","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":")","kind":"text"}],"platforms":["macOS"]}],"kind":"declarations"}],"abstract":[{"type":"text","text":"Inherited from "},{"code":"RecursiveTreeProtocol.forEachDepthFirst(_:)","type":"codeVoice"},{"text":".","type":"text"}],"variants":[{"paths":["\/documentation\/compute\/arraytree\/foreachdepthfirst(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"symbolKind":"method","role":"symbol","externalID":"s:7Compute21RecursiveTreeProtocolPAAE17forEachDepthFirstyyy0C5ValueQzXEF::SYNTHESIZED::s:7Compute9ArrayTreeV","roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"forEachDepthFirst"},{"kind":"text","text":"(("},{"preciseIdentifier":"s:7Compute12TreeProtocolP0B5ValueQa","text":"TreeValue","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"text":")","kind":"text"}],"extendedModule":"Compute","modules":[{"name":"Compute"}],"title":"forEachDepthFirst(_:)"},"schemaVersion":{"patch":0,"minor":3,"major":0},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArrayTree","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArrayTree\/RecursiveTreeProtocol-Implementations"]]},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/TreeProtocol/TreeValue":{"url":"\/documentation\/compute\/treeprotocol\/treevalue","type":"topic","title":"TreeValue","fragments":[{"text":"associatedtype","kind":"keyword"},{"kind":"text","text":" "},{"text":"TreeValue","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/TreeProtocol\/TreeValue","kind":"symbol","abstract":[{"text":"The type of value stored in each node of the tree.","type":"text"}],"required":true,"role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/ArrayTree/forEachDepthFirst(_:)":{"kind":"symbol","title":"forEachDepthFirst(_:)","type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArrayTree\/forEachDepthFirst(_:)","role":"symbol","url":"\/documentation\/compute\/arraytree\/foreachdepthfirst(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"forEachDepthFirst"},{"text":"((","kind":"text"},{"preciseIdentifier":"s:7Compute12TreeProtocolP0B5ValueQa","text":"TreeValue","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":")","kind":"text"}],"abstract":[]},"doc://com.swallow.documentation.Compute/documentation/Compute/Void":{"abstract":[{"text":"The return type of functions that donâ€™t explicitly specify a return type,","type":"text"},{"text":" ","type":"text"},{"text":"that is, an empty tuple ","type":"text"},{"type":"codeVoice","code":"()"},{"type":"text","text":"."}],"type":"topic","title":"Void","url":"\/documentation\/compute\/void","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Void"}],"navigatorTitle":[{"text":"Void","kind":"identifier"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Void"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/ArrayTree":{"url":"\/documentation\/compute\/arraytree","type":"topic","title":"ArrayTree","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"ArrayTree","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArrayTree","kind":"symbol","abstract":[],"role":"symbol","navigatorTitle":[{"text":"ArrayTree","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/ArrayTree/RecursiveTreeProtocol-Implementations":{"title":"RecursiveTreeProtocol Implementations","url":"\/documentation\/compute\/arraytree\/recursivetreeprotocol-implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArrayTree\/RecursiveTreeProtocol-Implementations","type":"topic","kind":"article","abstract":[],"role":"collectionGroup"}}}