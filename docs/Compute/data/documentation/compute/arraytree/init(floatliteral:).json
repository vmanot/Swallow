{"metadata":{"title":"init(floatLiteral:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"floatLiteral"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"T","preciseIdentifier":"s:7Compute9ArrayTreeVAAs25ExpressibleByFloatLiteralRzlE1Txmfp"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s25ExpressibleByFloatLiteralP0cD4TypeQa","text":"FloatLiteralType"},{"text":")","kind":"text"}],"modules":[{"name":"Compute"}],"extendedModule":"Compute","externalID":"s:7Compute9ArrayTreeVAAs25ExpressibleByFloatLiteralRzlE05floatG0ACyxG0fG4TypeQz_tcfc","roleHeading":"Initializer","symbolKind":"init","role":"symbol","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"T"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"ExpressibleByFloatLiteral"},{"type":"text","text":"."}]}},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"floatLiteral"},{"kind":"text","text":" "},{"text":"value","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T","preciseIdentifier":"s:7Compute9ArrayTreeVAAs25ExpressibleByFloatLiteralRzlE1Txmfp"},{"kind":"text","text":"."},{"text":"FloatLiteralType","preciseIdentifier":"s:s25ExpressibleByFloatLiteralP0cD4TypeQa","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ExpressibleByFloatLiteral\/FloatLiteralType"},{"text":")","kind":"text"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The value to create."}]}],"name":"value"}]},{"content":[{"text":"Discussion","type":"heading","anchor":"discussion","level":2},{"inlineContent":[{"text":"Do not call this initializer directly. Instead, initialize a variable or","type":"text"},{"type":"text","text":" "},{"text":"constant using a floating-point literal. For example:","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":["let x = 21.5"],"syntax":null},{"type":"paragraph","inlineContent":[{"type":"text","text":"In this example, the assignment to the "},{"code":"x","type":"codeVoice"},{"text":" constant calls this","type":"text"},{"type":"text","text":" "},{"type":"text","text":"floating-point literal initializer behind the scenes."}]}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/arraytree\/init(floatliteral:)"]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArrayTree","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArrayTree\/ExpressibleByFloatLiteral-Implementations"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArrayTree\/init(floatLiteral:)"},"abstract":[{"text":"Creates an instance initialized to the specified floating-point value.","type":"text"}],"sections":[],"kind":"symbol","references":{"doc://com.swallow.documentation.Compute/documentation/Compute/ExpressibleByFloatLiteral/FloatLiteralType":{"url":"\/documentation\/compute\/expressiblebyfloatliteral\/floatliteraltype","title":"FloatLiteralType","required":true,"abstract":[{"type":"text","text":"A type that represents a floating-point literal."}],"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ExpressibleByFloatLiteral\/FloatLiteralType","type":"topic","fragments":[{"kind":"keyword","text":"associatedtype"},{"text":" ","kind":"text"},{"kind":"identifier","text":"FloatLiteralType"},{"text":" : ","kind":"text"},{"text":"_ExpressibleByBuiltinFloatLiteral","kind":"typeIdentifier"}],"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/ArrayTree/ExpressibleByFloatLiteral-Implementations":{"kind":"article","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArrayTree\/ExpressibleByFloatLiteral-Implementations","url":"\/documentation\/compute\/arraytree\/expressiblebyfloatliteral-implementations","role":"collectionGroup","type":"topic","title":"ExpressibleByFloatLiteral Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/ArrayTree":{"url":"\/documentation\/compute\/arraytree","type":"topic","title":"ArrayTree","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"ArrayTree","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArrayTree","kind":"symbol","abstract":[],"role":"symbol","navigatorTitle":[{"text":"ArrayTree","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/ArrayTree/init(floatLiteral:)":{"title":"init(floatLiteral:)","role":"symbol","conformance":{"constraints":[{"type":"codeVoice","code":"T"},{"text":" conforms to ","type":"text"},{"code":"ExpressibleByFloatLiteral","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"text":"floatLiteral","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"T","preciseIdentifier":"s:7Compute9ArrayTreeVAAs25ExpressibleByFloatLiteralRzlE1Txmfp","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:s25ExpressibleByFloatLiteralP0cD4TypeQa","kind":"typeIdentifier","text":"FloatLiteralType"},{"text":")","kind":"text"}],"abstract":[{"type":"text","text":"Creates an instance initialized to the specified floating-point value."}],"url":"\/documentation\/compute\/arraytree\/init(floatliteral:)","kind":"symbol","type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArrayTree\/init(floatLiteral:)"}}}