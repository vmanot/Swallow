{"abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"RecursiveTreeProtocol.forEachPostOrder(_:)"},{"type":"text","text":"."}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArrayTree","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArrayTree\/RecursiveTreeProtocol-Implementations"]]},"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"forEachPostOrder"},{"text":"((","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Compute12TreeProtocolP0B5ValueQa","text":"TreeValue"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"text":")","kind":"text"}],"extendedModule":"Compute","role":"symbol","roleHeading":"Instance Method","title":"forEachPostOrder(_:)","modules":[{"name":"Compute"}],"externalID":"s:7Compute21RecursiveTreeProtocolPAAE16forEachPostOrderyyy0C5ValueQzXEF::SYNTHESIZED::s:7Compute9ArrayTreeV","symbolKind":"method"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/arraytree\/foreachpostorder(_:)"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArrayTree\/forEachPostOrder(_:)"},"kind":"symbol","sections":[],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"forEachPostOrder"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"body"},{"kind":"text","text":": ("},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/TreeProtocol\/TreeValue","kind":"typeIdentifier","preciseIdentifier":"s:7Compute12TreeProtocolP0B5ValueQa","text":"TreeValue"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Void","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")"}]}],"kind":"declarations"}],"schemaVersion":{"patch":0,"minor":3,"major":0},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/ArrayTree":{"url":"\/documentation\/compute\/arraytree","type":"topic","title":"ArrayTree","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"ArrayTree","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArrayTree","kind":"symbol","abstract":[],"role":"symbol","navigatorTitle":[{"text":"ArrayTree","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Void":{"abstract":[{"text":"The return type of functions that donâ€™t explicitly specify a return type,","type":"text"},{"text":" ","type":"text"},{"text":"that is, an empty tuple ","type":"text"},{"type":"codeVoice","code":"()"},{"type":"text","text":"."}],"type":"topic","title":"Void","url":"\/documentation\/compute\/void","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Void"}],"navigatorTitle":[{"text":"Void","kind":"identifier"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Void"},"doc://com.swallow.documentation.Compute/documentation/Compute/ArrayTree/RecursiveTreeProtocol-Implementations":{"title":"RecursiveTreeProtocol Implementations","url":"\/documentation\/compute\/arraytree\/recursivetreeprotocol-implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArrayTree\/RecursiveTreeProtocol-Implementations","type":"topic","kind":"article","abstract":[],"role":"collectionGroup"},"doc://com.swallow.documentation.Compute/documentation/Compute/TreeProtocol/TreeValue":{"url":"\/documentation\/compute\/treeprotocol\/treevalue","type":"topic","title":"TreeValue","fragments":[{"text":"associatedtype","kind":"keyword"},{"kind":"text","text":" "},{"text":"TreeValue","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/TreeProtocol\/TreeValue","kind":"symbol","abstract":[{"text":"The type of value stored in each node of the tree.","type":"text"}],"required":true,"role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/ArrayTree/forEachPostOrder(_:)":{"kind":"symbol","title":"forEachPostOrder(_:)","type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArrayTree\/forEachPostOrder(_:)","role":"symbol","url":"\/documentation\/compute\/arraytree\/foreachpostorder(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"forEachPostOrder","kind":"identifier"},{"text":"((","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Compute12TreeProtocolP0B5ValueQa","text":"TreeValue"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"text":")","kind":"text"}],"abstract":[]},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"}}}