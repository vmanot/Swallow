{"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BidirectionalMap","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BidirectionalMap\/Hashable-Implementations"]]},"schemaVersion":{"major":0,"patch":0,"minor":3},"metadata":{"title":"hash(into:)","externalID":"s:7Compute16BidirectionalMapV4hash4intoys6HasherVz_tF","role":"symbol","modules":[{"name":"Compute"}],"extendedModule":"Compute","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"hash","kind":"identifier"},{"text":"(","kind":"text"},{"text":"into","kind":"externalParam"},{"kind":"text","text":": "},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"preciseIdentifier":"s:s6HasherV","text":"Hasher","kind":"typeIdentifier"},{"text":")","kind":"text"}],"roleHeading":"Instance Method","symbolKind":"method","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Left"},{"text":" conforms to ","type":"text"},{"code":"Hashable","type":"codeVoice"},{"type":"text","text":" and "},{"code":"Right","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Hashable","type":"codeVoice"},{"text":".","type":"text"}]}},"sections":[],"kind":"symbol","identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BidirectionalMap\/hash(into:)","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"hash"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"into"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"hasher"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s6HasherV","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Hasher","text":"Hasher"},{"text":")","kind":"text"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The hasher to use when combining the components","type":"text"},{"text":" ","type":"text"},{"text":"of this instance.","type":"text"}]}],"name":"hasher"}]},{"kind":"content","content":[{"level":2,"anchor":"discussion","type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Implement this method to conform to the "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":" protocol. The"},{"text":" ","type":"text"},{"text":"components used for hashing must be the same as the components compared","type":"text"},{"text":" ","type":"text"},{"text":"in your type’s ","type":"text"},{"code":"==","type":"codeVoice"},{"type":"text","text":" operator implementation. Call "},{"type":"codeVoice","code":"hasher.combine(_:)"},{"text":" ","type":"text"},{"text":"with each of these components.","type":"text"}]},{"type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"In your implementation of ","type":"text"},{"type":"codeVoice","code":"hash(into:)"},{"text":",","type":"text"},{"text":" ","type":"text"},{"text":"don’t call ","type":"text"},{"type":"codeVoice","code":"finalize()"},{"type":"text","text":" on the "},{"code":"hasher","type":"codeVoice"},{"text":" instance provided,","type":"text"},{"text":" ","type":"text"},{"text":"or replace it with a different instance.","type":"text"},{"text":" ","type":"text"},{"text":"Doing so may become a compile-time error in the future.","type":"text"}]}],"name":"Important","style":"important"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/bidirectionalmap\/hash(into:)"]}],"abstract":[{"text":"Hashes the essential components of this value by feeding them into the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"given hasher."}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/BidirectionalMap":{"kind":"symbol","navigatorTitle":[{"text":"BidirectionalMap","kind":"identifier"}],"url":"\/documentation\/compute\/bidirectionalmap","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"BidirectionalMap"}],"abstract":[{"text":"A bidirectional map between two ","type":"text"},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":" types."}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BidirectionalMap","role":"symbol","title":"BidirectionalMap"},"doc://com.swallow.documentation.Compute/documentation/Compute/BidirectionalMap/hash(into:)":{"type":"topic","kind":"symbol","conformance":{"constraints":[{"code":"Left","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Hashable","type":"codeVoice"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Right"},{"text":" conforms to ","type":"text"},{"code":"Hashable","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"hash"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"into"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"preciseIdentifier":"s:s6HasherV","text":"Hasher","kind":"typeIdentifier"},{"text":")","kind":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BidirectionalMap\/hash(into:)","abstract":[{"type":"text","text":"Hashes the essential components of this value by feeding them into the"},{"text":" ","type":"text"},{"text":"given hasher.","type":"text"}],"title":"hash(into:)","url":"\/documentation\/compute\/bidirectionalmap\/hash(into:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/BidirectionalMap/Hashable-Implementations":{"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BidirectionalMap\/Hashable-Implementations","role":"collectionGroup","url":"\/documentation\/compute\/bidirectionalmap\/hashable-implementations","abstract":[],"kind":"article","title":"Hashable Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/Hasher":{"navigatorTitle":[{"text":"Hasher","kind":"identifier"}],"abstract":[{"type":"text","text":"The universal hash function used by "},{"type":"codeVoice","code":"Set"},{"text":" and ","type":"text"},{"code":"Dictionary","type":"codeVoice"},{"text":".","type":"text"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Hasher","kind":"identifier"}],"url":"\/documentation\/compute\/hasher","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Hasher","title":"Hasher","type":"topic","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"}}}