{"metadata":{"role":"collectionGroup","modules":[{"name":"Compute"}],"roleHeading":"API Collection","title":"Decodable Implementations"},"topicSections":[{"generated":true,"identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BidirectionalMap\/init(from:)"],"title":"Initializers","anchor":"Initializers"},{"generated":true,"anchor":"Type-Methods","identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BidirectionalMap\/decode(from:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BidirectionalMap\/decode(from:forKey:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BidirectionalMap\/decodeIfPresent(from:)-2gipo","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BidirectionalMap\/decodeIfPresent(from:)-9msrt","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BidirectionalMap\/decodeIfPresent(from:forKey:)"],"title":"Type Methods"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/bidirectionalmap\/decodable-implementations"]}],"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BidirectionalMap\/Decodable-Implementations","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"article","sections":[],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BidirectionalMap"]]},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/BidirectionalMap/decodeIfPresent(from:forKey:)":{"abstract":[],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"decodeIfPresent"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Container"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"from"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Container"},{"text":", ","kind":"text"},{"text":"forKey","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Container","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Key","kind":"typeIdentifier","preciseIdentifier":"s:s30KeyedDecodingContainerProtocolP3KeyQa"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"text":"?","kind":"text"}],"url":"\/documentation\/compute\/bidirectionalmap\/decodeifpresent(from:forkey:)","title":"decodeIfPresent(from:forKey:)","role":"symbol","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BidirectionalMap\/decodeIfPresent(from:forKey:)","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/BidirectionalMap/decode(from:)":{"role":"symbol","type":"topic","title":"decode(from:)","abstract":[],"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"decode"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Container"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"from"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"text":"Container","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Self","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BidirectionalMap\/decode(from:)","kind":"symbol","url":"\/documentation\/compute\/bidirectionalmap\/decode(from:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/BidirectionalMap/decodeIfPresent(from:)-9msrt":{"abstract":[],"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"decodeIfPresent","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Container","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"from"},{"text":": ","kind":"text"},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Container"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"url":"\/documentation\/compute\/bidirectionalmap\/decodeifpresent(from:)-9msrt","title":"decodeIfPresent(from:)","role":"symbol","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BidirectionalMap\/decodeIfPresent(from:)-9msrt","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/BidirectionalMap/decode(from:forKey:)":{"role":"symbol","type":"topic","title":"decode(from:forKey:)","abstract":[],"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"decode"},{"kind":"text","text":"<"},{"text":"Container","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"from","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Container","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"forKey"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Container"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Key","preciseIdentifier":"s:s30KeyedDecodingContainerProtocolP3KeyQa"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BidirectionalMap\/decode(from:forKey:)","kind":"symbol","url":"\/documentation\/compute\/bidirectionalmap\/decode(from:forkey:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/BidirectionalMap/decodeIfPresent(from:)-2gipo":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BidirectionalMap\/decodeIfPresent(from:)-2gipo","url":"\/documentation\/compute\/bidirectionalmap\/decodeifpresent(from:)-2gipo","type":"topic","kind":"symbol","title":"decodeIfPresent(from:)","abstract":[],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"decodeIfPresent","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Container"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"from"},{"kind":"text","text":": "},{"text":"Container","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":"?","kind":"text"}],"role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/BidirectionalMap":{"kind":"symbol","navigatorTitle":[{"text":"BidirectionalMap","kind":"identifier"}],"url":"\/documentation\/compute\/bidirectionalmap","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"BidirectionalMap"}],"abstract":[{"text":"A bidirectional map between two ","type":"text"},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":" types."}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BidirectionalMap","role":"symbol","title":"BidirectionalMap"},"doc://com.swallow.documentation.Compute/documentation/Compute/BidirectionalMap/init(from:)":{"abstract":[{"text":"Creates a new instance by decoding from the given decoder.","type":"text"}],"fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"text":"from","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s7DecoderP","text":"Decoder","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Left"},{"type":"text","text":" conforms to "},{"code":"Decodable","type":"codeVoice"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Left"},{"type":"text","text":" conforms to "},{"code":"Encodable","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"Left"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":", "},{"code":"Right","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Decodable","type":"codeVoice"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Right"},{"type":"text","text":" conforms to "},{"code":"Encodable","type":"codeVoice"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Right"},{"text":" conforms to ","type":"text"},{"code":"Hashable","type":"codeVoice"},{"text":".","type":"text"}]},"url":"\/documentation\/compute\/bidirectionalmap\/init(from:)","title":"init(from:)","role":"symbol","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BidirectionalMap\/init(from:)","type":"topic"}}}