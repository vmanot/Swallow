{"schemaVersion":{"patch":0,"major":0,"minor":3},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/bidirectionalmap\/init(from:)"]}],"abstract":[{"type":"text","text":"Creates a new instance by decoding from the given decoder."}],"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BidirectionalMap\/init(from:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BidirectionalMap","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BidirectionalMap\/Decodable-Implementations"]]},"kind":"symbol","primaryContentSections":[{"declarations":[{"tokens":[{"text":"init","kind":"keyword"},{"kind":"text","text":"("},{"kind":"externalParam","text":"from"},{"kind":"text","text":" "},{"text":"decoder","kind":"internalParam"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Decoder","text":"Decoder","kind":"typeIdentifier","preciseIdentifier":"s:s7DecoderP"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"parameters":[{"name":"decoder","content":[{"type":"paragraph","inlineContent":[{"text":"The decoder to read data from.","type":"text"}]}]}],"kind":"parameters"},{"kind":"content","content":[{"level":2,"type":"heading","anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This initializer throws an error if reading from the decoder fails, or"},{"type":"text","text":" "},{"type":"text","text":"if the data read is corrupted or otherwise invalid."}]}]}],"metadata":{"roleHeading":"Initializer","externalID":"s:7Compute16BidirectionalMapVAASeRzSERzSeR_SER_rlE4fromACyxq_Gs7Decoder_p_tKcfc","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Left"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Decodable"},{"type":"text","text":", "},{"type":"codeVoice","code":"Left"},{"type":"text","text":" conforms to "},{"code":"Encodable","type":"codeVoice"},{"type":"text","text":", "},{"code":"Left","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Hashable","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Right","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Decodable"},{"text":", ","type":"text"},{"code":"Right","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Encodable","type":"codeVoice"},{"text":", and ","type":"text"},{"code":"Right","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Hashable"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"text":"from","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s7DecoderP","text":"Decoder","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"role":"symbol","extendedModule":"Compute","title":"init(from:)","symbolKind":"init","modules":[{"name":"Compute"}]},"sections":[],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Decoder":{"title":"Decoder","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Decoder"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Decoder","url":"\/documentation\/compute\/decoder","abstract":[{"type":"text","text":"A type that can decode values from a native format into in-memory"},{"type":"text","text":" "},{"type":"text","text":"representations."}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"Decoder"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/BidirectionalMap/init(from:)":{"abstract":[{"text":"Creates a new instance by decoding from the given decoder.","type":"text"}],"fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"text":"from","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s7DecoderP","text":"Decoder","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Left"},{"type":"text","text":" conforms to "},{"code":"Decodable","type":"codeVoice"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Left"},{"type":"text","text":" conforms to "},{"code":"Encodable","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"Left"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":", "},{"code":"Right","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Decodable","type":"codeVoice"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Right"},{"type":"text","text":" conforms to "},{"code":"Encodable","type":"codeVoice"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Right"},{"text":" conforms to ","type":"text"},{"code":"Hashable","type":"codeVoice"},{"text":".","type":"text"}]},"url":"\/documentation\/compute\/bidirectionalmap\/init(from:)","title":"init(from:)","role":"symbol","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BidirectionalMap\/init(from:)","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/BidirectionalMap/Decodable-Implementations":{"role":"collectionGroup","url":"\/documentation\/compute\/bidirectionalmap\/decodable-implementations","type":"topic","kind":"article","abstract":[],"title":"Decodable Implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BidirectionalMap\/Decodable-Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/BidirectionalMap":{"kind":"symbol","navigatorTitle":[{"text":"BidirectionalMap","kind":"identifier"}],"url":"\/documentation\/compute\/bidirectionalmap","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"BidirectionalMap"}],"abstract":[{"text":"A bidirectional map between two ","type":"text"},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":" types."}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BidirectionalMap","role":"symbol","title":"BidirectionalMap"}}}