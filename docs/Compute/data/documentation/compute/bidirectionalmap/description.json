{"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BidirectionalMap\/description","interfaceLanguage":"swift"},"sections":[],"kind":"symbol","metadata":{"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Left"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Right"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"role":"symbol","externalID":"s:7Compute16BidirectionalMapV11descriptionSSvp","extendedModule":"Compute","roleHeading":"Instance Property","symbolKind":"property","modules":[{"name":"Compute"}],"title":"description","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"description","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"}]},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"description","kind":"identifier"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String","kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":" { ","kind":"text"},{"kind":"keyword","text":"get"},{"kind":"text","text":" }"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"level":2,"type":"heading","anchor":"discussion","text":"Discussion"},{"inlineContent":[{"type":"text","text":"Calling this property directly is discouraged. Instead, convert an"},{"text":" ","type":"text"},{"text":"instance of any type to a string by using the ","type":"text"},{"type":"codeVoice","code":"String(describing:)"},{"text":" ","type":"text"},{"text":"initializer. This initializer works with any type, and uses the custom","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"description"},{"text":" property for types that conform to","type":"text"},{"text":" ","type":"text"},{"code":"CustomStringConvertible","type":"codeVoice"},{"type":"text","text":":"}],"type":"paragraph"},{"type":"codeListing","code":["struct Point: CustomStringConvertible {","    let x: Int, y: Int","","    var description: String {","        return \"(\\(x), \\(y))\"","    }","}","","let p = Point(x: 21, y: 30)","let s = String(describing: p)","print(s)","\/\/ Prints \"(21, 30)\""],"syntax":null},{"type":"paragraph","inlineContent":[{"type":"text","text":"The conversion of "},{"type":"codeVoice","code":"p"},{"text":" to a string in the assignment to ","type":"text"},{"type":"codeVoice","code":"s"},{"text":" uses the","type":"text"},{"text":" ","type":"text"},{"code":"Point","type":"codeVoice"},{"type":"text","text":" typeâ€™s "},{"code":"description","type":"codeVoice"},{"text":" property.","type":"text"}]}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BidirectionalMap","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BidirectionalMap\/CustomStringConvertible-Implementations"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/bidirectionalmap\/description"]}],"abstract":[{"type":"text","text":"A textual representation of this instance."}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/BidirectionalMap/CustomStringConvertible-Implementations":{"role":"collectionGroup","type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BidirectionalMap\/CustomStringConvertible-Implementations","kind":"article","abstract":[],"title":"CustomStringConvertible Implementations","url":"\/documentation\/compute\/bidirectionalmap\/customstringconvertible-implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/String":{"type":"topic","navigatorTitle":[{"kind":"identifier","text":"String"}],"title":"String","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"String","kind":"identifier"}],"abstract":[{"type":"text","text":"A Unicode string value that is a collection of characters."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String","kind":"symbol","role":"symbol","url":"\/documentation\/compute\/string"},"doc://com.swallow.documentation.Compute/documentation/Compute/BidirectionalMap":{"kind":"symbol","navigatorTitle":[{"text":"BidirectionalMap","kind":"identifier"}],"url":"\/documentation\/compute\/bidirectionalmap","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"BidirectionalMap"}],"abstract":[{"text":"A bidirectional map between two ","type":"text"},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":" types."}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BidirectionalMap","role":"symbol","title":"BidirectionalMap"},"doc://com.swallow.documentation.Compute/documentation/Compute/BidirectionalMap/description":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BidirectionalMap\/description","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"description","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"}],"kind":"symbol","role":"symbol","type":"topic","url":"\/documentation\/compute\/bidirectionalmap\/description","abstract":[{"type":"text","text":"A textual representation of this instance."}],"conformance":{"constraints":[{"type":"codeVoice","code":"Left"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Right"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Hashable"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"title":"description"}}}