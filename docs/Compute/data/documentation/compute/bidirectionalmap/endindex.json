{"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BidirectionalMap","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BidirectionalMap\/Collection-Implementations"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/bidirectionalmap\/endindex"]}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"endIndex","kind":"identifier"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BidirectionalMap\/Index","preciseIdentifier":"s:7Compute16BidirectionalMapV5Indexa","text":"Index","kind":"typeIdentifier"},{"kind":"text","text":" { "},{"text":"get","kind":"keyword"},{"text":" }","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"level":2,"text":"Discussion","type":"heading","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"When you need a range that includes the last element of a collection, use","type":"text"},{"text":" ","type":"text"},{"text":"the half-open range operator (","type":"text"},{"type":"codeVoice","code":"..<"},{"text":") with ","type":"text"},{"code":"endIndex","type":"codeVoice"},{"type":"text","text":". The "},{"type":"codeVoice","code":"..<"},{"type":"text","text":" operator"},{"text":" ","type":"text"},{"text":"creates a range that doesn’t include the upper bound, so it’s always","type":"text"},{"type":"text","text":" "},{"type":"text","text":"safe to use with "},{"type":"codeVoice","code":"endIndex"},{"type":"text","text":". For example:"}]},{"code":["let numbers = [10, 20, 30, 40, 50]","if let index = numbers.firstIndex(of: 30) {","    print(numbers[index ..< numbers.endIndex])","}","\/\/ Prints \"[30, 40, 50]\""],"syntax":null,"type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"If the collection is empty, ","type":"text"},{"code":"endIndex","type":"codeVoice"},{"type":"text","text":" is equal to "},{"type":"codeVoice","code":"startIndex"},{"type":"text","text":"."}]}]}],"metadata":{"conformance":{"constraints":[{"code":"Left","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Hashable","type":"codeVoice"},{"type":"text","text":" and "},{"code":"Right","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"modules":[{"name":"Compute"}],"externalID":"s:7Compute16BidirectionalMapV8endIndexSD0E0Vyxq__Gvp","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"endIndex"},{"kind":"text","text":": "},{"text":"Index","kind":"typeIdentifier","preciseIdentifier":"s:7Compute16BidirectionalMapV5Indexa"}],"symbolKind":"property","roleHeading":"Instance Property","extendedModule":"Compute","title":"endIndex"},"abstract":[{"text":"The collection’s “past the end” position—that is, the position one","type":"text"},{"type":"text","text":" "},{"type":"text","text":"greater than the last valid subscript argument."}],"kind":"symbol","sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BidirectionalMap\/endIndex"},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/BidirectionalMap":{"kind":"symbol","navigatorTitle":[{"text":"BidirectionalMap","kind":"identifier"}],"url":"\/documentation\/compute\/bidirectionalmap","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"BidirectionalMap"}],"abstract":[{"text":"A bidirectional map between two ","type":"text"},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":" types."}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BidirectionalMap","role":"symbol","title":"BidirectionalMap"},"doc://com.swallow.documentation.Compute/documentation/Compute/BidirectionalMap/endIndex":{"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Left"},{"type":"text","text":" conforms to "},{"code":"Hashable","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Right"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"text":".","type":"text"}]},"url":"\/documentation\/compute\/bidirectionalmap\/endindex","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"endIndex","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Compute16BidirectionalMapV5Indexa","text":"Index"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BidirectionalMap\/endIndex","abstract":[{"type":"text","text":"The collection’s “past the end” position—that is, the position one"},{"type":"text","text":" "},{"type":"text","text":"greater than the last valid subscript argument."}],"title":"endIndex"},"doc://com.swallow.documentation.Compute/documentation/Compute/BidirectionalMap/Collection-Implementations":{"kind":"article","abstract":[],"type":"topic","role":"collectionGroup","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BidirectionalMap\/Collection-Implementations","url":"\/documentation\/compute\/bidirectionalmap\/collection-implementations","title":"Collection Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/BidirectionalMap/Index":{"type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Index"}],"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"Index"}],"conformance":{"constraints":[{"type":"codeVoice","code":"Left"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":" and "},{"code":"Right","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Hashable","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"BidirectionalMap.Index","url":"\/documentation\/compute\/bidirectionalmap\/index","abstract":[{"text":"A type that represents a position in the collection.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BidirectionalMap\/Index"}}}