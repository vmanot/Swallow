{"sections":[],"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"text":"Returns the distance between two indices.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"distance","kind":"identifier"},{"kind":"text","text":"("},{"text":"from","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"start"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Index","preciseIdentifier":"s:Sl5IndexQa","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/Index","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"to"},{"text":" ","kind":"text"},{"text":"end","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:Sl5IndexQa","text":"Index","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/Index","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"}]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"A valid index of the collection.","type":"text"}]}],"name":"start"},{"content":[{"inlineContent":[{"text":"Another valid index of the collection. If ","type":"text"},{"type":"codeVoice","code":"end"},{"type":"text","text":" is equal to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"start"},{"text":", the result is zero.","type":"text"}],"type":"paragraph"}],"name":"end"}]},{"content":[{"level":2,"text":"Return Value","anchor":"return-value","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"The distance between ","type":"text"},{"code":"start","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"end","type":"codeVoice"},{"type":"text","text":". The result can be"},{"type":"text","text":" "},{"text":"negative only if the collection conforms to the","type":"text"},{"text":" ","type":"text"},{"code":"BidirectionalCollection","type":"codeVoice"},{"type":"text","text":" protocol."}]}],"kind":"content"},{"content":[{"anchor":"discussion","level":2,"text":"Discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Unless the collection conforms to the "},{"code":"BidirectionalCollection","type":"codeVoice"},{"text":" protocol,","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"start"},{"type":"text","text":" must be less than or equal to "},{"type":"codeVoice","code":"end"},{"text":".","type":"text"}]},{"type":"aside","style":"note","content":[{"type":"paragraph","inlineContent":[{"text":"O(1) if the collection conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"RandomAccessCollection"},{"text":"; otherwise, O(","type":"text"},{"inlineContent":[{"text":"k","type":"text"}],"type":"emphasis"},{"text":"), where ","type":"text"},{"inlineContent":[{"type":"text","text":"k"}],"type":"emphasis"},{"text":" is the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"resulting distance."}]}],"name":"Complexity"}],"kind":"content"}],"variants":[{"paths":["\/documentation\/compute\/bidirectionalmap\/distance(from:to:)"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"role":"symbol","symbolKind":"method","modules":[{"name":"Compute","relatedModules":["Swift"]}],"title":"distance(from:to:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"distance","kind":"identifier"},{"kind":"text","text":"("},{"text":"from","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"Index","preciseIdentifier":"s:Sl5IndexQa","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"to"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Index","kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa"},{"kind":"text","text":") -> "},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"}],"externalID":"s:SlsE8distance4from2toSi5IndexQz_AEtF::SYNTHESIZED::s:7Compute16BidirectionalMapV","extendedModule":"Swift","roleHeading":"Instance Method"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BidirectionalMap\/distance(from:to:)"},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BidirectionalMap","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BidirectionalMap\/Collection-Implementations"]]},"kind":"symbol","references":{"doc://com.swallow.documentation.Compute/documentation/Compute/BidirectionalMap/distance(from:to:)":{"abstract":[{"type":"text","text":"Returns the distance between two indices."}],"type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"distance"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"from"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa","text":"Index"},{"text":", ","kind":"text"},{"text":"to","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa","text":"Index"},{"kind":"text","text":") -> "},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"}],"title":"distance(from:to:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BidirectionalMap\/distance(from:to:)","kind":"symbol","url":"\/documentation\/compute\/bidirectionalmap\/distance(from:to:)"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/BidirectionalMap":{"kind":"symbol","navigatorTitle":[{"text":"BidirectionalMap","kind":"identifier"}],"url":"\/documentation\/compute\/bidirectionalmap","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"BidirectionalMap"}],"abstract":[{"text":"A bidirectional map between two ","type":"text"},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":" types."}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BidirectionalMap","role":"symbol","title":"BidirectionalMap"},"doc://com.swallow.documentation.Compute/documentation/Compute/Collection/Index":{"url":"\/documentation\/compute\/collection\/index","required":true,"role":"symbol","title":"Index","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Index","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"Comparable","preciseIdentifier":"s:SL","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"A type that represents a position in the collection."}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/Index","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","abstract":[{"type":"text","text":"A signed integer value type."}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Int","kind":"identifier"}],"navigatorTitle":[{"text":"Int","kind":"identifier"}],"title":"Int","url":"\/documentation\/compute\/int","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/BidirectionalMap/Collection-Implementations":{"kind":"article","abstract":[],"type":"topic","role":"collectionGroup","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BidirectionalMap\/Collection-Implementations","url":"\/documentation\/compute\/bidirectionalmap\/collection-implementations","title":"Collection Implementations"}}}