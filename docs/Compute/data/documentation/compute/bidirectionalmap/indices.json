{"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"indices","kind":"identifier"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/DefaultIndices","preciseIdentifier":"s:SI","kind":"typeIdentifier","text":"DefaultIndices"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":"> { ","kind":"text"},{"kind":"keyword","text":"get"},{"text":" }","kind":"text"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"anchor":"discussion","text":"Discussion","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"A collectionâ€™s ","type":"text"},{"code":"indices","type":"codeVoice"},{"text":" property can hold a strong reference to the","type":"text"},{"type":"text","text":" "},{"text":"collection itself, causing the collection to be non-uniquely referenced.","type":"text"},{"text":" ","type":"text"},{"text":"If you mutate the collection while iterating over its indices, a strong","type":"text"},{"type":"text","text":" "},{"text":"reference can cause an unexpected copy of the collection. To avoid the","type":"text"},{"text":" ","type":"text"},{"text":"unexpected copy, use the ","type":"text"},{"code":"index(after:)","type":"codeVoice"},{"type":"text","text":" method starting with"},{"type":"text","text":" "},{"type":"codeVoice","code":"startIndex"},{"type":"text","text":" to produce indices instead."}]},{"syntax":null,"type":"codeListing","code":["var c = MyFancyCollection([10, 20, 30, 40, 50])","var i = c.startIndex","while i != c.endIndex {","    c[i] \/= 5","    i = c.index(after: i)","}","\/\/ c == MyFancyCollection([2, 4, 6, 8, 10])"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"kind":"symbol","metadata":{"modules":[{"name":"Compute","relatedModules":["Swift"]}],"role":"symbol","conformance":{"constraints":[{"type":"codeVoice","code":"Indices"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"DefaultIndices<Self>"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"title":"indices","roleHeading":"Instance Property","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"indices","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"DefaultIndices","preciseIdentifier":"s:SI"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":">","kind":"text"}],"extendedModule":"Swift","externalID":"s:SlsSIyxG7IndicesRtzrlE7indicesAAvp::SYNTHESIZED::s:7Compute16BidirectionalMapV","symbolKind":"property"},"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BidirectionalMap\/indices","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"The indices that are valid for subscripting the collection, in ascending"},{"text":" ","type":"text"},{"text":"order.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/bidirectionalmap\/indices"]}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BidirectionalMap","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BidirectionalMap\/Collection-Implementations"]]},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/BidirectionalMap/Collection-Implementations":{"kind":"article","abstract":[],"type":"topic","role":"collectionGroup","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BidirectionalMap\/Collection-Implementations","url":"\/documentation\/compute\/bidirectionalmap\/collection-implementations","title":"Collection Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/BidirectionalMap":{"kind":"symbol","navigatorTitle":[{"text":"BidirectionalMap","kind":"identifier"}],"url":"\/documentation\/compute\/bidirectionalmap","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"BidirectionalMap"}],"abstract":[{"text":"A bidirectional map between two ","type":"text"},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":" types."}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BidirectionalMap","role":"symbol","title":"BidirectionalMap"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/DefaultIndices":{"type":"topic","abstract":[{"type":"text","text":"A collection of indices for an arbitrary collection"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/DefaultIndices","navigatorTitle":[{"text":"DefaultIndices","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/compute\/defaultindices","role":"symbol","title":"DefaultIndices","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DefaultIndices","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/BidirectionalMap/indices":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"indices","kind":"identifier"},{"kind":"text","text":": "},{"text":"DefaultIndices","kind":"typeIdentifier","preciseIdentifier":"s:SI"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"role":"symbol","url":"\/documentation\/compute\/bidirectionalmap\/indices","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"The indices that are valid for subscripting the collection, in ascending"},{"text":" ","type":"text"},{"text":"order.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BidirectionalMap\/indices","conformance":{"constraints":[{"code":"Indices","type":"codeVoice"},{"type":"text","text":" is "},{"type":"codeVoice","code":"DefaultIndices<Self>"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"title":"indices"}}}