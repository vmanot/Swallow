{"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutablePointer"]]},"kind":"article","topicSections":[{"identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutablePointer\/...(_:)-4mm5n","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutablePointer\/...(_:)-6ct6f","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutablePointer\/...(_:_:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutablePointer\/.._(_:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutablePointer\/.._(_:_:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutablePointer\/_(_:_:)-24u52","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutablePointer\/_(_:_:)-fe55","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutablePointer\/_=(_:_:)-1ii1","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutablePointer\/_=(_:_:)-8lyhp"],"anchor":"Operators","generated":true,"title":"Operators"},{"title":"Instance Properties","generated":true,"anchor":"Instance-Properties","identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutablePointer\/erasedAsAnyComparable"]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/unsafemutablepointer\/comparable-implementations"]}],"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutablePointer\/Comparable-Implementations","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"major":0,"patch":0},"sections":[],"metadata":{"title":"Comparable Implementations","modules":[{"name":"Compute"}],"roleHeading":"API Collection","role":"collectionGroup"},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeMutablePointer/erasedAsAnyComparable":{"type":"topic","abstract":[],"title":"erasedAsAnyComparable","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutablePointer\/erasedAsAnyComparable","url":"\/documentation\/compute\/unsafemutablepointer\/erasedasanycomparable","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"erasedAsAnyComparable"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Swallow13AnyComparableV","text":"AnyComparable"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeMutablePointer":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutablePointer","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"UnsafeMutablePointer"}],"url":"\/documentation\/compute\/unsafemutablepointer","type":"topic","abstract":[{"type":"text","text":"A pointer for accessing and manipulating data of a"},{"text":" ","type":"text"},{"text":"specific type.","type":"text"}],"kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"UnsafeMutablePointer"}],"title":"UnsafeMutablePointer"},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeMutablePointer/...(_:_:)":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutablePointer\/...(_:_:)","abstract":[{"type":"text","text":"Returns a closed range that contains both of its bounds."}],"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"...","kind":"identifier"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"text":"ClosedRange","kind":"typeIdentifier","preciseIdentifier":"s:SN"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":">","kind":"text"}],"type":"topic","url":"\/documentation\/compute\/unsafemutablepointer\/'...(_:_:)","title":"...(_:_:)","role":"symbol","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeMutablePointer/_=(_:_:)-1ii1":{"role":"symbol","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"<="},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"title":"<=(_:_:)","url":"\/documentation\/compute\/unsafemutablepointer\/_=(_:_:)-1ii1","abstract":[{"type":"text","text":"Returns a Boolean value indicating whether the value of the first argument"},{"type":"text","text":" "},{"text":"is less than or equal to that of the second argument.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutablePointer\/_=(_:_:)-1ii1"},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeMutablePointer/_(_:_:)-fe55":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutablePointer\/_(_:_:)-fe55","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"<","kind":"identifier"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"url":"\/documentation\/compute\/unsafemutablepointer\/_(_:_:)-fe55","role":"symbol","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Returns a Boolean value indicating whether the value of the first"},{"type":"text","text":" "},{"text":"argument is less than that of the second argument.","type":"text"}],"title":"<(_:_:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeMutablePointer/.._(_:)":{"kind":"symbol","title":"..<(_:)","url":"\/documentation\/compute\/unsafemutablepointer\/'.._(_:)","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"..<","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"PartialRangeUpTo","preciseIdentifier":"s:s16PartialRangeUpToV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":">","kind":"text"}],"type":"topic","abstract":[{"type":"text","text":"Returns a partial range up to, but not including, its upper bound."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutablePointer\/.._(_:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeMutablePointer/_(_:_:)-24u52":{"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":">"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"kind":"symbol","type":"topic","title":">(_:_:)","url":"\/documentation\/compute\/unsafemutablepointer\/_(_:_:)-24u52","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutablePointer\/_(_:_:)-24u52","role":"symbol","abstract":[{"type":"text","text":"Returns a Boolean value indicating whether the value of the first argument"},{"type":"text","text":" "},{"type":"text","text":"is greater than that of the second argument."}]},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeMutablePointer/.._(_:_:)":{"url":"\/documentation\/compute\/unsafemutablepointer\/'.._(_:_:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutablePointer\/.._(_:_:)","type":"topic","role":"symbol","abstract":[{"type":"text","text":"Returns a half-open range that contains its lower bound but not its upper"},{"type":"text","text":" "},{"text":"bound.","type":"text"}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"..<","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","text":"Range"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":">","kind":"text"}],"title":"..<(_:_:)","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeMutablePointer/...(_:)-6ct6f":{"abstract":[{"type":"text","text":"Returns a partial range extending upward from a lower bound."}],"title":"...(_:)","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"...","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:s16PartialRangeFromV","text":"PartialRangeFrom","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}],"kind":"symbol","role":"symbol","url":"\/documentation\/compute\/unsafemutablepointer\/'...(_:)-6ct6f","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutablePointer\/...(_:)-6ct6f","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeMutablePointer/_=(_:_:)-8lyhp":{"abstract":[{"type":"text","text":"Returns a Boolean value indicating whether the value of the first argument"},{"text":" ","type":"text"},{"type":"text","text":"is greater than or equal to that of the second argument."}],"title":">=(_:_:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":">=","kind":"identifier"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"kind":"symbol","role":"symbol","url":"\/documentation\/compute\/unsafemutablepointer\/_=(_:_:)-8lyhp","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutablePointer\/_=(_:_:)-8lyhp","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeMutablePointer/...(_:)-4mm5n":{"abstract":[{"text":"Returns a partial range up to, and including, its upper bound.","type":"text"}],"kind":"symbol","title":"...(_:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutablePointer\/...(_:)-4mm5n","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"...","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:s19PartialRangeThroughV","kind":"typeIdentifier","text":"PartialRangeThrough"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"url":"\/documentation\/compute\/unsafemutablepointer\/'...(_:)-4mm5n","type":"topic","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"}}}