{"abstract":[{"type":"text","text":"Returns a partial range extending upward from a lower bound."}],"kind":"symbol","sections":[],"metadata":{"externalID":"s:SLsE3zzzoPys16PartialRangeFromVyxGxFZ::SYNTHESIZED::s:Sp","roleHeading":"Operator","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"...","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"PartialRangeFrom","preciseIdentifier":"s:s16PartialRangeFromV","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":">","kind":"text"}],"modules":[{"name":"Compute","relatedModules":["Swift"]}],"extendedModule":"Swift","role":"symbol","symbolKind":"op","title":"...(_:)"},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"...","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"kind":"internalParam","text":"minimum"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/PartialRangeFrom","kind":"typeIdentifier","text":"PartialRangeFrom","preciseIdentifier":"s:s16PartialRangeFromV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":">","kind":"text"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"minimum","content":[{"inlineContent":[{"type":"text","text":"The lower bound for the range."}],"type":"paragraph"}]}]},{"content":[{"anchor":"discussion","type":"heading","text":"Discussion","level":2},{"inlineContent":[{"type":"text","text":"Use the postfix range operator (postfix "},{"code":"...","type":"codeVoice"},{"text":") to create a partial range","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"of any type that conforms to the "},{"type":"codeVoice","code":"Comparable"},{"type":"text","text":" protocol. This example"},{"text":" ","type":"text"},{"type":"text","text":"creates a "},{"type":"codeVoice","code":"PartialRangeFrom<Double>"},{"type":"text","text":" instance that includes any value"},{"type":"text","text":" "},{"text":"greater than or equal to ","type":"text"},{"code":"5.0","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"},{"syntax":null,"code":["let atLeastFive = 5.0...","","atLeastFive.contains(4.0)     \/\/ false","atLeastFive.contains(5.0)     \/\/ true","atLeastFive.contains(6.0)     \/\/ true"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can use this type of partial range of a collection’s indices to"},{"text":" ","type":"text"},{"text":"represent the range from the partial range’s lower bound up to the end","type":"text"},{"text":" ","type":"text"},{"text":"of the collection.","type":"text"}]},{"code":["let numbers = [10, 20, 30, 40, 50, 60, 70]","print(numbers[3...])","\/\/ Prints \"[40, 50, 60, 70]\""],"type":"codeListing","syntax":null},{"style":"note","content":[{"inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"minimum"},{"type":"text","text":" must compare equal to itself (i.e. cannot be NaN)."}],"type":"paragraph"}],"name":"Precondition","type":"aside"}],"kind":"content"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"variants":[{"paths":["\/documentation\/compute\/unsafemutablepointer\/'...(_:)-6ct6f"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutablePointer","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutablePointer\/Comparable-Implementations"]]},"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutablePointer\/...(_:)-6ct6f","interfaceLanguage":"swift"},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeMutablePointer/...(_:)-6ct6f":{"abstract":[{"type":"text","text":"Returns a partial range extending upward from a lower bound."}],"title":"...(_:)","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"...","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:s16PartialRangeFromV","text":"PartialRangeFrom","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}],"kind":"symbol","role":"symbol","url":"\/documentation\/compute\/unsafemutablepointer\/'...(_:)-6ct6f","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutablePointer\/...(_:)-6ct6f","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeMutablePointer":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutablePointer","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"UnsafeMutablePointer"}],"url":"\/documentation\/compute\/unsafemutablepointer","type":"topic","abstract":[{"type":"text","text":"A pointer for accessing and manipulating data of a"},{"text":" ","type":"text"},{"text":"specific type.","type":"text"}],"kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"UnsafeMutablePointer"}],"title":"UnsafeMutablePointer"},"doc://com.swallow.documentation.Compute/documentation/Compute/PartialRangeFrom":{"kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"PartialRangeFrom","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/PartialRangeFrom","url":"\/documentation\/compute\/partialrangefrom","navigatorTitle":[{"kind":"identifier","text":"PartialRangeFrom"}],"abstract":[{"type":"text","text":"A partial interval extending upward from a lower bound."}],"role":"symbol","title":"PartialRangeFrom"},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeMutablePointer/Comparable-Implementations":{"url":"\/documentation\/compute\/unsafemutablepointer\/comparable-implementations","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutablePointer\/Comparable-Implementations","role":"collectionGroup","type":"topic","title":"Comparable Implementations","kind":"article"}}}