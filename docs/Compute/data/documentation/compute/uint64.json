{"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/uint64"]}],"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64","interfaceLanguage":"swift"},"kind":"symbol","topicSections":[{"title":"Structures","generated":true,"anchor":"Structures","identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/Words-swift.struct"]},{"anchor":"Operators","identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/!=(_:_:)-239k","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/&=(_:_:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/&__=(_:_:)-9z0pp","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/&__=(_:_:)-p2fc","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/*=(_:_:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/+=(_:_:)-38bug","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/-=(_:_:)-994ek","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/==(_:_:)-7a0u0","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/_(_:_:)-1zzq5","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/_=(_:_:)-20phr","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/_=(_:_:)-3oy72","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/_=(_:_:)-7dm2a","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/_=(_:_:)-9jhbb"],"generated":true,"title":"Operators"},{"identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/init(_:)-6bhfg","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/init(_:)-71bjo","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/init(_:)-7yfzu","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/init(_:)-8hpyb","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/init(bitPattern:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/init(exactly:)-4pdnv","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/init(exactly:)-92on5","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/init(exactly:)-gsjs"],"anchor":"Initializers","title":"Initializers","generated":true},{"generated":true,"anchor":"Instance-Properties","identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/byteSwapped","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/leadingZeroBitCount","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/nonzeroBitCount","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/trailingZeroBitCount","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/words-swift.property"],"title":"Instance Properties"},{"identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/addingReportingOverflow(_:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/dividedReportingOverflow(by:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/dividingFullWidth(_:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/multipliedFullWidth(by:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/multipliedReportingOverflow(by:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/remainderReportingOverflow(dividingBy:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/signum()","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/subtractingReportingOverflow(_:)"],"anchor":"Instance-Methods","title":"Instance Methods","generated":true},{"anchor":"Type-Aliases","title":"Type Aliases","identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/IntegerLiteralType","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/Magnitude-swift.typealias","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/Stride"],"generated":true},{"anchor":"Type-Properties","identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/bitWidth-swift.type.property"],"title":"Type Properties","generated":true},{"identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/AdditiveArithmetic-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/BinaryInteger-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/Comparable-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/CustomReflectable-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/Decodable-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/Encodable-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/Equatable-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/ExpressibleByIntegerLiteral-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/FixedWidthInteger-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/Hashable-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/SIMDScalar-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/Strideable-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/UnsignedInteger-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/_CustomPlaygroundQuickLookable-Implementations"],"anchor":"Default-Implementations","title":"Default Implementations","generated":true}],"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"type":"text","text":"A 64-bit unsigned integer value"},{"type":"text","text":" "},{"text":"type.","type":"text"}],"metadata":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"UInt64"}],"roleHeading":"Structure","externalID":"s:s6UInt64V","title":"UInt64","symbolKind":"struct","navigatorTitle":[{"text":"UInt64","kind":"identifier"}],"modules":[{"name":"Compute"}],"role":"symbol"},"relationshipsSections":[{"kind":"relationships","identifiers":["doc:\/\/com.swallow.documentation.Compute\/10Accelerate10BNNSScalarP","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AdditiveArithmetic","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryInteger","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BitwiseCopyable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CVarArg","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Comparable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Copyable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CustomReflectable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CustomStringConvertible","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Decodable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Encodable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Equatable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ExpressibleByIntegerLiteral","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FixedWidthInteger","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Hashable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LosslessStringConvertible","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Numeric","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMDScalar","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sendable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Strideable","doc:\/\/com.swallow.documentation.Compute\/7Swallow18AdditionOperatableP","doc:\/\/com.swallow.documentation.Compute\/7Swallow21AnyCodableConvertibleP","doc:\/\/com.swallow.documentation.Compute\/7Swallow22ApproximatelyEquatableP","doc:\/\/com.swallow.documentation.Compute\/7Swallow20ArithmeticOperatableP","doc:\/\/com.swallow.documentation.Compute\/7Swallow16BooleanInitiableP","doc:\/\/com.swallow.documentation.Compute\/7Swallow7BoundedP","doc:\/\/com.swallow.documentation.Compute\/7Swallow18BoundedRandomnableP","doc:\/\/com.swallow.documentation.Compute\/7Swallow18ByteOrderSwappableP","doc:\/\/com.swallow.documentation.Compute\/7Swallow20ByteTupleConvertibleP","doc:\/\/com.swallow.documentation.Compute\/7Swallow14CoderPrimitiveP","doc:\/\/com.swallow.documentation.Compute\/7Swallow13DataDecodableP","doc:\/\/com.swallow.documentation.Compute\/7Swallow13DataEncodableP","doc:\/\/com.swallow.documentation.Compute\/7Swallow8DiscreteP","doc:\/\/com.swallow.documentation.Compute\/7Swallow20DiscreteOrContinuousP","doc:\/\/com.swallow.documentation.Compute\/7Swallow18DivisionOperatableP","doc:\/\/com.swallow.documentation.Compute\/7Swallow22FloatingPointInitiableP","doc:\/\/com.swallow.documentation.Compute\/7Swallow9InitiableP","doc:\/\/com.swallow.documentation.Compute\/7Swallow16IntegerInitiableP","doc:\/\/com.swallow.documentation.Compute\/7Swallow24MultiplicationOperatableP","doc:\/\/com.swallow.documentation.Compute\/7Swallow25MutableAdditionOperatableP","doc:\/\/com.swallow.documentation.Compute\/7Swallow27MutableArithmeticOperatableP","doc:\/\/com.swallow.documentation.Compute\/7Swallow25MutableDivisionOperatableP","doc:\/\/com.swallow.documentation.Compute\/7Swallow31MutableMultiplicationOperatableP","doc:\/\/com.swallow.documentation.Compute\/7Swallow28MutableSubtractionOperatableP","doc:\/\/com.swallow.documentation.Compute\/7Swallow6NumberP","doc:\/\/com.swallow.documentation.Compute\/7Swallow17NumberConvertibleP","doc:\/\/com.swallow.documentation.Compute\/7Swallow15NumberInitiableP","doc:\/\/com.swallow.documentation.Compute\/7Swallow11RandomnableP","doc:\/\/com.swallow.documentation.Compute\/7Swallow26ShouldNotBeDecodedFromBoolP","doc:\/\/com.swallow.documentation.Compute\/7Swallow22SignedIntegerInitiableP","doc:\/\/com.swallow.documentation.Compute\/7Swallow16SignedOrUnsignedP","doc:\/\/com.swallow.documentation.Compute\/7Swallow21SubtractionOperatableP","doc:\/\/com.swallow.documentation.Compute\/7Swallow7TrivialP","doc:\/\/com.swallow.documentation.Compute\/7Swallow8UnsignedP","doc:\/\/com.swallow.documentation.Compute\/7Swallow24UnsignedIntegerInitiableP","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsignedInteger"],"type":"conformsTo","title":"Conforms To"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"attribute","text":"@frozen"},{"text":" ","kind":"text"},{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UInt64","kind":"identifier"}],"platforms":["macOS"]}]}],"sections":[],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Copyable":{"title":"Copyable","abstract":[{"type":"text","text":"A type whose values can be implicitly or explicitly copied."}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"Copyable","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Copyable","url":"\/documentation\/compute\/copyable","navigatorTitle":[{"text":"Copyable","kind":"identifier"}],"kind":"symbol","role":"symbol","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt64/CustomReflectable-Implementations":{"url":"\/documentation\/compute\/uint64\/customreflectable-implementations","abstract":[],"title":"CustomReflectable Implementations","kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/CustomReflectable-Implementations","role":"collectionGroup","type":"topic"},"doc://com.swallow.documentation.Compute/7Swallow8UnsignedP":{"type":"unresolvable","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow8UnsignedP","title":"Swallow.Unsigned"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt64/BinaryInteger-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/BinaryInteger-Implementations","url":"\/documentation\/compute\/uint64\/binaryinteger-implementations","type":"topic","abstract":[],"role":"collectionGroup","title":"BinaryInteger Implementations","kind":"article"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt64/multipliedFullWidth(by:)":{"url":"\/documentation\/compute\/uint64\/multipliedfullwidth(by:)","abstract":[{"type":"text","text":"Returns a tuple containing the high and low parts of the result of"},{"text":" ","type":"text"},{"type":"text","text":"multiplying this value by the given value."}],"title":"multipliedFullWidth(by:)","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/multipliedFullWidth(by:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"multipliedFullWidth","kind":"identifier"},{"kind":"text","text":"("},{"text":"by","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt64","preciseIdentifier":"s:s6UInt64V"},{"kind":"text","text":") -> (high"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s6UInt64V","text":"UInt64"},{"text":", low","kind":"text"},{"text":": ","kind":"text"},{"text":"UInt64","kind":"typeIdentifier","preciseIdentifier":"s:s6UInt64V"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:s6UInt64V9Magnitudea","text":"Magnitude"},{"text":")","kind":"text"}],"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt64/init(bitPattern:)":{"kind":"symbol","type":"topic","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"bitPattern","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Int64","kind":"typeIdentifier","preciseIdentifier":"s:s5Int64V"},{"kind":"text","text":")"}],"abstract":[{"text":"Creates a new instance with the same memory representation as the given","type":"text"},{"type":"text","text":" "},{"type":"text","text":"value."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/init(bitPattern:)","title":"init(bitPattern:)","url":"\/documentation\/compute\/uint64\/init(bitpattern:)","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMDScalar":{"kind":"symbol","navigatorTitle":[{"text":"SIMDScalar","kind":"identifier"}],"type":"topic","title":"SIMDScalar","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMDScalar","abstract":[{"type":"text","text":"A type that can be used as an element in a SIMD vector."}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SIMDScalar","kind":"identifier"}],"url":"\/documentation\/compute\/simdscalar"},"doc://com.swallow.documentation.Compute/7Swallow21AnyCodableConvertibleP":{"title":"Swallow.AnyCodableConvertible","type":"unresolvable","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow21AnyCodableConvertibleP"},"doc://com.swallow.documentation.Compute/7Swallow18DivisionOperatableP":{"title":"Swallow.DivisionOperatable","type":"unresolvable","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow18DivisionOperatableP"},"doc://com.swallow.documentation.Compute/7Swallow9InitiableP":{"type":"unresolvable","title":"Swallow.Initiable","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow9InitiableP"},"doc://com.swallow.documentation.Compute/documentation/Compute/CVarArg":{"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CVarArg"}],"abstract":[{"text":"A type whose instances can be encoded, and appropriately passed, as","type":"text"},{"text":" ","type":"text"},{"text":"elements of a C ","type":"text"},{"type":"codeVoice","code":"va_list"},{"text":".","type":"text"}],"navigatorTitle":[{"text":"CVarArg","kind":"identifier"}],"title":"CVarArg","type":"topic","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CVarArg","url":"\/documentation\/compute\/cvararg"},"doc://com.swallow.documentation.Compute/documentation/Compute/Encodable":{"url":"\/documentation\/compute\/encodable","navigatorTitle":[{"text":"Encodable","kind":"identifier"}],"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"Encodable","kind":"identifier"}],"abstract":[{"text":"A type that can encode itself to an external representation.","type":"text"}],"type":"topic","title":"Encodable","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Encodable"},"doc://com.swallow.documentation.Compute/documentation/Compute/Decodable":{"kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"Decodable","kind":"identifier"}],"title":"Decodable","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Decodable","abstract":[{"type":"text","text":"A type that can decode itself from an external representation."}],"url":"\/documentation\/compute\/decodable","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Decodable"}]},"doc://com.swallow.documentation.Compute/7Swallow16BooleanInitiableP":{"type":"unresolvable","title":"Swallow.BooleanInitiable","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow16BooleanInitiableP"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt64/FixedWidthInteger-Implementations":{"url":"\/documentation\/compute\/uint64\/fixedwidthinteger-implementations","title":"FixedWidthInteger Implementations","kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/FixedWidthInteger-Implementations","role":"collectionGroup","type":"topic","abstract":[]},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt64/init(_:)-8hpyb":{"url":"\/documentation\/compute\/uint64\/init(_:)-8hpyb","abstract":[],"title":"init(_:)","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/init(_:)-8hpyb","role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"text":"Float","kind":"typeIdentifier","preciseIdentifier":"s:Sf"},{"kind":"text","text":")"}],"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt64/addingReportingOverflow(_:)":{"kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"addingReportingOverflow"},{"text":"(","kind":"text"},{"text":"UInt64","kind":"typeIdentifier","preciseIdentifier":"s:s6UInt64V"},{"text":") -> (partialValue","kind":"text"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt64","preciseIdentifier":"s:s6UInt64V"},{"text":", overflow","kind":"text"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":")","kind":"text"}],"abstract":[{"type":"text","text":"Returns the sum of this value and the given value, along with a Boolean"},{"text":" ","type":"text"},{"type":"text","text":"value indicating whether overflow occurred in the operation."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/addingReportingOverflow(_:)","title":"addingReportingOverflow(_:)","url":"\/documentation\/compute\/uint64\/addingreportingoverflow(_:)","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt64/Comparable-Implementations":{"url":"\/documentation\/compute\/uint64\/comparable-implementations","abstract":[],"title":"Comparable Implementations","kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/Comparable-Implementations","role":"collectionGroup","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt64/nonzeroBitCount":{"kind":"symbol","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"nonzeroBitCount","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"}],"abstract":[{"type":"text","text":"The number of bits equal to 1 in this value’s binary representation."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/nonzeroBitCount","title":"nonzeroBitCount","url":"\/documentation\/compute\/uint64\/nonzerobitcount","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/AdditiveArithmetic":{"type":"topic","title":"AdditiveArithmetic","abstract":[{"text":"A type with values that support addition and subtraction.","type":"text"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AdditiveArithmetic"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AdditiveArithmetic","url":"\/documentation\/compute\/additivearithmetic","role":"symbol","navigatorTitle":[{"text":"AdditiveArithmetic","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt64/Encodable-Implementations":{"url":"\/documentation\/compute\/uint64\/encodable-implementations","role":"collectionGroup","abstract":[],"type":"topic","title":"Encodable Implementations","kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/Encodable-Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/FixedWidthInteger":{"title":"FixedWidthInteger","kind":"symbol","navigatorTitle":[{"text":"FixedWidthInteger","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FixedWidthInteger","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"FixedWidthInteger","kind":"identifier"}],"abstract":[{"text":"An integer type that uses a fixed size for every instance.","type":"text"}],"type":"topic","url":"\/documentation\/compute\/fixedwidthinteger"},"doc://com.swallow.documentation.Compute/7Swallow21SubtractionOperatableP":{"type":"unresolvable","title":"Swallow.SubtractionOperatable","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow21SubtractionOperatableP"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt64/!=(_:_:)-239k":{"kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"!="},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"UInt64","preciseIdentifier":"s:s6UInt64V"},{"kind":"text","text":", "},{"text":"UInt64","kind":"typeIdentifier","preciseIdentifier":"s:s6UInt64V"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/!=(_:_:)-239k","title":"!=(_:_:)","url":"\/documentation\/compute\/uint64\/!=(_:_:)-239k","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt64/_(_:_:)-1zzq5":{"url":"\/documentation\/compute\/uint64\/_(_:_:)-1zzq5","abstract":[{"type":"text","text":"Returns a Boolean value indicating whether the value of the first"},{"type":"text","text":" "},{"text":"argument is less than that of the second argument.","type":"text"}],"title":"<(_:_:)","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/_(_:_:)-1zzq5","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"<"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s6UInt64V","text":"UInt64"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:s6UInt64V","text":"UInt64"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt64/ExpressibleByIntegerLiteral-Implementations":{"kind":"article","type":"topic","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/ExpressibleByIntegerLiteral-Implementations","title":"ExpressibleByIntegerLiteral Implementations","url":"\/documentation\/compute\/uint64\/expressiblebyintegerliteral-implementations","role":"collectionGroup"},"doc://com.swallow.documentation.Compute/7Swallow26ShouldNotBeDecodedFromBoolP":{"title":"Swallow.ShouldNotBeDecodedFromBool","type":"unresolvable","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow26ShouldNotBeDecodedFromBoolP"},"doc://com.swallow.documentation.Compute/7Swallow11RandomnableP":{"title":"Swallow.Randomnable","type":"unresolvable","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow11RandomnableP"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt64/_=(_:_:)-20phr":{"url":"\/documentation\/compute\/uint64\/_=(_:_:)-20phr","abstract":[{"text":"Divides the first value by the second and stores the remainder in the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"left-hand-side variable."}],"title":"%=(_:_:)","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/_=(_:_:)-20phr","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"%="},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"text":"UInt64","kind":"typeIdentifier","preciseIdentifier":"s:s6UInt64V"},{"text":", ","kind":"text"},{"text":"UInt64","kind":"typeIdentifier","preciseIdentifier":"s:s6UInt64V"},{"text":")","kind":"text"}],"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/LosslessStringConvertible":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LosslessStringConvertible","kind":"identifier"}],"kind":"symbol","title":"LosslessStringConvertible","abstract":[{"type":"text","text":"A type that can be represented as a string in a lossless, unambiguous way."}],"role":"symbol","type":"topic","navigatorTitle":[{"text":"LosslessStringConvertible","kind":"identifier"}],"url":"\/documentation\/compute\/losslessstringconvertible","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LosslessStringConvertible"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt64/multipliedReportingOverflow(by:)":{"kind":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"multipliedReportingOverflow"},{"text":"(","kind":"text"},{"text":"by","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s6UInt64V","text":"UInt64","kind":"typeIdentifier"},{"text":") -> (partialValue","kind":"text"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s6UInt64V","text":"UInt64"},{"kind":"text","text":", overflow"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":")","kind":"text"}],"abstract":[{"text":"Returns the product of this value and the given value, along with a","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Boolean value indicating whether overflow occurred in the operation."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/multipliedReportingOverflow(by:)","title":"multipliedReportingOverflow(by:)","url":"\/documentation\/compute\/uint64\/multipliedreportingoverflow(by:)","role":"symbol"},"doc://com.swallow.documentation.Compute/7Swallow14CoderPrimitiveP":{"type":"unresolvable","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow14CoderPrimitiveP","title":"Swallow.CoderPrimitive"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt64/-=(_:_:)-994ek":{"kind":"symbol","type":"topic","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"-="},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"text":"UInt64","kind":"typeIdentifier","preciseIdentifier":"s:s6UInt64V"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"UInt64","preciseIdentifier":"s:s6UInt64V"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Subtracts the second value from the first and stores the difference in the"},{"type":"text","text":" "},{"text":"left-hand-side variable.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/-=(_:_:)-994ek","title":"-=(_:_:)","url":"\/documentation\/compute\/uint64\/-=(_:_:)-994ek","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt64/dividedReportingOverflow(by:)":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/dividedReportingOverflow(by:)","url":"\/documentation\/compute\/uint64\/dividedreportingoverflow(by:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"dividedReportingOverflow"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"by"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s6UInt64V","text":"UInt64"},{"kind":"text","text":") -> (partialValue"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s6UInt64V","text":"UInt64","kind":"typeIdentifier"},{"kind":"text","text":", overflow"},{"kind":"text","text":": "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":")","kind":"text"}],"role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Returns the quotient obtained by dividing this value by the given value,"},{"text":" ","type":"text"},{"text":"along with a Boolean value indicating whether overflow occurred in the","type":"text"},{"type":"text","text":" "},{"text":"operation.","type":"text"}],"type":"topic","title":"dividedReportingOverflow(by:)"},"doc://com.swallow.documentation.Compute/7Swallow18BoundedRandomnableP":{"type":"unresolvable","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow18BoundedRandomnableP","title":"Swallow.BoundedRandomnable"},"doc://com.swallow.documentation.Compute/7Swallow25MutableDivisionOperatableP":{"type":"unresolvable","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow25MutableDivisionOperatableP","title":"Swallow.MutableDivisionOperatable"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt64/init(_:)-7yfzu":{"url":"\/documentation\/compute\/uint64\/init(_:)-7yfzu","abstract":[{"text":"Construct with value ","type":"text"},{"type":"codeVoice","code":"v.value"},{"type":"text","text":"."}],"title":"init(_:)","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/init(_:)-7yfzu","role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"text":"Unicode","kind":"typeIdentifier","preciseIdentifier":"s:s7UnicodeO"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Scalar","preciseIdentifier":"s:s7UnicodeO6ScalarV"},{"text":")","kind":"text"}],"type":"topic"},"doc://com.swallow.documentation.Compute/10Accelerate10BNNSScalarP":{"type":"unresolvable","title":"Accelerate.BNNSScalar","identifier":"doc:\/\/com.swallow.documentation.Compute\/10Accelerate10BNNSScalarP"},"doc://com.swallow.documentation.Compute/7Swallow18AdditionOperatableP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow18AdditionOperatableP","type":"unresolvable","title":"Swallow.AdditionOperatable"},"doc://com.swallow.documentation.Compute/documentation/Compute/Comparable":{"url":"\/documentation\/compute\/comparable","type":"topic","kind":"symbol","role":"symbol","abstract":[{"text":"A type that can be compared using the relational operators ","type":"text"},{"code":"<","type":"codeVoice"},{"text":", ","type":"text"},{"code":"<=","type":"codeVoice"},{"text":", ","type":"text"},{"type":"codeVoice","code":">="},{"text":",","type":"text"},{"type":"text","text":" "},{"type":"text","text":"and "},{"type":"codeVoice","code":">"},{"text":".","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Comparable"}],"title":"Comparable","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Comparable","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"Comparable","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/7Swallow15NumberInitiableP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow15NumberInitiableP","type":"unresolvable","title":"Swallow.NumberInitiable"},"doc://com.swallow.documentation.Compute/7Swallow16SignedOrUnsignedP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow16SignedOrUnsignedP","type":"unresolvable","title":"Swallow.SignedOrUnsigned"},"doc://com.swallow.documentation.Compute/documentation/Compute/Equatable":{"abstract":[{"text":"A type that can be compared for value equality.","type":"text"}],"type":"topic","title":"Equatable","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Equatable"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Equatable","role":"symbol","url":"\/documentation\/compute\/equatable","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Equatable","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt64/&=(_:_:)":{"kind":"symbol","type":"topic","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"&=","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:s6UInt64V","text":"UInt64"},{"kind":"text","text":", "},{"text":"UInt64","kind":"typeIdentifier","preciseIdentifier":"s:s6UInt64V"},{"text":")","kind":"text"}],"abstract":[{"type":"text","text":"Stores the result of performing a bitwise AND operation on the two given"},{"type":"text","text":" "},{"text":"values in the left-hand-side variable.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/&=(_:_:)","title":"&=(_:_:)","url":"\/documentation\/compute\/uint64\/&=(_:_:)","role":"symbol"},"doc://com.swallow.documentation.Compute/7Swallow18ByteOrderSwappableP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow18ByteOrderSwappableP","type":"unresolvable","title":"Swallow.ByteOrderSwappable"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt64/init(_:)-71bjo":{"kind":"symbol","type":"topic","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"text":")","kind":"text"}],"abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/init(_:)-71bjo","title":"init(_:)","url":"\/documentation\/compute\/uint64\/init(_:)-71bjo","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt64/Words-swift.struct":{"navigatorTitle":[{"kind":"identifier","text":"Words"}],"kind":"symbol","role":"symbol","type":"topic","title":"UInt64.Words","abstract":[{"type":"text","text":"A type that represents the words of this integer."}],"url":"\/documentation\/compute\/uint64\/words-swift.struct","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Words","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/Words-swift.struct"},"doc://com.swallow.documentation.Compute/7Swallow25MutableAdditionOperatableP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow25MutableAdditionOperatableP","type":"unresolvable","title":"Swallow.MutableAdditionOperatable"},"doc://com.swallow.documentation.Compute/7Swallow27MutableArithmeticOperatableP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow27MutableArithmeticOperatableP","type":"unresolvable","title":"Swallow.MutableArithmeticOperatable"},"doc://com.swallow.documentation.Compute/documentation/Compute/ExpressibleByIntegerLiteral":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ExpressibleByIntegerLiteral","url":"\/documentation\/compute\/expressiblebyintegerliteral","title":"ExpressibleByIntegerLiteral","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ExpressibleByIntegerLiteral","kind":"identifier"}],"navigatorTitle":[{"text":"ExpressibleByIntegerLiteral","kind":"identifier"}],"abstract":[{"text":"A type that can be initialized with an integer literal.","type":"text"}],"kind":"symbol","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsignedInteger":{"url":"\/documentation\/compute\/unsignedinteger","abstract":[{"type":"text","text":"An integer type that can represent only nonnegative values."}],"kind":"symbol","navigatorTitle":[{"text":"UnsignedInteger","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsignedInteger","title":"UnsignedInteger","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"UnsignedInteger"}],"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt64/words-swift.property":{"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"words"},{"text":": ","kind":"text"},{"text":"UInt64","kind":"typeIdentifier","preciseIdentifier":"s:s6UInt64V"},{"text":".","kind":"text"},{"preciseIdentifier":"s:s6UInt64V5WordsV","text":"Words","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/words-swift.property","url":"\/documentation\/compute\/uint64\/words-swift.property","role":"symbol","abstract":[{"type":"text","text":"A collection containing the words of this value’s binary"},{"text":" ","type":"text"},{"type":"text","text":"representation, in order from the least significant to most significant."}],"title":"words","type":"topic","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt64/init(exactly:)-92on5":{"fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"?("},{"kind":"externalParam","text":"exactly"},{"kind":"text","text":": "},{"text":"Float16","preciseIdentifier":"s:s7Float16V","kind":"typeIdentifier"},{"kind":"text","text":")"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/init(exactly:)-92on5","title":"init(exactly:)","type":"topic","role":"symbol","abstract":[{"type":"text","text":"Creates an integer from the given floating-point value, if it can be"},{"type":"text","text":" "},{"text":"represented exactly.","type":"text"}],"url":"\/documentation\/compute\/uint64\/init(exactly:)-92on5"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt64/leadingZeroBitCount":{"url":"\/documentation\/compute\/uint64\/leadingzerobitcount","abstract":[{"type":"text","text":"The number of leading zeros in this value’s binary representation."}],"title":"leadingZeroBitCount","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/leadingZeroBitCount","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"leadingZeroBitCount","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"}],"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt64/&__=(_:_:)-9z0pp":{"kind":"symbol","type":"topic","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"&>>=","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"UInt64","preciseIdentifier":"s:s6UInt64V"},{"text":", ","kind":"text"},{"text":"UInt64","kind":"typeIdentifier","preciseIdentifier":"s:s6UInt64V"},{"text":")","kind":"text"}],"abstract":[{"type":"text","text":"Calculates the result of shifting a value’s binary representation the"},{"text":" ","type":"text"},{"text":"specified number of digits to the right, masking the shift amount to the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"type’s bit width, and stores the result in the left-hand-side variable."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/&__=(_:_:)-9z0pp","title":"&>>=(_:_:)","url":"\/documentation\/compute\/uint64\/&__=(_:_:)-9z0pp","role":"symbol"},"doc://com.swallow.documentation.Compute/7Swallow24MultiplicationOperatableP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow24MultiplicationOperatableP","type":"unresolvable","title":"Swallow.MultiplicationOperatable"},"doc://com.swallow.documentation.Compute/7Swallow13DataEncodableP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow13DataEncodableP","type":"unresolvable","title":"Swallow.DataEncodable"},"doc://com.swallow.documentation.Compute/7Swallow20ByteTupleConvertibleP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow20ByteTupleConvertibleP","type":"unresolvable","title":"Swallow.ByteTupleConvertible"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt64/IntegerLiteralType":{"kind":"symbol","type":"topic","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"IntegerLiteralType","kind":"identifier"}],"abstract":[{"type":"text","text":"A type that represents an integer literal."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/IntegerLiteralType","title":"UInt64.IntegerLiteralType","url":"\/documentation\/compute\/uint64\/integerliteraltype","navigatorTitle":[{"kind":"identifier","text":"IntegerLiteralType"}],"role":"symbol"},"doc://com.swallow.documentation.Compute/7Swallow13DataDecodableP":{"title":"Swallow.DataDecodable","type":"unresolvable","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow13DataDecodableP"},"doc://com.swallow.documentation.Compute/7Swallow6NumberP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow6NumberP","type":"unresolvable","title":"Swallow.Number"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt64/bitWidth-swift.type.property":{"url":"\/documentation\/compute\/uint64\/bitwidth-swift.type.property","abstract":[{"type":"text","text":"The number of bits used for the underlying binary representation of"},{"type":"text","text":" "},{"text":"values of this type.","type":"text"}],"title":"bitWidth","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/bitWidth-swift.type.property","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"bitWidth","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"type":"topic"},"doc://com.swallow.documentation.Compute/7Swallow28MutableSubtractionOperatableP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow28MutableSubtractionOperatableP","type":"unresolvable","title":"Swallow.MutableSubtractionOperatable"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt64/signum()":{"url":"\/documentation\/compute\/uint64\/signum()","abstract":[{"type":"text","text":"Returns "},{"type":"codeVoice","code":"-1"},{"text":" if this value is negative and ","type":"text"},{"code":"1","type":"codeVoice"},{"text":" if it’s positive;","type":"text"},{"type":"text","text":" "},{"text":"otherwise, ","type":"text"},{"code":"0","type":"codeVoice"},{"type":"text","text":"."}],"title":"signum()","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/signum()","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"signum","kind":"identifier"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:s6UInt64V","text":"UInt64","kind":"typeIdentifier"}],"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/BinaryInteger":{"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"BinaryInteger"}],"navigatorTitle":[{"kind":"identifier","text":"BinaryInteger"}],"url":"\/documentation\/compute\/binaryinteger","type":"topic","abstract":[{"type":"text","text":"An integer type with a binary representation."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryInteger","title":"BinaryInteger","kind":"symbol","role":"symbol"},"doc://com.swallow.documentation.Compute/7Swallow31MutableMultiplicationOperatableP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow31MutableMultiplicationOperatableP","title":"Swallow.MutableMultiplicationOperatable","type":"unresolvable"},"doc://com.swallow.documentation.Compute/7Swallow22ApproximatelyEquatableP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow22ApproximatelyEquatableP","title":"Swallow.ApproximatelyEquatable","type":"unresolvable"},"doc://com.swallow.documentation.Compute/7Swallow20ArithmeticOperatableP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow20ArithmeticOperatableP","title":"Swallow.ArithmeticOperatable","type":"unresolvable"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt64/trailingZeroBitCount":{"url":"\/documentation\/compute\/uint64\/trailingzerobitcount","abstract":[{"text":"The number of trailing zeros in this value’s binary representation.","type":"text"}],"title":"trailingZeroBitCount","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/trailingZeroBitCount","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"trailingZeroBitCount","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"}],"type":"topic"},"doc://com.swallow.documentation.Compute/7Swallow24UnsignedIntegerInitiableP":{"title":"Swallow.UnsignedIntegerInitiable","type":"unresolvable","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow24UnsignedIntegerInitiableP"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt64/Decodable-Implementations":{"url":"\/documentation\/compute\/uint64\/decodable-implementations","abstract":[],"title":"Decodable Implementations","kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/Decodable-Implementations","role":"collectionGroup","type":"topic"},"doc://com.swallow.documentation.Compute/7Swallow16IntegerInitiableP":{"title":"Swallow.IntegerInitiable","type":"unresolvable","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow16IntegerInitiableP"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt64/SIMDScalar-Implementations":{"role":"collectionGroup","url":"\/documentation\/compute\/uint64\/simdscalar-implementations","type":"topic","title":"SIMDScalar Implementations","kind":"article","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/SIMDScalar-Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt64/byteSwapped":{"url":"\/documentation\/compute\/uint64\/byteswapped","abstract":[{"type":"text","text":"A representation of this integer with the byte order swapped."}],"title":"byteSwapped","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/byteSwapped","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"byteSwapped","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s6UInt64V","text":"UInt64","kind":"typeIdentifier"}],"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt64/init(exactly:)-gsjs":{"title":"init(exactly:)","url":"\/documentation\/compute\/uint64\/init(exactly:)-gsjs","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/init(exactly:)-gsjs","abstract":[{"type":"text","text":"Creates an integer from the given floating-point value, if it can be"},{"type":"text","text":" "},{"type":"text","text":"represented exactly."}],"role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"?("},{"kind":"externalParam","text":"exactly"},{"text":": ","kind":"text"},{"text":"Float","kind":"typeIdentifier","preciseIdentifier":"s:Sf"},{"kind":"text","text":")"}],"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt64/+=(_:_:)-38bug":{"kind":"symbol","type":"topic","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"+="},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UInt64","kind":"typeIdentifier","preciseIdentifier":"s:s6UInt64V"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"UInt64","preciseIdentifier":"s:s6UInt64V"},{"kind":"text","text":")"}],"abstract":[{"text":"Adds two values and stores the result in the left-hand-side variable.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/+=(_:_:)-38bug","title":"+=(_:_:)","url":"\/documentation\/compute\/uint64\/+=(_:_:)-38bug","role":"symbol"},"doc://com.swallow.documentation.Compute/7Swallow8DiscreteP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow8DiscreteP","title":"Swallow.Discrete","type":"unresolvable"},"doc://com.swallow.documentation.Compute/7Swallow20DiscreteOrContinuousP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow20DiscreteOrContinuousP","title":"Swallow.DiscreteOrContinuous","type":"unresolvable"},"doc://com.swallow.documentation.Compute/7Swallow17NumberConvertibleP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow17NumberConvertibleP","title":"Swallow.NumberConvertible","type":"unresolvable"},"doc://com.swallow.documentation.Compute/documentation/Compute/Strideable":{"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/compute\/strideable","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Strideable","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Strideable"}],"navigatorTitle":[{"text":"Strideable","kind":"identifier"}],"abstract":[{"type":"text","text":"A type representing continuous, one-dimensional values that can be offset"},{"type":"text","text":" "},{"type":"text","text":"and measured."}],"title":"Strideable"},"doc://com.swallow.documentation.Compute/documentation/Compute/CustomStringConvertible":{"url":"\/documentation\/compute\/customstringconvertible","navigatorTitle":[{"kind":"identifier","text":"CustomStringConvertible"}],"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CustomStringConvertible","kind":"identifier"}],"abstract":[{"text":"A type with a customized textual representation.","type":"text"}],"type":"topic","title":"CustomStringConvertible","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CustomStringConvertible"},"doc://com.swallow.documentation.Compute/documentation/Compute/Hashable":{"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Hashable"}],"title":"Hashable","navigatorTitle":[{"text":"Hashable","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"A type that can be hashed into a "},{"type":"codeVoice","code":"Hasher"},{"type":"text","text":" to produce an integer hash value."}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Hashable","url":"\/documentation\/compute\/hashable","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt64/==(_:_:)-7a0u0":{"kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"==","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"UInt64","kind":"typeIdentifier","preciseIdentifier":"s:s6UInt64V"},{"kind":"text","text":", "},{"preciseIdentifier":"s:s6UInt64V","kind":"typeIdentifier","text":"UInt64"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"abstract":[{"text":"Returns a Boolean value indicating whether two values are equal.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/==(_:_:)-7a0u0","title":"==(_:_:)","url":"\/documentation\/compute\/uint64\/==(_:_:)-7a0u0","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt64/init(exactly:)-4pdnv":{"url":"\/documentation\/compute\/uint64\/init(exactly:)-4pdnv","abstract":[{"text":"Creates an integer from the given floating-point value, if it can be","type":"text"},{"type":"text","text":" "},{"type":"text","text":"represented exactly."}],"title":"init(exactly:)","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/init(exactly:)-4pdnv","role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"?("},{"text":"exactly","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sd","text":"Double","kind":"typeIdentifier"},{"text":")","kind":"text"}],"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt64/subtractingReportingOverflow(_:)":{"kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"subtractingReportingOverflow","kind":"identifier"},{"text":"(","kind":"text"},{"text":"UInt64","kind":"typeIdentifier","preciseIdentifier":"s:s6UInt64V"},{"text":") -> (partialValue","kind":"text"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt64","preciseIdentifier":"s:s6UInt64V"},{"text":", overflow","kind":"text"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":")"}],"abstract":[{"text":"Returns the difference obtained by subtracting the given value from this","type":"text"},{"type":"text","text":" "},{"text":"value, along with a Boolean value indicating whether overflow occurred in","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the operation."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/subtractingReportingOverflow(_:)","title":"subtractingReportingOverflow(_:)","url":"\/documentation\/compute\/uint64\/subtractingreportingoverflow(_:)","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt64/UnsignedInteger-Implementations":{"url":"\/documentation\/compute\/uint64\/unsignedinteger-implementations","abstract":[],"title":"UnsignedInteger Implementations","kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/UnsignedInteger-Implementations","role":"collectionGroup","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt64/Magnitude-swift.typealias":{"kind":"symbol","type":"topic","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Magnitude"}],"abstract":[{"type":"text","text":"A type that can represent the absolute value of any possible value of"},{"text":" ","type":"text"},{"text":"this type.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/Magnitude-swift.typealias","title":"UInt64.Magnitude","url":"\/documentation\/compute\/uint64\/magnitude-swift.typealias","navigatorTitle":[{"kind":"identifier","text":"Magnitude"}],"role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt64/Strideable-Implementations":{"url":"\/documentation\/compute\/uint64\/strideable-implementations","abstract":[],"title":"Strideable Implementations","kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/Strideable-Implementations","role":"collectionGroup","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt64/AdditiveArithmetic-Implementations":{"kind":"article","url":"\/documentation\/compute\/uint64\/additivearithmetic-implementations","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/AdditiveArithmetic-Implementations","type":"topic","title":"AdditiveArithmetic Implementations","role":"collectionGroup"},"doc://com.swallow.documentation.Compute/documentation/Compute/CustomReflectable":{"url":"\/documentation\/compute\/customreflectable","role":"symbol","abstract":[{"text":"A type that explicitly supplies its own mirror.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CustomReflectable","title":"CustomReflectable","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CustomReflectable"}],"navigatorTitle":[{"kind":"identifier","text":"CustomReflectable"}],"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt64/dividingFullWidth(_:)":{"kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"dividingFullWidth","kind":"identifier"},{"text":"((high","kind":"text"},{"kind":"text","text":": "},{"text":"UInt64","preciseIdentifier":"s:s6UInt64V","kind":"typeIdentifier"},{"kind":"text","text":", low"},{"kind":"text","text":": "},{"text":"UInt64","kind":"typeIdentifier","preciseIdentifier":"s:s6UInt64V"},{"text":".","kind":"text"},{"preciseIdentifier":"s:s6UInt64V9Magnitudea","text":"Magnitude","kind":"typeIdentifier"},{"text":")) -> (quotient","kind":"text"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s6UInt64V","kind":"typeIdentifier","text":"UInt64"},{"text":", remainder","kind":"text"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s6UInt64V","kind":"typeIdentifier","text":"UInt64"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Returns a tuple containing the quotient and remainder of dividing the"},{"text":" ","type":"text"},{"text":"given value by this value.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/dividingFullWidth(_:)","title":"dividingFullWidth(_:)","url":"\/documentation\/compute\/uint64\/dividingfullwidth(_:)","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Sendable":{"kind":"symbol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"Sendable","kind":"identifier"}],"title":"Sendable","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sendable","abstract":[],"url":"\/documentation\/compute\/sendable","role":"symbol","navigatorTitle":[{"text":"Sendable","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt64/&__=(_:_:)-p2fc":{"url":"\/documentation\/compute\/uint64\/&__=(_:_:)-p2fc","abstract":[{"text":"Returns the result of shifting a value’s binary representation the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"specified number of digits to the left, masking the shift amount to the"},{"text":" ","type":"text"},{"type":"text","text":"type’s bit width, and stores the result in the left-hand-side variable."}],"title":"&<<=(_:_:)","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/&__=(_:_:)-p2fc","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"&<<=","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"UInt64","preciseIdentifier":"s:s6UInt64V"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s6UInt64V","text":"UInt64"},{"text":")","kind":"text"}],"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt64/_=(_:_:)-3oy72":{"kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"|=","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"text":"UInt64","kind":"typeIdentifier","preciseIdentifier":"s:s6UInt64V"},{"kind":"text","text":", "},{"preciseIdentifier":"s:s6UInt64V","kind":"typeIdentifier","text":"UInt64"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Stores the result of performing a bitwise OR operation on the two given"},{"type":"text","text":" "},{"text":"values in the left-hand-side variable.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/_=(_:_:)-3oy72","title":"|=(_:_:)","url":"\/documentation\/compute\/uint64\/_=(_:_:)-3oy72","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/BitwiseCopyable":{"title":"BitwiseCopyable","abstract":[],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BitwiseCopyable","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BitwiseCopyable","url":"\/documentation\/compute\/bitwisecopyable","navigatorTitle":[{"kind":"identifier","text":"BitwiseCopyable"}],"kind":"symbol","role":"symbol","type":"topic"},"doc://com.swallow.documentation.Compute/7Swallow7TrivialP":{"type":"unresolvable","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow7TrivialP","title":"Swallow.Trivial"},"doc://com.swallow.documentation.Compute/documentation/Compute/Numeric":{"abstract":[{"type":"text","text":"A type with values that support multiplication."}],"kind":"symbol","url":"\/documentation\/compute\/numeric","navigatorTitle":[{"text":"Numeric","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Numeric","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Numeric"}],"title":"Numeric"},"doc://com.swallow.documentation.Compute/7Swallow22SignedIntegerInitiableP":{"type":"unresolvable","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow22SignedIntegerInitiableP","title":"Swallow.SignedIntegerInitiable"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt64/Hashable-Implementations":{"kind":"article","role":"collectionGroup","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/Hashable-Implementations","type":"topic","url":"\/documentation\/compute\/uint64\/hashable-implementations","abstract":[],"title":"Hashable Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt64/remainderReportingOverflow(dividingBy:)":{"url":"\/documentation\/compute\/uint64\/remainderreportingoverflow(dividingby:)","abstract":[{"text":"Returns the remainder after dividing this value by the given value, along","type":"text"},{"type":"text","text":" "},{"type":"text","text":"with a Boolean value indicating whether overflow occurred during division."}],"title":"remainderReportingOverflow(dividingBy:)","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/remainderReportingOverflow(dividingBy:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"remainderReportingOverflow"},{"text":"(","kind":"text"},{"text":"dividingBy","kind":"externalParam"},{"kind":"text","text":": "},{"text":"UInt64","kind":"typeIdentifier","preciseIdentifier":"s:s6UInt64V"},{"text":") -> (partialValue","kind":"text"},{"text":": ","kind":"text"},{"text":"UInt64","kind":"typeIdentifier","preciseIdentifier":"s:s6UInt64V"},{"text":", overflow","kind":"text"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"text":")","kind":"text"}],"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt64/_=(_:_:)-9jhbb":{"kind":"symbol","type":"topic","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"\/=","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"preciseIdentifier":"s:s6UInt64V","kind":"typeIdentifier","text":"UInt64"},{"kind":"text","text":", "},{"preciseIdentifier":"s:s6UInt64V","text":"UInt64","kind":"typeIdentifier"},{"kind":"text","text":")"}],"abstract":[{"text":"Divides the first value by the second and stores the quotient in the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"left-hand-side variable."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/_=(_:_:)-9jhbb","title":"\/=(_:_:)","url":"\/documentation\/compute\/uint64\/_=(_:_:)-9jhbb","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt64/Stride":{"url":"\/documentation\/compute\/uint64\/stride","abstract":[{"type":"text","text":"A type that represents the distance between two values."}],"title":"UInt64.Stride","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/Stride","role":"symbol","navigatorTitle":[{"text":"Stride","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Stride"}],"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt64/*=(_:_:)":{"kind":"symbol","type":"topic","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"*="},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"text":"UInt64","kind":"typeIdentifier","preciseIdentifier":"s:s6UInt64V"},{"text":", ","kind":"text"},{"text":"UInt64","kind":"typeIdentifier","preciseIdentifier":"s:s6UInt64V"},{"text":")","kind":"text"}],"abstract":[{"type":"text","text":"Multiplies two values and stores the result in the left-hand-side"},{"text":" ","type":"text"},{"type":"text","text":"variable."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/*=(_:_:)","title":"*=(_:_:)","url":"\/documentation\/compute\/uint64\/*=(_:_:)","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt64/_=(_:_:)-7dm2a":{"url":"\/documentation\/compute\/uint64\/_=(_:_:)-7dm2a","abstract":[{"type":"text","text":"Stores the result of performing a bitwise XOR operation on the two given"},{"text":" ","type":"text"},{"type":"text","text":"values in the left-hand-side variable."}],"title":"^=(_:_:)","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/_=(_:_:)-7dm2a","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"^=","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"preciseIdentifier":"s:s6UInt64V","kind":"typeIdentifier","text":"UInt64"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"UInt64","preciseIdentifier":"s:s6UInt64V"},{"text":")","kind":"text"}],"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt64/init(_:)-6bhfg":{"kind":"symbol","type":"topic","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"text":"Float16","kind":"typeIdentifier","preciseIdentifier":"s:s7Float16V"},{"text":")","kind":"text"}],"abstract":[{"type":"text","text":"Creates an integer from the given floating-point value, rounding toward"},{"type":"text","text":" "},{"type":"text","text":"zero."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/init(_:)-6bhfg","title":"init(_:)","url":"\/documentation\/compute\/uint64\/init(_:)-6bhfg","role":"symbol"},"doc://com.swallow.documentation.Compute/7Swallow22FloatingPointInitiableP":{"type":"unresolvable","title":"Swallow.FloatingPointInitiable","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow22FloatingPointInitiableP"},"doc://com.swallow.documentation.Compute/7Swallow7BoundedP":{"type":"unresolvable","title":"Swallow.Bounded","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow7BoundedP"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt64":{"navigatorTitle":[{"text":"UInt64","kind":"identifier"}],"kind":"symbol","role":"symbol","type":"topic","title":"UInt64","abstract":[{"text":"A 64-bit unsigned integer value","type":"text"},{"type":"text","text":" "},{"type":"text","text":"type."}],"url":"\/documentation\/compute\/uint64","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"UInt64","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt64/_CustomPlaygroundQuickLookable-Implementations":{"url":"\/documentation\/compute\/uint64\/_customplaygroundquicklookable-implementations","abstract":[],"title":"_CustomPlaygroundQuickLookable Implementations","kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/_CustomPlaygroundQuickLookable-Implementations","role":"collectionGroup","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt64/Equatable-Implementations":{"kind":"article","type":"topic","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/Equatable-Implementations","title":"Equatable Implementations","url":"\/documentation\/compute\/uint64\/equatable-implementations","role":"collectionGroup"}}}