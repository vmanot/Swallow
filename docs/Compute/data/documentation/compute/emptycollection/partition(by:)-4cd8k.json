{"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/EmptyCollection\/partition(by:)-4cd8k","interfaceLanguage":"swift"},"metadata":{"roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"partition"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"by"},{"text":": (","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Element","preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") "},{"text":"rethrows","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Index","preciseIdentifier":"s:Sl5IndexQa"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"code":"BidirectionalCollection","type":"codeVoice"},{"text":".","type":"text"}]},"symbolKind":"method","modules":[{"relatedModules":["Swift"],"name":"Compute"}],"title":"partition(by:)","role":"symbol","externalID":"s:SMsSKRzrlE9partition2by5IndexSlQzSb7ElementSTQzKXE_tKF::SYNTHESIZED::s:s15EmptyCollectionV","extendedModule":"Swift"},"kind":"symbol","abstract":[{"type":"text","text":"Reorders the elements of the collection such that all the elements"},{"text":" ","type":"text"},{"text":"that match the given predicate are after all the elements that don’t","type":"text"},{"type":"text","text":" "},{"type":"text","text":"match."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/emptycollection\/partition(by:)-4cd8k"]}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"mutating"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"partition","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"by"},{"kind":"text","text":" "},{"text":"belongsInSecondPartition","kind":"internalParam"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","text":"Element","preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bool","preciseIdentifier":"s:Sb","text":"Bool"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/Index","kind":"typeIdentifier","text":"Index","preciseIdentifier":"s:Sl5IndexQa"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"A predicate used to partition","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the collection. All elements satisfying this predicate are ordered"},{"type":"text","text":" "},{"text":"after all elements not satisfying it.","type":"text"}]}],"name":"belongsInSecondPartition"}]},{"content":[{"text":"Return Value","anchor":"return-value","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"The index of the first element in the reordered collection"},{"type":"text","text":" "},{"text":"that matches ","type":"text"},{"code":"belongsInSecondPartition","type":"codeVoice"},{"type":"text","text":". If no elements in the"},{"text":" ","type":"text"},{"type":"text","text":"collection match "},{"code":"belongsInSecondPartition","type":"codeVoice"},{"type":"text","text":", the returned index is"},{"type":"text","text":" "},{"type":"text","text":"equal to the collection’s "},{"code":"endIndex","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}],"kind":"content"},{"content":[{"level":2,"anchor":"discussion","type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"After partitioning a collection, there is a pivot index "},{"code":"p","type":"codeVoice"},{"type":"text","text":" where"},{"type":"text","text":" "},{"type":"text","text":"no element before "},{"code":"p","type":"codeVoice"},{"text":" satisfies the ","type":"text"},{"code":"belongsInSecondPartition","type":"codeVoice"},{"text":" ","type":"text"},{"type":"text","text":"predicate and every element at or after "},{"code":"p","type":"codeVoice"},{"text":" satisfies","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"belongsInSecondPartition"},{"text":". This operation isn’t guaranteed to be","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"stable, so the relative ordering of elements within the partitions might"},{"type":"text","text":" "},{"type":"text","text":"change."}]},{"inlineContent":[{"type":"text","text":"In the following example, an array of numbers is partitioned by a"},{"text":" ","type":"text"},{"type":"text","text":"predicate that matches elements greater than 30."}],"type":"paragraph"},{"syntax":null,"code":["var numbers = [30, 40, 20, 30, 30, 60, 10]","let p = numbers.partition(by: { $0 > 30 })","\/\/ p == 5","\/\/ numbers == [30, 10, 20, 30, 30, 60, 40]"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"numbers"},{"type":"text","text":" array is now arranged in two partitions. The first"},{"type":"text","text":" "},{"text":"partition, ","type":"text"},{"code":"numbers[..<p]","type":"codeVoice"},{"type":"text","text":", is made up of the elements that"},{"text":" ","type":"text"},{"type":"text","text":"are not greater than 30. The second partition, "},{"type":"codeVoice","code":"numbers[p...]"},{"type":"text","text":","},{"text":" ","type":"text"},{"text":"is made up of the elements that ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"are","type":"text"}]},{"type":"text","text":" greater than 30."}]},{"type":"codeListing","code":["let first = numbers[..<p]","\/\/ first == [30, 10, 20, 30, 30]","let second = numbers[p...]","\/\/ second == [60, 40]"],"syntax":null},{"type":"paragraph","inlineContent":[{"type":"text","text":"Note that the order of elements in both partitions changed."},{"type":"text","text":" "},{"type":"text","text":"That is, "},{"code":"40","type":"codeVoice"},{"type":"text","text":" appears before "},{"type":"codeVoice","code":"60"},{"type":"text","text":" in the original collection,"},{"text":" ","type":"text"},{"type":"text","text":"but, after calling "},{"code":"partition(by:)","type":"codeVoice"},{"type":"text","text":", "},{"code":"60","type":"codeVoice"},{"type":"text","text":" appears before "},{"type":"codeVoice","code":"40"},{"type":"text","text":"."}]},{"type":"aside","name":"Complexity","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"O("},{"inlineContent":[{"type":"text","text":"n"}],"type":"emphasis"},{"text":"), where ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"n"}]},{"text":" is the length of the collection.","type":"text"}]}],"style":"note"}],"kind":"content"}],"sections":[],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/EmptyCollection","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/EmptyCollection\/MutableCollection-Implementations"]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/EmptyCollection/partition(by:)-4cd8k":{"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"partition"},{"kind":"text","text":"("},{"text":"by","kind":"externalParam"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa","text":"Index"}],"role":"symbol","abstract":[{"text":"Reorders the elements of the collection such that all the elements","type":"text"},{"type":"text","text":" "},{"text":"that match the given predicate are after all the elements that don’t","type":"text"},{"type":"text","text":" "},{"type":"text","text":"match."}],"title":"partition(by:)","type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/EmptyCollection\/partition(by:)-4cd8k","conformance":{"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"code":"BidirectionalCollection","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"url":"\/documentation\/compute\/emptycollection\/partition(by:)-4cd8k"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/EmptyCollection/MutableCollection-Implementations":{"kind":"article","title":"MutableCollection Implementations","abstract":[],"role":"collectionGroup","type":"topic","url":"\/documentation\/compute\/emptycollection\/mutablecollection-implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/EmptyCollection\/MutableCollection-Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence/Element":{"type":"topic","required":true,"abstract":[{"type":"text","text":"A type representing the sequence’s elements."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"symbol","url":"\/documentation\/compute\/sequence\/element","role":"symbol","title":"Element","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Collection/Index":{"url":"\/documentation\/compute\/collection\/index","required":true,"role":"symbol","title":"Index","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Index","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"Comparable","preciseIdentifier":"s:SL","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"A type that represents a position in the collection."}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/Index","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/EmptyCollection":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"EmptyCollection"}],"role":"symbol","kind":"symbol","navigatorTitle":[{"text":"EmptyCollection","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"A collection whose element type is "},{"type":"codeVoice","code":"Element"},{"text":" but that is always empty.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/EmptyCollection","url":"\/documentation\/compute\/emptycollection","title":"EmptyCollection"},"doc://com.swallow.documentation.Compute/documentation/Compute/Bool":{"url":"\/documentation\/compute\/bool","role":"symbol","title":"Bool","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Bool","kind":"identifier"}],"abstract":[{"type":"text","text":"A value type whose instances are either "},{"type":"codeVoice","code":"true"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"false"},{"text":".","type":"text"}],"navigatorTitle":[{"text":"Bool","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bool","kind":"symbol"}}}