{"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/EmptyCollection","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/EmptyCollection\/RandomAccessCollection-Implementations"]]},"schemaVersion":{"major":0,"patch":0,"minor":3},"metadata":{"roleHeading":"Instance Method","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"index"},{"text":"(","kind":"text"},{"text":"EmptyCollection","preciseIdentifier":"s:s15EmptyCollectionV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"kind":"typeIdentifier","text":"Index","preciseIdentifier":"s:s15EmptyCollectionV5Indexa"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"offsetBy"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"limitedBy"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"EmptyCollection","preciseIdentifier":"s:s15EmptyCollectionV"},{"kind":"text","text":"<"},{"text":"Element","kind":"typeIdentifier"},{"kind":"text","text":">."},{"preciseIdentifier":"s:s15EmptyCollectionV5Indexa","text":"Index","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"EmptyCollection","kind":"typeIdentifier","preciseIdentifier":"s:s15EmptyCollectionV"},{"text":"<","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"preciseIdentifier":"s:s15EmptyCollectionV5Indexa","kind":"typeIdentifier","text":"Index"},{"kind":"text","text":"?"}],"modules":[{"relatedModules":["Swift"],"name":"Compute"}],"extendedModule":"Swift","title":"index(_:offsetBy:limitedBy:)","externalID":"s:s15EmptyCollectionV5index_8offsetBy07limitedE0SiSgSi_S2itF","symbolKind":"method"},"abstract":[{"type":"text","text":"Returns an index that is the specified distance from the given index,"},{"type":"text","text":" "},{"type":"text","text":"unless that distance is beyond a given limiting index."}],"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/EmptyCollection\/index(_:offsetBy:limitedBy:)","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"index"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"i"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"EmptyCollection","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/EmptyCollection","preciseIdentifier":"s:s15EmptyCollectionV"},{"kind":"text","text":"<"},{"text":"Element","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"kind":"typeIdentifier","text":"Index","preciseIdentifier":"s:s15EmptyCollectionV5Indexa","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/EmptyCollection\/Index"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"offsetBy"},{"text":" ","kind":"text"},{"text":"n","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"limitedBy"},{"kind":"text","text":" "},{"text":"limit","kind":"internalParam"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/EmptyCollection","text":"EmptyCollection","kind":"typeIdentifier","preciseIdentifier":"s:s15EmptyCollectionV"},{"kind":"text","text":"<"},{"text":"Element","kind":"typeIdentifier"},{"kind":"text","text":">."},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/EmptyCollection\/Index","text":"Index","preciseIdentifier":"s:s15EmptyCollectionV5Indexa","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/EmptyCollection","text":"EmptyCollection","preciseIdentifier":"s:s15EmptyCollectionV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">."},{"kind":"typeIdentifier","preciseIdentifier":"s:s15EmptyCollectionV5Indexa","text":"Index","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/EmptyCollection\/Index"},{"text":"?","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A valid index of the collection."}]}],"name":"i"},{"content":[{"inlineContent":[{"text":"A valid index of the collection to use as a limit. If","type":"text"},{"type":"text","text":" "},{"code":"distance > 0","type":"codeVoice"},{"type":"text","text":", a limit that is less than "},{"type":"codeVoice","code":"i"},{"text":" has no effect.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Likewise, if "},{"type":"codeVoice","code":"distance < 0"},{"text":", a limit that is greater than ","type":"text"},{"code":"i","type":"codeVoice"},{"text":" has no","type":"text"},{"type":"text","text":" "},{"type":"text","text":"effect."}],"type":"paragraph"}],"name":"limit"}]},{"kind":"content","content":[{"level":2,"anchor":"return-value","type":"heading","text":"Return Value"},{"inlineContent":[{"type":"text","text":"An index offset by "},{"type":"codeVoice","code":"distance"},{"type":"text","text":" from the index "},{"code":"i","type":"codeVoice"},{"type":"text","text":", unless that"},{"text":" ","type":"text"},{"text":"index would be beyond ","type":"text"},{"type":"codeVoice","code":"limit"},{"type":"text","text":" in the direction of movement. In that"},{"text":" ","type":"text"},{"text":"case, the method returns ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."}],"type":"paragraph"}]},{"kind":"content","content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The following example obtains an index advanced four positions from a"},{"text":" ","type":"text"},{"type":"text","text":"string’s starting index and then prints the character at that position."},{"type":"text","text":" "},{"type":"text","text":"The operation doesn’t require going beyond the limiting "},{"type":"codeVoice","code":"s.endIndex"},{"type":"text","text":" "},{"text":"value, so it succeeds.","type":"text"}]},{"code":["let s = \"Swift\"","if let i = s.index(s.startIndex, offsetBy: 4, limitedBy: s.endIndex) {","    print(s[i])","}","\/\/ Prints \"t\""],"syntax":null,"type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"The next example attempts to retrieve an index six positions from","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"s.startIndex"},{"text":" but fails, because that distance is beyond the index","type":"text"},{"type":"text","text":" "},{"type":"text","text":"passed as "},{"type":"codeVoice","code":"limit"},{"type":"text","text":"."}]},{"syntax":null,"code":["let j = s.index(s.startIndex, offsetBy: 6, limitedBy: s.endIndex)","print(j)","\/\/ Prints \"nil\""],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The value passed as "},{"code":"distance","type":"codeVoice"},{"type":"text","text":" must not offset "},{"code":"i","type":"codeVoice"},{"type":"text","text":" beyond the bounds of"},{"text":" ","type":"text"},{"text":"the collection, unless the index passed as ","type":"text"},{"code":"limit","type":"codeVoice"},{"type":"text","text":" prevents offsetting"},{"type":"text","text":" "},{"type":"text","text":"beyond those bounds."}]},{"name":"Complexity","type":"aside","style":"note","content":[{"type":"paragraph","inlineContent":[{"text":"O(1)","type":"text"}]}]}]}],"variants":[{"paths":["\/documentation\/compute\/emptycollection\/index(_:offsetby:limitedby:)"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/EmptyCollection/index(_:offsetBy:limitedBy:)":{"url":"\/documentation\/compute\/emptycollection\/index(_:offsetby:limitedby:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"index"},{"text":"(","kind":"text"},{"text":"EmptyCollection","preciseIdentifier":"s:s15EmptyCollectionV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Element"},{"text":">.","kind":"text"},{"text":"Index","kind":"typeIdentifier","preciseIdentifier":"s:s15EmptyCollectionV5Indexa"},{"kind":"text","text":", "},{"text":"offsetBy","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"limitedBy"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s15EmptyCollectionV","kind":"typeIdentifier","text":"EmptyCollection"},{"text":"<","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"kind":"text","text":">."},{"preciseIdentifier":"s:s15EmptyCollectionV5Indexa","kind":"typeIdentifier","text":"Index"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:s15EmptyCollectionV","text":"EmptyCollection","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Element"},{"text":">.","kind":"text"},{"text":"Index","kind":"typeIdentifier","preciseIdentifier":"s:s15EmptyCollectionV5Indexa"},{"text":"?","kind":"text"}],"role":"symbol","abstract":[{"type":"text","text":"Returns an index that is the specified distance from the given index,"},{"type":"text","text":" "},{"type":"text","text":"unless that distance is beyond a given limiting index."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/EmptyCollection\/index(_:offsetBy:limitedBy:)","title":"index(_:offsetBy:limitedBy:)","kind":"symbol","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/EmptyCollection/Index":{"fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"text":"Index","kind":"identifier"}],"title":"EmptyCollection.Index","url":"\/documentation\/compute\/emptycollection\/index","type":"topic","navigatorTitle":[{"text":"Index","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"A type that represents a valid position in the collection."}],"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/EmptyCollection\/Index"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","abstract":[{"type":"text","text":"A signed integer value type."}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Int","kind":"identifier"}],"navigatorTitle":[{"text":"Int","kind":"identifier"}],"title":"Int","url":"\/documentation\/compute\/int","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/EmptyCollection/RandomAccessCollection-Implementations":{"kind":"article","role":"collectionGroup","title":"RandomAccessCollection Implementations","type":"topic","url":"\/documentation\/compute\/emptycollection\/randomaccesscollection-implementations","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/EmptyCollection\/RandomAccessCollection-Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/EmptyCollection":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"EmptyCollection"}],"role":"symbol","kind":"symbol","navigatorTitle":[{"text":"EmptyCollection","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"A collection whose element type is "},{"type":"codeVoice","code":"Element"},{"text":" but that is always empty.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/EmptyCollection","url":"\/documentation\/compute\/emptycollection","title":"EmptyCollection"}}}