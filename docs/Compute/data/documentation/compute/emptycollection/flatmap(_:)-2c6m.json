{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"flatMap","kind":"identifier"},{"kind":"text","text":"<"},{"text":"SegmentOfResult","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"transform"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"SegmentOfResult","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"rethrows"},{"text":" -> [","kind":"text"},{"text":"SegmentOfResult","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"text":"] ","kind":"text"},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"text":"SegmentOfResult","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Sequence","kind":"typeIdentifier","preciseIdentifier":"s:ST","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"A closure that accepts an element of this","type":"text"},{"type":"text","text":" "},{"type":"text","text":"sequence as its argument and returns a sequence or collection."}]}],"name":"transform"}]},{"kind":"content","content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"inlineContent":[{"text":"The resulting flattened array.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"heading","anchor":"discussion","text":"Discussion","level":2},{"type":"paragraph","inlineContent":[{"text":"Use this method to receive a single-level collection when your","type":"text"},{"text":" ","type":"text"},{"text":"transformation produces a sequence or collection for each element.","type":"text"}]},{"inlineContent":[{"type":"text","text":"In this example, note the difference in the result of using "},{"code":"map","type":"codeVoice"},{"text":" and","type":"text"},{"text":" ","type":"text"},{"code":"flatMap","type":"codeVoice"},{"type":"text","text":" with a transformation that returns an array."}],"type":"paragraph"},{"syntax":null,"type":"codeListing","code":["let numbers = [1, 2, 3, 4]","","let mapped = numbers.map { Array(repeating: $0, count: $0) }","\/\/ [[1], [2, 2], [3, 3, 3], [4, 4, 4, 4]]","","let flatMapped = numbers.flatMap { Array(repeating: $0, count: $0) }","\/\/ [1, 2, 2, 3, 3, 3, 4, 4, 4, 4]"]},{"inlineContent":[{"type":"text","text":"In fact, "},{"type":"codeVoice","code":"s.flatMap(transform)"},{"text":"  is equivalent to","type":"text"},{"type":"text","text":" "},{"code":"Array(s.map(transform).joined())","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"},{"type":"aside","style":"note","content":[{"inlineContent":[{"text":"O(","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"m"}]},{"text":" + ","type":"text"},{"inlineContent":[{"type":"text","text":"n"}],"type":"emphasis"},{"text":"), where ","type":"text"},{"inlineContent":[{"type":"text","text":"n"}],"type":"emphasis"},{"type":"text","text":" is the length of this sequence"},{"type":"text","text":" "},{"type":"text","text":"and "},{"type":"emphasis","inlineContent":[{"text":"m","type":"text"}]},{"type":"text","text":" is the length of the result."}],"type":"paragraph"}],"name":"Complexity"}],"kind":"content"}],"metadata":{"extendedModule":"Swift","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"flatMap","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"SegmentOfResult"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"SegmentOfResult","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> ["},{"text":"SegmentOfResult","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:ST7ElementQa"},{"text":"]","kind":"text"}],"modules":[{"name":"Compute","relatedModules":["Swift"]}],"externalID":"s:STsE7flatMapySay7ElementQyd__Gqd__ABQzKXEKSTRd__lF::SYNTHESIZED::s:s15EmptyCollectionV","roleHeading":"Instance Method","symbolKind":"method","title":"flatMap(_:)","role":"symbol"},"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/EmptyCollection\/flatMap(_:)-2c6m","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"patch":0,"minor":3},"kind":"symbol","variants":[{"paths":["\/documentation\/compute\/emptycollection\/flatmap(_:)-2c6m"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"Returns an array containing the concatenated results of calling the"},{"type":"text","text":" "},{"type":"text","text":"given transformation with each element of this sequence."}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/EmptyCollection","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/EmptyCollection\/Sequence-Implementations"]]},"sections":[],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence/Element":{"type":"topic","required":true,"abstract":[{"type":"text","text":"A type representing the sequenceâ€™s elements."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"symbol","url":"\/documentation\/compute\/sequence\/element","role":"symbol","title":"Element","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/EmptyCollection/flatMap(_:)-2c6m":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"flatMap","kind":"identifier"},{"text":"<","kind":"text"},{"text":"SegmentOfResult","kind":"genericParameter"},{"text":">((","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:ST7ElementQa","text":"Element","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"SegmentOfResult"},{"text":") ","kind":"text"},{"kind":"keyword","text":"rethrows"},{"text":" -> [","kind":"text"},{"text":"SegmentOfResult","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"text":"]","kind":"text"}],"url":"\/documentation\/compute\/emptycollection\/flatmap(_:)-2c6m","title":"flatMap(_:)","type":"topic","abstract":[{"type":"text","text":"Returns an array containing the concatenated results of calling the"},{"type":"text","text":" "},{"text":"given transformation with each element of this sequence.","type":"text"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/EmptyCollection\/flatMap(_:)-2c6m"},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence":{"url":"\/documentation\/compute\/sequence","navigatorTitle":[{"kind":"identifier","text":"Sequence"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence","title":"Sequence","kind":"symbol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Sequence","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"A type that provides sequential, iterated access to its elements."}]},"doc://com.swallow.documentation.Compute/documentation/Compute/EmptyCollection/Sequence-Implementations":{"role":"collectionGroup","kind":"article","type":"topic","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/EmptyCollection\/Sequence-Implementations","url":"\/documentation\/compute\/emptycollection\/sequence-implementations","title":"Sequence Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/EmptyCollection":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"EmptyCollection"}],"role":"symbol","kind":"symbol","navigatorTitle":[{"text":"EmptyCollection","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"A collection whose element type is "},{"type":"codeVoice","code":"Element"},{"text":" but that is always empty.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/EmptyCollection","url":"\/documentation\/compute\/emptycollection","title":"EmptyCollection"}}}