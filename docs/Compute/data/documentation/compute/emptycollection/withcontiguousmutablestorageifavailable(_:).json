{"abstract":[{"type":"text","text":"Executes a closure on the collection’s contiguous storage."}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/EmptyCollection","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/EmptyCollection\/MutableCollection-Implementations"]]},"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/EmptyCollection\/withContiguousMutableStorageIfAvailable(_:)","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"metadata":{"title":"withContiguousMutableStorageIfAvailable(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"withContiguousMutableStorageIfAvailable","kind":"identifier"},{"kind":"text","text":"<"},{"text":"R","kind":"genericParameter"},{"text":">((","kind":"text"},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:Sr","kind":"typeIdentifier","text":"UnsafeMutableBufferPointer"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:ST7ElementQa","text":"Element","kind":"typeIdentifier"},{"kind":"text","text":">) "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"R"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"text":" -> ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"roleHeading":"Instance Method","extendedModule":"Swift","modules":[{"name":"Compute","relatedModules":["Swift"]}],"externalID":"s:SMsE39withContiguousMutableStorageIfAvailableyqd__Sgqd__Sry7ElementQzGzKXEKlF::SYNTHESIZED::s:s15EmptyCollectionV","symbolKind":"method","role":"symbol"},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"mutating"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"withContiguousMutableStorageIfAvailable","kind":"identifier"},{"text":"<","kind":"text"},{"text":"R","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"body"},{"kind":"text","text":": ("},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableBufferPointer","text":"UnsafeMutableBufferPointer","kind":"typeIdentifier","preciseIdentifier":"s:Sr"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:ST7ElementQa","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","text":"Element","kind":"typeIdentifier"},{"text":">) ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"R","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"kind":"text","text":"?"}]}],"kind":"declarations"},{"parameters":[{"content":[{"inlineContent":[{"text":"A closure that receives an in-out","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"UnsafeMutableBufferPointer"},{"type":"text","text":" to the collection’s contiguous storage."}],"type":"paragraph"}],"name":"body"}],"kind":"parameters"},{"content":[{"type":"heading","text":"Return Value","anchor":"return-value","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"The value returned from "},{"type":"codeVoice","code":"body"},{"text":", unless the collection doesn’t","type":"text"},{"text":" ","type":"text"},{"text":"support contiguous storage, in which case the method ignores ","type":"text"},{"type":"codeVoice","code":"body"},{"type":"text","text":" and"},{"text":" ","type":"text"},{"type":"text","text":"returns "},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."}]}],"kind":"content"},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","level":2,"type":"heading"},{"inlineContent":[{"text":"This method calls ","type":"text"},{"code":"body(buffer)","type":"codeVoice"},{"text":", where ","type":"text"},{"type":"codeVoice","code":"buffer"},{"text":" provides access to the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"contiguous mutable storage of the entire collection. If the contiguous"},{"type":"text","text":" "},{"type":"text","text":"storage doesn’t exist, the collection creates it. If the collection"},{"type":"text","text":" "},{"type":"text","text":"doesn’t support an internal representation in the form of contiguous"},{"text":" ","type":"text"},{"text":"mutable storage, this method doesn’t call ","type":"text"},{"code":"body","type":"codeVoice"},{"text":" — it immediately","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"returns "},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"The optimizer can often eliminate bounds- and uniqueness-checking"},{"text":" ","type":"text"},{"type":"text","text":"within an algorithm. When that fails, however, invoking the same"},{"type":"text","text":" "},{"text":"algorithm on the ","type":"text"},{"type":"codeVoice","code":"buffer"},{"text":" argument may let you trade safety for speed.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"Always perform any necessary cleanup in the closure, because the","type":"text"},{"text":" ","type":"text"},{"text":"method makes no guarantees about the state of the collection if the","type":"text"},{"text":" ","type":"text"},{"text":"closure throws an error. Your changes to the collection may be absent","type":"text"},{"type":"text","text":" "},{"type":"text","text":"from the collection after throwing the error, because the closure could"},{"text":" ","type":"text"},{"text":"receive a temporary copy rather than direct access to the collection’s","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"storage."}]},{"style":"warning","name":"Warning","type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"Your ","type":"text"},{"code":"body","type":"codeVoice"},{"text":" closure must not replace ","type":"text"},{"code":"buffer","type":"codeVoice"},{"type":"text","text":". This leads"},{"text":" ","type":"text"},{"text":"to a crash in all implementations of this method within the standard","type":"text"},{"type":"text","text":" "},{"type":"text","text":"library."}]}]},{"inlineContent":[{"type":"text","text":"Successive calls to this method may provide a different pointer on each"},{"text":" ","type":"text"},{"type":"text","text":"call. Don’t store "},{"type":"codeVoice","code":"buffer"},{"text":" outside of this method.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"Collection"},{"type":"text","text":" that provides its own implementation of this method"},{"type":"text","text":" "},{"type":"text","text":"must provide contiguous storage to its elements in the same order"},{"type":"text","text":" "},{"text":"as they appear in the collection. This guarantees that it’s possible to","type":"text"},{"text":" ","type":"text"},{"text":"generate contiguous mutable storage to any of its subsequences by slicing","type":"text"},{"text":" ","type":"text"},{"code":"buffer","type":"codeVoice"},{"type":"text","text":" with a range formed from the distances to the subsequence’s"},{"text":" ","type":"text"},{"type":"codeVoice","code":"startIndex"},{"type":"text","text":" and "},{"type":"codeVoice","code":"endIndex"},{"type":"text","text":", respectively."}],"type":"paragraph"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/emptycollection\/withcontiguousmutablestorageifavailable(_:)"]}],"kind":"symbol","references":{"doc://com.swallow.documentation.Compute/documentation/Compute/EmptyCollection/withContiguousMutableStorageIfAvailable(_:)":{"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"withContiguousMutableStorageIfAvailable","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"R"},{"kind":"text","text":">(("},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:Sr","kind":"typeIdentifier","text":"UnsafeMutableBufferPointer"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"text":">) ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"R"},{"kind":"text","text":") "},{"text":"rethrows","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"R","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"abstract":[{"text":"Executes a closure on the collection’s contiguous storage.","type":"text"}],"url":"\/documentation\/compute\/emptycollection\/withcontiguousmutablestorageifavailable(_:)","role":"symbol","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/EmptyCollection\/withContiguousMutableStorageIfAvailable(_:)","title":"withContiguousMutableStorageIfAvailable(_:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeMutableBufferPointer":{"kind":"symbol","url":"\/documentation\/compute\/unsafemutablebufferpointer","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"UnsafeMutableBufferPointer","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"UnsafeMutableBufferPointer"}],"abstract":[{"type":"text","text":"A nonowning collection interface to a buffer of mutable"},{"text":" ","type":"text"},{"text":"elements stored contiguously in memory.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableBufferPointer","title":"UnsafeMutableBufferPointer","type":"topic","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence/Element":{"type":"topic","required":true,"abstract":[{"type":"text","text":"A type representing the sequence’s elements."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"symbol","url":"\/documentation\/compute\/sequence\/element","role":"symbol","title":"Element","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/EmptyCollection":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"EmptyCollection"}],"role":"symbol","kind":"symbol","navigatorTitle":[{"text":"EmptyCollection","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"A collection whose element type is "},{"type":"codeVoice","code":"Element"},{"text":" but that is always empty.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/EmptyCollection","url":"\/documentation\/compute\/emptycollection","title":"EmptyCollection"},"doc://com.swallow.documentation.Compute/documentation/Compute/EmptyCollection/MutableCollection-Implementations":{"kind":"article","title":"MutableCollection Implementations","abstract":[],"role":"collectionGroup","type":"topic","url":"\/documentation\/compute\/emptycollection\/mutablecollection-implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/EmptyCollection\/MutableCollection-Implementations"}}}