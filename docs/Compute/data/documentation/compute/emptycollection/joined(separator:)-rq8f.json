{"kind":"symbol","metadata":{"roleHeading":"Instance Method","modules":[{"name":"Compute","relatedModules":["Swift"]}],"symbolKind":"method","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Element"},{"type":"text","text":" is "},{"code":"String","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"joined"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"separator"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"}],"role":"symbol","extendedModule":"Swift","title":"joined(separator:)","externalID":"s:SKsSS7ElementRtzrlE6joined9separatorS2S_tF::SYNTHESIZED::s:s15EmptyCollectionV"},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/EmptyCollection","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/EmptyCollection\/BidirectionalCollection-Implementations"]]},"abstract":[{"text":"Returns a new string by concatenating the elements of the sequence,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"adding the given separator between each element."}],"schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/emptycollection\/joined(separator:)-rq8f"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"joined","kind":"identifier"},{"kind":"text","text":"("},{"text":"separator","kind":"externalParam"},{"kind":"text","text":": "},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String","text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":" = \"\") -> ","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String","kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"}]}]},{"parameters":[{"name":"separator","content":[{"inlineContent":[{"type":"text","text":"A string to insert between each of the elements"},{"type":"text","text":" "},{"text":"in this sequence. The default separator is an empty string.","type":"text"}],"type":"paragraph"}]}],"kind":"parameters"},{"content":[{"level":2,"anchor":"return-value","type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A single, concatenated string."}]}],"kind":"content"},{"kind":"content","content":[{"anchor":"discussion","type":"heading","text":"Discussion","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"The following example shows how an array of strings can be joined to a"},{"text":" ","type":"text"},{"type":"text","text":"single, comma-separated string:"}]},{"syntax":null,"code":["let cast = [\"Vivien\", \"Marlon\", \"Kim\", \"Karl\"]","let list = cast.joined(separator: \", \")","print(list)","\/\/ Prints \"Vivien, Marlon, Kim, Karl\""],"type":"codeListing"}]}],"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/EmptyCollection\/joined(separator:)-rq8f","interfaceLanguage":"swift"},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/EmptyCollection/BidirectionalCollection-Implementations":{"role":"collectionGroup","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/EmptyCollection\/BidirectionalCollection-Implementations","url":"\/documentation\/compute\/emptycollection\/bidirectionalcollection-implementations","type":"topic","kind":"article","title":"BidirectionalCollection Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/EmptyCollection/joined(separator:)-rq8f":{"type":"topic","abstract":[{"text":"Returns a new string by concatenating the elements of the sequence,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"adding the given separator between each element."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"joined"},{"kind":"text","text":"("},{"text":"separator","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"}],"url":"\/documentation\/compute\/emptycollection\/joined(separator:)-rq8f","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Element"},{"type":"text","text":" is "},{"type":"codeVoice","code":"String"},{"text":".","type":"text"}]},"role":"symbol","kind":"symbol","title":"joined(separator:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/EmptyCollection\/joined(separator:)-rq8f"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/EmptyCollection":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"EmptyCollection"}],"role":"symbol","kind":"symbol","navigatorTitle":[{"text":"EmptyCollection","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"A collection whose element type is "},{"type":"codeVoice","code":"Element"},{"text":" but that is always empty.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/EmptyCollection","url":"\/documentation\/compute\/emptycollection","title":"EmptyCollection"},"doc://com.swallow.documentation.Compute/documentation/Compute/String":{"type":"topic","navigatorTitle":[{"kind":"identifier","text":"String"}],"title":"String","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"String","kind":"identifier"}],"abstract":[{"type":"text","text":"A Unicode string value that is a collection of characters."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String","kind":"symbol","role":"symbol","url":"\/documentation\/compute\/string"}}}