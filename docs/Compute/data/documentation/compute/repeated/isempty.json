{"metadata":{"extendedModule":"Swift","symbolKind":"property","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isEmpty","kind":"identifier"},{"kind":"text","text":": "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"role":"symbol","roleHeading":"Instance Property","modules":[{"name":"Compute","relatedModules":["Swift"]}],"title":"isEmpty","externalID":"s:SlsE7isEmptySbvp::SYNTHESIZED::s:s8RepeatedV"},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"isEmpty","kind":"identifier"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":" { ","kind":"text"},{"kind":"keyword","text":"get"},{"text":" }","kind":"text"}],"platforms":["macOS"]}],"kind":"declarations"},{"content":[{"level":2,"anchor":"discussion","text":"Discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"When you need to check whether your collection is empty, use the"},{"text":" ","type":"text"},{"code":"isEmpty","type":"codeVoice"},{"text":" property instead of checking that the ","type":"text"},{"code":"count","type":"codeVoice"},{"type":"text","text":" property is"},{"type":"text","text":" "},{"text":"equal to zero. For collections that donâ€™t conform to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"RandomAccessCollection"},{"type":"text","text":", accessing the "},{"type":"codeVoice","code":"count"},{"type":"text","text":" property iterates"},{"type":"text","text":" "},{"text":"through the elements of the collection.","type":"text"}]},{"syntax":null,"code":["let horseName = \"Silver\"","if horseName.isEmpty {","    print(\"My horse has no name.\")","} else {","    print(\"Hi ho, \\(horseName)!\")","}","\/\/ Prints \"Hi ho, Silver!\")"],"type":"codeListing"},{"name":"Complexity","style":"note","type":"aside","content":[{"inlineContent":[{"type":"text","text":"O(1)"}],"type":"paragraph"}]}],"kind":"content"}],"kind":"symbol","abstract":[{"type":"text","text":"A Boolean value indicating whether the collection is empty."}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Repeated","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Repeated\/Collection-Implementations"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Repeated\/isEmpty"},"variants":[{"paths":["\/documentation\/compute\/repeated\/isempty"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Repeated/Collection-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Repeated\/Collection-Implementations","abstract":[],"role":"collectionGroup","title":"Collection Implementations","type":"topic","url":"\/documentation\/compute\/repeated\/collection-implementations","kind":"article"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Repeated/isEmpty":{"url":"\/documentation\/compute\/repeated\/isempty","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isEmpty"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"title":"isEmpty","abstract":[{"type":"text","text":"A Boolean value indicating whether the collection is empty."}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Repeated\/isEmpty","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/Repeated":{"title":"Repeated","abstract":[{"type":"text","text":"A collection whose elements are all identical."}],"kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Repeated","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Repeated","kind":"identifier"}],"url":"\/documentation\/compute\/repeated","navigatorTitle":[{"text":"Repeated","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Bool":{"url":"\/documentation\/compute\/bool","role":"symbol","title":"Bool","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Bool","kind":"identifier"}],"abstract":[{"type":"text","text":"A value type whose instances are either "},{"type":"codeVoice","code":"true"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"false"},{"text":".","type":"text"}],"navigatorTitle":[{"text":"Bool","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bool","kind":"symbol"}}}