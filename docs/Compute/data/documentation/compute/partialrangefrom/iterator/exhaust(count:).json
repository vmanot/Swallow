{"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"mutating","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"exhaust","kind":"identifier"},{"kind":"text","text":"<"},{"text":"N","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"count","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"N"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/IteratorProtocol\/Element","kind":"typeIdentifier","preciseIdentifier":"s:St7ElementQa","text":"Element"},{"text":"? ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"N"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Numeric","preciseIdentifier":"s:Sj","text":"Numeric"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"N"},{"kind":"text","text":" : "},{"text":"Strideable","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Strideable","preciseIdentifier":"s:Sx"},{"kind":"text","text":", "},{"text":"N","kind":"typeIdentifier"},{"text":".","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Strideable\/Stride","kind":"typeIdentifier","preciseIdentifier":"s:Sx6StrideQa","text":"Stride"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SignedInteger","text":"SignedInteger","preciseIdentifier":"s:SZ","kind":"typeIdentifier"}]}]}],"variants":[{"paths":["\/documentation\/compute\/partialrangefrom\/iterator\/exhaust(count:)"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"Inherited from "},{"code":"IteratorProtocol.exhaust(count:)","type":"codeVoice"},{"text":".","type":"text"}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/PartialRangeFrom","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/PartialRangeFrom\/Sequence-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/PartialRangeFrom\/Iterator","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/PartialRangeFrom\/Iterator\/IteratorProtocol-Implementations"]]},"metadata":{"externalID":"s:St7SwallowE7exhaust5count7ElementQzSgqd___tSjRd__SxRd__SZ6StrideSxRpd__lF::SYNTHESIZED::s:s16PartialRangeFromVsSxRzSZ6StrideRpzrlE8IteratorV","title":"exhaust(count:)","roleHeading":"Instance Method","role":"symbol","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"exhaust"},{"kind":"text","text":"<"},{"text":"N","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"count"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"N"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:St7ElementQa","text":"Element","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"extendedModule":"Swift","modules":[{"relatedModules":["Swift"],"name":"Compute"}]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/PartialRangeFrom\/Iterator\/exhaust(count:)"},"schemaVersion":{"patch":0,"minor":3,"major":0},"sections":[],"kind":"symbol","references":{"doc://com.swallow.documentation.Compute/documentation/Compute/IteratorProtocol/Element":{"fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"text":"Element","kind":"identifier"}],"type":"topic","url":"\/documentation\/compute\/iteratorprotocol\/element","abstract":[{"text":"The type of element traversed by the iterator.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/IteratorProtocol\/Element","title":"Element","kind":"symbol","required":true,"role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/PartialRangeFrom/Sequence-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/PartialRangeFrom\/Sequence-Implementations","type":"topic","title":"Sequence Implementations","kind":"article","url":"\/documentation\/compute\/partialrangefrom\/sequence-implementations","role":"collectionGroup","abstract":[]},"doc://com.swallow.documentation.Compute/documentation/Compute/PartialRangeFrom/Iterator/exhaust(count:)":{"type":"topic","abstract":[],"title":"exhaust(count:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/PartialRangeFrom\/Iterator\/exhaust(count:)","url":"\/documentation\/compute\/partialrangefrom\/iterator\/exhaust(count:)","role":"symbol","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"exhaust","kind":"identifier"},{"kind":"text","text":"<"},{"text":"N","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"count"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"N"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"Element","preciseIdentifier":"s:St7ElementQa","kind":"typeIdentifier"},{"kind":"text","text":"?"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/SignedInteger":{"abstract":[{"type":"text","text":"An integer type that can represent both positive and negative values."}],"kind":"symbol","url":"\/documentation\/compute\/signedinteger","navigatorTitle":[{"kind":"identifier","text":"SignedInteger"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SignedInteger","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"SignedInteger","kind":"identifier"}],"title":"SignedInteger"},"doc://com.swallow.documentation.Compute/documentation/Compute/Strideable":{"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/compute\/strideable","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Strideable","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Strideable"}],"navigatorTitle":[{"text":"Strideable","kind":"identifier"}],"abstract":[{"type":"text","text":"A type representing continuous, one-dimensional values that can be offset"},{"type":"text","text":" "},{"type":"text","text":"and measured."}],"title":"Strideable"},"doc://com.swallow.documentation.Compute/documentation/Compute/Numeric":{"abstract":[{"type":"text","text":"A type with values that support multiplication."}],"kind":"symbol","url":"\/documentation\/compute\/numeric","navigatorTitle":[{"text":"Numeric","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Numeric","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Numeric"}],"title":"Numeric"},"doc://com.swallow.documentation.Compute/documentation/Compute/PartialRangeFrom/Iterator":{"kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Iterator"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/PartialRangeFrom\/Iterator","url":"\/documentation\/compute\/partialrangefrom\/iterator","navigatorTitle":[{"text":"Iterator","kind":"identifier"}],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Bound"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Strideable"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Bound.Stride"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"SignedInteger"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"abstract":[{"type":"text","text":"The iterator for a "},{"type":"codeVoice","code":"PartialRangeFrom"},{"text":" instance.","type":"text"}],"role":"symbol","title":"PartialRangeFrom.Iterator"},"doc://com.swallow.documentation.Compute/documentation/Compute/PartialRangeFrom/Iterator/IteratorProtocol-Implementations":{"url":"\/documentation\/compute\/partialrangefrom\/iterator\/iteratorprotocol-implementations","title":"IteratorProtocol Implementations","role":"collectionGroup","kind":"article","type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/PartialRangeFrom\/Iterator\/IteratorProtocol-Implementations","abstract":[]},"doc://com.swallow.documentation.Compute/documentation/Compute/PartialRangeFrom":{"kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"PartialRangeFrom","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/PartialRangeFrom","url":"\/documentation\/compute\/partialrangefrom","navigatorTitle":[{"kind":"identifier","text":"PartialRangeFrom"}],"abstract":[{"type":"text","text":"A partial interval extending upward from a lower bound."}],"role":"symbol","title":"PartialRangeFrom"},"doc://com.swallow.documentation.Compute/documentation/Compute/Strideable/Stride":{"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/compute\/strideable\/stride","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Strideable\/Stride","required":true,"fragments":[{"kind":"keyword","text":"associatedtype"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Stride"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SL","text":"Comparable"},{"text":", ","kind":"text"},{"text":"SignedNumeric","kind":"typeIdentifier","preciseIdentifier":"s:s13SignedNumericP"}],"abstract":[{"type":"text","text":"A type that represents the distance between two values."}],"title":"Stride"}}}