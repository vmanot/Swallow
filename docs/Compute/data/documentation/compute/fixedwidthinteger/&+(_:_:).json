{"schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"symbolKind":"op","role":"symbol","externalID":"s:s17FixedWidthIntegerPsE2apoiyxx_xtFZ","extendedModule":"Swift","modules":[{"name":"Compute","relatedModules":["Swift"]}],"title":"&+(_:_:)","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"&+","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"roleHeading":"Operator"},"abstract":[{"type":"text","text":"Returns the sum of the two given values, wrapping the result in case of"},{"type":"text","text":" "},{"text":"any overflow.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"&+"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"text":"lhs","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"rhs","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"text":"The first value to add.","type":"text"}],"type":"paragraph"}],"name":"lhs"},{"name":"rhs","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The second value to add."}]}]}]},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The overflow addition operator ("},{"code":"&+","type":"codeVoice"},{"text":") discards any bits that overflow the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"fixed width of the integer type. In the following example, the sum of"},{"type":"text","text":" "},{"type":"codeVoice","code":"100"},{"type":"text","text":" and "},{"code":"121","type":"codeVoice"},{"text":" is greater than the maximum representable ","type":"text"},{"code":"Int8","type":"codeVoice"},{"type":"text","text":" value,"},{"text":" ","type":"text"},{"type":"text","text":"so the result is the partial value after discarding the overflowing"},{"type":"text","text":" "},{"text":"bits.","type":"text"}]},{"type":"codeListing","syntax":null,"code":["let x: Int8 = 10 &+ 21","\/\/ x == 31","let y: Int8 = 100 &+ 121","\/\/ y == -35 (after overflow)"]},{"type":"paragraph","inlineContent":[{"text":"For more about arithmetic with overflow operators, see ","type":"text"},{"isActive":true,"type":"reference","identifier":"https:\/\/docs.swift.org\/swift-book\/LanguageGuide\/AdvancedOperators.html#ID37"},{"type":"text","text":" in "},{"inlineContent":[{"identifier":"https:\/\/docs.swift.org\/swift-book\/","isActive":true,"type":"reference"}],"type":"emphasis"},{"type":"text","text":"."}]}]}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FixedWidthInteger"]]},"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FixedWidthInteger\/&+(_:_:)","interfaceLanguage":"swift"},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/fixedwidthinteger\/&+(_:_:)"]}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/FixedWidthInteger":{"title":"FixedWidthInteger","kind":"symbol","navigatorTitle":[{"text":"FixedWidthInteger","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FixedWidthInteger","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"FixedWidthInteger","kind":"identifier"}],"abstract":[{"text":"An integer type that uses a fixed size for every instance.","type":"text"}],"type":"topic","url":"\/documentation\/compute\/fixedwidthinteger"},"https://docs.swift.org/swift-book/":{"type":"link","identifier":"https:\/\/docs.swift.org\/swift-book\/","titleInlineContent":[{"text":"The Swift Programming Language","type":"text"}],"url":"https:\/\/docs.swift.org\/swift-book\/","title":"The Swift Programming Language"},"https://docs.swift.org/swift-book/LanguageGuide/AdvancedOperators.html#ID37":{"type":"link","identifier":"https:\/\/docs.swift.org\/swift-book\/LanguageGuide\/AdvancedOperators.html#ID37","titleInlineContent":[{"text":"Overflow","type":"text"},{"text":" ","type":"text"},{"text":"Operators","type":"text"}],"url":"https:\/\/docs.swift.org\/swift-book\/LanguageGuide\/AdvancedOperators.html#ID37","title":"Overflow Operators"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/FixedWidthInteger/&+(_:_:)":{"abstract":[{"text":"Returns the sum of the two given values, wrapping the result in case of","type":"text"},{"text":" ","type":"text"},{"text":"any overflow.","type":"text"}],"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"&+","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"url":"\/documentation\/compute\/fixedwidthinteger\/&+(_:_:)","title":"&+(_:_:)","role":"symbol","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FixedWidthInteger\/&+(_:_:)","type":"topic"}}}