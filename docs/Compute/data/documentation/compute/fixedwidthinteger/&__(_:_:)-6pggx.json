{"variants":[{"paths":["\/documentation\/compute\/fixedwidthinteger\/&__(_:_:)-6pggx"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FixedWidthInteger\/&__(_:_:)-6pggx","interfaceLanguage":"swift"},"abstract":[{"text":"Returns the result of shifting a value’s binary representation the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"specified number of digits to the left, masking the shift amount to the"},{"type":"text","text":" "},{"text":"type’s bit width.","type":"text"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FixedWidthInteger","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FixedWidthInteger\/&__(_:_:)-4j1s7"]]},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"&<<","kind":"identifier"},{"kind":"text","text":" "},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Other"},{"text":">(","kind":"text"},{"kind":"internalParam","text":"lhs"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"internalParam","text":"rhs"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Other"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"},{"text":" ","kind":"text"},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"text":"Other","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"BinaryInteger","kind":"typeIdentifier","preciseIdentifier":"s:Sz","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryInteger"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"parameters":[{"content":[{"inlineContent":[{"text":"The value to shift.","type":"text"}],"type":"paragraph"}],"name":"lhs"},{"name":"rhs","content":[{"inlineContent":[{"type":"text","text":"The number of bits to shift "},{"type":"codeVoice","code":"lhs"},{"type":"text","text":" to the left. If "},{"type":"codeVoice","code":"rhs"},{"text":" is","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"outside the range "},{"code":"0..<lhs.bitWidth","type":"codeVoice"},{"text":", it is masked to produce a","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"value within that range."}],"type":"paragraph"}]}],"kind":"parameters"},{"content":[{"anchor":"discussion","text":"Discussion","level":2,"type":"heading"},{"inlineContent":[{"text":"Use the masking left shift operator (","type":"text"},{"type":"codeVoice","code":"&<<"},{"text":") when you need to perform a","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"shift and are sure that the shift amount is in the range"},{"type":"text","text":" "},{"type":"codeVoice","code":"0..<lhs.bitWidth"},{"type":"text","text":". Before shifting, the masking left shift operator"},{"type":"text","text":" "},{"text":"masks the shift to this range. The shift is performed using this masked","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"value."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The following example defines "},{"code":"x","type":"codeVoice"},{"type":"text","text":" as an instance of "},{"type":"codeVoice","code":"UInt8"},{"text":", an 8-bit,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"unsigned integer type. If you use "},{"type":"codeVoice","code":"2"},{"type":"text","text":" as the right-hand-side value in an"},{"text":" ","type":"text"},{"text":"operation on ","type":"text"},{"code":"x","type":"codeVoice"},{"text":", the shift amount requires no masking.","type":"text"}]},{"syntax":null,"type":"codeListing","code":["let x: UInt8 = 30                 \/\/ 0b00011110","let y = x &<< 2","\/\/ y == 120                       \/\/ 0b01111000"]},{"inlineContent":[{"type":"text","text":"However, if you use "},{"type":"codeVoice","code":"8"},{"text":" as the shift amount, the method first masks the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"shift amount to zero, and then performs the shift, resulting in no change"},{"text":" ","type":"text"},{"type":"text","text":"to the original value."}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":["let z = x &<< 8","\/\/ z == 30                        \/\/ 0b00011110"]},{"type":"paragraph","inlineContent":[{"text":"If the bit width of the shifted integer type is a power of two, masking","type":"text"},{"text":" ","type":"text"},{"text":"is performed using a bitmask; otherwise, masking is performed using a","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"modulo operation."}]}],"kind":"content"}],"kind":"symbol","sections":[],"metadata":{"modules":[{"relatedModules":["Swift"],"name":"Compute"}],"role":"symbol","roleHeading":"Operator","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"&<<","kind":"identifier"},{"text":" ","kind":"text"},{"text":"<","kind":"text"},{"text":"Other","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Other"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"symbolKind":"op","extendedModule":"Swift","externalID":"s:s17FixedWidthIntegerPsE3alloiyxx_qd__tSzRd__lFZ","title":"&<<(_:_:)"},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/FixedWidthInteger/&__(_:_:)-6pggx":{"url":"\/documentation\/compute\/fixedwidthinteger\/&__(_:_:)-6pggx","kind":"symbol","abstract":[{"type":"text","text":"Returns the result of shifting a value’s binary representation the"},{"type":"text","text":" "},{"type":"text","text":"specified number of digits to the left, masking the shift amount to the"},{"text":" ","type":"text"},{"text":"type’s bit width.","type":"text"}],"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FixedWidthInteger\/&__(_:_:)-6pggx","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"&<<","kind":"identifier"},{"text":" ","kind":"text"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Other"},{"kind":"text","text":">("},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Other"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"type":"topic","title":"&<<(_:_:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/FixedWidthInteger":{"title":"FixedWidthInteger","kind":"symbol","navigatorTitle":[{"text":"FixedWidthInteger","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FixedWidthInteger","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"FixedWidthInteger","kind":"identifier"}],"abstract":[{"text":"An integer type that uses a fixed size for every instance.","type":"text"}],"type":"topic","url":"\/documentation\/compute\/fixedwidthinteger"},"doc://com.swallow.documentation.Compute/documentation/Compute/BinaryInteger":{"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"BinaryInteger"}],"navigatorTitle":[{"kind":"identifier","text":"BinaryInteger"}],"url":"\/documentation\/compute\/binaryinteger","type":"topic","abstract":[{"type":"text","text":"An integer type with a binary representation."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryInteger","title":"BinaryInteger","kind":"symbol","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/FixedWidthInteger/&__(_:_:)-4j1s7":{"defaultImplementations":2,"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FixedWidthInteger\/&__(_:_:)-4j1s7","abstract":[{"type":"text","text":"Returns the result of shifting a value’s binary representation the"},{"text":" ","type":"text"},{"type":"text","text":"specified number of digits to the left, masking the shift amount to the"},{"type":"text","text":" "},{"type":"text","text":"type’s bit width."}],"role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"&<<","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"title":"&<<(_:_:)","kind":"symbol","url":"\/documentation\/compute\/fixedwidthinteger\/&__(_:_:)-4j1s7","required":true},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"}}}