{"metadata":{"symbolKind":"op","title":"&*(_:_:)","extendedModule":"Swift","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"&*","kind":"identifier"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"modules":[{"relatedModules":["Swift"],"name":"Compute"}],"role":"symbol","roleHeading":"Operator","externalID":"s:s17FixedWidthIntegerPsE2amoiyxx_xtFZ"},"abstract":[{"type":"text","text":"Returns the product of the two given values, wrapping the result in case"},{"type":"text","text":" "},{"type":"text","text":"of any overflow."}],"schemaVersion":{"major":0,"patch":0,"minor":3},"kind":"symbol","sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/fixedwidthinteger\/&*(_:_:)-8uc7d"]}],"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FixedWidthInteger\/&*(_:_:)-8uc7d","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FixedWidthInteger","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FixedWidthInteger\/&*(_:_:)-6ml69"]]},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"&*","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"internalParam","text":"lhs"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"kind":"internalParam","text":"rhs"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}]}],"kind":"declarations"},{"parameters":[{"name":"lhs","content":[{"inlineContent":[{"type":"text","text":"The first value to multiply."}],"type":"paragraph"}]},{"name":"rhs","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The second value to multiply."}]}]}],"kind":"parameters"},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The overflow multiplication operator ("},{"type":"codeVoice","code":"&*"},{"type":"text","text":") discards any bits that"},{"text":" ","type":"text"},{"text":"overflow the fixed width of the integer type. In the following example,","type":"text"},{"text":" ","type":"text"},{"text":"the product of ","type":"text"},{"type":"codeVoice","code":"10"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"50"},{"type":"text","text":" is greater than the maximum representable"},{"type":"text","text":" "},{"type":"codeVoice","code":"Int8"},{"type":"text","text":" value, so the result is the partial value after discarding the"},{"type":"text","text":" "},{"text":"overflowing bits.","type":"text"}]},{"type":"codeListing","syntax":null,"code":["let x: Int8 = 10 &* 5","\/\/ x == 50","let y: Int8 = 10 &* 50","\/\/ y == -12 (after overflow)"]},{"type":"paragraph","inlineContent":[{"text":"For more about arithmetic with overflow operators, see ","type":"text"},{"type":"reference","isActive":true,"identifier":"https:\/\/docs.swift.org\/swift-book\/LanguageGuide\/AdvancedOperators.html#ID37"},{"type":"text","text":" in "},{"inlineContent":[{"identifier":"https:\/\/docs.swift.org\/swift-book\/","isActive":true,"type":"reference"}],"type":"emphasis"},{"type":"text","text":"."}]}]}],"references":{"https://docs.swift.org/swift-book/LanguageGuide/AdvancedOperators.html#ID37":{"url":"https:\/\/docs.swift.org\/swift-book\/LanguageGuide\/AdvancedOperators.html#ID37","type":"link","identifier":"https:\/\/docs.swift.org\/swift-book\/LanguageGuide\/AdvancedOperators.html#ID37","title":"Overflow Operators","titleInlineContent":[{"type":"text","text":"Overflow"},{"type":"text","text":" "},{"text":"Operators","type":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/FixedWidthInteger/&*(_:_:)-6ml69":{"type":"topic","abstract":[{"text":"Returns the product of the two given values, wrapping the result in case","type":"text"},{"type":"text","text":" "},{"type":"text","text":"of any overflow."}],"role":"symbol","required":true,"kind":"symbol","defaultImplementations":1,"url":"\/documentation\/compute\/fixedwidthinteger\/&*(_:_:)-6ml69","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FixedWidthInteger\/&*(_:_:)-6ml69","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"&*"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"title":"&*(_:_:)"},"https://docs.swift.org/swift-book/":{"url":"https:\/\/docs.swift.org\/swift-book\/","type":"link","identifier":"https:\/\/docs.swift.org\/swift-book\/","title":"The Swift Programming Language","titleInlineContent":[{"text":"The Swift Programming Language","type":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/FixedWidthInteger/&*(_:_:)-8uc7d":{"type":"topic","abstract":[{"text":"Returns the product of the two given values, wrapping the result in case","type":"text"},{"type":"text","text":" "},{"type":"text","text":"of any overflow."}],"role":"symbol","kind":"symbol","url":"\/documentation\/compute\/fixedwidthinteger\/&*(_:_:)-8uc7d","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FixedWidthInteger\/&*(_:_:)-8uc7d","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"&*"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"title":"&*(_:_:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/FixedWidthInteger":{"title":"FixedWidthInteger","kind":"symbol","navigatorTitle":[{"text":"FixedWidthInteger","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FixedWidthInteger","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"FixedWidthInteger","kind":"identifier"}],"abstract":[{"text":"An integer type that uses a fixed size for every instance.","type":"text"}],"type":"topic","url":"\/documentation\/compute\/fixedwidthinteger"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"}}}