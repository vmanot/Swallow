{"metadata":{"roleHeading":"Protocol","symbolKind":"protocol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CustomReflectable"}],"modules":[{"name":"Compute"}],"role":"symbol","title":"CustomReflectable","externalID":"s:s17CustomReflectableP","navigatorTitle":[{"text":"CustomReflectable","kind":"identifier"}]},"topicSections":[{"title":"Instance Properties","generated":true,"identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CustomReflectable\/customMirror"],"anchor":"Instance-Properties"}],"relationshipsSections":[{"identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CustomLeafReflectable"],"title":"Inherited By","type":"inheritedBy","kind":"relationships"},{"title":"Conforming Types","kind":"relationships","type":"conformingTypes","identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyHashable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Array","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArraySlice","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AutoreleasingUnsafeMutablePointer","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bool","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Character","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ClosedRange","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CollectionOfOne","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ContiguousArray","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary\/Iterator","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Double","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int128","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int32","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int64","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Mirror","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Optional","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Range","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Set","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Set\/Iterator","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/StaticBigInt","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/StaticString","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/StrideThrough","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/StrideTo","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/UTF16View","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/UTF8View","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/UnicodeScalarView","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Substring","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt128","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt32","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Unicode\/Scalar","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutablePointer","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableRawPointer","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafePointer","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeRawPointer"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"CustomReflectable","kind":"identifier"}],"languages":["swift"]}]},{"content":[{"text":"Overview","type":"heading","anchor":"overview","level":2},{"inlineContent":[{"type":"text","text":"You can create a mirror for any type using the "},{"type":"codeVoice","code":"Mirror(reflecting:)"},{"text":" ","type":"text"},{"text":"initializer, but if you are not satisfied with the mirror supplied for","type":"text"},{"type":"text","text":" "},{"type":"text","text":"your type by default, you can make it conform to "},{"type":"codeVoice","code":"CustomReflectable"},{"type":"text","text":" and"},{"type":"text","text":" "},{"text":"return a custom ","type":"text"},{"code":"Mirror","type":"codeVoice"},{"type":"text","text":" instance."}],"type":"paragraph"}],"kind":"content"}],"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CustomReflectable","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute"]]},"abstract":[{"type":"text","text":"A type that explicitly supplies its own mirror."}],"sections":[],"schemaVersion":{"major":0,"patch":0,"minor":3},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/customreflectable"]}],"kind":"symbol","references":{"doc://com.swallow.documentation.Compute/documentation/Compute/String/UnicodeScalarView":{"url":"\/documentation\/compute\/string\/unicodescalarview","abstract":[{"text":"A view of a string’s contents as a collection of Unicode scalar values.","type":"text"}],"kind":"symbol","role":"symbol","title":"String.UnicodeScalarView","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"UnicodeScalarView"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"UnicodeScalarView"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/UnicodeScalarView"},"doc://com.swallow.documentation.Compute/documentation/Compute/Unicode/Scalar":{"title":"Unicode.Scalar","type":"topic","kind":"symbol","navigatorTitle":[{"text":"Scalar","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Scalar","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Unicode\/Scalar","abstract":[{"type":"text","text":"A Unicode scalar value."}],"role":"symbol","url":"\/documentation\/compute\/unicode\/scalar"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/UTF16View":{"navigatorTitle":[{"text":"UTF16View","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/UTF16View","kind":"symbol","title":"String.UTF16View","url":"\/documentation\/compute\/string\/utf16view","abstract":[{"text":"A view of a string’s contents as a collection of UTF-16 code units.","type":"text"}],"role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"UTF16View"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Array":{"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Array","title":"Array","url":"\/documentation\/compute\/array","kind":"symbol","abstract":[{"text":"An ordered, random-access collection.","type":"text"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Array","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"Array"}],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Element","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Copyable","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"Escapable","type":"codeVoice"},{"type":"text","text":"."}]}},"doc://com.swallow.documentation.Compute/documentation/Compute/Dictionary":{"title":"Dictionary","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Dictionary","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary","type":"topic","navigatorTitle":[{"text":"Dictionary","kind":"identifier"}],"abstract":[{"type":"text","text":"A collection whose elements are key-value pairs."}],"conformance":{"constraints":[{"type":"codeVoice","code":"Key"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Hashable"},{"text":", ","type":"text"},{"code":"Value","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Copyable","type":"codeVoice"},{"type":"text","text":", and "},{"code":"Value","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Escapable"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"role":"symbol","kind":"symbol","url":"\/documentation\/compute\/dictionary"},"doc://com.swallow.documentation.Compute/documentation/Compute/AnyHashable":{"role":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyHashable","kind":"identifier"}],"abstract":[{"text":"A type-erased hashable value.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyHashable","navigatorTitle":[{"text":"AnyHashable","kind":"identifier"}],"url":"\/documentation\/compute\/anyhashable","title":"AnyHashable","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int64":{"url":"\/documentation\/compute\/int64","title":"Int64","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int64","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Int64"}],"abstract":[{"type":"text","text":"A 64-bit signed integer value"},{"text":" ","type":"text"},{"text":"type.","type":"text"}],"navigatorTitle":[{"text":"Int64","kind":"identifier"}],"type":"topic","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Set/Iterator":{"conformance":{"constraints":[{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"code":"Hashable","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Iterator","kind":"identifier"}],"abstract":[{"type":"text","text":"An iterator over the members of a "},{"code":"Set<Element>","type":"codeVoice"},{"type":"text","text":"."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Set\/Iterator","type":"topic","title":"Set.Iterator","navigatorTitle":[{"text":"Iterator","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/compute\/set\/iterator","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int8":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Int8"}],"url":"\/documentation\/compute\/int8","title":"Int8","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Int8"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8","abstract":[{"text":"An 8-bit signed integer value","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"type."}]},"doc://com.swallow.documentation.Compute/documentation/Compute/CustomLeafReflectable":{"role":"symbol","url":"\/documentation\/compute\/customleafreflectable","type":"topic","kind":"symbol","title":"CustomLeafReflectable","abstract":[{"text":"A type that explicitly supplies its own mirror, but whose","type":"text"},{"type":"text","text":" "},{"text":"descendant classes are not represented in the mirror unless they","type":"text"},{"type":"text","text":" "},{"type":"text","text":"also override "},{"code":"customMirror","type":"codeVoice"},{"type":"text","text":"."}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CustomLeafReflectable","kind":"identifier"}],"navigatorTitle":[{"text":"CustomLeafReflectable","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CustomLeafReflectable"},"doc://com.swallow.documentation.Compute/documentation/Compute/Dictionary/Iterator":{"title":"Dictionary.Iterator","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary\/Iterator","type":"topic","url":"\/documentation\/compute\/dictionary\/iterator","kind":"symbol","abstract":[{"text":"An iterator over the members of a ","type":"text"},{"type":"codeVoice","code":"Dictionary<Key, Value>"},{"text":".","type":"text"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Iterator"}],"navigatorTitle":[{"kind":"identifier","text":"Iterator"}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Key"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":", "},{"code":"Value","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Copyable","type":"codeVoice"},{"type":"text","text":", and "},{"code":"Value","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Escapable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]}},"doc://com.swallow.documentation.Compute/documentation/Compute/Substring":{"navigatorTitle":[{"kind":"identifier","text":"Substring"}],"url":"\/documentation\/compute\/substring","title":"Substring","abstract":[{"text":"A slice of a string.","type":"text"}],"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Substring","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Substring","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/ClosedRange":{"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"ClosedRange","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ClosedRange","navigatorTitle":[{"text":"ClosedRange","kind":"identifier"}],"title":"ClosedRange","url":"\/documentation\/compute\/closedrange","abstract":[{"text":"An interval from a lower bound up to, and including, an upper bound.","type":"text"}],"role":"symbol","type":"topic","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Bound"},{"type":"text","text":" conforms to "},{"code":"Comparable","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]}},"doc://com.swallow.documentation.Compute/documentation/Compute/Range":{"navigatorTitle":[{"kind":"identifier","text":"Range"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Range","url":"\/documentation\/compute\/range","title":"Range","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Range","kind":"identifier"}],"abstract":[{"type":"text","text":"A half-open interval from a lower bound up to, but not including, an upper"},{"text":" ","type":"text"},{"text":"bound.","type":"text"}],"type":"topic","role":"symbol","conformance":{"constraints":[{"code":"Bound","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Comparable"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]}},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt128":{"url":"\/documentation\/compute\/uint128","type":"topic","kind":"symbol","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt128","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"UInt128"}],"title":"UInt128","abstract":[{"text":"A 128-bit unsigned integer type.","type":"text"}],"navigatorTitle":[{"text":"UInt128","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt64":{"navigatorTitle":[{"text":"UInt64","kind":"identifier"}],"kind":"symbol","role":"symbol","type":"topic","title":"UInt64","abstract":[{"text":"A 64-bit unsigned integer value","type":"text"},{"type":"text","text":" "},{"type":"text","text":"type."}],"url":"\/documentation\/compute\/uint64","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"UInt64","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64"},"doc://com.swallow.documentation.Compute/documentation/Compute/ContiguousArray":{"title":"ContiguousArray","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"ContiguousArray","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ContiguousArray","type":"topic","navigatorTitle":[{"text":"ContiguousArray","kind":"identifier"}],"abstract":[{"type":"text","text":"A contiguously stored array."}],"conformance":{"constraints":[{"code":"Element","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Copyable","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Escapable"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"role":"symbol","kind":"symbol","url":"\/documentation\/compute\/contiguousarray"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt":{"kind":"symbol","navigatorTitle":[{"text":"UInt","kind":"identifier"}],"type":"topic","title":"UInt","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt","abstract":[{"text":"An unsigned integer value type.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"UInt","kind":"identifier"}],"url":"\/documentation\/compute\/uint"},"doc://com.swallow.documentation.Compute/documentation/Compute/StaticBigInt":{"abstract":[{"text":"An immutable arbitrary-precision signed integer.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"StaticBigInt"}],"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StaticBigInt","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/StaticBigInt","url":"\/documentation\/compute\/staticbigint","kind":"symbol","title":"StaticBigInt","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","abstract":[{"type":"text","text":"A signed integer value type."}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Int","kind":"identifier"}],"navigatorTitle":[{"text":"Int","kind":"identifier"}],"title":"Int","url":"\/documentation\/compute\/int","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int128":{"url":"\/documentation\/compute\/int128","abstract":[{"type":"text","text":"A 128-bit signed integer type."}],"title":"Int128","role":"symbol","navigatorTitle":[{"text":"Int128","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int128","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Int128"}],"kind":"symbol","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/ArraySlice":{"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArraySlice","title":"ArraySlice","url":"\/documentation\/compute\/arrayslice","kind":"symbol","abstract":[{"type":"text","text":"A slice of an "},{"type":"codeVoice","code":"Array"},{"text":", ","type":"text"},{"type":"codeVoice","code":"ContiguousArray"},{"text":", or ","type":"text"},{"type":"codeVoice","code":"ArraySlice"},{"type":"text","text":" instance."}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ArraySlice"}],"navigatorTitle":[{"kind":"identifier","text":"ArraySlice"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Element","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Copyable","type":"codeVoice"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Escapable"},{"type":"text","text":"."}]}},"doc://com.swallow.documentation.Compute/documentation/Compute/Set":{"title":"Set","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Set","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Set","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Set"}],"abstract":[{"type":"text","text":"An unordered collection of unique elements."}],"conformance":{"constraints":[{"code":"Element","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Hashable","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"role":"symbol","kind":"symbol","url":"\/documentation\/compute\/set"},"doc://com.swallow.documentation.Compute/documentation/Compute/Double":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Double","abstract":[{"text":"A double-precision, floating-point value type.","type":"text"}],"title":"Double","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Double","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"Double","kind":"identifier"}],"kind":"symbol","type":"topic","url":"\/documentation\/compute\/double"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int32":{"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Int32","kind":"identifier"}],"abstract":[{"text":"A 32-bit signed integer value","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"type."}],"kind":"symbol","navigatorTitle":[{"text":"Int32","kind":"identifier"}],"type":"topic","url":"\/documentation\/compute\/int32","title":"Int32","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int32"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int16":{"title":"Int16","abstract":[{"text":"A 16-bit signed integer value","type":"text"},{"type":"text","text":" "},{"text":"type.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Int16"}],"type":"topic","url":"\/documentation\/compute\/int16","navigatorTitle":[{"kind":"identifier","text":"Int16"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/StaticString":{"url":"\/documentation\/compute\/staticstring","navigatorTitle":[{"kind":"identifier","text":"StaticString"}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"StaticString"}],"abstract":[{"type":"text","text":"A string type designed to represent text that is known at compile time."}],"type":"topic","title":"StaticString","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/StaticString"},"doc://com.swallow.documentation.Compute/documentation/Compute/Optional":{"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Optional","title":"Optional","url":"\/documentation\/compute\/optional","kind":"symbol","abstract":[{"type":"text","text":"A type that represents either a wrapped value or the absence of a value."}],"role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Optional"}],"navigatorTitle":[{"text":"Optional","kind":"identifier"}],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Wrapped","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Copyable"},{"text":" and ","type":"text"},{"code":"Escapable","type":"codeVoice"},{"type":"text","text":"."}]}},"doc://com.swallow.documentation.Compute/documentation/Compute/AutoreleasingUnsafeMutablePointer":{"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AutoreleasingUnsafeMutablePointer"}],"url":"\/documentation\/compute\/autoreleasingunsafemutablepointer","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"A mutable pointer addressing an Objective-C reference that doesn’t own its"},{"text":" ","type":"text"},{"type":"text","text":"target."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AutoreleasingUnsafeMutablePointer","navigatorTitle":[{"text":"AutoreleasingUnsafeMutablePointer","kind":"identifier"}],"title":"AutoreleasingUnsafeMutablePointer"},"doc://com.swallow.documentation.Compute/documentation/Compute/Character":{"title":"Character","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Character","abstract":[{"type":"text","text":"A single extended grapheme cluster that approximates a user-perceived"},{"type":"text","text":" "},{"text":"character.","type":"text"}],"type":"topic","role":"symbol","url":"\/documentation\/compute\/character","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Character"}],"navigatorTitle":[{"kind":"identifier","text":"Character"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt16":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"UInt16","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"UInt16"}],"title":"UInt16","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16","url":"\/documentation\/compute\/uint16","kind":"symbol","role":"symbol","abstract":[{"text":"A 16-bit unsigned integer value","type":"text"},{"text":" ","type":"text"},{"text":"type.","type":"text"}],"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/CollectionOfOne":{"title":"CollectionOfOne","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CollectionOfOne"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CollectionOfOne","type":"topic","navigatorTitle":[{"kind":"identifier","text":"CollectionOfOne"}],"abstract":[{"type":"text","text":"A collection containing a single element."}],"conformance":{"constraints":[{"code":"Element","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Copyable","type":"codeVoice"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Escapable"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","kind":"symbol","url":"\/documentation\/compute\/collectionofone"},"doc://com.swallow.documentation.Compute/documentation/Compute/StrideTo":{"title":"StrideTo","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/StrideTo","type":"topic","url":"\/documentation\/compute\/strideto","kind":"symbol","abstract":[{"text":"A sequence of values formed by striding over a half-open interval.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"StrideTo"}],"navigatorTitle":[{"text":"StrideTo","kind":"identifier"}],"conformance":{"constraints":[{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Strideable"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]}},"doc://com.swallow.documentation.Compute/documentation/Compute/String":{"type":"topic","navigatorTitle":[{"kind":"identifier","text":"String"}],"title":"String","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"String","kind":"identifier"}],"abstract":[{"type":"text","text":"A Unicode string value that is a collection of characters."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String","kind":"symbol","role":"symbol","url":"\/documentation\/compute\/string"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt32":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt32","title":"UInt32","abstract":[{"type":"text","text":"A 32-bit unsigned integer value"},{"type":"text","text":" "},{"text":"type.","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"UInt32","kind":"identifier"}],"url":"\/documentation\/compute\/uint32","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"UInt32","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/String/UTF8View":{"url":"\/documentation\/compute\/string\/utf8view","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"UTF8View"}],"role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"UTF8View"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/UTF8View","abstract":[{"text":"A view of a string’s contents as a collection of UTF-8 code units.","type":"text"}],"type":"topic","title":"String.UTF8View"},"doc://com.swallow.documentation.Compute/documentation/Compute/Mirror":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Mirror","kind":"symbol","abstract":[{"type":"text","text":"A representation of the substructure and display style of an instance of"},{"type":"text","text":" "},{"type":"text","text":"any type."}],"role":"symbol","title":"Mirror","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Mirror","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"Mirror"}],"url":"\/documentation\/compute\/mirror","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/StrideThrough":{"title":"StrideThrough","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"StrideThrough","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/StrideThrough","type":"topic","navigatorTitle":[{"text":"StrideThrough","kind":"identifier"}],"abstract":[{"text":"A sequence of values formed by striding over a closed interval.","type":"text"}],"conformance":{"constraints":[{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Strideable"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","kind":"symbol","url":"\/documentation\/compute\/stridethrough"},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeMutablePointer":{"title":"UnsafeMutablePointer","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutablePointer","type":"topic","url":"\/documentation\/compute\/unsafemutablepointer","kind":"symbol","abstract":[{"text":"A pointer for accessing and manipulating data of a","type":"text"},{"type":"text","text":" "},{"type":"text","text":"specific type."}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"UnsafeMutablePointer"}],"navigatorTitle":[{"text":"UnsafeMutablePointer","kind":"identifier"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Pointee","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Escapable","type":"codeVoice"},{"type":"text","text":"."}]}},"doc://com.swallow.documentation.Compute/documentation/Compute/CustomReflectable/customMirror":{"title":"customMirror","required":true,"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CustomReflectable\/customMirror","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"customMirror"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s6MirrorV","text":"Mirror"}],"type":"topic","abstract":[{"type":"text","text":"The custom mirror for this instance."}],"role":"symbol","kind":"symbol","url":"\/documentation\/compute\/customreflectable\/custommirror"},"doc://com.swallow.documentation.Compute/documentation/Compute/Bool":{"url":"\/documentation\/compute\/bool","role":"symbol","title":"Bool","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Bool","kind":"identifier"}],"abstract":[{"type":"text","text":"A value type whose instances are either "},{"type":"codeVoice","code":"true"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"false"},{"text":".","type":"text"}],"navigatorTitle":[{"text":"Bool","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bool","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeRawPointer":{"role":"symbol","abstract":[{"text":"A raw pointer for accessing untyped data.","type":"text"}],"title":"UnsafeRawPointer","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"UnsafeRawPointer"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeRawPointer","kind":"symbol","navigatorTitle":[{"text":"UnsafeRawPointer","kind":"identifier"}],"url":"\/documentation\/compute\/unsaferawpointer","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt8":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"UInt8","kind":"identifier"}],"navigatorTitle":[{"text":"UInt8","kind":"identifier"}],"title":"UInt8","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8","url":"\/documentation\/compute\/uint8","kind":"symbol","role":"symbol","type":"topic","abstract":[{"type":"text","text":"An 8-bit unsigned integer value"},{"text":" ","type":"text"},{"text":"type.","type":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Float":{"type":"topic","abstract":[{"text":"A single-precision, floating-point value type.","type":"text"}],"url":"\/documentation\/compute\/float","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Float"}],"navigatorTitle":[{"text":"Float","kind":"identifier"}],"title":"Float"},"doc://com.swallow.documentation.Compute/documentation/Compute/CustomReflectable":{"url":"\/documentation\/compute\/customreflectable","role":"symbol","abstract":[{"text":"A type that explicitly supplies its own mirror.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CustomReflectable","title":"CustomReflectable","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CustomReflectable"}],"navigatorTitle":[{"kind":"identifier","text":"CustomReflectable"}],"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeMutableRawPointer":{"kind":"symbol","type":"topic","abstract":[{"text":"A raw pointer for accessing and manipulating untyped data.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableRawPointer","url":"\/documentation\/compute\/unsafemutablerawpointer","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"UnsafeMutableRawPointer"}],"title":"UnsafeMutableRawPointer","navigatorTitle":[{"kind":"identifier","text":"UnsafeMutableRawPointer"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafePointer":{"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafePointer","title":"UnsafePointer","url":"\/documentation\/compute\/unsafepointer","kind":"symbol","abstract":[{"type":"text","text":"A pointer for accessing data of a specific type."}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"UnsafePointer","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"UnsafePointer"}],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Pointee"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Escapable"},{"type":"text","text":"."}]}}}}