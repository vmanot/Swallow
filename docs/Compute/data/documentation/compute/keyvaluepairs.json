{"sections":[],"kind":"symbol","abstract":[{"type":"text","text":"A lightweight collection of key-value pairs."}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/KeyValuePairs"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"@frozen","kind":"attribute"},{"kind":"text","text":" "},{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"KeyValuePairs","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Key"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">"}],"platforms":["macOS"]}]},{"kind":"content","content":[{"text":"Overview","type":"heading","level":2,"anchor":"overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Use a "},{"code":"KeyValuePairs","type":"codeVoice"},{"type":"text","text":" instance when you need an ordered collection of"},{"type":"text","text":" "},{"type":"text","text":"key-value pairs and don’t require the fast key lookup that the"},{"text":" ","type":"text"},{"type":"codeVoice","code":"Dictionary"},{"text":" type provides. Unlike key-value pairs in a true dictionary,","type":"text"},{"type":"text","text":" "},{"text":"neither the key nor the value of a ","type":"text"},{"type":"codeVoice","code":"KeyValuePairs"},{"type":"text","text":" instance must"},{"type":"text","text":" "},{"type":"text","text":"conform to the "},{"code":"Hashable","type":"codeVoice"},{"type":"text","text":" protocol."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You initialize a "},{"type":"codeVoice","code":"KeyValuePairs"},{"type":"text","text":" instance using a Swift dictionary"},{"type":"text","text":" "},{"type":"text","text":"literal. Besides maintaining the order of the original dictionary literal,"},{"type":"text","text":" "},{"type":"codeVoice","code":"KeyValuePairs"},{"type":"text","text":" also allows duplicates keys. For example:"}]},{"syntax":null,"code":["let recordTimes: KeyValuePairs = [\"Florence Griffith-Joyner\": 10.49,","                                      \"Evelyn Ashford\": 10.76,","                                      \"Evelyn Ashford\": 10.79,","                                      \"Marlies Gohr\": 10.81]","print(recordTimes.first!)","\/\/ Prints \"(key: \"Florence Griffith-Joyner\", value: 10.49)\""],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"Some operations that are efficient on a dictionary are slower when using"},{"type":"text","text":" "},{"type":"codeVoice","code":"KeyValuePairs"},{"text":". In particular, to find the value matching a key, you","type":"text"},{"type":"text","text":" "},{"text":"must search through every element of the collection. The call to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"firstIndex(where:)"},{"type":"text","text":" in the following example must traverse the whole"},{"type":"text","text":" "},{"text":"collection to find the element that matches the predicate:","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":["let runner = \"Marlies Gohr\"","if let index = recordTimes.firstIndex(where: { $0.0 == runner }) {","    let time = recordTimes[index].1","    print(\"\\(runner) set a 100m record of \\(time) seconds.\")","} else {","    print(\"\\(runner) couldn't be found in the records.\")","}","\/\/ Prints \"Marlies Gohr set a 100m record of 10.81 seconds.\""]},{"text":"Key-Value Pairs as a Function Parameter","level":2,"type":"heading","anchor":"Key-Value-Pairs-as-a-Function-Parameter"},{"inlineContent":[{"type":"text","text":"When calling a function with a "},{"code":"KeyValuePairs","type":"codeVoice"},{"text":" parameter, you can pass","type":"text"},{"text":" ","type":"text"},{"text":"a Swift dictionary literal without causing a ","type":"text"},{"type":"codeVoice","code":"Dictionary"},{"type":"text","text":" to be created."},{"type":"text","text":" "},{"type":"text","text":"This capability can be especially important when the order of elements in"},{"type":"text","text":" "},{"type":"text","text":"the literal is significant."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"For example, you could create an ","type":"text"},{"code":"IntPairs","type":"codeVoice"},{"type":"text","text":" structure that holds a list of"},{"type":"text","text":" "},{"type":"text","text":"two-integer tuples and use an initializer that accepts a"},{"text":" ","type":"text"},{"code":"KeyValuePairs","type":"codeVoice"},{"type":"text","text":" instance."}]},{"syntax":null,"code":["struct IntPairs {","    var elements: [(Int, Int)]","","    init(_ elements: KeyValuePairs<Int, Int>) {","        self.elements = Array(elements)","    }","}"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"When you’re ready to create a new ","type":"text"},{"type":"codeVoice","code":"IntPairs"},{"type":"text","text":" instance, use a dictionary"},{"text":" ","type":"text"},{"text":"literal as the parameter to the ","type":"text"},{"type":"codeVoice","code":"IntPairs"},{"type":"text","text":" initializer. The"},{"type":"text","text":" "},{"code":"KeyValuePairs","type":"codeVoice"},{"type":"text","text":" instance preserves the order of the elements as"},{"type":"text","text":" "},{"text":"passed.","type":"text"}]},{"syntax":null,"code":["let pairs = IntPairs([1: 2, 1: 1, 3: 4, 2: 1])","print(pairs.elements)","\/\/ Prints \"[(1, 2), (1, 1), (3, 4), (2, 1)]\""],"type":"codeListing"}]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"variants":[{"paths":["\/documentation\/compute\/keyvaluepairs"],"traits":[{"interfaceLanguage":"swift"}]}],"topicSections":[{"anchor":"Initializers","identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/KeyValuePairs\/init(dictionaryLiteral:)"],"generated":true,"title":"Initializers"},{"title":"Default Implementations","identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/KeyValuePairs\/BidirectionalCollection-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/KeyValuePairs\/Collection-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/KeyValuePairs\/CustomDebugStringConvertible-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/KeyValuePairs\/CustomStringConvertible-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/KeyValuePairs\/RandomAccessCollection-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/KeyValuePairs\/Sequence-Implementations"],"generated":true,"anchor":"Default-Implementations"}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute"]]},"metadata":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"KeyValuePairs","kind":"identifier"}],"roleHeading":"Structure","externalID":"s:s13KeyValuePairsV","symbolKind":"struct","modules":[{"name":"Compute"}],"title":"KeyValuePairs","navigatorTitle":[{"kind":"identifier","text":"KeyValuePairs"}],"role":"symbol"},"relationshipsSections":[{"identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BidirectionalCollection","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Copyable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CustomDebugStringConvertible","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CustomStringConvertible","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ExpressibleByDictionaryLiteral","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RandomAccessCollection","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sendable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence","doc:\/\/com.swallow.documentation.Compute\/7Swallow9InitiableP","doc:\/\/com.swallow.documentation.Compute\/7Swallow11KeyedValuesP","doc:\/\/com.swallow.documentation.Compute\/7Swallow017SequenceInitiableB0P"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/KeyValuePairs/CustomDebugStringConvertible-Implementations":{"role":"collectionGroup","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/KeyValuePairs\/CustomDebugStringConvertible-Implementations","type":"topic","kind":"article","title":"CustomDebugStringConvertible Implementations","url":"\/documentation\/compute\/keyvaluepairs\/customdebugstringconvertible-implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/KeyValuePairs":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"KeyValuePairs"}],"navigatorTitle":[{"kind":"identifier","text":"KeyValuePairs"}],"url":"\/documentation\/compute\/keyvaluepairs","title":"KeyValuePairs","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/KeyValuePairs","role":"symbol","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"A lightweight collection of key-value pairs."}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Copyable":{"kind":"symbol","url":"\/documentation\/compute\/copyable","abstract":[{"type":"text","text":"A type whose values can be implicitly or explicitly copied."}],"title":"Copyable","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Copyable","navigatorTitle":[{"text":"Copyable","kind":"identifier"}],"type":"topic","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Copyable"}],"conformance":{"constraints":[{"code":"Key","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Copyable"},{"type":"text","text":", "},{"code":"Key","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Escapable"},{"type":"text","text":", "},{"code":"Value","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Copyable"},{"type":"text","text":", and "},{"code":"Value","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Escapable"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]}},"doc://com.swallow.documentation.Compute/documentation/Compute/ExpressibleByDictionaryLiteral":{"kind":"symbol","title":"ExpressibleByDictionaryLiteral","abstract":[{"type":"text","text":"A type that can be initialized using a dictionary literal."}],"url":"\/documentation\/compute\/expressiblebydictionaryliteral","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"ExpressibleByDictionaryLiteral","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ExpressibleByDictionaryLiteral","navigatorTitle":[{"text":"ExpressibleByDictionaryLiteral","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/CustomDebugStringConvertible":{"title":"CustomDebugStringConvertible","navigatorTitle":[{"text":"CustomDebugStringConvertible","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"A type with a customized textual representation suitable for debugging"},{"type":"text","text":" "},{"text":"purposes.","type":"text"}],"role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"CustomDebugStringConvertible","kind":"identifier"}],"url":"\/documentation\/compute\/customdebugstringconvertible","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CustomDebugStringConvertible","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Key","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Copyable"},{"text":", ","type":"text"},{"code":"Key","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Escapable"},{"type":"text","text":", "},{"code":"Value","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Copyable","type":"codeVoice"},{"text":", and ","type":"text"},{"code":"Value","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Escapable","type":"codeVoice"},{"text":".","type":"text"}]}},"doc://com.swallow.documentation.Compute/7Swallow11KeyedValuesP":{"title":"Swallow.KeyedValues","type":"unresolvable","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow11KeyedValuesP"},"doc://com.swallow.documentation.Compute/documentation/Compute/KeyValuePairs/RandomAccessCollection-Implementations":{"type":"topic","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/KeyValuePairs\/RandomAccessCollection-Implementations","role":"collectionGroup","kind":"article","title":"RandomAccessCollection Implementations","url":"\/documentation\/compute\/keyvaluepairs\/randomaccesscollection-implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/CustomStringConvertible":{"title":"CustomStringConvertible","navigatorTitle":[{"text":"CustomStringConvertible","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"A type with a customized textual representation.","type":"text"}],"role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CustomStringConvertible"}],"url":"\/documentation\/compute\/customstringconvertible","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CustomStringConvertible","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Key","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Copyable"},{"type":"text","text":", "},{"code":"Key","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Escapable"},{"type":"text","text":", "},{"code":"Value","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Copyable"},{"text":", and ","type":"text"},{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"code":"Escapable","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}]}},"doc://com.swallow.documentation.Compute/documentation/Compute/Collection":{"kind":"symbol","url":"\/documentation\/compute\/collection","abstract":[{"text":"A sequence whose elements can be traversed multiple times,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"nondestructively, and accessed by an indexed subscript."}],"title":"Collection","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection","navigatorTitle":[{"text":"Collection","kind":"identifier"}],"type":"topic","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Collection"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Key"},{"type":"text","text":" conforms to "},{"code":"Copyable","type":"codeVoice"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Key"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Escapable"},{"text":", ","type":"text"},{"code":"Value","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Copyable","type":"codeVoice"},{"type":"text","text":", and "},{"code":"Value","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Escapable"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]}},"doc://com.swallow.documentation.Compute/documentation/Compute/KeyValuePairs/Collection-Implementations":{"abstract":[],"url":"\/documentation\/compute\/keyvaluepairs\/collection-implementations","title":"Collection Implementations","role":"collectionGroup","kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/KeyValuePairs\/Collection-Implementations","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence":{"title":"Sequence","navigatorTitle":[{"text":"Sequence","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"A type that provides sequential, iterated access to its elements.","type":"text"}],"role":"symbol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Sequence","kind":"identifier"}],"url":"\/documentation\/compute\/sequence","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence","conformance":{"constraints":[{"type":"codeVoice","code":"Key"},{"text":" conforms to ","type":"text"},{"code":"Copyable","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"Key"},{"type":"text","text":" conforms to "},{"code":"Escapable","type":"codeVoice"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Copyable"},{"type":"text","text":", and "},{"code":"Value","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Escapable","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]}},"doc://com.swallow.documentation.Compute/documentation/Compute/KeyValuePairs/init(dictionaryLiteral:)":{"fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"dictionaryLiteral"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Key"},{"text":", ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":")...)"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/KeyValuePairs\/init(dictionaryLiteral:)","role":"symbol","url":"\/documentation\/compute\/keyvaluepairs\/init(dictionaryliteral:)","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Creates a new "},{"code":"KeyValuePairs","type":"codeVoice"},{"text":" instance from the given dictionary","type":"text"},{"text":" ","type":"text"},{"text":"literal.","type":"text"}],"title":"init(dictionaryLiteral:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/KeyValuePairs/CustomStringConvertible-Implementations":{"url":"\/documentation\/compute\/keyvaluepairs\/customstringconvertible-implementations","role":"collectionGroup","kind":"article","title":"CustomStringConvertible Implementations","abstract":[],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/KeyValuePairs\/CustomStringConvertible-Implementations"},"doc://com.swallow.documentation.Compute/7Swallow017SequenceInitiableB0P":{"type":"unresolvable","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow017SequenceInitiableB0P","title":"Swallow.SequenceInitiableSequence"},"doc://com.swallow.documentation.Compute/7Swallow9InitiableP":{"type":"unresolvable","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow9InitiableP","title":"Swallow.Initiable"},"doc://com.swallow.documentation.Compute/documentation/Compute/RandomAccessCollection":{"kind":"symbol","url":"\/documentation\/compute\/randomaccesscollection","abstract":[{"type":"text","text":"A collection that supports efficient random-access index traversal."}],"title":"RandomAccessCollection","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RandomAccessCollection","navigatorTitle":[{"text":"RandomAccessCollection","kind":"identifier"}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"RandomAccessCollection","kind":"identifier"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Key"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Copyable"},{"text":", ","type":"text"},{"code":"Key","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Escapable"},{"type":"text","text":", "},{"code":"Value","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Copyable"},{"type":"text","text":", and "},{"code":"Value","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Escapable","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]}},"doc://com.swallow.documentation.Compute/documentation/Compute/BidirectionalCollection":{"title":"BidirectionalCollection","navigatorTitle":[{"text":"BidirectionalCollection","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"A collection that supports backward as well as forward traversal."}],"role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"BidirectionalCollection","kind":"identifier"}],"url":"\/documentation\/compute\/bidirectionalcollection","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BidirectionalCollection","conformance":{"constraints":[{"code":"Key","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Copyable"},{"type":"text","text":", "},{"type":"codeVoice","code":"Key"},{"text":" conforms to ","type":"text"},{"code":"Escapable","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"code":"Copyable","type":"codeVoice"},{"type":"text","text":", and "},{"code":"Value","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Escapable","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]}},"doc://com.swallow.documentation.Compute/documentation/Compute/Sendable":{"url":"\/documentation\/compute\/sendable","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sendable","navigatorTitle":[{"kind":"identifier","text":"Sendable"}],"conformance":{"constraints":[{"type":"codeVoice","code":"Key"},{"type":"text","text":" conforms to "},{"code":"Copyable","type":"codeVoice"},{"type":"text","text":", "},{"code":"Key","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Escapable"},{"type":"text","text":", "},{"type":"codeVoice","code":"Key"},{"type":"text","text":" conforms to "},{"code":"Sendable","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"Value"},{"text":" conforms to ","type":"text"},{"code":"Copyable","type":"codeVoice"},{"type":"text","text":", "},{"code":"Value","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Escapable"},{"text":", and ","type":"text"},{"type":"codeVoice","code":"Value"},{"text":" conforms to ","type":"text"},{"code":"Sendable","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Sendable","kind":"identifier"}],"role":"symbol","abstract":[],"title":"Sendable","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/KeyValuePairs/BidirectionalCollection-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/KeyValuePairs\/BidirectionalCollection-Implementations","type":"topic","title":"BidirectionalCollection Implementations","url":"\/documentation\/compute\/keyvaluepairs\/bidirectionalcollection-implementations","role":"collectionGroup","kind":"article","abstract":[]},"doc://com.swallow.documentation.Compute/documentation/Compute/KeyValuePairs/Sequence-Implementations":{"url":"\/documentation\/compute\/keyvaluepairs\/sequence-implementations","title":"Sequence Implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/KeyValuePairs\/Sequence-Implementations","role":"collectionGroup","kind":"article","type":"topic","abstract":[]},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"}}}