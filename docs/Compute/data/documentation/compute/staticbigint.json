{"metadata":{"navigatorTitle":[{"kind":"identifier","text":"StaticBigInt"}],"roleHeading":"Structure","role":"symbol","symbolKind":"struct","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StaticBigInt","kind":"identifier"}],"platforms":[{"name":"iOS","beta":false,"deprecated":false,"unavailable":false,"introducedAt":"16.4"},{"deprecated":false,"name":"macOS","unavailable":false,"introducedAt":"13.3","beta":false},{"unavailable":false,"deprecated":false,"introducedAt":"16.4","beta":false,"name":"tvOS"},{"deprecated":false,"introducedAt":"9.4","name":"watchOS","beta":false,"unavailable":false}],"modules":[{"name":"Compute"}],"title":"StaticBigInt","externalID":"s:s12StaticBigIntV"},"topicSections":[{"generated":true,"identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/StaticBigInt\/bitWidth"],"title":"Instance Properties","anchor":"Instance-Properties"},{"identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/StaticBigInt\/signum()"],"generated":true,"title":"Instance Methods","anchor":"Instance-Methods"},{"title":"Subscripts","anchor":"Subscripts","identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/StaticBigInt\/subscript(_:)"],"generated":true},{"title":"Type Aliases","generated":true,"identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/StaticBigInt\/IntegerLiteralType"],"anchor":"Type-Aliases"},{"title":"Default Implementations","generated":true,"anchor":"Default-Implementations","identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/StaticBigInt\/CustomDebugStringConvertible-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/StaticBigInt\/CustomReflectable-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/StaticBigInt\/ExpressibleByIntegerLiteral-Implementations"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"@frozen","kind":"attribute"},{"text":" ","kind":"text"},{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"StaticBigInt","kind":"identifier"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"type":"heading","text":"Overview","level":2,"anchor":"overview"},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"StaticBigInt"},{"type":"text","text":" is primarily intended to be used as the associated type of an"},{"text":" ","type":"text"},{"code":"ExpressibleByIntegerLiteral","type":"codeVoice"},{"type":"text","text":" conformance."}]},{"code":["extension UInt256: ExpressibleByIntegerLiteral {","    public init(integerLiteral value: StaticBigInt) {","        precondition(","            value.signum() >= 0 && value.bitWidth <= 1 + Self.bitWidth,","            \"integer overflow: '\\(value)' as '\\(Self.self)'\"","        )","        self.words = Words()","        for wordIndex in 0..<Words.count {","            self.words[wordIndex] = value[wordIndex]","        }","    }","}"],"type":"codeListing","syntax":null}]}],"abstract":[{"type":"text","text":"An immutable arbitrary-precision signed integer."}],"relationshipsSections":[{"identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BitwiseCopyable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Copyable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CustomDebugStringConvertible","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CustomReflectable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ExpressibleByIntegerLiteral","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sendable"],"title":"Conforms To","type":"conformsTo","kind":"relationships"}],"kind":"symbol","sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/StaticBigInt"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/staticbigint"]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute"]]},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/StaticBigInt/bitWidth":{"type":"topic","role":"symbol","abstract":[{"type":"text","text":"Returns the minimal number of bits in this value’s binary representation,"},{"text":" ","type":"text"},{"text":"including the sign bit, and excluding the sign extension.","type":"text"}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"bitWidth","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"url":"\/documentation\/compute\/staticbigint\/bitwidth","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/StaticBigInt\/bitWidth","title":"bitWidth"},"doc://com.swallow.documentation.Compute/documentation/Compute/StaticBigInt/CustomDebugStringConvertible-Implementations":{"role":"collectionGroup","url":"\/documentation\/compute\/staticbigint\/customdebugstringconvertible-implementations","kind":"article","title":"CustomDebugStringConvertible Implementations","type":"topic","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/StaticBigInt\/CustomDebugStringConvertible-Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/Sendable":{"kind":"symbol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"Sendable","kind":"identifier"}],"title":"Sendable","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sendable","abstract":[],"url":"\/documentation\/compute\/sendable","role":"symbol","navigatorTitle":[{"text":"Sendable","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/CustomDebugStringConvertible":{"url":"\/documentation\/compute\/customdebugstringconvertible","role":"symbol","abstract":[{"text":"A type with a customized textual representation suitable for debugging","type":"text"},{"type":"text","text":" "},{"text":"purposes.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CustomDebugStringConvertible","title":"CustomDebugStringConvertible","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CustomDebugStringConvertible","kind":"identifier"}],"navigatorTitle":[{"text":"CustomDebugStringConvertible","kind":"identifier"}],"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/StaticBigInt/CustomReflectable-Implementations":{"kind":"article","abstract":[],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/StaticBigInt\/CustomReflectable-Implementations","url":"\/documentation\/compute\/staticbigint\/customreflectable-implementations","title":"CustomReflectable Implementations","role":"collectionGroup"},"doc://com.swallow.documentation.Compute/documentation/Compute/BitwiseCopyable":{"title":"BitwiseCopyable","abstract":[],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BitwiseCopyable","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BitwiseCopyable","url":"\/documentation\/compute\/bitwisecopyable","navigatorTitle":[{"kind":"identifier","text":"BitwiseCopyable"}],"kind":"symbol","role":"symbol","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/StaticBigInt":{"abstract":[{"text":"An immutable arbitrary-precision signed integer.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"StaticBigInt"}],"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StaticBigInt","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/StaticBigInt","url":"\/documentation\/compute\/staticbigint","kind":"symbol","title":"StaticBigInt","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/StaticBigInt/subscript(_:)":{"type":"topic","abstract":[{"type":"text","text":"Returns a 32-bit or 64-bit word of this value’s binary representation."}],"title":"subscript(_:)","kind":"symbol","url":"\/documentation\/compute\/staticbigint\/subscript(_:)","fragments":[{"kind":"keyword","text":"subscript"},{"text":"(","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":") -> ","kind":"text"},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/StaticBigInt\/subscript(_:)","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/StaticBigInt/ExpressibleByIntegerLiteral-Implementations":{"url":"\/documentation\/compute\/staticbigint\/expressiblebyintegerliteral-implementations","kind":"article","abstract":[],"role":"collectionGroup","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/StaticBigInt\/ExpressibleByIntegerLiteral-Implementations","title":"ExpressibleByIntegerLiteral Implementations","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/StaticBigInt/signum()":{"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"signum"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"}],"title":"signum()","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/StaticBigInt\/signum()","kind":"symbol","url":"\/documentation\/compute\/staticbigint\/signum()","abstract":[{"text":"Indicates the value’s sign.","type":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/StaticBigInt/IntegerLiteralType":{"navigatorTitle":[{"text":"IntegerLiteralType","kind":"identifier"}],"url":"\/documentation\/compute\/staticbigint\/integerliteraltype","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"IntegerLiteralType"}],"type":"topic","role":"symbol","title":"StaticBigInt.IntegerLiteralType","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/StaticBigInt\/IntegerLiteralType","kind":"symbol","abstract":[{"text":"A type that represents an integer literal.","type":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/ExpressibleByIntegerLiteral":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ExpressibleByIntegerLiteral","url":"\/documentation\/compute\/expressiblebyintegerliteral","title":"ExpressibleByIntegerLiteral","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ExpressibleByIntegerLiteral","kind":"identifier"}],"navigatorTitle":[{"text":"ExpressibleByIntegerLiteral","kind":"identifier"}],"abstract":[{"text":"A type that can be initialized with an integer literal.","type":"text"}],"kind":"symbol","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Copyable":{"title":"Copyable","abstract":[{"type":"text","text":"A type whose values can be implicitly or explicitly copied."}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"Copyable","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Copyable","url":"\/documentation\/compute\/copyable","navigatorTitle":[{"text":"Copyable","kind":"identifier"}],"kind":"symbol","role":"symbol","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/CustomReflectable":{"url":"\/documentation\/compute\/customreflectable","role":"symbol","abstract":[{"text":"A type that explicitly supplies its own mirror.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CustomReflectable","title":"CustomReflectable","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CustomReflectable"}],"navigatorTitle":[{"kind":"identifier","text":"CustomReflectable"}],"kind":"symbol"}}}