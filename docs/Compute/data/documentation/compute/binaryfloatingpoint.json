{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/binaryfloatingpoint"]}],"relationshipsSections":[{"kind":"relationships","identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AdditiveArithmetic","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Comparable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Equatable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ExpressibleByFloatLiteral","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ExpressibleByIntegerLiteral","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Hashable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Numeric","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SignedNumeric","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Strideable"],"title":"Inherits From","type":"inheritsFrom"},{"identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Double","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float16"],"kind":"relationships","title":"Conforming Types","type":"conformingTypes"}],"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryFloatingPoint","interfaceLanguage":"swift"},"sections":[],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"navigatorTitle":[{"text":"BinaryFloatingPoint","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"BinaryFloatingPoint"}],"role":"symbol","roleHeading":"Protocol","externalID":"s:SB","title":"BinaryFloatingPoint","modules":[{"name":"Compute"}],"symbolKind":"protocol"},"abstract":[{"type":"text","text":"A radix-2 (binary) floating-point type."}],"topicSections":[{"anchor":"Associated-Types","identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryFloatingPoint\/RawExponent","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryFloatingPoint\/RawSignificand"],"generated":true,"title":"Associated Types"},{"generated":true,"title":"Initializers","anchor":"Initializers","identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryFloatingPoint\/init(_:)-57jx7","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryFloatingPoint\/init(_:)-7ft14","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryFloatingPoint\/init(_:)-shau","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryFloatingPoint\/init(exactly:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryFloatingPoint\/init(sign:exponentBitPattern:significandBitPattern:)"]},{"identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryFloatingPoint\/binade","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryFloatingPoint\/exponentBitPattern","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryFloatingPoint\/significandBitPattern","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryFloatingPoint\/significandWidth"],"generated":true,"anchor":"Instance-Properties","title":"Instance Properties"},{"generated":true,"anchor":"Type-Properties","identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryFloatingPoint\/exponentBitCount","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryFloatingPoint\/significandBitCount"],"title":"Type Properties"},{"generated":true,"identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryFloatingPoint\/random(in:)-2j16p","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryFloatingPoint\/random(in:)-8jkjb","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryFloatingPoint\/random(in:using:)-2awm8","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryFloatingPoint\/random(in:using:)-6pf7f"],"anchor":"Type-Methods","title":"Type Methods"}],"kind":"symbol","primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"BinaryFloatingPoint","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"ExpressibleByFloatLiteral","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ExpressibleByFloatLiteral","kind":"typeIdentifier","preciseIdentifier":"s:s25ExpressibleByFloatLiteralP"},{"kind":"text","text":", "},{"text":"FloatingPoint","preciseIdentifier":"s:SF","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint"}]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","text":"Overview","level":2,"anchor":"overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"code":"BinaryFloatingPoint","type":"codeVoice"},{"type":"text","text":" protocol extends the "},{"code":"FloatingPoint","type":"codeVoice"},{"type":"text","text":" protocol"},{"type":"text","text":" "},{"type":"text","text":"with operations specific to floating-point binary types, as defined by the"},{"text":" ","type":"text"},{"isActive":true,"identifier":"http:\/\/ieeexplore.ieee.org\/servlet\/opac?punumber=4610933","type":"reference"},{"text":". ","type":"text"},{"code":"BinaryFloatingPoint","type":"codeVoice"},{"type":"text","text":" is implemented in"},{"type":"text","text":" "},{"text":"the standard library by ","type":"text"},{"type":"codeVoice","code":"Float"},{"text":", ","type":"text"},{"code":"Double","type":"codeVoice"},{"text":", and ","type":"text"},{"type":"codeVoice","code":"Float80"},{"text":" where available.","type":"text"}]}]}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/BinaryFloatingPoint/init(_:)-7ft14":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryFloatingPoint\/init(_:)-7ft14","url":"\/documentation\/compute\/binaryfloatingpoint\/init(_:)-7ft14","required":true,"title":"init(_:)","kind":"symbol","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"text":"Double","kind":"typeIdentifier","preciseIdentifier":"s:Sd"},{"kind":"text","text":")"}],"defaultImplementations":2,"abstract":[{"type":"text","text":"Creates a new instance from the given value, rounded to the closest"},{"type":"text","text":" "},{"text":"possible representation.","type":"text"}],"role":"symbol","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/Hashable":{"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Hashable"}],"title":"Hashable","navigatorTitle":[{"text":"Hashable","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"A type that can be hashed into a "},{"type":"codeVoice","code":"Hasher"},{"type":"text","text":" to produce an integer hash value."}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Hashable","url":"\/documentation\/compute\/hashable","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Float":{"type":"topic","abstract":[{"text":"A single-precision, floating-point value type.","type":"text"}],"url":"\/documentation\/compute\/float","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Float"}],"navigatorTitle":[{"text":"Float","kind":"identifier"}],"title":"Float"},"doc://com.swallow.documentation.Compute/documentation/Compute/ExpressibleByIntegerLiteral":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ExpressibleByIntegerLiteral","url":"\/documentation\/compute\/expressiblebyintegerliteral","title":"ExpressibleByIntegerLiteral","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ExpressibleByIntegerLiteral","kind":"identifier"}],"navigatorTitle":[{"text":"ExpressibleByIntegerLiteral","kind":"identifier"}],"abstract":[{"text":"A type that can be initialized with an integer literal.","type":"text"}],"kind":"symbol","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/BinaryFloatingPoint/init(sign:exponentBitPattern:significandBitPattern:)":{"required":true,"type":"topic","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"text":"sign","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"FloatingPointSign","kind":"typeIdentifier","preciseIdentifier":"s:s17FloatingPointSignO"},{"text":", ","kind":"text"},{"text":"exponentBitPattern","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"RawExponent","preciseIdentifier":"s:SB11RawExponentQa"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"significandBitPattern"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"RawSignificand","kind":"typeIdentifier","preciseIdentifier":"s:SB14RawSignificandQa"},{"text":")","kind":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryFloatingPoint\/init(sign:exponentBitPattern:significandBitPattern:)","role":"symbol","url":"\/documentation\/compute\/binaryfloatingpoint\/init(sign:exponentbitpattern:significandbitpattern:)","kind":"symbol","abstract":[{"text":"Creates a new instance from the specified sign and bit patterns.","type":"text"}],"title":"init(sign:exponentBitPattern:significandBitPattern:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/FloatingPoint":{"url":"\/documentation\/compute\/floatingpoint","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint","title":"FloatingPoint","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FloatingPoint","kind":"identifier"}],"navigatorTitle":[{"text":"FloatingPoint","kind":"identifier"}],"abstract":[{"text":"A floating-point numeric type.","type":"text"}],"kind":"symbol","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/BinaryFloatingPoint/significandBitPattern":{"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"significandBitPattern","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:SB14RawSignificandQa","text":"RawSignificand","kind":"typeIdentifier"}],"title":"significandBitPattern","type":"topic","abstract":[{"type":"text","text":"The raw encoding of the value’s significand field."}],"kind":"symbol","url":"\/documentation\/compute\/binaryfloatingpoint\/significandbitpattern","required":true,"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryFloatingPoint\/significandBitPattern","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Numeric":{"abstract":[{"type":"text","text":"A type with values that support multiplication."}],"kind":"symbol","url":"\/documentation\/compute\/numeric","navigatorTitle":[{"text":"Numeric","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Numeric","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Numeric"}],"title":"Numeric"},"doc://com.swallow.documentation.Compute/documentation/Compute/BinaryFloatingPoint":{"navigatorTitle":[{"text":"BinaryFloatingPoint","kind":"identifier"}],"type":"topic","title":"BinaryFloatingPoint","abstract":[{"text":"A radix-2 (binary) floating-point type.","type":"text"}],"url":"\/documentation\/compute\/binaryfloatingpoint","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BinaryFloatingPoint","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryFloatingPoint","kind":"symbol","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/BinaryFloatingPoint/exponentBitPattern":{"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryFloatingPoint\/exponentBitPattern","title":"exponentBitPattern","abstract":[{"text":"The raw encoding of the value’s exponent field.","type":"text"}],"url":"\/documentation\/compute\/binaryfloatingpoint\/exponentbitpattern","required":true,"role":"symbol","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"exponentBitPattern","kind":"identifier"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"RawExponent","kind":"typeIdentifier","preciseIdentifier":"s:SB11RawExponentQa"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/BinaryFloatingPoint/random(in:)-2j16p":{"role":"symbol","url":"\/documentation\/compute\/binaryfloatingpoint\/random(in:)-2j16p","title":"random(in:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"random","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"in"},{"text":": ","kind":"text"},{"text":"ClosedRange","kind":"typeIdentifier","preciseIdentifier":"s:SN"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Self"}],"abstract":[{"text":"Returns a random value within the specified range.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryFloatingPoint\/random(in:)-2j16p","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"RawSignificand"},{"type":"text","text":" conforms to "},{"code":"FixedWidthInteger","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Strideable":{"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/compute\/strideable","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Strideable","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Strideable"}],"navigatorTitle":[{"text":"Strideable","kind":"identifier"}],"abstract":[{"type":"text","text":"A type representing continuous, one-dimensional values that can be offset"},{"type":"text","text":" "},{"type":"text","text":"and measured."}],"title":"Strideable"},"doc://com.swallow.documentation.Compute/documentation/Compute/Double":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Double","abstract":[{"text":"A double-precision, floating-point value type.","type":"text"}],"title":"Double","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Double","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"Double","kind":"identifier"}],"kind":"symbol","type":"topic","url":"\/documentation\/compute\/double"},"doc://com.swallow.documentation.Compute/documentation/Compute/BinaryFloatingPoint/init(exactly:)":{"abstract":[{"type":"text","text":"Creates a new instance from the given value, if it can be represented"},{"type":"text","text":" "},{"text":"exactly.","type":"text"}],"defaultImplementations":2,"url":"\/documentation\/compute\/binaryfloatingpoint\/init(exactly:)","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryFloatingPoint\/init(exactly:)","type":"topic","fragments":[{"text":"init","kind":"identifier"},{"text":"?<","kind":"text"},{"text":"Source","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"exactly"},{"text":": ","kind":"text"},{"text":"Source","kind":"typeIdentifier"},{"text":")","kind":"text"}],"kind":"symbol","required":true,"title":"init(exactly:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/ExpressibleByFloatLiteral":{"url":"\/documentation\/compute\/expressiblebyfloatliteral","title":"ExpressibleByFloatLiteral","navigatorTitle":[{"kind":"identifier","text":"ExpressibleByFloatLiteral"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ExpressibleByFloatLiteral","kind":"symbol","type":"topic","abstract":[{"text":"A type that can be initialized with a floating-point literal.","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ExpressibleByFloatLiteral"}],"role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/BinaryFloatingPoint/init(_:)-shau":{"url":"\/documentation\/compute\/binaryfloatingpoint\/init(_:)-shau","role":"symbol","type":"topic","defaultImplementations":2,"abstract":[{"type":"text","text":"Creates a new instance from the given value, rounded to the closest"},{"text":" ","type":"text"},{"type":"text","text":"possible representation."}],"fragments":[{"kind":"identifier","text":"init"},{"text":"<","kind":"text"},{"text":"Source","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"Source"},{"text":")","kind":"text"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryFloatingPoint\/init(_:)-shau","title":"init(_:)","required":true},"doc://com.swallow.documentation.Compute/documentation/Compute/BinaryFloatingPoint/exponentBitCount":{"role":"symbol","kind":"symbol","required":true,"title":"exponentBitCount","url":"\/documentation\/compute\/binaryfloatingpoint\/exponentbitcount","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"exponentBitCount","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"}],"abstract":[{"text":"The number of bits used to represent the type’s exponent.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryFloatingPoint\/exponentBitCount"},"http://ieeexplore.ieee.org/servlet/opac?punumber=4610933":{"identifier":"http:\/\/ieeexplore.ieee.org\/servlet\/opac?punumber=4610933","title":"IEEE 754 specification","titleInlineContent":[{"text":"IEEE 754 specification","type":"text"}],"url":"http:\/\/ieeexplore.ieee.org\/servlet\/opac?punumber=4610933","type":"link"},"doc://com.swallow.documentation.Compute/documentation/Compute/BinaryFloatingPoint/random(in:using:)-2awm8":{"role":"symbol","url":"\/documentation\/compute\/binaryfloatingpoint\/random(in:using:)-2awm8","title":"random(in:using:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"random","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"text":"in","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Range","kind":"typeIdentifier","preciseIdentifier":"s:Sn"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"using","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"abstract":[{"text":"Returns a random value within the specified range, using the given","type":"text"},{"type":"text","text":" "},{"text":"generator as a source for randomness.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryFloatingPoint\/random(in:using:)-2awm8","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"RawSignificand","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"FixedWidthInteger","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Float16":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float16","navigatorTitle":[{"kind":"identifier","text":"Float16"}],"role":"symbol","title":"Float16","url":"\/documentation\/compute\/float16","type":"topic","abstract":[{"type":"text","text":"A half-precision (16b), floating-point value type."}],"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Float16"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/AdditiveArithmetic":{"type":"topic","title":"AdditiveArithmetic","abstract":[{"text":"A type with values that support addition and subtraction.","type":"text"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AdditiveArithmetic"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AdditiveArithmetic","url":"\/documentation\/compute\/additivearithmetic","role":"symbol","navigatorTitle":[{"text":"AdditiveArithmetic","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/BinaryFloatingPoint/significandBitCount":{"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryFloatingPoint\/significandBitCount","kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"significandBitCount","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"required":true,"title":"significandBitCount","url":"\/documentation\/compute\/binaryfloatingpoint\/significandbitcount","abstract":[{"type":"text","text":"The available number of fractional significand bits."}],"role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/BinaryFloatingPoint/RawSignificand":{"role":"symbol","type":"topic","required":true,"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryFloatingPoint\/RawSignificand","kind":"symbol","abstract":[{"type":"text","text":"A type that represents the encoded significand of a value."}],"title":"RawSignificand","url":"\/documentation\/compute\/binaryfloatingpoint\/rawsignificand","fragments":[{"text":"associatedtype","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"RawSignificand"},{"kind":"text","text":" : "},{"text":"UnsignedInteger","kind":"typeIdentifier","preciseIdentifier":"s:SU"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/SignedNumeric":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SignedNumeric","url":"\/documentation\/compute\/signednumeric","title":"SignedNumeric","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"SignedNumeric"}],"navigatorTitle":[{"text":"SignedNumeric","kind":"identifier"}],"abstract":[{"type":"text","text":"A numeric type with a negation operation."}],"kind":"symbol","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Equatable":{"abstract":[{"text":"A type that can be compared for value equality.","type":"text"}],"type":"topic","title":"Equatable","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Equatable"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Equatable","role":"symbol","url":"\/documentation\/compute\/equatable","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Equatable","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/BinaryFloatingPoint/binade":{"required":true,"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"binade"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"}],"type":"topic","kind":"symbol","title":"binade","role":"symbol","url":"\/documentation\/compute\/binaryfloatingpoint\/binade","abstract":[{"text":"The floating-point value with the same sign and exponent as this value,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"but with a significand of 1.0."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryFloatingPoint\/binade"},"doc://com.swallow.documentation.Compute/documentation/Compute/BinaryFloatingPoint/random(in:using:)-6pf7f":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"random","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"in"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SN","text":"ClosedRange","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"using","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryFloatingPoint\/random(in:using:)-6pf7f","kind":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"RawSignificand","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"FixedWidthInteger","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"type":"topic","title":"random(in:using:)","role":"symbol","url":"\/documentation\/compute\/binaryfloatingpoint\/random(in:using:)-6pf7f","abstract":[{"type":"text","text":"Returns a random value within the specified range, using the given"},{"type":"text","text":" "},{"text":"generator as a source for randomness.","type":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/BinaryFloatingPoint/init(_:)-57jx7":{"title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"text":"Float","kind":"typeIdentifier","preciseIdentifier":"s:Sf"},{"kind":"text","text":")"}],"url":"\/documentation\/compute\/binaryfloatingpoint\/init(_:)-57jx7","abstract":[{"text":"Creates a new instance from the given value, rounded to the closest","type":"text"},{"type":"text","text":" "},{"type":"text","text":"possible representation."}],"kind":"symbol","required":true,"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryFloatingPoint\/init(_:)-57jx7","type":"topic","defaultImplementations":2},"doc://com.swallow.documentation.Compute/documentation/Compute/BinaryFloatingPoint/RawExponent":{"role":"symbol","type":"topic","required":true,"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryFloatingPoint\/RawExponent","kind":"symbol","abstract":[{"type":"text","text":"A type that represents the encoded exponent of a value."}],"title":"RawExponent","url":"\/documentation\/compute\/binaryfloatingpoint\/rawexponent","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RawExponent"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:SU","text":"UnsignedInteger","kind":"typeIdentifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/BinaryFloatingPoint/significandWidth":{"abstract":[{"type":"text","text":"The number of bits required to represent the value’s significand."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryFloatingPoint\/significandWidth","url":"\/documentation\/compute\/binaryfloatingpoint\/significandwidth","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"significandWidth","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"}],"kind":"symbol","type":"topic","required":true,"title":"significandWidth","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/BinaryFloatingPoint/random(in:)-8jkjb":{"abstract":[{"text":"Returns a random value within the specified range.","type":"text"}],"conformance":{"constraints":[{"code":"RawSignificand","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"FixedWidthInteger"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryFloatingPoint\/random(in:)-8jkjb","role":"symbol","title":"random(in:)","type":"topic","url":"\/documentation\/compute\/binaryfloatingpoint\/random(in:)-8jkjb","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"random","kind":"identifier"},{"text":"(","kind":"text"},{"text":"in","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Range","preciseIdentifier":"s:Sn"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Comparable":{"url":"\/documentation\/compute\/comparable","type":"topic","kind":"symbol","role":"symbol","abstract":[{"text":"A type that can be compared using the relational operators ","type":"text"},{"code":"<","type":"codeVoice"},{"text":", ","type":"text"},{"code":"<=","type":"codeVoice"},{"text":", ","type":"text"},{"type":"codeVoice","code":">="},{"text":",","type":"text"},{"type":"text","text":" "},{"type":"text","text":"and "},{"type":"codeVoice","code":">"},{"text":".","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Comparable"}],"title":"Comparable","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Comparable","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"Comparable","kind":"identifier"}]}}}