{"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt128","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt128\/BinaryInteger-Implementations"]]},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":">>","kind":"identifier"},{"text":" ","kind":"text"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"RHS"},{"kind":"text","text":">("},{"text":"lhs","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"internalParam","text":"rhs"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"RHS"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":" ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RHS","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"text":"BinaryInteger","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryInteger","preciseIdentifier":"s:Sz"}],"languages":["swift"],"platforms":["macOS"]}]},{"parameters":[{"name":"lhs","content":[{"inlineContent":[{"text":"The value to shift.","type":"text"}],"type":"paragraph"}]},{"name":"rhs","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The number of bits to shift "},{"code":"lhs","type":"codeVoice"},{"type":"text","text":" to the right."}]}]}],"kind":"parameters"},{"content":[{"text":"Discussion","anchor":"discussion","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"code":">>","type":"codeVoice"},{"type":"text","text":" operator performs a "},{"inlineContent":[{"type":"text","text":"smart shift"}],"type":"emphasis"},{"type":"text","text":", which defines a result for a"},{"type":"text","text":" "},{"text":"shift of any value.","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Using a negative value for "},{"code":"rhs","type":"codeVoice"},{"type":"text","text":" performs a left shift using"},{"text":" ","type":"text"},{"type":"codeVoice","code":"abs(rhs)"},{"type":"text","text":"."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Using a value for ","type":"text"},{"code":"rhs","type":"codeVoice"},{"type":"text","text":" that is greater than or equal to the bit width"},{"text":" ","type":"text"},{"type":"text","text":"of "},{"code":"lhs","type":"codeVoice"},{"type":"text","text":" is an "},{"type":"emphasis","inlineContent":[{"text":"overshift","type":"text"}]},{"type":"text","text":". An overshift results in "},{"code":"-1","type":"codeVoice"},{"text":" for a","type":"text"},{"type":"text","text":" "},{"type":"text","text":"negative value of "},{"type":"codeVoice","code":"lhs"},{"type":"text","text":" or "},{"type":"codeVoice","code":"0"},{"text":" for a nonnegative value.","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Using any other value for ","type":"text"},{"code":"rhs","type":"codeVoice"},{"type":"text","text":" performs a right shift on "},{"type":"codeVoice","code":"lhs"},{"type":"text","text":" by that"},{"type":"text","text":" "},{"type":"text","text":"amount."}],"type":"paragraph"}]}]},{"type":"paragraph","inlineContent":[{"text":"The following example defines ","type":"text"},{"code":"x","type":"codeVoice"},{"text":" as an instance of ","type":"text"},{"code":"UInt8","type":"codeVoice"},{"text":", an 8-bit,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"unsigned integer type. If you use "},{"type":"codeVoice","code":"2"},{"type":"text","text":" as the right-hand-side value in an"},{"type":"text","text":" "},{"text":"operation on ","type":"text"},{"code":"x","type":"codeVoice"},{"type":"text","text":", the value is shifted right by two bits."}]},{"syntax":null,"code":["let x: UInt8 = 30                 \/\/ 0b00011110","let y = x >> 2","\/\/ y == 7                         \/\/ 0b00000111"],"type":"codeListing"},{"inlineContent":[{"text":"If you use ","type":"text"},{"type":"codeVoice","code":"11"},{"type":"text","text":" as "},{"code":"rhs","type":"codeVoice"},{"text":", ","type":"text"},{"code":"x","type":"codeVoice"},{"type":"text","text":" is overshifted such that all of its bits"},{"text":" ","type":"text"},{"text":"are set to zero.","type":"text"}],"type":"paragraph"},{"code":["let z = x >> 11","\/\/ z == 0                         \/\/ 0b00000000"],"type":"codeListing","syntax":null},{"inlineContent":[{"type":"text","text":"Using a negative value as "},{"code":"rhs","type":"codeVoice"},{"text":" is the same as performing a left shift","type":"text"},{"text":" ","type":"text"},{"text":"using ","type":"text"},{"code":"abs(rhs)","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":["let a = x >> -3","\/\/ a == 240                       \/\/ 0b11110000","let b = x << 3","\/\/ b == 240                       \/\/ 0b11110000"]},{"inlineContent":[{"text":"Right shift operations on negative values “fill in” the high bits with","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"ones instead of zeros."}],"type":"paragraph"},{"syntax":null,"code":["let q: Int8 = -30                 \/\/ 0b11100010","let r = q >> 2","\/\/ r == -8                        \/\/ 0b11111000","","let s = q >> 11","\/\/ s == -1                        \/\/ 0b11111111"],"type":"codeListing"}],"kind":"content"}],"kind":"symbol","metadata":{"role":"symbol","symbolKind":"op","extendedModule":"Swift","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":">>","kind":"identifier"},{"kind":"text","text":" "},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"RHS"},{"kind":"text","text":">("},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"RHS","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"modules":[{"name":"Compute","relatedModules":["Swift"]}],"roleHeading":"Operator","externalID":"s:SzsE2ggoiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:s7UInt128V","title":">>(_:_:)"},"schemaVersion":{"patch":0,"major":0,"minor":3},"abstract":[{"text":"Returns the result of shifting a value’s binary representation the","type":"text"},{"text":" ","type":"text"},{"text":"specified number of digits to the right.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/uint128\/__(_:_:)-9tjzy"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt128\/__(_:_:)-9tjzy"},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/BinaryInteger":{"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"BinaryInteger"}],"navigatorTitle":[{"kind":"identifier","text":"BinaryInteger"}],"url":"\/documentation\/compute\/binaryinteger","type":"topic","abstract":[{"type":"text","text":"An integer type with a binary representation."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryInteger","title":"BinaryInteger","kind":"symbol","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt128":{"url":"\/documentation\/compute\/uint128","type":"topic","kind":"symbol","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt128","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"UInt128"}],"title":"UInt128","abstract":[{"text":"A 128-bit unsigned integer type.","type":"text"}],"navigatorTitle":[{"text":"UInt128","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt128/BinaryInteger-Implementations":{"kind":"article","role":"collectionGroup","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt128\/BinaryInteger-Implementations","title":"BinaryInteger Implementations","abstract":[],"url":"\/documentation\/compute\/uint128\/binaryinteger-implementations","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt128/__(_:_:)-9tjzy":{"kind":"symbol","title":">>(_:_:)","url":"\/documentation\/compute\/uint128\/__(_:_:)-9tjzy","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":">>"},{"text":" ","kind":"text"},{"kind":"text","text":"<"},{"text":"RHS","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"RHS","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt128\/__(_:_:)-9tjzy","abstract":[{"text":"Returns the result of shifting a value’s binary representation the","type":"text"},{"text":" ","type":"text"},{"text":"specified number of digits to the right.","type":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"}}}