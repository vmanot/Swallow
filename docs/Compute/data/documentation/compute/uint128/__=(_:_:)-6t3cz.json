{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt128\/__=(_:_:)-6t3cz"},"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt128","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt128\/BinaryInteger-Implementations"]]},"sections":[],"kind":"symbol","primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":">>="},{"text":" ","kind":"text"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Other"},{"text":">(","kind":"text"},{"text":"lhs","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"text":"rhs","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Other"},{"kind":"text","text":") "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Other"},{"kind":"text","text":" : "},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryInteger","kind":"typeIdentifier","text":"BinaryInteger","preciseIdentifier":"s:Sz"}]}],"kind":"declarations"},{"parameters":[{"name":"lhs","content":[{"inlineContent":[{"text":"The value to shift.","type":"text"}],"type":"paragraph"}]},{"name":"rhs","content":[{"inlineContent":[{"text":"The number of bits to shift ","type":"text"},{"code":"lhs","type":"codeVoice"},{"text":" to the right.","type":"text"}],"type":"paragraph"}]}],"kind":"parameters"},{"kind":"content","content":[{"level":2,"anchor":"discussion","type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":">>="},{"text":" operator performs a ","type":"text"},{"inlineContent":[{"type":"text","text":"smart shift"}],"type":"emphasis"},{"type":"text","text":", which defines a result for a"},{"type":"text","text":" "},{"type":"text","text":"shift of any value."}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Using a negative value for "},{"code":"rhs","type":"codeVoice"},{"type":"text","text":" performs a left shift using"},{"type":"text","text":" "},{"type":"codeVoice","code":"abs(rhs)"},{"text":".","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Using a value for "},{"type":"codeVoice","code":"rhs"},{"type":"text","text":" that is greater than or equal to the bit width"},{"type":"text","text":" "},{"text":"of ","type":"text"},{"type":"codeVoice","code":"lhs"},{"type":"text","text":" is an "},{"type":"emphasis","inlineContent":[{"type":"text","text":"overshift"}]},{"type":"text","text":". An overshift results in "},{"code":"-1","type":"codeVoice"},{"text":" for a","type":"text"},{"type":"text","text":" "},{"text":"negative value of ","type":"text"},{"code":"lhs","type":"codeVoice"},{"type":"text","text":" or "},{"type":"codeVoice","code":"0"},{"type":"text","text":" for a nonnegative value."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Using any other value for "},{"type":"codeVoice","code":"rhs"},{"type":"text","text":" performs a right shift on "},{"code":"lhs","type":"codeVoice"},{"text":" by that","type":"text"},{"text":" ","type":"text"},{"text":"amount.","type":"text"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The following example defines "},{"type":"codeVoice","code":"x"},{"text":" as an instance of ","type":"text"},{"code":"UInt8","type":"codeVoice"},{"type":"text","text":", an 8-bit,"},{"type":"text","text":" "},{"type":"text","text":"unsigned integer type. If you use "},{"type":"codeVoice","code":"2"},{"type":"text","text":" as the right-hand-side value in an"},{"text":" ","type":"text"},{"type":"text","text":"operation on "},{"type":"codeVoice","code":"x"},{"type":"text","text":", the value is shifted right by two bits."}]},{"type":"codeListing","syntax":null,"code":["var x: UInt8 = 30                 \/\/ 0b00011110","x >>= 2","\/\/ x == 7                         \/\/ 0b00000111"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you use "},{"type":"codeVoice","code":"11"},{"text":" as ","type":"text"},{"type":"codeVoice","code":"rhs"},{"type":"text","text":", "},{"type":"codeVoice","code":"x"},{"text":" is overshifted such that all of its bits","type":"text"},{"type":"text","text":" "},{"type":"text","text":"are set to zero."}]},{"syntax":null,"code":["var y: UInt8 = 30                 \/\/ 0b00011110","y >>= 11","\/\/ y == 0                         \/\/ 0b00000000"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"Using a negative value as "},{"code":"rhs","type":"codeVoice"},{"type":"text","text":" is the same as performing a left shift"},{"type":"text","text":" "},{"type":"text","text":"using "},{"type":"codeVoice","code":"abs(rhs)"},{"text":".","type":"text"}],"type":"paragraph"},{"code":["var a: UInt8 = 30                 \/\/ 0b00011110","a >>= -3","\/\/ a == 240                       \/\/ 0b11110000","","var b: UInt8 = 30                 \/\/ 0b00011110","b <<= 3","\/\/ b == 240                       \/\/ 0b11110000"],"syntax":null,"type":"codeListing"},{"inlineContent":[{"text":"Right shift operations on negative values “fill in” the high bits with","type":"text"},{"type":"text","text":" "},{"text":"ones instead of zeros.","type":"text"}],"type":"paragraph"},{"syntax":null,"type":"codeListing","code":["var q: Int8 = -30                 \/\/ 0b11100010","q >>= 2","\/\/ q == -8                        \/\/ 0b11111000","","var r: Int8 = -30                 \/\/ 0b11100010","r >>= 11","\/\/ r == -1                        \/\/ 0b11111111"]}]}],"abstract":[{"text":"Stores the result of shifting a value’s binary representation the","type":"text"},{"text":" ","type":"text"},{"text":"specified number of digits to the right in the left-hand-side variable.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/uint128\/__=(_:_:)-6t3cz"]}],"metadata":{"roleHeading":"Operator","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":">>=","kind":"identifier"},{"text":" ","kind":"text"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Other"},{"text":">(","kind":"text"},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Other"},{"kind":"text","text":")"}],"modules":[{"relatedModules":["Swift"],"name":"Compute"}],"symbolKind":"op","title":">>=(_:_:)","externalID":"s:s17FixedWidthIntegerPsE3ggeoiyyxz_qd__tSzRd__lFZ::SYNTHESIZED::s:s7UInt128V","extendedModule":"Swift"},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt128/__=(_:_:)-6t3cz":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt128\/__=(_:_:)-6t3cz","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":">>=","kind":"identifier"},{"text":" ","kind":"text"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Other"},{"text":">(","kind":"text"},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"text":"Other","kind":"typeIdentifier"},{"text":")","kind":"text"}],"kind":"symbol","type":"topic","title":">>=(_:_:)","url":"\/documentation\/compute\/uint128\/__=(_:_:)-6t3cz","abstract":[{"text":"Stores the result of shifting a value’s binary representation the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"specified number of digits to the right in the left-hand-side variable."}]},"doc://com.swallow.documentation.Compute/documentation/Compute/BinaryInteger":{"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"BinaryInteger"}],"navigatorTitle":[{"kind":"identifier","text":"BinaryInteger"}],"url":"\/documentation\/compute\/binaryinteger","type":"topic","abstract":[{"type":"text","text":"An integer type with a binary representation."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryInteger","title":"BinaryInteger","kind":"symbol","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt128/BinaryInteger-Implementations":{"kind":"article","role":"collectionGroup","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt128\/BinaryInteger-Implementations","title":"BinaryInteger Implementations","abstract":[],"url":"\/documentation\/compute\/uint128\/binaryinteger-implementations","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt128":{"url":"\/documentation\/compute\/uint128","type":"topic","kind":"symbol","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt128","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"UInt128"}],"title":"UInt128","abstract":[{"text":"A 128-bit unsigned integer type.","type":"text"}],"navigatorTitle":[{"text":"UInt128","kind":"identifier"}]}}}