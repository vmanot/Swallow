{"metadata":{"title":"&>>=(_:_:)","platforms":[{"beta":false,"name":"iOS","unavailable":false,"introducedAt":"18.0","deprecated":false},{"introducedAt":"15.0","unavailable":false,"deprecated":false,"beta":false,"name":"macOS"},{"deprecated":false,"beta":false,"name":"tvOS","unavailable":false,"introducedAt":"18.0"},{"deprecated":false,"introducedAt":"2.0","beta":false,"name":"visionOS","unavailable":false},{"beta":false,"deprecated":false,"name":"watchOS","introducedAt":"11.0","unavailable":false}],"modules":[{"relatedModules":["Swift"],"name":"Compute"}],"extendedModule":"Swift","role":"symbol","roleHeading":"Operator","externalID":"s:s7UInt128V4aggeoiyyABz_ABtFZ","symbolKind":"op","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"&>>=","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"UInt128","preciseIdentifier":"s:s7UInt128V"},{"text":", ","kind":"text"},{"text":"UInt128","preciseIdentifier":"s:s7UInt128V","kind":"typeIdentifier"},{"kind":"text","text":")"}]},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"&>>=","kind":"identifier"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"internalParam","text":"a"},{"kind":"text","text":": "},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:s7UInt128V","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt128","text":"UInt128"},{"kind":"text","text":", "},{"text":"b","kind":"internalParam"},{"kind":"text","text":": "},{"text":"UInt128","preciseIdentifier":"s:s7UInt128V","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt128","kind":"typeIdentifier"},{"text":")","kind":"text"}]}],"kind":"declarations"},{"kind":"content","content":[{"anchor":"discussion","level":2,"text":"Discussion","type":"heading"},{"inlineContent":[{"text":"The ","type":"text"},{"type":"codeVoice","code":"&>>="},{"text":" operator performs a ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"masking shift","type":"text"}]},{"text":", where the value passed as","type":"text"},{"text":" ","type":"text"},{"code":"rhs","type":"codeVoice"},{"text":" is masked to produce a value in the range ","type":"text"},{"code":"0..<lhs.bitWidth","type":"codeVoice"},{"text":". The","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"shift is performed using this masked value."}],"type":"paragraph"},{"inlineContent":[{"text":"The following example defines ","type":"text"},{"code":"x","type":"codeVoice"},{"type":"text","text":" as an instance of "},{"code":"UInt8","type":"codeVoice"},{"text":", an 8-bit,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"unsigned integer type. If you use "},{"type":"codeVoice","code":"2"},{"type":"text","text":" as the right-hand-side value in an"},{"type":"text","text":" "},{"type":"text","text":"operation on "},{"code":"x","type":"codeVoice"},{"text":", the shift amount requires no masking.","type":"text"}],"type":"paragraph"},{"syntax":null,"code":["var x: UInt8 = 30                 \/\/ 0b00011110","x &>>= 2","\/\/ x == 7                         \/\/ 0b00000111"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"However, if you use "},{"code":"19","type":"codeVoice"},{"type":"text","text":" as "},{"type":"codeVoice","code":"rhs"},{"text":", the operation first bitmasks ","type":"text"},{"type":"codeVoice","code":"rhs"},{"text":" to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"3"},{"text":", and then uses that masked value as the number of bits to shift ","type":"text"},{"type":"codeVoice","code":"lhs"},{"text":".","type":"text"}]},{"syntax":null,"code":["var y: UInt8 = 30                 \/\/ 0b00011110","y &>>= 19","\/\/ y == 3                         \/\/ 0b00000011"],"type":"codeListing"}]}],"variants":[{"paths":["\/documentation\/compute\/uint128\/&__=(_:_:)-2trlh"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt128\/&__=(_:_:)-2trlh"},"abstract":[{"text":"Calculates the result of shifting a value’s binary representation the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"specified number of digits to the right, masking the shift amount to the"},{"text":" ","type":"text"},{"text":"type’s bit width, and stores the result in the left-hand-side variable.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt128","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt128\/FixedWidthInteger-Implementations"]]},"sections":[],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt128":{"url":"\/documentation\/compute\/uint128","type":"topic","kind":"symbol","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt128","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"UInt128"}],"title":"UInt128","abstract":[{"text":"A 128-bit unsigned integer type.","type":"text"}],"navigatorTitle":[{"text":"UInt128","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt128/&__=(_:_:)-2trlh":{"title":"&>>=(_:_:)","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"&>>=","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"preciseIdentifier":"s:s7UInt128V","kind":"typeIdentifier","text":"UInt128"},{"text":", ","kind":"text"},{"text":"UInt128","preciseIdentifier":"s:s7UInt128V","kind":"typeIdentifier"},{"text":")","kind":"text"}],"abstract":[{"text":"Calculates the result of shifting a value’s binary representation the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"specified number of digits to the right, masking the shift amount to the"},{"text":" ","type":"text"},{"type":"text","text":"type’s bit width, and stores the result in the left-hand-side variable."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt128\/&__=(_:_:)-2trlh","url":"\/documentation\/compute\/uint128\/&__=(_:_:)-2trlh","type":"topic","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt128/FixedWidthInteger-Implementations":{"title":"FixedWidthInteger Implementations","url":"\/documentation\/compute\/uint128\/fixedwidthinteger-implementations","abstract":[],"type":"topic","role":"collectionGroup","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt128\/FixedWidthInteger-Implementations","kind":"article"}}}