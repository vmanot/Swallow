{"sections":[],"abstract":[{"type":"text","text":"Returns a Boolean value indicating whether the two given values are not"},{"text":" ","type":"text"},{"type":"text","text":"equal."}],"kind":"symbol","identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt128\/!=(_:_:)-9eyev","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt128","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt128\/BinaryInteger-Implementations"]]},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"!="},{"text":" ","kind":"text"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Other"},{"kind":"text","text":">("},{"text":"lhs","kind":"internalParam"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"rhs","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Other","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bool","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":" "},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Other","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"BinaryInteger","preciseIdentifier":"s:Sz","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryInteger"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"An integer to compare."}]}],"name":"lhs"},{"content":[{"type":"paragraph","inlineContent":[{"text":"Another integer to compare.","type":"text"}]}],"name":"rhs"}]},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"You can check the inequality of instances of any "},{"code":"BinaryInteger","type":"codeVoice"},{"text":" types","type":"text"},{"type":"text","text":" "},{"text":"using the not-equal-to operator (","type":"text"},{"type":"codeVoice","code":"!="},{"text":"). For example, you can test","type":"text"},{"type":"text","text":" "},{"type":"text","text":"whether the first "},{"type":"codeVoice","code":"UInt8"},{"type":"text","text":" value in a stringâ€™s UTF-8 encoding is not"},{"text":" ","type":"text"},{"type":"text","text":"equal to the first "},{"code":"UInt32","type":"codeVoice"},{"type":"text","text":" value in its Unicode scalar view:"}],"type":"paragraph"},{"type":"codeListing","code":["let gameName = \"Red Light, Green Light\"","if let firstUTF8 = gameName.utf8.first,","    let firstScalar = gameName.unicodeScalars.first?.value {","    print(\"First code values are different: \\(firstUTF8 != firstScalar)\")","}","\/\/ Prints \"First code values are different: false\""],"syntax":null}]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"metadata":{"role":"symbol","roleHeading":"Operator","symbolKind":"op","modules":[{"name":"Compute","relatedModules":["Swift"]}],"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"!=","kind":"identifier"},{"text":" ","kind":"text"},{"text":"<","kind":"text"},{"text":"Other","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"text":"Other","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"externalID":"s:SzsE2neoiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:s7UInt128V","extendedModule":"Swift","title":"!=(_:_:)"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/uint128\/!=(_:_:)-9eyev"]}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/UInt128":{"url":"\/documentation\/compute\/uint128","type":"topic","kind":"symbol","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt128","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"UInt128"}],"title":"UInt128","abstract":[{"text":"A 128-bit unsigned integer type.","type":"text"}],"navigatorTitle":[{"text":"UInt128","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt128/!=(_:_:)-9eyev":{"type":"topic","url":"\/documentation\/compute\/uint128\/!=(_:_:)-9eyev","role":"symbol","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"!=","kind":"identifier"},{"text":" ","kind":"text"},{"text":"<","kind":"text"},{"text":"Other","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Other"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Returns a Boolean value indicating whether the two given values are not"},{"text":" ","type":"text"},{"text":"equal.","type":"text"}],"title":"!=(_:_:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt128\/!=(_:_:)-9eyev"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt128/BinaryInteger-Implementations":{"kind":"article","role":"collectionGroup","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt128\/BinaryInteger-Implementations","title":"BinaryInteger Implementations","abstract":[],"url":"\/documentation\/compute\/uint128\/binaryinteger-implementations","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/Bool":{"url":"\/documentation\/compute\/bool","role":"symbol","title":"Bool","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Bool","kind":"identifier"}],"abstract":[{"type":"text","text":"A value type whose instances are either "},{"type":"codeVoice","code":"true"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"false"},{"text":".","type":"text"}],"navigatorTitle":[{"text":"Bool","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bool","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/BinaryInteger":{"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"BinaryInteger"}],"navigatorTitle":[{"kind":"identifier","text":"BinaryInteger"}],"url":"\/documentation\/compute\/binaryinteger","type":"topic","abstract":[{"type":"text","text":"An integer type with a binary representation."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryInteger","title":"BinaryInteger","kind":"symbol","role":"symbol"}}}