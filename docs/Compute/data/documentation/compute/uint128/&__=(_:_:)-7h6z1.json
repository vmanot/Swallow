{"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt128\/&__=(_:_:)-7h6z1","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt128","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt128\/FixedWidthInteger-Implementations"]]},"sections":[],"kind":"symbol","variants":[{"paths":["\/documentation\/compute\/uint128\/&__=(_:_:)-7h6z1"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"externalID":"s:s17FixedWidthIntegerPsE4aggeoiyyxz_qd__tSzRd__lFZ::SYNTHESIZED::s:s7UInt128V","extendedModule":"Swift","symbolKind":"op","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"&>>=","kind":"identifier"},{"text":" ","kind":"text"},{"kind":"text","text":"<"},{"text":"Other","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Other","kind":"typeIdentifier"},{"text":")","kind":"text"}],"roleHeading":"Operator","role":"symbol","title":"&>>=(_:_:)","modules":[{"name":"Compute","relatedModules":["Swift"]}]},"schemaVersion":{"minor":3,"patch":0,"major":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"&>>=","kind":"identifier"},{"kind":"text","text":" "},{"text":"<","kind":"text"},{"text":"Other","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"lhs","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"text":"rhs","kind":"internalParam"},{"kind":"text","text":": "},{"text":"Other","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Other"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryInteger","kind":"typeIdentifier","preciseIdentifier":"s:Sz","text":"BinaryInteger"}],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"text":"The value to shift.","type":"text"}],"type":"paragraph"}],"name":"lhs"},{"name":"rhs","content":[{"type":"paragraph","inlineContent":[{"text":"The number of bits to shift ","type":"text"},{"type":"codeVoice","code":"lhs"},{"text":" to the right. If ","type":"text"},{"code":"rhs","type":"codeVoice"},{"type":"text","text":" is"},{"text":" ","type":"text"},{"type":"text","text":"outside the range "},{"type":"codeVoice","code":"0..<lhs.bitWidth"},{"text":", it is masked to produce a","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"value within that range."}]}]}]},{"kind":"content","content":[{"anchor":"discussion","type":"heading","text":"Discussion","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"code":"&>>=","type":"codeVoice"},{"type":"text","text":" operator performs a "},{"type":"emphasis","inlineContent":[{"text":"masking shift","type":"text"}]},{"type":"text","text":", where the value passed as"},{"type":"text","text":" "},{"type":"codeVoice","code":"rhs"},{"text":" is masked to produce a value in the range ","type":"text"},{"code":"0..<lhs.bitWidth","type":"codeVoice"},{"type":"text","text":". The"},{"type":"text","text":" "},{"text":"shift is performed using this masked value.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"The following example defines ","type":"text"},{"type":"codeVoice","code":"x"},{"text":" as an instance of ","type":"text"},{"code":"UInt8","type":"codeVoice"},{"text":", an 8-bit,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"unsigned integer type. If you use "},{"type":"codeVoice","code":"2"},{"type":"text","text":" as the right-hand-side value in an"},{"type":"text","text":" "},{"type":"text","text":"operation on "},{"type":"codeVoice","code":"x"},{"text":", the shift amount requires no masking.","type":"text"}]},{"code":["var x: UInt8 = 30                 \/\/ 0b00011110","x &>>= 2","\/\/ x == 7                         \/\/ 0b00000111"],"type":"codeListing","syntax":null},{"type":"paragraph","inlineContent":[{"text":"However, if you use ","type":"text"},{"code":"19","type":"codeVoice"},{"type":"text","text":" as "},{"type":"codeVoice","code":"rhs"},{"type":"text","text":", the operation first bitmasks "},{"code":"rhs","type":"codeVoice"},{"type":"text","text":" to"},{"text":" ","type":"text"},{"code":"3","type":"codeVoice"},{"text":", and then uses that masked value as the number of bits to shift ","type":"text"},{"code":"lhs","type":"codeVoice"},{"type":"text","text":"."}]},{"code":["var y: UInt8 = 30                 \/\/ 0b00011110","y &>>= 19","\/\/ y == 3                         \/\/ 0b00000011"],"type":"codeListing","syntax":null}]}],"abstract":[{"type":"text","text":"Calculates the result of shifting a value’s binary representation the"},{"type":"text","text":" "},{"type":"text","text":"specified number of digits to the right, masking the shift amount to the"},{"type":"text","text":" "},{"type":"text","text":"type’s bit width, and stores the result in the left-hand-side variable."}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/UInt128/&__=(_:_:)-7h6z1":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt128\/&__=(_:_:)-7h6z1","title":"&>>=(_:_:)","role":"symbol","type":"topic","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"&>>=","kind":"identifier"},{"text":" ","kind":"text"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Other"},{"text":">(","kind":"text"},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Other"},{"text":")","kind":"text"}],"url":"\/documentation\/compute\/uint128\/&__=(_:_:)-7h6z1","kind":"symbol","abstract":[{"text":"Calculates the result of shifting a value’s binary representation the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"specified number of digits to the right, masking the shift amount to the"},{"type":"text","text":" "},{"type":"text","text":"type’s bit width, and stores the result in the left-hand-side variable."}]},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt128":{"url":"\/documentation\/compute\/uint128","type":"topic","kind":"symbol","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt128","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"UInt128"}],"title":"UInt128","abstract":[{"text":"A 128-bit unsigned integer type.","type":"text"}],"navigatorTitle":[{"text":"UInt128","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt128/FixedWidthInteger-Implementations":{"title":"FixedWidthInteger Implementations","url":"\/documentation\/compute\/uint128\/fixedwidthinteger-implementations","abstract":[],"type":"topic","role":"collectionGroup","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt128\/FixedWidthInteger-Implementations","kind":"article"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/BinaryInteger":{"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"BinaryInteger"}],"navigatorTitle":[{"kind":"identifier","text":"BinaryInteger"}],"url":"\/documentation\/compute\/binaryinteger","type":"topic","abstract":[{"type":"text","text":"An integer type with a binary representation."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryInteger","title":"BinaryInteger","kind":"symbol","role":"symbol"}}}