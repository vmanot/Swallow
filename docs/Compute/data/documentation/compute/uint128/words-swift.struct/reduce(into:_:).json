{"sections":[],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"reduce"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Result"},{"kind":"text","text":">("},{"text":"into","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"initialResult","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"updateAccumulatingResult","kind":"internalParam"},{"text":": (","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","text":"Element","preciseIdentifier":"s:ST7ElementQa"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> ()) "},{"text":"rethrows","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Result","kind":"typeIdentifier"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"text":"The value to use as the initial accumulating value.","type":"text"}],"type":"paragraph"}],"name":"initialResult"},{"content":[{"inlineContent":[{"text":"A closure that updates the accumulating","type":"text"},{"type":"text","text":" "},{"text":"value with an element of the sequence.","type":"text"}],"type":"paragraph"}],"name":"updateAccumulatingResult"}]},{"content":[{"level":2,"type":"heading","text":"Return Value","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"text":"The final accumulated value. If the sequence has no elements,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the result is "},{"type":"codeVoice","code":"initialResult"},{"type":"text","text":"."}]}],"kind":"content"},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Use the "},{"type":"codeVoice","code":"reduce(into:_:)"},{"type":"text","text":" method to produce a single value from the"},{"type":"text","text":" "},{"text":"elements of an entire sequence. For example, you can use this method on an","type":"text"},{"type":"text","text":" "},{"type":"text","text":"array of integers to filter adjacent equal entries or count frequencies."}]},{"type":"paragraph","inlineContent":[{"text":"This method is preferred over ","type":"text"},{"type":"codeVoice","code":"reduce(_:_:)"},{"type":"text","text":" for efficiency when the"},{"type":"text","text":" "},{"type":"text","text":"result is a copy-on-write type, for example an Array or a Dictionary."}]},{"inlineContent":[{"type":"text","text":"The "},{"code":"updateAccumulatingResult","type":"codeVoice"},{"text":" closure is called sequentially with a","type":"text"},{"type":"text","text":" "},{"text":"mutable accumulating value initialized to ","type":"text"},{"code":"initialResult","type":"codeVoice"},{"type":"text","text":" and each element"},{"type":"text","text":" "},{"type":"text","text":"of the sequence. This example shows how to build a dictionary of letter"},{"text":" ","type":"text"},{"text":"frequencies of a string.","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":["let letters = \"abracadabra\"","let letterCount = letters.reduce(into: [:]) { counts, letter in","    counts[letter, default: 0] += 1","}","\/\/ letterCount == [\"a\": 5, \"b\": 2, \"r\": 2, \"c\": 1, \"d\": 1]"]},{"type":"paragraph","inlineContent":[{"text":"When ","type":"text"},{"type":"codeVoice","code":"letters.reduce(into:_:)"},{"type":"text","text":" is called, the following steps occur:"}]},{"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"code":"updateAccumulatingResult","type":"codeVoice"},{"text":" closure is called with the initial","type":"text"},{"type":"text","text":" "},{"type":"text","text":"accumulating value—"},{"type":"codeVoice","code":"[:]"},{"text":" in this case—and the first character of","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"letters"},{"type":"text","text":", modifying the accumulating value by setting "},{"code":"1","type":"codeVoice"},{"type":"text","text":" for the key"},{"type":"text","text":" "},{"code":"\"a\"","type":"codeVoice"},{"text":".","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"The closure is called again repeatedly with the updated accumulating"},{"type":"text","text":" "},{"type":"text","text":"value and each element of the sequence."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"When the sequence is exhausted, the accumulating value is returned to"},{"text":" ","type":"text"},{"text":"the caller.","type":"text"}],"type":"paragraph"}]}]},{"inlineContent":[{"text":"If the sequence has no elements, ","type":"text"},{"code":"updateAccumulatingResult","type":"codeVoice"},{"type":"text","text":" is never"},{"text":" ","type":"text"},{"text":"executed and ","type":"text"},{"type":"codeVoice","code":"initialResult"},{"type":"text","text":" is the result of the call to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"reduce(into:_:)"},{"text":".","type":"text"}],"type":"paragraph"},{"type":"aside","style":"note","name":"Complexity","content":[{"inlineContent":[{"text":"O(","type":"text"},{"inlineContent":[{"type":"text","text":"n"}],"type":"emphasis"},{"text":"), where ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"n"}]},{"text":" is the length of the sequence.","type":"text"}],"type":"paragraph"}]}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt128\/Words-swift.struct\/reduce(into:_:)"},"kind":"symbol","abstract":[{"text":"Returns the result of combining the elements of the sequence using the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"given closure."}],"variants":[{"paths":["\/documentation\/compute\/uint128\/words-swift.struct\/reduce(into:_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt128","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt128\/BinaryInteger-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt128\/Words-swift.struct","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt128\/Words-swift.struct\/Sequence-Implementations"]]},"metadata":{"title":"reduce(into:_:)","externalID":"s:STsE6reduce4into_qd__qd__n_yqd__z_7ElementQztKXEtKlF::SYNTHESIZED::s:s7UInt128V5WordsV","role":"symbol","roleHeading":"Instance Method","modules":[{"name":"Compute","relatedModules":["Swift"]}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"reduce"},{"text":"<","kind":"text"},{"text":"Result","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"into"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Result"},{"text":", (","kind":"text"},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"text":"Result","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ()) ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Result","kind":"typeIdentifier"}],"symbolKind":"method","extendedModule":"Swift"},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/UInt128/Words-swift.struct/Sequence-Implementations":{"kind":"article","title":"Sequence Implementations","abstract":[],"role":"collectionGroup","type":"topic","url":"\/documentation\/compute\/uint128\/words-swift.struct\/sequence-implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt128\/Words-swift.struct\/Sequence-Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence/Element":{"type":"topic","required":true,"abstract":[{"type":"text","text":"A type representing the sequence’s elements."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"symbol","url":"\/documentation\/compute\/sequence\/element","role":"symbol","title":"Element","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt128/BinaryInteger-Implementations":{"kind":"article","role":"collectionGroup","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt128\/BinaryInteger-Implementations","title":"BinaryInteger Implementations","abstract":[],"url":"\/documentation\/compute\/uint128\/binaryinteger-implementations","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt128/Words-swift.struct/reduce(into:_:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"reduce","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Result","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"into","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":", (","kind":"text"},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ()) ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Result","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Returns the result of combining the elements of the sequence using the"},{"text":" ","type":"text"},{"type":"text","text":"given closure."}],"title":"reduce(into:_:)","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt128\/Words-swift.struct\/reduce(into:_:)","type":"topic","url":"\/documentation\/compute\/uint128\/words-swift.struct\/reduce(into:_:)","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt128/Words-swift.struct":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Words"}],"kind":"symbol","title":"UInt128.Words","abstract":[{"type":"text","text":"A type that represents the words of a binary integer."}],"role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Words"}],"url":"\/documentation\/compute\/uint128\/words-swift.struct","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt128\/Words-swift.struct"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt128":{"url":"\/documentation\/compute\/uint128","type":"topic","kind":"symbol","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt128","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"UInt128"}],"title":"UInt128","abstract":[{"text":"A 128-bit unsigned integer type.","type":"text"}],"navigatorTitle":[{"text":"UInt128","kind":"identifier"}]}}}