{"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"init","kind":"keyword"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"truncatingIfNeeded"},{"kind":"text","text":" "},{"text":"source","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"text":") ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:Sz","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryInteger","text":"BinaryInteger","kind":"typeIdentifier"}],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"name":"source","content":[{"type":"paragraph","inlineContent":[{"text":"An integer to convert to this type.","type":"text"}]}]}]},{"kind":"content","content":[{"text":"Discussion","level":2,"anchor":"discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"When the bit width of ","type":"text"},{"code":"T","type":"codeVoice"},{"text":" (the type of ","type":"text"},{"code":"source","type":"codeVoice"},{"text":") is equal to or greater","type":"text"},{"text":" ","type":"text"},{"text":"than this type’s bit width, the result is the truncated","type":"text"},{"text":" ","type":"text"},{"text":"least-significant bits of ","type":"text"},{"code":"source","type":"codeVoice"},{"type":"text","text":". For example, when converting a"},{"text":" ","type":"text"},{"type":"text","text":"16-bit value to an 8-bit type, only the lower 8 bits of "},{"type":"codeVoice","code":"source"},{"type":"text","text":" are"},{"type":"text","text":" "},{"type":"text","text":"used."}]},{"type":"codeListing","syntax":null,"code":["let p: Int16 = -500","\/\/ 'p' has a binary representation of 11111110_00001100","let q = Int8(truncatingIfNeeded: p)","\/\/ q == 12","\/\/ 'q' has a binary representation of 00001100"]},{"inlineContent":[{"text":"When the bit width of ","type":"text"},{"type":"codeVoice","code":"T"},{"text":" is less than this type’s bit width, the result","type":"text"},{"type":"text","text":" "},{"text":"is ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"sign-extended","type":"text"}]},{"type":"text","text":" to fill the remaining bits. That is, if "},{"code":"source","type":"codeVoice"},{"text":" is","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"negative, the result is padded with ones; otherwise, the result is"},{"type":"text","text":" "},{"type":"text","text":"padded with zeros."}],"type":"paragraph"},{"code":["let u: Int8 = 21","\/\/ 'u' has a binary representation of 00010101","let v = Int16(truncatingIfNeeded: u)","\/\/ v == 21","\/\/ 'v' has a binary representation of 00000000_00010101","","let w: Int8 = -21","\/\/ 'w' has a binary representation of 11101011","let x = Int16(truncatingIfNeeded: w)","\/\/ x == -21","\/\/ 'x' has a binary representation of 11111111_11101011","let y = UInt16(truncatingIfNeeded: w)","\/\/ y == 65515","\/\/ 'y' has a binary representation of 11111111_11101011"],"type":"codeListing","syntax":null}]}],"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt128\/init(truncatingIfNeeded:)-1xc1t","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Creates a new instance from the bit pattern of the given instance by"},{"text":" ","type":"text"},{"type":"text","text":"truncating or sign-extending if needed to fit this type."}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt128","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt128\/FixedWidthInteger-Implementations"]]},"variants":[{"paths":["\/documentation\/compute\/uint128\/init(truncatingifneeded:)-1xc1t"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"title":"init(truncatingIfNeeded:)","extendedModule":"Swift","role":"symbol","roleHeading":"Initializer","fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"truncatingIfNeeded","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}],"symbolKind":"init","externalID":"s:s17FixedWidthIntegerPsE18truncatingIfNeededxqd___tcSzRd__lufc::SYNTHESIZED::s:s7UInt128V","modules":[{"name":"Compute","relatedModules":["Swift"]}]},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/UInt128/init(truncatingIfNeeded:)-1xc1t":{"kind":"symbol","type":"topic","abstract":[{"text":"Creates a new instance from the bit pattern of the given instance by","type":"text"},{"type":"text","text":" "},{"text":"truncating or sign-extending if needed to fit this type.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt128\/init(truncatingIfNeeded:)-1xc1t","title":"init(truncatingIfNeeded:)","url":"\/documentation\/compute\/uint128\/init(truncatingifneeded:)-1xc1t","role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"truncatingIfNeeded"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"text":")","kind":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt128/FixedWidthInteger-Implementations":{"title":"FixedWidthInteger Implementations","url":"\/documentation\/compute\/uint128\/fixedwidthinteger-implementations","abstract":[],"type":"topic","role":"collectionGroup","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt128\/FixedWidthInteger-Implementations","kind":"article"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt128":{"url":"\/documentation\/compute\/uint128","type":"topic","kind":"symbol","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt128","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"UInt128"}],"title":"UInt128","abstract":[{"text":"A 128-bit unsigned integer type.","type":"text"}],"navigatorTitle":[{"text":"UInt128","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/BinaryInteger":{"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"BinaryInteger"}],"navigatorTitle":[{"kind":"identifier","text":"BinaryInteger"}],"url":"\/documentation\/compute\/binaryinteger","type":"topic","abstract":[{"type":"text","text":"An integer type with a binary representation."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryInteger","title":"BinaryInteger","kind":"symbol","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"}}}