{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt128\/&__=(_:_:)-l1y8"},"schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"abstract":[{"text":"Returns the result of shifting a value’s binary representation the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"specified number of digits to the left, masking the shift amount to the"},{"text":" ","type":"text"},{"type":"text","text":"type’s bit width, and stores the result in the left-hand-side variable."}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt128","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt128\/FixedWidthInteger-Implementations"]]},"metadata":{"extendedModule":"Swift","modules":[{"relatedModules":["Swift"],"name":"Compute"}],"platforms":[{"unavailable":false,"name":"iOS","deprecated":false,"beta":false,"introducedAt":"18.0"},{"deprecated":false,"name":"macOS","unavailable":false,"introducedAt":"15.0","beta":false},{"introducedAt":"18.0","name":"tvOS","deprecated":false,"unavailable":false,"beta":false},{"name":"visionOS","unavailable":false,"deprecated":false,"introducedAt":"2.0","beta":false},{"introducedAt":"11.0","unavailable":false,"beta":false,"name":"watchOS","deprecated":false}],"symbolKind":"op","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"&<<=","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:s7UInt128V","text":"UInt128"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s7UInt128V","text":"UInt128"},{"kind":"text","text":")"}],"roleHeading":"Operator","role":"symbol","externalID":"s:s7UInt128V4alleoiyyABz_ABtFZ","title":"&<<=(_:_:)"},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"&<<="},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"internalParam","text":"a"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:s7UInt128V","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt128","text":"UInt128"},{"text":", ","kind":"text"},{"kind":"internalParam","text":"b"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s7UInt128V","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt128","kind":"typeIdentifier","text":"UInt128"},{"kind":"text","text":")"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"content","content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"code":"&<<=","type":"codeVoice"},{"type":"text","text":" operator performs a "},{"inlineContent":[{"text":"masking shift","type":"text"}],"type":"emphasis"},{"type":"text","text":", where the value used as"},{"type":"text","text":" "},{"type":"codeVoice","code":"rhs"},{"type":"text","text":" is masked to produce a value in the range "},{"code":"0..<lhs.bitWidth","type":"codeVoice"},{"type":"text","text":". The"},{"type":"text","text":" "},{"type":"text","text":"shift is performed using this masked value."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The following example defines "},{"code":"x","type":"codeVoice"},{"type":"text","text":" as an instance of "},{"code":"UInt8","type":"codeVoice"},{"text":", an 8-bit,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"unsigned integer type. If you use "},{"code":"2","type":"codeVoice"},{"type":"text","text":" as the right-hand-side value in an"},{"text":" ","type":"text"},{"text":"operation on ","type":"text"},{"type":"codeVoice","code":"x"},{"type":"text","text":", the shift amount requires no masking."}]},{"code":["var x: UInt8 = 30                 \/\/ 0b00011110","x &<<= 2","\/\/ x == 120                       \/\/ 0b01111000"],"type":"codeListing","syntax":null},{"type":"paragraph","inlineContent":[{"type":"text","text":"However, if you pass "},{"code":"19","type":"codeVoice"},{"type":"text","text":" as "},{"code":"rhs","type":"codeVoice"},{"text":", the method first bitmasks ","type":"text"},{"code":"rhs","type":"codeVoice"},{"text":" to","type":"text"},{"text":" ","type":"text"},{"code":"3","type":"codeVoice"},{"type":"text","text":", and then uses that masked value as the number of bits to shift "},{"code":"lhs","type":"codeVoice"},{"type":"text","text":"."}]},{"code":["var y: UInt8 = 30                 \/\/ 0b00011110","y &<<= 19","\/\/ y == 240                       \/\/ 0b11110000"],"type":"codeListing","syntax":null}]}],"variants":[{"paths":["\/documentation\/compute\/uint128\/&__=(_:_:)-l1y8"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/UInt128/&__=(_:_:)-l1y8":{"kind":"symbol","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"&<<="},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"text":"UInt128","preciseIdentifier":"s:s7UInt128V","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s7UInt128V","text":"UInt128"},{"text":")","kind":"text"}],"title":"&<<=(_:_:)","type":"topic","url":"\/documentation\/compute\/uint128\/&__=(_:_:)-l1y8","abstract":[{"type":"text","text":"Returns the result of shifting a value’s binary representation the"},{"type":"text","text":" "},{"type":"text","text":"specified number of digits to the left, masking the shift amount to the"},{"type":"text","text":" "},{"text":"type’s bit width, and stores the result in the left-hand-side variable.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt128\/&__=(_:_:)-l1y8"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt128":{"url":"\/documentation\/compute\/uint128","type":"topic","kind":"symbol","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt128","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"UInt128"}],"title":"UInt128","abstract":[{"text":"A 128-bit unsigned integer type.","type":"text"}],"navigatorTitle":[{"text":"UInt128","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt128/FixedWidthInteger-Implementations":{"title":"FixedWidthInteger Implementations","url":"\/documentation\/compute\/uint128\/fixedwidthinteger-implementations","abstract":[],"type":"topic","role":"collectionGroup","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt128\/FixedWidthInteger-Implementations","kind":"article"}}}