{"kind":"symbol","abstract":[{"type":"text","text":"Subtracts the second value from the first and stores the difference in the"},{"type":"text","text":" "},{"type":"text","text":"left-hand-side variable, wrapping any overflow."}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt128","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt128\/FixedWidthInteger-Implementations"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt128\/&-=(_:_:)"},"variants":[{"paths":["\/documentation\/compute\/uint128\/&-=(_:_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"metadata":{"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"&-=","kind":"identifier"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":")"}],"externalID":"s:s17FixedWidthIntegerPsE3aseoiyyxz_xtFZ::SYNTHESIZED::s:s7UInt128V","extendedModule":"Swift","modules":[{"name":"Compute","relatedModules":["Swift"]}],"role":"symbol","title":"&-=(_:_:)","symbolKind":"op","roleHeading":"Operator"},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"&-=","kind":"identifier"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"text":"lhs","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"kind":"internalParam","text":"rhs"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":")"}],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"lhs","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A numeric value."}]}]},{"name":"rhs","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The value to subtract from "},{"type":"codeVoice","code":"lhs"},{"type":"text","text":"."}]}]}]},{"content":[{"level":2,"anchor":"discussion","type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"The masking subtraction assignment operator (","type":"text"},{"type":"codeVoice","code":"&-="},{"type":"text","text":") silently wraps any"},{"type":"text","text":" "},{"type":"text","text":"overflow that occurs during the operation. In the following example, the"},{"type":"text","text":" "},{"type":"text","text":"difference of "},{"type":"codeVoice","code":"10"},{"type":"text","text":" and "},{"type":"codeVoice","code":"21"},{"type":"text","text":" is less than zero, the minimum representable"},{"text":" ","type":"text"},{"type":"codeVoice","code":"UInt"},{"type":"text","text":" value, so the result is the result is the partial value after"},{"text":" ","type":"text"},{"type":"text","text":"discarding the overflowing bits."}]},{"code":["var x: Int8 = 21","x &-= 10","\/\/ x == 11","var y: UInt8 = 10","y &-= 21","\/\/ y == 245 (after overflow)"],"syntax":null,"type":"codeListing"},{"inlineContent":[{"text":"For more about arithmetic with overflow operators, see ","type":"text"},{"identifier":"https:\/\/docs.swift.org\/swift-book\/LanguageGuide\/AdvancedOperators.html#ID37","type":"reference","isActive":true},{"type":"text","text":" in "},{"type":"emphasis","inlineContent":[{"isActive":true,"identifier":"https:\/\/docs.swift.org\/swift-book\/","type":"reference"}]},{"text":".","type":"text"}],"type":"paragraph"}],"kind":"content"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt128/FixedWidthInteger-Implementations":{"title":"FixedWidthInteger Implementations","url":"\/documentation\/compute\/uint128\/fixedwidthinteger-implementations","abstract":[],"type":"topic","role":"collectionGroup","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt128\/FixedWidthInteger-Implementations","kind":"article"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt128/&-=(_:_:)":{"kind":"symbol","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"&-=","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":")"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt128\/&-=(_:_:)","type":"topic","title":"&-=(_:_:)","abstract":[{"type":"text","text":"Subtracts the second value from the first and stores the difference in the"},{"text":" ","type":"text"},{"text":"left-hand-side variable, wrapping any overflow.","type":"text"}],"url":"\/documentation\/compute\/uint128\/&-=(_:_:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt128":{"url":"\/documentation\/compute\/uint128","type":"topic","kind":"symbol","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt128","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"UInt128"}],"title":"UInt128","abstract":[{"text":"A 128-bit unsigned integer type.","type":"text"}],"navigatorTitle":[{"text":"UInt128","kind":"identifier"}]},"https://docs.swift.org/swift-book/LanguageGuide/AdvancedOperators.html#ID37":{"identifier":"https:\/\/docs.swift.org\/swift-book\/LanguageGuide\/AdvancedOperators.html#ID37","type":"link","title":"Overflow Operators","url":"https:\/\/docs.swift.org\/swift-book\/LanguageGuide\/AdvancedOperators.html#ID37","titleInlineContent":[{"text":"Overflow","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Operators"}]},"https://docs.swift.org/swift-book/":{"identifier":"https:\/\/docs.swift.org\/swift-book\/","type":"link","title":"The Swift Programming Language","url":"https:\/\/docs.swift.org\/swift-book\/","titleInlineContent":[{"type":"text","text":"The Swift Programming Language"}]}}}