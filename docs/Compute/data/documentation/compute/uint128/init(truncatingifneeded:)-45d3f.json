{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"init","kind":"keyword"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"truncatingIfNeeded"},{"kind":"text","text":" "},{"text":"source","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") "},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:Sz","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryInteger","text":"BinaryInteger"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"name":"source","content":[{"type":"paragraph","inlineContent":[{"text":"An integer to convert to this type.","type":"text"}]}]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"text":"Discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"When the bit width of "},{"type":"codeVoice","code":"T"},{"text":" (the type of ","type":"text"},{"code":"source","type":"codeVoice"},{"text":") is equal to or greater","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"than this type’s bit width, the result is the truncated"},{"type":"text","text":" "},{"type":"text","text":"least-significant bits of "},{"type":"codeVoice","code":"source"},{"type":"text","text":". For example, when converting a"},{"type":"text","text":" "},{"text":"16-bit value to an 8-bit type, only the lower 8 bits of ","type":"text"},{"code":"source","type":"codeVoice"},{"type":"text","text":" are"},{"text":" ","type":"text"},{"type":"text","text":"used."}]},{"code":["let p: Int16 = -500","\/\/ 'p' has a binary representation of 11111110_00001100","let q = Int8(truncatingIfNeeded: p)","\/\/ q == 12","\/\/ 'q' has a binary representation of 00001100"],"syntax":null,"type":"codeListing"},{"inlineContent":[{"text":"When the bit width of ","type":"text"},{"type":"codeVoice","code":"T"},{"type":"text","text":" is less than this type’s bit width, the result"},{"type":"text","text":" "},{"type":"text","text":"is "},{"type":"emphasis","inlineContent":[{"text":"sign-extended","type":"text"}]},{"text":" to fill the remaining bits. That is, if ","type":"text"},{"type":"codeVoice","code":"source"},{"text":" is","type":"text"},{"type":"text","text":" "},{"text":"negative, the result is padded with ones; otherwise, the result is","type":"text"},{"text":" ","type":"text"},{"text":"padded with zeros.","type":"text"}],"type":"paragraph"},{"code":["let u: Int8 = 21","\/\/ 'u' has a binary representation of 00010101","let v = Int16(truncatingIfNeeded: u)","\/\/ v == 21","\/\/ 'v' has a binary representation of 00000000_00010101","","let w: Int8 = -21","\/\/ 'w' has a binary representation of 11101011","let x = Int16(truncatingIfNeeded: w)","\/\/ x == -21","\/\/ 'x' has a binary representation of 11111111_11101011","let y = UInt16(truncatingIfNeeded: w)","\/\/ y == 65515","\/\/ 'y' has a binary representation of 11111111_11101011"],"syntax":null,"type":"codeListing"}]}],"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt128\/init(truncatingIfNeeded:)-45d3f","interfaceLanguage":"swift"},"metadata":{"externalID":"s:s7UInt128V18truncatingIfNeededABx_tcSzRzlufc","role":"symbol","modules":[{"relatedModules":["Swift"],"name":"Compute"}],"symbolKind":"init","extendedModule":"Swift","title":"init(truncatingIfNeeded:)","fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"truncatingIfNeeded"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":")","kind":"text"}],"platforms":[{"introducedAt":"18.0","name":"iOS","beta":false,"unavailable":false,"deprecated":false},{"beta":false,"unavailable":false,"introducedAt":"15.0","name":"macOS","deprecated":false},{"name":"tvOS","unavailable":false,"deprecated":false,"beta":false,"introducedAt":"18.0"},{"introducedAt":"2.0","deprecated":false,"unavailable":false,"beta":false,"name":"visionOS"},{"name":"watchOS","unavailable":false,"introducedAt":"11.0","beta":false,"deprecated":false}],"roleHeading":"Initializer"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/uint128\/init(truncatingifneeded:)-45d3f"]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt128","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt128\/BinaryInteger-Implementations"]]},"kind":"symbol","schemaVersion":{"patch":0,"minor":3,"major":0},"abstract":[{"type":"text","text":"Creates a new instance from the bit pattern of the given instance by"},{"text":" ","type":"text"},{"text":"sign-extending or truncating to fit this type.","type":"text"}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/BinaryInteger":{"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"BinaryInteger"}],"navigatorTitle":[{"kind":"identifier","text":"BinaryInteger"}],"url":"\/documentation\/compute\/binaryinteger","type":"topic","abstract":[{"type":"text","text":"An integer type with a binary representation."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryInteger","title":"BinaryInteger","kind":"symbol","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt128/BinaryInteger-Implementations":{"kind":"article","role":"collectionGroup","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt128\/BinaryInteger-Implementations","title":"BinaryInteger Implementations","abstract":[],"url":"\/documentation\/compute\/uint128\/binaryinteger-implementations","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt128/init(truncatingIfNeeded:)-45d3f":{"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt128\/init(truncatingIfNeeded:)-45d3f","fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"text":"truncatingIfNeeded","kind":"externalParam"},{"kind":"text","text":": "},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":")"}],"type":"topic","url":"\/documentation\/compute\/uint128\/init(truncatingifneeded:)-45d3f","title":"init(truncatingIfNeeded:)","kind":"symbol","abstract":[{"type":"text","text":"Creates a new instance from the bit pattern of the given instance by"},{"type":"text","text":" "},{"text":"sign-extending or truncating to fit this type.","type":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt128":{"url":"\/documentation\/compute\/uint128","type":"topic","kind":"symbol","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt128","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"UInt128"}],"title":"UInt128","abstract":[{"text":"A 128-bit unsigned integer type.","type":"text"}],"navigatorTitle":[{"text":"UInt128","kind":"identifier"}]}}}