{"metadata":{"extendedModule":"Swift","title":"+(_:_:)","externalID":"s:s5UInt8V1poiyA2B_ABtFZ","modules":[{"relatedModules":["Swift"],"name":"Compute"}],"symbolKind":"op","role":"symbol","roleHeading":"Operator","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"+","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s5UInt8V","text":"UInt8"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"UInt8","preciseIdentifier":"s:s5UInt8V"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:s5UInt8V","text":"UInt8","kind":"typeIdentifier"}]},"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"text":"Adds two values and produces their sum.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8\/BinaryInteger-Implementations"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/uint8\/+(_:_:)"]}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"+"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"internalParam","text":"lhs"},{"text":": ","kind":"text"},{"text":"UInt8","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8","kind":"typeIdentifier","preciseIdentifier":"s:s5UInt8V"},{"kind":"text","text":", "},{"text":"rhs","kind":"internalParam"},{"kind":"text","text":": "},{"text":"UInt8","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8","preciseIdentifier":"s:s5UInt8V"},{"text":") -> ","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8","preciseIdentifier":"s:s5UInt8V","text":"UInt8","kind":"typeIdentifier"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"lhs","content":[{"inlineContent":[{"type":"text","text":"The first value to add."}],"type":"paragraph"}]},{"name":"rhs","content":[{"inlineContent":[{"text":"The second value to add.","type":"text"}],"type":"paragraph"}]}]},{"content":[{"level":2,"type":"heading","anchor":"discussion","text":"Discussion"},{"inlineContent":[{"text":"The addition operator (","type":"text"},{"type":"codeVoice","code":"+"},{"type":"text","text":") calculates the sum of its two arguments. For"},{"type":"text","text":" "},{"type":"text","text":"example:"}],"type":"paragraph"},{"code":["1 + 2                   \/\/ 3","-10 + 15                \/\/ 5","-15 + -5                \/\/ -20","21.5 + 3.25             \/\/ 24.75"],"syntax":null,"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You cannot use "},{"type":"codeVoice","code":"+"},{"text":" with arguments of different types. To add values of","type":"text"},{"type":"text","text":" "},{"text":"different types, convert one of the values to the other value’s type.","type":"text"}]},{"type":"codeListing","syntax":null,"code":["let x: Int8 = 21","let y: Int = 1000000","Int(x) + y              \/\/ 1000021"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The sum of the two arguments must be representable in the arguments’"},{"type":"text","text":" "},{"text":"type. In the following example, the result of ","type":"text"},{"code":"21 + 120","type":"codeVoice"},{"type":"text","text":" is greater than"},{"text":" ","type":"text"},{"type":"text","text":"the maximum representable "},{"type":"codeVoice","code":"Int8"},{"text":" value:","type":"text"}]},{"type":"codeListing","syntax":null,"code":["x + 120                 \/\/ Overflow error"]},{"style":"note","type":"aside","name":"Note","content":[{"inlineContent":[{"type":"text","text":"Overflow checking is not performed in "},{"type":"codeVoice","code":"-Ounchecked"},{"type":"text","text":" builds."}],"type":"paragraph"}]},{"inlineContent":[{"type":"text","text":"If you want to opt out of overflow checking and wrap the result in case"},{"type":"text","text":" "},{"type":"text","text":"of any overflow, use the overflow addition operator ("},{"type":"codeVoice","code":"&+"},{"type":"text","text":")."}],"type":"paragraph"},{"type":"codeListing","code":["x &+ 120                \/\/ -115"],"syntax":null}],"kind":"content"}],"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8\/+(_:_:)"},"kind":"symbol","references":{"doc://com.swallow.documentation.Compute/documentation/Compute/UInt8":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"UInt8","kind":"identifier"}],"navigatorTitle":[{"text":"UInt8","kind":"identifier"}],"title":"UInt8","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8","url":"\/documentation\/compute\/uint8","kind":"symbol","role":"symbol","type":"topic","abstract":[{"type":"text","text":"An 8-bit unsigned integer value"},{"text":" ","type":"text"},{"text":"type.","type":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt8/+(_:_:)":{"abstract":[{"text":"Adds two values and produces their sum.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8\/+(_:_:)","url":"\/documentation\/compute\/uint8\/+(_:_:)","title":"+(_:_:)","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"+"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s5UInt8V","text":"UInt8"},{"kind":"text","text":", "},{"text":"UInt8","kind":"typeIdentifier","preciseIdentifier":"s:s5UInt8V"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s5UInt8V","text":"UInt8"}],"role":"symbol","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt8/BinaryInteger-Implementations":{"abstract":[],"title":"BinaryInteger Implementations","type":"topic","kind":"article","url":"\/documentation\/compute\/uint8\/binaryinteger-implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8\/BinaryInteger-Implementations","role":"collectionGroup"}}}