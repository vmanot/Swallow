{"kind":"symbol","sections":[],"abstract":[{"type":"text","text":"Creates a new instance from the bit pattern of the given instance by"},{"text":" ","type":"text"},{"type":"text","text":"truncating or sign-extending if needed to fit this type."}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8\/init(truncatingIfNeeded:)"},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8\/FixedWidthInteger-Implementations"]]},"metadata":{"symbolKind":"init","externalID":"s:s17FixedWidthIntegerPsE18truncatingIfNeededxqd___tcSzRd__lufc::SYNTHESIZED::s:s5UInt8V","role":"symbol","extendedModule":"Swift","modules":[{"relatedModules":["Swift"],"name":"Compute"}],"fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"truncatingIfNeeded"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":")","kind":"text"}],"roleHeading":"Initializer","title":"init(truncatingIfNeeded:)"},"schemaVersion":{"major":0,"patch":0,"minor":3},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"init","kind":"keyword"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"truncatingIfNeeded","kind":"externalParam"},{"kind":"text","text":" "},{"text":"source","kind":"internalParam"},{"kind":"text","text":": "},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"text":"T","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"BinaryInteger","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryInteger","kind":"typeIdentifier","preciseIdentifier":"s:Sz"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"An integer to convert to this type."}]}],"name":"source"}]},{"kind":"content","content":[{"text":"Discussion","level":2,"anchor":"discussion","type":"heading"},{"inlineContent":[{"type":"text","text":"When the bit width of "},{"type":"codeVoice","code":"T"},{"text":" (the type of ","type":"text"},{"code":"source","type":"codeVoice"},{"text":") is equal to or greater","type":"text"},{"text":" ","type":"text"},{"text":"than this type’s bit width, the result is the truncated","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"least-significant bits of "},{"type":"codeVoice","code":"source"},{"type":"text","text":". For example, when converting a"},{"type":"text","text":" "},{"type":"text","text":"16-bit value to an 8-bit type, only the lower 8 bits of "},{"code":"source","type":"codeVoice"},{"type":"text","text":" are"},{"text":" ","type":"text"},{"text":"used.","type":"text"}],"type":"paragraph"},{"code":["let p: Int16 = -500","\/\/ 'p' has a binary representation of 11111110_00001100","let q = Int8(truncatingIfNeeded: p)","\/\/ q == 12","\/\/ 'q' has a binary representation of 00001100"],"type":"codeListing","syntax":null},{"inlineContent":[{"type":"text","text":"When the bit width of "},{"code":"T","type":"codeVoice"},{"type":"text","text":" is less than this type’s bit width, the result"},{"type":"text","text":" "},{"type":"text","text":"is "},{"inlineContent":[{"text":"sign-extended","type":"text"}],"type":"emphasis"},{"type":"text","text":" to fill the remaining bits. That is, if "},{"type":"codeVoice","code":"source"},{"type":"text","text":" is"},{"text":" ","type":"text"},{"text":"negative, the result is padded with ones; otherwise, the result is","type":"text"},{"type":"text","text":" "},{"type":"text","text":"padded with zeros."}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":["let u: Int8 = 21","\/\/ 'u' has a binary representation of 00010101","let v = Int16(truncatingIfNeeded: u)","\/\/ v == 21","\/\/ 'v' has a binary representation of 00000000_00010101","","let w: Int8 = -21","\/\/ 'w' has a binary representation of 11101011","let x = Int16(truncatingIfNeeded: w)","\/\/ x == -21","\/\/ 'x' has a binary representation of 11111111_11101011","let y = UInt16(truncatingIfNeeded: w)","\/\/ y == 65515","\/\/ 'y' has a binary representation of 11111111_11101011"]}]}],"variants":[{"paths":["\/documentation\/compute\/uint8\/init(truncatingifneeded:)"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/BinaryInteger":{"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"BinaryInteger"}],"navigatorTitle":[{"kind":"identifier","text":"BinaryInteger"}],"url":"\/documentation\/compute\/binaryinteger","type":"topic","abstract":[{"type":"text","text":"An integer type with a binary representation."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryInteger","title":"BinaryInteger","kind":"symbol","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt8":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"UInt8","kind":"identifier"}],"navigatorTitle":[{"text":"UInt8","kind":"identifier"}],"title":"UInt8","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8","url":"\/documentation\/compute\/uint8","kind":"symbol","role":"symbol","type":"topic","abstract":[{"type":"text","text":"An 8-bit unsigned integer value"},{"text":" ","type":"text"},{"text":"type.","type":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt8/FixedWidthInteger-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8\/FixedWidthInteger-Implementations","title":"FixedWidthInteger Implementations","kind":"article","role":"collectionGroup","abstract":[],"url":"\/documentation\/compute\/uint8\/fixedwidthinteger-implementations","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt8/init(truncatingIfNeeded:)":{"url":"\/documentation\/compute\/uint8\/init(truncatingifneeded:)","abstract":[{"text":"Creates a new instance from the bit pattern of the given instance by","type":"text"},{"type":"text","text":" "},{"text":"truncating or sign-extending if needed to fit this type.","type":"text"}],"type":"topic","role":"symbol","kind":"symbol","title":"init(truncatingIfNeeded:)","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"truncatingIfNeeded"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8\/init(truncatingIfNeeded:)"}}}