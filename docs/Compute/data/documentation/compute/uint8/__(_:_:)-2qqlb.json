{"schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8\/__(_:_:)-2qqlb"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":">>","kind":"identifier"},{"text":" ","kind":"text"},{"kind":"text","text":"<"},{"text":"Other","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"internalParam","text":"lhs"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"internalParam","text":"rhs"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Other"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":" ","kind":"text"},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"text":"Other","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","text":"BinaryInteger","preciseIdentifier":"s:Sz","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryInteger"}]}]},{"kind":"parameters","parameters":[{"name":"lhs","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The value to shift."}]}]},{"name":"rhs","content":[{"inlineContent":[{"type":"text","text":"The number of bits to shift "},{"code":"lhs","type":"codeVoice"},{"type":"text","text":" to the right."}],"type":"paragraph"}]}]},{"content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":">>"},{"text":" operator performs a ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"smart shift","type":"text"}]},{"text":", which defines a result for a","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"shift of any value."}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Using a negative value for "},{"code":"rhs","type":"codeVoice"},{"type":"text","text":" performs a left shift using"},{"type":"text","text":" "},{"type":"codeVoice","code":"abs(rhs)"},{"type":"text","text":"."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Using a value for "},{"code":"rhs","type":"codeVoice"},{"text":" that is greater than or equal to the bit width","type":"text"},{"type":"text","text":" "},{"type":"text","text":"of "},{"type":"codeVoice","code":"lhs"},{"type":"text","text":" is an "},{"type":"emphasis","inlineContent":[{"text":"overshift","type":"text"}]},{"type":"text","text":". An overshift results in "},{"type":"codeVoice","code":"-1"},{"type":"text","text":" for a"},{"text":" ","type":"text"},{"type":"text","text":"negative value of "},{"type":"codeVoice","code":"lhs"},{"text":" or ","type":"text"},{"code":"0","type":"codeVoice"},{"type":"text","text":" for a nonnegative value."}]}]},{"content":[{"inlineContent":[{"text":"Using any other value for ","type":"text"},{"type":"codeVoice","code":"rhs"},{"type":"text","text":" performs a right shift on "},{"code":"lhs","type":"codeVoice"},{"type":"text","text":" by that"},{"type":"text","text":" "},{"type":"text","text":"amount."}],"type":"paragraph"}]}]},{"type":"paragraph","inlineContent":[{"text":"The following example defines ","type":"text"},{"type":"codeVoice","code":"x"},{"text":" as an instance of ","type":"text"},{"code":"UInt8","type":"codeVoice"},{"type":"text","text":", an 8-bit,"},{"type":"text","text":" "},{"type":"text","text":"unsigned integer type. If you use "},{"type":"codeVoice","code":"2"},{"text":" as the right-hand-side value in an","type":"text"},{"type":"text","text":" "},{"type":"text","text":"operation on "},{"type":"codeVoice","code":"x"},{"type":"text","text":", the value is shifted right by two bits."}]},{"code":["let x: UInt8 = 30                 \/\/ 0b00011110","let y = x >> 2","\/\/ y == 7                         \/\/ 0b00000111"],"syntax":null,"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you use "},{"type":"codeVoice","code":"11"},{"type":"text","text":" as "},{"code":"rhs","type":"codeVoice"},{"text":", ","type":"text"},{"code":"x","type":"codeVoice"},{"text":" is overshifted such that all of its bits","type":"text"},{"type":"text","text":" "},{"text":"are set to zero.","type":"text"}]},{"syntax":null,"code":["let z = x >> 11","\/\/ z == 0                         \/\/ 0b00000000"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Using a negative value as "},{"type":"codeVoice","code":"rhs"},{"type":"text","text":" is the same as performing a left shift"},{"text":" ","type":"text"},{"type":"text","text":"using "},{"type":"codeVoice","code":"abs(rhs)"},{"text":".","type":"text"}]},{"code":["let a = x >> -3","\/\/ a == 240                       \/\/ 0b11110000","let b = x << 3","\/\/ b == 240                       \/\/ 0b11110000"],"type":"codeListing","syntax":null},{"type":"paragraph","inlineContent":[{"type":"text","text":"Right shift operations on negative values “fill in” the high bits with"},{"type":"text","text":" "},{"text":"ones instead of zeros.","type":"text"}]},{"code":["let q: Int8 = -30                 \/\/ 0b11100010","let r = q >> 2","\/\/ r == -8                        \/\/ 0b11111000","","let s = q >> 11","\/\/ s == -1                        \/\/ 0b11111111"],"type":"codeListing","syntax":null}],"kind":"content"}],"kind":"symbol","variants":[{"paths":["\/documentation\/compute\/uint8\/__(_:_:)-2qqlb"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8\/FixedWidthInteger-Implementations"]]},"metadata":{"role":"symbol","roleHeading":"Operator","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":">>"},{"kind":"text","text":" "},{"text":"<","kind":"text"},{"text":"Other","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"text":"Other","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"externalID":"s:s17FixedWidthIntegerPsE2ggoiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:s5UInt8V","extendedModule":"Swift","symbolKind":"op","title":">>(_:_:)","modules":[{"name":"Compute","relatedModules":["Swift"]}]},"sections":[],"abstract":[{"type":"text","text":"Returns the result of shifting a value’s binary representation the"},{"type":"text","text":" "},{"text":"specified number of digits to the right.","type":"text"}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/UInt8":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"UInt8","kind":"identifier"}],"navigatorTitle":[{"text":"UInt8","kind":"identifier"}],"title":"UInt8","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8","url":"\/documentation\/compute\/uint8","kind":"symbol","role":"symbol","type":"topic","abstract":[{"type":"text","text":"An 8-bit unsigned integer value"},{"text":" ","type":"text"},{"text":"type.","type":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt8/__(_:_:)-2qqlb":{"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Returns the result of shifting a value’s binary representation the"},{"type":"text","text":" "},{"text":"specified number of digits to the right.","type":"text"}],"title":">>(_:_:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8\/__(_:_:)-2qqlb","role":"symbol","url":"\/documentation\/compute\/uint8\/__(_:_:)-2qqlb","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":">>"},{"text":" ","kind":"text"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Other"},{"kind":"text","text":">("},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Other","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt8/FixedWidthInteger-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8\/FixedWidthInteger-Implementations","title":"FixedWidthInteger Implementations","kind":"article","role":"collectionGroup","abstract":[],"url":"\/documentation\/compute\/uint8\/fixedwidthinteger-implementations","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/BinaryInteger":{"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"BinaryInteger"}],"navigatorTitle":[{"kind":"identifier","text":"BinaryInteger"}],"url":"\/documentation\/compute\/binaryinteger","type":"topic","abstract":[{"type":"text","text":"An integer type with a binary representation."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryInteger","title":"BinaryInteger","kind":"symbol","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"}}}