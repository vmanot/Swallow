{"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"metadata":{"role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"&<<","kind":"identifier"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:s5UInt8V","text":"UInt8"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:s5UInt8V","kind":"typeIdentifier","text":"UInt8"},{"kind":"text","text":") -> "},{"text":"UInt8","kind":"typeIdentifier","preciseIdentifier":"s:s5UInt8V"}],"modules":[{"name":"Compute","relatedModules":["Swift"]}],"symbolKind":"op","externalID":"s:s5UInt8V3alloiyA2B_ABtFZ","title":"&<<(_:_:)","roleHeading":"Operator","extendedModule":"Swift"},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8\/FixedWidthInteger-Implementations"]]},"abstract":[{"type":"text","text":"Returns the result of shifting a value’s binary representation the"},{"text":" ","type":"text"},{"type":"text","text":"specified number of digits to the left, masking the shift amount to the"},{"type":"text","text":" "},{"type":"text","text":"type’s bit width."}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8\/&__(_:_:)-7gp0b"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/uint8\/&__(_:_:)-7gp0b"]}],"kind":"symbol","primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"&<<","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"kind":"internalParam","text":"lhs"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8","text":"UInt8","preciseIdentifier":"s:s5UInt8V"},{"text":", ","kind":"text"},{"text":"rhs","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"UInt8","preciseIdentifier":"s:s5UInt8V","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:s5UInt8V","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8","text":"UInt8","kind":"typeIdentifier"}]}],"kind":"declarations"},{"parameters":[{"name":"lhs","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The value to shift."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The number of bits to shift "},{"type":"codeVoice","code":"lhs"},{"text":" to the left. If ","type":"text"},{"type":"codeVoice","code":"rhs"},{"type":"text","text":" is"},{"type":"text","text":" "},{"text":"outside the range ","type":"text"},{"code":"0..<lhs.bitWidth","type":"codeVoice"},{"type":"text","text":", it is masked to produce a"},{"text":" ","type":"text"},{"text":"value within that range.","type":"text"}]}],"name":"rhs"}],"kind":"parameters"},{"kind":"content","content":[{"anchor":"discussion","text":"Discussion","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"Use the masking left shift operator ("},{"type":"codeVoice","code":"&<<"},{"type":"text","text":") when you need to perform a"},{"text":" ","type":"text"},{"type":"text","text":"shift and are sure that the shift amount is in the range"},{"type":"text","text":" "},{"type":"codeVoice","code":"0..<lhs.bitWidth"},{"type":"text","text":". Before shifting, the masking left shift operator"},{"text":" ","type":"text"},{"type":"text","text":"masks the shift to this range. The shift is performed using this masked"},{"text":" ","type":"text"},{"text":"value.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"The following example defines ","type":"text"},{"type":"codeVoice","code":"x"},{"type":"text","text":" as an instance of "},{"code":"UInt8","type":"codeVoice"},{"text":", an 8-bit,","type":"text"},{"type":"text","text":" "},{"text":"unsigned integer type. If you use ","type":"text"},{"code":"2","type":"codeVoice"},{"type":"text","text":" as the right-hand-side value in an"},{"type":"text","text":" "},{"type":"text","text":"operation on "},{"code":"x","type":"codeVoice"},{"type":"text","text":", the shift amount requires no masking."}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":["let x: UInt8 = 30                 \/\/ 0b00011110","let y = x &<< 2","\/\/ y == 120                       \/\/ 0b01111000"]},{"inlineContent":[{"text":"However, if you use ","type":"text"},{"type":"codeVoice","code":"8"},{"type":"text","text":" as the shift amount, the method first masks the"},{"type":"text","text":" "},{"type":"text","text":"shift amount to zero, and then performs the shift, resulting in no change"},{"type":"text","text":" "},{"type":"text","text":"to the original value."}],"type":"paragraph"},{"code":["let z = x &<< 8","\/\/ z == 30                        \/\/ 0b00011110"],"type":"codeListing","syntax":null},{"type":"paragraph","inlineContent":[{"type":"text","text":"If the bit width of the shifted integer type is a power of two, masking"},{"type":"text","text":" "},{"type":"text","text":"is performed using a bitmask; otherwise, masking is performed using a"},{"text":" ","type":"text"},{"text":"modulo operation.","type":"text"}]}]}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt8/&__(_:_:)-7gp0b":{"kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"&<<"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:s5UInt8V","kind":"typeIdentifier","text":"UInt8"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s5UInt8V","text":"UInt8"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:s5UInt8V","kind":"typeIdentifier","text":"UInt8"}],"type":"topic","abstract":[{"text":"Returns the result of shifting a value’s binary representation the","type":"text"},{"text":" ","type":"text"},{"text":"specified number of digits to the left, masking the shift amount to the","type":"text"},{"type":"text","text":" "},{"text":"type’s bit width.","type":"text"}],"title":"&<<(_:_:)","role":"symbol","url":"\/documentation\/compute\/uint8\/&__(_:_:)-7gp0b","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8\/&__(_:_:)-7gp0b"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt8":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"UInt8","kind":"identifier"}],"navigatorTitle":[{"text":"UInt8","kind":"identifier"}],"title":"UInt8","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8","url":"\/documentation\/compute\/uint8","kind":"symbol","role":"symbol","type":"topic","abstract":[{"type":"text","text":"An 8-bit unsigned integer value"},{"text":" ","type":"text"},{"text":"type.","type":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt8/FixedWidthInteger-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8\/FixedWidthInteger-Implementations","title":"FixedWidthInteger Implementations","kind":"article","role":"collectionGroup","abstract":[],"url":"\/documentation\/compute\/uint8\/fixedwidthinteger-implementations","type":"topic"}}}