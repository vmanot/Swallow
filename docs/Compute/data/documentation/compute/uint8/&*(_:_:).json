{"schemaVersion":{"major":0,"patch":0,"minor":3},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/uint8\/&*(_:_:)"]}],"abstract":[{"type":"text","text":"Returns the product of the two given values, wrapping the result in case"},{"type":"text","text":" "},{"type":"text","text":"of any overflow."}],"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8\/&*(_:_:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8\/FixedWidthInteger-Implementations"]]},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"&*","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"lhs","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"rhs","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"name":"lhs","content":[{"inlineContent":[{"type":"text","text":"The first value to multiply."}],"type":"paragraph"}]},{"name":"rhs","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The second value to multiply."}]}]}]},{"kind":"content","content":[{"anchor":"discussion","text":"Discussion","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The overflow multiplication operator ("},{"code":"&*","type":"codeVoice"},{"text":") discards any bits that","type":"text"},{"text":" ","type":"text"},{"text":"overflow the fixed width of the integer type. In the following example,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the product of "},{"code":"10","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"50"},{"text":" is greater than the maximum representable","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"Int8"},{"type":"text","text":" value, so the result is the partial value after discarding the"},{"type":"text","text":" "},{"type":"text","text":"overflowing bits."}]},{"syntax":null,"type":"codeListing","code":["let x: Int8 = 10 &* 5","\/\/ x == 50","let y: Int8 = 10 &* 50","\/\/ y == -12 (after overflow)"]},{"type":"paragraph","inlineContent":[{"text":"For more about arithmetic with overflow operators, see ","type":"text"},{"isActive":true,"type":"reference","identifier":"https:\/\/docs.swift.org\/swift-book\/LanguageGuide\/AdvancedOperators.html#ID37"},{"type":"text","text":" in "},{"type":"emphasis","inlineContent":[{"identifier":"https:\/\/docs.swift.org\/swift-book\/","isActive":true,"type":"reference"}]},{"type":"text","text":"."}]}]}],"metadata":{"role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"&*"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"externalID":"s:s17FixedWidthIntegerPsE2amoiyxx_xtFZ::SYNTHESIZED::s:s5UInt8V","symbolKind":"op","roleHeading":"Operator","modules":[{"name":"Compute","relatedModules":["Swift"]}],"title":"&*(_:_:)","extendedModule":"Swift"},"sections":[],"references":{"https://docs.swift.org/swift-book/LanguageGuide/AdvancedOperators.html#ID37":{"identifier":"https:\/\/docs.swift.org\/swift-book\/LanguageGuide\/AdvancedOperators.html#ID37","title":"Overflow Operators","type":"link","titleInlineContent":[{"type":"text","text":"Overflow"},{"type":"text","text":" "},{"type":"text","text":"Operators"}],"url":"https:\/\/docs.swift.org\/swift-book\/LanguageGuide\/AdvancedOperators.html#ID37"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt8/&*(_:_:)":{"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Returns the product of the two given values, wrapping the result in case"},{"type":"text","text":" "},{"type":"text","text":"of any overflow."}],"title":"&*(_:_:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8\/&*(_:_:)","role":"symbol","url":"\/documentation\/compute\/uint8\/&*(_:_:)","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"&*"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt8":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"UInt8","kind":"identifier"}],"navigatorTitle":[{"text":"UInt8","kind":"identifier"}],"title":"UInt8","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8","url":"\/documentation\/compute\/uint8","kind":"symbol","role":"symbol","type":"topic","abstract":[{"type":"text","text":"An 8-bit unsigned integer value"},{"text":" ","type":"text"},{"text":"type.","type":"text"}]},"https://docs.swift.org/swift-book/":{"identifier":"https:\/\/docs.swift.org\/swift-book\/","title":"The Swift Programming Language","type":"link","titleInlineContent":[{"type":"text","text":"The Swift Programming Language"}],"url":"https:\/\/docs.swift.org\/swift-book\/"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt8/FixedWidthInteger-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8\/FixedWidthInteger-Implementations","title":"FixedWidthInteger Implementations","kind":"article","role":"collectionGroup","abstract":[],"url":"\/documentation\/compute\/uint8\/fixedwidthinteger-implementations","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"}}}