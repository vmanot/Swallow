{"variants":[{"paths":["\/documentation\/compute\/uint8\/fixedwidthinteger-implementations"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8"]]},"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8\/FixedWidthInteger-Implementations","interfaceLanguage":"swift"},"kind":"article","topicSections":[{"title":"Operators","anchor":"Operators","identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8\/&*(_:_:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8\/&*=(_:_:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8\/&+(_:_:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8\/&+=(_:_:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8\/&-(_:_:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8\/&-=(_:_:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8\/&__(_:_:)-1fquv","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8\/&__(_:_:)-3qwyl","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8\/&__(_:_:)-5m6yb","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8\/&__(_:_:)-60i6u","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8\/&__(_:_:)-6jqbr","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8\/&__(_:_:)-7gp0b","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8\/&__=(_:_:)-16yhm","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8\/&__=(_:_:)-60dw2","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8\/__(_:_:)-2qqlb","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8\/__(_:_:)-7yxgh","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8\/~(_:)"],"generated":true},{"title":"Initializers","anchor":"Initializers","identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8\/init(_:)-1iroc","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8\/init(_:)-5e02","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8\/init(_:radix:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8\/init(bigEndian:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8\/init(clamping:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8\/init(exactly:)-8szg6","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8\/init(littleEndian:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8\/init(truncatingIfNeeded:)"],"generated":true},{"identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8\/bigEndian","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8\/bitWidth-swift.property","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8\/littleEndian"],"anchor":"Instance-Properties","title":"Instance Properties","generated":true},{"identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8\/swapByteOrderHostToPortable()","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8\/swapByteOrderPortableToHost()"],"title":"Instance Methods","anchor":"Instance-Methods","generated":true},{"title":"Type Methods","anchor":"Type-Methods","generated":true,"identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8\/random(in:)-6wnz5","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8\/random(in:)-85h4o","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8\/random(in:using:)-3zjsj","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8\/random(in:using:)-6l2z5"]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"title":"FixedWidthInteger Implementations","roleHeading":"API Collection","modules":[{"name":"Compute"}],"role":"collectionGroup"},"sections":[],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/UInt8/init(bigEndian:)":{"kind":"symbol","type":"topic","abstract":[{"text":"Creates an integer from its big-endian representation, changing the byte","type":"text"},{"text":" ","type":"text"},{"text":"order if necessary.","type":"text"}],"title":"init(bigEndian:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8\/init(bigEndian:)","role":"symbol","url":"\/documentation\/compute\/uint8\/init(bigendian:)","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"bigEndian"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":")"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt8/random(in:)-6wnz5":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8\/random(in:)-6wnz5","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"random","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"in"},{"kind":"text","text":": "},{"text":"Range","kind":"typeIdentifier","preciseIdentifier":"s:Sn"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"kind":"symbol","type":"topic","title":"random(in:)","url":"\/documentation\/compute\/uint8\/random(in:)-6wnz5","abstract":[{"type":"text","text":"Returns a random value within the specified range."}]},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt8/&__=(_:_:)-60dw2":{"url":"\/documentation\/compute\/uint8\/&__=(_:_:)-60dw2","abstract":[{"type":"text","text":"Returns the result of shifting a value’s binary representation the"},{"text":" ","type":"text"},{"text":"specified number of digits to the left, masking the shift amount to the","type":"text"},{"text":" ","type":"text"},{"text":"type’s bit width, and stores the result in the left-hand-side variable.","type":"text"}],"type":"topic","role":"symbol","kind":"symbol","title":"&<<=(_:_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"&<<=","kind":"identifier"},{"text":" ","kind":"text"},{"kind":"text","text":"<"},{"text":"Other","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Other","kind":"typeIdentifier"},{"kind":"text","text":")"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8\/&__=(_:_:)-60dw2"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt8/random(in:using:)-6l2z5":{"kind":"symbol","type":"topic","abstract":[{"text":"Returns a random value within the specified range, using the given","type":"text"},{"text":" ","type":"text"},{"text":"generator as a source for randomness.","type":"text"}],"title":"random(in:using:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8\/random(in:using:)-6l2z5","role":"symbol","url":"\/documentation\/compute\/uint8\/random(in:using:)-6l2z5","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"random","kind":"identifier"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"in","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SN","text":"ClosedRange"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"text":"using","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"text":"T","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt8/init(_:)-1iroc":{"url":"\/documentation\/compute\/uint8\/init(_:)-1iroc","abstract":[{"type":"text","text":"Creates a new integer value from the given string."}],"type":"topic","role":"symbol","kind":"symbol","title":"init(_:)","fragments":[{"text":"init","kind":"identifier"},{"text":"?(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":")"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8\/init(_:)-1iroc"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt8":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"UInt8","kind":"identifier"}],"navigatorTitle":[{"text":"UInt8","kind":"identifier"}],"title":"UInt8","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8","url":"\/documentation\/compute\/uint8","kind":"symbol","role":"symbol","type":"topic","abstract":[{"type":"text","text":"An 8-bit unsigned integer value"},{"text":" ","type":"text"},{"text":"type.","type":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt8/__(_:_:)-2qqlb":{"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Returns the result of shifting a value’s binary representation the"},{"type":"text","text":" "},{"text":"specified number of digits to the right.","type":"text"}],"title":">>(_:_:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8\/__(_:_:)-2qqlb","role":"symbol","url":"\/documentation\/compute\/uint8\/__(_:_:)-2qqlb","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":">>"},{"text":" ","kind":"text"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Other"},{"kind":"text","text":">("},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Other","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt8/init(_:)-5e02":{"title":"init(_:)","abstract":[{"text":"Creates an integer from the given floating-point value, rounding toward","type":"text"},{"text":" ","type":"text"},{"text":"zero. Any fractional part of the value passed as ","type":"text"},{"code":"source","type":"codeVoice"},{"type":"text","text":" is removed."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8\/init(_:)-5e02","fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":")"}],"kind":"symbol","type":"topic","url":"\/documentation\/compute\/uint8\/init(_:)-5e02","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt8/&__(_:_:)-1fquv":{"kind":"symbol","type":"topic","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"&>>","kind":"identifier"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:s5UInt8V","text":"UInt8"},{"text":", ","kind":"text"},{"text":"UInt8","preciseIdentifier":"s:s5UInt8V","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"UInt8","preciseIdentifier":"s:s5UInt8V","kind":"typeIdentifier"}],"abstract":[{"text":"Returns the result of shifting a value’s binary representation the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"specified number of digits to the right, masking the shift amount to the"},{"type":"text","text":" "},{"type":"text","text":"type’s bit width."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8\/&__(_:_:)-1fquv","title":"&>>(_:_:)","url":"\/documentation\/compute\/uint8\/&__(_:_:)-1fquv","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt8/random(in:using:)-3zjsj":{"url":"\/documentation\/compute\/uint8\/random(in:using:)-3zjsj","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8\/random(in:using:)-3zjsj","type":"topic","role":"symbol","abstract":[{"text":"Returns a random value within the specified range, using the given","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"generator as a source for randomness."}],"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"random","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"in","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Range","kind":"typeIdentifier","preciseIdentifier":"s:Sn"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":">, ","kind":"text"},{"text":"using","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"title":"random(in:using:)","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt8/&__(_:_:)-60i6u":{"title":"&<<(_:_:)","url":"\/documentation\/compute\/uint8\/&__(_:_:)-60i6u","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8\/&__(_:_:)-60i6u","type":"topic","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"&<<"},{"kind":"text","text":" "},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Other"},{"kind":"text","text":">("},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Other","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"role":"symbol","abstract":[{"text":"Returns the result of shifting a value’s binary representation the","type":"text"},{"type":"text","text":" "},{"text":"specified number of digits to the left, masking the shift amount to the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"type’s bit width."}],"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt8/&__=(_:_:)-16yhm":{"type":"topic","role":"symbol","url":"\/documentation\/compute\/uint8\/&__=(_:_:)-16yhm","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"&>>="},{"kind":"text","text":" "},{"kind":"text","text":"<"},{"text":"Other","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"text":"Other","kind":"typeIdentifier"},{"text":")","kind":"text"}],"abstract":[{"text":"Calculates the result of shifting a value’s binary representation the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"specified number of digits to the right, masking the shift amount to the"},{"text":" ","type":"text"},{"text":"type’s bit width, and stores the result in the left-hand-side variable.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8\/&__=(_:_:)-16yhm","title":"&>>=(_:_:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt8/bigEndian":{"url":"\/documentation\/compute\/uint8\/bigendian","abstract":[{"type":"text","text":"The big-endian representation of this integer."}],"type":"topic","role":"symbol","kind":"symbol","title":"bigEndian","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"bigEndian","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8\/bigEndian"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt8/&+=(_:_:)":{"kind":"symbol","type":"topic","abstract":[{"text":"Adds two values and stores the result in the left-hand-side variable,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"wrapping any overflow."}],"title":"&+=(_:_:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8\/&+=(_:_:)","role":"symbol","url":"\/documentation\/compute\/uint8\/&+=(_:_:)","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"&+="},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":")"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt8/&-(_:_:)":{"url":"\/documentation\/compute\/uint8\/&-(_:_:)","abstract":[{"type":"text","text":"Returns the difference of the two given values, wrapping the result in"},{"text":" ","type":"text"},{"type":"text","text":"case of any overflow."}],"type":"topic","role":"symbol","kind":"symbol","title":"&-(_:_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"&-","kind":"identifier"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8\/&-(_:_:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt8/swapByteOrderHostToPortable()":{"title":"swapByteOrderHostToPortable()","url":"\/documentation\/compute\/uint8\/swapbyteorderhosttoportable()","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8\/swapByteOrderHostToPortable()","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"swapByteOrderHostToPortable","kind":"identifier"},{"text":"()","kind":"text"}],"conformance":{"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"code":"ByteOrderSwappable","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"abstract":[],"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt8/&-=(_:_:)":{"kind":"symbol","type":"topic","abstract":[{"text":"Subtracts the second value from the first and stores the difference in the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"left-hand-side variable, wrapping any overflow."}],"title":"&-=(_:_:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8\/&-=(_:_:)","role":"symbol","url":"\/documentation\/compute\/uint8\/&-=(_:_:)","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"&-=","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":")"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt8/init(truncatingIfNeeded:)":{"url":"\/documentation\/compute\/uint8\/init(truncatingifneeded:)","abstract":[{"text":"Creates a new instance from the bit pattern of the given instance by","type":"text"},{"type":"text","text":" "},{"text":"truncating or sign-extending if needed to fit this type.","type":"text"}],"type":"topic","role":"symbol","kind":"symbol","title":"init(truncatingIfNeeded:)","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"truncatingIfNeeded"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8\/init(truncatingIfNeeded:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt8/&__(_:_:)-3qwyl":{"kind":"symbol","type":"topic","abstract":[{"text":"Returns the result of shifting a value’s binary representation the","type":"text"},{"type":"text","text":" "},{"text":"specified number of digits to the right, masking the shift amount to the","type":"text"},{"text":" ","type":"text"},{"text":"type’s bit width.","type":"text"}],"title":"&>>(_:_:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8\/&__(_:_:)-3qwyl","role":"symbol","url":"\/documentation\/compute\/uint8\/&__(_:_:)-3qwyl","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"&>>"},{"kind":"text","text":" "},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Other"},{"text":">(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Other"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt8/&__(_:_:)-6jqbr":{"url":"\/documentation\/compute\/uint8\/&__(_:_:)-6jqbr","abstract":[{"text":"Returns the result of shifting a value’s binary representation the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"specified number of digits to the right, masking the shift amount to the"},{"text":" ","type":"text"},{"type":"text","text":"type’s bit width."}],"type":"topic","role":"symbol","kind":"symbol","title":"&>>(_:_:)","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"&>>"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8\/&__(_:_:)-6jqbr"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt8/&*=(_:_:)":{"kind":"symbol","type":"topic","abstract":[{"text":"Multiplies two values and stores the result in the left-hand-side","type":"text"},{"text":" ","type":"text"},{"text":"variable, wrapping any overflow.","type":"text"}],"title":"&*=(_:_:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8\/&*=(_:_:)","role":"symbol","url":"\/documentation\/compute\/uint8\/&*=(_:_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"&*="},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":")"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt8/__(_:_:)-7yxgh":{"title":"<<(_:_:)","abstract":[{"text":"Returns the result of shifting a value’s binary representation the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"specified number of digits to the left."}],"url":"\/documentation\/compute\/uint8\/__(_:_:)-7yxgh","kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8\/__(_:_:)-7yxgh","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"<<","kind":"identifier"},{"text":" ","kind":"text"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Other"},{"text":">(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Other"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt8/~(_:)":{"url":"\/documentation\/compute\/uint8\/~(_:)","abstract":[{"type":"text","text":"Returns the inverse of the bits set in the argument."}],"type":"topic","role":"symbol","kind":"symbol","title":"~(_:)","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"~"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8\/~(_:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt8/init(littleEndian:)":{"abstract":[{"type":"text","text":"Creates an integer from its little-endian representation, changing the"},{"text":" ","type":"text"},{"text":"byte order if necessary.","type":"text"}],"type":"topic","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"text":"littleEndian","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":")","kind":"text"}],"kind":"symbol","url":"\/documentation\/compute\/uint8\/init(littleendian:)","role":"symbol","title":"init(littleEndian:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8\/init(littleEndian:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt8/bitWidth-swift.property":{"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"The number of bits in the binary representation of this value."}],"title":"bitWidth","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8\/bitWidth-swift.property","role":"symbol","url":"\/documentation\/compute\/uint8\/bitwidth-swift.property","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"bitWidth"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"}]},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt8/init(clamping:)":{"url":"\/documentation\/compute\/uint8\/init(clamping:)","abstract":[{"type":"text","text":"Creates a new instance with the representable value that’s closest to the"},{"type":"text","text":" "},{"text":"given integer.","type":"text"}],"type":"topic","role":"symbol","kind":"symbol","title":"init(clamping:)","fragments":[{"kind":"identifier","text":"init"},{"text":"<","kind":"text"},{"text":"Other","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"clamping","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Other"},{"kind":"text","text":")"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8\/init(clamping:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt8/swapByteOrderPortableToHost()":{"type":"topic","url":"\/documentation\/compute\/uint8\/swapbyteorderportabletohost()","role":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"ByteOrderSwappable"},{"type":"text","text":"."}]},"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8\/swapByteOrderPortableToHost()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"swapByteOrderPortableToHost"},{"text":"()","kind":"text"}],"abstract":[],"kind":"symbol","title":"swapByteOrderPortableToHost()"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt8/init(_:radix:)":{"title":"init(_:radix:)","fragments":[{"text":"init","kind":"identifier"},{"text":"?<","kind":"text"},{"kind":"genericParameter","text":"S"},{"text":">(","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"radix","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"text":")","kind":"text"}],"url":"\/documentation\/compute\/uint8\/init(_:radix:)","abstract":[{"type":"text","text":"Creates a new integer value from the given string and radix."}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8\/init(_:radix:)","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt8/&+(_:_:)":{"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Returns the sum of the two given values, wrapping the result in case of"},{"type":"text","text":" "},{"text":"any overflow.","type":"text"}],"title":"&+(_:_:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8\/&+(_:_:)","role":"symbol","url":"\/documentation\/compute\/uint8\/&+(_:_:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"&+"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt8/init(exactly:)-8szg6":{"fragments":[{"text":"init","kind":"identifier"},{"text":"?<","kind":"text"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"text":"exactly","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":")"}],"role":"symbol","title":"init(exactly:)","abstract":[{"type":"text","text":"Creates an integer from the given floating-point value, if it can be"},{"type":"text","text":" "},{"text":"represented exactly.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8\/init(exactly:)-8szg6","kind":"symbol","type":"topic","url":"\/documentation\/compute\/uint8\/init(exactly:)-8szg6"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt8/&__(_:_:)-7gp0b":{"kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"&<<"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:s5UInt8V","kind":"typeIdentifier","text":"UInt8"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s5UInt8V","text":"UInt8"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:s5UInt8V","kind":"typeIdentifier","text":"UInt8"}],"type":"topic","abstract":[{"text":"Returns the result of shifting a value’s binary representation the","type":"text"},{"text":" ","type":"text"},{"text":"specified number of digits to the left, masking the shift amount to the","type":"text"},{"type":"text","text":" "},{"text":"type’s bit width.","type":"text"}],"title":"&<<(_:_:)","role":"symbol","url":"\/documentation\/compute\/uint8\/&__(_:_:)-7gp0b","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8\/&__(_:_:)-7gp0b"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt8/&__(_:_:)-5m6yb":{"abstract":[{"text":"Returns the result of shifting a value’s binary representation the","type":"text"},{"type":"text","text":" "},{"text":"specified number of digits to the left, masking the shift amount to the","type":"text"},{"text":" ","type":"text"},{"text":"type’s bit width.","type":"text"}],"title":"&<<(_:_:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8\/&__(_:_:)-5m6yb","role":"symbol","url":"\/documentation\/compute\/uint8\/&__(_:_:)-5m6yb","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"&<<","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"}],"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt8/random(in:)-85h4o":{"kind":"symbol","role":"symbol","type":"topic","abstract":[{"type":"text","text":"Returns a random value within the specified range."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8\/random(in:)-85h4o","title":"random(in:)","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"random"},{"kind":"text","text":"("},{"text":"in","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SN","text":"ClosedRange","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"url":"\/documentation\/compute\/uint8\/random(in:)-85h4o"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt8/littleEndian":{"url":"\/documentation\/compute\/uint8\/littleendian","abstract":[{"text":"The little-endian representation of this integer.","type":"text"}],"type":"topic","role":"symbol","kind":"symbol","title":"littleEndian","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"littleEndian"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8\/littleEndian"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt8/&*(_:_:)":{"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Returns the product of the two given values, wrapping the result in case"},{"type":"text","text":" "},{"type":"text","text":"of any overflow."}],"title":"&*(_:_:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8\/&*(_:_:)","role":"symbol","url":"\/documentation\/compute\/uint8\/&*(_:_:)","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"&*"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}]}}}