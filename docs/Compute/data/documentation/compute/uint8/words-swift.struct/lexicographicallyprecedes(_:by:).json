{"abstract":[{"text":"Returns a Boolean value indicating whether the sequence precedes another","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"sequence in a lexicographical (dictionary) ordering, using the given"},{"text":" ","type":"text"},{"text":"predicate to compare elements.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8\/Words-swift.struct","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8\/Words-swift.struct\/Sequence-Implementations"]]},"kind":"symbol","schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8\/Words-swift.struct\/lexicographicallyPrecedes(_:by:)","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/uint8\/words-swift.struct\/lexicographicallyprecedes(_:by:)"]}],"sections":[],"metadata":{"externalID":"s:STsE25lexicographicallyPrecedes_2bySbqd___Sb7ElementQz_ADtKXEtKSTRd__ACQyd__ADRSlF::SYNTHESIZED::s:s5UInt8V5WordsV","symbolKind":"method","role":"symbol","extendedModule":"Swift","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"lexicographicallyPrecedes","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"OtherSequence"},{"kind":"text","text":">("},{"text":"OtherSequence","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"by","kind":"externalParam"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Element","preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":") "},{"text":"rethrows","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"roleHeading":"Instance Method","modules":[{"name":"Compute","relatedModules":["Swift"]}],"title":"lexicographicallyPrecedes(_:by:)"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"lexicographicallyPrecedes"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"OtherSequence"},{"kind":"text","text":">("},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"other","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"OtherSequence","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"by","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"areInIncreasingOrder"},{"kind":"text","text":": ("},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","preciseIdentifier":"s:ST7ElementQa","text":"Element","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:ST7ElementQa","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bool","text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"rethrows","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bool","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":" "},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"OtherSequence"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence","text":"Sequence","kind":"typeIdentifier","preciseIdentifier":"s:ST"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:ST7ElementQa","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","text":"Element","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"text":"OtherSequence","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element"}]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"A sequence to compare to this sequence."}],"type":"paragraph"}],"name":"other"},{"name":"areInIncreasingOrder","content":[{"inlineContent":[{"type":"text","text":"A predicate that returns "},{"code":"true","type":"codeVoice"},{"type":"text","text":" if its first"},{"text":" ","type":"text"},{"text":"argument should be ordered before its second argument; otherwise,","type":"text"},{"text":" ","type":"text"},{"code":"false","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}]}]},{"content":[{"anchor":"return-value","text":"Return Value","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"code":"true","type":"codeVoice"},{"type":"text","text":" if this sequence precedes "},{"code":"other","type":"codeVoice"},{"text":" in a dictionary","type":"text"},{"text":" ","type":"text"},{"text":"ordering as ordered by ","type":"text"},{"code":"areInIncreasingOrder","type":"codeVoice"},{"text":"; otherwise, ","type":"text"},{"code":"false","type":"codeVoice"},{"text":".","type":"text"}]}],"kind":"content"},{"kind":"content","content":[{"text":"Discussion","level":2,"anchor":"discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The predicate must be a "},{"inlineContent":[{"text":"strict weak ordering","type":"text"}],"type":"emphasis"},{"type":"text","text":" over the elements. That"},{"text":" ","type":"text"},{"type":"text","text":"is, for any elements "},{"type":"codeVoice","code":"a"},{"type":"text","text":", "},{"type":"codeVoice","code":"b"},{"type":"text","text":", and "},{"type":"codeVoice","code":"c"},{"type":"text","text":", the following conditions must"},{"text":" ","type":"text"},{"text":"hold:","type":"text"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"code":"areInIncreasingOrder(a, a)","type":"codeVoice"},{"text":" is always ","type":"text"},{"code":"false","type":"codeVoice"},{"type":"text","text":". (Irreflexivity)"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"If ","type":"text"},{"type":"codeVoice","code":"areInIncreasingOrder(a, b)"},{"text":" and ","type":"text"},{"code":"areInIncreasingOrder(b, c)","type":"codeVoice"},{"text":" are","type":"text"},{"text":" ","type":"text"},{"text":"both ","type":"text"},{"code":"true","type":"codeVoice"},{"type":"text","text":", then "},{"type":"codeVoice","code":"areInIncreasingOrder(a, c)"},{"text":" is also","type":"text"},{"type":"text","text":" "},{"code":"true","type":"codeVoice"},{"type":"text","text":". (Transitive comparability)"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Two elements are ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"incomparable"}]},{"text":" if neither is ordered before the other","type":"text"},{"type":"text","text":" "},{"text":"according to the predicate. If ","type":"text"},{"type":"codeVoice","code":"a"},{"type":"text","text":" and "},{"type":"codeVoice","code":"b"},{"type":"text","text":" are incomparable, and "},{"type":"codeVoice","code":"b"},{"type":"text","text":" "},{"text":"and ","type":"text"},{"code":"c","type":"codeVoice"},{"type":"text","text":" are incomparable, then "},{"code":"a","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"c","type":"codeVoice"},{"text":" are also incomparable.","type":"text"},{"type":"text","text":" "},{"text":"(Transitive incomparability)","type":"text"}]}]}],"type":"unorderedList"},{"name":"Note","type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"This method implements the mathematical notion of lexicographical","type":"text"},{"type":"text","text":" "},{"text":"ordering, which has no connection to Unicode.  If you are sorting","type":"text"},{"type":"text","text":" "},{"type":"text","text":"strings to present to the end user, use "},{"code":"String","type":"codeVoice"},{"type":"text","text":" APIs that perform"},{"text":" ","type":"text"},{"type":"text","text":"localized comparison instead."}]}],"style":"note"},{"type":"aside","name":"Complexity","style":"note","content":[{"inlineContent":[{"type":"text","text":"O("},{"inlineContent":[{"type":"text","text":"m"}],"type":"emphasis"},{"text":"), where ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"m"}]},{"type":"text","text":" is the lesser of the length of the"},{"text":" ","type":"text"},{"type":"text","text":"sequence and the length of "},{"type":"codeVoice","code":"other"},{"type":"text","text":"."}],"type":"paragraph"}]}]}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/UInt8/Words-swift.struct":{"abstract":[{"type":"text","text":"A type that represents the words of this integer."}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Words","kind":"identifier"}],"url":"\/documentation\/compute\/uint8\/words-swift.struct","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8\/Words-swift.struct","title":"UInt8.Words","role":"symbol","type":"topic","navigatorTitle":[{"text":"Words","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt8":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"UInt8","kind":"identifier"}],"navigatorTitle":[{"text":"UInt8","kind":"identifier"}],"title":"UInt8","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8","url":"\/documentation\/compute\/uint8","kind":"symbol","role":"symbol","type":"topic","abstract":[{"type":"text","text":"An 8-bit unsigned integer value"},{"text":" ","type":"text"},{"text":"type.","type":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence/Element":{"type":"topic","required":true,"abstract":[{"type":"text","text":"A type representing the sequence’s elements."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"symbol","url":"\/documentation\/compute\/sequence\/element","role":"symbol","title":"Element","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence":{"url":"\/documentation\/compute\/sequence","navigatorTitle":[{"kind":"identifier","text":"Sequence"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence","title":"Sequence","kind":"symbol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Sequence","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"A type that provides sequential, iterated access to its elements."}]},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt8/Words-swift.struct/Sequence-Implementations":{"abstract":[],"url":"\/documentation\/compute\/uint8\/words-swift.struct\/sequence-implementations","kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8\/Words-swift.struct\/Sequence-Implementations","title":"Sequence Implementations","role":"collectionGroup","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/Bool":{"url":"\/documentation\/compute\/bool","role":"symbol","title":"Bool","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Bool","kind":"identifier"}],"abstract":[{"type":"text","text":"A value type whose instances are either "},{"type":"codeVoice","code":"true"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"false"},{"text":".","type":"text"}],"navigatorTitle":[{"text":"Bool","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bool","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt8/Words-swift.struct/lexicographicallyPrecedes(_:by:)":{"abstract":[{"type":"text","text":"Returns a Boolean value indicating whether the sequence precedes another"},{"text":" ","type":"text"},{"type":"text","text":"sequence in a lexicographical (dictionary) ordering, using the given"},{"text":" ","type":"text"},{"type":"text","text":"predicate to compare elements."}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"lexicographicallyPrecedes","kind":"identifier"},{"kind":"text","text":"<"},{"text":"OtherSequence","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"OtherSequence"},{"text":", ","kind":"text"},{"text":"by","kind":"externalParam"},{"kind":"text","text":": ("},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:ST7ElementQa"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:ST7ElementQa"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") "},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"kind":"symbol","url":"\/documentation\/compute\/uint8\/words-swift.struct\/lexicographicallyprecedes(_:by:)","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8\/Words-swift.struct\/lexicographicallyPrecedes(_:by:)","title":"lexicographicallyPrecedes(_:by:)","type":"topic"}}}