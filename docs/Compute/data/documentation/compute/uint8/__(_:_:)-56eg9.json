{"abstract":[{"text":"Returns the result of shifting a value’s binary representation the","type":"text"},{"text":" ","type":"text"},{"text":"specified number of digits to the right.","type":"text"}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":">>","kind":"identifier"},{"kind":"text","text":" "},{"text":"<","kind":"text"},{"text":"RHS","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"internalParam","text":"lhs"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"rhs","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"RHS","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":" "},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"text":"RHS","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryInteger","kind":"typeIdentifier","preciseIdentifier":"s:Sz","text":"BinaryInteger"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"The value to shift."}],"type":"paragraph"}],"name":"lhs"},{"name":"rhs","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The number of bits to shift "},{"code":"lhs","type":"codeVoice"},{"type":"text","text":" to the right."}]}]}]},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"type":"codeVoice","code":">>"},{"type":"text","text":" operator performs a "},{"type":"emphasis","inlineContent":[{"type":"text","text":"smart shift"}]},{"text":", which defines a result for a","type":"text"},{"text":" ","type":"text"},{"text":"shift of any value.","type":"text"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Using a negative value for "},{"type":"codeVoice","code":"rhs"},{"type":"text","text":" performs a left shift using"},{"text":" ","type":"text"},{"code":"abs(rhs)","type":"codeVoice"},{"type":"text","text":"."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Using a value for ","type":"text"},{"type":"codeVoice","code":"rhs"},{"type":"text","text":" that is greater than or equal to the bit width"},{"type":"text","text":" "},{"text":"of ","type":"text"},{"code":"lhs","type":"codeVoice"},{"text":" is an ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"overshift","type":"text"}]},{"type":"text","text":". An overshift results in "},{"code":"-1","type":"codeVoice"},{"type":"text","text":" for a"},{"type":"text","text":" "},{"type":"text","text":"negative value of "},{"type":"codeVoice","code":"lhs"},{"type":"text","text":" or "},{"type":"codeVoice","code":"0"},{"text":" for a nonnegative value.","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Using any other value for ","type":"text"},{"code":"rhs","type":"codeVoice"},{"type":"text","text":" performs a right shift on "},{"code":"lhs","type":"codeVoice"},{"type":"text","text":" by that"},{"type":"text","text":" "},{"type":"text","text":"amount."}],"type":"paragraph"}]}],"type":"unorderedList"},{"inlineContent":[{"type":"text","text":"The following example defines "},{"type":"codeVoice","code":"x"},{"type":"text","text":" as an instance of "},{"type":"codeVoice","code":"UInt8"},{"type":"text","text":", an 8-bit,"},{"type":"text","text":" "},{"type":"text","text":"unsigned integer type. If you use "},{"code":"2","type":"codeVoice"},{"text":" as the right-hand-side value in an","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"operation on "},{"code":"x","type":"codeVoice"},{"type":"text","text":", the value is shifted right by two bits."}],"type":"paragraph"},{"code":["let x: UInt8 = 30                 \/\/ 0b00011110","let y = x >> 2","\/\/ y == 7                         \/\/ 0b00000111"],"syntax":null,"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you use "},{"type":"codeVoice","code":"11"},{"type":"text","text":" as "},{"code":"rhs","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"x"},{"type":"text","text":" is overshifted such that all of its bits"},{"type":"text","text":" "},{"type":"text","text":"are set to zero."}]},{"syntax":null,"type":"codeListing","code":["let z = x >> 11","\/\/ z == 0                         \/\/ 0b00000000"]},{"inlineContent":[{"text":"Using a negative value as ","type":"text"},{"type":"codeVoice","code":"rhs"},{"type":"text","text":" is the same as performing a left shift"},{"text":" ","type":"text"},{"text":"using ","type":"text"},{"code":"abs(rhs)","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":["let a = x >> -3","\/\/ a == 240                       \/\/ 0b11110000","let b = x << 3","\/\/ b == 240                       \/\/ 0b11110000"]},{"type":"paragraph","inlineContent":[{"text":"Right shift operations on negative values “fill in” the high bits with","type":"text"},{"type":"text","text":" "},{"type":"text","text":"ones instead of zeros."}]},{"code":["let q: Int8 = -30                 \/\/ 0b11100010","let r = q >> 2","\/\/ r == -8                        \/\/ 0b11111000","","let s = q >> 11","\/\/ s == -1                        \/\/ 0b11111111"],"type":"codeListing","syntax":null}]}],"kind":"symbol","sections":[],"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8\/__(_:_:)-56eg9","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8\/BinaryInteger-Implementations"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/uint8\/__(_:_:)-56eg9"]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"metadata":{"symbolKind":"op","roleHeading":"Operator","extendedModule":"Swift","externalID":"s:SzsE2ggoiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:s5UInt8V","role":"symbol","modules":[{"relatedModules":["Swift"],"name":"Compute"}],"title":">>(_:_:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":">>"},{"kind":"text","text":" "},{"text":"<","kind":"text"},{"text":"RHS","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"RHS","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}]},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/BinaryInteger":{"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"BinaryInteger"}],"navigatorTitle":[{"kind":"identifier","text":"BinaryInteger"}],"url":"\/documentation\/compute\/binaryinteger","type":"topic","abstract":[{"type":"text","text":"An integer type with a binary representation."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryInteger","title":"BinaryInteger","kind":"symbol","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt8":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"UInt8","kind":"identifier"}],"navigatorTitle":[{"text":"UInt8","kind":"identifier"}],"title":"UInt8","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8","url":"\/documentation\/compute\/uint8","kind":"symbol","role":"symbol","type":"topic","abstract":[{"type":"text","text":"An 8-bit unsigned integer value"},{"text":" ","type":"text"},{"text":"type.","type":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt8/BinaryInteger-Implementations":{"abstract":[],"title":"BinaryInteger Implementations","type":"topic","kind":"article","url":"\/documentation\/compute\/uint8\/binaryinteger-implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8\/BinaryInteger-Implementations","role":"collectionGroup"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt8/__(_:_:)-56eg9":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8\/__(_:_:)-56eg9","url":"\/documentation\/compute\/uint8\/__(_:_:)-56eg9","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":">>"},{"text":" ","kind":"text"},{"text":"<","kind":"text"},{"text":"RHS","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"RHS","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"type":"topic","abstract":[{"text":"Returns the result of shifting a value’s binary representation the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"specified number of digits to the right."}],"role":"symbol","title":">>(_:_:)","kind":"symbol"}}}