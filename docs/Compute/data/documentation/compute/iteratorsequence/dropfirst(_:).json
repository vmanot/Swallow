{"abstract":[{"text":"Returns a sequence containing all but the given number of initial","type":"text"},{"type":"text","text":" "},{"type":"text","text":"elements."}],"sections":[],"metadata":{"modules":[{"relatedModules":["Swift"],"name":"Compute"}],"externalID":"s:STsE9dropFirstys04DropB8SequenceVyxGSiF::SYNTHESIZED::s:s16IteratorSequenceV","roleHeading":"Instance Method","role":"symbol","title":"dropFirst(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"dropFirst"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"DropFirstSequence","preciseIdentifier":"s:s17DropFirstSequenceV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":">","kind":"text"}],"extendedModule":"Swift","symbolKind":"method"},"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/IteratorSequence\/dropFirst(_:)"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"dropFirst"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"k"},{"kind":"text","text":": "},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"text":" = 1) -> ","kind":"text"},{"text":"DropFirstSequence","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/DropFirstSequence","preciseIdentifier":"s:s17DropFirstSequenceV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The number of elements to drop from the beginning of"},{"type":"text","text":" "},{"text":"the sequence. ","type":"text"},{"code":"k","type":"codeVoice"},{"text":" must be greater than or equal to zero.","type":"text"}]}],"name":"k"}]},{"kind":"content","content":[{"type":"heading","anchor":"return-value","level":2,"text":"Return Value"},{"inlineContent":[{"type":"text","text":"A sequence starting after the specified number of"},{"text":" ","type":"text"},{"type":"text","text":"elements."}],"type":"paragraph"}]},{"content":[{"level":2,"text":"Discussion","type":"heading","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"If the number of elements to drop exceeds the number of elements in","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the sequence, the result is an empty sequence."}]},{"type":"codeListing","syntax":null,"code":["let numbers = [1, 2, 3, 4, 5]","print(numbers.dropFirst(2))","\/\/ Prints \"[3, 4, 5]\"","print(numbers.dropFirst(10))","\/\/ Prints \"[]\""]},{"type":"aside","name":"Complexity","style":"note","content":[{"type":"paragraph","inlineContent":[{"text":"O(1), with O(","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"k"}]},{"text":") deferred to each iteration of the result,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"where "},{"type":"emphasis","inlineContent":[{"text":"k","type":"text"}]},{"text":" is the number of elements to drop from the beginning of","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the sequence."}]}]}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/IteratorSequence","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/IteratorSequence\/Sequence-Implementations"]]},"variants":[{"paths":["\/documentation\/compute\/iteratorsequence\/dropfirst(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/IteratorSequence/Sequence-Implementations":{"kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/IteratorSequence\/Sequence-Implementations","title":"Sequence Implementations","type":"topic","url":"\/documentation\/compute\/iteratorsequence\/sequence-implementations","abstract":[],"role":"collectionGroup"},"doc://com.swallow.documentation.Compute/documentation/Compute/IteratorSequence/dropFirst(_:)":{"title":"dropFirst(_:)","type":"topic","url":"\/documentation\/compute\/iteratorsequence\/dropfirst(_:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"dropFirst"},{"text":"(","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:s17DropFirstSequenceV","text":"DropFirstSequence","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":">","kind":"text"}],"abstract":[{"type":"text","text":"Returns a sequence containing all but the given number of initial"},{"text":" ","type":"text"},{"text":"elements.","type":"text"}],"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/IteratorSequence\/dropFirst(_:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/IteratorSequence":{"abstract":[{"type":"text","text":"A sequence built around an iterator of type "},{"type":"codeVoice","code":"Base"},{"type":"text","text":"."}],"title":"IteratorSequence","type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/compute\/iteratorsequence","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"IteratorSequence","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/IteratorSequence","navigatorTitle":[{"text":"IteratorSequence","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/DropFirstSequence":{"abstract":[{"type":"text","text":"A sequence that lazily consumes and drops "},{"type":"codeVoice","code":"n"},{"type":"text","text":" elements from an underlying"},{"text":" ","type":"text"},{"code":"Base","type":"codeVoice"},{"type":"text","text":" iterator before possibly returning the first available element."}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"DropFirstSequence"}],"type":"topic","role":"symbol","url":"\/documentation\/compute\/dropfirstsequence","navigatorTitle":[{"kind":"identifier","text":"DropFirstSequence"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/DropFirstSequence","title":"DropFirstSequence","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","abstract":[{"type":"text","text":"A signed integer value type."}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Int","kind":"identifier"}],"navigatorTitle":[{"text":"Int","kind":"identifier"}],"title":"Int","url":"\/documentation\/compute\/int","kind":"symbol"}}}