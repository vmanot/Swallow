{"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/IteratorSequence","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/IteratorSequence\/Sequence-Implementations"]]},"metadata":{"modules":[{"relatedModules":["Swift"],"name":"Compute"}],"externalID":"s:STsE3max2by7ElementQzSgSbAD_ADtKXE_tKF::SYNTHESIZED::s:s16IteratorSequenceV","extendedModule":"Swift","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"max","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"by"},{"kind":"text","text":": ("},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:ST7ElementQa"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier","text":"Element"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"kind":"text","text":"?"}],"title":"max(by:)","role":"symbol","roleHeading":"Instance Method","symbolKind":"method"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"@warn_unqualified_access","kind":"attribute"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"max","kind":"identifier"},{"text":"(","kind":"text"},{"text":"by","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"areInIncreasingOrder"},{"text":": (","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:ST7ElementQa"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":") "},{"text":"rethrows","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","text":"Element","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element"},{"kind":"text","text":"?"}],"languages":["swift"]}]},{"parameters":[{"content":[{"inlineContent":[{"type":"text","text":"A predicate that returns "},{"type":"codeVoice","code":"true"},{"text":" if its","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"first argument should be ordered before its second argument;"},{"type":"text","text":" "},{"text":"otherwise, ","type":"text"},{"code":"false","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}],"name":"areInIncreasingOrder"}],"kind":"parameters"},{"kind":"content","content":[{"type":"heading","anchor":"return-value","text":"Return Value","level":2},{"inlineContent":[{"type":"text","text":"The sequenceâ€™s maximum element if the sequence is not empty;"},{"type":"text","text":" "},{"type":"text","text":"otherwise, "},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"inlineContent":[{"type":"text","text":"The predicate must be a "},{"inlineContent":[{"text":"strict weak ordering","type":"text"}],"type":"emphasis"},{"type":"text","text":" over the elements. That"},{"type":"text","text":" "},{"type":"text","text":"is, for any elements "},{"code":"a","type":"codeVoice"},{"text":", ","type":"text"},{"type":"codeVoice","code":"b"},{"text":", and ","type":"text"},{"type":"codeVoice","code":"c"},{"type":"text","text":", the following conditions must"},{"type":"text","text":" "},{"type":"text","text":"hold:"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"code":"areInIncreasingOrder(a, a)","type":"codeVoice"},{"text":" is always ","type":"text"},{"type":"codeVoice","code":"false"},{"type":"text","text":". (Irreflexivity)"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If "},{"code":"areInIncreasingOrder(a, b)","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"areInIncreasingOrder(b, c)","type":"codeVoice"},{"text":" are","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"both "},{"type":"codeVoice","code":"true"},{"type":"text","text":", then "},{"code":"areInIncreasingOrder(a, c)","type":"codeVoice"},{"type":"text","text":" is also"},{"text":" ","type":"text"},{"code":"true","type":"codeVoice"},{"text":". (Transitive comparability)","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Two elements are "},{"inlineContent":[{"type":"text","text":"incomparable"}],"type":"emphasis"},{"text":" if neither is ordered before the other","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"according to the predicate. If "},{"code":"a","type":"codeVoice"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"b"},{"text":" are incomparable, and ","type":"text"},{"code":"b","type":"codeVoice"},{"type":"text","text":" "},{"text":"and ","type":"text"},{"code":"c","type":"codeVoice"},{"type":"text","text":" are incomparable, then "},{"code":"a","type":"codeVoice"},{"type":"text","text":" and "},{"code":"c","type":"codeVoice"},{"text":" are also incomparable.","type":"text"},{"type":"text","text":" "},{"text":"(Transitive incomparability)","type":"text"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This example shows how to use the "},{"code":"max(by:)","type":"codeVoice"},{"text":" method on a","type":"text"},{"type":"text","text":" "},{"text":"dictionary to find the key-value pair with the highest value.","type":"text"}]},{"code":["let hues = [\"Heliotrope\": 296, \"Coral\": 16, \"Aquamarine\": 156]","let greatestHue = hues.max { a, b in a.value < b.value }","print(greatestHue)","\/\/ Prints \"Optional((key: \"Heliotrope\", value: 296))\""],"type":"codeListing","syntax":null},{"name":"Complexity","style":"note","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"O("},{"inlineContent":[{"text":"n","type":"text"}],"type":"emphasis"},{"type":"text","text":"), where "},{"inlineContent":[{"type":"text","text":"n"}],"type":"emphasis"},{"type":"text","text":" is the length of the sequence."}]}]}],"kind":"content"}],"abstract":[{"text":"Returns the maximum element in the sequence, using the given predicate","type":"text"},{"type":"text","text":" "},{"type":"text","text":"as the comparison between elements."}],"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/IteratorSequence\/max(by:)"},"schemaVersion":{"minor":3,"major":0,"patch":0},"variants":[{"paths":["\/documentation\/compute\/iteratorsequence\/max(by:)"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","references":{"doc://com.swallow.documentation.Compute/documentation/Compute/IteratorSequence":{"abstract":[{"type":"text","text":"A sequence built around an iterator of type "},{"type":"codeVoice","code":"Base"},{"type":"text","text":"."}],"title":"IteratorSequence","type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/compute\/iteratorsequence","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"IteratorSequence","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/IteratorSequence","navigatorTitle":[{"text":"IteratorSequence","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/IteratorSequence/max(by:)":{"type":"topic","abstract":[{"type":"text","text":"Returns the maximum element in the sequence, using the given predicate"},{"text":" ","type":"text"},{"type":"text","text":"as the comparison between elements."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/IteratorSequence\/max(by:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"max"},{"kind":"text","text":"("},{"text":"by","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier","text":"Element"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier","text":"Element"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") ","kind":"text"},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"text":"?","kind":"text"}],"title":"max(by:)","kind":"symbol","url":"\/documentation\/compute\/iteratorsequence\/max(by:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence/Element":{"type":"topic","required":true,"abstract":[{"type":"text","text":"A type representing the sequenceâ€™s elements."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"symbol","url":"\/documentation\/compute\/sequence\/element","role":"symbol","title":"Element","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/IteratorSequence/Sequence-Implementations":{"kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/IteratorSequence\/Sequence-Implementations","title":"Sequence Implementations","type":"topic","url":"\/documentation\/compute\/iteratorsequence\/sequence-implementations","abstract":[],"role":"collectionGroup"},"doc://com.swallow.documentation.Compute/documentation/Compute/Bool":{"url":"\/documentation\/compute\/bool","role":"symbol","title":"Bool","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Bool","kind":"identifier"}],"abstract":[{"type":"text","text":"A value type whose instances are either "},{"type":"codeVoice","code":"true"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"false"},{"text":".","type":"text"}],"navigatorTitle":[{"text":"Bool","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bool","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"}}}