{"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"prefix","kind":"identifier"},{"kind":"text","text":"("},{"text":"while","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"predicate"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Element","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bool","text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") ","kind":"text"},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> ["},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","text":"Element"},{"text":"]","kind":"text"}]}]},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"A closure that takes an element of the sequence as","type":"text"},{"text":" ","type":"text"},{"text":"its argument and returns a Boolean value indicating whether the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"element should be included in the result."}]}],"name":"predicate"}],"kind":"parameters"},{"kind":"content","content":[{"level":2,"anchor":"return-value","text":"Return Value","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"A sequence of the initial, consecutive elements that","type":"text"},{"type":"text","text":" "},{"type":"text","text":"satisfy "},{"code":"predicate","type":"codeVoice"},{"type":"text","text":"."}]}]},{"content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"inlineContent":[{"type":"text","text":"The following example uses the "},{"code":"prefix(while:)","type":"codeVoice"},{"type":"text","text":" method to find the"},{"type":"text","text":" "},{"text":"positive numbers at the beginning of the ","type":"text"},{"code":"numbers","type":"codeVoice"},{"type":"text","text":" array. Every element"},{"type":"text","text":" "},{"text":"of ","type":"text"},{"code":"numbers","type":"codeVoice"},{"type":"text","text":" up to, but not including, the first negative value is"},{"type":"text","text":" "},{"text":"included in the result.","type":"text"}],"type":"paragraph"},{"code":["let numbers = [3, 7, 4, -2, 9, -6, 10, 1]","let positivePrefix = numbers.prefix(while: { $0 > 0 })","\/\/ positivePrefix == [3, 7, 4]"],"type":"codeListing","syntax":null},{"type":"paragraph","inlineContent":[{"text":"If ","type":"text"},{"type":"codeVoice","code":"predicate"},{"type":"text","text":" matches every element in the sequence, the resulting"},{"type":"text","text":" "},{"type":"text","text":"sequence contains every element of the sequence."}]},{"type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"O("},{"inlineContent":[{"text":"k","type":"text"}],"type":"emphasis"},{"type":"text","text":"), where "},{"inlineContent":[{"text":"k","type":"text"}],"type":"emphasis"},{"text":" is the length of the result.","type":"text"}]}],"style":"note","name":"Complexity"}],"kind":"content"}],"variants":[{"paths":["\/documentation\/compute\/iteratorsequence\/prefix(while:)"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","abstract":[{"type":"text","text":"Returns a sequence containing the initial, consecutive elements that"},{"text":" ","type":"text"},{"type":"text","text":"satisfy the given predicate."}],"metadata":{"roleHeading":"Instance Method","extendedModule":"Swift","modules":[{"name":"Compute","relatedModules":["Swift"]}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"prefix","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"while"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"rethrows","kind":"keyword"},{"kind":"text","text":" -> ["},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier","text":"Element"},{"text":"]","kind":"text"}],"role":"symbol","title":"prefix(while:)","externalID":"s:STsE6prefix5whileSay7ElementQzGSbADKXE_tKF::SYNTHESIZED::s:s16IteratorSequenceV","symbolKind":"method"},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/IteratorSequence","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/IteratorSequence\/Sequence-Implementations"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/IteratorSequence\/prefix(while:)"},"schemaVersion":{"minor":3,"major":0,"patch":0},"sections":[],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/IteratorSequence/prefix(while:)":{"url":"\/documentation\/compute\/iteratorsequence\/prefix(while:)","title":"prefix(while:)","kind":"symbol","type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/IteratorSequence\/prefix(while:)","role":"symbol","abstract":[{"type":"text","text":"Returns a sequence containing the initial, consecutive elements that"},{"text":" ","type":"text"},{"text":"satisfy the given predicate.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"prefix"},{"text":"(","kind":"text"},{"text":"while","kind":"externalParam"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") ","kind":"text"},{"kind":"keyword","text":"rethrows"},{"text":" -> [","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier","text":"Element"},{"text":"]","kind":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/IteratorSequence":{"abstract":[{"type":"text","text":"A sequence built around an iterator of type "},{"type":"codeVoice","code":"Base"},{"type":"text","text":"."}],"title":"IteratorSequence","type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/compute\/iteratorsequence","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"IteratorSequence","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/IteratorSequence","navigatorTitle":[{"text":"IteratorSequence","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/IteratorSequence/Sequence-Implementations":{"kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/IteratorSequence\/Sequence-Implementations","title":"Sequence Implementations","type":"topic","url":"\/documentation\/compute\/iteratorsequence\/sequence-implementations","abstract":[],"role":"collectionGroup"},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence/Element":{"type":"topic","required":true,"abstract":[{"type":"text","text":"A type representing the sequenceâ€™s elements."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"symbol","url":"\/documentation\/compute\/sequence\/element","role":"symbol","title":"Element","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Bool":{"url":"\/documentation\/compute\/bool","role":"symbol","title":"Bool","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Bool","kind":"identifier"}],"abstract":[{"type":"text","text":"A value type whose instances are either "},{"type":"codeVoice","code":"true"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"false"},{"text":".","type":"text"}],"navigatorTitle":[{"text":"Bool","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bool","kind":"symbol"}}}