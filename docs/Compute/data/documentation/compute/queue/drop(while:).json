{"metadata":{"roleHeading":"Instance Method","title":"drop(while:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"drop"},{"kind":"text","text":"("},{"text":"while","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier","text":"Element"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"DropWhileSequence","preciseIdentifier":"s:s17DropWhileSequenceV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"extendedModule":"Swift","role":"symbol","modules":[{"name":"Compute","relatedModules":["Swift"]}],"externalID":"s:STsE4drop5whiles17DropWhileSequenceVyxGSb7ElementQzKXE_tKF::SYNTHESIZED::s:7Compute5QueueV","symbolKind":"method"},"kind":"symbol","identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Queue\/drop(while:)","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"drop","kind":"identifier"},{"text":"(","kind":"text"},{"text":"while","kind":"externalParam"},{"kind":"text","text":" "},{"text":"predicate","kind":"internalParam"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bool","preciseIdentifier":"s:Sb","text":"Bool"},{"text":") ","kind":"text"},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/DropWhileSequence","text":"DropWhileSequence","kind":"typeIdentifier","preciseIdentifier":"s:s17DropWhileSequenceV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"predicate","content":[{"inlineContent":[{"type":"text","text":"A closure that takes an element of the sequence as"},{"type":"text","text":" "},{"text":"its argument and returns a Boolean value indicating whether the","type":"text"},{"text":" ","type":"text"},{"text":"element should be included in the result.","type":"text"}],"type":"paragraph"}]}]},{"kind":"content","content":[{"text":"Return Value","type":"heading","anchor":"return-value","level":2},{"type":"paragraph","inlineContent":[{"text":"A sequence starting after the initial, consecutive elements","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"that satisfy "},{"code":"predicate","type":"codeVoice"},{"text":".","type":"text"}]}]},{"content":[{"level":2,"type":"heading","anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"The following example uses the ","type":"text"},{"type":"codeVoice","code":"drop(while:)"},{"type":"text","text":" method to skip over the"},{"text":" ","type":"text"},{"type":"text","text":"positive numbers at the beginning of the "},{"type":"codeVoice","code":"numbers"},{"text":" array. The result","type":"text"},{"type":"text","text":" "},{"type":"text","text":"begins with the first element of "},{"type":"codeVoice","code":"numbers"},{"type":"text","text":" that does not satisfy"},{"text":" ","type":"text"},{"code":"predicate","type":"codeVoice"},{"text":".","type":"text"}]},{"syntax":null,"code":["let numbers = [3, 7, 4, -2, 9, -6, 10, 1]","let startingWithNegative = numbers.drop(while: { $0 > 0 })","\/\/ startingWithNegative == [-2, 9, -6, 10, 1]"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"If ","type":"text"},{"code":"predicate","type":"codeVoice"},{"text":" matches every element in the sequence, the result is an","type":"text"},{"text":" ","type":"text"},{"text":"empty sequence.","type":"text"}]},{"content":[{"inlineContent":[{"text":"O(","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"k"}]},{"text":"), where ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"k","type":"text"}]},{"type":"text","text":" is the number of elements to drop from"},{"type":"text","text":" "},{"text":"the beginning of the sequence.","type":"text"}],"type":"paragraph"}],"type":"aside","style":"note","name":"Complexity"}],"kind":"content"}],"sections":[],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Queue","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Queue\/Sequence-Implementations"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/queue\/drop(while:)"]}],"abstract":[{"type":"text","text":"Returns a sequence by skipping the initial, consecutive elements that"},{"text":" ","type":"text"},{"type":"text","text":"satisfy the given predicate."}],"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Queue/Sequence-Implementations":{"url":"\/documentation\/compute\/queue\/sequence-implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Queue\/Sequence-Implementations","role":"collectionGroup","kind":"article","title":"Sequence Implementations","type":"topic","abstract":[]},"doc://com.swallow.documentation.Compute/documentation/Compute/Queue/drop(while:)":{"url":"\/documentation\/compute\/queue\/drop(while:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Queue\/drop(while:)","abstract":[{"type":"text","text":"Returns a sequence by skipping the initial, consecutive elements that"},{"type":"text","text":" "},{"text":"satisfy the given predicate.","type":"text"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"drop","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"while"},{"text":": (","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Element","preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"text":" -> ","kind":"text"},{"text":"DropWhileSequence","kind":"typeIdentifier","preciseIdentifier":"s:s17DropWhileSequenceV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}],"type":"topic","role":"symbol","title":"drop(while:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/DropWhileSequence":{"abstract":[{"type":"text","text":"A sequence that lazily consumes and drops "},{"type":"codeVoice","code":"n"},{"type":"text","text":" elements from an underlying"},{"type":"text","text":" "},{"type":"codeVoice","code":"Base"},{"text":" iterator before possibly returning the first available element.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"DropWhileSequence","kind":"identifier"}],"url":"\/documentation\/compute\/dropwhilesequence","title":"DropWhileSequence","role":"symbol","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/DropWhileSequence","type":"topic","navigatorTitle":[{"text":"DropWhileSequence","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Bool":{"url":"\/documentation\/compute\/bool","role":"symbol","title":"Bool","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Bool","kind":"identifier"}],"abstract":[{"type":"text","text":"A value type whose instances are either "},{"type":"codeVoice","code":"true"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"false"},{"text":".","type":"text"}],"navigatorTitle":[{"text":"Bool","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bool","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Queue":{"url":"\/documentation\/compute\/queue","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Queue","kind":"symbol","title":"Queue","role":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Queue","kind":"identifier"}],"abstract":[],"navigatorTitle":[{"text":"Queue","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence/Element":{"type":"topic","required":true,"abstract":[{"type":"text","text":"A type representing the sequenceâ€™s elements."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"symbol","url":"\/documentation\/compute\/sequence\/element","role":"symbol","title":"Element","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"identifier"}]}}}