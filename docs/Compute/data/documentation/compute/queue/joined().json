{"sections":[],"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Queue\/joined()","interfaceLanguage":"swift"},"kind":"symbol","metadata":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"joined","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"FlattenSequence","kind":"typeIdentifier","preciseIdentifier":"s:s15FlattenSequenceV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":">","kind":"text"}],"symbolKind":"method","externalID":"s:STsST7ElementRpzrlE6joineds15FlattenSequenceVyxGyF::SYNTHESIZED::s:7Compute5QueueV","modules":[{"name":"Compute","relatedModules":["Swift"]}],"extendedModule":"Swift","roleHeading":"Instance Method","role":"symbol","title":"joined()","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Element"},{"text":" conforms to ","type":"text"},{"code":"Sequence","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]}},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"joined"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FlattenSequence","preciseIdentifier":"s:s15FlattenSequenceV","text":"FlattenSequence"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"level":2,"anchor":"return-value","type":"heading","text":"Return Value"},{"inlineContent":[{"type":"text","text":"A flattened view of the elements of this"},{"type":"text","text":" "},{"text":"sequence of sequences.","type":"text"}],"type":"paragraph"}],"kind":"content"},{"content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"inlineContent":[{"type":"text","text":"In this example, an array of three ranges is flattened so that the"},{"type":"text","text":" "},{"text":"elements of each range can be iterated in turn.","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":["let ranges = [0..<3, 8..<10, 15..<17]","","\/\/ A for-in loop over 'ranges' accesses each range:","for range in ranges {","  print(range)","}","\/\/ Prints \"0..<3\"","\/\/ Prints \"8..<10\"","\/\/ Prints \"15..<17\"","","\/\/ Use 'joined()' to access each element of each range:","for index in ranges.joined() {","    print(index, terminator: \" \")","}","\/\/ Prints: \"0 1 2 8 9 15 16\""]}],"kind":"content"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Queue","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Queue\/Sequence-Implementations"]]},"abstract":[{"type":"text","text":"Returns the elements of this sequence of sequences, concatenated."}],"variants":[{"paths":["\/documentation\/compute\/queue\/joined()"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Queue":{"url":"\/documentation\/compute\/queue","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Queue","kind":"symbol","title":"Queue","role":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Queue","kind":"identifier"}],"abstract":[],"navigatorTitle":[{"text":"Queue","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Queue/Sequence-Implementations":{"url":"\/documentation\/compute\/queue\/sequence-implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Queue\/Sequence-Implementations","role":"collectionGroup","kind":"article","title":"Sequence Implementations","type":"topic","abstract":[]},"doc://com.swallow.documentation.Compute/documentation/Compute/FlattenSequence":{"url":"\/documentation\/compute\/flattensequence","navigatorTitle":[{"kind":"identifier","text":"FlattenSequence"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FlattenSequence","title":"FlattenSequence","kind":"symbol","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"FlattenSequence"}],"type":"topic","abstract":[{"type":"text","text":"A sequence consisting of all the elements contained in each segment"},{"text":" ","type":"text"},{"text":"contained in some ","type":"text"},{"code":"Base","type":"codeVoice"},{"type":"text","text":" sequence."}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Queue/joined()":{"url":"\/documentation\/compute\/queue\/joined()","type":"topic","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Element","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sequence"},{"type":"text","text":"."}]},"role":"symbol","abstract":[{"text":"Returns the elements of this sequence of sequences, concatenated.","type":"text"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"joined"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s15FlattenSequenceV","text":"FlattenSequence"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Queue\/joined()","title":"joined()"}}}