{"sections":[],"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Queue\/prefix(while:)","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"prefix"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"while"},{"text":" ","kind":"text"},{"text":"predicate","kind":"internalParam"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bool","text":"Bool"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"kind":"text","text":" -> ["},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Element","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","preciseIdentifier":"s:ST7ElementQa"},{"text":"]","kind":"text"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"A closure that takes an element of the sequence as","type":"text"},{"type":"text","text":" "},{"text":"its argument and returns a Boolean value indicating whether the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"element should be included in the result."}]}],"name":"predicate"}]},{"content":[{"type":"heading","text":"Return Value","level":2,"anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A sequence of the initial, consecutive elements that"},{"type":"text","text":" "},{"type":"text","text":"satisfy "},{"code":"predicate","type":"codeVoice"},{"type":"text","text":"."}]}],"kind":"content"},{"content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"The following example uses the ","type":"text"},{"code":"prefix(while:)","type":"codeVoice"},{"text":" method to find the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"positive numbers at the beginning of the "},{"code":"numbers","type":"codeVoice"},{"type":"text","text":" array. Every element"},{"type":"text","text":" "},{"text":"of ","type":"text"},{"code":"numbers","type":"codeVoice"},{"type":"text","text":" up to, but not including, the first negative value is"},{"type":"text","text":" "},{"type":"text","text":"included in the result."}]},{"syntax":null,"type":"codeListing","code":["let numbers = [3, 7, 4, -2, 9, -6, 10, 1]","let positivePrefix = numbers.prefix(while: { $0 > 0 })","\/\/ positivePrefix == [3, 7, 4]"]},{"type":"paragraph","inlineContent":[{"text":"If ","type":"text"},{"code":"predicate","type":"codeVoice"},{"text":" matches every element in the sequence, the resulting","type":"text"},{"text":" ","type":"text"},{"text":"sequence contains every element of the sequence.","type":"text"}]},{"type":"aside","name":"Complexity","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"O("},{"type":"emphasis","inlineContent":[{"type":"text","text":"k"}]},{"type":"text","text":"), where "},{"inlineContent":[{"text":"k","type":"text"}],"type":"emphasis"},{"type":"text","text":" is the length of the result."}]}],"style":"note"}],"kind":"content"}],"kind":"symbol","metadata":{"title":"prefix(while:)","role":"symbol","externalID":"s:STsE6prefix5whileSay7ElementQzGSbADKXE_tKF::SYNTHESIZED::s:7Compute5QueueV","modules":[{"relatedModules":["Swift"],"name":"Compute"}],"extendedModule":"Swift","roleHeading":"Instance Method","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"prefix"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"while"},{"kind":"text","text":": ("},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") ","kind":"text"},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> ["},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"text":"]","kind":"text"}]},"abstract":[{"text":"Returns a sequence containing the initial, consecutive elements that","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"satisfy the given predicate."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/queue\/prefix(while:)"]}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Queue","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Queue\/Sequence-Implementations"]]},"schemaVersion":{"patch":0,"minor":3,"major":0},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence/Element":{"type":"topic","required":true,"abstract":[{"type":"text","text":"A type representing the sequenceâ€™s elements."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"symbol","url":"\/documentation\/compute\/sequence\/element","role":"symbol","title":"Element","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Queue/Sequence-Implementations":{"url":"\/documentation\/compute\/queue\/sequence-implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Queue\/Sequence-Implementations","role":"collectionGroup","kind":"article","title":"Sequence Implementations","type":"topic","abstract":[]},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Queue":{"url":"\/documentation\/compute\/queue","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Queue","kind":"symbol","title":"Queue","role":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Queue","kind":"identifier"}],"abstract":[],"navigatorTitle":[{"text":"Queue","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Bool":{"url":"\/documentation\/compute\/bool","role":"symbol","title":"Bool","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Bool","kind":"identifier"}],"abstract":[{"type":"text","text":"A value type whose instances are either "},{"type":"codeVoice","code":"true"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"false"},{"text":".","type":"text"}],"navigatorTitle":[{"text":"Bool","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bool","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Queue/prefix(while:)":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Queue\/prefix(while:)","url":"\/documentation\/compute\/queue\/prefix(while:)","title":"prefix(while:)","kind":"symbol","abstract":[{"text":"Returns a sequence containing the initial, consecutive elements that","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"satisfy the given predicate."}],"type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"prefix","kind":"identifier"},{"text":"(","kind":"text"},{"text":"while","kind":"externalParam"},{"kind":"text","text":": ("},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"text":" -> [","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"text":"]","kind":"text"}]}}}