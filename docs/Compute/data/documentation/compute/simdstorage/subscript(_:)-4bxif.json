{"abstract":[{"type":"text","text":"Extracts the scalars at specified indices to form a SIMD64."}],"metadata":{"symbolKind":"subscript","fragments":[{"kind":"keyword","text":"subscript"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Index"},{"kind":"text","text":">("},{"preciseIdentifier":"s:s6SIMD64V","text":"SIMD64","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Index","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"preciseIdentifier":"s:s6SIMD64V","text":"SIMD64","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Scalar","preciseIdentifier":"s:s11SIMDStorageP6ScalarQa"},{"text":">","kind":"text"}],"extendedModule":"Swift","externalID":"s:s4SIMDPsEys6SIMD64Vy6ScalarQzGADyqd__Gcs17FixedWidthIntegerRd__s10SIMDScalarRd__sAjFRQluip","roleHeading":"Instance Subscript","modules":[{"name":"Compute","relatedModules":["Swift"]}],"role":"symbol","title":"subscript(_:)"},"variants":[{"paths":["\/documentation\/compute\/simdstorage\/subscript(_:)-4bxif"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMDStorage\/subscript(_:)-4bxif","interfaceLanguage":"swift"},"kind":"symbol","schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMDStorage","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMDStorage\/subscript(_:)-82o6b"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"subscript"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Index"},{"text":">(","kind":"text"},{"text":"index","kind":"internalParam"},{"kind":"text","text":": "},{"text":"SIMD64","kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD64V","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD64"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Index"},{"text":">) -> ","kind":"text"},{"preciseIdentifier":"s:s6SIMD64V","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD64","kind":"typeIdentifier","text":"SIMD64"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Scalar","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMDStorage\/Scalar","preciseIdentifier":"s:s11SIMDStorageP6ScalarQa"},{"text":"> ","kind":"text"},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"text":"Index","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"FixedWidthInteger","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FixedWidthInteger","preciseIdentifier":"s:s17FixedWidthIntegerP"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Index"},{"kind":"text","text":" : "},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMDScalar","kind":"typeIdentifier","preciseIdentifier":"s:s10SIMDScalarP","text":"SIMDScalar"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s11SIMDStorageP6ScalarQa","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMDStorage\/Scalar","text":"Scalar"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMDScalar","preciseIdentifier":"s:s10SIMDScalarP","text":"SIMDScalar","kind":"typeIdentifier"},{"kind":"text","text":" { "},{"kind":"keyword","text":"get"},{"text":" }","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}]},{"content":[{"text":"Overview","level":2,"type":"heading","anchor":"overview"},{"inlineContent":[{"type":"text","text":"The elements of the index vector are wrapped modulo the count of elements"},{"text":" ","type":"text"},{"text":"in this vector. Because of this, the index is always in-range and no trap","type":"text"},{"text":" ","type":"text"},{"text":"can occur.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD64":{"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SIMD64"}],"abstract":[{"type":"text","text":"A vector of 64 scalar values."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD64","navigatorTitle":[{"text":"SIMD64","kind":"identifier"}],"role":"symbol","kind":"symbol","url":"\/documentation\/compute\/simd64","title":"SIMD64"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMDScalar":{"kind":"symbol","navigatorTitle":[{"text":"SIMDScalar","kind":"identifier"}],"type":"topic","title":"SIMDScalar","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMDScalar","abstract":[{"type":"text","text":"A type that can be used as an element in a SIMD vector."}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SIMDScalar","kind":"identifier"}],"url":"\/documentation\/compute\/simdscalar"},"doc://com.swallow.documentation.Compute/documentation/Compute/FixedWidthInteger":{"title":"FixedWidthInteger","kind":"symbol","navigatorTitle":[{"text":"FixedWidthInteger","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FixedWidthInteger","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"FixedWidthInteger","kind":"identifier"}],"abstract":[{"text":"An integer type that uses a fixed size for every instance.","type":"text"}],"type":"topic","url":"\/documentation\/compute\/fixedwidthinteger"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMDStorage/Scalar":{"kind":"symbol","url":"\/documentation\/compute\/simdstorage\/scalar","abstract":[],"fragments":[{"text":"associatedtype","kind":"keyword"},{"kind":"text","text":" "},{"text":"Scalar","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"Decodable","preciseIdentifier":"s:Se","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Encodable","kind":"typeIdentifier","preciseIdentifier":"s:SE"},{"text":", ","kind":"text"},{"text":"Hashable","preciseIdentifier":"s:SH","kind":"typeIdentifier"}],"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMDStorage\/Scalar","required":true,"title":"Scalar","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMDStorage":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMDStorage","kind":"symbol","abstract":[{"text":"A type that can function as storage for a SIMD vector type.","type":"text"}],"role":"symbol","title":"SIMDStorage","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"SIMDStorage","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"SIMDStorage"}],"url":"\/documentation\/compute\/simdstorage","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMDStorage/subscript(_:)-82o6b":{"url":"\/documentation\/compute\/simdstorage\/subscript(_:)-82o6b","title":"subscript(_:)","kind":"symbol","required":true,"role":"symbol","defaultImplementations":7,"type":"topic","abstract":[{"text":"Accesses the element at the specified index.","type":"text"}],"fragments":[{"kind":"keyword","text":"subscript"},{"kind":"text","text":"("},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:s11SIMDStorageP6ScalarQa","kind":"typeIdentifier","text":"Scalar"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMDStorage\/subscript(_:)-82o6b"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMDStorage/subscript(_:)-4bxif":{"url":"\/documentation\/compute\/simdstorage\/subscript(_:)-4bxif","type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMDStorage\/subscript(_:)-4bxif","role":"symbol","abstract":[{"text":"Extracts the scalars at specified indices to form a SIMD64.","type":"text"}],"fragments":[{"text":"subscript","kind":"keyword"},{"kind":"text","text":"<"},{"text":"Index","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s6SIMD64V","text":"SIMD64"},{"kind":"text","text":"<"},{"text":"Index","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"SIMD64","preciseIdentifier":"s:s6SIMD64V"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Scalar","preciseIdentifier":"s:s11SIMDStorageP6ScalarQa"},{"text":">","kind":"text"}],"title":"subscript(_:)","kind":"symbol"}}}