{"kind":"article","hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD2"]]},"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD2\/Equatable-Implementations"},"metadata":{"modules":[{"name":"Compute"}],"title":"Equatable Implementations","role":"collectionGroup","roleHeading":"API Collection"},"topicSections":[{"anchor":"Operators","title":"Operators","identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD2\/!=(_:_:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD2\/==(_:)"],"generated":true},{"anchor":"Instance-Methods","generated":true,"title":"Instance Methods","identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD2\/eraseToAnyEquatable()"]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/simd2\/equatable-implementations"]}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD2/==(_:)":{"kind":"symbol","url":"\/documentation\/compute\/simd2\/==(_:)","title":"==(_:)","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"=="},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ((","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":")","kind":"text"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD2\/==(_:)","role":"symbol","abstract":[]},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD2":{"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"SIMD2"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD2","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SIMD2"}],"abstract":[{"text":"A vector of two scalar values.","type":"text"}],"title":"SIMD2","url":"\/documentation\/compute\/simd2","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD2/!=(_:_:)":{"type":"topic","title":"!=(_:_:)","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"!="},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Returns a Boolean value indicating whether two values are not equal."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD2\/!=(_:_:)","url":"\/documentation\/compute\/simd2\/!=(_:_:)","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD2/eraseToAnyEquatable()":{"kind":"symbol","url":"\/documentation\/compute\/simd2\/erasetoanyequatable()","title":"eraseToAnyEquatable()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"eraseToAnyEquatable"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:7Swallow12AnyEquatableV","text":"AnyEquatable","kind":"typeIdentifier"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD2\/eraseToAnyEquatable()","role":"symbol","abstract":[]}}}