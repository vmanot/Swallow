{"schemaVersion":{"major":0,"patch":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyCollection","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyCollection\/Sequence-Implementations"]]},"kind":"symbol","metadata":{"extendedModule":"Swift","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"reduce","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Result"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":", ("},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:ST7ElementQa","text":"Element","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"rethrows"},{"text":" -> ","kind":"text"},{"text":"Result","kind":"typeIdentifier"}],"role":"symbol","symbolKind":"method","modules":[{"name":"Compute","relatedModules":["Swift"]}],"roleHeading":"Instance Method","externalID":"s:STsE6reduceyqd__qd___qd__qd___7ElementQztKXEtKlF::SYNTHESIZED::s:s13AnyCollectionV","title":"reduce(_:_:)"},"abstract":[{"text":"Returns the result of combining the elements of the sequence using the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"given closure."}],"sections":[],"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyCollection\/reduce(_:_:)-2k7fd","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"reduce","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Result","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"initialResult"},{"text":": ","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"nextPartialResult"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"Result"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","text":"Element","preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Result"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Result"}]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The value to use as the initial accumulating value."},{"type":"text","text":" "},{"type":"codeVoice","code":"initialResult"},{"text":" is passed to ","type":"text"},{"type":"codeVoice","code":"nextPartialResult"},{"type":"text","text":" the first time the"},{"type":"text","text":" "},{"type":"text","text":"closure is executed."}]}],"name":"initialResult"},{"content":[{"type":"paragraph","inlineContent":[{"text":"A closure that combines an accumulating value and","type":"text"},{"text":" ","type":"text"},{"text":"an element of the sequence into a new accumulating value, to be used","type":"text"},{"type":"text","text":" "},{"text":"in the next call of the ","type":"text"},{"code":"nextPartialResult","type":"codeVoice"},{"type":"text","text":" closure or returned to"},{"text":" ","type":"text"},{"text":"the caller.","type":"text"}]}],"name":"nextPartialResult"}]},{"kind":"content","content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The final accumulated value. If the sequence has no elements,"},{"text":" ","type":"text"},{"text":"the result is ","type":"text"},{"type":"codeVoice","code":"initialResult"},{"type":"text","text":"."}]}]},{"kind":"content","content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"Use the ","type":"text"},{"type":"codeVoice","code":"reduce(_:_:)"},{"type":"text","text":" method to produce a single value from the elements"},{"type":"text","text":" "},{"type":"text","text":"of an entire sequence. For example, you can use this method on an array"},{"type":"text","text":" "},{"text":"of numbers to find their sum or product.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"code":"nextPartialResult","type":"codeVoice"},{"type":"text","text":" closure is called sequentially with an"},{"text":" ","type":"text"},{"text":"accumulating value initialized to ","type":"text"},{"code":"initialResult","type":"codeVoice"},{"type":"text","text":" and each element of"},{"text":" ","type":"text"},{"type":"text","text":"the sequence. This example shows how to find the sum of an array of"},{"type":"text","text":" "},{"type":"text","text":"numbers."}]},{"syntax":null,"code":["let numbers = [1, 2, 3, 4]","let numberSum = numbers.reduce(0, { x, y in","    x + y","})","\/\/ numberSum == 10"],"type":"codeListing"},{"inlineContent":[{"text":"When ","type":"text"},{"type":"codeVoice","code":"numbers.reduce(_:_:)"},{"type":"text","text":" is called, the following steps occur:"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"type":"codeVoice","code":"nextPartialResult"},{"text":" closure is called with ","type":"text"},{"type":"codeVoice","code":"initialResult"},{"type":"text","text":"—"},{"type":"codeVoice","code":"0"},{"type":"text","text":" "},{"type":"text","text":"in this case—and the first element of "},{"code":"numbers","type":"codeVoice"},{"type":"text","text":", returning the sum:"},{"type":"text","text":" "},{"code":"1","type":"codeVoice"},{"type":"text","text":"."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"The closure is called again repeatedly with the previous call’s return"},{"type":"text","text":" "},{"text":"value and each element of the sequence.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"When the sequence is exhausted, the last value returned from the"},{"type":"text","text":" "},{"type":"text","text":"closure is returned to the caller."}],"type":"paragraph"}]}],"type":"orderedList"},{"type":"paragraph","inlineContent":[{"text":"If the sequence has no elements, ","type":"text"},{"code":"nextPartialResult","type":"codeVoice"},{"type":"text","text":" is never executed"},{"type":"text","text":" "},{"type":"text","text":"and "},{"code":"initialResult","type":"codeVoice"},{"text":" is the result of the call to ","type":"text"},{"type":"codeVoice","code":"reduce(_:_:)"},{"type":"text","text":"."}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"O("},{"inlineContent":[{"text":"n","type":"text"}],"type":"emphasis"},{"text":"), where ","type":"text"},{"inlineContent":[{"type":"text","text":"n"}],"type":"emphasis"},{"text":" is the length of the sequence.","type":"text"}]}],"style":"note","name":"Complexity","type":"aside"}]}],"variants":[{"paths":["\/documentation\/compute\/anycollection\/reduce(_:_:)-2k7fd"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/AnyCollection":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyCollection","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyCollection","kind":"identifier"}],"url":"\/documentation\/compute\/anycollection","type":"topic","abstract":[{"text":"A type-erased wrapper over any collection with indices that","type":"text"},{"type":"text","text":" "},{"text":"support forward traversal.","type":"text"}],"kind":"symbol","role":"symbol","navigatorTitle":[{"text":"AnyCollection","kind":"identifier"}],"title":"AnyCollection"},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence/Element":{"type":"topic","required":true,"abstract":[{"type":"text","text":"A type representing the sequence’s elements."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"symbol","url":"\/documentation\/compute\/sequence\/element","role":"symbol","title":"Element","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/AnyCollection/reduce(_:_:)-2k7fd":{"kind":"symbol","title":"reduce(_:_:)","type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyCollection\/reduce(_:_:)-2k7fd","role":"symbol","url":"\/documentation\/compute\/anycollection\/reduce(_:_:)-2k7fd","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"reduce","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Result"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"Result"},{"text":", (","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Result"},{"text":") ","kind":"text"},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"text":"Result","kind":"typeIdentifier"}],"abstract":[{"text":"Returns the result of combining the elements of the sequence using the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"given closure."}]},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/AnyCollection/Sequence-Implementations":{"kind":"article","type":"topic","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyCollection\/Sequence-Implementations","url":"\/documentation\/compute\/anycollection\/sequence-implementations","role":"collectionGroup","title":"Sequence Implementations"}}}