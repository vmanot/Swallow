{"abstract":[{"text":"Returns a random element of the collection, using the given generator as","type":"text"},{"type":"text","text":" "},{"type":"text","text":"a source for randomness."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"randomElement"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"using","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"generator","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"kind":"text","text":"? "},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"text":"RandomNumberGenerator","preciseIdentifier":"s:SG","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RandomNumberGenerator","kind":"typeIdentifier"}],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"name":"generator","content":[{"inlineContent":[{"text":"The random number generator to use when choosing a","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"random element."}],"type":"paragraph"}]}]},{"content":[{"text":"Return Value","level":2,"type":"heading","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"text":"A random element from the collection. If the collection is","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"empty, the method returns "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."}]}],"kind":"content"},{"kind":"content","content":[{"type":"heading","anchor":"discussion","text":"Discussion","level":2},{"inlineContent":[{"type":"text","text":"Call "},{"code":"randomElement(using:)","type":"codeVoice"},{"type":"text","text":" to select a random element from an array or"},{"type":"text","text":" "},{"text":"another collection when you are using a custom random number generator.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"This example picks a name at random from an array:"}],"type":"paragraph"},{"syntax":null,"code":["let names = [\"Zoey\", \"Chloe\", \"Amani\", \"Amaia\"]","let randomName = names.randomElement(using: &myGenerator)!","\/\/ randomName == \"Amani\""],"type":"codeListing"},{"type":"aside","style":"note","name":"Complexity","content":[{"inlineContent":[{"text":"O(1) if the collection conforms to","type":"text"},{"text":" ","type":"text"},{"code":"RandomAccessCollection","type":"codeVoice"},{"type":"text","text":"; otherwise, O("},{"inlineContent":[{"text":"n","type":"text"}],"type":"emphasis"},{"text":"), where ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"n","type":"text"}]},{"type":"text","text":" is the length"},{"type":"text","text":" "},{"type":"text","text":"of the collection."}],"type":"paragraph"}]},{"type":"aside","content":[{"inlineContent":[{"text":"The algorithm used to select a random element may change in a","type":"text"},{"type":"text","text":" "},{"type":"text","text":"future version of Swift. If you’re passing a generator that results in"},{"type":"text","text":" "},{"text":"the same sequence of elements each time you run your program, that","type":"text"},{"type":"text","text":" "},{"type":"text","text":"sequence may change when your program is compiled using a different"},{"type":"text","text":" "},{"text":"version of Swift.","type":"text"}],"type":"paragraph"}],"name":"Note","style":"note"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/anycollection\/randomelement(using:)"]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyCollection","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyCollection\/Collection-Implementations"]]},"sections":[],"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"randomElement"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"using"},{"text":": ","kind":"text"},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Element","preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"title":"randomElement(using:)","externalID":"s:SlsE13randomElement5using0B0QzSgqd__z_tSGRd__lF::SYNTHESIZED::s:s13AnyCollectionV","roleHeading":"Instance Method","role":"symbol","extendedModule":"Swift","modules":[{"name":"Compute","relatedModules":["Swift"]}],"symbolKind":"method"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyCollection\/randomElement(using:)"},"kind":"symbol","references":{"doc://com.swallow.documentation.Compute/documentation/Compute/RandomNumberGenerator":{"abstract":[{"text":"A type that provides uniformly distributed random data.","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"RandomNumberGenerator"}],"url":"\/documentation\/compute\/randomnumbergenerator","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RandomNumberGenerator","title":"RandomNumberGenerator","role":"symbol","type":"topic","navigatorTitle":[{"text":"RandomNumberGenerator","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/AnyCollection/randomElement(using:)":{"url":"\/documentation\/compute\/anycollection\/randomelement(using:)","title":"randomElement(using:)","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyCollection\/randomElement(using:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"randomElement","kind":"identifier"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"using"},{"kind":"text","text":": "},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:ST7ElementQa","text":"Element","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Returns a random element of the collection, using the given generator as"},{"type":"text","text":" "},{"text":"a source for randomness.","type":"text"}],"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence/Element":{"type":"topic","required":true,"abstract":[{"type":"text","text":"A type representing the sequence’s elements."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"symbol","url":"\/documentation\/compute\/sequence\/element","role":"symbol","title":"Element","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/AnyCollection/Collection-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyCollection\/Collection-Implementations","title":"Collection Implementations","abstract":[],"kind":"article","url":"\/documentation\/compute\/anycollection\/collection-implementations","type":"topic","role":"collectionGroup"},"doc://com.swallow.documentation.Compute/documentation/Compute/AnyCollection":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyCollection","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyCollection","kind":"identifier"}],"url":"\/documentation\/compute\/anycollection","type":"topic","abstract":[{"text":"A type-erased wrapper over any collection with indices that","type":"text"},{"type":"text","text":" "},{"text":"support forward traversal.","type":"text"}],"kind":"symbol","role":"symbol","navigatorTitle":[{"text":"AnyCollection","kind":"identifier"}],"title":"AnyCollection"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"}}}