{"kind":"symbol","sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/anycollection\/joined(separator:)-3o2fu"]}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"joined","kind":"identifier"},{"text":"(","kind":"text"},{"text":"separator","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String","kind":"typeIdentifier","text":"String"},{"kind":"text","text":" = \"\") -> "},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String","text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"separator","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A string to insert between each of the elements"},{"type":"text","text":" "},{"text":"in this sequence. The default separator is an empty string.","type":"text"}]}]}]},{"content":[{"type":"heading","level":2,"anchor":"return-value","text":"Return Value"},{"type":"paragraph","inlineContent":[{"text":"A single, concatenated string.","type":"text"}]}],"kind":"content"},{"kind":"content","content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"The following example shows how an array of strings can be joined to a","type":"text"},{"type":"text","text":" "},{"text":"single, comma-separated string:","type":"text"}]},{"syntax":null,"code":["let cast = [\"Vivien\", \"Marlon\", \"Kim\", \"Karl\"]","let list = cast.joined(separator: \", \")","print(list)","\/\/ Prints \"Vivien, Marlon, Kim, Karl\""],"type":"codeListing"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyCollection","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyCollection\/Sequence-Implementations"]]},"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyCollection\/joined(separator:)-3o2fu","interfaceLanguage":"swift"},"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"joined"},{"text":"(","kind":"text"},{"text":"separator","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"code":"StringProtocol","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"role":"symbol","externalID":"s:STsSy7ElementRpzrlE6joined9separatorS2S_tF::SYNTHESIZED::s:s13AnyCollectionV","extendedModule":"Swift","roleHeading":"Instance Method","modules":[{"name":"Compute","relatedModules":["Swift"]}],"title":"joined(separator:)","symbolKind":"method"},"abstract":[{"text":"Returns a new string by concatenating the elements of the sequence,","type":"text"},{"type":"text","text":" "},{"text":"adding the given separator between each element.","type":"text"}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/AnyCollection":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyCollection","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyCollection","kind":"identifier"}],"url":"\/documentation\/compute\/anycollection","type":"topic","abstract":[{"text":"A type-erased wrapper over any collection with indices that","type":"text"},{"type":"text","text":" "},{"text":"support forward traversal.","type":"text"}],"kind":"symbol","role":"symbol","navigatorTitle":[{"text":"AnyCollection","kind":"identifier"}],"title":"AnyCollection"},"doc://com.swallow.documentation.Compute/documentation/Compute/AnyCollection/joined(separator:)-3o2fu":{"kind":"symbol","url":"\/documentation\/compute\/anycollection\/joined(separator:)-3o2fu","role":"symbol","type":"topic","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Element"},{"text":" conforms to ","type":"text"},{"code":"StringProtocol","type":"codeVoice"},{"text":".","type":"text"}]},"abstract":[{"type":"text","text":"Returns a new string by concatenating the elements of the sequence,"},{"text":" ","type":"text"},{"type":"text","text":"adding the given separator between each element."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyCollection\/joined(separator:)-3o2fu","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"joined","kind":"identifier"},{"kind":"text","text":"("},{"text":"separator","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"}],"title":"joined(separator:)"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/AnyCollection/Sequence-Implementations":{"kind":"article","type":"topic","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyCollection\/Sequence-Implementations","url":"\/documentation\/compute\/anycollection\/sequence-implementations","role":"collectionGroup","title":"Sequence Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/String":{"type":"topic","navigatorTitle":[{"kind":"identifier","text":"String"}],"title":"String","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"String","kind":"identifier"}],"abstract":[{"type":"text","text":"A Unicode string value that is a collection of characters."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String","kind":"symbol","role":"symbol","url":"\/documentation\/compute\/string"}}}