{"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"reduce"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Result"},{"kind":"text","text":">("},{"text":"into","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"initialResult","kind":"internalParam"},{"kind":"text","text":": "},{"text":"Result","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"updateAccumulatingResult"},{"kind":"text","text":": ("},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Result"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:ST7ElementQa","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"text":" -> ()) ","kind":"text"},{"kind":"keyword","text":"rethrows"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Result"}]}]},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The value to use as the initial accumulating value."}]}],"name":"initialResult"},{"name":"updateAccumulatingResult","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A closure that updates the accumulating"},{"type":"text","text":" "},{"type":"text","text":"value with an element of the sequence."}]}]}],"kind":"parameters"},{"content":[{"level":2,"type":"heading","text":"Return Value","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The final accumulated value. If the sequence has no elements,"},{"type":"text","text":" "},{"type":"text","text":"the result is "},{"code":"initialResult","type":"codeVoice"},{"type":"text","text":"."}]}],"kind":"content"},{"content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"inlineContent":[{"type":"text","text":"Use the "},{"code":"reduce(into:_:)","type":"codeVoice"},{"type":"text","text":" method to produce a single value from the"},{"type":"text","text":" "},{"type":"text","text":"elements of an entire sequence. For example, you can use this method on an"},{"type":"text","text":" "},{"type":"text","text":"array of integers to filter adjacent equal entries or count frequencies."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method is preferred over "},{"type":"codeVoice","code":"reduce(_:_:)"},{"text":" for efficiency when the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"result is a copy-on-write type, for example an Array or a Dictionary."}]},{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"code":"updateAccumulatingResult","type":"codeVoice"},{"type":"text","text":" closure is called sequentially with a"},{"type":"text","text":" "},{"text":"mutable accumulating value initialized to ","type":"text"},{"type":"codeVoice","code":"initialResult"},{"text":" and each element","type":"text"},{"type":"text","text":" "},{"type":"text","text":"of the sequence. This example shows how to build a dictionary of letter"},{"type":"text","text":" "},{"type":"text","text":"frequencies of a string."}]},{"type":"codeListing","syntax":null,"code":["let letters = \"abracadabra\"","let letterCount = letters.reduce(into: [:]) { counts, letter in","    counts[letter, default: 0] += 1","}","\/\/ letterCount == [\"a\": 5, \"b\": 2, \"r\": 2, \"c\": 1, \"d\": 1]"]},{"inlineContent":[{"type":"text","text":"When "},{"code":"letters.reduce(into:_:)","type":"codeVoice"},{"type":"text","text":" is called, the following steps occur:"}],"type":"paragraph"},{"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"type":"codeVoice","code":"updateAccumulatingResult"},{"text":" closure is called with the initial","type":"text"},{"type":"text","text":" "},{"text":"accumulating value—","type":"text"},{"type":"codeVoice","code":"[:]"},{"type":"text","text":" in this case—and the first character of"},{"text":" ","type":"text"},{"type":"codeVoice","code":"letters"},{"text":", modifying the accumulating value by setting ","type":"text"},{"type":"codeVoice","code":"1"},{"type":"text","text":" for the key"},{"type":"text","text":" "},{"type":"codeVoice","code":"\"a\""},{"type":"text","text":"."}]}]},{"content":[{"inlineContent":[{"text":"The closure is called again repeatedly with the updated accumulating","type":"text"},{"text":" ","type":"text"},{"text":"value and each element of the sequence.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"When the sequence is exhausted, the accumulating value is returned to","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the caller."}]}]}]},{"type":"paragraph","inlineContent":[{"text":"If the sequence has no elements, ","type":"text"},{"type":"codeVoice","code":"updateAccumulatingResult"},{"type":"text","text":" is never"},{"text":" ","type":"text"},{"text":"executed and ","type":"text"},{"code":"initialResult","type":"codeVoice"},{"type":"text","text":" is the result of the call to"},{"type":"text","text":" "},{"type":"codeVoice","code":"reduce(into:_:)"},{"text":".","type":"text"}]},{"name":"Complexity","type":"aside","style":"note","content":[{"inlineContent":[{"text":"O(","type":"text"},{"inlineContent":[{"text":"n","type":"text"}],"type":"emphasis"},{"text":"), where ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"n"}]},{"text":" is the length of the sequence.","type":"text"}],"type":"paragraph"}]}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/EnumeratedSequence","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/EnumeratedSequence\/Sequence-Implementations"]]},"schemaVersion":{"major":0,"patch":0,"minor":3},"variants":[{"paths":["\/documentation\/compute\/enumeratedsequence\/reduce(into:_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/EnumeratedSequence\/reduce(into:_:)"},"metadata":{"symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"reduce","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Result"},{"text":">(","kind":"text"},{"text":"into","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Result"},{"text":", (","kind":"text"},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Result"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier","text":"Element"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> ()) "},{"kind":"keyword","text":"rethrows"},{"text":" -> ","kind":"text"},{"text":"Result","kind":"typeIdentifier"}],"externalID":"s:STsE6reduce4into_qd__qd__n_yqd__z_7ElementQztKXEtKlF::SYNTHESIZED::s:s18EnumeratedSequenceV","roleHeading":"Instance Method","extendedModule":"Swift","title":"reduce(into:_:)","role":"symbol","modules":[{"name":"Compute","relatedModules":["Swift"]}]},"sections":[],"abstract":[{"text":"Returns the result of combining the elements of the sequence using the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"given closure."}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/EnumeratedSequence":{"url":"\/documentation\/compute\/enumeratedsequence","navigatorTitle":[{"text":"EnumeratedSequence","kind":"identifier"}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"EnumeratedSequence"}],"abstract":[{"text":"An enumeration of the elements of a sequence or collection.","type":"text"}],"type":"topic","title":"EnumeratedSequence","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/EnumeratedSequence"},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence/Element":{"type":"topic","required":true,"abstract":[{"type":"text","text":"A type representing the sequence’s elements."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"symbol","url":"\/documentation\/compute\/sequence\/element","role":"symbol","title":"Element","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/EnumeratedSequence/Sequence-Implementations":{"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/EnumeratedSequence\/Sequence-Implementations","title":"Sequence Implementations","kind":"article","role":"collectionGroup","url":"\/documentation\/compute\/enumeratedsequence\/sequence-implementations","abstract":[]},"doc://com.swallow.documentation.Compute/documentation/Compute/EnumeratedSequence/reduce(into:_:)":{"title":"reduce(into:_:)","role":"symbol","kind":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"reduce","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Result","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"into","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"kind":"text","text":", ("},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Result"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"text":" -> ()) ","kind":"text"},{"kind":"keyword","text":"rethrows"},{"text":" -> ","kind":"text"},{"text":"Result","kind":"typeIdentifier"}],"url":"\/documentation\/compute\/enumeratedsequence\/reduce(into:_:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/EnumeratedSequence\/reduce(into:_:)","abstract":[{"text":"Returns the result of combining the elements of the sequence using the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"given closure."}]}}}