{"schemaVersion":{"major":0,"patch":0,"minor":3},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"&>>=","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"lhs","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16","kind":"typeIdentifier","text":"UInt16","preciseIdentifier":"s:s6UInt16V"},{"kind":"text","text":", "},{"kind":"internalParam","text":"rhs"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"UInt16","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16","preciseIdentifier":"s:s6UInt16V"},{"text":")","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"name":"lhs","content":[{"type":"paragraph","inlineContent":[{"text":"The value to shift.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"The number of bits to shift ","type":"text"},{"code":"lhs","type":"codeVoice"},{"text":" to the right. If ","type":"text"},{"type":"codeVoice","code":"rhs"},{"text":" is","type":"text"},{"type":"text","text":" "},{"type":"text","text":"outside the range "},{"type":"codeVoice","code":"0..<lhs.bitWidth"},{"type":"text","text":", it is masked to produce a"},{"type":"text","text":" "},{"type":"text","text":"value within that range."}]}],"name":"rhs"}]},{"kind":"content","content":[{"anchor":"discussion","text":"Discussion","level":2,"type":"heading"},{"inlineContent":[{"text":"The ","type":"text"},{"type":"codeVoice","code":"&>>="},{"type":"text","text":" operator performs a "},{"type":"emphasis","inlineContent":[{"type":"text","text":"masking shift"}]},{"type":"text","text":", where the value passed as"},{"text":" ","type":"text"},{"code":"rhs","type":"codeVoice"},{"type":"text","text":" is masked to produce a value in the range "},{"code":"0..<lhs.bitWidth","type":"codeVoice"},{"type":"text","text":". The"},{"text":" ","type":"text"},{"text":"shift is performed using this masked value.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"The following example defines ","type":"text"},{"code":"x","type":"codeVoice"},{"type":"text","text":" as an instance of "},{"code":"UInt8","type":"codeVoice"},{"type":"text","text":", an 8-bit,"},{"text":" ","type":"text"},{"text":"unsigned integer type. If you use ","type":"text"},{"type":"codeVoice","code":"2"},{"text":" as the right-hand-side value in an","type":"text"},{"type":"text","text":" "},{"type":"text","text":"operation on "},{"type":"codeVoice","code":"x"},{"text":", the shift amount requires no masking.","type":"text"}],"type":"paragraph"},{"code":["var x: UInt8 = 30                 \/\/ 0b00011110","x &>>= 2","\/\/ x == 7                         \/\/ 0b00000111"],"syntax":null,"type":"codeListing"},{"inlineContent":[{"text":"However, if you use ","type":"text"},{"type":"codeVoice","code":"19"},{"text":" as ","type":"text"},{"code":"rhs","type":"codeVoice"},{"text":", the operation first bitmasks ","type":"text"},{"type":"codeVoice","code":"rhs"},{"type":"text","text":" to"},{"type":"text","text":" "},{"code":"3","type":"codeVoice"},{"type":"text","text":", and then uses that masked value as the number of bits to shift "},{"code":"lhs","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"},{"syntax":null,"code":["var y: UInt8 = 30                 \/\/ 0b00011110","y &>>= 19","\/\/ y == 3                         \/\/ 0b00000011"],"type":"codeListing"}]}],"variants":[{"paths":["\/documentation\/compute\/uint16\/&__=(_:_:)-54gew"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"metadata":{"symbolKind":"op","externalID":"s:s6UInt16V4aggeoiyyABz_ABtFZ","roleHeading":"Operator","role":"symbol","title":"&>>=(_:_:)","modules":[{"name":"Compute"}],"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"&>>=","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"preciseIdentifier":"s:s6UInt16V","text":"UInt16","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"UInt16","kind":"typeIdentifier","preciseIdentifier":"s:s6UInt16V"},{"text":")","kind":"text"}]},"abstract":[{"type":"text","text":"Calculates the result of shifting a value’s binary representation the"},{"type":"text","text":" "},{"type":"text","text":"specified number of digits to the right, masking the shift amount to the"},{"type":"text","text":" "},{"type":"text","text":"type’s bit width, and stores the result in the left-hand-side variable."}],"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/&__=(_:_:)-54gew","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16"]]},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/UInt16/&__=(_:_:)-54gew":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"&>>=","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:s6UInt16V","text":"UInt16","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:s6UInt16V","text":"UInt16","kind":"typeIdentifier"},{"text":")","kind":"text"}],"kind":"symbol","url":"\/documentation\/compute\/uint16\/&__=(_:_:)-54gew","role":"symbol","title":"&>>=(_:_:)","abstract":[{"text":"Calculates the result of shifting a value’s binary representation the","type":"text"},{"type":"text","text":" "},{"text":"specified number of digits to the right, masking the shift amount to the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"type’s bit width, and stores the result in the left-hand-side variable."}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/&__=(_:_:)-54gew"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt16":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"UInt16","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"UInt16"}],"title":"UInt16","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16","url":"\/documentation\/compute\/uint16","kind":"symbol","role":"symbol","abstract":[{"text":"A 16-bit unsigned integer value","type":"text"},{"text":" ","type":"text"},{"text":"type.","type":"text"}],"type":"topic"}}}