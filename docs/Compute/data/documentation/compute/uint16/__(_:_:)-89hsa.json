{"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":">>"},{"kind":"text","text":" "},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"RHS"},{"text":">(","kind":"text"},{"text":"lhs","kind":"internalParam"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"rhs","kind":"internalParam"},{"kind":"text","text":": "},{"text":"RHS","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":" "},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"RHS"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryInteger","preciseIdentifier":"s:Sz","text":"BinaryInteger","kind":"typeIdentifier"}],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"The value to shift."}],"type":"paragraph"}],"name":"lhs"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The number of bits to shift "},{"type":"codeVoice","code":"lhs"},{"text":" to the right.","type":"text"}]}],"name":"rhs"}]},{"content":[{"text":"Discussion","anchor":"discussion","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"type":"codeVoice","code":">>"},{"text":" operator performs a ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"smart shift"}]},{"text":", which defines a result for a","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"shift of any value."}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Using a negative value for "},{"type":"codeVoice","code":"rhs"},{"type":"text","text":" performs a left shift using"},{"type":"text","text":" "},{"type":"codeVoice","code":"abs(rhs)"},{"text":".","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Using a value for ","type":"text"},{"type":"codeVoice","code":"rhs"},{"text":" that is greater than or equal to the bit width","type":"text"},{"type":"text","text":" "},{"type":"text","text":"of "},{"code":"lhs","type":"codeVoice"},{"text":" is an ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"overshift","type":"text"}]},{"type":"text","text":". An overshift results in "},{"code":"-1","type":"codeVoice"},{"text":" for a","type":"text"},{"type":"text","text":" "},{"text":"negative value of ","type":"text"},{"type":"codeVoice","code":"lhs"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"0"},{"type":"text","text":" for a nonnegative value."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Using any other value for "},{"code":"rhs","type":"codeVoice"},{"type":"text","text":" performs a right shift on "},{"type":"codeVoice","code":"lhs"},{"type":"text","text":" by that"},{"type":"text","text":" "},{"type":"text","text":"amount."}]}]}]},{"type":"paragraph","inlineContent":[{"text":"The following example defines ","type":"text"},{"type":"codeVoice","code":"x"},{"type":"text","text":" as an instance of "},{"code":"UInt8","type":"codeVoice"},{"type":"text","text":", an 8-bit,"},{"type":"text","text":" "},{"text":"unsigned integer type. If you use ","type":"text"},{"type":"codeVoice","code":"2"},{"type":"text","text":" as the right-hand-side value in an"},{"type":"text","text":" "},{"text":"operation on ","type":"text"},{"code":"x","type":"codeVoice"},{"type":"text","text":", the value is shifted right by two bits."}]},{"type":"codeListing","code":["let x: UInt8 = 30                 \/\/ 0b00011110","let y = x >> 2","\/\/ y == 7                         \/\/ 0b00000111"],"syntax":null},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you use "},{"code":"11","type":"codeVoice"},{"text":" as ","type":"text"},{"type":"codeVoice","code":"rhs"},{"type":"text","text":", "},{"type":"codeVoice","code":"x"},{"type":"text","text":" is overshifted such that all of its bits"},{"type":"text","text":" "},{"text":"are set to zero.","type":"text"}]},{"code":["let z = x >> 11","\/\/ z == 0                         \/\/ 0b00000000"],"syntax":null,"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Using a negative value as "},{"code":"rhs","type":"codeVoice"},{"type":"text","text":" is the same as performing a left shift"},{"type":"text","text":" "},{"text":"using ","type":"text"},{"code":"abs(rhs)","type":"codeVoice"},{"type":"text","text":"."}]},{"code":["let a = x >> -3","\/\/ a == 240                       \/\/ 0b11110000","let b = x << 3","\/\/ b == 240                       \/\/ 0b11110000"],"syntax":null,"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Right shift operations on negative values “fill in” the high bits with"},{"text":" ","type":"text"},{"type":"text","text":"ones instead of zeros."}]},{"syntax":null,"code":["let q: Int8 = -30                 \/\/ 0b11100010","let r = q >> 2","\/\/ r == -8                        \/\/ 0b11111000","","let s = q >> 11","\/\/ s == -1                        \/\/ 0b11111111"],"type":"codeListing"}],"kind":"content"}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/BinaryInteger-Implementations"]]},"sections":[],"metadata":{"externalID":"s:SzsE2ggoiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:s6UInt16V","extendedModule":"Swift","modules":[{"relatedModules":["Swift"],"name":"Compute"}],"title":">>(_:_:)","roleHeading":"Operator","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":">>","kind":"identifier"},{"kind":"text","text":" "},{"text":"<","kind":"text"},{"text":"RHS","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"RHS"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"symbolKind":"op"},"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"type":"text","text":"Returns the result of shifting a value’s binary representation the"},{"type":"text","text":" "},{"type":"text","text":"specified number of digits to the right."}],"variants":[{"paths":["\/documentation\/compute\/uint16\/__(_:_:)-89hsa"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/__(_:_:)-89hsa"},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt16/BinaryInteger-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/BinaryInteger-Implementations","url":"\/documentation\/compute\/uint16\/binaryinteger-implementations","type":"topic","title":"BinaryInteger Implementations","role":"collectionGroup","abstract":[],"kind":"article"},"doc://com.swallow.documentation.Compute/documentation/Compute/BinaryInteger":{"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"BinaryInteger"}],"navigatorTitle":[{"kind":"identifier","text":"BinaryInteger"}],"url":"\/documentation\/compute\/binaryinteger","type":"topic","abstract":[{"type":"text","text":"An integer type with a binary representation."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryInteger","title":"BinaryInteger","kind":"symbol","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt16/__(_:_:)-89hsa":{"role":"symbol","abstract":[{"type":"text","text":"Returns the result of shifting a value’s binary representation the"},{"text":" ","type":"text"},{"text":"specified number of digits to the right.","type":"text"}],"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":">>"},{"text":" ","kind":"text"},{"text":"<","kind":"text"},{"text":"RHS","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"text":"RHS","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/__(_:_:)-89hsa","url":"\/documentation\/compute\/uint16\/__(_:_:)-89hsa","title":">>(_:_:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt16":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"UInt16","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"UInt16"}],"title":"UInt16","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16","url":"\/documentation\/compute\/uint16","kind":"symbol","role":"symbol","abstract":[{"text":"A 16-bit unsigned integer value","type":"text"},{"text":" ","type":"text"},{"text":"type.","type":"text"}],"type":"topic"}}}