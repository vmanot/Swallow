{"metadata":{"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"*","kind":"identifier"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"text":"UInt16","kind":"typeIdentifier","preciseIdentifier":"s:s6UInt16V"},{"kind":"text","text":", "},{"text":"UInt16","kind":"typeIdentifier","preciseIdentifier":"s:s6UInt16V"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s6UInt16V","text":"UInt16"}],"roleHeading":"Operator","externalID":"s:s6UInt16V1moiyA2B_ABtFZ","modules":[{"name":"Compute","relatedModules":["Swift"]}],"symbolKind":"op","title":"*(_:_:)","extendedModule":"Swift","role":"symbol"},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/BinaryInteger-Implementations"]]},"schemaVersion":{"major":0,"patch":0,"minor":3},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"*"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"text":"lhs","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16","text":"UInt16","preciseIdentifier":"s:s6UInt16V"},{"text":", ","kind":"text"},{"kind":"internalParam","text":"rhs"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s6UInt16V","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16","text":"UInt16"},{"kind":"text","text":") -> "},{"text":"UInt16","preciseIdentifier":"s:s6UInt16V","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16","kind":"typeIdentifier"}]}]},{"kind":"parameters","parameters":[{"name":"lhs","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The first value to multiply."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The second value to multiply."}]}],"name":"rhs"}]},{"content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"inlineContent":[{"type":"text","text":"The multiplication operator ("},{"type":"codeVoice","code":"*"},{"text":") calculates the product of its two","type":"text"},{"type":"text","text":" "},{"text":"arguments. For example:","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":["2 * 3                   \/\/ 6","100 * 21                \/\/ 2100","-10 * 15                \/\/ -150","3.5 * 2.25              \/\/ 7.875"]},{"inlineContent":[{"text":"You cannot use ","type":"text"},{"type":"codeVoice","code":"*"},{"text":" with arguments of different types. To multiply values","type":"text"},{"type":"text","text":" "},{"type":"text","text":"of different types, convert one of the values to the other value’s type."}],"type":"paragraph"},{"type":"codeListing","code":["let x: Int8 = 21","let y: Int = 1000000","Int(x) * y              \/\/ 21000000"],"syntax":null},{"type":"paragraph","inlineContent":[{"text":"The product of the two arguments must be representable in the arguments’","type":"text"},{"type":"text","text":" "},{"type":"text","text":"type. In the following example, the result of "},{"type":"codeVoice","code":"21 * 21"},{"type":"text","text":" is greater than"},{"type":"text","text":" "},{"text":"the maximum representable ","type":"text"},{"code":"Int8","type":"codeVoice"},{"text":" value:","type":"text"}]},{"type":"codeListing","code":["x * 21                  \/\/ Overflow error"],"syntax":null},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Overflow checking is not performed in "},{"code":"-Ounchecked","type":"codeVoice"},{"text":" builds.","type":"text"}]}],"style":"note","name":"Note","type":"aside"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you want to opt out of overflow checking and wrap the result in case"},{"type":"text","text":" "},{"type":"text","text":"of any overflow, use the overflow multiplication operator ("},{"type":"codeVoice","code":"&*"},{"type":"text","text":")."}]},{"code":["x &* 21                \/\/ -115"],"type":"codeListing","syntax":null}],"kind":"content"}],"variants":[{"paths":["\/documentation\/compute\/uint16\/*(_:_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","sections":[],"abstract":[{"text":"Multiplies two values and produces their product.","type":"text"}],"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/*(_:_:)","interfaceLanguage":"swift"},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/UInt16/*(_:_:)":{"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"*","kind":"identifier"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"preciseIdentifier":"s:s6UInt16V","text":"UInt16","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"UInt16","kind":"typeIdentifier","preciseIdentifier":"s:s6UInt16V"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:s6UInt16V","text":"UInt16","kind":"typeIdentifier"}],"role":"symbol","title":"*(_:_:)","abstract":[{"text":"Multiplies two values and produces their product.","type":"text"}],"url":"\/documentation\/compute\/uint16\/*(_:_:)","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/*(_:_:)","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt16":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"UInt16","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"UInt16"}],"title":"UInt16","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16","url":"\/documentation\/compute\/uint16","kind":"symbol","role":"symbol","abstract":[{"text":"A 16-bit unsigned integer value","type":"text"},{"text":" ","type":"text"},{"text":"type.","type":"text"}],"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt16/BinaryInteger-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/BinaryInteger-Implementations","url":"\/documentation\/compute\/uint16\/binaryinteger-implementations","type":"topic","title":"BinaryInteger Implementations","role":"collectionGroup","abstract":[],"kind":"article"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"}}}