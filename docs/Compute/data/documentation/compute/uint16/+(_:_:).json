{"schemaVersion":{"major":0,"patch":0,"minor":3},"metadata":{"title":"+(_:_:)","modules":[{"name":"Compute","relatedModules":["Swift"]}],"externalID":"s:s6UInt16V1poiyA2B_ABtFZ","role":"symbol","roleHeading":"Operator","extendedModule":"Swift","symbolKind":"op","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"+"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"text":"UInt16","preciseIdentifier":"s:s6UInt16V","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:s6UInt16V","text":"UInt16","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"UInt16","kind":"typeIdentifier","preciseIdentifier":"s:s6UInt16V"}]},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/BinaryInteger-Implementations"]]},"kind":"symbol","abstract":[{"text":"Adds two values and produces their sum.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"+"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"internalParam","text":"lhs"},{"text":": ","kind":"text"},{"text":"UInt16","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16","kind":"typeIdentifier","preciseIdentifier":"s:s6UInt16V"},{"text":", ","kind":"text"},{"text":"rhs","kind":"internalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s6UInt16V","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16","kind":"typeIdentifier","text":"UInt16"},{"kind":"text","text":") -> "},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16","kind":"typeIdentifier","text":"UInt16","preciseIdentifier":"s:s6UInt16V"}],"platforms":["macOS"]}]},{"parameters":[{"name":"lhs","content":[{"inlineContent":[{"type":"text","text":"The first value to add."}],"type":"paragraph"}]},{"name":"rhs","content":[{"inlineContent":[{"text":"The second value to add.","type":"text"}],"type":"paragraph"}]}],"kind":"parameters"},{"content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"The addition operator (","type":"text"},{"type":"codeVoice","code":"+"},{"type":"text","text":") calculates the sum of its two arguments. For"},{"type":"text","text":" "},{"text":"example:","type":"text"}]},{"syntax":null,"code":["1 + 2                   \/\/ 3","-10 + 15                \/\/ 5","-15 + -5                \/\/ -20","21.5 + 3.25             \/\/ 24.75"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You cannot use "},{"type":"codeVoice","code":"+"},{"text":" with arguments of different types. To add values of","type":"text"},{"type":"text","text":" "},{"type":"text","text":"different types, convert one of the values to the other value’s type."}]},{"code":["let x: Int8 = 21","let y: Int = 1000000","Int(x) + y              \/\/ 1000021"],"syntax":null,"type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"The sum of the two arguments must be representable in the arguments’","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"type. In the following example, the result of "},{"type":"codeVoice","code":"21 + 120"},{"type":"text","text":" is greater than"},{"text":" ","type":"text"},{"text":"the maximum representable ","type":"text"},{"type":"codeVoice","code":"Int8"},{"text":" value:","type":"text"}]},{"type":"codeListing","syntax":null,"code":["x + 120                 \/\/ Overflow error"]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Overflow checking is not performed in "},{"code":"-Ounchecked","type":"codeVoice"},{"type":"text","text":" builds."}]}],"name":"Note","type":"aside","style":"note"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you want to opt out of overflow checking and wrap the result in case"},{"text":" ","type":"text"},{"text":"of any overflow, use the overflow addition operator (","type":"text"},{"code":"&+","type":"codeVoice"},{"type":"text","text":")."}]},{"syntax":null,"code":["x &+ 120                \/\/ -115"],"type":"codeListing"}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/uint16\/+(_:_:)"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/+(_:_:)"},"sections":[],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/UInt16/BinaryInteger-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/BinaryInteger-Implementations","url":"\/documentation\/compute\/uint16\/binaryinteger-implementations","type":"topic","title":"BinaryInteger Implementations","role":"collectionGroup","abstract":[],"kind":"article"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt16/+(_:_:)":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/+(_:_:)","url":"\/documentation\/compute\/uint16\/+(_:_:)","role":"symbol","title":"+(_:_:)","kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"+"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"UInt16","preciseIdentifier":"s:s6UInt16V","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:s6UInt16V","kind":"typeIdentifier","text":"UInt16"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"UInt16","preciseIdentifier":"s:s6UInt16V"}],"abstract":[{"type":"text","text":"Adds two values and produces their sum."}],"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt16":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"UInt16","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"UInt16"}],"title":"UInt16","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16","url":"\/documentation\/compute\/uint16","kind":"symbol","role":"symbol","abstract":[{"text":"A 16-bit unsigned integer value","type":"text"},{"text":" ","type":"text"},{"text":"type.","type":"text"}],"type":"topic"}}}