{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/DropWhileSequence\/forEach(_:)"},"metadata":{"modules":[{"name":"Compute","relatedModules":["Swift"]}],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"forEach"},{"kind":"text","text":"(("},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"}],"symbolKind":"method","title":"forEach(_:)","externalID":"s:STsE7forEachyyy7ElementQzKXEKF::SYNTHESIZED::s:s17DropWhileSequenceV","extendedModule":"Swift","roleHeading":"Instance Method"},"variants":[{"paths":["\/documentation\/compute\/dropwhilesequence\/foreach(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"forEach","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"body"},{"text":": (","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","text":"Element"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Void","preciseIdentifier":"s:s4Voida","text":"Void"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"}]}]},{"kind":"parameters","parameters":[{"name":"body","content":[{"inlineContent":[{"text":"A closure that takes an element of the sequence as a","type":"text"},{"text":" ","type":"text"},{"text":"parameter.","type":"text"}],"type":"paragraph"}]}]},{"kind":"content","content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The two loops in the following example produce the same output:"}]},{"syntax":null,"type":"codeListing","code":["let numberWords = [\"one\", \"two\", \"three\"]","for word in numberWords {","    print(word)","}","\/\/ Prints \"one\"","\/\/ Prints \"two\"","\/\/ Prints \"three\"","","numberWords.forEach { word in","    print(word)","}","\/\/ Same as above"]},{"type":"paragraph","inlineContent":[{"text":"Using the ","type":"text"},{"code":"forEach","type":"codeVoice"},{"text":" method is distinct from a ","type":"text"},{"type":"codeVoice","code":"for"},{"type":"text","text":"-"},{"type":"codeVoice","code":"in"},{"text":" loop in two","type":"text"},{"text":" ","type":"text"},{"text":"important ways:","type":"text"}]},{"type":"orderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"You cannot use a "},{"type":"codeVoice","code":"break"},{"type":"text","text":" or "},{"code":"continue","type":"codeVoice"},{"text":" statement to exit the current","type":"text"},{"type":"text","text":" "},{"text":"call of the ","type":"text"},{"type":"codeVoice","code":"body"},{"text":" closure or skip subsequent calls.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Using the "},{"code":"return","type":"codeVoice"},{"text":" statement in the ","type":"text"},{"type":"codeVoice","code":"body"},{"type":"text","text":" closure will exit only from"},{"type":"text","text":" "},{"type":"text","text":"the current call to "},{"code":"body","type":"codeVoice"},{"text":", not from any outer scope, and won’t skip","type":"text"},{"text":" ","type":"text"},{"text":"subsequent calls.","type":"text"}],"type":"paragraph"}]}]}]}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/DropWhileSequence","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/DropWhileSequence\/Sequence-Implementations"]]},"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"abstract":[{"text":"Calls the given closure on each element in the sequence in the same order","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"as a "},{"type":"codeVoice","code":"for"},{"type":"text","text":"-"},{"type":"codeVoice","code":"in"},{"type":"text","text":" loop."}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/DropWhileSequence/Sequence-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/DropWhileSequence\/Sequence-Implementations","type":"topic","url":"\/documentation\/compute\/dropwhilesequence\/sequence-implementations","abstract":[],"kind":"article","title":"Sequence Implementations","role":"collectionGroup"},"doc://com.swallow.documentation.Compute/documentation/Compute/Void":{"abstract":[{"text":"The return type of functions that don’t explicitly specify a return type,","type":"text"},{"text":" ","type":"text"},{"text":"that is, an empty tuple ","type":"text"},{"type":"codeVoice","code":"()"},{"type":"text","text":"."}],"type":"topic","title":"Void","url":"\/documentation\/compute\/void","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Void"}],"navigatorTitle":[{"text":"Void","kind":"identifier"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Void"},"doc://com.swallow.documentation.Compute/documentation/Compute/DropWhileSequence/forEach(_:)":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/DropWhileSequence\/forEach(_:)","title":"forEach(_:)","type":"topic","abstract":[{"type":"text","text":"Calls the given closure on each element in the sequence in the same order"},{"type":"text","text":" "},{"type":"text","text":"as a "},{"type":"codeVoice","code":"for"},{"type":"text","text":"-"},{"code":"in","type":"codeVoice"},{"text":" loop.","type":"text"}],"role":"symbol","kind":"symbol","url":"\/documentation\/compute\/dropwhilesequence\/foreach(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"forEach","kind":"identifier"},{"text":"((","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"}]},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/DropWhileSequence":{"abstract":[{"type":"text","text":"A sequence that lazily consumes and drops "},{"type":"codeVoice","code":"n"},{"type":"text","text":" elements from an underlying"},{"type":"text","text":" "},{"type":"codeVoice","code":"Base"},{"text":" iterator before possibly returning the first available element.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"DropWhileSequence","kind":"identifier"}],"url":"\/documentation\/compute\/dropwhilesequence","title":"DropWhileSequence","role":"symbol","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/DropWhileSequence","type":"topic","navigatorTitle":[{"text":"DropWhileSequence","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence/Element":{"type":"topic","required":true,"abstract":[{"type":"text","text":"A type representing the sequence’s elements."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"symbol","url":"\/documentation\/compute\/sequence\/element","role":"symbol","title":"Element","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"identifier"}]}}}