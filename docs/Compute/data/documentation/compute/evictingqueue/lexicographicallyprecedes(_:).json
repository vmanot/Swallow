{"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/EvictingQueue\/lexicographicallyPrecedes(_:)"},"kind":"symbol","schemaVersion":{"major":0,"patch":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/EvictingQueue","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/EvictingQueue\/Sequence-Implementations"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/evictingqueue\/lexicographicallyprecedes(_:)"]}],"metadata":{"extendedModule":"Swift","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"lexicographicallyPrecedes","kind":"identifier"},{"kind":"text","text":"<"},{"text":"OtherSequence","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"OtherSequence"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"role":"symbol","roleHeading":"Instance Method","title":"lexicographicallyPrecedes(_:)","modules":[{"name":"Compute","relatedModules":["Swift"]}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Comparable"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"externalID":"s:STsSL7ElementRpzrlE25lexicographicallyPrecedesySbqd__STRd__AAQyd__ABRSlF::SYNTHESIZED::s:7Compute13EvictingQueueV"},"abstract":[{"text":"Returns a Boolean value indicating whether the sequence precedes another","type":"text"},{"type":"text","text":" "},{"text":"sequence in a lexicographical (dictionary) ordering, using the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"less-than operator ("},{"code":"<","type":"codeVoice"},{"type":"text","text":") to compare elements."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"lexicographicallyPrecedes"},{"kind":"text","text":"<"},{"text":"OtherSequence","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"other"},{"text":": ","kind":"text"},{"text":"OtherSequence","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Bool","preciseIdentifier":"s:Sb","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bool","kind":"typeIdentifier"},{"kind":"text","text":" "},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"text":"OtherSequence","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence","kind":"typeIdentifier","preciseIdentifier":"s:ST","text":"Sequence"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","text":"Element"},{"kind":"text","text":" == "},{"text":"OtherSequence","kind":"typeIdentifier"},{"text":".","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","text":"Element","preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier"}],"platforms":["macOS"],"languages":["swift"]}]},{"parameters":[{"name":"other","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A sequence to compare to this sequence."}]}]}],"kind":"parameters"},{"content":[{"level":2,"text":"Return Value","type":"heading","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"type":"codeVoice","code":"true"},{"text":" if this sequence precedes ","type":"text"},{"type":"codeVoice","code":"other"},{"text":" in a dictionary","type":"text"},{"type":"text","text":" "},{"text":"ordering; otherwise, ","type":"text"},{"code":"false","type":"codeVoice"},{"type":"text","text":"."}]}],"kind":"content"},{"content":[{"level":2,"anchor":"discussion","type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"This example uses the ","type":"text"},{"type":"codeVoice","code":"lexicographicallyPrecedes"},{"type":"text","text":" method to test which"},{"text":" ","type":"text"},{"type":"text","text":"array of integers comes first in a lexicographical ordering."}]},{"syntax":null,"code":["let a = [1, 2, 2, 2]","let b = [1, 2, 3, 4]","","print(a.lexicographicallyPrecedes(b))","\/\/ Prints \"true\"","print(b.lexicographicallyPrecedes(b))","\/\/ Prints \"false\""],"type":"codeListing"},{"type":"aside","style":"note","content":[{"type":"paragraph","inlineContent":[{"text":"This method implements the mathematical notion of lexicographical","type":"text"},{"type":"text","text":" "},{"type":"text","text":"ordering, which has no connection to Unicode.  If you are sorting"},{"type":"text","text":" "},{"type":"text","text":"strings to present to the end user, use "},{"type":"codeVoice","code":"String"},{"type":"text","text":" APIs that"},{"type":"text","text":" "},{"type":"text","text":"perform localized comparison."}]}],"name":"Note"},{"name":"Complexity","style":"note","type":"aside","content":[{"inlineContent":[{"type":"text","text":"O("},{"type":"emphasis","inlineContent":[{"type":"text","text":"m"}]},{"type":"text","text":"), where "},{"inlineContent":[{"text":"m","type":"text"}],"type":"emphasis"},{"text":" is the lesser of the length of the","type":"text"},{"text":" ","type":"text"},{"text":"sequence and the length of ","type":"text"},{"code":"other","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}]}],"kind":"content"}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/EvictingQueue/lexicographicallyPrecedes(_:)":{"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"lexicographicallyPrecedes"},{"text":"<","kind":"text"},{"text":"OtherSequence","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"OtherSequence","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"role":"symbol","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Element"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Comparable"},{"type":"text","text":"."}]},"url":"\/documentation\/compute\/evictingqueue\/lexicographicallyprecedes(_:)","abstract":[{"type":"text","text":"Returns a Boolean value indicating whether the sequence precedes another"},{"text":" ","type":"text"},{"type":"text","text":"sequence in a lexicographical (dictionary) ordering, using the"},{"text":" ","type":"text"},{"text":"less-than operator (","type":"text"},{"code":"<","type":"codeVoice"},{"type":"text","text":") to compare elements."}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/EvictingQueue\/lexicographicallyPrecedes(_:)","title":"lexicographicallyPrecedes(_:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/EvictingQueue/Sequence-Implementations":{"role":"collectionGroup","title":"Sequence Implementations","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/EvictingQueue\/Sequence-Implementations","url":"\/documentation\/compute\/evictingqueue\/sequence-implementations","kind":"article","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Bool":{"url":"\/documentation\/compute\/bool","role":"symbol","title":"Bool","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Bool","kind":"identifier"}],"abstract":[{"type":"text","text":"A value type whose instances are either "},{"type":"codeVoice","code":"true"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"false"},{"text":".","type":"text"}],"navigatorTitle":[{"text":"Bool","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bool","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/EvictingQueue":{"type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"EvictingQueue"}],"abstract":[{"text":"A prioritiy queue that evicts elements after a certain count.","type":"text"}],"url":"\/documentation\/compute\/evictingqueue","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/EvictingQueue","title":"EvictingQueue","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"EvictingQueue","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence/Element":{"type":"topic","required":true,"abstract":[{"type":"text","text":"A type representing the sequenceâ€™s elements."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"symbol","url":"\/documentation\/compute\/sequence\/element","role":"symbol","title":"Element","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence":{"url":"\/documentation\/compute\/sequence","navigatorTitle":[{"kind":"identifier","text":"Sequence"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence","title":"Sequence","kind":"symbol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Sequence","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"A type that provides sequential, iterated access to its elements."}]}}}