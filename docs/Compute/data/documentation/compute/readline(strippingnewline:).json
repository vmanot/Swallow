{"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/readline(strippingnewline:)"]}],"kind":"symbol","abstract":[{"type":"text","text":"Returns a string read from standard input through the end of the current"},{"type":"text","text":" "},{"text":"line or until EOF is reached.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"readLine","kind":"identifier"},{"kind":"text","text":"("},{"text":"strippingNewline","kind":"externalParam"},{"kind":"text","text":": "},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bool","text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":" = true) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String"},{"kind":"text","text":"?"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"name":"strippingNewline","content":[{"inlineContent":[{"type":"text","text":"If "},{"type":"codeVoice","code":"true"},{"text":", newline characters and character","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"combinations are stripped from the result; otherwise, newline characters"},{"text":" ","type":"text"},{"type":"text","text":"or character combinations are preserved. The default is "},{"code":"true","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}]}]},{"kind":"content","content":[{"type":"heading","anchor":"return-value","text":"Return Value","level":2},{"inlineContent":[{"text":"The string of characters read from standard input. If EOF has","type":"text"},{"text":" ","type":"text"},{"text":"already been reached when ","type":"text"},{"code":"readLine()","type":"codeVoice"},{"text":" is called, the result is ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."}],"type":"paragraph"}]},{"kind":"content","content":[{"level":2,"text":"Discussion","anchor":"discussion","type":"heading"},{"inlineContent":[{"type":"text","text":"Standard input is interpreted as "},{"code":"UTF-8","type":"codeVoice"},{"type":"text","text":". Invalid bytes are replaced by"},{"type":"text","text":" "},{"type":"text","text":"Unicode "},{"type":"reference","isActive":true,"identifier":"https:\/\/unicode.org\/glossary\/#replacement_character"},{"type":"text","text":"."}],"type":"paragraph"}]}],"metadata":{"modules":[{"name":"Compute"}],"title":"readLine(strippingNewline:)","symbolKind":"func","externalID":"s:s8readLine16strippingNewlineSSSgSb_tF","role":"symbol","roleHeading":"Function","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"readLine","kind":"identifier"},{"kind":"text","text":"("},{"text":"strippingNewline","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":"?"}]},"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/readLine(strippingNewline:)"},"sections":[],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/readLine(strippingNewline:)":{"title":"readLine(strippingNewline:)","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"readLine","kind":"identifier"},{"text":"(","kind":"text"},{"text":"strippingNewline","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":") -> "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":"?","kind":"text"}],"abstract":[{"type":"text","text":"Returns a string read from standard input through the end of the current"},{"type":"text","text":" "},{"type":"text","text":"line or until EOF is reached."}],"type":"topic","url":"\/documentation\/compute\/readline(strippingnewline:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/readLine(strippingNewline:)"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"https://unicode.org/glossary/#replacement_character":{"identifier":"https:\/\/unicode.org\/glossary\/#replacement_character","url":"https:\/\/unicode.org\/glossary\/#replacement_character","titleInlineContent":[{"text":"replacement characters","type":"text"}],"title":"replacement characters","type":"link"},"doc://com.swallow.documentation.Compute/documentation/Compute/String":{"type":"topic","navigatorTitle":[{"kind":"identifier","text":"String"}],"title":"String","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"String","kind":"identifier"}],"abstract":[{"type":"text","text":"A Unicode string value that is a collection of characters."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String","kind":"symbol","role":"symbol","url":"\/documentation\/compute\/string"},"doc://com.swallow.documentation.Compute/documentation/Compute/Bool":{"url":"\/documentation\/compute\/bool","role":"symbol","title":"Bool","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Bool","kind":"identifier"}],"abstract":[{"type":"text","text":"A value type whose instances are either "},{"type":"codeVoice","code":"true"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"false"},{"text":".","type":"text"}],"navigatorTitle":[{"text":"Bool","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bool","kind":"symbol"}}}