{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/floatingpoint"]}],"topicSections":[{"title":"Operators","identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/*(_:_:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/*=(_:_:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/+(_:_:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/+=(_:_:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/-(_:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/-(_:_:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/-=(_:_:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/_(_:_:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/_=(_:_:)"],"generated":true,"anchor":"Operators"},{"identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/Exponent-swift.associatedtype"],"generated":true,"title":"Associated Types","anchor":"Associated-Types"},{"title":"Initializers","anchor":"Initializers","generated":true,"identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/init(_:)-2f8bx","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/init(_:)-2xwlo","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/init(exactly:)-3gl9z","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/init(sign:exponent:significand:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/init(signOf:magnitudeOf:)-2yrnh"]},{"identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/exponent-swift.property","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/floatingPointClass-5kgla","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/isCanonical","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/isFinite","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/isInfinite","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/isNaN","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/isNormal","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/isSignalingNaN","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/isSubnormal","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/isZero","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/nextDown-3t7gt","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/nextUp","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/sign","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/significand","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/ulp"],"title":"Instance Properties","anchor":"Instance-Properties","generated":true},{"generated":true,"identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/addProduct(_:_:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/addingProduct(_:_:)-3z17c","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/formRemainder(dividingBy:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/formSquareRoot()","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/formTruncatingRemainder(dividingBy:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/isEqual(to:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/isLess(than:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/isLessThanOrEqualTo(_:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/isTotallyOrdered(belowOrEqualTo:)-6odsl","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/negate()","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/remainder(dividingBy:)-4v8iq","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/round()","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/round(_:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/rounded()","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/rounded(_:)-7rbik","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/squareRoot()-1yl1x","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/truncatingRemainder(dividingBy:)-7jlkk"],"title":"Instance Methods","anchor":"Instance-Methods"},{"identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/greatestFiniteMagnitude","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/infinity","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/leastNonzeroMagnitude","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/leastNormalMagnitude","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/nan","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/pi","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/radix-4sksz","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/signalingNaN","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/ulpOfOne-7hdlb"],"title":"Type Properties","generated":true,"anchor":"Type-Properties"},{"anchor":"Type-Methods","title":"Type Methods","identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/maximum(_:_:)-7vxwv","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/maximumMagnitude(_:_:)-820gl","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/minimum(_:_:)-69n9s","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/minimumMagnitude(_:_:)-2i4od"],"generated":true}],"metadata":{"symbolKind":"protocol","roleHeading":"Protocol","title":"FloatingPoint","navigatorTitle":[{"text":"FloatingPoint","kind":"identifier"}],"modules":[{"name":"Compute"}],"role":"symbol","externalID":"s:SF","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"FloatingPoint","kind":"identifier"}]},"schemaVersion":{"patch":0,"minor":3,"major":0},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute"]]},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FloatingPoint","kind":"identifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:SH","kind":"typeIdentifier","text":"Hashable","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Hashable"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:s13SignedNumericP","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SignedNumeric","text":"SignedNumeric","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:Sx","text":"Strideable","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Strideable"},{"text":" ","kind":"text"},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Magnitude","preciseIdentifier":"s:Sj9MagnitudeQa","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Numeric\/Magnitude-swift.associatedtype"}],"platforms":["macOS"],"languages":["swift"]}]},{"content":[{"type":"heading","text":"Overview","anchor":"overview","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Floating-point types are used to represent fractional numbers, like 5.5,"},{"type":"text","text":" "},{"text":"100.0, or 3.14159274. Each floating-point type has its own possible range","type":"text"},{"type":"text","text":" "},{"text":"and precision. The floating-point types in the standard library are","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"Float"},{"text":", ","type":"text"},{"code":"Double","type":"codeVoice"},{"text":", and ","type":"text"},{"type":"codeVoice","code":"Float80"},{"type":"text","text":" where available."}]},{"type":"paragraph","inlineContent":[{"text":"Create new instances of floating-point types using integer or","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"floating-point literals. For example:"}]},{"type":"codeListing","syntax":null,"code":["let temperature = 33.2","let recordHigh = 37.5"]},{"inlineContent":[{"text":"The ","type":"text"},{"code":"FloatingPoint","type":"codeVoice"},{"text":" protocol declares common arithmetic operations, so you","type":"text"},{"text":" ","type":"text"},{"text":"can write functions and algorithms that work on any floating-point type.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"The following example declares a function that calculates the length of"},{"type":"text","text":" "},{"type":"text","text":"the hypotenuse of a right triangle given its two perpendicular sides."},{"type":"text","text":" "},{"type":"text","text":"Because the "},{"code":"hypotenuse(_:_:)","type":"codeVoice"},{"type":"text","text":" function uses a generic parameter"},{"type":"text","text":" "},{"type":"text","text":"constrained to the "},{"code":"FloatingPoint","type":"codeVoice"},{"text":" protocol, you can call it using any","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"floating-point type."}],"type":"paragraph"},{"type":"codeListing","code":["func hypotenuse<T: FloatingPoint>(_ a: T, _ b: T) -> T {","    return (a * a + b * b).squareRoot()","}","","let (dx, dy) = (3.0, 4.0)","let distance = hypotenuse(dx, dy)","\/\/ distance == 5.0"],"syntax":null},{"type":"paragraph","inlineContent":[{"text":"Floating-point values are represented as a ","type":"text"},{"inlineContent":[{"type":"text","text":"sign"}],"type":"emphasis"},{"type":"text","text":" and a "},{"type":"emphasis","inlineContent":[{"text":"magnitude","type":"text"}]},{"type":"text","text":", where"},{"text":" ","type":"text"},{"type":"text","text":"the magnitude is calculated using the type’s "},{"type":"emphasis","inlineContent":[{"text":"radix","type":"text"}]},{"type":"text","text":" and the instance’s"},{"type":"text","text":" "},{"type":"emphasis","inlineContent":[{"text":"significand","type":"text"}]},{"text":" and ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"exponent","type":"text"}]},{"type":"text","text":". This magnitude calculation takes the"},{"type":"text","text":" "},{"type":"text","text":"following form for a floating-point value "},{"code":"x","type":"codeVoice"},{"text":" of type ","type":"text"},{"type":"codeVoice","code":"F"},{"type":"text","text":", where "},{"code":"**","type":"codeVoice"},{"type":"text","text":" is"},{"type":"text","text":" "},{"type":"text","text":"exponentiation:"}]},{"code":["x.significand * (F.radix ** x.exponent)"],"type":"codeListing","syntax":null},{"inlineContent":[{"type":"text","text":"Here’s an example of the number -8.5 represented as an instance of the"},{"text":" ","type":"text"},{"type":"codeVoice","code":"Double"},{"type":"text","text":" type, which defines a radix of 2."}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":["let y = -8.5","\/\/ y.sign == .minus","\/\/ y.significand == 1.0625","\/\/ y.exponent == 3","","let magnitude = 1.0625 * Double(2 ** 3)","\/\/ magnitude == 8.5"]},{"type":"paragraph","inlineContent":[{"text":"Types that conform to the ","type":"text"},{"code":"FloatingPoint","type":"codeVoice"},{"type":"text","text":" protocol provide most basic"},{"type":"text","text":" "},{"type":"text","text":"(clause 5) operations of the "},{"identifier":"http:\/\/ieeexplore.ieee.org\/servlet\/opac?punumber=4610933","isActive":true,"type":"reference"},{"type":"text","text":". The base,"},{"text":" ","type":"text"},{"text":"precision, and exponent range are not fixed in any way by this protocol,","type":"text"},{"text":" ","type":"text"},{"text":"but it enforces the basic requirements of any IEEE 754 floating-point","type":"text"},{"type":"text","text":" "},{"type":"text","text":"type."}]},{"type":"heading","anchor":"Additional-Considerations","level":1,"text":"Additional Considerations"},{"type":"paragraph","inlineContent":[{"text":"In addition to representing specific numbers, floating-point types also","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"have special values for working with overflow and nonnumeric results of"},{"text":" ","type":"text"},{"type":"text","text":"calculation."}]},{"level":2,"text":"Infinity","type":"heading","anchor":"Infinity"},{"inlineContent":[{"type":"text","text":"Any value whose magnitude is so great that it would round to a value"},{"text":" ","type":"text"},{"type":"text","text":"outside the range of representable numbers is rounded to "},{"inlineContent":[{"type":"text","text":"infinity"}],"type":"emphasis"},{"type":"text","text":". For a"},{"type":"text","text":" "},{"text":"type ","type":"text"},{"type":"codeVoice","code":"F"},{"type":"text","text":", positive and negative infinity are represented as "},{"type":"codeVoice","code":"F.infinity"},{"text":" ","type":"text"},{"type":"text","text":"and "},{"type":"codeVoice","code":"-F.infinity"},{"type":"text","text":", respectively. Positive infinity compares greater than"},{"text":" ","type":"text"},{"type":"text","text":"every finite value and negative infinity, while negative infinity compares"},{"type":"text","text":" "},{"text":"less than every finite value and positive infinity. Infinite values with","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the same sign are equal to each other."}],"type":"paragraph"},{"syntax":null,"code":["let values: [Double] = [10.0, 25.0, -10.0, .infinity, -.infinity]","print(values.sorted())","\/\/ Prints \"[-inf, -10.0, 10.0, 25.0, inf]\""],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"Operations with infinite values follow real arithmetic as much as possible:","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Adding or subtracting a finite value, or multiplying or dividing infinity"},{"text":" ","type":"text"},{"type":"text","text":"by a nonzero finite value, results in infinity."}]},{"level":2,"type":"heading","text":"NaN (“not a number”)","anchor":"NaN-not-a-number"},{"type":"paragraph","inlineContent":[{"text":"Floating-point types represent values that are neither finite numbers nor","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"infinity as NaN, an abbreviation for “not a number.” Comparing a NaN with"},{"text":" ","type":"text"},{"text":"any value, including another NaN, results in ","type":"text"},{"type":"codeVoice","code":"false"},{"text":".","type":"text"}]},{"syntax":null,"type":"codeListing","code":["let myNaN = Double.nan","print(myNaN > 0)","\/\/ Prints \"false\"","print(myNaN < 0)","\/\/ Prints \"false\"","print(myNaN == .nan)","\/\/ Prints \"false\""]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Because testing whether one NaN is equal to another NaN results in "},{"code":"false","type":"codeVoice"},{"text":",","type":"text"},{"type":"text","text":" "},{"type":"text","text":"use the "},{"type":"codeVoice","code":"isNaN"},{"text":" property to test whether a value is NaN.","type":"text"}]},{"type":"codeListing","syntax":null,"code":["print(myNaN.isNaN)","\/\/ Prints \"true\""]},{"type":"paragraph","inlineContent":[{"text":"NaN propagates through many arithmetic operations. When you are operating","type":"text"},{"type":"text","text":" "},{"text":"on many values, this behavior is valuable because operations on NaN simply","type":"text"},{"text":" ","type":"text"},{"text":"forward the value and don’t cause runtime errors. The following example","type":"text"},{"text":" ","type":"text"},{"text":"shows how NaN values operate in different contexts.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Imagine you have a set of temperature data for which you need to report"},{"text":" ","type":"text"},{"text":"some general statistics: the total number of observations, the number of","type":"text"},{"text":" ","type":"text"},{"text":"valid observations, and the average temperature. First, a set of","type":"text"},{"type":"text","text":" "},{"text":"observations in Celsius is parsed from strings to ","type":"text"},{"code":"Double","type":"codeVoice"},{"type":"text","text":" values:"}]},{"type":"codeListing","code":["let temperatureData = [\"21.5\", \"19.25\", \"27\", \"no data\", \"28.25\", \"no data\", \"23\"]","let tempsCelsius = temperatureData.map { Double($0) ?? .nan }","print(tempsCelsius)","\/\/ Prints \"[21.5, 19.25, 27, nan, 28.25, nan, 23.0]\""],"syntax":null},{"inlineContent":[{"type":"text","text":"Note that some elements in the "},{"type":"codeVoice","code":"temperatureData "},{"text":" array are not valid","type":"text"},{"type":"text","text":" "},{"text":"numbers. When these invalid strings are parsed by the ","type":"text"},{"type":"codeVoice","code":"Double"},{"text":" failable","type":"text"},{"text":" ","type":"text"},{"text":"initializer, the example uses the nil-coalescing operator (","type":"text"},{"code":"??","type":"codeVoice"},{"type":"text","text":") to"},{"type":"text","text":" "},{"type":"text","text":"provide NaN as a fallback value."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Next, the observations in Celsius are converted to Fahrenheit:"}],"type":"paragraph"},{"code":["let tempsFahrenheit = tempsCelsius.map { $0 * 1.8 + 32 }","print(tempsFahrenheit)","\/\/ Prints \"[70.7, 66.65, 80.6, nan, 82.85, nan, 73.4]\""],"syntax":null,"type":"codeListing"},{"inlineContent":[{"text":"The NaN values in the ","type":"text"},{"type":"codeVoice","code":"tempsCelsius"},{"type":"text","text":" array are propagated through the"},{"type":"text","text":" "},{"text":"conversion and remain NaN in ","type":"text"},{"type":"codeVoice","code":"tempsFahrenheit"},{"type":"text","text":"."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Because calculating the average of the observations involves combining"},{"type":"text","text":" "},{"type":"text","text":"every value of the "},{"code":"tempsFahrenheit","type":"codeVoice"},{"text":" array, any NaN values cause the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"result to also be NaN, as seen in this example:"}],"type":"paragraph"},{"code":["let badAverage = tempsFahrenheit.reduce(0.0, +) \/ Double(tempsFahrenheit.count)","\/\/ badAverage.isNaN == true"],"type":"codeListing","syntax":null},{"inlineContent":[{"text":"Instead, when you need an operation to have a specific numeric result,","type":"text"},{"text":" ","type":"text"},{"text":"filter out any NaN values using the ","type":"text"},{"type":"codeVoice","code":"isNaN"},{"text":" property.","type":"text"}],"type":"paragraph"},{"syntax":null,"type":"codeListing","code":["let validTemps = tempsFahrenheit.filter { !$0.isNaN }","let average = validTemps.reduce(0.0, +) \/ Double(validTemps.count)"]},{"type":"paragraph","inlineContent":[{"text":"Finally, report the average temperature and observation counts:","type":"text"}]},{"syntax":null,"type":"codeListing","code":["print(\"Average: \\(average)°F in \\(validTemps.count) \" +","      \"out of \\(tempsFahrenheit.count) observations.\")","\/\/ Prints \"Average: 74.84°F in 5 out of 7 observations.\""]}],"kind":"content"}],"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint","interfaceLanguage":"swift"},"sections":[],"abstract":[{"text":"A floating-point numeric type.","type":"text"}],"relationshipsSections":[{"identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AdditiveArithmetic","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Comparable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Equatable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ExpressibleByIntegerLiteral","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Hashable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Numeric","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SignedNumeric","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Strideable"],"type":"inheritsFrom","title":"Inherits From","kind":"relationships"},{"kind":"relationships","identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryFloatingPoint"],"type":"inheritedBy","title":"Inherited By"},{"title":"Conforming Types","type":"conformingTypes","kind":"relationships","identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Double","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float16"]}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/FloatingPoint/nextUp":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/nextUp","kind":"symbol","title":"nextUp","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"nextUp"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"abstract":[{"text":"The least representable value that compares greater than this value.","type":"text"}],"type":"topic","role":"symbol","required":true,"url":"\/documentation\/compute\/floatingpoint\/nextup"},"doc://com.swallow.documentation.Compute/documentation/Compute/Double":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Double","abstract":[{"text":"A double-precision, floating-point value type.","type":"text"}],"title":"Double","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Double","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"Double","kind":"identifier"}],"kind":"symbol","type":"topic","url":"\/documentation\/compute\/double"},"doc://com.swallow.documentation.Compute/documentation/Compute/FloatingPoint":{"url":"\/documentation\/compute\/floatingpoint","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint","title":"FloatingPoint","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FloatingPoint","kind":"identifier"}],"navigatorTitle":[{"text":"FloatingPoint","kind":"identifier"}],"abstract":[{"text":"A floating-point numeric type.","type":"text"}],"kind":"symbol","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/FloatingPoint/round()":{"type":"topic","url":"\/documentation\/compute\/floatingpoint\/round()","title":"round()","abstract":[],"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/round()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"round"},{"text":"()","kind":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/AdditiveArithmetic":{"type":"topic","title":"AdditiveArithmetic","abstract":[{"text":"A type with values that support addition and subtraction.","type":"text"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AdditiveArithmetic"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AdditiveArithmetic","url":"\/documentation\/compute\/additivearithmetic","role":"symbol","navigatorTitle":[{"text":"AdditiveArithmetic","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/FloatingPoint/radix-4sksz":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/radix-4sksz","role":"symbol","url":"\/documentation\/compute\/floatingpoint\/radix-4sksz","abstract":[{"type":"text","text":"The radix, or base of exponentiation, for a floating-point type."}],"defaultImplementations":1,"kind":"symbol","type":"topic","title":"radix","required":true,"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"radix","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/FloatingPoint/init(_:)-2f8bx":{"defaultImplementations":2,"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/init(_:)-2f8bx","type":"topic","url":"\/documentation\/compute\/floatingpoint\/init(_:)-2f8bx","title":"init(_:)","abstract":[{"type":"text","text":"Creates a new value, rounded to the closest possible representation."}],"fragments":[{"kind":"identifier","text":"init"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Source"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"Source"},{"text":")","kind":"text"}],"kind":"symbol","role":"symbol","required":true},"doc://com.swallow.documentation.Compute/documentation/Compute/FloatingPoint/isTotallyOrdered(belowOrEqualTo:)-6odsl":{"required":true,"defaultImplementations":1,"title":"isTotallyOrdered(belowOrEqualTo:)","url":"\/documentation\/compute\/floatingpoint\/istotallyordered(beloworequalto:)-6odsl","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"isTotallyOrdered","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"belowOrEqualTo"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/isTotallyOrdered(belowOrEqualTo:)-6odsl","role":"symbol","abstract":[{"type":"text","text":"Returns a Boolean value indicating whether this instance should precede"},{"text":" ","type":"text"},{"type":"text","text":"or tie positions with the given value in an ascending sort."}],"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/FloatingPoint/minimum(_:_:)-69n9s":{"required":true,"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"minimum","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/minimum(_:_:)-69n9s","title":"minimum(_:_:)","defaultImplementations":1,"url":"\/documentation\/compute\/floatingpoint\/minimum(_:_:)-69n9s","abstract":[{"text":"Returns the lesser of the two given values.","type":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/FloatingPoint/isSubnormal":{"kind":"symbol","abstract":[{"text":"A Boolean value indicating whether the instance is subnormal.","type":"text"}],"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"isSubnormal","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"role":"symbol","type":"topic","title":"isSubnormal","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/isSubnormal","required":true,"url":"\/documentation\/compute\/floatingpoint\/issubnormal"},"doc://com.swallow.documentation.Compute/documentation/Compute/Hashable":{"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Hashable"}],"title":"Hashable","navigatorTitle":[{"text":"Hashable","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"A type that can be hashed into a "},{"type":"codeVoice","code":"Hasher"},{"type":"text","text":" to produce an integer hash value."}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Hashable","url":"\/documentation\/compute\/hashable","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/FloatingPoint/nan":{"title":"nan","url":"\/documentation\/compute\/floatingpoint\/nan","required":true,"role":"symbol","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"A quiet NaN (“not a number”)."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/nan","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"nan"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/FloatingPoint/-(_:_:)":{"role":"symbol","type":"topic","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"-","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Subtracts one value from another and produces their difference, rounded"},{"text":" ","type":"text"},{"text":"to a representable value.","type":"text"}],"kind":"symbol","title":"-(_:_:)","url":"\/documentation\/compute\/floatingpoint\/-(_:_:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/-(_:_:)","required":true},"doc://com.swallow.documentation.Compute/documentation/Compute/FloatingPoint/isLessThanOrEqualTo(_:)":{"title":"isLessThanOrEqualTo(_:)","abstract":[{"type":"text","text":"Returns a Boolean value indicating whether this instance is less than or"},{"text":" ","type":"text"},{"text":"equal to the given value.","type":"text"}],"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/isLessThanOrEqualTo(_:)","required":true,"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"isLessThanOrEqualTo"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"url":"\/documentation\/compute\/floatingpoint\/islessthanorequalto(_:)","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/FloatingPoint/ulp":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/ulp","type":"topic","title":"ulp","abstract":[{"type":"text","text":"The unit in the last place of this value."}],"kind":"symbol","url":"\/documentation\/compute\/floatingpoint\/ulp","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ulp","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"}],"required":true,"role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/FloatingPoint/-=(_:_:)":{"abstract":[{"type":"text","text":"Subtracts the second value from the first and stores the difference in"},{"type":"text","text":" "},{"text":"the left-hand-side variable, rounding to a representable value.","type":"text"}],"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"-="},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"text":")","kind":"text"}],"type":"topic","url":"\/documentation\/compute\/floatingpoint\/-=(_:_:)","role":"symbol","kind":"symbol","required":true,"title":"-=(_:_:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/-=(_:_:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/FloatingPoint/+(_:_:)":{"title":"+(_:_:)","abstract":[{"type":"text","text":"Adds two values and produces their sum, rounded to a"},{"text":" ","type":"text"},{"text":"representable value.","type":"text"}],"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/+(_:_:)","required":true,"type":"topic","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"+","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"}],"url":"\/documentation\/compute\/floatingpoint\/+(_:_:)","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/FloatingPoint/init(sign:exponent:significand:)":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/init(sign:exponent:significand:)","type":"topic","title":"init(sign:exponent:significand:)","abstract":[{"type":"text","text":"Creates a new value from the given sign, exponent, and significand."}],"kind":"symbol","url":"\/documentation\/compute\/floatingpoint\/init(sign:exponent:significand:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"sign","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"FloatingPointSign","preciseIdentifier":"s:s17FloatingPointSignO"},{"text":", ","kind":"text"},{"text":"exponent","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SF8ExponentQa","text":"Exponent"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"significand"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":")"}],"required":true,"role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Comparable":{"url":"\/documentation\/compute\/comparable","type":"topic","kind":"symbol","role":"symbol","abstract":[{"text":"A type that can be compared using the relational operators ","type":"text"},{"code":"<","type":"codeVoice"},{"text":", ","type":"text"},{"code":"<=","type":"codeVoice"},{"text":", ","type":"text"},{"type":"codeVoice","code":">="},{"text":",","type":"text"},{"type":"text","text":" "},{"type":"text","text":"and "},{"type":"codeVoice","code":">"},{"text":".","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Comparable"}],"title":"Comparable","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Comparable","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"Comparable","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/FloatingPoint/addProduct(_:_:)":{"title":"addProduct(_:_:)","abstract":[{"type":"text","text":"Adds the product of the two given values to this value in place, computed"},{"text":" ","type":"text"},{"text":"without intermediate rounding.","type":"text"}],"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/addProduct(_:_:)","required":true,"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"addProduct"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/compute\/floatingpoint\/addproduct(_:_:)","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/FloatingPoint/squareRoot()-1yl1x":{"required":true,"url":"\/documentation\/compute\/floatingpoint\/squareroot()-1yl1x","abstract":[{"type":"text","text":"Returns the square root of the value, rounded to a representable value."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/squareRoot()-1yl1x","kind":"symbol","defaultImplementations":1,"type":"topic","title":"squareRoot()","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"squareRoot","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/FloatingPoint/_=(_:_:)":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/_=(_:_:)","type":"topic","title":"\/=(_:_:)","abstract":[{"type":"text","text":"Divides the first value by the second and stores the quotient in the"},{"text":" ","type":"text"},{"text":"left-hand-side variable, rounding to a representable value.","type":"text"}],"kind":"symbol","url":"\/documentation\/compute\/floatingpoint\/_=(_:_:)","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"\/=","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":")"}],"required":true,"role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/FloatingPoint/*=(_:_:)":{"url":"\/documentation\/compute\/floatingpoint\/*=(_:_:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/*=(_:_:)","required":true,"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"*=","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":")","kind":"text"}],"kind":"symbol","title":"*=(_:_:)","role":"symbol","type":"topic","abstract":[{"text":"Multiplies two values and stores the result in the left-hand-side","type":"text"},{"text":" ","type":"text"},{"text":"variable, rounding to a representable value.","type":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/FloatingPoint/round(_:)":{"kind":"symbol","type":"topic","role":"symbol","required":true,"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"round","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"FloatingPointRoundingRule","preciseIdentifier":"s:s25FloatingPointRoundingRuleO"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Rounds the value to an integral value using the specified rounding rule."}],"title":"round(_:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/round(_:)","url":"\/documentation\/compute\/floatingpoint\/round(_:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/FloatingPoint/ulpOfOne-7hdlb":{"url":"\/documentation\/compute\/floatingpoint\/ulpofone-7hdlb","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/ulpOfOne-7hdlb","title":"ulpOfOne","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ulpOfOne","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"defaultImplementations":1,"abstract":[{"text":"The unit in the last place of 1.0.","type":"text"}],"required":true,"kind":"symbol","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/FloatingPoint/isLess(than:)":{"title":"isLess(than:)","abstract":[{"type":"text","text":"Returns a Boolean value indicating whether this instance is less than the"},{"text":" ","type":"text"},{"text":"given value.","type":"text"}],"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/isLess(than:)","required":true,"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"isLess"},{"text":"(","kind":"text"},{"text":"than","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"url":"\/documentation\/compute\/floatingpoint\/isless(than:)","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/FloatingPoint/formTruncatingRemainder(dividingBy:)":{"type":"topic","title":"formTruncatingRemainder(dividingBy:)","required":true,"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"formTruncatingRemainder","kind":"identifier"},{"kind":"text","text":"("},{"text":"dividingBy","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":")","kind":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/formTruncatingRemainder(dividingBy:)","abstract":[{"text":"Replaces this value with the remainder of itself divided by the given","type":"text"},{"type":"text","text":" "},{"text":"value using truncating division.","type":"text"}],"role":"symbol","url":"\/documentation\/compute\/floatingpoint\/formtruncatingremainder(dividingby:)","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/FloatingPoint/isInfinite":{"title":"isInfinite","abstract":[{"type":"text","text":"A Boolean value indicating whether the instance is infinite."}],"url":"\/documentation\/compute\/floatingpoint\/isinfinite","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/isInfinite","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isInfinite"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"type":"topic","required":true,"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/FloatingPoint/greatestFiniteMagnitude":{"type":"topic","url":"\/documentation\/compute\/floatingpoint\/greatestfinitemagnitude","abstract":[{"type":"text","text":"The greatest finite number representable by this type."}],"title":"greatestFiniteMagnitude","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"greatestFiniteMagnitude","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/greatestFiniteMagnitude","required":true,"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Equatable":{"abstract":[{"text":"A type that can be compared for value equality.","type":"text"}],"type":"topic","title":"Equatable","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Equatable"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Equatable","role":"symbol","url":"\/documentation\/compute\/equatable","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Equatable","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/FloatingPoint/isZero":{"required":true,"abstract":[{"type":"text","text":"A Boolean value indicating whether the instance is equal to zero."}],"type":"topic","title":"isZero","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"isZero","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/isZero","url":"\/documentation\/compute\/floatingpoint\/iszero"},"doc://com.swallow.documentation.Compute/documentation/Compute/FloatingPoint/_(_:_:)":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/_(_:_:)","type":"topic","title":"\/(_:_:)","abstract":[{"type":"text","text":"Returns the quotient of dividing the first value by the second, rounded"},{"text":" ","type":"text"},{"text":"to a representable value.","type":"text"}],"kind":"symbol","url":"\/documentation\/compute\/floatingpoint\/_(_:_:)","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"\/","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"}],"required":true,"role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/SignedNumeric":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SignedNumeric","url":"\/documentation\/compute\/signednumeric","title":"SignedNumeric","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"SignedNumeric"}],"navigatorTitle":[{"text":"SignedNumeric","kind":"identifier"}],"abstract":[{"type":"text","text":"A numeric type with a negation operation."}],"kind":"symbol","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/FloatingPoint/isSignalingNaN":{"title":"isSignalingNaN","abstract":[{"type":"text","text":"A Boolean value indicating whether the instance is a signaling NaN."}],"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/isSignalingNaN","required":true,"type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isSignalingNaN","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"url":"\/documentation\/compute\/floatingpoint\/issignalingnan","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/FloatingPoint/significand":{"kind":"symbol","title":"significand","url":"\/documentation\/compute\/floatingpoint\/significand","role":"symbol","type":"topic","abstract":[{"type":"text","text":"The significand of the floating-point value."}],"required":true,"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"significand"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/significand"},"doc://com.swallow.documentation.Compute/documentation/Compute/FloatingPoint/init(signOf:magnitudeOf:)-2yrnh":{"kind":"symbol","role":"symbol","defaultImplementations":1,"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/init(signOf:magnitudeOf:)-2yrnh","abstract":[{"text":"Creates a new floating-point value using the sign of one value and the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"magnitude of another."}],"fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"text":"signOf","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"magnitudeOf","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":")"}],"required":true,"url":"\/documentation\/compute\/floatingpoint\/init(signof:magnitudeof:)-2yrnh","type":"topic","title":"init(signOf:magnitudeOf:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/Float16":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float16","navigatorTitle":[{"kind":"identifier","text":"Float16"}],"role":"symbol","title":"Float16","url":"\/documentation\/compute\/float16","type":"topic","abstract":[{"type":"text","text":"A half-precision (16b), floating-point value type."}],"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Float16"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/FloatingPoint/leastNormalMagnitude":{"role":"symbol","title":"leastNormalMagnitude","kind":"symbol","url":"\/documentation\/compute\/floatingpoint\/leastnormalmagnitude","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"leastNormalMagnitude","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/leastNormalMagnitude","type":"topic","required":true,"abstract":[{"type":"text","text":"The least positive normal number."}]},"doc://com.swallow.documentation.Compute/documentation/Compute/FloatingPoint/init(_:)-2xwlo":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/init(_:)-2xwlo","url":"\/documentation\/compute\/floatingpoint\/init(_:)-2xwlo","required":true,"title":"init(_:)","kind":"symbol","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"text":")","kind":"text"}],"defaultImplementations":2,"abstract":[{"type":"text","text":"Creates a new value, rounded to the closest possible representation."}],"role":"symbol","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/FloatingPoint/+=(_:_:)":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/+=(_:_:)","type":"topic","title":"+=(_:_:)","abstract":[{"type":"text","text":"Adds two values and stores the result in the left-hand-side variable,"},{"text":" ","type":"text"},{"text":"rounded to a representable value.","type":"text"}],"kind":"symbol","url":"\/documentation\/compute\/floatingpoint\/+=(_:_:)","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"+=","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":")"}],"required":true,"role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Strideable":{"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/compute\/strideable","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Strideable","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Strideable"}],"navigatorTitle":[{"text":"Strideable","kind":"identifier"}],"abstract":[{"type":"text","text":"A type representing continuous, one-dimensional values that can be offset"},{"type":"text","text":" "},{"type":"text","text":"and measured."}],"title":"Strideable"},"doc://com.swallow.documentation.Compute/documentation/Compute/FloatingPoint/minimumMagnitude(_:_:)-2i4od":{"url":"\/documentation\/compute\/floatingpoint\/minimummagnitude(_:_:)-2i4od","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"minimumMagnitude","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"defaultImplementations":1,"role":"symbol","abstract":[{"type":"text","text":"Returns the value with lesser magnitude."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/minimumMagnitude(_:_:)-2i4od","required":true,"title":"minimumMagnitude(_:_:)","kind":"symbol","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/FloatingPoint/leastNonzeroMagnitude":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/leastNonzeroMagnitude","abstract":[{"type":"text","text":"The least positive number."}],"kind":"symbol","required":true,"title":"leastNonzeroMagnitude","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"leastNonzeroMagnitude"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"}],"url":"\/documentation\/compute\/floatingpoint\/leastnonzeromagnitude","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/FloatingPoint/isCanonical":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/isCanonical","url":"\/documentation\/compute\/floatingpoint\/iscanonical","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"isCanonical","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"title":"isCanonical","kind":"symbol","abstract":[{"type":"text","text":"A Boolean value indicating whether the instance’s representation is in"},{"type":"text","text":" "},{"type":"text","text":"its canonical form."}],"type":"topic","role":"symbol","required":true},"doc://com.swallow.documentation.Compute/documentation/Compute/BinaryFloatingPoint":{"navigatorTitle":[{"text":"BinaryFloatingPoint","kind":"identifier"}],"type":"topic","title":"BinaryFloatingPoint","abstract":[{"text":"A radix-2 (binary) floating-point type.","type":"text"}],"url":"\/documentation\/compute\/binaryfloatingpoint","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BinaryFloatingPoint","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryFloatingPoint","kind":"symbol","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/FloatingPoint/Exponent-swift.associatedtype":{"title":"Exponent","role":"symbol","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/Exponent-swift.associatedtype","abstract":[{"type":"text","text":"A type that can represent any written exponent."}],"url":"\/documentation\/compute\/floatingpoint\/exponent-swift.associatedtype","required":true,"fragments":[{"kind":"keyword","text":"associatedtype"},{"text":" ","kind":"text"},{"text":"Exponent","kind":"identifier"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:SZ","kind":"typeIdentifier","text":"SignedInteger"}],"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/FloatingPoint/truncatingRemainder(dividingBy:)-7jlkk":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"truncatingRemainder"},{"text":"(","kind":"text"},{"text":"dividingBy","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"defaultImplementations":1,"abstract":[{"type":"text","text":"Returns the remainder of this value divided by the given value using"},{"text":" ","type":"text"},{"text":"truncating division.","type":"text"}],"type":"topic","url":"\/documentation\/compute\/floatingpoint\/truncatingremainder(dividingby:)-7jlkk","title":"truncatingRemainder(dividingBy:)","required":true,"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/truncatingRemainder(dividingBy:)-7jlkk","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/FloatingPoint/nextDown-3t7gt":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/nextDown-3t7gt","abstract":[{"type":"text","text":"The greatest representable value that compares less than this value."}],"url":"\/documentation\/compute\/floatingpoint\/nextdown-3t7gt","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"nextDown"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"defaultImplementations":1,"title":"nextDown","required":true,"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/FloatingPoint/maximum(_:_:)-7vxwv":{"required":true,"role":"symbol","defaultImplementations":1,"kind":"symbol","type":"topic","title":"maximum(_:_:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/maximum(_:_:)-7vxwv","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"maximum","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"abstract":[{"text":"Returns the greater of the two given values.","type":"text"}],"url":"\/documentation\/compute\/floatingpoint\/maximum(_:_:)-7vxwv"},"doc://com.swallow.documentation.Compute/documentation/Compute/FloatingPoint/addingProduct(_:_:)-3z17c":{"abstract":[{"text":"Returns the result of adding the product of the two given values to this","type":"text"},{"type":"text","text":" "},{"type":"text","text":"value, computed without intermediate rounding."}],"url":"\/documentation\/compute\/floatingpoint\/addingproduct(_:_:)-3z17c","required":true,"kind":"symbol","role":"symbol","title":"addingProduct(_:_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"addingProduct","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"}],"defaultImplementations":1,"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/addingProduct(_:_:)-3z17c"},"doc://com.swallow.documentation.Compute/documentation/Compute/FloatingPoint/-(_:)":{"title":"-(_:)","abstract":[{"type":"text","text":"Calculates the additive inverse of a value."}],"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/-(_:)","required":true,"type":"topic","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"-"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"url":"\/documentation\/compute\/floatingpoint\/-(_:)","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/FloatingPoint/rounded(_:)-7rbik":{"title":"rounded(_:)","url":"\/documentation\/compute\/floatingpoint\/rounded(_:)-7rbik","required":true,"type":"topic","abstract":[{"type":"text","text":"Returns this value rounded to an integral value using the specified"},{"text":" ","type":"text"},{"type":"text","text":"rounding rule."}],"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/rounded(_:)-7rbik","defaultImplementations":1,"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"rounded"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"FloatingPointRoundingRule","preciseIdentifier":"s:s25FloatingPointRoundingRuleO"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/FloatingPoint/rounded()":{"abstract":[],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"rounded","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"kind":"symbol","url":"\/documentation\/compute\/floatingpoint\/rounded()","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/rounded()","title":"rounded()","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/FloatingPoint/isEqual(to:)":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/isEqual(to:)","type":"topic","title":"isEqual(to:)","abstract":[{"type":"text","text":"Returns a Boolean value indicating whether this instance is equal to the"},{"text":" ","type":"text"},{"text":"given value.","type":"text"}],"kind":"symbol","url":"\/documentation\/compute\/floatingpoint\/isequal(to:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"isEqual"},{"text":"(","kind":"text"},{"text":"to","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"required":true,"role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/FloatingPoint/maximumMagnitude(_:_:)-820gl":{"required":true,"role":"symbol","defaultImplementations":1,"title":"maximumMagnitude(_:_:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/maximumMagnitude(_:_:)-820gl","kind":"symbol","type":"topic","url":"\/documentation\/compute\/floatingpoint\/maximummagnitude(_:_:)-820gl","abstract":[{"type":"text","text":"Returns the value with greater magnitude."}],"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"maximumMagnitude","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/FloatingPoint/formSquareRoot()":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/formSquareRoot()","abstract":[{"type":"text","text":"Replaces this value with its square root, rounded to a representable"},{"type":"text","text":" "},{"type":"text","text":"value."}],"kind":"symbol","required":true,"title":"formSquareRoot()","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"formSquareRoot","kind":"identifier"},{"text":"()","kind":"text"}],"url":"\/documentation\/compute\/floatingpoint\/formsquareroot()","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/Float":{"type":"topic","abstract":[{"text":"A single-precision, floating-point value type.","type":"text"}],"url":"\/documentation\/compute\/float","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Float"}],"navigatorTitle":[{"text":"Float","kind":"identifier"}],"title":"Float"},"doc://com.swallow.documentation.Compute/documentation/Compute/FloatingPoint/init(exactly:)-3gl9z":{"defaultImplementations":2,"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/init(exactly:)-3gl9z","role":"symbol","url":"\/documentation\/compute\/floatingpoint\/init(exactly:)-3gl9z","required":true,"abstract":[{"type":"text","text":"Creates a new value, if the given integer can be represented exactly."}],"fragments":[{"text":"init","kind":"identifier"},{"text":"?<","kind":"text"},{"kind":"genericParameter","text":"Source"},{"kind":"text","text":">("},{"text":"exactly","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Source","kind":"typeIdentifier"},{"kind":"text","text":")"}],"kind":"symbol","title":"init(exactly:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/FloatingPoint/isNaN":{"abstract":[{"type":"text","text":"A Boolean value indicating whether the instance is NaN (“not a number”)."}],"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isNaN"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"required":true,"url":"\/documentation\/compute\/floatingpoint\/isnan","role":"symbol","type":"topic","title":"isNaN","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/isNaN","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/FloatingPoint/infinity":{"title":"infinity","abstract":[{"type":"text","text":"Positive infinity."}],"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/infinity","required":true,"type":"topic","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"infinity"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"url":"\/documentation\/compute\/floatingpoint\/infinity","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/FloatingPoint/isFinite":{"abstract":[{"text":"A Boolean value indicating whether this instance is finite.","type":"text"}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isFinite"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"required":true,"url":"\/documentation\/compute\/floatingpoint\/isfinite","role":"symbol","type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/isFinite","title":"isFinite","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Numeric/Magnitude-swift.associatedtype":{"url":"\/documentation\/compute\/numeric\/magnitude-swift.associatedtype","kind":"symbol","abstract":[{"type":"text","text":"A type that can represent the absolute value of any possible value of the"},{"text":" ","type":"text"},{"type":"text","text":"conforming type."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Numeric\/Magnitude-swift.associatedtype","type":"topic","title":"Magnitude","required":true,"role":"symbol","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"Magnitude"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:SL","text":"Comparable","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Numeric","preciseIdentifier":"s:Sj","kind":"typeIdentifier"}]},"http://ieeexplore.ieee.org/servlet/opac?punumber=4610933":{"url":"http:\/\/ieeexplore.ieee.org\/servlet\/opac?punumber=4610933","title":"IEEE 754 specification","type":"link","identifier":"http:\/\/ieeexplore.ieee.org\/servlet\/opac?punumber=4610933","titleInlineContent":[{"text":"IEEE 754 specification","type":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/FloatingPoint/negate()":{"title":"negate()","abstract":[{"type":"text","text":"Replaces this value with its additive inverse."}],"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/negate()","required":true,"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"negate","kind":"identifier"},{"kind":"text","text":"()"}],"url":"\/documentation\/compute\/floatingpoint\/negate()","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/FloatingPoint/signalingNaN":{"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/signalingNaN","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"signalingNaN"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"title":"signalingNaN","role":"symbol","abstract":[{"type":"text","text":"A signaling NaN (“not a number”)."}],"url":"\/documentation\/compute\/floatingpoint\/signalingnan","required":true,"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/FloatingPoint/exponent-swift.property":{"type":"topic","role":"symbol","required":true,"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/exponent-swift.property","url":"\/documentation\/compute\/floatingpoint\/exponent-swift.property","abstract":[{"text":"The exponent of the floating-point value.","type":"text"}],"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"exponent","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:SF8ExponentQa","text":"Exponent","kind":"typeIdentifier"}],"kind":"symbol","title":"exponent"},"doc://com.swallow.documentation.Compute/documentation/Compute/FloatingPoint/sign":{"kind":"symbol","type":"topic","abstract":[{"text":"The sign of the floating-point value.","type":"text"}],"required":true,"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/sign","title":"sign","url":"\/documentation\/compute\/floatingpoint\/sign","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"sign","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s17FloatingPointSignO","kind":"typeIdentifier","text":"FloatingPointSign"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/FloatingPoint/isNormal":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/isNormal","type":"topic","title":"isNormal","abstract":[{"type":"text","text":"A Boolean value indicating whether this instance is normal."}],"kind":"symbol","url":"\/documentation\/compute\/floatingpoint\/isnormal","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isNormal","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"required":true,"role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/ExpressibleByIntegerLiteral":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ExpressibleByIntegerLiteral","url":"\/documentation\/compute\/expressiblebyintegerliteral","title":"ExpressibleByIntegerLiteral","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ExpressibleByIntegerLiteral","kind":"identifier"}],"navigatorTitle":[{"text":"ExpressibleByIntegerLiteral","kind":"identifier"}],"abstract":[{"text":"A type that can be initialized with an integer literal.","type":"text"}],"kind":"symbol","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/FloatingPoint/remainder(dividingBy:)-4v8iq":{"defaultImplementations":1,"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/remainder(dividingBy:)-4v8iq","role":"symbol","url":"\/documentation\/compute\/floatingpoint\/remainder(dividingby:)-4v8iq","required":true,"abstract":[{"text":"Returns the remainder of this value divided by the given value.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"remainder","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"dividingBy"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"kind":"symbol","title":"remainder(dividingBy:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/FloatingPoint/floatingPointClass-5kgla":{"role":"symbol","type":"topic","required":true,"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"floatingPointClass"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"FloatingPointClassification","preciseIdentifier":"s:s27FloatingPointClassificationO"}],"kind":"symbol","abstract":[{"text":"The classification of this value.","type":"text"}],"defaultImplementations":1,"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/floatingPointClass-5kgla","title":"floatingPointClass","url":"\/documentation\/compute\/floatingpoint\/floatingpointclass-5kgla"},"doc://com.swallow.documentation.Compute/documentation/Compute/FloatingPoint/*(_:_:)":{"title":"*(_:_:)","abstract":[{"type":"text","text":"Multiplies two values and produces their product, rounding to a"},{"text":" ","type":"text"},{"text":"representable value.","type":"text"}],"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/*(_:_:)","required":true,"type":"topic","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"*","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"}],"url":"\/documentation\/compute\/floatingpoint\/*(_:_:)","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/FloatingPoint/formRemainder(dividingBy:)":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/formRemainder(dividingBy:)","type":"topic","title":"formRemainder(dividingBy:)","abstract":[{"type":"text","text":"Replaces this value with the remainder of itself divided by the given"},{"text":" ","type":"text"},{"text":"value.","type":"text"}],"kind":"symbol","url":"\/documentation\/compute\/floatingpoint\/formremainder(dividingby:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"formRemainder"},{"text":"(","kind":"text"},{"text":"dividingBy","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"text":")","kind":"text"}],"required":true,"role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/FloatingPoint/pi":{"abstract":[{"type":"text","text":"The mathematical constant pi (π), approximately equal to 3.14159."}],"required":true,"role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"pi","kind":"identifier"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"}],"url":"\/documentation\/compute\/floatingpoint\/pi","title":"pi","kind":"symbol","type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint\/pi"},"doc://com.swallow.documentation.Compute/documentation/Compute/Numeric":{"abstract":[{"type":"text","text":"A type with values that support multiplication."}],"kind":"symbol","url":"\/documentation\/compute\/numeric","navigatorTitle":[{"text":"Numeric","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Numeric","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Numeric"}],"title":"Numeric"}}}