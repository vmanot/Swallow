{"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyKeyPath","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyKeyPath\/CustomDebugStringConvertible-Implementations"]]},"schemaVersion":{"minor":3,"major":0,"patch":0},"sections":[],"abstract":[{"type":"text","text":"A textual representation of this instance, suitable for debugging."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"debugDescription","kind":"identifier"},{"text":": ","kind":"text"},{"text":"String","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":" { ","kind":"text"},{"kind":"keyword","text":"get"},{"text":" }","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}]},{"content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"inlineContent":[{"text":"Calling this property directly is discouraged. Instead, convert an","type":"text"},{"text":" ","type":"text"},{"text":"instance of any type to a string by using the ","type":"text"},{"type":"codeVoice","code":"String(reflecting:)"},{"text":" ","type":"text"},{"text":"initializer. This initializer works with any type, and uses the custom","type":"text"},{"type":"text","text":" "},{"code":"debugDescription","type":"codeVoice"},{"type":"text","text":" property for types that conform to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"CustomDebugStringConvertible"},{"text":":","type":"text"}],"type":"paragraph"},{"syntax":null,"code":["struct Point: CustomDebugStringConvertible {","    let x: Int, y: Int","","    var debugDescription: String {","        return \"(\\(x), \\(y))\"","    }","}","","let p = Point(x: 21, y: 30)","let s = String(reflecting: p)","print(s)","\/\/ Prints \"(21, 30)\""],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"The conversion of ","type":"text"},{"type":"codeVoice","code":"p"},{"text":" to a string in the assignment to ","type":"text"},{"type":"codeVoice","code":"s"},{"type":"text","text":" uses the"},{"type":"text","text":" "},{"type":"codeVoice","code":"Point"},{"text":" typeâ€™s ","type":"text"},{"code":"debugDescription","type":"codeVoice"},{"type":"text","text":" property."}]}],"kind":"content"}],"variants":[{"paths":["\/documentation\/compute\/anykeypath\/debugdescription"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyKeyPath\/debugDescription","interfaceLanguage":"swift"},"metadata":{"symbolKind":"property","externalID":"s:s10AnyKeyPathC16debugDescriptionSSvp","role":"symbol","extendedModule":"Swift","modules":[{"name":"Compute","relatedModules":["Swift"]}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"debugDescription","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"}],"roleHeading":"Instance Property","platforms":[{"deprecated":false,"name":"iOS","unavailable":false,"introducedAt":"16.4","beta":false},{"deprecated":false,"name":"macOS","beta":false,"introducedAt":"13.3","unavailable":false},{"name":"tvOS","introducedAt":"16.4","unavailable":false,"beta":false,"deprecated":false},{"deprecated":false,"name":"watchOS","beta":false,"introducedAt":"9.4","unavailable":false}],"title":"debugDescription"},"kind":"symbol","references":{"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/AnyKeyPath":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyKeyPath","url":"\/documentation\/compute\/anykeypath","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"AnyKeyPath","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"AnyKeyPath"}],"role":"symbol","kind":"symbol","abstract":[{"text":"A type-erased key path, from any root type to any resulting value","type":"text"},{"type":"text","text":" "},{"type":"text","text":"type."}],"type":"topic","title":"AnyKeyPath"},"doc://com.swallow.documentation.Compute/documentation/Compute/AnyKeyPath/CustomDebugStringConvertible-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyKeyPath\/CustomDebugStringConvertible-Implementations","role":"collectionGroup","type":"topic","kind":"article","url":"\/documentation\/compute\/anykeypath\/customdebugstringconvertible-implementations","abstract":[],"title":"CustomDebugStringConvertible Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/AnyKeyPath/debugDescription":{"role":"symbol","type":"topic","abstract":[{"type":"text","text":"A textual representation of this instance, suitable for debugging."}],"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"debugDescription","kind":"identifier"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"}],"title":"debugDescription","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyKeyPath\/debugDescription","url":"\/documentation\/compute\/anykeypath\/debugdescription","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/String":{"type":"topic","navigatorTitle":[{"kind":"identifier","text":"String"}],"title":"String","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"String","kind":"identifier"}],"abstract":[{"type":"text","text":"A Unicode string value that is a collection of characters."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String","kind":"symbol","role":"symbol","url":"\/documentation\/compute\/string"}}}