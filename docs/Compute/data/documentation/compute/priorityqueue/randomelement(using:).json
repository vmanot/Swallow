{"abstract":[{"text":"Returns a random element of the collection, using the given generator as","type":"text"},{"text":" ","type":"text"},{"text":"a source for randomness.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/priorityqueue\/randomelement(using:)"]}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"randomElement"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"using"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"generator"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"kind":"text","text":"? "},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"RandomNumberGenerator","preciseIdentifier":"s:SG","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RandomNumberGenerator","kind":"typeIdentifier"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"generator","content":[{"type":"paragraph","inlineContent":[{"text":"The random number generator to use when choosing a","type":"text"},{"type":"text","text":" "},{"text":"random element.","type":"text"}]}]}]},{"kind":"content","content":[{"level":2,"type":"heading","text":"Return Value","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A random element from the collection. If the collection is"},{"type":"text","text":" "},{"type":"text","text":"empty, the method returns "},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."}]}]},{"content":[{"level":2,"type":"heading","text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Call "},{"code":"randomElement(using:)","type":"codeVoice"},{"text":" to select a random element from an array or","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"another collection when you are using a custom random number generator."},{"text":" ","type":"text"},{"type":"text","text":"This example picks a name at random from an array:"}]},{"type":"codeListing","syntax":null,"code":["let names = [\"Zoey\", \"Chloe\", \"Amani\", \"Amaia\"]","let randomName = names.randomElement(using: &myGenerator)!","\/\/ randomName == \"Amani\""]},{"type":"aside","name":"Complexity","content":[{"inlineContent":[{"type":"text","text":"O(1) if the collection conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"RandomAccessCollection"},{"type":"text","text":"; otherwise, O("},{"inlineContent":[{"type":"text","text":"n"}],"type":"emphasis"},{"text":"), where ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"n","type":"text"}]},{"type":"text","text":" is the length"},{"text":" ","type":"text"},{"type":"text","text":"of the collection."}],"type":"paragraph"}],"style":"note"},{"type":"aside","style":"note","name":"Note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The algorithm used to select a random element may change in a"},{"text":" ","type":"text"},{"text":"future version of Swift. If you’re passing a generator that results in","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the same sequence of elements each time you run your program, that"},{"type":"text","text":" "},{"type":"text","text":"sequence may change when your program is compiled using a different"},{"type":"text","text":" "},{"text":"version of Swift.","type":"text"}]}]}],"kind":"content"}],"metadata":{"extendedModule":"Swift","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"randomElement","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"using","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:ST7ElementQa","text":"Element","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"externalID":"s:SlsE13randomElement5using0B0QzSgqd__z_tSGRd__lF::SYNTHESIZED::s:7Compute13PriorityQueueV","roleHeading":"Instance Method","modules":[{"relatedModules":["Swift"],"name":"Compute"}],"title":"randomElement(using:)","role":"symbol"},"sections":[],"schemaVersion":{"major":0,"patch":0,"minor":3},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/PriorityQueue\/randomElement(using:)"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/PriorityQueue","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/PriorityQueue\/Collection-Implementations"]]},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/PriorityQueue/randomElement(using:)":{"abstract":[{"text":"Returns a random element of the collection, using the given generator as","type":"text"},{"type":"text","text":" "},{"text":"a source for randomness.","type":"text"}],"role":"symbol","type":"topic","title":"randomElement(using:)","kind":"symbol","url":"\/documentation\/compute\/priorityqueue\/randomelement(using:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/PriorityQueue\/randomElement(using:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"randomElement"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"using"},{"text":": ","kind":"text"},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"text":"?","kind":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/PriorityQueue/Collection-Implementations":{"url":"\/documentation\/compute\/priorityqueue\/collection-implementations","abstract":[],"title":"Collection Implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/PriorityQueue\/Collection-Implementations","role":"collectionGroup","kind":"article","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence/Element":{"type":"topic","required":true,"abstract":[{"type":"text","text":"A type representing the sequence’s elements."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"symbol","url":"\/documentation\/compute\/sequence\/element","role":"symbol","title":"Element","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/PriorityQueue":{"url":"\/documentation\/compute\/priorityqueue","type":"topic","kind":"symbol","role":"symbol","abstract":[{"text":"A priority queue.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"PriorityQueue"}],"title":"PriorityQueue","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/PriorityQueue","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"PriorityQueue","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/RandomNumberGenerator":{"abstract":[{"text":"A type that provides uniformly distributed random data.","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"RandomNumberGenerator"}],"url":"\/documentation\/compute\/randomnumbergenerator","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RandomNumberGenerator","title":"RandomNumberGenerator","role":"symbol","type":"topic","navigatorTitle":[{"text":"RandomNumberGenerator","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"}}}