{"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"title":"enumerated()","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"enumerated","kind":"identifier"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","text":"EnumeratedSequence","preciseIdentifier":"s:s18EnumeratedSequenceV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"symbolKind":"method","extendedModule":"Swift","roleHeading":"Instance Method","modules":[{"name":"Compute","relatedModules":["Swift"]}],"role":"symbol","externalID":"s:STsE10enumerateds18EnumeratedSequenceVyxGyF::SYNTHESIZED::s:7Compute13PriorityQueueV"},"abstract":[{"text":"Returns a sequence of pairs (","type":"text"},{"inlineContent":[{"text":"n","type":"text"}],"type":"emphasis"},{"text":", ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"x","type":"text"}]},{"type":"text","text":"), where "},{"type":"emphasis","inlineContent":[{"type":"text","text":"n"}]},{"text":" represents a","type":"text"},{"type":"text","text":" "},{"type":"text","text":"consecutive integer starting at zero and "},{"inlineContent":[{"type":"text","text":"x"}],"type":"emphasis"},{"type":"text","text":" represents an element of"},{"type":"text","text":" "},{"type":"text","text":"the sequence."}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/PriorityQueue\/enumerated()"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"enumerated","kind":"identifier"},{"kind":"text","text":"() -> "},{"text":"EnumeratedSequence","kind":"typeIdentifier","preciseIdentifier":"s:s18EnumeratedSequenceV","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/EnumeratedSequence"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"platforms":["macOS"]}]},{"content":[{"text":"Return Value","anchor":"return-value","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A sequence of pairs enumerating the sequence."}]}],"kind":"content"},{"content":[{"anchor":"discussion","text":"Discussion","level":2,"type":"heading"},{"inlineContent":[{"text":"This example enumerates the characters of the string “Swift” and prints","type":"text"},{"text":" ","type":"text"},{"text":"each character along with its place in the string.","type":"text"}],"type":"paragraph"},{"syntax":null,"type":"codeListing","code":["for (n, c) in \"Swift\".enumerated() {","    print(\"\\(n): '\\(c)'\")","}","\/\/ Prints \"0: 'S'\"","\/\/ Prints \"1: 'w'\"","\/\/ Prints \"2: 'i'\"","\/\/ Prints \"3: 'f'\"","\/\/ Prints \"4: 't'\""]},{"inlineContent":[{"type":"text","text":"When you enumerate a collection, the integer part of each pair is a counter"},{"type":"text","text":" "},{"type":"text","text":"for the enumeration, but is not necessarily the index of the paired value."},{"text":" ","type":"text"},{"type":"text","text":"These counters can be used as indices only in instances of zero-based,"},{"type":"text","text":" "},{"type":"text","text":"integer-indexed collections, such as "},{"type":"codeVoice","code":"Array"},{"text":" and ","type":"text"},{"code":"ContiguousArray","type":"codeVoice"},{"type":"text","text":". For"},{"text":" ","type":"text"},{"text":"other collections the counters may be out of range or of the wrong type","type":"text"},{"type":"text","text":" "},{"text":"to use as an index. To iterate over the elements of a collection with its","type":"text"},{"type":"text","text":" "},{"text":"indices, use the ","type":"text"},{"type":"codeVoice","code":"zip(_:_:)"},{"type":"text","text":" function."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"This example iterates over the indices and elements of a set, building a"},{"type":"text","text":" "},{"type":"text","text":"list consisting of indices of names with five or fewer letters."}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":["let names: Set = [\"Sofia\", \"Camilla\", \"Martina\", \"Mateo\", \"Nicolás\"]","var shorterIndices: [Set<String>.Index] = []","for (i, name) in zip(names.indices, names) {","    if name.count <= 5 {","        shorterIndices.append(i)","    }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Now that the "},{"type":"codeVoice","code":"shorterIndices"},{"type":"text","text":" array holds the indices of the shorter"},{"text":" ","type":"text"},{"type":"text","text":"names in the "},{"type":"codeVoice","code":"names"},{"text":" set, you can use those indices to access elements in","type":"text"},{"text":" ","type":"text"},{"text":"the set.","type":"text"}]},{"syntax":null,"type":"codeListing","code":["for i in shorterIndices {","    print(names[i])","}","\/\/ Prints \"Sofia\"","\/\/ Prints \"Mateo\""]},{"type":"aside","name":"Complexity","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"O(1)"}]}],"style":"note"}],"kind":"content"}],"sections":[],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/PriorityQueue","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/PriorityQueue\/Sequence-Implementations"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/priorityqueue\/enumerated()"]}],"kind":"symbol","references":{"doc://com.swallow.documentation.Compute/documentation/Compute/PriorityQueue/Sequence-Implementations":{"url":"\/documentation\/compute\/priorityqueue\/sequence-implementations","type":"topic","kind":"article","role":"collectionGroup","abstract":[],"title":"Sequence Implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/PriorityQueue\/Sequence-Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/EnumeratedSequence":{"url":"\/documentation\/compute\/enumeratedsequence","navigatorTitle":[{"text":"EnumeratedSequence","kind":"identifier"}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"EnumeratedSequence"}],"abstract":[{"text":"An enumeration of the elements of a sequence or collection.","type":"text"}],"type":"topic","title":"EnumeratedSequence","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/EnumeratedSequence"},"doc://com.swallow.documentation.Compute/documentation/Compute/PriorityQueue":{"url":"\/documentation\/compute\/priorityqueue","type":"topic","kind":"symbol","role":"symbol","abstract":[{"text":"A priority queue.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"PriorityQueue"}],"title":"PriorityQueue","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/PriorityQueue","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"PriorityQueue","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/PriorityQueue/enumerated()":{"url":"\/documentation\/compute\/priorityqueue\/enumerated()","abstract":[{"type":"text","text":"Returns a sequence of pairs ("},{"type":"emphasis","inlineContent":[{"type":"text","text":"n"}]},{"type":"text","text":", "},{"inlineContent":[{"type":"text","text":"x"}],"type":"emphasis"},{"type":"text","text":"), where "},{"type":"emphasis","inlineContent":[{"text":"n","type":"text"}]},{"type":"text","text":" represents a"},{"type":"text","text":" "},{"text":"consecutive integer starting at zero and ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"x"}]},{"type":"text","text":" represents an element of"},{"type":"text","text":" "},{"text":"the sequence.","type":"text"}],"role":"symbol","type":"topic","title":"enumerated()","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"enumerated","kind":"identifier"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:s18EnumeratedSequenceV","text":"EnumeratedSequence","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":">","kind":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/PriorityQueue\/enumerated()"}}}