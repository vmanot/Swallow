{"abstract":[{"text":"Returns the maximum element in the sequence, using the given predicate","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"as the comparison between elements."}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bag","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bag\/Sequence-Implementations"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"attribute","text":"@warn_unqualified_access"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"max"},{"text":"(","kind":"text"},{"text":"by","kind":"externalParam"},{"kind":"text","text":" "},{"text":"areInIncreasingOrder","kind":"internalParam"},{"text":": (","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Element","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","preciseIdentifier":"s:ST7ElementQa"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":") "},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Element","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","preciseIdentifier":"s:ST7ElementQa"},{"text":"?","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}]},{"parameters":[{"content":[{"inlineContent":[{"text":"A predicate that returns ","type":"text"},{"type":"codeVoice","code":"true"},{"type":"text","text":" if its"},{"text":" ","type":"text"},{"text":"first argument should be ordered before its second argument;","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"otherwise, "},{"type":"codeVoice","code":"false"},{"type":"text","text":"."}],"type":"paragraph"}],"name":"areInIncreasingOrder"}],"kind":"parameters"},{"content":[{"type":"heading","anchor":"return-value","level":2,"text":"Return Value"},{"inlineContent":[{"type":"text","text":"The sequence’s maximum element if the sequence is not empty;"},{"text":" ","type":"text"},{"type":"text","text":"otherwise, "},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}],"kind":"content"},{"content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"inlineContent":[{"text":"The predicate must be a ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"strict weak ordering"}]},{"type":"text","text":" over the elements. That"},{"text":" ","type":"text"},{"type":"text","text":"is, for any elements "},{"type":"codeVoice","code":"a"},{"type":"text","text":", "},{"type":"codeVoice","code":"b"},{"type":"text","text":", and "},{"type":"codeVoice","code":"c"},{"text":", the following conditions must","type":"text"},{"type":"text","text":" "},{"type":"text","text":"hold:"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"codeVoice","code":"areInIncreasingOrder(a, a)"},{"type":"text","text":" is always "},{"code":"false","type":"codeVoice"},{"text":". (Irreflexivity)","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If "},{"type":"codeVoice","code":"areInIncreasingOrder(a, b)"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"areInIncreasingOrder(b, c)"},{"type":"text","text":" are"},{"type":"text","text":" "},{"type":"text","text":"both "},{"type":"codeVoice","code":"true"},{"text":", then ","type":"text"},{"code":"areInIncreasingOrder(a, c)","type":"codeVoice"},{"text":" is also","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"true"},{"text":". (Transitive comparability)","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Two elements are "},{"inlineContent":[{"text":"incomparable","type":"text"}],"type":"emphasis"},{"text":" if neither is ordered before the other","type":"text"},{"type":"text","text":" "},{"text":"according to the predicate. If ","type":"text"},{"code":"a","type":"codeVoice"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"b"},{"text":" are incomparable, and ","type":"text"},{"code":"b","type":"codeVoice"},{"text":" ","type":"text"},{"type":"text","text":"and "},{"type":"codeVoice","code":"c"},{"text":" are incomparable, then ","type":"text"},{"code":"a","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"c"},{"text":" are also incomparable.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"(Transitive incomparability)"}],"type":"paragraph"}]}],"type":"unorderedList"},{"inlineContent":[{"text":"This example shows how to use the ","type":"text"},{"type":"codeVoice","code":"max(by:)"},{"type":"text","text":" method on a"},{"text":" ","type":"text"},{"type":"text","text":"dictionary to find the key-value pair with the highest value."}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":["let hues = [\"Heliotrope\": 296, \"Coral\": 16, \"Aquamarine\": 156]","let greatestHue = hues.max { a, b in a.value < b.value }","print(greatestHue)","\/\/ Prints \"Optional((key: \"Heliotrope\", value: 296))\""]},{"type":"aside","style":"note","content":[{"type":"paragraph","inlineContent":[{"text":"O(","type":"text"},{"inlineContent":[{"type":"text","text":"n"}],"type":"emphasis"},{"text":"), where ","type":"text"},{"inlineContent":[{"text":"n","type":"text"}],"type":"emphasis"},{"text":" is the length of the sequence.","type":"text"}]}],"name":"Complexity"}],"kind":"content"}],"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"max","kind":"identifier"},{"kind":"text","text":"("},{"text":"by","kind":"externalParam"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:ST7ElementQa","text":"Element","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"text":") ","kind":"text"},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:ST7ElementQa","text":"Element","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"extendedModule":"Swift","roleHeading":"Instance Method","role":"symbol","externalID":"s:STsE3max2by7ElementQzSgSbAD_ADtKXE_tKF::SYNTHESIZED::s:7Compute3BagV","symbolKind":"method","title":"max(by:)","modules":[{"relatedModules":["Swift"],"name":"Compute"}]},"sections":[],"kind":"symbol","schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bag\/max(by:)","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/compute\/bag\/max(by:)"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Bag/max(by:)":{"role":"symbol","type":"topic","abstract":[{"text":"Returns the maximum element in the sequence, using the given predicate","type":"text"},{"type":"text","text":" "},{"text":"as the comparison between elements.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bag\/max(by:)","title":"max(by:)","kind":"symbol","url":"\/documentation\/compute\/bag\/max(by:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"max","kind":"identifier"},{"text":"(","kind":"text"},{"text":"by","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier","text":"Element"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"rethrows"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"kind":"text","text":"?"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence/Element":{"type":"topic","required":true,"abstract":[{"type":"text","text":"A type representing the sequence’s elements."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"symbol","url":"\/documentation\/compute\/sequence\/element","role":"symbol","title":"Element","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Bool":{"url":"\/documentation\/compute\/bool","role":"symbol","title":"Bool","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Bool","kind":"identifier"}],"abstract":[{"type":"text","text":"A value type whose instances are either "},{"type":"codeVoice","code":"true"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"false"},{"text":".","type":"text"}],"navigatorTitle":[{"text":"Bool","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bool","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Bag/Sequence-Implementations":{"type":"topic","title":"Sequence Implementations","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bag\/Sequence-Implementations","kind":"article","role":"collectionGroup","url":"\/documentation\/compute\/bag\/sequence-implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/Bag":{"type":"topic","navigatorTitle":[{"kind":"identifier","text":"Bag"}],"title":"Bag","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Bag"}],"abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bag","kind":"symbol","role":"symbol","url":"\/documentation\/compute\/bag"}}}