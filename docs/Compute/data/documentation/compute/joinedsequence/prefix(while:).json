{"abstract":[{"type":"text","text":"Returns a sequence containing the initial, consecutive elements that"},{"text":" ","type":"text"},{"text":"satisfy the given predicate.","type":"text"}],"sections":[],"schemaVersion":{"major":0,"patch":0,"minor":3},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"prefix","kind":"identifier"},{"text":"(","kind":"text"},{"text":"while","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"predicate","kind":"internalParam"},{"kind":"text","text":": ("},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","preciseIdentifier":"s:ST7ElementQa"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bool","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> ["},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","text":"Element","preciseIdentifier":"s:ST7ElementQa"},{"kind":"text","text":"]"}],"languages":["swift"]}]},{"parameters":[{"name":"predicate","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A closure that takes an element of the sequence as"},{"text":" ","type":"text"},{"type":"text","text":"its argument and returns a Boolean value indicating whether the"},{"text":" ","type":"text"},{"text":"element should be included in the result.","type":"text"}]}]}],"kind":"parameters"},{"content":[{"anchor":"return-value","level":2,"text":"Return Value","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A sequence of the initial, consecutive elements that"},{"type":"text","text":" "},{"type":"text","text":"satisfy "},{"type":"codeVoice","code":"predicate"},{"text":".","type":"text"}]}],"kind":"content"},{"kind":"content","content":[{"anchor":"discussion","type":"heading","text":"Discussion","level":2},{"inlineContent":[{"text":"The following example uses the ","type":"text"},{"code":"prefix(while:)","type":"codeVoice"},{"type":"text","text":" method to find the"},{"type":"text","text":" "},{"type":"text","text":"positive numbers at the beginning of the "},{"code":"numbers","type":"codeVoice"},{"text":" array. Every element","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"of "},{"code":"numbers","type":"codeVoice"},{"type":"text","text":" up to, but not including, the first negative value is"},{"type":"text","text":" "},{"type":"text","text":"included in the result."}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":["let numbers = [3, 7, 4, -2, 9, -6, 10, 1]","let positivePrefix = numbers.prefix(while: { $0 > 0 })","\/\/ positivePrefix == [3, 7, 4]"]},{"type":"paragraph","inlineContent":[{"text":"If ","type":"text"},{"code":"predicate","type":"codeVoice"},{"text":" matches every element in the sequence, the resulting","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"sequence contains every element of the sequence."}]},{"name":"Complexity","style":"note","type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"O(","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"k"}]},{"type":"text","text":"), where "},{"inlineContent":[{"type":"text","text":"k"}],"type":"emphasis"},{"type":"text","text":" is the length of the result."}]}]}]}],"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/joinedsequence\/prefix(while:)"]}],"metadata":{"extendedModule":"Swift","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"prefix","kind":"identifier"},{"text":"(","kind":"text"},{"text":"while","kind":"externalParam"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:ST7ElementQa","text":"Element","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"text":") ","kind":"text"},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> ["},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:ST7ElementQa","text":"Element","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"modules":[{"name":"Compute","relatedModules":["Swift"]}],"roleHeading":"Instance Method","title":"prefix(while:)","role":"symbol","externalID":"s:STsE6prefix5whileSay7ElementQzGSbADKXE_tKF::SYNTHESIZED::s:s14JoinedSequenceV"},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/JoinedSequence","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/JoinedSequence\/Sequence-Implementations"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/JoinedSequence\/prefix(while:)"},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence/Element":{"type":"topic","required":true,"abstract":[{"type":"text","text":"A type representing the sequenceâ€™s elements."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"symbol","url":"\/documentation\/compute\/sequence\/element","role":"symbol","title":"Element","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/JoinedSequence/Sequence-Implementations":{"role":"collectionGroup","title":"Sequence Implementations","url":"\/documentation\/compute\/joinedsequence\/sequence-implementations","kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/JoinedSequence\/Sequence-Implementations","abstract":[],"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/Bool":{"url":"\/documentation\/compute\/bool","role":"symbol","title":"Bool","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Bool","kind":"identifier"}],"abstract":[{"type":"text","text":"A value type whose instances are either "},{"type":"codeVoice","code":"true"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"false"},{"text":".","type":"text"}],"navigatorTitle":[{"text":"Bool","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bool","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/JoinedSequence/prefix(while:)":{"abstract":[{"type":"text","text":"Returns a sequence containing the initial, consecutive elements that"},{"text":" ","type":"text"},{"text":"satisfy the given predicate.","type":"text"}],"type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"prefix"},{"kind":"text","text":"("},{"kind":"externalParam","text":"while"},{"text":": (","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"text":" -> [","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"text":"]","kind":"text"}],"url":"\/documentation\/compute\/joinedsequence\/prefix(while:)","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/JoinedSequence\/prefix(while:)","title":"prefix(while:)"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/JoinedSequence":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/JoinedSequence","title":"JoinedSequence","abstract":[{"type":"text","text":"A sequence that presents the elements of a base sequence of sequences"},{"type":"text","text":" "},{"text":"concatenated using a given separator.","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"JoinedSequence","kind":"identifier"}],"url":"\/documentation\/compute\/joinedsequence","type":"topic","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"JoinedSequence","kind":"identifier"}]}}}