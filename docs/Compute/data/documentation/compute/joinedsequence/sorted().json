{"kind":"symbol","abstract":[{"text":"Returns the elements of the sequence, sorted.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"sorted","kind":"identifier"},{"text":"() -> [","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:ST7ElementQa"},{"text":"]","kind":"text"}]}]},{"kind":"content","content":[{"level":2,"anchor":"return-value","type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A sorted array of the sequence’s elements."}]}]},{"content":[{"level":2,"anchor":"discussion","text":"Discussion","type":"heading"},{"inlineContent":[{"text":"You can sort any sequence of elements that conform to the ","type":"text"},{"type":"codeVoice","code":"Comparable"},{"text":" ","type":"text"},{"type":"text","text":"protocol by calling this method. Elements are sorted in ascending order."}],"type":"paragraph"},{"inlineContent":[{"text":"Here’s an example of sorting a list of students’ names. Strings in Swift","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"conform to the "},{"type":"codeVoice","code":"Comparable"},{"type":"text","text":" protocol, so the names are sorted in"},{"type":"text","text":" "},{"type":"text","text":"ascending order according to the less-than operator ("},{"type":"codeVoice","code":"<"},{"type":"text","text":")."}],"type":"paragraph"},{"code":["let students: Set = [\"Kofi\", \"Abena\", \"Peter\", \"Kweku\", \"Akosua\"]","let sortedStudents = students.sorted()","print(sortedStudents)","\/\/ Prints \"[\"Abena\", \"Akosua\", \"Kofi\", \"Kweku\", \"Peter\"]\""],"syntax":null,"type":"codeListing"},{"inlineContent":[{"text":"To sort the elements of your sequence in descending order, pass the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"greater-than operator ("},{"code":">","type":"codeVoice"},{"text":") to the ","type":"text"},{"type":"codeVoice","code":"sorted(by:)"},{"type":"text","text":" method."}],"type":"paragraph"},{"syntax":null,"code":["let descendingStudents = students.sorted(by: >)","print(descendingStudents)","\/\/ Prints \"[\"Peter\", \"Kweku\", \"Kofi\", \"Akosua\", \"Abena\"]\""],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"The sorting algorithm is guaranteed to be stable. A stable sort","type":"text"},{"text":" ","type":"text"},{"text":"preserves the relative order of elements that compare as equal.","type":"text"}]},{"name":"Complexity","content":[{"type":"paragraph","inlineContent":[{"text":"O(","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"n"}]},{"type":"text","text":" log "},{"inlineContent":[{"type":"text","text":"n"}],"type":"emphasis"},{"type":"text","text":"), where "},{"type":"emphasis","inlineContent":[{"type":"text","text":"n"}]},{"text":" is the length of the sequence.","type":"text"}]}],"type":"aside","style":"note"}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/joinedsequence\/sorted()"]}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/JoinedSequence","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/JoinedSequence\/Sequence-Implementations"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/JoinedSequence\/sorted()","interfaceLanguage":"swift"},"metadata":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"sorted","kind":"identifier"},{"text":"() -> [","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier","text":"Element"},{"text":"]","kind":"text"}],"externalID":"s:STsSL7ElementRpzrlE6sortedSayABGyF::SYNTHESIZED::s:s14JoinedSequenceV","extendedModule":"Swift","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Element"},{"text":" conforms to ","type":"text"},{"code":"Comparable","type":"codeVoice"},{"type":"text","text":"."}]},"modules":[{"name":"Compute","relatedModules":["Swift"]}],"title":"sorted()","role":"symbol","roleHeading":"Instance Method","symbolKind":"method"},"sections":[],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/JoinedSequence/Sequence-Implementations":{"role":"collectionGroup","title":"Sequence Implementations","url":"\/documentation\/compute\/joinedsequence\/sequence-implementations","kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/JoinedSequence\/Sequence-Implementations","abstract":[],"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/JoinedSequence/sorted()":{"kind":"symbol","title":"sorted()","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/JoinedSequence\/sorted()","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"sorted","kind":"identifier"},{"kind":"text","text":"() -> ["},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"kind":"text","text":"]"}],"abstract":[{"type":"text","text":"Returns the elements of the sequence, sorted."}],"type":"topic","conformance":{"constraints":[{"type":"codeVoice","code":"Element"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Comparable"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"url":"\/documentation\/compute\/joinedsequence\/sorted()"},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence/Element":{"type":"topic","required":true,"abstract":[{"type":"text","text":"A type representing the sequence’s elements."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"symbol","url":"\/documentation\/compute\/sequence\/element","role":"symbol","title":"Element","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/JoinedSequence":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/JoinedSequence","title":"JoinedSequence","abstract":[{"type":"text","text":"A sequence that presents the elements of a base sequence of sequences"},{"type":"text","text":" "},{"text":"concatenated using a given separator.","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"JoinedSequence","kind":"identifier"}],"url":"\/documentation\/compute\/joinedsequence","type":"topic","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"JoinedSequence","kind":"identifier"}]}}}