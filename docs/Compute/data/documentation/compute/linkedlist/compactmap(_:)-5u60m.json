{"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LinkedList","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LinkedList\/Sequence-Implementations"]]},"abstract":[{"text":"Returns an array containing the non-","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":" results of calling the given"},{"text":" ","type":"text"},{"type":"text","text":"transformation with each element of this sequence."}],"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/linkedlist\/compactmap(_:)-5u60m"]}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"compactMap","kind":"identifier"},{"text":"<","kind":"text"},{"text":"ElementOfResult","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"transform"},{"text":": (","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"ElementOfResult"},{"kind":"text","text":"?) "},{"text":"rethrows","kind":"keyword"},{"text":" -> [","kind":"text"},{"text":"ElementOfResult","kind":"typeIdentifier"},{"text":"]","kind":"text"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"transform","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A closure that accepts an element of this"},{"text":" ","type":"text"},{"type":"text","text":"sequence as its argument and returns an optional value."}]}]}]},{"content":[{"anchor":"return-value","type":"heading","text":"Return Value","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"An array of the non-"},{"code":"nil","type":"codeVoice"},{"text":" results of calling ","type":"text"},{"type":"codeVoice","code":"transform"},{"text":" ","type":"text"},{"text":"with each element of the sequence.","type":"text"}]}],"kind":"content"},{"kind":"content","content":[{"anchor":"discussion","level":2,"text":"Discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Use this method to receive an array of non-optional values when your"},{"type":"text","text":" "},{"type":"text","text":"transformation produces an optional value."}]},{"inlineContent":[{"type":"text","text":"In this example, note the difference in the result of using "},{"code":"map","type":"codeVoice"},{"text":" and","type":"text"},{"type":"text","text":" "},{"code":"compactMap","type":"codeVoice"},{"text":" with a transformation that returns an optional ","type":"text"},{"code":"Int","type":"codeVoice"},{"type":"text","text":" value."}],"type":"paragraph"},{"code":["let possibleNumbers = [\"1\", \"2\", \"three\", \"\/\/\/4\/\/\/\", \"5\"]","","let mapped: [Int?] = possibleNumbers.map { str in Int(str) }","\/\/ [1, 2, nil, nil, 5]","","let compactMapped: [Int] = possibleNumbers.compactMap { str in Int(str) }","\/\/ [1, 2, 5]"],"type":"codeListing","syntax":null},{"type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"O(","type":"text"},{"inlineContent":[{"text":"n","type":"text"}],"type":"emphasis"},{"text":"), where ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"n"}]},{"type":"text","text":" is the length of this sequence."}]}],"style":"note","name":"Complexity"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LinkedList\/compactMap(_:)-5u60m"},"metadata":{"role":"symbol","title":"compactMap(_:)","symbolKind":"method","externalID":"s:STsE10compactMapySayqd__Gqd__Sg7ElementQzKXEKlF::SYNTHESIZED::s:7Compute10LinkedListO","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"compactMap","kind":"identifier"},{"kind":"text","text":"<"},{"text":"ElementOfResult","kind":"genericParameter"},{"text":">((","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Element","preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"ElementOfResult","kind":"typeIdentifier"},{"kind":"text","text":"?) "},{"text":"rethrows","kind":"keyword"},{"kind":"text","text":" -> ["},{"kind":"typeIdentifier","text":"ElementOfResult"},{"text":"]","kind":"text"}],"extendedModule":"Swift","modules":[{"name":"Compute","relatedModules":["Swift"]}],"roleHeading":"Instance Method"},"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/LinkedList/compactMap(_:)-5u60m":{"role":"symbol","title":"compactMap(_:)","kind":"symbol","url":"\/documentation\/compute\/linkedlist\/compactmap(_:)-5u60m","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"compactMap","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"ElementOfResult"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:ST7ElementQa","text":"Element","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"ElementOfResult","kind":"typeIdentifier"},{"text":"?) ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> [","kind":"text"},{"kind":"typeIdentifier","text":"ElementOfResult"},{"kind":"text","text":"]"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LinkedList\/compactMap(_:)-5u60m","type":"topic","abstract":[{"type":"text","text":"Returns an array containing the non-"},{"type":"codeVoice","code":"nil"},{"type":"text","text":" results of calling the given"},{"type":"text","text":" "},{"type":"text","text":"transformation with each element of this sequence."}]},"doc://com.swallow.documentation.Compute/documentation/Compute/LinkedList":{"url":"\/documentation\/compute\/linkedlist","abstract":[],"title":"LinkedList","role":"symbol","navigatorTitle":[{"text":"LinkedList","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LinkedList","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"LinkedList"}],"kind":"symbol","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/LinkedList/Sequence-Implementations":{"url":"\/documentation\/compute\/linkedlist\/sequence-implementations","abstract":[],"role":"collectionGroup","type":"topic","title":"Sequence Implementations","kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LinkedList\/Sequence-Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence/Element":{"type":"topic","required":true,"abstract":[{"type":"text","text":"A type representing the sequenceâ€™s elements."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"symbol","url":"\/documentation\/compute\/sequence\/element","role":"symbol","title":"Element","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"identifier"}]}}}