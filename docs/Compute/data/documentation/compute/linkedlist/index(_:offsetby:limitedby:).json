{"sections":[],"schemaVersion":{"minor":3,"major":0,"patch":0},"abstract":[{"text":"Returns an index that is the specified distance from the given index,","type":"text"},{"type":"text","text":" "},{"text":"unless that distance is beyond a given limiting index.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"index","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"i","kind":"internalParam"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:Sl5IndexQa","kind":"typeIdentifier","text":"Index","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/Index"},{"kind":"text","text":", "},{"kind":"externalParam","text":"offsetBy"},{"kind":"text","text":" "},{"kind":"internalParam","text":"distance"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","text":"Int"},{"kind":"text","text":", "},{"kind":"externalParam","text":"limitedBy"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"limit"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa","text":"Index","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/Index"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Index","preciseIdentifier":"s:Sl5IndexQa","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/Index","kind":"typeIdentifier"},{"text":"?","kind":"text"}]}]},{"parameters":[{"content":[{"inlineContent":[{"type":"text","text":"A valid index of the collection."}],"type":"paragraph"}],"name":"i"},{"content":[{"inlineContent":[{"text":"The distance to offset ","type":"text"},{"code":"i","type":"codeVoice"},{"type":"text","text":". "},{"type":"codeVoice","code":"distance"},{"text":" must not be negative","type":"text"},{"text":" ","type":"text"},{"text":"unless the collection conforms to the ","type":"text"},{"type":"codeVoice","code":"BidirectionalCollection"},{"text":" ","type":"text"},{"type":"text","text":"protocol."}],"type":"paragraph"}],"name":"distance"},{"name":"limit","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A valid index of the collection to use as a limit. If"},{"type":"text","text":" "},{"type":"codeVoice","code":"distance > 0"},{"text":", a limit that is less than ","type":"text"},{"code":"i","type":"codeVoice"},{"text":" has no effect.","type":"text"},{"text":" ","type":"text"},{"text":"Likewise, if ","type":"text"},{"type":"codeVoice","code":"distance < 0"},{"type":"text","text":", a limit that is greater than "},{"code":"i","type":"codeVoice"},{"text":" has no","type":"text"},{"text":" ","type":"text"},{"text":"effect.","type":"text"}]}]}],"kind":"parameters"},{"kind":"content","content":[{"level":2,"text":"Return Value","anchor":"return-value","type":"heading"},{"inlineContent":[{"type":"text","text":"An index offset by "},{"code":"distance","type":"codeVoice"},{"type":"text","text":" from the index "},{"code":"i","type":"codeVoice"},{"type":"text","text":", unless that"},{"text":" ","type":"text"},{"type":"text","text":"index would be beyond "},{"code":"limit","type":"codeVoice"},{"type":"text","text":" in the direction of movement. In that"},{"text":" ","type":"text"},{"text":"case, the method returns ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}]},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"The following example obtains an index advanced four positions from a"},{"type":"text","text":" "},{"type":"text","text":"string’s starting index and then prints the character at that position."},{"text":" ","type":"text"},{"text":"The operation doesn’t require going beyond the limiting ","type":"text"},{"code":"s.endIndex","type":"codeVoice"},{"text":" ","type":"text"},{"text":"value, so it succeeds.","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":["let s = \"Swift\"","if let i = s.index(s.startIndex, offsetBy: 4, limitedBy: s.endIndex) {","    print(s[i])","}","\/\/ Prints \"t\""]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The next example attempts to retrieve an index six positions from"},{"type":"text","text":" "},{"code":"s.startIndex","type":"codeVoice"},{"text":" but fails, because that distance is beyond the index","type":"text"},{"type":"text","text":" "},{"text":"passed as ","type":"text"},{"type":"codeVoice","code":"limit"},{"type":"text","text":"."}]},{"type":"codeListing","syntax":null,"code":["let j = s.index(s.startIndex, offsetBy: 6, limitedBy: s.endIndex)","print(j)","\/\/ Prints \"nil\""]},{"inlineContent":[{"text":"The value passed as ","type":"text"},{"type":"codeVoice","code":"distance"},{"text":" must not offset ","type":"text"},{"code":"i","type":"codeVoice"},{"text":" beyond the bounds of","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the collection, unless the index passed as "},{"type":"codeVoice","code":"limit"},{"text":" prevents offsetting","type":"text"},{"text":" ","type":"text"},{"text":"beyond those bounds.","type":"text"}],"type":"paragraph"},{"type":"aside","style":"note","name":"Complexity","content":[{"inlineContent":[{"text":"O(1) if the collection conforms to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"RandomAccessCollection"},{"text":"; otherwise, O(","type":"text"},{"inlineContent":[{"text":"k","type":"text"}],"type":"emphasis"},{"text":"), where ","type":"text"},{"inlineContent":[{"text":"k","type":"text"}],"type":"emphasis"},{"text":" is the absolute","type":"text"},{"type":"text","text":" "},{"type":"text","text":"value of "},{"type":"codeVoice","code":"distance"},{"type":"text","text":"."}],"type":"paragraph"}]}]}],"variants":[{"paths":["\/documentation\/compute\/linkedlist\/index(_:offsetby:limitedby:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LinkedList","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LinkedList\/Collection-Implementations"]]},"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LinkedList\/index(_:offsetBy:limitedBy:)"},"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"index","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:Sl5IndexQa","text":"Index","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"offsetBy"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"limitedBy"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"Index","preciseIdentifier":"s:Sl5IndexQa","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Index","preciseIdentifier":"s:Sl5IndexQa"},{"text":"?","kind":"text"}],"role":"symbol","externalID":"s:SlsE5index_8offsetBy07limitedC05IndexQzSgAE_SiAEtF::SYNTHESIZED::s:7Compute10LinkedListO","extendedModule":"Swift","title":"index(_:offsetBy:limitedBy:)","symbolKind":"method","roleHeading":"Instance Method","modules":[{"relatedModules":["Swift"],"name":"Compute"}]},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/LinkedList/index(_:offsetBy:limitedBy:)":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LinkedList\/index(_:offsetBy:limitedBy:)","url":"\/documentation\/compute\/linkedlist\/index(_:offsetby:limitedby:)","role":"symbol","kind":"symbol","title":"index(_:offsetBy:limitedBy:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"index","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Index","kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa"},{"text":", ","kind":"text"},{"text":"offsetBy","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"limitedBy"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"Index","preciseIdentifier":"s:Sl5IndexQa","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:Sl5IndexQa","text":"Index","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"type":"topic","abstract":[{"text":"Returns an index that is the specified distance from the given index,","type":"text"},{"text":" ","type":"text"},{"text":"unless that distance is beyond a given limiting index.","type":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/LinkedList":{"url":"\/documentation\/compute\/linkedlist","abstract":[],"title":"LinkedList","role":"symbol","navigatorTitle":[{"text":"LinkedList","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LinkedList","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"LinkedList"}],"kind":"symbol","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/LinkedList/Collection-Implementations":{"url":"\/documentation\/compute\/linkedlist\/collection-implementations","abstract":[],"kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LinkedList\/Collection-Implementations","title":"Collection Implementations","role":"collectionGroup","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Collection/Index":{"url":"\/documentation\/compute\/collection\/index","required":true,"role":"symbol","title":"Index","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Index","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"Comparable","preciseIdentifier":"s:SL","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"A type that represents a position in the collection."}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/Index","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","abstract":[{"type":"text","text":"A signed integer value type."}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Int","kind":"identifier"}],"navigatorTitle":[{"text":"Int","kind":"identifier"}],"title":"Int","url":"\/documentation\/compute\/int","kind":"symbol"}}}