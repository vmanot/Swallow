{"abstract":[{"type":"text","text":"Returns a random value within the specified range, using the given"},{"type":"text","text":" "},{"text":"generator as a source for randomness.","type":"text"}],"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"random","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"text":"in","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"range"},{"kind":"text","text":": "},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Range","kind":"typeIdentifier","text":"Range","preciseIdentifier":"s:Sn"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"using","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"generator"},{"text":": ","kind":"text"},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"T"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":" ","kind":"text"},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"text":"T","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","text":"RandomNumberGenerator","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RandomNumberGenerator","preciseIdentifier":"s:SG"}]}]},{"kind":"parameters","parameters":[{"name":"range","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The range in which to create a random value."},{"text":" ","type":"text"},{"type":"codeVoice","code":"range"},{"type":"text","text":" must be finite and non-empty."}]}]},{"name":"generator","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The random number generator to use when creating the"},{"text":" ","type":"text"},{"type":"text","text":"new random value."}]}]}]},{"content":[{"anchor":"return-value","type":"heading","text":"Return Value","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"A random value within the bounds of "},{"type":"codeVoice","code":"range"},{"text":".","type":"text"}]}],"kind":"content"},{"kind":"content","content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"Use this method to generate a floating-point value within a specific","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"range when you are using a custom random number generator. This example"},{"text":" ","type":"text"},{"type":"text","text":"creates three new values in the range "},{"type":"codeVoice","code":"10.0 ..< 20.0"},{"type":"text","text":"."}]},{"type":"codeListing","syntax":null,"code":["for _ in 1...3 {","    print(Double.random(in: 10.0 ..< 20.0, using: &myGenerator))","}","\/\/ Prints \"18.1900709259179\"","\/\/ Prints \"14.2286325689993\"","\/\/ Prints \"13.1485686260762\""]},{"inlineContent":[{"text":"The ","type":"text"},{"type":"codeVoice","code":"random(in:using:)"},{"type":"text","text":" static method chooses a random value from a"},{"text":" ","type":"text"},{"type":"text","text":"continuous uniform distribution in "},{"type":"codeVoice","code":"range"},{"text":", and then converts that value","type":"text"},{"text":" ","type":"text"},{"text":"to the nearest representable value in this type. Depending on the size","type":"text"},{"type":"text","text":" "},{"text":"and span of ","type":"text"},{"code":"range","type":"codeVoice"},{"text":", some concrete values may be represented more","type":"text"},{"type":"text","text":" "},{"type":"text","text":"frequently than others."}],"type":"paragraph"},{"content":[{"inlineContent":[{"type":"text","text":"The algorithm used to create random values may change in a future"},{"type":"text","text":" "},{"text":"version of Swift. If youâ€™re passing a generator that results in the","type":"text"},{"text":" ","type":"text"},{"text":"same sequence of floating-point values each time you run your program,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"that sequence may change when your program is compiled using a"},{"type":"text","text":" "},{"text":"different version of Swift.","type":"text"}],"type":"paragraph"}],"style":"note","type":"aside","name":"Note"}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"variants":[{"paths":["\/documentation\/compute\/binaryfloatingpoint\/random(in:using:)-2awm8"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryFloatingPoint"]]},"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryFloatingPoint\/random(in:using:)-2awm8","interfaceLanguage":"swift"},"kind":"symbol","metadata":{"extendedModule":"Swift","modules":[{"relatedModules":["Swift"],"name":"Compute"}],"roleHeading":"Type Method","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"RawSignificand","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"FixedWidthInteger"},{"text":".","type":"text"}]},"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"random","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"in"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","text":"Range"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"using"},{"kind":"text","text":": "},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"role":"symbol","externalID":"s:SBss17FixedWidthInteger14RawSignificandRpzrlE6random2in5usingxSnyxG_qd__ztSGRd__lFZ","symbolKind":"method","title":"random(in:using:)"},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/BinaryFloatingPoint":{"navigatorTitle":[{"text":"BinaryFloatingPoint","kind":"identifier"}],"type":"topic","title":"BinaryFloatingPoint","abstract":[{"text":"A radix-2 (binary) floating-point type.","type":"text"}],"url":"\/documentation\/compute\/binaryfloatingpoint","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BinaryFloatingPoint","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryFloatingPoint","kind":"symbol","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/BinaryFloatingPoint/random(in:using:)-2awm8":{"role":"symbol","url":"\/documentation\/compute\/binaryfloatingpoint\/random(in:using:)-2awm8","title":"random(in:using:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"random","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"text":"in","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Range","kind":"typeIdentifier","preciseIdentifier":"s:Sn"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"using","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"abstract":[{"text":"Returns a random value within the specified range, using the given","type":"text"},{"type":"text","text":" "},{"text":"generator as a source for randomness.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryFloatingPoint\/random(in:using:)-2awm8","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"RawSignificand","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"FixedWidthInteger","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Range":{"kind":"symbol","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Range","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Range","url":"\/documentation\/compute\/range","abstract":[{"text":"A half-open interval from a lower bound up to, but not including, an upper","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"bound."}],"navigatorTitle":[{"text":"Range","kind":"identifier"}],"title":"Range"},"doc://com.swallow.documentation.Compute/documentation/Compute/RandomNumberGenerator":{"abstract":[{"text":"A type that provides uniformly distributed random data.","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"RandomNumberGenerator"}],"url":"\/documentation\/compute\/randomnumbergenerator","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RandomNumberGenerator","title":"RandomNumberGenerator","role":"symbol","type":"topic","navigatorTitle":[{"text":"RandomNumberGenerator","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"}}}