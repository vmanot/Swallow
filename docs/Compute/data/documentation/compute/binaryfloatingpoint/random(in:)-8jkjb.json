{"abstract":[{"type":"text","text":"Returns a random value within the specified range."}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"random"},{"kind":"text","text":"("},{"text":"in","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"range"},{"kind":"text","text":": "},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Range","kind":"typeIdentifier","text":"Range","preciseIdentifier":"s:Sn"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"text":"Self","kind":"typeIdentifier"}],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"text":"The range in which to create a random value.","type":"text"},{"text":" ","type":"text"},{"code":"range","type":"codeVoice"},{"text":" must be finite and non-empty.","type":"text"}],"type":"paragraph"}],"name":"range"}]},{"kind":"content","content":[{"anchor":"return-value","type":"heading","text":"Return Value","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"A random value within the bounds of "},{"code":"range","type":"codeVoice"},{"text":".","type":"text"}]}]},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Use this method to generate a floating-point value within a specific"},{"text":" ","type":"text"},{"type":"text","text":"range. This example creates three new values in the range"},{"text":" ","type":"text"},{"code":"10.0 ..< 20.0","type":"codeVoice"},{"type":"text","text":"."}]},{"type":"codeListing","syntax":null,"code":["for _ in 1...3 {","    print(Double.random(in: 10.0 ..< 20.0))","}","\/\/ Prints \"18.1900709259179\"","\/\/ Prints \"14.2286325689993\"","\/\/ Prints \"13.1485686260762\""]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"code":"random()","type":"codeVoice"},{"text":" static method chooses a random value from a continuous","type":"text"},{"type":"text","text":" "},{"type":"text","text":"uniform distribution in "},{"code":"range","type":"codeVoice"},{"type":"text","text":", and then converts that value to the"},{"text":" ","type":"text"},{"type":"text","text":"nearest representable value in this type. Depending on the size and span"},{"type":"text","text":" "},{"type":"text","text":"of "},{"type":"codeVoice","code":"range"},{"type":"text","text":", some concrete values may be represented more frequently than"},{"type":"text","text":" "},{"type":"text","text":"others."}]},{"inlineContent":[{"text":"This method is equivalent to calling ","type":"text"},{"type":"codeVoice","code":"random(in:using:)"},{"type":"text","text":", passing in the"},{"type":"text","text":" "},{"text":"systemâ€™s default random generator.","type":"text"}],"type":"paragraph"}]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryFloatingPoint"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/binaryfloatingpoint\/random(in:)-8jkjb"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryFloatingPoint\/random(in:)-8jkjb"},"metadata":{"roleHeading":"Type Method","conformance":{"constraints":[{"code":"RawSignificand","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"FixedWidthInteger"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"random(in:)","externalID":"s:SBss17FixedWidthInteger14RawSignificandRpzrlE6random2inxSnyxG_tFZ","symbolKind":"method","extendedModule":"Swift","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"random","kind":"identifier"},{"kind":"text","text":"("},{"text":"in","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Range","preciseIdentifier":"s:Sn","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":">) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"modules":[{"name":"Compute","relatedModules":["Swift"]}]},"sections":[],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/BinaryFloatingPoint":{"navigatorTitle":[{"text":"BinaryFloatingPoint","kind":"identifier"}],"type":"topic","title":"BinaryFloatingPoint","abstract":[{"text":"A radix-2 (binary) floating-point type.","type":"text"}],"url":"\/documentation\/compute\/binaryfloatingpoint","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BinaryFloatingPoint","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryFloatingPoint","kind":"symbol","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/BinaryFloatingPoint/random(in:)-8jkjb":{"abstract":[{"text":"Returns a random value within the specified range.","type":"text"}],"conformance":{"constraints":[{"code":"RawSignificand","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"FixedWidthInteger"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryFloatingPoint\/random(in:)-8jkjb","role":"symbol","title":"random(in:)","type":"topic","url":"\/documentation\/compute\/binaryfloatingpoint\/random(in:)-8jkjb","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"random","kind":"identifier"},{"text":"(","kind":"text"},{"text":"in","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Range","preciseIdentifier":"s:Sn"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Range":{"kind":"symbol","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Range","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Range","url":"\/documentation\/compute\/range","abstract":[{"text":"A half-open interval from a lower bound up to, but not including, an upper","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"bound."}],"navigatorTitle":[{"text":"Range","kind":"identifier"}],"title":"Range"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"}}}