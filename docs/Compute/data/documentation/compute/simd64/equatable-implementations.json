{"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD64\/Equatable-Implementations","interfaceLanguage":"swift"},"sections":[],"schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD64"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/simd64\/equatable-implementations"]}],"kind":"article","metadata":{"role":"collectionGroup","modules":[{"name":"Compute"}],"title":"Equatable Implementations","roleHeading":"API Collection"},"topicSections":[{"identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD64\/!=(_:_:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD64\/==(_:)"],"anchor":"Operators","generated":true,"title":"Operators"},{"identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD64\/eraseToAnyEquatable()"],"title":"Instance Methods","generated":true,"anchor":"Instance-Methods"}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD64":{"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SIMD64"}],"abstract":[{"type":"text","text":"A vector of 64 scalar values."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD64","navigatorTitle":[{"text":"SIMD64","kind":"identifier"}],"role":"symbol","kind":"symbol","url":"\/documentation\/compute\/simd64","title":"SIMD64"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD64/==(_:)":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD64\/==(_:)","role":"symbol","type":"topic","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"==","kind":"identifier"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ((","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/compute\/simd64\/==(_:)","abstract":[],"title":"==(_:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD64/eraseToAnyEquatable()":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"eraseToAnyEquatable","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"AnyEquatable","kind":"typeIdentifier","preciseIdentifier":"s:7Swallow12AnyEquatableV"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD64\/eraseToAnyEquatable()","type":"topic","title":"eraseToAnyEquatable()","role":"symbol","abstract":[],"kind":"symbol","url":"\/documentation\/compute\/simd64\/erasetoanyequatable()"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD64/!=(_:_:)":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD64\/!=(_:_:)","abstract":[{"type":"text","text":"Returns a Boolean value indicating whether two values are not equal."}],"role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"!=","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"type":"topic","kind":"symbol","title":"!=(_:_:)","url":"\/documentation\/compute\/simd64\/!=(_:_:)"}}}