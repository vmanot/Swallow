{"metadata":{"extendedModule":"Swift","role":"symbol","title":"extracting(_:)","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"extracting","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:Sn","text":"Range","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"text":"UnsafeBufferPointer","kind":"typeIdentifier","preciseIdentifier":"s:SR"},{"text":"<","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":">","kind":"text"}],"externalID":"s:SRsRi_zrlE10extractingySRyxGSnySiGF","roleHeading":"Instance Method","modules":[{"name":"Compute","relatedModules":["Swift"]}]},"kind":"symbol","sections":[],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeBufferPointer"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"extracting","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"text":"bounds","kind":"internalParam"},{"kind":"text","text":": "},{"text":"Range","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Range","kind":"typeIdentifier","preciseIdentifier":"s:Sn"},{"text":"<","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeBufferPointer","preciseIdentifier":"s:SR","text":"UnsafeBufferPointer"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Element"},{"text":">","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}]},{"parameters":[{"name":"bounds","content":[{"type":"paragraph","inlineContent":[{"text":"A valid range of indices within this buffer.","type":"text"}]}]}],"kind":"parameters"},{"kind":"content","content":[{"level":2,"text":"Return Value","anchor":"return-value","type":"heading"},{"inlineContent":[{"type":"text","text":"A new buffer pointer over the items at "},{"type":"codeVoice","code":"bounds"},{"text":".","type":"text"}],"type":"paragraph"}]},{"kind":"content","content":[{"level":2,"text":"Discussion","type":"heading","anchor":"discussion"},{"inlineContent":[{"text":"The returned bufferâ€™s first item is always at index 0; unlike buffer","type":"text"},{"type":"text","text":" "},{"text":"slices, extracted buffers do not generally share their indices with the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"original buffer pointer."}],"type":"paragraph"},{"code":["withUnsafeTemporaryAllocation(of: Int.self, capacity: 5) { buffer in","  buffer.initialize(repeating: 0)","  \/\/ buffer contains [0, 0, 0, 0, 0]","  let part = buffer.extracting(2 ..< 4)","  part[0] = 1","  part[1] = 2","  \/\/ buffer now contains [0, 0, 1, 2, 0]","}"],"type":"codeListing","syntax":null},{"type":"paragraph","inlineContent":[{"type":"text","text":"When "},{"code":"Element","type":"codeVoice"},{"text":" is copyable, the ","type":"text"},{"type":"codeVoice","code":"extracting"},{"type":"text","text":" operation is equivalent to"},{"text":" ","type":"text"},{"type":"text","text":"slicing the buffer then rebasing the resulting buffer slice:"}]},{"code":["let a = buffer.extracting(i ..< j)","let b = UnsafeBufferPointer(rebasing: buffer[i ..< j])","\/\/ `a` and `b` are now holding the same buffer"],"type":"codeListing","syntax":null},{"type":"paragraph","inlineContent":[{"type":"text","text":"However, unlike slicing, the "},{"type":"codeVoice","code":"extracting"},{"type":"text","text":" operation remains available even"},{"text":" ","type":"text"},{"type":"text","text":"if "},{"code":"Element","type":"codeVoice"},{"type":"text","text":" happens to be noncopyable."}]}]}],"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeBufferPointer\/extracting(_:)-nivx","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/unsafebufferpointer\/extracting(_:)-nivx"]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"type":"text","text":"Constructs a standalone buffer pointer over the items within the supplied"},{"type":"text","text":" "},{"text":"range of positions in the memory region addressed by this buffer pointer.","type":"text"}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Range":{"kind":"symbol","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Range","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Range","url":"\/documentation\/compute\/range","abstract":[{"text":"A half-open interval from a lower bound up to, but not including, an upper","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"bound."}],"navigatorTitle":[{"text":"Range","kind":"identifier"}],"title":"Range"},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeBufferPointer":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeBufferPointer","abstract":[{"type":"text","text":"A nonowning collection interface to a buffer of"},{"type":"text","text":" "},{"text":"elements stored contiguously in memory.","type":"text"}],"role":"symbol","type":"topic","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UnsafeBufferPointer","kind":"identifier"}],"title":"UnsafeBufferPointer","navigatorTitle":[{"kind":"identifier","text":"UnsafeBufferPointer"}],"url":"\/documentation\/compute\/unsafebufferpointer"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","abstract":[{"type":"text","text":"A signed integer value type."}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Int","kind":"identifier"}],"navigatorTitle":[{"text":"Int","kind":"identifier"}],"title":"Int","url":"\/documentation\/compute\/int","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeBufferPointer/extracting(_:)-nivx":{"kind":"symbol","title":"extracting(_:)","url":"\/documentation\/compute\/unsafebufferpointer\/extracting(_:)-nivx","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"extracting","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","text":"Range"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"kind":"text","text":">) -> "},{"text":"UnsafeBufferPointer","kind":"typeIdentifier","preciseIdentifier":"s:SR"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeBufferPointer\/extracting(_:)-nivx","role":"symbol","abstract":[{"type":"text","text":"Constructs a standalone buffer pointer over the items within the supplied"},{"type":"text","text":" "},{"type":"text","text":"range of positions in the memory region addressed by this buffer pointer."}],"type":"topic"}}}