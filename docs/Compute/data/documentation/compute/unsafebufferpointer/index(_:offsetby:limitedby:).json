{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"index"},{"kind":"text","text":"("},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"i"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","text":"Int","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"offsetBy","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"n","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","text":"Int","preciseIdentifier":"s:Si"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"limitedBy"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"limit"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Int","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","preciseIdentifier":"s:Si"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Int","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","preciseIdentifier":"s:Si"},{"kind":"text","text":"?"}],"languages":["swift"],"platforms":["macOS"]}]},{"parameters":[{"name":"i","content":[{"inlineContent":[{"type":"text","text":"A valid index of the collection."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"A valid index of the collection to use as a limit. If","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"distance > 0"},{"text":", a limit that is less than ","type":"text"},{"type":"codeVoice","code":"i"},{"type":"text","text":" has no effect."},{"type":"text","text":" "},{"text":"Likewise, if ","type":"text"},{"type":"codeVoice","code":"distance < 0"},{"type":"text","text":", a limit that is greater than "},{"type":"codeVoice","code":"i"},{"type":"text","text":" has no"},{"type":"text","text":" "},{"type":"text","text":"effect."}]}],"name":"limit"}],"kind":"parameters"},{"kind":"content","content":[{"type":"heading","anchor":"return-value","level":2,"text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"An index offset by "},{"code":"distance","type":"codeVoice"},{"type":"text","text":" from the index "},{"type":"codeVoice","code":"i"},{"text":", unless that","type":"text"},{"type":"text","text":" "},{"type":"text","text":"index would be beyond "},{"type":"codeVoice","code":"limit"},{"type":"text","text":" in the direction of movement. In that"},{"text":" ","type":"text"},{"type":"text","text":"case, the method returns "},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"}]}]},{"content":[{"level":2,"type":"heading","anchor":"discussion","text":"Discussion"},{"inlineContent":[{"type":"text","text":"The following example obtains an index advanced four positions from a"},{"type":"text","text":" "},{"text":"string’s starting index and then prints the character at that position.","type":"text"},{"text":" ","type":"text"},{"text":"The operation doesn’t require going beyond the limiting ","type":"text"},{"code":"s.endIndex","type":"codeVoice"},{"text":" ","type":"text"},{"text":"value, so it succeeds.","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":["let s = \"Swift\"","if let i = s.index(s.startIndex, offsetBy: 4, limitedBy: s.endIndex) {","    print(s[i])","}","\/\/ Prints \"t\""]},{"type":"paragraph","inlineContent":[{"text":"The next example attempts to retrieve an index six positions from","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"s.startIndex"},{"type":"text","text":" but fails, because that distance is beyond the index"},{"text":" ","type":"text"},{"text":"passed as ","type":"text"},{"type":"codeVoice","code":"limit"},{"type":"text","text":"."}]},{"code":["let j = s.index(s.startIndex, offsetBy: 6, limitedBy: s.endIndex)","print(j)","\/\/ Prints \"nil\""],"type":"codeListing","syntax":null},{"type":"paragraph","inlineContent":[{"type":"text","text":"The value passed as "},{"code":"distance","type":"codeVoice"},{"text":" must not offset ","type":"text"},{"code":"i","type":"codeVoice"},{"text":" beyond the bounds of","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the collection, unless the index passed as "},{"code":"limit","type":"codeVoice"},{"type":"text","text":" prevents offsetting"},{"text":" ","type":"text"},{"text":"beyond those bounds.","type":"text"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"O(1) if the collection conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"RandomAccessCollection"},{"type":"text","text":"; otherwise, O("},{"inlineContent":[{"text":"k","type":"text"}],"type":"emphasis"},{"text":"), where ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"k"}]},{"text":" is the absolute","type":"text"},{"type":"text","text":" "},{"text":"value of ","type":"text"},{"code":"distance","type":"codeVoice"},{"text":".","type":"text"}]}],"style":"note","name":"Complexity","type":"aside"}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/unsafebufferpointer\/index(_:offsetby:limitedby:)"]}],"abstract":[{"type":"text","text":"Returns an index that is the specified distance from the given index,"},{"type":"text","text":" "},{"type":"text","text":"unless that distance is beyond a given limiting index."}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeBufferPointer","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeBufferPointer\/Collection-Implementations"]]},"kind":"symbol","sections":[],"metadata":{"title":"index(_:offsetBy:limitedBy:)","roleHeading":"Instance Method","symbolKind":"method","externalID":"s:SRsRi_zrlE5index_8offsetBy07limitedC0SiSgSi_S2itF","modules":[{"relatedModules":["Swift"],"name":"Compute"}],"extendedModule":"Swift","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"index"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"offsetBy","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":", ","kind":"text"},{"text":"limitedBy","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"text":"?","kind":"text"}]},"schemaVersion":{"patch":0,"minor":3,"major":0},"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeBufferPointer\/index(_:offsetBy:limitedBy:)","interfaceLanguage":"swift"},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeBufferPointer":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeBufferPointer","abstract":[{"type":"text","text":"A nonowning collection interface to a buffer of"},{"type":"text","text":" "},{"text":"elements stored contiguously in memory.","type":"text"}],"role":"symbol","type":"topic","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UnsafeBufferPointer","kind":"identifier"}],"title":"UnsafeBufferPointer","navigatorTitle":[{"kind":"identifier","text":"UnsafeBufferPointer"}],"url":"\/documentation\/compute\/unsafebufferpointer"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","abstract":[{"type":"text","text":"A signed integer value type."}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Int","kind":"identifier"}],"navigatorTitle":[{"text":"Int","kind":"identifier"}],"title":"Int","url":"\/documentation\/compute\/int","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeBufferPointer/index(_:offsetBy:limitedBy:)":{"title":"index(_:offsetBy:limitedBy:)","url":"\/documentation\/compute\/unsafebufferpointer\/index(_:offsetby:limitedby:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"index","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"offsetBy"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":", "},{"kind":"externalParam","text":"limitedBy"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeBufferPointer\/index(_:offsetBy:limitedBy:)","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Returns an index that is the specified distance from the given index,"},{"type":"text","text":" "},{"text":"unless that distance is beyond a given limiting index.","type":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeBufferPointer/Collection-Implementations":{"title":"Collection Implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeBufferPointer\/Collection-Implementations","abstract":[],"type":"topic","kind":"article","role":"collectionGroup","url":"\/documentation\/compute\/unsafebufferpointer\/collection-implementations"}}}