{"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeBufferPointer","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeBufferPointer\/Collection-Implementations"]]},"metadata":{"role":"symbol","extendedModule":"Swift","symbolKind":"method","roleHeading":"Instance Method","title":"prefix(upTo:)","modules":[{"name":"Compute","relatedModules":["Swift"]}],"externalID":"s:SlsE6prefix4upTo11SubSequenceQz5IndexQz_tF::SYNTHESIZED::s:SR","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"prefix","kind":"identifier"},{"text":"(","kind":"text"},{"text":"upTo","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Index","kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:Sl11SubSequenceQa","text":"SubSequence","kind":"typeIdentifier"}]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/unsafebufferpointer\/prefix(upto:)"]}],"sections":[],"schemaVersion":{"minor":3,"major":0,"patch":0},"abstract":[{"type":"text","text":"Returns a subsequence from the start of the collection up to, but not"},{"text":" ","type":"text"},{"text":"including, the specified position.","type":"text"}],"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeBufferPointer\/prefix(upTo:)"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"prefix","kind":"identifier"},{"kind":"text","text":"("},{"text":"upTo","kind":"externalParam"},{"kind":"text","text":" "},{"text":"end","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/Index","kind":"typeIdentifier","text":"Index","preciseIdentifier":"s:Sl5IndexQa"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"SubSequence","kind":"typeIdentifier","preciseIdentifier":"s:Sl11SubSequenceQa","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/SubSequence"}],"platforms":["macOS"]}]},{"parameters":[{"name":"end","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The “past the end” index of the resulting subsequence."},{"text":" ","type":"text"},{"type":"codeVoice","code":"end"},{"type":"text","text":" must be a valid index of the collection."}]}]}],"kind":"parameters"},{"kind":"content","content":[{"text":"Return Value","level":2,"type":"heading","anchor":"return-value"},{"inlineContent":[{"type":"text","text":"A subsequence up to, but not including, the "},{"type":"codeVoice","code":"end"},{"text":" position.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The resulting subsequence "},{"type":"emphasis","inlineContent":[{"text":"does not include","type":"text"}]},{"type":"text","text":" the element at the position"},{"type":"text","text":" "},{"code":"end","type":"codeVoice"},{"text":". The following example searches for the index of the number ","type":"text"},{"code":"40","type":"codeVoice"},{"type":"text","text":" "},{"text":"in an array of integers, and then prints the prefix of the array up to,","type":"text"},{"type":"text","text":" "},{"text":"but not including, that index:","type":"text"}]},{"syntax":null,"type":"codeListing","code":["let numbers = [10, 20, 30, 40, 50, 60]","if let i = numbers.firstIndex(of: 40) {","    print(numbers.prefix(upTo: i))","}","\/\/ Prints \"[10, 20, 30]\""]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Passing the collection’s starting index as the "},{"code":"end","type":"codeVoice"},{"type":"text","text":" parameter results in"},{"text":" ","type":"text"},{"type":"text","text":"an empty subsequence."}]},{"code":["print(numbers.prefix(upTo: numbers.startIndex))","\/\/ Prints \"[]\""],"syntax":null,"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Using the "},{"type":"codeVoice","code":"prefix(upTo:)"},{"type":"text","text":" method is equivalent to using a partial"},{"type":"text","text":" "},{"text":"half-open range as the collection’s subscript. The subscript notation is","type":"text"},{"type":"text","text":" "},{"type":"text","text":"preferred over "},{"type":"codeVoice","code":"prefix(upTo:)"},{"type":"text","text":"."}]},{"type":"codeListing","syntax":null,"code":["if let i = numbers.firstIndex(of: 40) {","    print(numbers[..<i])","}","\/\/ Prints \"[10, 20, 30]\""]},{"name":"Complexity","style":"note","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"O(1)"}]}]}],"kind":"content"}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Collection/Index":{"url":"\/documentation\/compute\/collection\/index","required":true,"role":"symbol","title":"Index","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Index","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"Comparable","preciseIdentifier":"s:SL","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"A type that represents a position in the collection."}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/Index","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeBufferPointer/prefix(upTo:)":{"type":"topic","url":"\/documentation\/compute\/unsafebufferpointer\/prefix(upto:)","title":"prefix(upTo:)","kind":"symbol","abstract":[{"text":"Returns a subsequence from the start of the collection up to, but not","type":"text"},{"type":"text","text":" "},{"type":"text","text":"including, the specified position."}],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"prefix"},{"kind":"text","text":"("},{"kind":"externalParam","text":"upTo"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Index","kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:Sl11SubSequenceQa","kind":"typeIdentifier","text":"SubSequence"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeBufferPointer\/prefix(upTo:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeBufferPointer":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeBufferPointer","abstract":[{"type":"text","text":"A nonowning collection interface to a buffer of"},{"type":"text","text":" "},{"text":"elements stored contiguously in memory.","type":"text"}],"role":"symbol","type":"topic","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UnsafeBufferPointer","kind":"identifier"}],"title":"UnsafeBufferPointer","navigatorTitle":[{"kind":"identifier","text":"UnsafeBufferPointer"}],"url":"\/documentation\/compute\/unsafebufferpointer"},"doc://com.swallow.documentation.Compute/documentation/Compute/Collection/SubSequence":{"url":"\/documentation\/compute\/collection\/subsequence","title":"SubSequence","abstract":[{"type":"text","text":"A collection representing a contiguous subrange of this collection’s"},{"type":"text","text":" "},{"text":"elements. The subsequence shares indices with the original collection.","type":"text"}],"type":"topic","kind":"symbol","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SubSequence"},{"kind":"text","text":" : "},{"text":"Collection","preciseIdentifier":"s:Sl","kind":"typeIdentifier"},{"text":" = ","kind":"text"},{"text":"Slice","preciseIdentifier":"s:s5SliceV","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":">","kind":"text"}],"required":true,"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/SubSequence"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeBufferPointer/Collection-Implementations":{"title":"Collection Implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeBufferPointer\/Collection-Implementations","abstract":[],"type":"topic","kind":"article","role":"collectionGroup","url":"\/documentation\/compute\/unsafebufferpointer\/collection-implementations"}}}