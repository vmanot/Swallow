{"kind":"symbol","abstract":[{"text":"Constructs a standalone buffer pointer over the items within the supplied","type":"text"},{"type":"text","text":" "},{"text":"range of positions in the memory region addressed by this buffer pointer.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeBufferPointer"]]},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/unsafebufferpointer\/extracting(_:)-47z4z"]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeBufferPointer\/extracting(_:)-47z4z"},"metadata":{"modules":[{"relatedModules":["Swift"],"name":"Compute"}],"externalID":"s:SRsRi_zrlE10extractingySRyxGqd__SXRd__Si5BoundRtd__lF","extendedModule":"Swift","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"extracting","kind":"identifier"},{"text":"(some ","kind":"text"},{"text":"RangeExpression","kind":"typeIdentifier","preciseIdentifier":"s:SX"},{"text":"<","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":">) -> ","kind":"text"},{"text":"UnsafeBufferPointer","kind":"typeIdentifier","preciseIdentifier":"s:SR"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Element"},{"text":">","kind":"text"}],"title":"extracting(_:)","roleHeading":"Instance Method","symbolKind":"method","role":"symbol"},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"extracting"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"bounds","kind":"internalParam"},{"text":": some ","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RangeExpression","text":"RangeExpression","preciseIdentifier":"s:SX"},{"text":"<","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"text":">) -> ","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeBufferPointer","kind":"typeIdentifier","text":"UnsafeBufferPointer","preciseIdentifier":"s:SR"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">"}]}],"kind":"declarations"},{"parameters":[{"name":"bounds","content":[{"inlineContent":[{"type":"text","text":"A valid range of indices within this buffer."}],"type":"paragraph"}]}],"kind":"parameters"},{"kind":"content","content":[{"text":"Return Value","level":2,"type":"heading","anchor":"return-value"},{"inlineContent":[{"type":"text","text":"A new buffer pointer over the items at "},{"type":"codeVoice","code":"bounds"},{"type":"text","text":"."}],"type":"paragraph"}]},{"content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"inlineContent":[{"text":"The returned bufferâ€™s first item is always at index 0; unlike buffer","type":"text"},{"type":"text","text":" "},{"text":"slices, extracted buffers do not generally share their indices with the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"original buffer pointer."}],"type":"paragraph"},{"syntax":null,"type":"codeListing","code":["withUnsafeTemporaryAllocation(of: Int.self, capacity: 5) { buffer in","  buffer.initialize(repeating: 0)","  \/\/ buffer contains [0, 0, 0, 0, 0]","  let part = buffer.extracting(2...)","  part[0] = 1","  part[1] = 2","  \/\/ buffer now contains [0, 0, 1, 2, 0]","}"]},{"inlineContent":[{"type":"text","text":"When "},{"type":"codeVoice","code":"Element"},{"type":"text","text":" is copyable, the "},{"type":"codeVoice","code":"extracting"},{"type":"text","text":" operation is equivalent to"},{"text":" ","type":"text"},{"text":"slicing the buffer then rebasing the resulting buffer slice:","type":"text"}],"type":"paragraph"},{"code":["let a = buffer.extracting(i ..< j)","let b = UnsafeBufferPointer(rebasing: buffer[i ..< j])","\/\/ `a` and `b` are now holding the same buffer"],"syntax":null,"type":"codeListing"},{"inlineContent":[{"type":"text","text":"However, unlike slicing, the "},{"type":"codeVoice","code":"extracting"},{"text":" operation remains available even","type":"text"},{"type":"text","text":" "},{"type":"text","text":"if "},{"code":"Element","type":"codeVoice"},{"text":" happens to be noncopyable.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeBufferPointer":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeBufferPointer","abstract":[{"type":"text","text":"A nonowning collection interface to a buffer of"},{"type":"text","text":" "},{"text":"elements stored contiguously in memory.","type":"text"}],"role":"symbol","type":"topic","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UnsafeBufferPointer","kind":"identifier"}],"title":"UnsafeBufferPointer","navigatorTitle":[{"kind":"identifier","text":"UnsafeBufferPointer"}],"url":"\/documentation\/compute\/unsafebufferpointer"},"doc://com.swallow.documentation.Compute/documentation/Compute/RangeExpression":{"abstract":[{"text":"A type that can be used to slice a collection.","type":"text"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"RangeExpression","kind":"identifier"}],"url":"\/documentation\/compute\/rangeexpression","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RangeExpression","kind":"symbol","title":"RangeExpression","role":"symbol","type":"topic","navigatorTitle":[{"text":"RangeExpression","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeBufferPointer/extracting(_:)-47z4z":{"kind":"symbol","abstract":[{"type":"text","text":"Constructs a standalone buffer pointer over the items within the supplied"},{"text":" ","type":"text"},{"text":"range of positions in the memory region addressed by this buffer pointer.","type":"text"}],"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"extracting","kind":"identifier"},{"kind":"text","text":"(some "},{"preciseIdentifier":"s:SX","kind":"typeIdentifier","text":"RangeExpression"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":">) -> "},{"text":"UnsafeBufferPointer","preciseIdentifier":"s:SR","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeBufferPointer\/extracting(_:)-47z4z","url":"\/documentation\/compute\/unsafebufferpointer\/extracting(_:)-47z4z","title":"extracting(_:)","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","abstract":[{"type":"text","text":"A signed integer value type."}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Int","kind":"identifier"}],"navigatorTitle":[{"text":"Int","kind":"identifier"}],"title":"Int","url":"\/documentation\/compute\/int","kind":"symbol"}}}