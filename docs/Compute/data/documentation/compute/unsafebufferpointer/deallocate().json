{"variants":[{"paths":["\/documentation\/compute\/unsafebufferpointer\/deallocate()"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"metadata":{"externalID":"s:SRsRi_zrlE10deallocateyyF","extendedModule":"Swift","roleHeading":"Instance Method","modules":[{"name":"Compute","relatedModules":["Swift"]}],"symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"deallocate"},{"kind":"text","text":"()"}],"title":"deallocate()","role":"symbol"},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeBufferPointer"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"deallocate","kind":"identifier"},{"text":"()","kind":"text"}]}]},{"content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"This buffer pointer’s ","type":"text"},{"code":"baseAddress","type":"codeVoice"},{"text":" must be ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":" or a pointer to a memory","type":"text"},{"type":"text","text":" "},{"type":"text","text":"block previously returned by a Swift allocation method. If "},{"code":"baseAddress","type":"codeVoice"},{"text":" ","type":"text"},{"text":"is ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":", this function does nothing. Otherwise, the memory must not be"},{"text":" ","type":"text"},{"type":"text","text":"initialized or "},{"type":"codeVoice","code":"Pointee"},{"type":"text","text":" must be a trivial type. This buffer pointer’s"},{"type":"text","text":" "},{"type":"codeVoice","code":"count"},{"text":" must be equal to the originally allocated size of the memory","type":"text"},{"type":"text","text":" "},{"type":"text","text":"block."}]}],"kind":"content"}],"abstract":[{"text":"Deallocates the memory block previously allocated at this buffer pointer’s","type":"text"},{"type":"text","text":" "},{"type":"text","text":"base address."}],"schemaVersion":{"major":0,"patch":0,"minor":3},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeBufferPointer\/deallocate()"},"kind":"symbol","references":{"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeBufferPointer/deallocate()":{"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeBufferPointer\/deallocate()","abstract":[{"type":"text","text":"Deallocates the memory block previously allocated at this buffer pointer’s"},{"text":" ","type":"text"},{"type":"text","text":"base address."}],"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"deallocate"},{"text":"()","kind":"text"}],"title":"deallocate()","url":"\/documentation\/compute\/unsafebufferpointer\/deallocate()"},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeBufferPointer":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeBufferPointer","abstract":[{"type":"text","text":"A nonowning collection interface to a buffer of"},{"type":"text","text":" "},{"text":"elements stored contiguously in memory.","type":"text"}],"role":"symbol","type":"topic","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UnsafeBufferPointer","kind":"identifier"}],"title":"UnsafeBufferPointer","navigatorTitle":[{"kind":"identifier","text":"UnsafeBufferPointer"}],"url":"\/documentation\/compute\/unsafebufferpointer"}}}