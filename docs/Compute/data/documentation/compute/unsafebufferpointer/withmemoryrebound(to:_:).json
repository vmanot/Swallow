{"abstract":[{"text":"Executes the given closure while temporarily binding the memory referenced","type":"text"},{"type":"text","text":" "},{"type":"text","text":"by this buffer to the given type."}],"metadata":{"extendedModule":"Swift","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"withMemoryRebound"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":", "},{"text":"E","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Result","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"text":".Type, (","kind":"text"},{"preciseIdentifier":"s:SR","kind":"typeIdentifier","text":"UnsafeBufferPointer"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">) "},{"text":"throws","kind":"keyword"},{"text":"(","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Result"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"E"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Result"}],"modules":[{"relatedModules":["Swift"],"name":"Compute"}],"roleHeading":"Instance Method","externalID":"s:SRsRi_zrlE17withMemoryRebound2to_qd_1_qd__m_qd_1_SRyqd__Gqd_0_YKXEtqd_0_YKs5ErrorRd_0_Ri_d__Ri_d_1_r1_lF","symbolKind":"method","title":"withMemoryRebound(to:_:)","role":"symbol"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/unsafebufferpointer\/withmemoryrebound(to:_:)"]}],"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeBufferPointer\/withMemoryRebound(to:_:)","interfaceLanguage":"swift"},"sections":[],"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeBufferPointer"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"withMemoryRebound"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":", "},{"text":"E","kind":"genericParameter"},{"kind":"text","text":", "},{"text":"Result","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"to","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"type"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":".Type, "},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"text":"body","kind":"internalParam"},{"kind":"text","text":": ("},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeBufferPointer","kind":"typeIdentifier","text":"UnsafeBufferPointer","preciseIdentifier":"s:SR"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":">) ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":"("},{"text":"E","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"kind":"text","text":"("},{"text":"E","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":" "},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"text":"Error","preciseIdentifier":"s:s5ErrorP","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Error","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":" : ~Copyable, "},{"text":"Result","kind":"typeIdentifier"},{"kind":"text","text":" : ~Copyable"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"name":"type","content":[{"inlineContent":[{"type":"text","text":"The type to temporarily bind the memory referenced by this"},{"text":" ","type":"text"},{"text":"buffer. The type ","type":"text"},{"type":"codeVoice","code":"T"},{"text":" must be layout compatible","type":"text"},{"type":"text","text":" "},{"type":"text","text":"with the pointer’s "},{"type":"codeVoice","code":"Element"},{"text":" type.","type":"text"}],"type":"paragraph"}]},{"name":"body","content":[{"inlineContent":[{"text":"A closure that takes a  typed buffer to the","type":"text"},{"type":"text","text":" "},{"text":"same memory as this buffer, only bound to type ","type":"text"},{"type":"codeVoice","code":"T"},{"type":"text","text":". The buffer"},{"type":"text","text":" "},{"type":"text","text":"parameter contains a number of complete instances of "},{"code":"T","type":"codeVoice"},{"text":" based","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"on the capacity of the original buffer and the stride of "},{"type":"codeVoice","code":"Element"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"The closure’s buffer argument is valid only for the duration of the","type":"text"},{"type":"text","text":" "},{"text":"closure’s execution. If ","type":"text"},{"code":"body","type":"codeVoice"},{"type":"text","text":" has a return value, that value"},{"text":" ","type":"text"},{"type":"text","text":"is also used as the return value for the "},{"type":"codeVoice","code":"withMemoryRebound(to:_:)"},{"text":" ","type":"text"},{"type":"text","text":"method."}],"type":"paragraph"}]}]},{"kind":"content","content":[{"level":2,"type":"heading","text":"Return Value","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The return value, if any, of the "},{"code":"body","type":"codeVoice"},{"type":"text","text":" closure parameter."}]}]},{"kind":"content","content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"Use this method when you have a buffer of memory bound to one type and","type":"text"},{"type":"text","text":" "},{"text":"you need to access that memory as a buffer of another type. Accessing","type":"text"},{"type":"text","text":" "},{"type":"text","text":"memory as type "},{"code":"T","type":"codeVoice"},{"text":" requires that the memory be bound to that type. A","type":"text"},{"type":"text","text":" "},{"type":"text","text":"memory location may only be bound to one type at a time, so accessing"},{"type":"text","text":" "},{"type":"text","text":"the same memory as an unrelated type without first rebinding the memory"},{"type":"text","text":" "},{"type":"text","text":"is undefined."}]},{"inlineContent":[{"type":"text","text":"The number of instances of "},{"type":"codeVoice","code":"T"},{"type":"text","text":" referenced by the rebound buffer may be"},{"text":" ","type":"text"},{"text":"different than the number of instances of ","type":"text"},{"type":"codeVoice","code":"Element"},{"type":"text","text":" referenced by the"},{"text":" ","type":"text"},{"type":"text","text":"original buffer. The number of instances of "},{"code":"T","type":"codeVoice"},{"type":"text","text":" will be calculated"},{"type":"text","text":" "},{"type":"text","text":"at runtime."}],"type":"paragraph"},{"inlineContent":[{"text":"Any instance of ","type":"text"},{"type":"codeVoice","code":"T"},{"text":" within the re-bound region may be initialized or","type":"text"},{"type":"text","text":" "},{"type":"text","text":"uninitialized. Every instance of "},{"type":"codeVoice","code":"Pointee"},{"text":" overlapping with a given","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"instance of "},{"code":"T","type":"codeVoice"},{"text":" should have the same initialization state (i.e.","type":"text"},{"type":"text","text":" "},{"text":"initialized or uninitialized.) Accessing a ","type":"text"},{"type":"codeVoice","code":"T"},{"type":"text","text":" whose underlying"},{"text":" ","type":"text"},{"type":"codeVoice","code":"Pointee"},{"type":"text","text":" storage is in a mixed initialization state shall be"},{"type":"text","text":" "},{"type":"text","text":"undefined behaviour."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Because this buffer’s memory is no longer bound to its "},{"type":"codeVoice","code":"Element"},{"type":"text","text":" type"},{"type":"text","text":" "},{"type":"text","text":"while the "},{"type":"codeVoice","code":"body"},{"type":"text","text":" closure executes, do not access memory using the"},{"type":"text","text":" "},{"text":"original buffer from within ","type":"text"},{"code":"body","type":"codeVoice"},{"text":". Instead, use the ","type":"text"},{"type":"codeVoice","code":"body"},{"text":" closure’s","type":"text"},{"type":"text","text":" "},{"type":"text","text":"buffer argument to access the values in memory as instances of type"},{"type":"text","text":" "},{"code":"T","type":"codeVoice"},{"text":".","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"After executing "},{"code":"body","type":"codeVoice"},{"type":"text","text":", this method rebinds memory back to the original"},{"type":"text","text":" "},{"code":"Element","type":"codeVoice"},{"text":" type.","type":"text"}]},{"content":[{"inlineContent":[{"text":"Only use this method to rebind the buffer’s memory to a type","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"that is layout compatible with the currently bound "},{"type":"codeVoice","code":"Element"},{"text":" type.","type":"text"},{"text":" ","type":"text"},{"text":"The stride of the temporary type (","type":"text"},{"code":"T","type":"codeVoice"},{"type":"text","text":") may be an integer multiple"},{"text":" ","type":"text"},{"type":"text","text":"or a whole fraction of "},{"type":"codeVoice","code":"Element"},{"type":"text","text":"‘s stride."},{"text":" ","type":"text"},{"type":"text","text":"To bind a region of memory to a type that does not match these"},{"text":" ","type":"text"},{"text":"requirements, convert the buffer to a raw buffer and use the","type":"text"},{"text":" ","type":"text"},{"text":"raw buffer’s ","type":"text"},{"type":"codeVoice","code":"withMemoryRebound(to:)"},{"type":"text","text":" method."},{"type":"text","text":" "},{"type":"text","text":"If "},{"type":"codeVoice","code":"T"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Element"},{"text":" have different alignments, this buffer’s","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"baseAddress"},{"text":" must be aligned with the larger of the two alignments.","type":"text"}],"type":"paragraph"}],"style":"note","name":"Note","type":"aside"}]}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeBufferPointer":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeBufferPointer","abstract":[{"type":"text","text":"A nonowning collection interface to a buffer of"},{"type":"text","text":" "},{"text":"elements stored contiguously in memory.","type":"text"}],"role":"symbol","type":"topic","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UnsafeBufferPointer","kind":"identifier"}],"title":"UnsafeBufferPointer","navigatorTitle":[{"kind":"identifier","text":"UnsafeBufferPointer"}],"url":"\/documentation\/compute\/unsafebufferpointer"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Error":{"url":"\/documentation\/compute\/error","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Error"}],"navigatorTitle":[{"text":"Error","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Error","type":"topic","role":"symbol","abstract":[{"type":"text","text":"A type representing an error value that can be thrown."}],"kind":"symbol","title":"Error"},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeBufferPointer/withMemoryRebound(to:_:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"withMemoryRebound","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"text":", ","kind":"text"},{"text":"E","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Result","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"to","kind":"externalParam"},{"kind":"text","text":": "},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":".Type, ("},{"text":"UnsafeBufferPointer","kind":"typeIdentifier","preciseIdentifier":"s:SR"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":">) ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":"(","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Result","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"E"},{"text":") -> ","kind":"text"},{"text":"Result","kind":"typeIdentifier"}],"url":"\/documentation\/compute\/unsafebufferpointer\/withmemoryrebound(to:_:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeBufferPointer\/withMemoryRebound(to:_:)","title":"withMemoryRebound(to:_:)","abstract":[{"text":"Executes the given closure while temporarily binding the memory referenced","type":"text"},{"text":" ","type":"text"},{"text":"by this buffer to the given type.","type":"text"}],"type":"topic","kind":"symbol","role":"symbol"}}}