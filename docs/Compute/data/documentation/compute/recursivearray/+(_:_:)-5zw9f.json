{"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RecursiveArray","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RecursiveArray\/RangeReplaceableCollection-Implementations"]]},"abstract":[{"type":"text","text":"Creates a new collection by concatenating the elements of a sequence and a"},{"type":"text","text":" "},{"type":"text","text":"collection."}],"metadata":{"externalID":"s:SmsE1poiyxqd___xtSTRd__7ElementQyd__ABRtzlFZ::SYNTHESIZED::s:7Compute14RecursiveArrayV","title":"+(_:_:)","extendedModule":"Swift","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"+","kind":"identifier"},{"text":" ","kind":"text"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Other"},{"text":">(","kind":"text"},{"text":"Other","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"modules":[{"name":"Compute","relatedModules":["Swift"]}],"roleHeading":"Operator","role":"symbol","symbolKind":"op"},"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RecursiveArray\/+(_:_:)-5zw9f","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"major":0,"patch":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/recursivearray\/+(_:_:)-5zw9f"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"+"},{"text":" ","kind":"text"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Other"},{"text":">(","kind":"text"},{"text":"lhs","kind":"internalParam"},{"kind":"text","text":": "},{"text":"Other","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"rhs","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":" "},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"text":"Other","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:ST","text":"Sequence","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","preciseIdentifier":"s:ST7ElementQa","text":"Element","kind":"typeIdentifier"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"Other"},{"kind":"text","text":"."},{"text":"Element","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"}],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"A collection or finite sequence.","type":"text"}]}],"name":"lhs"},{"name":"rhs","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A range-replaceable collection."}]}]}]},{"content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"The two arguments must have the same "},{"code":"Element","type":"codeVoice"},{"text":" type. For example, you can","type":"text"},{"type":"text","text":" "},{"text":"concatenate the elements of a ","type":"text"},{"type":"codeVoice","code":"Range<Int>"},{"type":"text","text":" instance and an integer array."}]},{"syntax":null,"code":["let numbers = [7, 8, 9, 10]","let moreNumbers = (1...6) + numbers","print(moreNumbers)","\/\/ Prints \"[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\""],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"The resulting collection has the type of argument on the right-hand side."},{"text":" ","type":"text"},{"type":"text","text":"In the example above, "},{"code":"moreNumbers","type":"codeVoice"},{"text":" has the same type as ","type":"text"},{"code":"numbers","type":"codeVoice"},{"text":", which","type":"text"},{"type":"text","text":" "},{"text":"is ","type":"text"},{"code":"[Int]","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}],"kind":"content"}],"sections":[],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/RecursiveArray/RangeReplaceableCollection-Implementations":{"abstract":[],"kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RecursiveArray\/RangeReplaceableCollection-Implementations","title":"RangeReplaceableCollection Implementations","url":"\/documentation\/compute\/recursivearray\/rangereplaceablecollection-implementations","role":"collectionGroup","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence":{"url":"\/documentation\/compute\/sequence","navigatorTitle":[{"kind":"identifier","text":"Sequence"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence","title":"Sequence","kind":"symbol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Sequence","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"A type that provides sequential, iterated access to its elements."}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence/Element":{"type":"topic","required":true,"abstract":[{"type":"text","text":"A type representing the sequenceâ€™s elements."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"symbol","url":"\/documentation\/compute\/sequence\/element","role":"symbol","title":"Element","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/RecursiveArray/+(_:_:)-5zw9f":{"type":"topic","title":"+(_:_:)","url":"\/documentation\/compute\/recursivearray\/+(_:_:)-5zw9f","kind":"symbol","abstract":[{"type":"text","text":"Creates a new collection by concatenating the elements of a sequence and a"},{"type":"text","text":" "},{"type":"text","text":"collection."}],"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"+","kind":"identifier"},{"kind":"text","text":" "},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Other"},{"text":">(","kind":"text"},{"text":"Other","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RecursiveArray\/+(_:_:)-5zw9f","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/RecursiveArray":{"type":"topic","role":"symbol","url":"\/documentation\/compute\/recursivearray","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RecursiveArray","title":"RecursiveArray","abstract":[],"navigatorTitle":[{"text":"RecursiveArray","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"RecursiveArray"}],"kind":"symbol"}}}