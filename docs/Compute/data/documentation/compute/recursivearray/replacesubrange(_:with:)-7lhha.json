{"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RecursiveArray","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RecursiveArray\/RangeReplaceableCollection-Implementations"]]},"metadata":{"roleHeading":"Instance Method","title":"replaceSubrange(_:with:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"replaceSubrange"},{"kind":"text","text":"<"},{"text":"C","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","text":"Range"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:Sl5IndexQa","kind":"typeIdentifier","text":"Index"},{"text":">, ","kind":"text"},{"text":"with","kind":"externalParam"},{"kind":"text","text":": "},{"text":"C","kind":"typeIdentifier"},{"kind":"text","text":")"}],"modules":[{"name":"Compute","relatedModules":["Swift"]}],"role":"symbol","symbolKind":"method","externalID":"s:SmsE15replaceSubrange_4withySny5IndexQzG_qd__tSlRd__7ElementQyd__AFRtzlF::SYNTHESIZED::s:7Compute14RecursiveArrayV","platforms":[],"extendedModule":"Swift"},"kind":"symbol","sections":[],"abstract":[{"type":"text","text":"Replaces the specified subrange of elements with the given collection."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"mutating","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"replaceSubrange","kind":"identifier"},{"text":"<","kind":"text"},{"text":"C","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"text":"subrange","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Range","preciseIdentifier":"s:Sn","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Range"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/Index","kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa","text":"Index"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"with"},{"kind":"text","text":" "},{"kind":"internalParam","text":"newElements"},{"text":": ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"text":"C","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"text":"Collection","kind":"typeIdentifier","preciseIdentifier":"s:Sl","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","preciseIdentifier":"s:ST7ElementQa","text":"Element","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"kind":"typeIdentifier","text":"C"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Element","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","preciseIdentifier":"s:ST7ElementQa"}]}]},{"parameters":[{"name":"subrange","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The subrange of the collection to replace. The bounds of"},{"type":"text","text":" "},{"text":"the range must be valid indices of the collection.","type":"text"}]}]},{"name":"newElements","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The new elements to add to the collection."}]}]}],"kind":"parameters"},{"kind":"content","content":[{"level":2,"type":"heading","anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method has the effect of removing the specified range of elements"},{"text":" ","type":"text"},{"type":"text","text":"from the collection and inserting the new elements at the same location."},{"text":" ","type":"text"},{"type":"text","text":"The number of new elements need not match the number of elements being"},{"type":"text","text":" "},{"type":"text","text":"removed."}]},{"inlineContent":[{"text":"In this example, three elements in the middle of an array of integers are","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"replaced by the five elements of a "},{"code":"Repeated<Int>","type":"codeVoice"},{"text":" instance.","type":"text"}],"type":"paragraph"},{"code":[" var nums = [10, 20, 30, 40, 50]"," nums.replaceSubrange(1...3, with: repeatElement(1, count: 5))"," print(nums)"," \/\/ Prints \"[10, 1, 1, 1, 1, 1, 50]\""],"syntax":null,"type":"codeListing"},{"inlineContent":[{"type":"text","text":"If you pass a zero-length range as the "},{"type":"codeVoice","code":"subrange"},{"text":" parameter, this method","type":"text"},{"type":"text","text":" "},{"text":"inserts the elements of ","type":"text"},{"type":"codeVoice","code":"newElements"},{"type":"text","text":" at "},{"type":"codeVoice","code":"subrange.startIndex"},{"type":"text","text":". Calling"},{"type":"text","text":" "},{"type":"text","text":"the "},{"type":"codeVoice","code":"insert(contentsOf:at:)"},{"text":" method instead is preferred.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Likewise, if you pass a zero-length collection as the "},{"code":"newElements","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"parameter, this method removes the elements in the given subrange"},{"text":" ","type":"text"},{"text":"without replacement. Calling the ","type":"text"},{"code":"removeSubrange(_:)","type":"codeVoice"},{"text":" method instead is","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"preferred."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Calling this method may invalidate any existing indices for use with this"},{"text":" ","type":"text"},{"type":"text","text":"collection."}]},{"name":"Complexity","type":"aside","content":[{"inlineContent":[{"text":"O(","type":"text"},{"type":"emphasis","inlineContent":[{"text":"n","type":"text"}]},{"text":" + ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"m"}]},{"type":"text","text":"), where "},{"inlineContent":[{"type":"text","text":"n"}],"type":"emphasis"},{"type":"text","text":" is length of this collection and"},{"type":"text","text":" "},{"inlineContent":[{"text":"m","type":"text"}],"type":"emphasis"},{"type":"text","text":" is the length of "},{"type":"codeVoice","code":"newElements"},{"text":". If the call to this method simply","type":"text"},{"text":" ","type":"text"},{"text":"appends the contents of ","type":"text"},{"code":"newElements","type":"codeVoice"},{"type":"text","text":" to the collection, this method is"},{"text":" ","type":"text"},{"type":"text","text":"equivalent to "},{"code":"append(contentsOf:)","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}],"style":"note"}]}],"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RecursiveArray\/replaceSubrange(_:with:)-7lhha","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/recursivearray\/replacesubrange(_:with:)-7lhha"]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/RecursiveArray":{"type":"topic","role":"symbol","url":"\/documentation\/compute\/recursivearray","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RecursiveArray","title":"RecursiveArray","abstract":[],"navigatorTitle":[{"text":"RecursiveArray","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"RecursiveArray"}],"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Range":{"kind":"symbol","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Range","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Range","url":"\/documentation\/compute\/range","abstract":[{"text":"A half-open interval from a lower bound up to, but not including, an upper","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"bound."}],"navigatorTitle":[{"text":"Range","kind":"identifier"}],"title":"Range"},"doc://com.swallow.documentation.Compute/documentation/Compute/RecursiveArray/replaceSubrange(_:with:)-7lhha":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"replaceSubrange"},{"kind":"text","text":"<"},{"text":"C","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Range","kind":"typeIdentifier","preciseIdentifier":"s:Sn"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:Sl5IndexQa","text":"Index","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"with","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":")"}],"type":"topic","kind":"symbol","title":"replaceSubrange(_:with:)","role":"symbol","url":"\/documentation\/compute\/recursivearray\/replacesubrange(_:with:)-7lhha","deprecated":true,"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RecursiveArray\/replaceSubrange(_:with:)-7lhha","abstract":[{"type":"text","text":"Replaces the specified subrange of elements with the given collection."}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Collection":{"kind":"symbol","role":"symbol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Collection"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection","url":"\/documentation\/compute\/collection","abstract":[{"type":"text","text":"A sequence whose elements can be traversed multiple times,"},{"text":" ","type":"text"},{"text":"nondestructively, and accessed by an indexed subscript.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Collection"}],"title":"Collection"},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence/Element":{"type":"topic","required":true,"abstract":[{"type":"text","text":"A type representing the sequence’s elements."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"symbol","url":"\/documentation\/compute\/sequence\/element","role":"symbol","title":"Element","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Collection/Index":{"url":"\/documentation\/compute\/collection\/index","required":true,"role":"symbol","title":"Index","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Index","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"Comparable","preciseIdentifier":"s:SL","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"A type that represents a position in the collection."}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/Index","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/RecursiveArray/RangeReplaceableCollection-Implementations":{"abstract":[],"kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RecursiveArray\/RangeReplaceableCollection-Implementations","title":"RangeReplaceableCollection Implementations","url":"\/documentation\/compute\/recursivearray\/rangereplaceablecollection-implementations","role":"collectionGroup","type":"topic"}}}