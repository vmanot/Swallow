{"kind":"symbol","metadata":{"roleHeading":"Instance Method","extendedModule":"Swift","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"withContiguousMutableStorageIfAvailable","kind":"identifier"},{"text":"<","kind":"text"},{"text":"R","kind":"genericParameter"},{"kind":"text","text":">(("},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UnsafeMutableBufferPointer","kind":"typeIdentifier","preciseIdentifier":"s:Sr"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"text":">) ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"R"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"R"},{"text":"?","kind":"text"}],"title":"withContiguousMutableStorageIfAvailable(_:)","externalID":"s:SMsE39withContiguousMutableStorageIfAvailableyqd__Sgqd__Sry7ElementQzGzKXEKlF::SYNTHESIZED::s:7Compute14RecursiveArrayV","modules":[{"relatedModules":["Swift"],"name":"Compute"}],"role":"symbol"},"abstract":[{"text":"Executes a closure on the collection’s contiguous storage.","type":"text"}],"sections":[],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RecursiveArray","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RecursiveArray\/MutableCollection-Implementations"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"mutating"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"withContiguousMutableStorageIfAvailable"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"R"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"body","kind":"internalParam"},{"text":": (","kind":"text"},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableBufferPointer","preciseIdentifier":"s:Sr","text":"UnsafeMutableBufferPointer"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","text":"Element"},{"kind":"text","text":">) "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"R","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"text":"R","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"name":"body","content":[{"inlineContent":[{"type":"text","text":"A closure that receives an in-out"},{"text":" ","type":"text"},{"type":"codeVoice","code":"UnsafeMutableBufferPointer"},{"type":"text","text":" to the collection’s contiguous storage."}],"type":"paragraph"}]}]},{"kind":"content","content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"inlineContent":[{"text":"The value returned from ","type":"text"},{"type":"codeVoice","code":"body"},{"type":"text","text":", unless the collection doesn’t"},{"text":" ","type":"text"},{"text":"support contiguous storage, in which case the method ignores ","type":"text"},{"code":"body","type":"codeVoice"},{"text":" and","type":"text"},{"type":"text","text":" "},{"text":"returns ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"}],"type":"paragraph"}]},{"kind":"content","content":[{"level":2,"anchor":"discussion","type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method calls "},{"code":"body(buffer)","type":"codeVoice"},{"type":"text","text":", where "},{"type":"codeVoice","code":"buffer"},{"text":" provides access to the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"contiguous mutable storage of the entire collection. If the contiguous"},{"type":"text","text":" "},{"text":"storage doesn’t exist, the collection creates it. If the collection","type":"text"},{"type":"text","text":" "},{"text":"doesn’t support an internal representation in the form of contiguous","type":"text"},{"type":"text","text":" "},{"text":"mutable storage, this method doesn’t call ","type":"text"},{"type":"codeVoice","code":"body"},{"text":" — it immediately","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"returns "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."}]},{"inlineContent":[{"text":"The optimizer can often eliminate bounds- and uniqueness-checking","type":"text"},{"text":" ","type":"text"},{"text":"within an algorithm. When that fails, however, invoking the same","type":"text"},{"type":"text","text":" "},{"text":"algorithm on the ","type":"text"},{"code":"buffer","type":"codeVoice"},{"type":"text","text":" argument may let you trade safety for speed."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Always perform any necessary cleanup in the closure, because the"},{"type":"text","text":" "},{"type":"text","text":"method makes no guarantees about the state of the collection if the"},{"text":" ","type":"text"},{"type":"text","text":"closure throws an error. Your changes to the collection may be absent"},{"type":"text","text":" "},{"type":"text","text":"from the collection after throwing the error, because the closure could"},{"type":"text","text":" "},{"text":"receive a temporary copy rather than direct access to the collection’s","type":"text"},{"type":"text","text":" "},{"text":"storage.","type":"text"}]},{"name":"Warning","style":"warning","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Your "},{"type":"codeVoice","code":"body"},{"text":" closure must not replace ","type":"text"},{"code":"buffer","type":"codeVoice"},{"type":"text","text":". This leads"},{"type":"text","text":" "},{"type":"text","text":"to a crash in all implementations of this method within the standard"},{"text":" ","type":"text"},{"text":"library.","type":"text"}]}]},{"inlineContent":[{"text":"Successive calls to this method may provide a different pointer on each","type":"text"},{"type":"text","text":" "},{"type":"text","text":"call. Don’t store "},{"type":"codeVoice","code":"buffer"},{"type":"text","text":" outside of this method."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A "},{"code":"Collection","type":"codeVoice"},{"type":"text","text":" that provides its own implementation of this method"},{"text":" ","type":"text"},{"text":"must provide contiguous storage to its elements in the same order","type":"text"},{"type":"text","text":" "},{"type":"text","text":"as they appear in the collection. This guarantees that it’s possible to"},{"type":"text","text":" "},{"type":"text","text":"generate contiguous mutable storage to any of its subsequences by slicing"},{"text":" ","type":"text"},{"type":"codeVoice","code":"buffer"},{"type":"text","text":" with a range formed from the distances to the subsequence’s"},{"type":"text","text":" "},{"code":"startIndex","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"endIndex"},{"type":"text","text":", respectively."}]}]}],"variants":[{"paths":["\/documentation\/compute\/recursivearray\/withcontiguousmutablestorageifavailable(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RecursiveArray\/withContiguousMutableStorageIfAvailable(_:)"},"schemaVersion":{"minor":3,"patch":0,"major":0},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/RecursiveArray":{"type":"topic","role":"symbol","url":"\/documentation\/compute\/recursivearray","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RecursiveArray","title":"RecursiveArray","abstract":[],"navigatorTitle":[{"text":"RecursiveArray","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"RecursiveArray"}],"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/RecursiveArray/MutableCollection-Implementations":{"abstract":[],"role":"collectionGroup","url":"\/documentation\/compute\/recursivearray\/mutablecollection-implementations","type":"topic","kind":"article","title":"MutableCollection Implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RecursiveArray\/MutableCollection-Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/RecursiveArray/withContiguousMutableStorageIfAvailable(_:)":{"title":"withContiguousMutableStorageIfAvailable(_:)","url":"\/documentation\/compute\/recursivearray\/withcontiguousmutablestorageifavailable(_:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RecursiveArray\/withContiguousMutableStorageIfAvailable(_:)","role":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"withContiguousMutableStorageIfAvailable","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"R"},{"text":">((","kind":"text"},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:Sr","kind":"typeIdentifier","text":"UnsafeMutableBufferPointer"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"text":">) ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"R"},{"text":") ","kind":"text"},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"text":"R","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"kind":"symbol","abstract":[{"text":"Executes a closure on the collection’s contiguous storage.","type":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeMutableBufferPointer":{"kind":"symbol","url":"\/documentation\/compute\/unsafemutablebufferpointer","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"UnsafeMutableBufferPointer","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"UnsafeMutableBufferPointer"}],"abstract":[{"type":"text","text":"A nonowning collection interface to a buffer of mutable"},{"text":" ","type":"text"},{"text":"elements stored contiguously in memory.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableBufferPointer","title":"UnsafeMutableBufferPointer","type":"topic","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence/Element":{"type":"topic","required":true,"abstract":[{"type":"text","text":"A type representing the sequence’s elements."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"symbol","url":"\/documentation\/compute\/sequence\/element","role":"symbol","title":"Element","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"identifier"}]}}}