{"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"mutating"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"replaceSubrange","kind":"identifier"},{"text":"<","kind":"text"},{"text":"C","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"subrange"},{"kind":"text","text":": "},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Range","text":"Range","kind":"typeIdentifier","preciseIdentifier":"s:Sn"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Compute14RecursiveArrayV5Valuea","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RecursiveArray\/Value-swift.typealias","text":"Value"},{"text":".","kind":"text"},{"preciseIdentifier":"s:Sa5Indexa","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Array\/Index","kind":"typeIdentifier","text":"Index"},{"text":">, ","kind":"text"},{"text":"with","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"newElements"},{"kind":"text","text":": "},{"text":"C","kind":"typeIdentifier","preciseIdentifier":"s:7Compute14RecursiveArrayV15replaceSubrange_4withySnySiG_qd__tSlRd__7Swallow6EitherOyxACyxGG7ElementRtd__lF1CL_qd__mfp"},{"text":") ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:Sl","kind":"typeIdentifier","text":"Collection","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection"},{"text":", ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":".","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","text":"Element","preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"text":"Either","preciseIdentifier":"s:7Swallow6EitherO","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Unit","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"RecursiveArray","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RecursiveArray","preciseIdentifier":"s:7Compute14RecursiveArrayV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Unit"},{"kind":"text","text":">>"}]}]},{"kind":"parameters","parameters":[{"name":"subrange","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The subrange of the collection to replace. The bounds of"},{"text":" ","type":"text"},{"text":"the range must be valid indices of the collection.","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"The new elements to add to the collection.","type":"text"}],"type":"paragraph"}],"name":"newElements"}]},{"content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method has the effect of removing the specified range of elements"},{"text":" ","type":"text"},{"type":"text","text":"from the collection and inserting the new elements at the same location."},{"type":"text","text":" "},{"type":"text","text":"The number of new elements need not match the number of elements being"},{"type":"text","text":" "},{"type":"text","text":"removed."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"In this example, three elements in the middle of an array of integers are"},{"type":"text","text":" "},{"text":"replaced by the five elements of a ","type":"text"},{"code":"Repeated<Int>","type":"codeVoice"},{"text":" instance.","type":"text"}]},{"type":"codeListing","code":[" var nums = [10, 20, 30, 40, 50]"," nums.replaceSubrange(1...3, with: repeatElement(1, count: 5))"," print(nums)"," \/\/ Prints \"[10, 1, 1, 1, 1, 1, 50]\""],"syntax":null},{"inlineContent":[{"type":"text","text":"If you pass a zero-length range as the "},{"code":"subrange","type":"codeVoice"},{"type":"text","text":" parameter, this method"},{"type":"text","text":" "},{"text":"inserts the elements of ","type":"text"},{"type":"codeVoice","code":"newElements"},{"type":"text","text":" at "},{"code":"subrange.startIndex","type":"codeVoice"},{"text":". Calling","type":"text"},{"text":" ","type":"text"},{"text":"the ","type":"text"},{"type":"codeVoice","code":"insert(contentsOf:at:)"},{"text":" method instead is preferred.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"Likewise, if you pass a zero-length collection as the ","type":"text"},{"type":"codeVoice","code":"newElements"},{"type":"text","text":" "},{"type":"text","text":"parameter, this method removes the elements in the given subrange"},{"type":"text","text":" "},{"type":"text","text":"without replacement. Calling the "},{"type":"codeVoice","code":"removeSubrange(_:)"},{"type":"text","text":" method instead is"},{"text":" ","type":"text"},{"type":"text","text":"preferred."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Calling this method may invalidate any existing indices for use with this"},{"text":" ","type":"text"},{"type":"text","text":"collection."}]},{"name":"Complexity","type":"aside","style":"note","content":[{"inlineContent":[{"text":"O(","type":"text"},{"type":"emphasis","inlineContent":[{"text":"n","type":"text"}]},{"text":" + ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"m"}]},{"type":"text","text":"), where "},{"inlineContent":[{"text":"n","type":"text"}],"type":"emphasis"},{"type":"text","text":" is length of this collection and"},{"text":" ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"m"}]},{"type":"text","text":" is the length of "},{"type":"codeVoice","code":"newElements"},{"type":"text","text":". If the call to this method simply"},{"text":" ","type":"text"},{"type":"text","text":"appends the contents of "},{"type":"codeVoice","code":"newElements"},{"type":"text","text":" to the collection, this method is"},{"type":"text","text":" "},{"text":"equivalent to ","type":"text"},{"code":"append(contentsOf:)","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}]}],"kind":"content"}],"kind":"symbol","abstract":[{"type":"text","text":"Replaces the specified subrange of elements with the given collection."}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RecursiveArray","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RecursiveArray\/RangeReplaceableCollection-Implementations"]]},"metadata":{"title":"replaceSubrange(_:with:)","externalID":"s:7Compute14RecursiveArrayV15replaceSubrange_4withySnySiG_qd__tSlRd__7Swallow6EitherOyxACyxGG7ElementRtd__lF","extendedModule":"Compute","roleHeading":"Instance Method","modules":[{"name":"Compute"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"replaceSubrange"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"C"},{"text":">(","kind":"text"},{"text":"Range","kind":"typeIdentifier","preciseIdentifier":"s:Sn"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:7Compute14RecursiveArrayV5Valuea","kind":"typeIdentifier","text":"Value"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:Sa5Indexa","text":"Index"},{"kind":"text","text":">, "},{"text":"with","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Compute14RecursiveArrayV15replaceSubrange_4withySnySiG_qd__tSlRd__7Swallow6EitherOyxACyxGG7ElementRtd__lF1CL_qd__mfp","text":"C"},{"text":")","kind":"text"}],"symbolKind":"method","role":"symbol"},"schemaVersion":{"minor":3,"major":0,"patch":0},"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RecursiveArray\/replaceSubrange(_:with:)-3b9p0","interfaceLanguage":"swift"},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/recursivearray\/replacesubrange(_:with:)-3b9p0"]}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence/Element":{"type":"topic","required":true,"abstract":[{"type":"text","text":"A type representing the sequenceâ€™s elements."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"symbol","url":"\/documentation\/compute\/sequence\/element","role":"symbol","title":"Element","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Range":{"kind":"symbol","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Range","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Range","url":"\/documentation\/compute\/range","abstract":[{"text":"A half-open interval from a lower bound up to, but not including, an upper","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"bound."}],"navigatorTitle":[{"text":"Range","kind":"identifier"}],"title":"Range"},"doc://com.swallow.documentation.Compute/documentation/Compute/Array/Index":{"role":"symbol","title":"Array.Index","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Array\/Index","url":"\/documentation\/compute\/array\/index","type":"topic","navigatorTitle":[{"text":"Index","kind":"identifier"}],"abstract":[{"text":"The index type for arrays, ","type":"text"},{"type":"codeVoice","code":"Int"},{"type":"text","text":"."}],"fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"text":"Index","kind":"identifier"}],"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/RecursiveArray":{"type":"topic","role":"symbol","url":"\/documentation\/compute\/recursivearray","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RecursiveArray","title":"RecursiveArray","abstract":[],"navigatorTitle":[{"text":"RecursiveArray","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"RecursiveArray"}],"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/RecursiveArray/replaceSubrange(_:with:)-3b9p0":{"title":"replaceSubrange(_:with:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RecursiveArray\/replaceSubrange(_:with:)-3b9p0","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"replaceSubrange","kind":"identifier"},{"kind":"text","text":"<"},{"text":"C","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Range","kind":"typeIdentifier","preciseIdentifier":"s:Sn"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Value","preciseIdentifier":"s:7Compute14RecursiveArrayV5Valuea"},{"text":".","kind":"text"},{"preciseIdentifier":"s:Sa5Indexa","text":"Index","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"with","kind":"externalParam"},{"kind":"text","text":": "},{"text":"C","kind":"typeIdentifier","preciseIdentifier":"s:7Compute14RecursiveArrayV15replaceSubrange_4withySnySiG_qd__tSlRd__7Swallow6EitherOyxACyxGG7ElementRtd__lF1CL_qd__mfp"},{"text":")","kind":"text"}],"type":"topic","url":"\/documentation\/compute\/recursivearray\/replacesubrange(_:with:)-3b9p0","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Replaces the specified subrange of elements with the given collection."}]},"doc://com.swallow.documentation.Compute/documentation/Compute/RecursiveArray/Value-swift.typealias":{"abstract":[],"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Value"}],"url":"\/documentation\/compute\/recursivearray\/value-swift.typealias","title":"RecursiveArray.Value","role":"symbol","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RecursiveArray\/Value-swift.typealias","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Value"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/RecursiveArray/RangeReplaceableCollection-Implementations":{"abstract":[],"kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RecursiveArray\/RangeReplaceableCollection-Implementations","title":"RangeReplaceableCollection Implementations","url":"\/documentation\/compute\/recursivearray\/rangereplaceablecollection-implementations","role":"collectionGroup","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/Collection":{"kind":"symbol","role":"symbol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Collection"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection","url":"\/documentation\/compute\/collection","abstract":[{"type":"text","text":"A sequence whose elements can be traversed multiple times,"},{"text":" ","type":"text"},{"text":"nondestructively, and accessed by an indexed subscript.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Collection"}],"title":"Collection"}}}