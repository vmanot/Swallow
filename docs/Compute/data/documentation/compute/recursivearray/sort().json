{"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"kind":"symbol","abstract":[{"type":"text","text":"Sorts the collection in place."}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RecursiveArray","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RecursiveArray\/MutableCollection-Implementations"]]},"variants":[{"paths":["\/documentation\/compute\/recursivearray\/sort()"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"sort","kind":"identifier"},{"text":"()","kind":"text"}],"roleHeading":"Instance Method","externalID":"s:SMsSkRzSL7ElementSTRpzrlE4sortyyF::SYNTHESIZED::s:7Compute14RecursiveArrayV","modules":[{"name":"Compute","relatedModules":["Swift"]}],"symbolKind":"method","title":"sort()","extendedModule":"Swift","conformance":{"constraints":[{"code":"Self","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"RandomAccessCollection"},{"type":"text","text":" and "},{"code":"Element","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Comparable"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"role":"symbol"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RecursiveArray\/sort()"},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"mutating"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"sort"},{"text":"()","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"inlineContent":[{"type":"text","text":"You can sort any mutable collection of elements that conform to the"},{"type":"text","text":" "},{"type":"codeVoice","code":"Comparable"},{"text":" protocol by calling this method. Elements are sorted in","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"ascending order."}],"type":"paragraph"},{"inlineContent":[{"text":"Here’s an example of sorting a list of students’ names. Strings in Swift","type":"text"},{"type":"text","text":" "},{"type":"text","text":"conform to the "},{"type":"codeVoice","code":"Comparable"},{"type":"text","text":" protocol, so the names are sorted in"},{"type":"text","text":" "},{"type":"text","text":"ascending order according to the less-than operator ("},{"type":"codeVoice","code":"<"},{"text":").","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":["var students = [\"Kofi\", \"Abena\", \"Peter\", \"Kweku\", \"Akosua\"]","students.sort()","print(students)","\/\/ Prints \"[\"Abena\", \"Akosua\", \"Kofi\", \"Kweku\", \"Peter\"]\""]},{"inlineContent":[{"type":"text","text":"To sort the elements of your collection in descending order, pass the"},{"type":"text","text":" "},{"text":"greater-than operator (","type":"text"},{"code":">","type":"codeVoice"},{"text":") to the ","type":"text"},{"code":"sort(by:)","type":"codeVoice"},{"type":"text","text":" method."}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":["students.sort(by: >)","print(students)","\/\/ Prints \"[\"Peter\", \"Kweku\", \"Kofi\", \"Akosua\", \"Abena\"]\""]},{"type":"paragraph","inlineContent":[{"text":"The sorting algorithm is guaranteed to be stable. A stable sort","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"preserves the relative order of elements that compare as equal."}]},{"name":"Complexity","type":"aside","style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"O("},{"type":"emphasis","inlineContent":[{"text":"n","type":"text"}]},{"type":"text","text":" log "},{"inlineContent":[{"type":"text","text":"n"}],"type":"emphasis"},{"type":"text","text":"), where "},{"type":"emphasis","inlineContent":[{"type":"text","text":"n"}]},{"text":" is the length of the collection.","type":"text"}]}]}],"kind":"content"}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/RecursiveArray":{"type":"topic","role":"symbol","url":"\/documentation\/compute\/recursivearray","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RecursiveArray","title":"RecursiveArray","abstract":[],"navigatorTitle":[{"text":"RecursiveArray","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"RecursiveArray"}],"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/RecursiveArray/MutableCollection-Implementations":{"abstract":[],"role":"collectionGroup","url":"\/documentation\/compute\/recursivearray\/mutablecollection-implementations","type":"topic","kind":"article","title":"MutableCollection Implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RecursiveArray\/MutableCollection-Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/RecursiveArray/sort()":{"title":"sort()","url":"\/documentation\/compute\/recursivearray\/sort()","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RecursiveArray\/sort()","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"sort","kind":"identifier"},{"kind":"text","text":"()"}],"conformance":{"constraints":[{"code":"Self","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"RandomAccessCollection"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Element"},{"text":" conforms to ","type":"text"},{"code":"Comparable","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"kind":"symbol","abstract":[{"text":"Sorts the collection in place.","type":"text"}]}}}