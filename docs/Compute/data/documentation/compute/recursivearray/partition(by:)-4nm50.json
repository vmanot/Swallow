{"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RecursiveArray","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RecursiveArray\/MutableCollection-Implementations"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RecursiveArray\/partition(by:)-4nm50","interfaceLanguage":"swift"},"abstract":[{"text":"Reorders the elements of the collection such that all the elements","type":"text"},{"text":" ","type":"text"},{"text":"that match the given predicate are after all the elements that don’t","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"match."}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"mutating","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"partition"},{"kind":"text","text":"("},{"text":"by","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"belongsInSecondPartition"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bool","preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"rethrows","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Index","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/Index","kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"belongsInSecondPartition","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A predicate used to partition"},{"type":"text","text":" "},{"type":"text","text":"the collection. All elements satisfying this predicate are ordered"},{"type":"text","text":" "},{"type":"text","text":"after all elements not satisfying it."}]}]}]},{"kind":"content","content":[{"level":2,"text":"Return Value","anchor":"return-value","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"The index of the first element in the reordered collection","type":"text"},{"type":"text","text":" "},{"text":"that matches ","type":"text"},{"code":"belongsInSecondPartition","type":"codeVoice"},{"text":". If no elements in the","type":"text"},{"type":"text","text":" "},{"text":"collection match ","type":"text"},{"code":"belongsInSecondPartition","type":"codeVoice"},{"text":", the returned index is","type":"text"},{"text":" ","type":"text"},{"text":"equal to the collection’s ","type":"text"},{"type":"codeVoice","code":"endIndex"},{"type":"text","text":"."}]}]},{"kind":"content","content":[{"anchor":"discussion","text":"Discussion","level":2,"type":"heading"},{"inlineContent":[{"text":"After partitioning a collection, there is a pivot index ","type":"text"},{"type":"codeVoice","code":"p"},{"text":" where","type":"text"},{"type":"text","text":" "},{"type":"text","text":"no element before "},{"code":"p","type":"codeVoice"},{"type":"text","text":" satisfies the "},{"code":"belongsInSecondPartition","type":"codeVoice"},{"text":" ","type":"text"},{"type":"text","text":"predicate and every element at or after "},{"code":"p","type":"codeVoice"},{"type":"text","text":" satisfies"},{"type":"text","text":" "},{"code":"belongsInSecondPartition","type":"codeVoice"},{"type":"text","text":". This operation isn’t guaranteed to be"},{"text":" ","type":"text"},{"type":"text","text":"stable, so the relative ordering of elements within the partitions might"},{"type":"text","text":" "},{"text":"change.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"In the following example, an array of numbers is partitioned by a","type":"text"},{"type":"text","text":" "},{"type":"text","text":"predicate that matches elements greater than 30."}],"type":"paragraph"},{"syntax":null,"code":["var numbers = [30, 40, 20, 30, 30, 60, 10]","let p = numbers.partition(by: { $0 > 30 })","\/\/ p == 5","\/\/ numbers == [30, 10, 20, 30, 30, 60, 40]"],"type":"codeListing"},{"inlineContent":[{"text":"The ","type":"text"},{"code":"numbers","type":"codeVoice"},{"type":"text","text":" array is now arranged in two partitions. The first"},{"type":"text","text":" "},{"type":"text","text":"partition, "},{"type":"codeVoice","code":"numbers[..<p]"},{"text":", is made up of the elements that","type":"text"},{"text":" ","type":"text"},{"text":"are not greater than 30. The second partition, ","type":"text"},{"code":"numbers[p...]","type":"codeVoice"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"text","text":"is made up of the elements that "},{"type":"emphasis","inlineContent":[{"type":"text","text":"are"}]},{"text":" greater than 30.","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":["let first = numbers[..<p]","\/\/ first == [30, 10, 20, 30, 30]","let second = numbers[p...]","\/\/ second == [60, 40]"],"syntax":null},{"type":"paragraph","inlineContent":[{"text":"Note that the order of elements in both partitions changed.","type":"text"},{"type":"text","text":" "},{"text":"That is, ","type":"text"},{"type":"codeVoice","code":"40"},{"type":"text","text":" appears before "},{"type":"codeVoice","code":"60"},{"text":" in the original collection,","type":"text"},{"type":"text","text":" "},{"text":"but, after calling ","type":"text"},{"code":"partition(by:)","type":"codeVoice"},{"type":"text","text":", "},{"code":"60","type":"codeVoice"},{"type":"text","text":" appears before "},{"type":"codeVoice","code":"40"},{"text":".","type":"text"}]},{"name":"Complexity","style":"note","content":[{"type":"paragraph","inlineContent":[{"text":"O(","type":"text"},{"inlineContent":[{"type":"text","text":"n"}],"type":"emphasis"},{"type":"text","text":"), where "},{"inlineContent":[{"text":"n","type":"text"}],"type":"emphasis"},{"type":"text","text":" is the length of the collection."}]}],"type":"aside"}]}],"variants":[{"paths":["\/documentation\/compute\/recursivearray\/partition(by:)-4nm50"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"roleHeading":"Instance Method","role":"symbol","modules":[{"name":"Compute","relatedModules":["Swift"]}],"symbolKind":"method","conformance":{"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"BidirectionalCollection","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"extendedModule":"Swift","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"partition"},{"kind":"text","text":"("},{"text":"by","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":") "},{"text":"rethrows","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:Sl5IndexQa","text":"Index","kind":"typeIdentifier"}],"title":"partition(by:)","externalID":"s:SMsSKRzrlE9partition2by5IndexSlQzSb7ElementSTQzKXE_tKF::SYNTHESIZED::s:7Compute14RecursiveArrayV"},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Bool":{"url":"\/documentation\/compute\/bool","role":"symbol","title":"Bool","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Bool","kind":"identifier"}],"abstract":[{"type":"text","text":"A value type whose instances are either "},{"type":"codeVoice","code":"true"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"false"},{"text":".","type":"text"}],"navigatorTitle":[{"text":"Bool","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bool","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/RecursiveArray":{"type":"topic","role":"symbol","url":"\/documentation\/compute\/recursivearray","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RecursiveArray","title":"RecursiveArray","abstract":[],"navigatorTitle":[{"text":"RecursiveArray","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"RecursiveArray"}],"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/RecursiveArray/partition(by:)-4nm50":{"title":"partition(by:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"partition"},{"kind":"text","text":"("},{"text":"by","kind":"externalParam"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":") "},{"text":"rethrows","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Index","kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RecursiveArray\/partition(by:)-4nm50","abstract":[{"type":"text","text":"Reorders the elements of the collection such that all the elements"},{"text":" ","type":"text"},{"type":"text","text":"that match the given predicate are after all the elements that don’t"},{"type":"text","text":" "},{"text":"match.","type":"text"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Self","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"BidirectionalCollection","type":"codeVoice"},{"type":"text","text":"."}]},"url":"\/documentation\/compute\/recursivearray\/partition(by:)-4nm50","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence/Element":{"type":"topic","required":true,"abstract":[{"type":"text","text":"A type representing the sequence’s elements."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"symbol","url":"\/documentation\/compute\/sequence\/element","role":"symbol","title":"Element","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/RecursiveArray/MutableCollection-Implementations":{"abstract":[],"role":"collectionGroup","url":"\/documentation\/compute\/recursivearray\/mutablecollection-implementations","type":"topic","kind":"article","title":"MutableCollection Implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RecursiveArray\/MutableCollection-Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/Collection/Index":{"url":"\/documentation\/compute\/collection\/index","required":true,"role":"symbol","title":"Index","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Index","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"Comparable","preciseIdentifier":"s:SL","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"A type that represents a position in the collection."}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/Index","kind":"symbol"}}}