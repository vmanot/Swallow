{"sections":[],"abstract":[{"text":"Reorders the elements of the collection such that all the elements","type":"text"},{"type":"text","text":" "},{"text":"that match the given predicate are after all the elements that don’t","type":"text"},{"type":"text","text":" "},{"text":"match.","type":"text"}],"metadata":{"roleHeading":"Instance Method","role":"symbol","modules":[{"name":"Compute","relatedModules":["Swift"]}],"extendedModule":"Swift","symbolKind":"method","externalID":"s:SMsE9partition2by5IndexQzSb7ElementQzKXE_tKF::SYNTHESIZED::s:7Compute14RecursiveArrayV","title":"partition(by:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"partition"},{"text":"(","kind":"text"},{"text":"by","kind":"externalParam"},{"kind":"text","text":": ("},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Index","preciseIdentifier":"s:Sl5IndexQa"}]},"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RecursiveArray\/partition(by:)-5hc6m","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"mutating"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"partition","kind":"identifier"},{"kind":"text","text":"("},{"text":"by","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"belongsInSecondPartition"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"Element","preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") "},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Index","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/Index","preciseIdentifier":"s:Sl5IndexQa"}],"platforms":["macOS"]}]},{"parameters":[{"name":"belongsInSecondPartition","content":[{"type":"paragraph","inlineContent":[{"text":"A predicate used to partition","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the collection. All elements satisfying this predicate are ordered"},{"text":" ","type":"text"},{"type":"text","text":"after all elements not satisfying it."}]}]}],"kind":"parameters"},{"kind":"content","content":[{"text":"Return Value","level":2,"type":"heading","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The index of the first element in the reordered collection"},{"text":" ","type":"text"},{"text":"that matches ","type":"text"},{"type":"codeVoice","code":"belongsInSecondPartition"},{"type":"text","text":". If no elements in the"},{"text":" ","type":"text"},{"text":"collection match ","type":"text"},{"type":"codeVoice","code":"belongsInSecondPartition"},{"text":", the returned index is","type":"text"},{"type":"text","text":" "},{"text":"equal to the collection’s ","type":"text"},{"type":"codeVoice","code":"endIndex"},{"text":".","type":"text"}]}]},{"content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"inlineContent":[{"type":"text","text":"After partitioning a collection, there is a pivot index "},{"type":"codeVoice","code":"p"},{"type":"text","text":" where"},{"type":"text","text":" "},{"text":"no element before ","type":"text"},{"type":"codeVoice","code":"p"},{"type":"text","text":" satisfies the "},{"code":"belongsInSecondPartition","type":"codeVoice"},{"type":"text","text":" "},{"text":"predicate and every element at or after ","type":"text"},{"type":"codeVoice","code":"p"},{"type":"text","text":" satisfies"},{"type":"text","text":" "},{"code":"belongsInSecondPartition","type":"codeVoice"},{"type":"text","text":". This operation isn’t guaranteed to be"},{"text":" ","type":"text"},{"type":"text","text":"stable, so the relative ordering of elements within the partitions might"},{"text":" ","type":"text"},{"type":"text","text":"change."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"In the following example, an array of numbers is partitioned by a"},{"type":"text","text":" "},{"text":"predicate that matches elements greater than 30.","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":["var numbers = [30, 40, 20, 30, 30, 60, 10]","let p = numbers.partition(by: { $0 > 30 })","\/\/ p == 5","\/\/ numbers == [30, 10, 20, 30, 30, 60, 40]"]},{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"type":"codeVoice","code":"numbers"},{"type":"text","text":" array is now arranged in two partitions. The first"},{"text":" ","type":"text"},{"text":"partition, ","type":"text"},{"type":"codeVoice","code":"numbers[..<p]"},{"type":"text","text":", is made up of the elements that"},{"text":" ","type":"text"},{"text":"are not greater than 30. The second partition, ","type":"text"},{"code":"numbers[p...]","type":"codeVoice"},{"type":"text","text":","},{"text":" ","type":"text"},{"type":"text","text":"is made up of the elements that "},{"inlineContent":[{"type":"text","text":"are"}],"type":"emphasis"},{"text":" greater than 30.","type":"text"}]},{"code":["let first = numbers[..<p]","\/\/ first == [30, 10, 20, 30, 30]","let second = numbers[p...]","\/\/ second == [60, 40]"],"type":"codeListing","syntax":null},{"type":"paragraph","inlineContent":[{"type":"text","text":"Note that the order of elements in both partitions changed."},{"text":" ","type":"text"},{"type":"text","text":"That is, "},{"type":"codeVoice","code":"40"},{"type":"text","text":" appears before "},{"type":"codeVoice","code":"60"},{"type":"text","text":" in the original collection,"},{"type":"text","text":" "},{"type":"text","text":"but, after calling "},{"code":"partition(by:)","type":"codeVoice"},{"text":", ","type":"text"},{"code":"60","type":"codeVoice"},{"text":" appears before ","type":"text"},{"type":"codeVoice","code":"40"},{"text":".","type":"text"}]},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"text":"O(","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"n"}]},{"type":"text","text":"), where "},{"inlineContent":[{"type":"text","text":"n"}],"type":"emphasis"},{"text":" is the length of the collection.","type":"text"}]}],"type":"aside","name":"Complexity"}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RecursiveArray","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RecursiveArray\/MutableCollection-Implementations"]]},"kind":"symbol","schemaVersion":{"minor":3,"major":0,"patch":0},"variants":[{"paths":["\/documentation\/compute\/recursivearray\/partition(by:)-5hc6m"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/RecursiveArray/partition(by:)-5hc6m":{"url":"\/documentation\/compute\/recursivearray\/partition(by:)-5hc6m","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"partition"},{"kind":"text","text":"("},{"kind":"externalParam","text":"by"},{"kind":"text","text":": ("},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:ST7ElementQa","text":"Element","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") ","kind":"text"},{"kind":"keyword","text":"rethrows"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Index","kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa"}],"title":"partition(by:)","abstract":[{"text":"Reorders the elements of the collection such that all the elements","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"that match the given predicate are after all the elements that don’t"},{"text":" ","type":"text"},{"text":"match.","type":"text"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RecursiveArray\/partition(by:)-5hc6m","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Collection/Index":{"url":"\/documentation\/compute\/collection\/index","required":true,"role":"symbol","title":"Index","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Index","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"Comparable","preciseIdentifier":"s:SL","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"A type that represents a position in the collection."}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/Index","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Bool":{"url":"\/documentation\/compute\/bool","role":"symbol","title":"Bool","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Bool","kind":"identifier"}],"abstract":[{"type":"text","text":"A value type whose instances are either "},{"type":"codeVoice","code":"true"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"false"},{"text":".","type":"text"}],"navigatorTitle":[{"text":"Bool","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bool","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/RecursiveArray":{"type":"topic","role":"symbol","url":"\/documentation\/compute\/recursivearray","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RecursiveArray","title":"RecursiveArray","abstract":[],"navigatorTitle":[{"text":"RecursiveArray","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"RecursiveArray"}],"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence/Element":{"type":"topic","required":true,"abstract":[{"type":"text","text":"A type representing the sequence’s elements."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"symbol","url":"\/documentation\/compute\/sequence\/element","role":"symbol","title":"Element","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/RecursiveArray/MutableCollection-Implementations":{"abstract":[],"role":"collectionGroup","url":"\/documentation\/compute\/recursivearray\/mutablecollection-implementations","type":"topic","kind":"article","title":"MutableCollection Implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RecursiveArray\/MutableCollection-Implementations"}}}