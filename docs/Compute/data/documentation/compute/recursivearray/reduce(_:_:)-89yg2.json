{"abstract":[{"text":"Returns the result of combining the elements of the sequence using the","type":"text"},{"text":" ","type":"text"},{"text":"given closure.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RecursiveArray","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RecursiveArray\/Sequence-Implementations"]]},"metadata":{"title":"reduce(_:_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"reduce","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Result"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":", ("},{"text":"Result","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Result"}],"role":"symbol","extendedModule":"Swift","externalID":"s:STsE6reduceyqd__qd___qd__qd___7ElementQztKXEtKlF::SYNTHESIZED::s:7Compute14RecursiveArrayV","modules":[{"name":"Compute","relatedModules":["Swift"]}],"symbolKind":"method","roleHeading":"Instance Method"},"schemaVersion":{"patch":0,"major":0,"minor":3},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"reduce","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Result","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"initialResult","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"nextPartialResult"},{"kind":"text","text":": ("},{"text":"Result","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":") "},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Result"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The value to use as the initial accumulating value."},{"text":" ","type":"text"},{"code":"initialResult","type":"codeVoice"},{"text":" is passed to ","type":"text"},{"code":"nextPartialResult","type":"codeVoice"},{"type":"text","text":" the first time the"},{"text":" ","type":"text"},{"type":"text","text":"closure is executed."}]}],"name":"initialResult"},{"name":"nextPartialResult","content":[{"type":"paragraph","inlineContent":[{"text":"A closure that combines an accumulating value and","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"an element of the sequence into a new accumulating value, to be used"},{"type":"text","text":" "},{"text":"in the next call of the ","type":"text"},{"type":"codeVoice","code":"nextPartialResult"},{"text":" closure or returned to","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the caller."}]}]}]},{"kind":"content","content":[{"text":"Return Value","type":"heading","level":2,"anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The final accumulated value. If the sequence has no elements,"},{"type":"text","text":" "},{"text":"the result is ","type":"text"},{"type":"codeVoice","code":"initialResult"},{"type":"text","text":"."}]}]},{"kind":"content","content":[{"type":"heading","text":"Discussion","anchor":"discussion","level":2},{"inlineContent":[{"type":"text","text":"Use the "},{"type":"codeVoice","code":"reduce(_:_:)"},{"type":"text","text":" method to produce a single value from the elements"},{"type":"text","text":" "},{"type":"text","text":"of an entire sequence. For example, you can use this method on an array"},{"text":" ","type":"text"},{"text":"of numbers to find their sum or product.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"nextPartialResult"},{"type":"text","text":" closure is called sequentially with an"},{"type":"text","text":" "},{"type":"text","text":"accumulating value initialized to "},{"code":"initialResult","type":"codeVoice"},{"type":"text","text":" and each element of"},{"type":"text","text":" "},{"text":"the sequence. This example shows how to find the sum of an array of","type":"text"},{"type":"text","text":" "},{"type":"text","text":"numbers."}]},{"code":["let numbers = [1, 2, 3, 4]","let numberSum = numbers.reduce(0, { x, y in","    x + y","})","\/\/ numberSum == 10"],"type":"codeListing","syntax":null},{"inlineContent":[{"text":"When ","type":"text"},{"code":"numbers.reduce(_:_:)","type":"codeVoice"},{"text":" is called, the following steps occur:","type":"text"}],"type":"paragraph"},{"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"nextPartialResult"},{"text":" closure is called with ","type":"text"},{"type":"codeVoice","code":"initialResult"},{"text":"—","type":"text"},{"code":"0","type":"codeVoice"},{"text":" ","type":"text"},{"type":"text","text":"in this case—and the first element of "},{"code":"numbers","type":"codeVoice"},{"text":", returning the sum:","type":"text"},{"text":" ","type":"text"},{"code":"1","type":"codeVoice"},{"text":".","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"The closure is called again repeatedly with the previous call’s return","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"value and each element of the sequence."}]}]},{"content":[{"inlineContent":[{"text":"When the sequence is exhausted, the last value returned from the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"closure is returned to the caller."}],"type":"paragraph"}]}]},{"inlineContent":[{"type":"text","text":"If the sequence has no elements, "},{"type":"codeVoice","code":"nextPartialResult"},{"text":" is never executed","type":"text"},{"type":"text","text":" "},{"type":"text","text":"and "},{"code":"initialResult","type":"codeVoice"},{"text":" is the result of the call to ","type":"text"},{"type":"codeVoice","code":"reduce(_:_:)"},{"type":"text","text":"."}],"type":"paragraph"},{"name":"Complexity","content":[{"type":"paragraph","inlineContent":[{"text":"O(","type":"text"},{"inlineContent":[{"type":"text","text":"n"}],"type":"emphasis"},{"text":"), where ","type":"text"},{"inlineContent":[{"text":"n","type":"text"}],"type":"emphasis"},{"text":" is the length of the sequence.","type":"text"}]}],"type":"aside","style":"note"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/recursivearray\/reduce(_:_:)-89yg2"]}],"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RecursiveArray\/reduce(_:_:)-89yg2"},"kind":"symbol","references":{"doc://com.swallow.documentation.Compute/documentation/Compute/RecursiveArray/Sequence-Implementations":{"abstract":[],"url":"\/documentation\/compute\/recursivearray\/sequence-implementations","title":"Sequence Implementations","role":"collectionGroup","kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RecursiveArray\/Sequence-Implementations","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/RecursiveArray/reduce(_:_:)-89yg2":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RecursiveArray\/reduce(_:_:)-89yg2","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"reduce","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Result"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"Result"},{"text":", (","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"text":" -> ","kind":"text"},{"text":"Result","kind":"typeIdentifier"}],"type":"topic","abstract":[{"text":"Returns the result of combining the elements of the sequence using the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"given closure."}],"role":"symbol","title":"reduce(_:_:)","url":"\/documentation\/compute\/recursivearray\/reduce(_:_:)-89yg2","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/RecursiveArray":{"type":"topic","role":"symbol","url":"\/documentation\/compute\/recursivearray","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RecursiveArray","title":"RecursiveArray","abstract":[],"navigatorTitle":[{"text":"RecursiveArray","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"RecursiveArray"}],"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence/Element":{"type":"topic","required":true,"abstract":[{"type":"text","text":"A type representing the sequence’s elements."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"symbol","url":"\/documentation\/compute\/sequence\/element","role":"symbol","title":"Element","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"}}}