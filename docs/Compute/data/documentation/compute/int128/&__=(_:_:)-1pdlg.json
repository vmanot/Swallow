{"kind":"symbol","metadata":{"externalID":"s:s17FixedWidthIntegerPsE4alleoiyyxz_qd__tSzRd__lFZ::SYNTHESIZED::s:s6Int128V","role":"symbol","symbolKind":"op","title":"&<<=(_:_:)","extendedModule":"Swift","modules":[{"relatedModules":["Swift"],"name":"Compute"}],"roleHeading":"Operator","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"&<<=","kind":"identifier"},{"kind":"text","text":" "},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Other"},{"kind":"text","text":">("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Other"},{"kind":"text","text":")"}]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"&<<="},{"text":" ","kind":"text"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Other"},{"text":">(","kind":"text"},{"kind":"internalParam","text":"lhs"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"text":"rhs","kind":"internalParam"},{"kind":"text","text":": "},{"text":"Other","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Other"},{"kind":"text","text":" : "},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryInteger","kind":"typeIdentifier","text":"BinaryInteger","preciseIdentifier":"s:Sz"}],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"name":"lhs","content":[{"inlineContent":[{"text":"The value to shift.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"The number of bits to shift ","type":"text"},{"code":"lhs","type":"codeVoice"},{"text":" to the left. If ","type":"text"},{"type":"codeVoice","code":"rhs"},{"type":"text","text":" is"},{"type":"text","text":" "},{"type":"text","text":"outside the range "},{"code":"0..<lhs.bitWidth","type":"codeVoice"},{"text":", it is masked to produce a","type":"text"},{"type":"text","text":" "},{"text":"value within that range.","type":"text"}],"type":"paragraph"}],"name":"rhs"}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"text":"Discussion","type":"heading"},{"inlineContent":[{"type":"text","text":"The "},{"code":"&<<=","type":"codeVoice"},{"type":"text","text":" operator performs a "},{"type":"emphasis","inlineContent":[{"type":"text","text":"masking shift"}]},{"type":"text","text":", where the value used as"},{"type":"text","text":" "},{"type":"codeVoice","code":"rhs"},{"type":"text","text":" is masked to produce a value in the range "},{"type":"codeVoice","code":"0..<lhs.bitWidth"},{"type":"text","text":". The"},{"text":" ","type":"text"},{"type":"text","text":"shift is performed using this masked value."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"The following example defines ","type":"text"},{"code":"x","type":"codeVoice"},{"type":"text","text":" as an instance of "},{"type":"codeVoice","code":"UInt8"},{"type":"text","text":", an 8-bit,"},{"type":"text","text":" "},{"type":"text","text":"unsigned integer type. If you use "},{"code":"2","type":"codeVoice"},{"type":"text","text":" as the right-hand-side value in an"},{"type":"text","text":" "},{"text":"operation on ","type":"text"},{"code":"x","type":"codeVoice"},{"type":"text","text":", the shift amount requires no masking."}]},{"syntax":null,"code":["var x: UInt8 = 30                 \/\/ 0b00011110","x &<<= 2","\/\/ x == 120                       \/\/ 0b01111000"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"However, if you pass "},{"code":"19","type":"codeVoice"},{"text":" as ","type":"text"},{"code":"rhs","type":"codeVoice"},{"text":", the method first bitmasks ","type":"text"},{"code":"rhs","type":"codeVoice"},{"text":" to","type":"text"},{"text":" ","type":"text"},{"code":"3","type":"codeVoice"},{"type":"text","text":", and then uses that masked value as the number of bits to shift "},{"code":"lhs","type":"codeVoice"},{"text":".","type":"text"}]},{"code":["var y: UInt8 = 30                 \/\/ 0b00011110","y &<<= 19","\/\/ y == 240                       \/\/ 0b11110000"],"type":"codeListing","syntax":null}]}],"variants":[{"paths":["\/documentation\/compute\/int128\/&__=(_:_:)-1pdlg"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"Returns the result of shifting a value’s binary representation the"},{"type":"text","text":" "},{"type":"text","text":"specified number of digits to the left, masking the shift amount to the"},{"text":" ","type":"text"},{"type":"text","text":"type’s bit width, and stores the result in the left-hand-side variable."}],"sections":[],"schemaVersion":{"minor":3,"major":0,"patch":0},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int128","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int128\/FixedWidthInteger-Implementations"]]},"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int128\/&__=(_:_:)-1pdlg","interfaceLanguage":"swift"},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Int128/&__=(_:_:)-1pdlg":{"kind":"symbol","role":"symbol","type":"topic","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"&<<=","kind":"identifier"},{"text":" ","kind":"text"},{"kind":"text","text":"<"},{"text":"Other","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Other","kind":"typeIdentifier"},{"text":")","kind":"text"}],"abstract":[{"type":"text","text":"Returns the result of shifting a value’s binary representation the"},{"type":"text","text":" "},{"text":"specified number of digits to the left, masking the shift amount to the","type":"text"},{"text":" ","type":"text"},{"text":"type’s bit width, and stores the result in the left-hand-side variable.","type":"text"}],"url":"\/documentation\/compute\/int128\/&__=(_:_:)-1pdlg","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int128\/&__=(_:_:)-1pdlg","title":"&<<=(_:_:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int128":{"url":"\/documentation\/compute\/int128","abstract":[{"type":"text","text":"A 128-bit signed integer type."}],"title":"Int128","role":"symbol","navigatorTitle":[{"text":"Int128","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int128","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Int128"}],"kind":"symbol","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int128/FixedWidthInteger-Implementations":{"kind":"article","role":"collectionGroup","title":"FixedWidthInteger Implementations","type":"topic","url":"\/documentation\/compute\/int128\/fixedwidthinteger-implementations","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int128\/FixedWidthInteger-Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/BinaryInteger":{"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"BinaryInteger"}],"navigatorTitle":[{"kind":"identifier","text":"BinaryInteger"}],"url":"\/documentation\/compute\/binaryinteger","type":"topic","abstract":[{"type":"text","text":"An integer type with a binary representation."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryInteger","title":"BinaryInteger","kind":"symbol","role":"symbol"}}}