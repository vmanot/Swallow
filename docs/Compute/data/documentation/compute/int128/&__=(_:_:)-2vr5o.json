{"abstract":[{"text":"Returns the result of shifting a value’s binary representation the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"specified number of digits to the left, masking the shift amount to the"},{"text":" ","type":"text"},{"type":"text","text":"type’s bit width, and stores the result in the left-hand-side variable."}],"sections":[],"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int128\/&__=(_:_:)-2vr5o","interfaceLanguage":"swift"},"metadata":{"externalID":"s:s6Int128V4alleoiyyABz_ABtFZ","symbolKind":"op","platforms":[{"introducedAt":"18.0","unavailable":false,"beta":false,"deprecated":false,"name":"iOS"},{"deprecated":false,"name":"macOS","beta":false,"introducedAt":"15.0","unavailable":false},{"unavailable":false,"deprecated":false,"beta":false,"introducedAt":"18.0","name":"tvOS"},{"name":"visionOS","beta":false,"unavailable":false,"introducedAt":"2.0","deprecated":false},{"unavailable":false,"deprecated":false,"introducedAt":"11.0","beta":false,"name":"watchOS"}],"extendedModule":"Swift","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"&<<="},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"text":"Int128","kind":"typeIdentifier","preciseIdentifier":"s:s6Int128V"},{"kind":"text","text":", "},{"text":"Int128","kind":"typeIdentifier","preciseIdentifier":"s:s6Int128V"},{"text":")","kind":"text"}],"roleHeading":"Operator","modules":[{"relatedModules":["Swift"],"name":"Compute"}],"title":"&<<=(_:_:)"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/int128\/&__=(_:_:)-2vr5o"]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"&<<=","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"internalParam","text":"a"},{"kind":"text","text":": "},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int128","preciseIdentifier":"s:s6Int128V","text":"Int128","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"b","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Int128","preciseIdentifier":"s:s6Int128V","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int128","kind":"typeIdentifier"},{"kind":"text","text":")"}]}]},{"content":[{"level":2,"text":"Discussion","anchor":"discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"code":"&<<=","type":"codeVoice"},{"type":"text","text":" operator performs a "},{"type":"emphasis","inlineContent":[{"text":"masking shift","type":"text"}]},{"type":"text","text":", where the value used as"},{"type":"text","text":" "},{"code":"rhs","type":"codeVoice"},{"text":" is masked to produce a value in the range ","type":"text"},{"code":"0..<lhs.bitWidth","type":"codeVoice"},{"type":"text","text":". The"},{"type":"text","text":" "},{"type":"text","text":"shift is performed using this masked value."}]},{"type":"paragraph","inlineContent":[{"text":"The following example defines ","type":"text"},{"type":"codeVoice","code":"x"},{"text":" as an instance of ","type":"text"},{"code":"UInt8","type":"codeVoice"},{"type":"text","text":", an 8-bit,"},{"text":" ","type":"text"},{"type":"text","text":"unsigned integer type. If you use "},{"type":"codeVoice","code":"2"},{"text":" as the right-hand-side value in an","type":"text"},{"type":"text","text":" "},{"type":"text","text":"operation on "},{"type":"codeVoice","code":"x"},{"type":"text","text":", the shift amount requires no masking."}]},{"code":["var x: UInt8 = 30                 \/\/ 0b00011110","x &<<= 2","\/\/ x == 120                       \/\/ 0b01111000"],"type":"codeListing","syntax":null},{"type":"paragraph","inlineContent":[{"type":"text","text":"However, if you pass "},{"code":"19","type":"codeVoice"},{"type":"text","text":" as "},{"type":"codeVoice","code":"rhs"},{"text":", the method first bitmasks ","type":"text"},{"type":"codeVoice","code":"rhs"},{"type":"text","text":" to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"3"},{"text":", and then uses that masked value as the number of bits to shift ","type":"text"},{"code":"lhs","type":"codeVoice"},{"type":"text","text":"."}]},{"syntax":null,"code":["var y: UInt8 = 30                 \/\/ 0b00011110","y &<<= 19","\/\/ y == 240                       \/\/ 0b11110000"],"type":"codeListing"}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int128","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int128\/FixedWidthInteger-Implementations"]]},"kind":"symbol","references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Int128/&__=(_:_:)-2vr5o":{"title":"&<<=(_:_:)","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"&<<=","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"text":"Int128","kind":"typeIdentifier","preciseIdentifier":"s:s6Int128V"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Int128","preciseIdentifier":"s:s6Int128V"},{"text":")","kind":"text"}],"abstract":[{"type":"text","text":"Returns the result of shifting a value’s binary representation the"},{"type":"text","text":" "},{"type":"text","text":"specified number of digits to the left, masking the shift amount to the"},{"type":"text","text":" "},{"type":"text","text":"type’s bit width, and stores the result in the left-hand-side variable."}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int128\/&__=(_:_:)-2vr5o","url":"\/documentation\/compute\/int128\/&__=(_:_:)-2vr5o"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int128/FixedWidthInteger-Implementations":{"kind":"article","role":"collectionGroup","title":"FixedWidthInteger Implementations","type":"topic","url":"\/documentation\/compute\/int128\/fixedwidthinteger-implementations","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int128\/FixedWidthInteger-Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int128":{"url":"\/documentation\/compute\/int128","abstract":[{"type":"text","text":"A 128-bit signed integer type."}],"title":"Int128","role":"symbol","navigatorTitle":[{"text":"Int128","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int128","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Int128"}],"kind":"symbol","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"}}}