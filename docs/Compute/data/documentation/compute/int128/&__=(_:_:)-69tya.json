{"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int128\/&__=(_:_:)-69tya","interfaceLanguage":"swift"},"sections":[],"variants":[{"paths":["\/documentation\/compute\/int128\/&__=(_:_:)-69tya"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"modules":[{"name":"Compute","relatedModules":["Swift"]}],"symbolKind":"op","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"&>>=","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"preciseIdentifier":"s:s6Int128V","kind":"typeIdentifier","text":"Int128"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:s6Int128V","kind":"typeIdentifier","text":"Int128"},{"text":")","kind":"text"}],"title":"&>>=(_:_:)","roleHeading":"Operator","extendedModule":"Swift","role":"symbol","platforms":[{"beta":false,"introducedAt":"18.0","name":"iOS","deprecated":false,"unavailable":false},{"introducedAt":"15.0","unavailable":false,"deprecated":false,"name":"macOS","beta":false},{"name":"tvOS","unavailable":false,"introducedAt":"18.0","deprecated":false,"beta":false},{"unavailable":false,"introducedAt":"2.0","beta":false,"deprecated":false,"name":"visionOS"},{"name":"watchOS","unavailable":false,"beta":false,"introducedAt":"11.0","deprecated":false}],"externalID":"s:s6Int128V4aggeoiyyABz_ABtFZ"},"kind":"symbol","abstract":[{"text":"Calculates the result of shifting a value’s binary representation the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"specified number of digits to the right, masking the shift amount to the"},{"text":" ","type":"text"},{"text":"type’s bit width, and stores the result in the left-hand-side variable.","type":"text"}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"&>>=","kind":"identifier"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"text":"a","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int128","text":"Int128","preciseIdentifier":"s:s6Int128V","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"b","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Int128","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int128","preciseIdentifier":"s:s6Int128V","kind":"typeIdentifier"},{"text":")","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"code":"&>>=","type":"codeVoice"},{"type":"text","text":" operator performs a "},{"type":"emphasis","inlineContent":[{"type":"text","text":"masking shift"}]},{"text":", where the value passed as","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"rhs"},{"text":" is masked to produce a value in the range ","type":"text"},{"code":"0..<lhs.bitWidth","type":"codeVoice"},{"type":"text","text":". The"},{"text":" ","type":"text"},{"type":"text","text":"shift is performed using this masked value."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The following example defines "},{"type":"codeVoice","code":"x"},{"type":"text","text":" as an instance of "},{"type":"codeVoice","code":"UInt8"},{"text":", an 8-bit,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"unsigned integer type. If you use "},{"type":"codeVoice","code":"2"},{"text":" as the right-hand-side value in an","type":"text"},{"text":" ","type":"text"},{"text":"operation on ","type":"text"},{"code":"x","type":"codeVoice"},{"type":"text","text":", the shift amount requires no masking."}]},{"type":"codeListing","syntax":null,"code":["var x: UInt8 = 30                 \/\/ 0b00011110","x &>>= 2","\/\/ x == 7                         \/\/ 0b00000111"]},{"inlineContent":[{"text":"However, if you use ","type":"text"},{"type":"codeVoice","code":"19"},{"type":"text","text":" as "},{"code":"rhs","type":"codeVoice"},{"type":"text","text":", the operation first bitmasks "},{"code":"rhs","type":"codeVoice"},{"text":" to","type":"text"},{"text":" ","type":"text"},{"code":"3","type":"codeVoice"},{"text":", and then uses that masked value as the number of bits to shift ","type":"text"},{"code":"lhs","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"},{"code":["var y: UInt8 = 30                 \/\/ 0b00011110","y &>>= 19","\/\/ y == 3                         \/\/ 0b00000011"],"syntax":null,"type":"codeListing"}]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int128","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int128\/FixedWidthInteger-Implementations"]]},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Int128":{"url":"\/documentation\/compute\/int128","abstract":[{"type":"text","text":"A 128-bit signed integer type."}],"title":"Int128","role":"symbol","navigatorTitle":[{"text":"Int128","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int128","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Int128"}],"kind":"symbol","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int128/&__=(_:_:)-69tya":{"abstract":[{"type":"text","text":"Calculates the result of shifting a value’s binary representation the"},{"text":" ","type":"text"},{"type":"text","text":"specified number of digits to the right, masking the shift amount to the"},{"text":" ","type":"text"},{"text":"type’s bit width, and stores the result in the left-hand-side variable.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int128\/&__=(_:_:)-69tya","type":"topic","title":"&>>=(_:_:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"&>>=","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:s6Int128V","text":"Int128","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Int128","preciseIdentifier":"s:s6Int128V"},{"text":")","kind":"text"}],"url":"\/documentation\/compute\/int128\/&__=(_:_:)-69tya","role":"symbol","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int128/FixedWidthInteger-Implementations":{"kind":"article","role":"collectionGroup","title":"FixedWidthInteger Implementations","type":"topic","url":"\/documentation\/compute\/int128\/fixedwidthinteger-implementations","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int128\/FixedWidthInteger-Implementations"}}}