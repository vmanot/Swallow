{"kind":"symbol","metadata":{"modules":[{"name":"Compute","relatedModules":["Swift"]}],"title":">>(_:_:)","symbolKind":"op","externalID":"s:SzsE2ggoiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:s6Int128V","extendedModule":"Swift","roleHeading":"Operator","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":">>","kind":"identifier"},{"text":" ","kind":"text"},{"text":"<","kind":"text"},{"text":"RHS","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"RHS"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":">>","kind":"identifier"},{"text":" ","kind":"text"},{"text":"<","kind":"text"},{"text":"RHS","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"lhs","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"internalParam","text":"rhs"},{"text":": ","kind":"text"},{"text":"RHS","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":" ","kind":"text"},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"RHS"},{"kind":"text","text":" : "},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryInteger","kind":"typeIdentifier","text":"BinaryInteger","preciseIdentifier":"s:Sz"}],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"name":"lhs","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The value to shift."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"The number of bits to shift "},{"type":"codeVoice","code":"lhs"},{"text":" to the right.","type":"text"}],"type":"paragraph"}],"name":"rhs"}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"text":"Discussion","type":"heading"},{"inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":">>"},{"text":" operator performs a ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"smart shift","type":"text"}]},{"type":"text","text":", which defines a result for a"},{"text":" ","type":"text"},{"text":"shift of any value.","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Using a negative value for ","type":"text"},{"code":"rhs","type":"codeVoice"},{"type":"text","text":" performs a left shift using"},{"type":"text","text":" "},{"type":"codeVoice","code":"abs(rhs)"},{"text":".","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Using a value for "},{"code":"rhs","type":"codeVoice"},{"type":"text","text":" that is greater than or equal to the bit width"},{"type":"text","text":" "},{"type":"text","text":"of "},{"type":"codeVoice","code":"lhs"},{"type":"text","text":" is an "},{"type":"emphasis","inlineContent":[{"type":"text","text":"overshift"}]},{"type":"text","text":". An overshift results in "},{"type":"codeVoice","code":"-1"},{"type":"text","text":" for a"},{"type":"text","text":" "},{"type":"text","text":"negative value of "},{"code":"lhs","type":"codeVoice"},{"type":"text","text":" or "},{"type":"codeVoice","code":"0"},{"text":" for a nonnegative value.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Using any other value for ","type":"text"},{"code":"rhs","type":"codeVoice"},{"type":"text","text":" performs a right shift on "},{"type":"codeVoice","code":"lhs"},{"text":" by that","type":"text"},{"text":" ","type":"text"},{"text":"amount.","type":"text"}]}]}]},{"inlineContent":[{"type":"text","text":"The following example defines "},{"type":"codeVoice","code":"x"},{"text":" as an instance of ","type":"text"},{"type":"codeVoice","code":"UInt8"},{"type":"text","text":", an 8-bit,"},{"type":"text","text":" "},{"type":"text","text":"unsigned integer type. If you use "},{"code":"2","type":"codeVoice"},{"text":" as the right-hand-side value in an","type":"text"},{"type":"text","text":" "},{"type":"text","text":"operation on "},{"code":"x","type":"codeVoice"},{"type":"text","text":", the value is shifted right by two bits."}],"type":"paragraph"},{"syntax":null,"code":["let x: UInt8 = 30                 \/\/ 0b00011110","let y = x >> 2","\/\/ y == 7                         \/\/ 0b00000111"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"If you use ","type":"text"},{"type":"codeVoice","code":"11"},{"text":" as ","type":"text"},{"type":"codeVoice","code":"rhs"},{"text":", ","type":"text"},{"code":"x","type":"codeVoice"},{"text":" is overshifted such that all of its bits","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"are set to zero."}]},{"code":["let z = x >> 11","\/\/ z == 0                         \/\/ 0b00000000"],"syntax":null,"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Using a negative value as "},{"code":"rhs","type":"codeVoice"},{"text":" is the same as performing a left shift","type":"text"},{"text":" ","type":"text"},{"text":"using ","type":"text"},{"type":"codeVoice","code":"abs(rhs)"},{"text":".","type":"text"}]},{"type":"codeListing","syntax":null,"code":["let a = x >> -3","\/\/ a == 240                       \/\/ 0b11110000","let b = x << 3","\/\/ b == 240                       \/\/ 0b11110000"]},{"type":"paragraph","inlineContent":[{"text":"Right shift operations on negative values “fill in” the high bits with","type":"text"},{"type":"text","text":" "},{"type":"text","text":"ones instead of zeros."}]},{"type":"codeListing","code":["let q: Int8 = -30                 \/\/ 0b11100010","let r = q >> 2","\/\/ r == -8                        \/\/ 0b11111000","","let s = q >> 11","\/\/ s == -1                        \/\/ 0b11111111"],"syntax":null}]}],"variants":[{"paths":["\/documentation\/compute\/int128\/__(_:_:)-80gwd"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"text":"Returns the result of shifting a value’s binary representation the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"specified number of digits to the right."}],"sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int128","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int128\/BinaryInteger-Implementations"]]},"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int128\/__(_:_:)-80gwd","interfaceLanguage":"swift"},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Int128/BinaryInteger-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int128\/BinaryInteger-Implementations","kind":"article","role":"collectionGroup","title":"BinaryInteger Implementations","type":"topic","url":"\/documentation\/compute\/int128\/binaryinteger-implementations","abstract":[]},"doc://com.swallow.documentation.Compute/documentation/Compute/Int128/__(_:_:)-80gwd":{"title":">>(_:_:)","url":"\/documentation\/compute\/int128\/__(_:_:)-80gwd","role":"symbol","abstract":[{"text":"Returns the result of shifting a value’s binary representation the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"specified number of digits to the right."}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int128\/__(_:_:)-80gwd","type":"topic","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":">>","kind":"identifier"},{"text":" ","kind":"text"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"RHS"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"text":"RHS","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Int128":{"url":"\/documentation\/compute\/int128","abstract":[{"type":"text","text":"A 128-bit signed integer type."}],"title":"Int128","role":"symbol","navigatorTitle":[{"text":"Int128","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int128","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Int128"}],"kind":"symbol","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/BinaryInteger":{"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"BinaryInteger"}],"navigatorTitle":[{"kind":"identifier","text":"BinaryInteger"}],"url":"\/documentation\/compute\/binaryinteger","type":"topic","abstract":[{"type":"text","text":"An integer type with a binary representation."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryInteger","title":"BinaryInteger","kind":"symbol","role":"symbol"}}}