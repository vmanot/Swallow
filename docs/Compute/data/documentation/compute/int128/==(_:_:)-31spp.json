{"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int128","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int128\/BinaryInteger-Implementations"]]},"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int128\/==(_:_:)-31spp","interfaceLanguage":"swift"},"kind":"symbol","schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"text":"Returns a Boolean value indicating whether the two given values are","type":"text"},{"type":"text","text":" "},{"text":"equal.","type":"text"}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"==","kind":"identifier"},{"text":" ","kind":"text"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Other"},{"kind":"text","text":">("},{"kind":"internalParam","text":"lhs"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"kind":"internalParam","text":"rhs"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Other"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bool"},{"kind":"text","text":" "},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Other","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","text":"BinaryInteger","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryInteger","preciseIdentifier":"s:Sz"}],"platforms":["macOS"]}],"kind":"declarations"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"An integer to compare."}]}],"name":"lhs"},{"content":[{"inlineContent":[{"text":"Another integer to compare.","type":"text"}],"type":"paragraph"}],"name":"rhs"}],"kind":"parameters"},{"kind":"content","content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can check the equality of instances of any "},{"type":"codeVoice","code":"BinaryInteger"},{"type":"text","text":" types"},{"type":"text","text":" "},{"text":"using the equal-to operator (","type":"text"},{"code":"==","type":"codeVoice"},{"type":"text","text":"). For example, you can test whether"},{"type":"text","text":" "},{"type":"text","text":"the first "},{"type":"codeVoice","code":"UInt8"},{"text":" value in a stringâ€™s UTF-8 encoding is equal to the","type":"text"},{"type":"text","text":" "},{"text":"first ","type":"text"},{"type":"codeVoice","code":"UInt32"},{"text":" value in its Unicode scalar view:","type":"text"}]},{"code":["let gameName = \"Red Light, Green Light\"","if let firstUTF8 = gameName.utf8.first,","    let firstScalar = gameName.unicodeScalars.first?.value {","    print(\"First code values are equal: \\(firstUTF8 == firstScalar)\")","}","\/\/ Prints \"First code values are equal: true\""],"syntax":null,"type":"codeListing"}]}],"metadata":{"title":"==(_:_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"==","kind":"identifier"},{"text":" ","kind":"text"},{"text":"<","kind":"text"},{"text":"Other","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Other","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"roleHeading":"Operator","role":"symbol","symbolKind":"op","extendedModule":"Swift","modules":[{"name":"Compute","relatedModules":["Swift"]}],"externalID":"s:SzsE2eeoiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:s6Int128V"},"sections":[],"variants":[{"paths":["\/documentation\/compute\/int128\/==(_:_:)-31spp"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Int128/BinaryInteger-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int128\/BinaryInteger-Implementations","kind":"article","role":"collectionGroup","title":"BinaryInteger Implementations","type":"topic","url":"\/documentation\/compute\/int128\/binaryinteger-implementations","abstract":[]},"doc://com.swallow.documentation.Compute/documentation/Compute/Int128":{"url":"\/documentation\/compute\/int128","abstract":[{"type":"text","text":"A 128-bit signed integer type."}],"title":"Int128","role":"symbol","navigatorTitle":[{"text":"Int128","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int128","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Int128"}],"kind":"symbol","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/BinaryInteger":{"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"BinaryInteger"}],"navigatorTitle":[{"kind":"identifier","text":"BinaryInteger"}],"url":"\/documentation\/compute\/binaryinteger","type":"topic","abstract":[{"type":"text","text":"An integer type with a binary representation."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryInteger","title":"BinaryInteger","kind":"symbol","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int128/==(_:_:)-31spp":{"title":"==(_:_:)","url":"\/documentation\/compute\/int128\/==(_:_:)-31spp","role":"symbol","abstract":[{"type":"text","text":"Returns a Boolean value indicating whether the two given values are"},{"text":" ","type":"text"},{"type":"text","text":"equal."}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int128\/==(_:_:)-31spp","type":"topic","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"=="},{"kind":"text","text":" "},{"text":"<","kind":"text"},{"text":"Other","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Other"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Bool":{"url":"\/documentation\/compute\/bool","role":"symbol","title":"Bool","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Bool","kind":"identifier"}],"abstract":[{"type":"text","text":"A value type whose instances are either "},{"type":"codeVoice","code":"true"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"false"},{"text":".","type":"text"}],"navigatorTitle":[{"text":"Bool","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bool","kind":"symbol"}}}