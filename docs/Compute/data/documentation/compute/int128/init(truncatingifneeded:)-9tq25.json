{"kind":"symbol","identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int128\/init(truncatingIfNeeded:)-9tq25","interfaceLanguage":"swift"},"sections":[],"metadata":{"symbolKind":"init","fragments":[{"kind":"identifier","text":"init"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"text":"truncatingIfNeeded","kind":"externalParam"},{"kind":"text","text":": "},{"text":"T","kind":"typeIdentifier"},{"text":")","kind":"text"}],"modules":[{"relatedModules":["Swift"],"name":"Compute"}],"extendedModule":"Swift","role":"symbol","title":"init(truncatingIfNeeded:)","externalID":"s:s17FixedWidthIntegerPsE18truncatingIfNeededxqd___tcSzRd__lufc::SYNTHESIZED::s:s6Int128V","roleHeading":"Initializer"},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int128","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int128\/FixedWidthInteger-Implementations"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"type":"text","text":"Creates a new instance from the bit pattern of the given instance by"},{"type":"text","text":" "},{"text":"truncating or sign-extending if needed to fit this type.","type":"text"}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"text":"truncatingIfNeeded","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"source"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") "},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:Sz","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryInteger","kind":"typeIdentifier","text":"BinaryInteger"}],"platforms":["macOS"]}],"kind":"declarations"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"An integer to convert to this type.","type":"text"}]}],"name":"source"}],"kind":"parameters"},{"content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"inlineContent":[{"type":"text","text":"When the bit width of "},{"code":"T","type":"codeVoice"},{"text":" (the type of ","type":"text"},{"type":"codeVoice","code":"source"},{"text":") is equal to or greater","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"than this type’s bit width, the result is the truncated"},{"type":"text","text":" "},{"type":"text","text":"least-significant bits of "},{"type":"codeVoice","code":"source"},{"type":"text","text":". For example, when converting a"},{"text":" ","type":"text"},{"text":"16-bit value to an 8-bit type, only the lower 8 bits of ","type":"text"},{"type":"codeVoice","code":"source"},{"text":" are","type":"text"},{"text":" ","type":"text"},{"text":"used.","type":"text"}],"type":"paragraph"},{"syntax":null,"code":["let p: Int16 = -500","\/\/ 'p' has a binary representation of 11111110_00001100","let q = Int8(truncatingIfNeeded: p)","\/\/ q == 12","\/\/ 'q' has a binary representation of 00001100"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"When the bit width of "},{"code":"T","type":"codeVoice"},{"text":" is less than this type’s bit width, the result","type":"text"},{"type":"text","text":" "},{"type":"text","text":"is "},{"inlineContent":[{"type":"text","text":"sign-extended"}],"type":"emphasis"},{"type":"text","text":" to fill the remaining bits. That is, if "},{"type":"codeVoice","code":"source"},{"type":"text","text":" is"},{"text":" ","type":"text"},{"type":"text","text":"negative, the result is padded with ones; otherwise, the result is"},{"type":"text","text":" "},{"type":"text","text":"padded with zeros."}],"type":"paragraph"},{"syntax":null,"code":["let u: Int8 = 21","\/\/ 'u' has a binary representation of 00010101","let v = Int16(truncatingIfNeeded: u)","\/\/ v == 21","\/\/ 'v' has a binary representation of 00000000_00010101","","let w: Int8 = -21","\/\/ 'w' has a binary representation of 11101011","let x = Int16(truncatingIfNeeded: w)","\/\/ x == -21","\/\/ 'x' has a binary representation of 11111111_11101011","let y = UInt16(truncatingIfNeeded: w)","\/\/ y == 65515","\/\/ 'y' has a binary representation of 11111111_11101011"],"type":"codeListing"}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/int128\/init(truncatingifneeded:)-9tq25"]}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Int128/init(truncatingIfNeeded:)-9tq25":{"type":"topic","abstract":[{"type":"text","text":"Creates a new instance from the bit pattern of the given instance by"},{"type":"text","text":" "},{"text":"truncating or sign-extending if needed to fit this type.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int128\/init(truncatingIfNeeded:)-9tq25","role":"symbol","title":"init(truncatingIfNeeded:)","url":"\/documentation\/compute\/int128\/init(truncatingifneeded:)-9tq25","fragments":[{"kind":"identifier","text":"init"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"truncatingIfNeeded","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Int128":{"url":"\/documentation\/compute\/int128","abstract":[{"type":"text","text":"A 128-bit signed integer type."}],"title":"Int128","role":"symbol","navigatorTitle":[{"text":"Int128","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int128","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Int128"}],"kind":"symbol","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int128/FixedWidthInteger-Implementations":{"kind":"article","role":"collectionGroup","title":"FixedWidthInteger Implementations","type":"topic","url":"\/documentation\/compute\/int128\/fixedwidthinteger-implementations","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int128\/FixedWidthInteger-Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/BinaryInteger":{"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"BinaryInteger"}],"navigatorTitle":[{"kind":"identifier","text":"BinaryInteger"}],"url":"\/documentation\/compute\/binaryinteger","type":"topic","abstract":[{"type":"text","text":"An integer type with a binary representation."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryInteger","title":"BinaryInteger","kind":"symbol","role":"symbol"}}}