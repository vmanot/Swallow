{"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"&>>"},{"kind":"text","text":" "},{"kind":"text","text":"<"},{"text":"Other","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"lhs","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"internalParam","text":"rhs"},{"text":": ","kind":"text"},{"text":"Other","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":" ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Other"},{"kind":"text","text":" : "},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryInteger","preciseIdentifier":"s:Sz","text":"BinaryInteger","kind":"typeIdentifier"}]}]},{"kind":"parameters","parameters":[{"name":"lhs","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The value to shift."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"The number of bits to shift ","type":"text"},{"type":"codeVoice","code":"lhs"},{"type":"text","text":" to the right. If "},{"code":"rhs","type":"codeVoice"},{"text":" is","type":"text"},{"type":"text","text":" "},{"text":"outside the range ","type":"text"},{"type":"codeVoice","code":"0..<lhs.bitWidth"},{"text":", it is masked to produce a","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"value within that range."}]}],"name":"rhs"}]},{"kind":"content","content":[{"type":"heading","anchor":"discussion","text":"Discussion","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Use the masking right shift operator ("},{"type":"codeVoice","code":"&>>"},{"text":") when you need to perform a","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"shift and are sure that the shift amount is in the range"},{"text":" ","type":"text"},{"code":"0..<lhs.bitWidth","type":"codeVoice"},{"type":"text","text":". Before shifting, the masking right shift operator"},{"type":"text","text":" "},{"type":"text","text":"masks the shift to this range. The shift is performed using this masked"},{"text":" ","type":"text"},{"type":"text","text":"value."}]},{"inlineContent":[{"text":"The following example defines ","type":"text"},{"type":"codeVoice","code":"x"},{"text":" as an instance of ","type":"text"},{"type":"codeVoice","code":"UInt8"},{"type":"text","text":", an 8-bit,"},{"type":"text","text":" "},{"text":"unsigned integer type. If you use ","type":"text"},{"type":"codeVoice","code":"2"},{"type":"text","text":" as the right-hand-side value in an"},{"type":"text","text":" "},{"text":"operation on ","type":"text"},{"type":"codeVoice","code":"x"},{"type":"text","text":", the shift amount requires no masking."}],"type":"paragraph"},{"type":"codeListing","code":["let x: UInt8 = 30                 \/\/ 0b00011110","let y = x &>> 2","\/\/ y == 7                         \/\/ 0b00000111"],"syntax":null},{"inlineContent":[{"type":"text","text":"However, if you use "},{"code":"8","type":"codeVoice"},{"type":"text","text":" as the shift amount, the method first masks the"},{"text":" ","type":"text"},{"type":"text","text":"shift amount to zero, and then performs the shift, resulting in no change"},{"type":"text","text":" "},{"type":"text","text":"to the original value."}],"type":"paragraph"},{"syntax":null,"code":["let z = x &>> 8","\/\/ z == 30                        \/\/ 0b00011110"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If the bit width of the shifted integer type is a power of two, masking"},{"type":"text","text":" "},{"text":"is performed using a bitmask; otherwise, masking is performed using a","type":"text"},{"type":"text","text":" "},{"type":"text","text":"modulo operation."}]}]}],"kind":"symbol","metadata":{"title":"&>>(_:_:)","roleHeading":"Operator","externalID":"s:s17FixedWidthIntegerPsE3aggoiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:s6Int128V","role":"symbol","modules":[{"name":"Compute","relatedModules":["Swift"]}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"&>>","kind":"identifier"},{"text":" ","kind":"text"},{"text":"<","kind":"text"},{"text":"Other","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Other"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"symbolKind":"op","extendedModule":"Swift"},"schemaVersion":{"minor":3,"major":0,"patch":0},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int128","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int128\/FixedWidthInteger-Implementations"]]},"abstract":[{"text":"Returns the result of shifting a value’s binary representation the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"specified number of digits to the right, masking the shift amount to the"},{"text":" ","type":"text"},{"type":"text","text":"type’s bit width."}],"variants":[{"paths":["\/documentation\/compute\/int128\/&__(_:_:)-227qu"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int128\/&__(_:_:)-227qu"},"sections":[],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Int128/FixedWidthInteger-Implementations":{"kind":"article","role":"collectionGroup","title":"FixedWidthInteger Implementations","type":"topic","url":"\/documentation\/compute\/int128\/fixedwidthinteger-implementations","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int128\/FixedWidthInteger-Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int128/&__(_:_:)-227qu":{"kind":"symbol","type":"topic","url":"\/documentation\/compute\/int128\/&__(_:_:)-227qu","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"&>>","kind":"identifier"},{"kind":"text","text":" "},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Other"},{"kind":"text","text":">("},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Other"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Returns the result of shifting a value’s binary representation the"},{"text":" ","type":"text"},{"text":"specified number of digits to the right, masking the shift amount to the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"type’s bit width."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int128\/&__(_:_:)-227qu","title":"&>>(_:_:)","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int128":{"url":"\/documentation\/compute\/int128","abstract":[{"type":"text","text":"A 128-bit signed integer type."}],"title":"Int128","role":"symbol","navigatorTitle":[{"text":"Int128","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int128","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Int128"}],"kind":"symbol","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/BinaryInteger":{"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"BinaryInteger"}],"navigatorTitle":[{"kind":"identifier","text":"BinaryInteger"}],"url":"\/documentation\/compute\/binaryinteger","type":"topic","abstract":[{"type":"text","text":"An integer type with a binary representation."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryInteger","title":"BinaryInteger","kind":"symbol","role":"symbol"}}}