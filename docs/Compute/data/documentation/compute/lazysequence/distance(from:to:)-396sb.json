{"abstract":[{"text":"Returns the distance between two indices.","type":"text"}],"metadata":{"modules":[{"name":"Compute","relatedModules":["Swift"]}],"externalID":"s:SlsE8distance4from2toSi5IndexQz_AEtF::SYNTHESIZED::s:s12LazySequenceV","title":"distance(from:to:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"distance","kind":"identifier"},{"text":"(","kind":"text"},{"text":"from","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa","text":"Index"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"to"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:Sl5IndexQa","text":"Index","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"}],"role":"symbol","roleHeading":"Instance Method","symbolKind":"method","extendedModule":"Swift"},"variants":[{"paths":["\/documentation\/compute\/lazysequence\/distance(from:to:)-396sb"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazySequence\/distance(from:to:)-396sb","interfaceLanguage":"swift"},"sections":[],"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazySequence","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazySequence\/Collection-Implementations"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"distance"},{"kind":"text","text":"("},{"kind":"externalParam","text":"from"},{"kind":"text","text":" "},{"kind":"internalParam","text":"start"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/Index","text":"Index"},{"text":", ","kind":"text"},{"text":"to","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"end","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/Index","text":"Index","preciseIdentifier":"s:Sl5IndexQa"},{"text":") -> ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","kind":"typeIdentifier"}],"platforms":["macOS"],"languages":["swift"]}]},{"parameters":[{"name":"start","content":[{"type":"paragraph","inlineContent":[{"text":"A valid index of the collection.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Another valid index of the collection. If "},{"type":"codeVoice","code":"end"},{"text":" is equal to","type":"text"},{"type":"text","text":" "},{"code":"start","type":"codeVoice"},{"type":"text","text":", the result is zero."}]}],"name":"end"}],"kind":"parameters"},{"content":[{"text":"Return Value","type":"heading","level":2,"anchor":"return-value"},{"inlineContent":[{"text":"The distance between ","type":"text"},{"type":"codeVoice","code":"start"},{"type":"text","text":" and "},{"type":"codeVoice","code":"end"},{"text":". The result can be","type":"text"},{"type":"text","text":" "},{"type":"text","text":"negative only if the collection conforms to the"},{"type":"text","text":" "},{"code":"BidirectionalCollection","type":"codeVoice"},{"text":" protocol.","type":"text"}],"type":"paragraph"}],"kind":"content"},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"inlineContent":[{"type":"text","text":"Unless the collection conforms to the "},{"type":"codeVoice","code":"BidirectionalCollection"},{"type":"text","text":" protocol,"},{"type":"text","text":" "},{"type":"codeVoice","code":"start"},{"type":"text","text":" must be less than or equal to "},{"type":"codeVoice","code":"end"},{"type":"text","text":"."}],"type":"paragraph"},{"type":"aside","style":"note","name":"Complexity","content":[{"inlineContent":[{"type":"text","text":"O(1) if the collection conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"RandomAccessCollection"},{"type":"text","text":"; otherwise, O("},{"type":"emphasis","inlineContent":[{"text":"k","type":"text"}]},{"type":"text","text":"), where "},{"type":"emphasis","inlineContent":[{"text":"k","type":"text"}]},{"text":" is the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"resulting distance."}],"type":"paragraph"}]}]}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/LazySequence/distance(from:to:)-396sb":{"abstract":[{"type":"text","text":"Returns the distance between two indices."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazySequence\/distance(from:to:)-396sb","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"distance"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"from"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Index","kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa"},{"kind":"text","text":", "},{"kind":"externalParam","text":"to"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa","text":"Index"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"type":"topic","kind":"symbol","url":"\/documentation\/compute\/lazysequence\/distance(from:to:)-396sb","title":"distance(from:to:)","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/LazySequence/Collection-Implementations":{"kind":"article","role":"collectionGroup","type":"topic","title":"Collection Implementations","url":"\/documentation\/compute\/lazysequence\/collection-implementations","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazySequence\/Collection-Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","abstract":[{"type":"text","text":"A signed integer value type."}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Int","kind":"identifier"}],"navigatorTitle":[{"text":"Int","kind":"identifier"}],"title":"Int","url":"\/documentation\/compute\/int","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/LazySequence":{"abstract":[{"text":"A sequence containing the same elements as a ","type":"text"},{"code":"Base","type":"codeVoice"},{"type":"text","text":" sequence, but"},{"text":" ","type":"text"},{"type":"text","text":"on which some operations such as "},{"type":"codeVoice","code":"map"},{"text":" and ","type":"text"},{"code":"filter","type":"codeVoice"},{"text":" are","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"implemented lazily."}],"role":"symbol","navigatorTitle":[{"text":"LazySequence","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"LazySequence"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazySequence","type":"topic","title":"LazySequence","url":"\/documentation\/compute\/lazysequence"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Collection/Index":{"url":"\/documentation\/compute\/collection\/index","required":true,"role":"symbol","title":"Index","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Index","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"Comparable","preciseIdentifier":"s:SL","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"A type that represents a position in the collection."}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/Index","kind":"symbol"}}}