{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazySequence\/firstAndOnly(byUnwrapping:)-8lko"},"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"firstAndOnly","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"text":"byUnwrapping","kind":"externalParam"},{"kind":"text","text":" "},{"text":"transform","kind":"internalParam"},{"text":": (","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"},{"text":"?) ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":"?","kind":"text"}]}]}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazySequence","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazySequence\/Sequence-Implementations"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/lazysequence\/firstandonly(byunwrapping:)-8lko"]}],"metadata":{"symbolKind":"method","role":"symbol","modules":[{"name":"Compute","relatedModules":["Swift"]}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"firstAndOnly"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"byUnwrapping"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":"?) "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"},{"text":"?","kind":"text"}],"title":"firstAndOnly(byUnwrapping:)","externalID":"s:ST20_SwallowSwiftOverlayE12firstAndOnly12byUnwrappingqd__SgAD7ElementQzKXE_tKlF::SYNTHESIZED::s:s12LazySequenceV","roleHeading":"Instance Method","extendedModule":"Swift"},"kind":"symbol","abstract":[{"text":"Inherited from ","type":"text"},{"type":"codeVoice","code":"Sequence.firstAndOnly(byUnwrapping:)"},{"text":".","type":"text"}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/LazySequence":{"abstract":[{"text":"A sequence containing the same elements as a ","type":"text"},{"code":"Base","type":"codeVoice"},{"type":"text","text":" sequence, but"},{"text":" ","type":"text"},{"type":"text","text":"on which some operations such as "},{"type":"codeVoice","code":"map"},{"text":" and ","type":"text"},{"code":"filter","type":"codeVoice"},{"text":" are","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"implemented lazily."}],"role":"symbol","navigatorTitle":[{"text":"LazySequence","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"LazySequence"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazySequence","type":"topic","title":"LazySequence","url":"\/documentation\/compute\/lazysequence"},"doc://com.swallow.documentation.Compute/documentation/Compute/LazySequence/firstAndOnly(byUnwrapping:)-8lko":{"url":"\/documentation\/compute\/lazysequence\/firstandonly(byunwrapping:)-8lko","role":"symbol","abstract":[],"kind":"symbol","title":"firstAndOnly(byUnwrapping:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"firstAndOnly","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"text":"byUnwrapping","kind":"externalParam"},{"kind":"text","text":": ("},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:ST7ElementQa"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?) "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazySequence\/firstAndOnly(byUnwrapping:)-8lko","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/LazySequence/Sequence-Implementations":{"title":"Sequence Implementations","type":"topic","abstract":[],"kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazySequence\/Sequence-Implementations","url":"\/documentation\/compute\/lazysequence\/sequence-implementations","role":"collectionGroup"},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence/Element":{"type":"topic","required":true,"abstract":[{"type":"text","text":"A type representing the sequenceâ€™s elements."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"symbol","url":"\/documentation\/compute\/sequence\/element","role":"symbol","title":"Element","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"}}}