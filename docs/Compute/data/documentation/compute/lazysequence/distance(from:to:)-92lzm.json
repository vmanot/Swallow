{"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"distance","kind":"identifier"},{"text":"(","kind":"text"},{"text":"from","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"start","kind":"internalParam"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazySequence","kind":"typeIdentifier","preciseIdentifier":"s:s12LazySequenceV","text":"LazySequence"},{"text":"<","kind":"text"},{"text":"Base","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"kind":"typeIdentifier","text":"Index"},{"kind":"text","text":", "},{"text":"to","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"end"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s12LazySequenceV","kind":"typeIdentifier","text":"LazySequence","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazySequence"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Base"},{"text":">.","kind":"text"},{"text":"Index","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Int","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","preciseIdentifier":"s:Si"}],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"name":"start","content":[{"inlineContent":[{"type":"text","text":"A valid index of the collection."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Another valid index of the collection. If "},{"code":"end","type":"codeVoice"},{"type":"text","text":" is equal to"},{"text":" ","type":"text"},{"code":"start","type":"codeVoice"},{"text":", the result is zero.","type":"text"}],"type":"paragraph"}],"name":"end"}],"kind":"parameters"},{"content":[{"level":2,"text":"Return Value","type":"heading","anchor":"return-value"},{"inlineContent":[{"type":"text","text":"The distance between "},{"code":"start","type":"codeVoice"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"end"},{"type":"text","text":". The result can be"},{"type":"text","text":" "},{"text":"negative only if the collection conforms to the","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"BidirectionalCollection"},{"type":"text","text":" protocol."}],"type":"paragraph"}],"kind":"content"},{"kind":"content","content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Unless the collection conforms to the "},{"code":"BidirectionalCollection","type":"codeVoice"},{"type":"text","text":" protocol,"},{"text":" ","type":"text"},{"code":"start","type":"codeVoice"},{"text":" must be less than or equal to ","type":"text"},{"type":"codeVoice","code":"end"},{"text":".","type":"text"}]},{"type":"aside","name":"Complexity","style":"note","content":[{"inlineContent":[{"text":"O(1) if the collection conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"RandomAccessCollection"},{"type":"text","text":"; otherwise, O("},{"inlineContent":[{"text":"k","type":"text"}],"type":"emphasis"},{"text":"), where ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"k","type":"text"}]},{"type":"text","text":" is the"},{"type":"text","text":" "},{"type":"text","text":"resulting distance."}],"type":"paragraph"}]}]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazySequence","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazySequence\/Collection-Implementations"]]},"variants":[{"paths":["\/documentation\/compute\/lazysequence\/distance(from:to:)-92lzm"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"type":"text","text":"Returns the distance between two indices."}],"metadata":{"extendedModule":"Swift","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Base","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Collection","type":"codeVoice"},{"text":".","type":"text"}]},"symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"distance"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"from"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s12LazySequenceV","text":"LazySequence","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Base","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"text":"Index","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"to","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"LazySequence","kind":"typeIdentifier","preciseIdentifier":"s:s12LazySequenceV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Base"},{"text":">.","kind":"text"},{"kind":"typeIdentifier","text":"Index"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"}],"roleHeading":"Instance Method","role":"symbol","title":"distance(from:to:)","externalID":"s:s12LazySequenceVsSlRzrlE8distance4from2toSi5IndexQz_AGtF","modules":[{"relatedModules":["Swift"],"name":"Compute"}]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazySequence\/distance(from:to:)-92lzm"},"kind":"symbol","references":{"doc://com.swallow.documentation.Compute/documentation/Compute/LazySequence/Collection-Implementations":{"kind":"article","role":"collectionGroup","type":"topic","title":"Collection Implementations","url":"\/documentation\/compute\/lazysequence\/collection-implementations","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazySequence\/Collection-Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/LazySequence":{"abstract":[{"text":"A sequence containing the same elements as a ","type":"text"},{"code":"Base","type":"codeVoice"},{"type":"text","text":" sequence, but"},{"text":" ","type":"text"},{"type":"text","text":"on which some operations such as "},{"type":"codeVoice","code":"map"},{"text":" and ","type":"text"},{"code":"filter","type":"codeVoice"},{"text":" are","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"implemented lazily."}],"role":"symbol","navigatorTitle":[{"text":"LazySequence","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"LazySequence"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazySequence","type":"topic","title":"LazySequence","url":"\/documentation\/compute\/lazysequence"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","abstract":[{"type":"text","text":"A signed integer value type."}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Int","kind":"identifier"}],"navigatorTitle":[{"text":"Int","kind":"identifier"}],"title":"Int","url":"\/documentation\/compute\/int","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/LazySequence/distance(from:to:)-92lzm":{"type":"topic","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazySequence\/distance(from:to:)-92lzm","url":"\/documentation\/compute\/lazysequence\/distance(from:to:)-92lzm","title":"distance(from:to:)","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Base"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Collection"},{"type":"text","text":"."}]},"abstract":[{"type":"text","text":"Returns the distance between two indices."}],"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"distance","kind":"identifier"},{"kind":"text","text":"("},{"text":"from","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s12LazySequenceV","kind":"typeIdentifier","text":"LazySequence"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Base"},{"text":">.","kind":"text"},{"text":"Index","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"to","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"LazySequence","kind":"typeIdentifier","preciseIdentifier":"s:s12LazySequenceV"},{"kind":"text","text":"<"},{"text":"Base","kind":"typeIdentifier"},{"kind":"text","text":">."},{"text":"Index","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"}]}}}