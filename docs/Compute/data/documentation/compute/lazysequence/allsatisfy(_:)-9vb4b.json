{"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"allSatisfy","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"predicate","kind":"internalParam"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"Element","preciseIdentifier":"s:ST7ElementQa","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bool","text":"Bool"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Bool","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"platforms":["macOS"]}]},{"parameters":[{"content":[{"inlineContent":[{"text":"A closure that takes an element of the sequence","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"as its argument and returns a Boolean value that indicates whether"},{"type":"text","text":" "},{"type":"text","text":"the passed element satisfies a condition."}],"type":"paragraph"}],"name":"predicate"}],"kind":"parameters"},{"kind":"content","content":[{"anchor":"return-value","level":2,"text":"Return Value","type":"heading"},{"inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"true"},{"text":" if the sequence contains only elements that satisfy","type":"text"},{"text":" ","type":"text"},{"code":"predicate","type":"codeVoice"},{"text":"; otherwise, ","type":"text"},{"code":"false","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}]},{"kind":"content","content":[{"level":2,"type":"heading","anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The following code uses this method to test whether all the names in an"},{"text":" ","type":"text"},{"type":"text","text":"array have at least five characters:"}]},{"code":["let names = [\"Sofia\", \"Camilla\", \"Martina\", \"Mateo\", \"Nicolás\"]","let allHaveAtLeastFive = names.allSatisfy({ $0.count >= 5 })","\/\/ allHaveAtLeastFive == true"],"type":"codeListing","syntax":null},{"inlineContent":[{"text":"If the sequence is empty, this method returns ","type":"text"},{"type":"codeVoice","code":"true"},{"type":"text","text":"."}],"type":"paragraph"},{"content":[{"inlineContent":[{"text":"O(","type":"text"},{"inlineContent":[{"text":"n","type":"text"}],"type":"emphasis"},{"type":"text","text":"), where "},{"type":"emphasis","inlineContent":[{"text":"n","type":"text"}]},{"text":" is the length of the sequence.","type":"text"}],"type":"paragraph"}],"style":"note","type":"aside","name":"Complexity"}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"abstract":[{"type":"text","text":"Returns a Boolean value indicating whether every element of a sequence"},{"type":"text","text":" "},{"type":"text","text":"satisfies a given predicate."}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazySequence","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazySequence\/Sequence-Implementations"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazySequence\/allSatisfy(_:)-9vb4b"},"metadata":{"modules":[{"relatedModules":["Swift"],"name":"Compute"}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"allSatisfy"},{"kind":"text","text":"(("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:ST7ElementQa","text":"Element","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"title":"allSatisfy(_:)","externalID":"s:STsE10allSatisfyyS2b7ElementQzKXEKF::SYNTHESIZED::s:s12LazySequenceV","extendedModule":"Swift","symbolKind":"method","role":"symbol","roleHeading":"Instance Method"},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/lazysequence\/allsatisfy(_:)-9vb4b"]}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence/Element":{"type":"topic","required":true,"abstract":[{"type":"text","text":"A type representing the sequence’s elements."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"symbol","url":"\/documentation\/compute\/sequence\/element","role":"symbol","title":"Element","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/LazySequence/allSatisfy(_:)-9vb4b":{"url":"\/documentation\/compute\/lazysequence\/allsatisfy(_:)-9vb4b","role":"symbol","title":"allSatisfy(_:)","abstract":[{"type":"text","text":"Returns a Boolean value indicating whether every element of a sequence"},{"type":"text","text":" "},{"text":"satisfies a given predicate.","type":"text"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"allSatisfy","kind":"identifier"},{"kind":"text","text":"(("},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:ST7ElementQa"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":") "},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazySequence\/allSatisfy(_:)-9vb4b","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/Bool":{"url":"\/documentation\/compute\/bool","role":"symbol","title":"Bool","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Bool","kind":"identifier"}],"abstract":[{"type":"text","text":"A value type whose instances are either "},{"type":"codeVoice","code":"true"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"false"},{"text":".","type":"text"}],"navigatorTitle":[{"text":"Bool","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bool","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/LazySequence/Sequence-Implementations":{"title":"Sequence Implementations","type":"topic","abstract":[],"kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazySequence\/Sequence-Implementations","url":"\/documentation\/compute\/lazysequence\/sequence-implementations","role":"collectionGroup"},"doc://com.swallow.documentation.Compute/documentation/Compute/LazySequence":{"abstract":[{"text":"A sequence containing the same elements as a ","type":"text"},{"code":"Base","type":"codeVoice"},{"type":"text","text":" sequence, but"},{"text":" ","type":"text"},{"type":"text","text":"on which some operations such as "},{"type":"codeVoice","code":"map"},{"text":" and ","type":"text"},{"code":"filter","type":"codeVoice"},{"text":" are","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"implemented lazily."}],"role":"symbol","navigatorTitle":[{"text":"LazySequence","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"LazySequence"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazySequence","type":"topic","title":"LazySequence","url":"\/documentation\/compute\/lazysequence"}}}