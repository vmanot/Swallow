{"schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazySequence\/difference(from:by:)"},"abstract":[{"text":"Returns the difference needed to produce this collection’s ordered","type":"text"},{"type":"text","text":" "},{"type":"text","text":"elements from the given collection, using the given predicate as an"},{"type":"text","text":" "},{"text":"equivalence test.","type":"text"}],"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/lazysequence\/difference(from:by:)"]}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"difference","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"C"},{"text":">(","kind":"text"},{"text":"from","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"other","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"by"},{"text":" ","kind":"text"},{"text":"areEquivalent","kind":"internalParam"},{"text":": (","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:ST7ElementQa","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element"},{"kind":"text","text":") -> "},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bool","kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"CollectionDifference","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CollectionDifference","preciseIdentifier":"s:s20CollectionDifferenceV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","text":"Element"},{"text":"> ","kind":"text"},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"text":"C","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BidirectionalCollection","preciseIdentifier":"s:SK","text":"BidirectionalCollection"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Element","preciseIdentifier":"s:ST7ElementQa","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"typeIdentifier"},{"kind":"text","text":" == "},{"text":"C","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","text":"Element"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"content":[{"inlineContent":[{"type":"text","text":"The base state."}],"type":"paragraph"}],"name":"other"},{"name":"areEquivalent","content":[{"inlineContent":[{"text":"A closure that returns a Boolean value indicating","type":"text"},{"text":" ","type":"text"},{"text":"whether two elements are equivalent.","type":"text"}],"type":"paragraph"}]}],"kind":"parameters"},{"kind":"content","content":[{"text":"Return Value","type":"heading","level":2,"anchor":"return-value"},{"inlineContent":[{"type":"text","text":"The difference needed to produce the receiver’s state from"},{"type":"text","text":" "},{"text":"the parameter’s state.","type":"text"}],"type":"paragraph"}]},{"kind":"content","content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This function does not infer element moves. If you need to infer moves,"},{"type":"text","text":" "},{"type":"text","text":"call the "},{"type":"codeVoice","code":"inferringMoves()"},{"type":"text","text":" method on the resulting difference."}]},{"name":"Complexity","style":"note","type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"Worst case performance is O(","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"n"}]},{"text":" * ","type":"text"},{"inlineContent":[{"type":"text","text":"m"}],"type":"emphasis"},{"type":"text","text":"), where "},{"type":"emphasis","inlineContent":[{"text":"n","type":"text"}]},{"text":" is the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"count of this collection and "},{"type":"emphasis","inlineContent":[{"text":"m","type":"text"}]},{"text":" is ","type":"text"},{"code":"other.count","type":"codeVoice"},{"type":"text","text":". You can expect"},{"text":" ","type":"text"},{"type":"text","text":"faster execution when the collections share many common elements."}]}]}]}],"sections":[],"metadata":{"symbolKind":"method","platforms":[{"introducedAt":"13.0","name":"iOS","unavailable":false,"deprecated":false,"beta":false},{"deprecated":false,"beta":false,"name":"macOS","introducedAt":"10.15","unavailable":false},{"unavailable":false,"beta":false,"introducedAt":"13.0","name":"tvOS","deprecated":false},{"introducedAt":"6.0","unavailable":false,"deprecated":false,"beta":false,"name":"watchOS"}],"title":"difference(from:by:)","modules":[{"relatedModules":["Swift"],"name":"Compute"}],"role":"symbol","roleHeading":"Instance Method","extendedModule":"Swift","externalID":"s:SKsE10difference4from2bys20CollectionDifferenceVy7ElementQzGqd___SbAG_AGtXEtSKRd__AFQyd__AGRSlF::SYNTHESIZED::s:s12LazySequenceV","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"difference","kind":"identifier"},{"kind":"text","text":"<"},{"text":"C","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"from"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"C"},{"text":", ","kind":"text"},{"text":"by","kind":"externalParam"},{"kind":"text","text":": ("},{"text":"C","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:ST7ElementQa"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:ST7ElementQa"},{"kind":"text","text":") -> "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s20CollectionDifferenceV","text":"CollectionDifference"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:ST7ElementQa","text":"Element","kind":"typeIdentifier"},{"text":">","kind":"text"}]},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazySequence","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazySequence\/BidirectionalCollection-Implementations"]]},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Bool":{"url":"\/documentation\/compute\/bool","role":"symbol","title":"Bool","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Bool","kind":"identifier"}],"abstract":[{"type":"text","text":"A value type whose instances are either "},{"type":"codeVoice","code":"true"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"false"},{"text":".","type":"text"}],"navigatorTitle":[{"text":"Bool","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bool","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/LazySequence/BidirectionalCollection-Implementations":{"kind":"article","role":"collectionGroup","type":"topic","title":"BidirectionalCollection Implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazySequence\/BidirectionalCollection-Implementations","url":"\/documentation\/compute\/lazysequence\/bidirectionalcollection-implementations","abstract":[]},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/LazySequence":{"abstract":[{"text":"A sequence containing the same elements as a ","type":"text"},{"code":"Base","type":"codeVoice"},{"type":"text","text":" sequence, but"},{"text":" ","type":"text"},{"type":"text","text":"on which some operations such as "},{"type":"codeVoice","code":"map"},{"text":" and ","type":"text"},{"code":"filter","type":"codeVoice"},{"text":" are","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"implemented lazily."}],"role":"symbol","navigatorTitle":[{"text":"LazySequence","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"LazySequence"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazySequence","type":"topic","title":"LazySequence","url":"\/documentation\/compute\/lazysequence"},"doc://com.swallow.documentation.Compute/documentation/Compute/BidirectionalCollection":{"navigatorTitle":[{"text":"BidirectionalCollection","kind":"identifier"}],"abstract":[{"text":"A collection that supports backward as well as forward traversal.","type":"text"}],"title":"BidirectionalCollection","kind":"symbol","url":"\/documentation\/compute\/bidirectionalcollection","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"BidirectionalCollection"}],"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BidirectionalCollection","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/CollectionDifference":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CollectionDifference","kind":"identifier"}],"url":"\/documentation\/compute\/collectiondifference","type":"topic","title":"CollectionDifference","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"CollectionDifference"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CollectionDifference","abstract":[{"type":"text","text":"A collection of insertions and removals that describe the difference"},{"text":" ","type":"text"},{"text":"between two ordered collection states.","type":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/LazySequence/difference(from:by:)":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazySequence\/difference(from:by:)","title":"difference(from:by:)","abstract":[{"type":"text","text":"Returns the difference needed to produce this collection’s ordered"},{"type":"text","text":" "},{"type":"text","text":"elements from the given collection, using the given predicate as an"},{"text":" ","type":"text"},{"type":"text","text":"equivalence test."}],"role":"symbol","type":"topic","url":"\/documentation\/compute\/lazysequence\/difference(from:by:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"difference","kind":"identifier"},{"text":"<","kind":"text"},{"text":"C","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"from"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"C"},{"text":", ","kind":"text"},{"text":"by","kind":"externalParam"},{"kind":"text","text":": ("},{"text":"C","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:ST7ElementQa","text":"Element","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s20CollectionDifferenceV","text":"CollectionDifference"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier","text":"Element"},{"text":">","kind":"text"}],"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence/Element":{"type":"topic","required":true,"abstract":[{"type":"text","text":"A type representing the sequence’s elements."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"symbol","url":"\/documentation\/compute\/sequence\/element","role":"symbol","title":"Element","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"identifier"}]}}}