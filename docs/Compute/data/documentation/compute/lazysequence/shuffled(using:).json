{"kind":"symbol","schemaVersion":{"patch":0,"minor":3,"major":0},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazySequence","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazySequence\/Sequence-Implementations"]]},"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazySequence\/shuffled(using:)","interfaceLanguage":"swift"},"metadata":{"extendedModule":"Swift","symbolKind":"method","title":"shuffled(using:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"shuffled","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"using","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":") -> [","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"externalID":"s:STsE8shuffled5usingSay7ElementQzGqd__z_tSGRd__lF::SYNTHESIZED::s:s12LazySequenceV","role":"symbol","modules":[{"name":"Compute","relatedModules":["Swift"]}]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"shuffled"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"using","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"generator"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":") -> ["},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"kind":"text","text":"] "},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"T"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RandomNumberGenerator","preciseIdentifier":"s:SG","text":"RandomNumberGenerator","kind":"typeIdentifier"}],"platforms":["macOS"]}]},{"parameters":[{"name":"generator","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The random number generator to use when shuffling"},{"text":" ","type":"text"},{"type":"text","text":"the sequence."}]}]}],"kind":"parameters"},{"content":[{"text":"Return Value","level":2,"anchor":"return-value","type":"heading"},{"inlineContent":[{"type":"text","text":"An array of this sequence’s elements in a shuffled order."}],"type":"paragraph"}],"kind":"content"},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"text":"You use this method to randomize the elements of a sequence when you are","type":"text"},{"text":" ","type":"text"},{"text":"using a custom random number generator. For example, you can shuffle the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"numbers between "},{"code":"0","type":"codeVoice"},{"type":"text","text":" and "},{"code":"9","type":"codeVoice"},{"text":" by calling the ","type":"text"},{"type":"codeVoice","code":"shuffled(using:)"},{"type":"text","text":" method on"},{"type":"text","text":" "},{"text":"that range:","type":"text"}]},{"syntax":null,"code":["let numbers = 0...9","let shuffledNumbers = numbers.shuffled(using: &myGenerator)","\/\/ shuffledNumbers == [8, 9, 4, 3, 2, 6, 7, 0, 5, 1]"],"type":"codeListing"},{"content":[{"type":"paragraph","inlineContent":[{"text":"O(","type":"text"},{"type":"emphasis","inlineContent":[{"text":"n","type":"text"}]},{"type":"text","text":"), where "},{"inlineContent":[{"type":"text","text":"n"}],"type":"emphasis"},{"text":" is the length of the sequence.","type":"text"}]}],"name":"Complexity","type":"aside","style":"note"},{"type":"aside","style":"note","content":[{"type":"paragraph","inlineContent":[{"text":"The algorithm used to shuffle a sequence may change in a future","type":"text"},{"text":" ","type":"text"},{"text":"version of Swift. If you’re passing a generator that results in the","type":"text"},{"type":"text","text":" "},{"text":"same shuffled order each time you run your program, that sequence may","type":"text"},{"text":" ","type":"text"},{"text":"change when your program is compiled using a different version of","type":"text"},{"type":"text","text":" "},{"text":"Swift.","type":"text"}]}],"name":"Note"}]}],"sections":[],"abstract":[{"type":"text","text":"Returns the elements of the sequence, shuffled using the given generator"},{"text":" ","type":"text"},{"type":"text","text":"as a source for randomness."}],"variants":[{"paths":["\/documentation\/compute\/lazysequence\/shuffled(using:)"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/LazySequence/Sequence-Implementations":{"title":"Sequence Implementations","type":"topic","abstract":[],"kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazySequence\/Sequence-Implementations","url":"\/documentation\/compute\/lazysequence\/sequence-implementations","role":"collectionGroup"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence/Element":{"type":"topic","required":true,"abstract":[{"type":"text","text":"A type representing the sequence’s elements."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"symbol","url":"\/documentation\/compute\/sequence\/element","role":"symbol","title":"Element","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/LazySequence/shuffled(using:)":{"kind":"symbol","url":"\/documentation\/compute\/lazysequence\/shuffled(using:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"shuffled"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"using","kind":"externalParam"},{"kind":"text","text":": "},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":") -> ["},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:ST7ElementQa","text":"Element","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazySequence\/shuffled(using:)","title":"shuffled(using:)","abstract":[{"type":"text","text":"Returns the elements of the sequence, shuffled using the given generator"},{"text":" ","type":"text"},{"text":"as a source for randomness.","type":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/LazySequence":{"abstract":[{"text":"A sequence containing the same elements as a ","type":"text"},{"code":"Base","type":"codeVoice"},{"type":"text","text":" sequence, but"},{"text":" ","type":"text"},{"type":"text","text":"on which some operations such as "},{"type":"codeVoice","code":"map"},{"text":" and ","type":"text"},{"code":"filter","type":"codeVoice"},{"text":" are","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"implemented lazily."}],"role":"symbol","navigatorTitle":[{"text":"LazySequence","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"LazySequence"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazySequence","type":"topic","title":"LazySequence","url":"\/documentation\/compute\/lazysequence"},"doc://com.swallow.documentation.Compute/documentation/Compute/RandomNumberGenerator":{"abstract":[{"text":"A type that provides uniformly distributed random data.","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"RandomNumberGenerator"}],"url":"\/documentation\/compute\/randomnumbergenerator","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RandomNumberGenerator","title":"RandomNumberGenerator","role":"symbol","type":"topic","navigatorTitle":[{"text":"RandomNumberGenerator","kind":"identifier"}]}}}