{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BranchingArray\/+(_:_:)-8voio"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"+","kind":"identifier"},{"text":" ","kind":"text"},{"kind":"text","text":"<"},{"text":"Other","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"lhs","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"kind":"internalParam","text":"rhs"},{"kind":"text","text":": "},{"text":"Other","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":" ","kind":"text"},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"text":"Other","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"RangeReplaceableCollection","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RangeReplaceableCollection","kind":"typeIdentifier","preciseIdentifier":"s:Sm"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","text":"Element","preciseIdentifier":"s:ST7ElementQa"},{"kind":"text","text":" == "},{"text":"Other","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"name":"lhs","content":[{"inlineContent":[{"type":"text","text":"A range-replaceable collection."}],"type":"paragraph"}]},{"name":"rhs","content":[{"inlineContent":[{"type":"text","text":"Another range-replaceable collection."}],"type":"paragraph"}]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"text":"Discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The two arguments must have the same "},{"type":"codeVoice","code":"Element"},{"type":"text","text":" type. For example, you can"},{"type":"text","text":" "},{"type":"text","text":"concatenate the elements of two integer arrays."}]},{"syntax":null,"code":["let lowerNumbers = [1, 2, 3, 4]","let higherNumbers: ContiguousArray = [5, 6, 7, 8, 9, 10]","let allNumbers = lowerNumbers + higherNumbers","print(allNumbers)","\/\/ Prints \"[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\""],"type":"codeListing"},{"inlineContent":[{"text":"The resulting collection has the type of the argument on the left-hand","type":"text"},{"type":"text","text":" "},{"type":"text","text":"side. In the example above, "},{"type":"codeVoice","code":"moreNumbers"},{"type":"text","text":" has the same type as "},{"type":"codeVoice","code":"numbers"},{"text":",","type":"text"},{"text":" ","type":"text"},{"text":"which is ","type":"text"},{"type":"codeVoice","code":"[Int]"},{"text":".","type":"text"}],"type":"paragraph"}]}],"metadata":{"extendedModule":"Swift","role":"symbol","symbolKind":"op","modules":[{"relatedModules":["Swift"],"name":"Compute"}],"roleHeading":"Operator","externalID":"s:SmsE1poiyxx_qd__tSmRd__7ElementQyd__ABRtzlFZ::SYNTHESIZED::s:7Compute14BranchingArrayV","title":"+(_:_:)","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"+","kind":"identifier"},{"text":" ","kind":"text"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Other"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Other"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"}]},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/branchingarray\/+(_:_:)-8voio"]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"type":"text","text":"Creates a new collection by concatenating the elements of two collections."}],"sections":[],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BranchingArray","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BranchingArray\/RangeReplaceableCollection-Implementations"]]},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/RangeReplaceableCollection":{"type":"topic","title":"RangeReplaceableCollection","abstract":[{"text":"A collection that supports replacement of an arbitrary subrange of elements","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"with the elements of another collection."}],"url":"\/documentation\/compute\/rangereplaceablecollection","role":"symbol","kind":"symbol","navigatorTitle":[{"text":"RangeReplaceableCollection","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RangeReplaceableCollection","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"RangeReplaceableCollection","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/BranchingArray/+(_:_:)-8voio":{"title":"+(_:_:)","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"+"},{"kind":"text","text":" "},{"text":"<","kind":"text"},{"text":"Other","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Other","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BranchingArray\/+(_:_:)-8voio","abstract":[{"type":"text","text":"Creates a new collection by concatenating the elements of two collections."}],"kind":"symbol","url":"\/documentation\/compute\/branchingarray\/+(_:_:)-8voio","type":"topic","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/BranchingArray/RangeReplaceableCollection-Implementations":{"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BranchingArray\/RangeReplaceableCollection-Implementations","abstract":[],"kind":"article","role":"collectionGroup","title":"RangeReplaceableCollection Implementations","url":"\/documentation\/compute\/branchingarray\/rangereplaceablecollection-implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/BranchingArray":{"abstract":[],"navigatorTitle":[{"kind":"identifier","text":"BranchingArray"}],"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"BranchingArray"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BranchingArray","url":"\/documentation\/compute\/branchingarray","role":"symbol","title":"BranchingArray"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence/Element":{"type":"topic","required":true,"abstract":[{"type":"text","text":"A type representing the sequenceâ€™s elements."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"symbol","url":"\/documentation\/compute\/sequence\/element","role":"symbol","title":"Element","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"identifier"}]}}}