{"sections":[],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BranchingArray","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BranchingArray\/BidirectionalCollection-Implementations"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/branchingarray\/suffix(_:)"]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"abstract":[{"type":"text","text":"Returns a subsequence, up to the given maximum length, containing the"},{"type":"text","text":" "},{"text":"final elements of the collection.","type":"text"}],"kind":"symbol","identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BranchingArray\/suffix(_:)","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"suffix","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"maxLength"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/SubSequence","kind":"typeIdentifier","preciseIdentifier":"s:Sl11SubSequenceQa","text":"SubSequence"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"name":"maxLength","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The maximum number of elements to return."},{"type":"text","text":" "},{"type":"codeVoice","code":"maxLength"},{"text":" must be greater than or equal to zero.","type":"text"}]}]}]},{"kind":"content","content":[{"type":"heading","text":"Return Value","level":2,"anchor":"return-value"},{"type":"paragraph","inlineContent":[{"text":"A subsequence terminating at the end of the collection with at","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"most "},{"type":"codeVoice","code":"maxLength"},{"type":"text","text":" elements."}]}]},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"If the maximum length exceeds the number of elements in the collection,"},{"text":" ","type":"text"},{"type":"text","text":"the result contains the entire collection."}],"type":"paragraph"},{"syntax":null,"code":["let numbers = [1, 2, 3, 4, 5]","print(numbers.suffix(2))","\/\/ Prints \"[4, 5]\"","print(numbers.suffix(10))","\/\/ Prints \"[1, 2, 3, 4, 5]\""],"type":"codeListing"},{"style":"note","name":"Complexity","content":[{"inlineContent":[{"text":"O(1) if the collection conforms to","type":"text"},{"type":"text","text":" "},{"code":"RandomAccessCollection","type":"codeVoice"},{"text":"; otherwise, O(","type":"text"},{"inlineContent":[{"text":"k","type":"text"}],"type":"emphasis"},{"text":"), where ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"k","type":"text"}]},{"type":"text","text":" is equal to"},{"type":"text","text":" "},{"type":"codeVoice","code":"maxLength"},{"text":".","type":"text"}],"type":"paragraph"}],"type":"aside"}]}],"metadata":{"role":"symbol","modules":[{"name":"Compute","relatedModules":["Swift"]}],"extendedModule":"Swift","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"suffix"},{"kind":"text","text":"("},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sl11SubSequenceQa","text":"SubSequence"}],"title":"suffix(_:)","roleHeading":"Instance Method","externalID":"s:SKsE6suffixy11SubSequenceQzSiF::SYNTHESIZED::s:7Compute14BranchingArrayV"},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/BranchingArray":{"abstract":[],"navigatorTitle":[{"kind":"identifier","text":"BranchingArray"}],"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"BranchingArray"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BranchingArray","url":"\/documentation\/compute\/branchingarray","role":"symbol","title":"BranchingArray"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/BranchingArray/BidirectionalCollection-Implementations":{"role":"collectionGroup","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BranchingArray\/BidirectionalCollection-Implementations","type":"topic","kind":"article","title":"BidirectionalCollection Implementations","url":"\/documentation\/compute\/branchingarray\/bidirectionalcollection-implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/BranchingArray/suffix(_:)":{"type":"topic","role":"symbol","url":"\/documentation\/compute\/branchingarray\/suffix(_:)","title":"suffix(_:)","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BranchingArray\/suffix(_:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"suffix","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"SubSequence","preciseIdentifier":"s:Sl11SubSequenceQa","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Returns a subsequence, up to the given maximum length, containing the"},{"type":"text","text":" "},{"text":"final elements of the collection.","type":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Int":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","abstract":[{"type":"text","text":"A signed integer value type."}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Int","kind":"identifier"}],"navigatorTitle":[{"text":"Int","kind":"identifier"}],"title":"Int","url":"\/documentation\/compute\/int","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Collection/SubSequence":{"url":"\/documentation\/compute\/collection\/subsequence","title":"SubSequence","abstract":[{"type":"text","text":"A collection representing a contiguous subrange of this collectionâ€™s"},{"type":"text","text":" "},{"text":"elements. The subsequence shares indices with the original collection.","type":"text"}],"type":"topic","kind":"symbol","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SubSequence"},{"kind":"text","text":" : "},{"text":"Collection","preciseIdentifier":"s:Sl","kind":"typeIdentifier"},{"text":" = ","kind":"text"},{"text":"Slice","preciseIdentifier":"s:s5SliceV","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":">","kind":"text"}],"required":true,"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/SubSequence"}}}