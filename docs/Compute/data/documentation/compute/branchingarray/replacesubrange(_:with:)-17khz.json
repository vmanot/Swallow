{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/branchingarray\/replacesubrange(_:with:)-17khz"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BranchingArray\/replaceSubrange(_:with:)-17khz"},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"mutating","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"replaceSubrange","kind":"identifier"},{"text":"<","kind":"text"},{"text":"C","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"subrange"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Range","preciseIdentifier":"s:Sn","text":"Range","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":">, ","kind":"text"},{"text":"with","kind":"externalParam"},{"kind":"text","text":" "},{"text":"newElements","kind":"internalParam"},{"kind":"text","text":": "},{"text":"C","preciseIdentifier":"s:7Compute14BranchingArrayVAAs23ExpressibleByNilLiteralRzrlE15replaceSubrange_4withySnySiG_qd__t7ElementQyd__Rs_SlRd__lF1CL_qd__mfp","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"C"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","text":"Element","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":" : "},{"text":"Collection","preciseIdentifier":"s:Sl","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection","kind":"typeIdentifier"}],"languages":["swift"],"platforms":["macOS"]}]},{"parameters":[{"content":[{"inlineContent":[{"type":"text","text":"The subrange of the collection to replace. The bounds of"},{"text":" ","type":"text"},{"type":"text","text":"the range must be valid indices of the collection."}],"type":"paragraph"}],"name":"subrange"},{"name":"newElements","content":[{"inlineContent":[{"text":"The new elements to add to the collection.","type":"text"}],"type":"paragraph"}]}],"kind":"parameters"},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method has the effect of removing the specified range of elements"},{"text":" ","type":"text"},{"type":"text","text":"from the collection and inserting the new elements at the same location."},{"type":"text","text":" "},{"type":"text","text":"The number of new elements need not match the number of elements being"},{"text":" ","type":"text"},{"type":"text","text":"removed."}]},{"type":"paragraph","inlineContent":[{"text":"In this example, three elements in the middle of an array of integers are","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"replaced by the five elements of a "},{"type":"codeVoice","code":"Repeated<Int>"},{"type":"text","text":" instance."}]},{"code":[" var nums = [10, 20, 30, 40, 50]"," nums.replaceSubrange(1...3, with: repeatElement(1, count: 5))"," print(nums)"," \/\/ Prints \"[10, 1, 1, 1, 1, 1, 50]\""],"type":"codeListing","syntax":null},{"type":"paragraph","inlineContent":[{"text":"If you pass a zero-length range as the ","type":"text"},{"type":"codeVoice","code":"subrange"},{"type":"text","text":" parameter, this method"},{"text":" ","type":"text"},{"text":"inserts the elements of ","type":"text"},{"code":"newElements","type":"codeVoice"},{"text":" at ","type":"text"},{"code":"subrange.startIndex","type":"codeVoice"},{"text":". Calling","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the "},{"type":"codeVoice","code":"insert(contentsOf:at:)"},{"text":" method instead is preferred.","type":"text"}]},{"inlineContent":[{"type":"text","text":"Likewise, if you pass a zero-length collection as the "},{"type":"codeVoice","code":"newElements"},{"type":"text","text":" "},{"text":"parameter, this method removes the elements in the given subrange","type":"text"},{"type":"text","text":" "},{"text":"without replacement. Calling the ","type":"text"},{"code":"removeSubrange(_:)","type":"codeVoice"},{"text":" method instead is","type":"text"},{"type":"text","text":" "},{"type":"text","text":"preferred."}],"type":"paragraph"},{"inlineContent":[{"text":"Calling this method may invalidate any existing indices for use with this","type":"text"},{"type":"text","text":" "},{"text":"collection.","type":"text"}],"type":"paragraph"},{"style":"note","type":"aside","name":"Complexity","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"O("},{"inlineContent":[{"text":"n","type":"text"}],"type":"emphasis"},{"type":"text","text":" + "},{"inlineContent":[{"type":"text","text":"m"}],"type":"emphasis"},{"text":"), where ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"n","type":"text"}]},{"text":" is length of this collection and","type":"text"},{"type":"text","text":" "},{"type":"emphasis","inlineContent":[{"text":"m","type":"text"}]},{"text":" is the length of ","type":"text"},{"code":"newElements","type":"codeVoice"},{"type":"text","text":". If the call to this method simply"},{"text":" ","type":"text"},{"type":"text","text":"appends the contents of "},{"code":"newElements","type":"codeVoice"},{"text":" to the collection, this method is","type":"text"},{"text":" ","type":"text"},{"text":"equivalent to ","type":"text"},{"type":"codeVoice","code":"append(contentsOf:)"},{"type":"text","text":"."}]}]}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"replaceSubrange"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"C"},{"kind":"text","text":">("},{"preciseIdentifier":"s:Sn","kind":"typeIdentifier","text":"Range"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"with"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Compute14BranchingArrayVAAs23ExpressibleByNilLiteralRzrlE15replaceSubrange_4withySnySiG_qd__t7ElementQyd__Rs_SlRd__lF1CL_qd__mfp","text":"C","kind":"typeIdentifier"},{"kind":"text","text":")"}],"extendedModule":"Compute","role":"symbol","modules":[{"name":"Compute"}],"roleHeading":"Instance Method","symbolKind":"method","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Branch","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"ExpressibleByNilLiteral"},{"type":"text","text":", "},{"type":"codeVoice","code":"Branch"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"text":", and ","type":"text"},{"type":"codeVoice","code":"Element"},{"text":" conforms to ","type":"text"},{"code":"Equatable","type":"codeVoice"},{"text":".","type":"text"}]},"externalID":"s:7Compute14BranchingArrayVAAs23ExpressibleByNilLiteralRzrlE15replaceSubrange_4withySnySiG_qd__t7ElementQyd__Rs_SlRd__lF","title":"replaceSubrange(_:with:)"},"abstract":[{"type":"text","text":"Replaces the specified subrange of elements with the given collection."}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BranchingArray","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BranchingArray\/RangeReplaceableCollection-Implementations"]]},"kind":"symbol","references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Int":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","abstract":[{"type":"text","text":"A signed integer value type."}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Int","kind":"identifier"}],"navigatorTitle":[{"text":"Int","kind":"identifier"}],"title":"Int","url":"\/documentation\/compute\/int","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/BranchingArray/RangeReplaceableCollection-Implementations":{"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BranchingArray\/RangeReplaceableCollection-Implementations","abstract":[],"kind":"article","role":"collectionGroup","title":"RangeReplaceableCollection Implementations","url":"\/documentation\/compute\/branchingarray\/rangereplaceablecollection-implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/BranchingArray":{"abstract":[],"navigatorTitle":[{"kind":"identifier","text":"BranchingArray"}],"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"BranchingArray"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BranchingArray","url":"\/documentation\/compute\/branchingarray","role":"symbol","title":"BranchingArray"},"doc://com.swallow.documentation.Compute/documentation/Compute/Range":{"kind":"symbol","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Range","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Range","url":"\/documentation\/compute\/range","abstract":[{"text":"A half-open interval from a lower bound up to, but not including, an upper","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"bound."}],"navigatorTitle":[{"text":"Range","kind":"identifier"}],"title":"Range"},"doc://com.swallow.documentation.Compute/documentation/Compute/Collection":{"kind":"symbol","role":"symbol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Collection"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection","url":"\/documentation\/compute\/collection","abstract":[{"type":"text","text":"A sequence whose elements can be traversed multiple times,"},{"text":" ","type":"text"},{"text":"nondestructively, and accessed by an indexed subscript.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Collection"}],"title":"Collection"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/BranchingArray/replaceSubrange(_:with:)-17khz":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BranchingArray\/replaceSubrange(_:with:)-17khz","url":"\/documentation\/compute\/branchingarray\/replacesubrange(_:with:)-17khz","type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"replaceSubrange"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"C"},{"text":">(","kind":"text"},{"text":"Range","preciseIdentifier":"s:Sn","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"with"},{"text":": ","kind":"text"},{"text":"C","preciseIdentifier":"s:7Compute14BranchingArrayVAAs23ExpressibleByNilLiteralRzrlE15replaceSubrange_4withySnySiG_qd__t7ElementQyd__Rs_SlRd__lF1CL_qd__mfp","kind":"typeIdentifier"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Replaces the specified subrange of elements with the given collection."}],"kind":"symbol","title":"replaceSubrange(_:with:)","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Branch","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"ExpressibleByNilLiteral","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"Branch"},{"text":" conforms to ","type":"text"},{"code":"Hashable","type":"codeVoice"},{"type":"text","text":", and "},{"code":"Element","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Equatable"},{"text":".","type":"text"}]}},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence/Element":{"type":"topic","required":true,"abstract":[{"type":"text","text":"A type representing the sequence’s elements."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"symbol","url":"\/documentation\/compute\/sequence\/element","role":"symbol","title":"Element","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"identifier"}]}}}