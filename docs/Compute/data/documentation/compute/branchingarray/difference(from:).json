{"metadata":{"externalID":"s:SKsSQ7ElementRpzrlE10difference4froms20CollectionDifferenceVyABGqd___tSKRd__AAQyd__ABRSlF::SYNTHESIZED::s:7Compute14BranchingArrayV","role":"symbol","platforms":[{"deprecated":false,"introducedAt":"13.0","name":"iOS","unavailable":false,"beta":false},{"unavailable":false,"name":"macOS","deprecated":false,"beta":false,"introducedAt":"10.15"},{"name":"tvOS","introducedAt":"13.0","beta":false,"deprecated":false,"unavailable":false},{"introducedAt":"6.0","deprecated":false,"beta":false,"name":"watchOS","unavailable":false}],"modules":[{"relatedModules":["Swift"],"name":"Compute"}],"extendedModule":"Swift","conformance":{"constraints":[{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Equatable"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"difference","kind":"identifier"},{"kind":"text","text":"<"},{"text":"C","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"from"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"C"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"CollectionDifference","preciseIdentifier":"s:s20CollectionDifferenceV"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:ST7ElementQa","text":"Element","kind":"typeIdentifier"},{"text":">","kind":"text"}],"title":"difference(from:)","roleHeading":"Instance Method"},"abstract":[{"type":"text","text":"Returns the difference needed to produce this collection’s ordered"},{"type":"text","text":" "},{"text":"elements from the given collection.","type":"text"}],"kind":"symbol","sections":[],"schemaVersion":{"major":0,"patch":0,"minor":3},"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BranchingArray\/difference(from:)","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"difference","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"C"},{"kind":"text","text":">("},{"kind":"externalParam","text":"from"},{"text":" ","kind":"text"},{"text":"other","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"C"},{"text":") -> ","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CollectionDifference","preciseIdentifier":"s:s20CollectionDifferenceV","text":"CollectionDifference","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BidirectionalCollection","preciseIdentifier":"s:SK","text":"BidirectionalCollection"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"text":" == ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","preciseIdentifier":"s:ST7ElementQa","text":"Element"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The base state."}]}],"name":"other"}]},{"kind":"content","content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The difference needed to produce this collection’s ordered"},{"type":"text","text":" "},{"text":"elements from the given collection.","type":"text"}]}]},{"content":[{"anchor":"discussion","type":"heading","level":2,"text":"Discussion"},{"inlineContent":[{"type":"text","text":"This function does not infer element moves. If you need to infer moves,"},{"text":" ","type":"text"},{"type":"text","text":"call the "},{"code":"inferringMoves()","type":"codeVoice"},{"type":"text","text":" method on the resulting difference."}],"type":"paragraph"},{"content":[{"inlineContent":[{"type":"text","text":"Worst case performance is O("},{"inlineContent":[{"text":"n","type":"text"}],"type":"emphasis"},{"type":"text","text":" * "},{"type":"emphasis","inlineContent":[{"text":"m","type":"text"}]},{"text":"), where ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"n"}]},{"text":" is the","type":"text"},{"text":" ","type":"text"},{"text":"count of this collection and ","type":"text"},{"inlineContent":[{"type":"text","text":"m"}],"type":"emphasis"},{"type":"text","text":" is "},{"code":"other.count","type":"codeVoice"},{"text":". You can expect","type":"text"},{"type":"text","text":" "},{"type":"text","text":"faster execution when the collections share many common elements, or"},{"type":"text","text":" "},{"type":"text","text":"if "},{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"code":"Hashable","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}],"type":"aside","name":"Complexity","style":"note"}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BranchingArray","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BranchingArray\/BidirectionalCollection-Implementations"]]},"variants":[{"paths":["\/documentation\/compute\/branchingarray\/difference(from:)"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/CollectionDifference":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CollectionDifference","kind":"identifier"}],"url":"\/documentation\/compute\/collectiondifference","type":"topic","title":"CollectionDifference","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"CollectionDifference"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CollectionDifference","abstract":[{"type":"text","text":"A collection of insertions and removals that describe the difference"},{"text":" ","type":"text"},{"text":"between two ordered collection states.","type":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/BranchingArray/BidirectionalCollection-Implementations":{"role":"collectionGroup","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BranchingArray\/BidirectionalCollection-Implementations","type":"topic","kind":"article","title":"BidirectionalCollection Implementations","url":"\/documentation\/compute\/branchingarray\/bidirectionalcollection-implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/BranchingArray/difference(from:)":{"abstract":[{"type":"text","text":"Returns the difference needed to produce this collection’s ordered"},{"text":" ","type":"text"},{"text":"elements from the given collection.","type":"text"}],"title":"difference(from:)","conformance":{"constraints":[{"code":"Element","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Equatable","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"difference","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"C"},{"kind":"text","text":">("},{"kind":"externalParam","text":"from"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s20CollectionDifferenceV","text":"CollectionDifference"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier","text":"Element"},{"text":">","kind":"text"}],"type":"topic","url":"\/documentation\/compute\/branchingarray\/difference(from:)","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BranchingArray\/difference(from:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/BidirectionalCollection":{"navigatorTitle":[{"text":"BidirectionalCollection","kind":"identifier"}],"abstract":[{"text":"A collection that supports backward as well as forward traversal.","type":"text"}],"title":"BidirectionalCollection","kind":"symbol","url":"\/documentation\/compute\/bidirectionalcollection","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"BidirectionalCollection"}],"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BidirectionalCollection","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/BranchingArray":{"abstract":[],"navigatorTitle":[{"kind":"identifier","text":"BranchingArray"}],"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"BranchingArray"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BranchingArray","url":"\/documentation\/compute\/branchingarray","role":"symbol","title":"BranchingArray"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence/Element":{"type":"topic","required":true,"abstract":[{"type":"text","text":"A type representing the sequence’s elements."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"symbol","url":"\/documentation\/compute\/sequence\/element","role":"symbol","title":"Element","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"identifier"}]}}}