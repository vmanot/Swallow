{"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"mutating","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"replaceSubrange"},{"kind":"text","text":"<"},{"text":"C","kind":"genericParameter"},{"kind":"text","text":", "},{"text":"R","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"text":"subrange","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"with"},{"text":" ","kind":"text"},{"text":"newElements","kind":"internalParam"},{"kind":"text","text":": "},{"text":"C","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection","text":"Collection","preciseIdentifier":"s:Sl"},{"text":", ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:SX","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RangeExpression","text":"RangeExpression","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:ST7ElementQa","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","text":"Element","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"kind":"typeIdentifier","text":"C"},{"text":".","kind":"text"},{"text":"Element","preciseIdentifier":"s:ST7ElementQa","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/Index","preciseIdentifier":"s:Sl5IndexQa","text":"Index","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"kind":"typeIdentifier","text":"R"},{"kind":"text","text":"."},{"text":"Bound","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RangeExpression\/Bound","kind":"typeIdentifier","preciseIdentifier":"s:SX5BoundQa"}]}]},{"kind":"parameters","parameters":[{"name":"subrange","content":[{"inlineContent":[{"text":"The subrange of the collection to replace. The bounds of","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the range must be valid indices of the collection."}],"type":"paragraph"}]},{"name":"newElements","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The new elements to add to the collection."}]}]}]},{"content":[{"level":2,"text":"Discussion","anchor":"discussion","type":"heading"},{"inlineContent":[{"type":"text","text":"This method has the effect of removing the specified range of elements"},{"text":" ","type":"text"},{"text":"from the collection and inserting the new elements at the same location.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"The number of new elements need not match the number of elements being"},{"type":"text","text":" "},{"type":"text","text":"removed."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"In this example, three elements in the middle of an array of integers are"},{"type":"text","text":" "},{"type":"text","text":"replaced by the five elements of a "},{"code":"Repeated<Int>","type":"codeVoice"},{"text":" instance.","type":"text"}],"type":"paragraph"},{"code":[" var nums = [10, 20, 30, 40, 50]"," nums.replaceSubrange(1...3, with: repeatElement(1, count: 5))"," print(nums)"," \/\/ Prints \"[10, 1, 1, 1, 1, 1, 50]\""],"syntax":null,"type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"If you pass a zero-length range as the ","type":"text"},{"code":"subrange","type":"codeVoice"},{"text":" parameter, this method","type":"text"},{"type":"text","text":" "},{"text":"inserts the elements of ","type":"text"},{"code":"newElements","type":"codeVoice"},{"type":"text","text":" at "},{"type":"codeVoice","code":"subrange.startIndex"},{"type":"text","text":". Calling"},{"type":"text","text":" "},{"type":"text","text":"the "},{"type":"codeVoice","code":"insert(contentsOf:at:)"},{"text":" method instead is preferred.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"Likewise, if you pass a zero-length collection as the ","type":"text"},{"type":"codeVoice","code":"newElements"},{"text":" ","type":"text"},{"text":"parameter, this method removes the elements in the given subrange","type":"text"},{"type":"text","text":" "},{"text":"without replacement. Calling the ","type":"text"},{"type":"codeVoice","code":"removeSubrange(_:)"},{"type":"text","text":" method instead is"},{"type":"text","text":" "},{"text":"preferred.","type":"text"}]},{"inlineContent":[{"text":"Calling this method may invalidate any existing indices for use with this","type":"text"},{"type":"text","text":" "},{"type":"text","text":"collection."}],"type":"paragraph"},{"content":[{"inlineContent":[{"type":"text","text":"O("},{"inlineContent":[{"type":"text","text":"n"}],"type":"emphasis"},{"text":" + ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"m","type":"text"}]},{"type":"text","text":"), where "},{"inlineContent":[{"text":"n","type":"text"}],"type":"emphasis"},{"text":" is length of this collection and","type":"text"},{"type":"text","text":" "},{"type":"emphasis","inlineContent":[{"type":"text","text":"m"}]},{"type":"text","text":" is the length of "},{"type":"codeVoice","code":"newElements"},{"type":"text","text":". If the call to this method simply"},{"text":" ","type":"text"},{"type":"text","text":"appends the contents of "},{"type":"codeVoice","code":"newElements"},{"text":" to the collection, the complexity","type":"text"},{"text":" ","type":"text"},{"text":"is O(","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"m"}]},{"type":"text","text":")."}],"type":"paragraph"}],"name":"Complexity","style":"note","type":"aside"}],"kind":"content"}],"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BranchingArray\/replaceSubrange(_:with:)-5zua3","interfaceLanguage":"swift"},"metadata":{"symbolKind":"method","title":"replaceSubrange(_:with:)","externalID":"s:SmsE15replaceSubrange_4withyqd_0__qd__ntSlRd__SXRd_0_7ElementQyd__ACRtz5BoundQyd_0_5IndexRtzr0_lF::SYNTHESIZED::s:7Compute14BranchingArrayV","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"replaceSubrange","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"C"},{"text":", ","kind":"text"},{"text":"R","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"R"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"with"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"C"},{"text":")","kind":"text"}],"modules":[{"relatedModules":["Swift"],"name":"Compute"}],"roleHeading":"Instance Method","extendedModule":"Swift","role":"symbol"},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BranchingArray","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BranchingArray\/RangeReplaceableCollection-Implementations"]]},"kind":"symbol","variants":[{"paths":["\/documentation\/compute\/branchingarray\/replacesubrange(_:with:)-5zua3"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"sections":[],"abstract":[{"text":"Replaces the specified subrange of elements with the given collection.","type":"text"}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Collection":{"kind":"symbol","role":"symbol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Collection"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection","url":"\/documentation\/compute\/collection","abstract":[{"type":"text","text":"A sequence whose elements can be traversed multiple times,"},{"text":" ","type":"text"},{"text":"nondestructively, and accessed by an indexed subscript.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Collection"}],"title":"Collection"},"doc://com.swallow.documentation.Compute/documentation/Compute/BranchingArray":{"abstract":[],"navigatorTitle":[{"kind":"identifier","text":"BranchingArray"}],"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"BranchingArray"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BranchingArray","url":"\/documentation\/compute\/branchingarray","role":"symbol","title":"BranchingArray"},"doc://com.swallow.documentation.Compute/documentation/Compute/RangeExpression":{"abstract":[{"text":"A type that can be used to slice a collection.","type":"text"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"RangeExpression","kind":"identifier"}],"url":"\/documentation\/compute\/rangeexpression","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RangeExpression","kind":"symbol","title":"RangeExpression","role":"symbol","type":"topic","navigatorTitle":[{"text":"RangeExpression","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/RangeExpression/Bound":{"role":"symbol","type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RangeExpression\/Bound","title":"Bound","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"Bound"},{"kind":"text","text":" : "},{"text":"Comparable","kind":"typeIdentifier","preciseIdentifier":"s:SL"}],"url":"\/documentation\/compute\/rangeexpression\/bound","required":true,"abstract":[{"text":"The type for which the expression describes a range.","type":"text"}],"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence/Element":{"type":"topic","required":true,"abstract":[{"type":"text","text":"A type representing the sequence’s elements."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"symbol","url":"\/documentation\/compute\/sequence\/element","role":"symbol","title":"Element","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/BranchingArray/replaceSubrange(_:with:)-5zua3":{"title":"replaceSubrange(_:with:)","kind":"symbol","role":"symbol","type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BranchingArray\/replaceSubrange(_:with:)-5zua3","url":"\/documentation\/compute\/branchingarray\/replacesubrange(_:with:)-5zua3","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"replaceSubrange"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"C"},{"text":", ","kind":"text"},{"text":"R","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"with","kind":"externalParam"},{"kind":"text","text":": "},{"text":"C","kind":"typeIdentifier"},{"kind":"text","text":")"}],"abstract":[{"text":"Replaces the specified subrange of elements with the given collection.","type":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Collection/Index":{"url":"\/documentation\/compute\/collection\/index","required":true,"role":"symbol","title":"Index","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Index","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"Comparable","preciseIdentifier":"s:SL","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"A type that represents a position in the collection."}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/Index","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/BranchingArray/RangeReplaceableCollection-Implementations":{"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BranchingArray\/RangeReplaceableCollection-Implementations","abstract":[],"kind":"article","role":"collectionGroup","title":"RangeReplaceableCollection Implementations","url":"\/documentation\/compute\/branchingarray\/rangereplaceablecollection-implementations"}}}