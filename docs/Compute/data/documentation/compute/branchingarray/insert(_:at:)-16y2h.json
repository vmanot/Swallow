{"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"mutating","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"insert","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"newElement"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"Element","preciseIdentifier":"s:ST7ElementQa","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"at","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"i"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/Index","text":"Index","preciseIdentifier":"s:Sl5IndexQa","kind":"typeIdentifier"},{"text":")","kind":"text"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"name":"newElement","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The new element to insert into the collection."}]}]},{"name":"i","content":[{"inlineContent":[{"text":"The position at which to insert the new element.","type":"text"},{"type":"text","text":" "},{"code":"index","type":"codeVoice"},{"type":"text","text":" must be a valid index into the collection."}],"type":"paragraph"}]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"text":"Discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The new element is inserted before the element currently at the"},{"text":" ","type":"text"},{"type":"text","text":"specified index. If you pass the collection’s "},{"type":"codeVoice","code":"endIndex"},{"text":" property as","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the "},{"code":"index","type":"codeVoice"},{"text":" parameter, the new element is appended to the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"collection."}]},{"type":"codeListing","syntax":null,"code":["var numbers = [1, 2, 3, 4, 5]","numbers.insert(100, at: 3)","numbers.insert(200, at: numbers.endIndex)","","print(numbers)","\/\/ Prints \"[1, 2, 3, 100, 4, 5, 200]\""]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Calling this method may invalidate any existing indices for use with this"},{"text":" ","type":"text"},{"text":"collection.","type":"text"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"O("},{"type":"emphasis","inlineContent":[{"type":"text","text":"n"}]},{"text":"), where ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"n"}]},{"type":"text","text":" is the length of the collection. If"},{"text":" ","type":"text"},{"code":"i == endIndex","type":"codeVoice"},{"type":"text","text":", this method is equivalent to "},{"code":"append(_:)","type":"codeVoice"},{"text":".","type":"text"}]}],"name":"Complexity","style":"note","type":"aside"}]}],"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BranchingArray\/insert(_:at:)-16y2h"},"metadata":{"extendedModule":"Swift","title":"insert(_:at:)","externalID":"s:SmsE6insert_2aty7ElementQzn_5IndexQztF::SYNTHESIZED::s:7Compute14BranchingArrayV","modules":[{"name":"Compute","relatedModules":["Swift"]}],"symbolKind":"method","roleHeading":"Instance Method","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"insert"},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier","text":"Element"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"at"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Index","preciseIdentifier":"s:Sl5IndexQa","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BranchingArray","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BranchingArray\/RangeReplaceableCollection-Implementations"]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"variants":[{"paths":["\/documentation\/compute\/branchingarray\/insert(_:at:)-16y2h"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"Inserts a new element into the collection at the specified position."}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/BranchingArray/insert(_:at:)-16y2h":{"abstract":[{"type":"text","text":"Inserts a new element into the collection at the specified position."}],"url":"\/documentation\/compute\/branchingarray\/insert(_:at:)-16y2h","title":"insert(_:at:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BranchingArray\/insert(_:at:)-16y2h","role":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"insert","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"kind":"text","text":", "},{"text":"at","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Index","kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa"},{"kind":"text","text":")"}],"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/BranchingArray/RangeReplaceableCollection-Implementations":{"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BranchingArray\/RangeReplaceableCollection-Implementations","abstract":[],"kind":"article","role":"collectionGroup","title":"RangeReplaceableCollection Implementations","url":"\/documentation\/compute\/branchingarray\/rangereplaceablecollection-implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Collection/Index":{"url":"\/documentation\/compute\/collection\/index","required":true,"role":"symbol","title":"Index","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Index","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"Comparable","preciseIdentifier":"s:SL","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"A type that represents a position in the collection."}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/Index","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/BranchingArray":{"abstract":[],"navigatorTitle":[{"kind":"identifier","text":"BranchingArray"}],"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"BranchingArray"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BranchingArray","url":"\/documentation\/compute\/branchingarray","role":"symbol","title":"BranchingArray"},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence/Element":{"type":"topic","required":true,"abstract":[{"type":"text","text":"A type representing the sequence’s elements."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"symbol","url":"\/documentation\/compute\/sequence\/element","role":"symbol","title":"Element","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"identifier"}]}}}