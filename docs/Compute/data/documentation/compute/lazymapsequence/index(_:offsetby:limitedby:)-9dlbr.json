{"schemaVersion":{"major":0,"patch":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyMapSequence","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyMapSequence\/Collection-Implementations"]]},"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"index","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:s15LazyMapSequenceV","kind":"typeIdentifier","text":"LazyMapSequence"},{"text":"<","kind":"text"},{"text":"Base","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Element"},{"text":">.","kind":"text"},{"text":"Index","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"offsetBy"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"limitedBy"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s15LazyMapSequenceV","kind":"typeIdentifier","text":"LazyMapSequence"},{"text":"<","kind":"text"},{"text":"Base","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Element","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"text":"Index","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"LazyMapSequence","kind":"typeIdentifier","preciseIdentifier":"s:s15LazyMapSequenceV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Base"},{"text":", ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"text":"Index","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"roleHeading":"Instance Method","externalID":"s:s15LazyMapSequenceVsSlRzrlE5index_8offsetBy07limitedF05IndexQzSgAG_SiAGtF","modules":[{"name":"Compute","relatedModules":["Swift"]}],"symbolKind":"method","title":"index(_:offsetBy:limitedBy:)","extendedModule":"Swift","conformance":{"constraints":[{"code":"Base","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Collection"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol"},"sections":[],"abstract":[{"type":"text","text":"Returns an index that is the specified distance from the given index,"},{"text":" ","type":"text"},{"text":"unless that distance is beyond a given limiting index.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"index","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"i"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s15LazyMapSequenceV","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyMapSequence","text":"LazyMapSequence"},{"kind":"text","text":"<"},{"text":"Base","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Element","kind":"typeIdentifier"},{"kind":"text","text":">."},{"kind":"typeIdentifier","text":"Index"},{"text":", ","kind":"text"},{"text":"offsetBy","kind":"externalParam"},{"kind":"text","text":" "},{"text":"n","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","preciseIdentifier":"s:Si"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"limitedBy"},{"text":" ","kind":"text"},{"text":"limit","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyMapSequence","preciseIdentifier":"s:s15LazyMapSequenceV","text":"LazyMapSequence"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Base"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">."},{"kind":"typeIdentifier","text":"Index"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s15LazyMapSequenceV","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyMapSequence","text":"LazyMapSequence"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Base"},{"text":", ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"kind":"typeIdentifier","text":"Index"},{"text":"?","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}]},{"parameters":[{"name":"i","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A valid index of the collection."}]}]},{"name":"limit","content":[{"type":"paragraph","inlineContent":[{"text":"A valid index of the collection to use as a limit. If","type":"text"},{"type":"text","text":" "},{"code":"distance > 0","type":"codeVoice"},{"type":"text","text":", a limit that is less than "},{"code":"i","type":"codeVoice"},{"text":" has no effect.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Likewise, if "},{"type":"codeVoice","code":"distance < 0"},{"text":", a limit that is greater than ","type":"text"},{"type":"codeVoice","code":"i"},{"type":"text","text":" has no"},{"type":"text","text":" "},{"type":"text","text":"effect."}]}]}],"kind":"parameters"},{"content":[{"level":2,"type":"heading","anchor":"return-value","text":"Return Value"},{"type":"paragraph","inlineContent":[{"text":"An index offset by ","type":"text"},{"code":"distance","type":"codeVoice"},{"text":" from the index ","type":"text"},{"type":"codeVoice","code":"i"},{"text":", unless that","type":"text"},{"type":"text","text":" "},{"type":"text","text":"index would be beyond "},{"type":"codeVoice","code":"limit"},{"type":"text","text":" in the direction of movement. In that"},{"text":" ","type":"text"},{"text":"case, the method returns ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"}]}],"kind":"content"},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"The following example obtains an index advanced four positions from a","type":"text"},{"text":" ","type":"text"},{"text":"string’s starting index and then prints the character at that position.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"The operation doesn’t require going beyond the limiting "},{"type":"codeVoice","code":"s.endIndex"},{"type":"text","text":" "},{"type":"text","text":"value, so it succeeds."}]},{"syntax":null,"code":["let s = \"Swift\"","if let i = s.index(s.startIndex, offsetBy: 4, limitedBy: s.endIndex) {","    print(s[i])","}","\/\/ Prints \"t\""],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The next example attempts to retrieve an index six positions from"},{"type":"text","text":" "},{"type":"codeVoice","code":"s.startIndex"},{"text":" but fails, because that distance is beyond the index","type":"text"},{"text":" ","type":"text"},{"text":"passed as ","type":"text"},{"code":"limit","type":"codeVoice"},{"text":".","type":"text"}]},{"type":"codeListing","syntax":null,"code":["let j = s.index(s.startIndex, offsetBy: 6, limitedBy: s.endIndex)","print(j)","\/\/ Prints \"nil\""]},{"type":"paragraph","inlineContent":[{"text":"The value passed as ","type":"text"},{"type":"codeVoice","code":"distance"},{"type":"text","text":" must not offset "},{"code":"i","type":"codeVoice"},{"type":"text","text":" beyond the bounds of"},{"text":" ","type":"text"},{"type":"text","text":"the collection, unless the index passed as "},{"type":"codeVoice","code":"limit"},{"text":" prevents offsetting","type":"text"},{"type":"text","text":" "},{"type":"text","text":"beyond those bounds."}]},{"type":"aside","style":"note","content":[{"inlineContent":[{"type":"text","text":"O(1) if the collection conforms to"},{"type":"text","text":" "},{"code":"RandomAccessCollection","type":"codeVoice"},{"text":"; otherwise, O(","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"k"}]},{"text":"), where ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"k","type":"text"}]},{"text":" is the absolute","type":"text"},{"type":"text","text":" "},{"text":"value of ","type":"text"},{"code":"distance","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}],"name":"Complexity"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/lazymapsequence\/index(_:offsetby:limitedby:)-9dlbr"]}],"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyMapSequence\/index(_:offsetBy:limitedBy:)-9dlbr","interfaceLanguage":"swift"},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/LazyMapSequence/Collection-Implementations":{"url":"\/documentation\/compute\/lazymapsequence\/collection-implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyMapSequence\/Collection-Implementations","title":"Collection Implementations","kind":"article","role":"collectionGroup","type":"topic","abstract":[]},"doc://com.swallow.documentation.Compute/documentation/Compute/LazyMapSequence/index(_:offsetBy:limitedBy:)-9dlbr":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyMapSequence\/index(_:offsetBy:limitedBy:)-9dlbr","abstract":[{"type":"text","text":"Returns an index that is the specified distance from the given index,"},{"type":"text","text":" "},{"text":"unless that distance is beyond a given limiting index.","type":"text"}],"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"index"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"LazyMapSequence","preciseIdentifier":"s:s15LazyMapSequenceV"},{"text":"<","kind":"text"},{"text":"Base","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Element","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"text":"Index","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"offsetBy","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":", "},{"text":"limitedBy","kind":"externalParam"},{"kind":"text","text":": "},{"text":"LazyMapSequence","kind":"typeIdentifier","preciseIdentifier":"s:s15LazyMapSequenceV"},{"kind":"text","text":"<"},{"text":"Base","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"kind":"typeIdentifier","text":"Index"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:s15LazyMapSequenceV","kind":"typeIdentifier","text":"LazyMapSequence"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Base"},{"kind":"text","text":", "},{"text":"Element","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"text":"Index","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"url":"\/documentation\/compute\/lazymapsequence\/index(_:offsetby:limitedby:)-9dlbr","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Base"},{"type":"text","text":" conforms to "},{"code":"Collection","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"title":"index(_:offsetBy:limitedBy:)","role":"symbol","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","abstract":[{"type":"text","text":"A signed integer value type."}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Int","kind":"identifier"}],"navigatorTitle":[{"text":"Int","kind":"identifier"}],"title":"Int","url":"\/documentation\/compute\/int","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/LazyMapSequence":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyMapSequence","url":"\/documentation\/compute\/lazymapsequence","abstract":[{"type":"text","text":"A "},{"code":"Sequence","type":"codeVoice"},{"type":"text","text":" whose elements consist of those in a "},{"type":"codeVoice","code":"Base"},{"type":"text","text":" "},{"code":"Sequence","type":"codeVoice"},{"text":" passed through a transform function returning ","type":"text"},{"code":"Element","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"These elements are computed lazily, each time they’re read, by"},{"type":"text","text":" "},{"type":"text","text":"calling the transform function on a base element."}],"type":"topic","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LazyMapSequence","kind":"identifier"}],"navigatorTitle":[{"text":"LazyMapSequence","kind":"identifier"}],"kind":"symbol","title":"LazyMapSequence"}}}