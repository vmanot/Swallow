{"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"prefix","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"while"},{"text":" ","kind":"text"},{"text":"predicate","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" ("},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazySequenceProtocol\/Elements-swift.associatedtype","kind":"typeIdentifier","preciseIdentifier":"s:s20LazySequenceProtocolP8ElementsQa","text":"Elements"},{"kind":"text","text":"."},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","text":"Element","preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Bool","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:s23LazyPrefixWhileSequenceV","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyPrefixWhileSequence","text":"LazyPrefixWhileSequence"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Elements","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazySequenceProtocol\/Elements-swift.associatedtype","kind":"typeIdentifier","preciseIdentifier":"s:s20LazySequenceProtocolP8ElementsQa"},{"kind":"text","text":">"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"predicate","content":[{"type":"paragraph","inlineContent":[{"text":"A closure that takes an element of the sequence as","type":"text"},{"type":"text","text":" "},{"type":"text","text":"its argument and returns "},{"type":"codeVoice","code":"true"},{"text":" if the element should be included or","type":"text"},{"text":" ","type":"text"},{"code":"false","type":"codeVoice"},{"text":" otherwise. Once ","type":"text"},{"code":"predicate","type":"codeVoice"},{"type":"text","text":" returns "},{"type":"codeVoice","code":"false"},{"text":" it will not be","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"called again."}]}]}]}],"metadata":{"symbolKind":"method","roleHeading":"Instance Method","externalID":"s:s20LazySequenceProtocolPsE6prefix5whiles0a11PrefixWhileB0Vy8ElementsQzGSb7ElementQzc_tF::SYNTHESIZED::s:s15LazyMapSequenceV","role":"symbol","modules":[{"relatedModules":["Swift"],"name":"Compute"}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"prefix"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"while"},{"kind":"text","text":": ("},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:s20LazySequenceProtocolP8ElementsQa","text":"Elements","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:ST7ElementQa"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"LazyPrefixWhileSequence","preciseIdentifier":"s:s23LazyPrefixWhileSequenceV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s20LazySequenceProtocolP8ElementsQa","text":"Elements"},{"text":">","kind":"text"}],"extendedModule":"Swift","title":"prefix(while:)"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/lazymapsequence\/prefix(while:)"]}],"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyMapSequence\/prefix(while:)"},"kind":"symbol","abstract":[{"text":"Returns a lazy sequence of the initial consecutive elements that satisfy","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"predicate"},{"text":".","type":"text"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyMapSequence","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyMapSequence\/LazySequenceProtocol-Implementations"]]},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/LazyPrefixWhileSequence":{"type":"topic","role":"symbol","url":"\/documentation\/compute\/lazyprefixwhilesequence","title":"LazyPrefixWhileSequence","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"LazyPrefixWhileSequence"}],"abstract":[{"type":"text","text":"A sequence whose elements consist of the initial consecutive elements of"},{"text":" ","type":"text"},{"text":"some base sequence that satisfy a given predicate.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"LazyPrefixWhileSequence"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyPrefixWhileSequence"},"doc://com.swallow.documentation.Compute/documentation/Compute/LazySequenceProtocol/Elements-swift.associatedtype":{"required":true,"role":"symbol","abstract":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"Sequence"},{"type":"text","text":" that can contain the same elements as this one,"},{"text":" ","type":"text"},{"type":"text","text":"possibly with a simpler type."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazySequenceProtocol\/Elements-swift.associatedtype","type":"topic","kind":"symbol","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Elements","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"Sequence","preciseIdentifier":"s:ST","kind":"typeIdentifier"},{"text":" = ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"title":"Elements","url":"\/documentation\/compute\/lazysequenceprotocol\/elements-swift.associatedtype"},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence/Element":{"type":"topic","required":true,"abstract":[{"type":"text","text":"A type representing the sequenceâ€™s elements."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"symbol","url":"\/documentation\/compute\/sequence\/element","role":"symbol","title":"Element","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Bool":{"url":"\/documentation\/compute\/bool","role":"symbol","title":"Bool","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Bool","kind":"identifier"}],"abstract":[{"type":"text","text":"A value type whose instances are either "},{"type":"codeVoice","code":"true"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"false"},{"text":".","type":"text"}],"navigatorTitle":[{"text":"Bool","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bool","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/LazyMapSequence/LazySequenceProtocol-Implementations":{"abstract":[],"kind":"article","role":"collectionGroup","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyMapSequence\/LazySequenceProtocol-Implementations","type":"topic","url":"\/documentation\/compute\/lazymapsequence\/lazysequenceprotocol-implementations","title":"LazySequenceProtocol Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/LazyMapSequence/prefix(while:)":{"abstract":[{"text":"Returns a lazy sequence of the initial consecutive elements that satisfy","type":"text"},{"type":"text","text":" "},{"code":"predicate","type":"codeVoice"},{"type":"text","text":"."}],"type":"topic","role":"symbol","kind":"symbol","title":"prefix(while:)","url":"\/documentation\/compute\/lazymapsequence\/prefix(while:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyMapSequence\/prefix(while:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"prefix","kind":"identifier"},{"kind":"text","text":"("},{"text":"while","kind":"externalParam"},{"kind":"text","text":": ("},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:s20LazySequenceProtocolP8ElementsQa","kind":"typeIdentifier","text":"Elements"},{"text":".","kind":"text"},{"text":"Element","preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"LazyPrefixWhileSequence","preciseIdentifier":"s:s23LazyPrefixWhileSequenceV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s20LazySequenceProtocolP8ElementsQa","text":"Elements"},{"kind":"text","text":">"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/LazyMapSequence":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyMapSequence","url":"\/documentation\/compute\/lazymapsequence","abstract":[{"type":"text","text":"A "},{"code":"Sequence","type":"codeVoice"},{"type":"text","text":" whose elements consist of those in a "},{"type":"codeVoice","code":"Base"},{"type":"text","text":" "},{"code":"Sequence","type":"codeVoice"},{"text":" passed through a transform function returning ","type":"text"},{"code":"Element","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"These elements are computed lazily, each time theyâ€™re read, by"},{"type":"text","text":" "},{"type":"text","text":"calling the transform function on a base element."}],"type":"topic","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LazyMapSequence","kind":"identifier"}],"navigatorTitle":[{"text":"LazyMapSequence","kind":"identifier"}],"kind":"symbol","title":"LazyMapSequence"}}}