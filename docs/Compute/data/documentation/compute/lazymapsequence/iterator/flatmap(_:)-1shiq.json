{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyMapSequence\/Iterator\/flatMap(_:)-1shiq"},"schemaVersion":{"major":0,"patch":0,"minor":3},"sections":[],"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/lazymapsequence\/iterator\/flatmap(_:)-1shiq"]}],"metadata":{"roleHeading":"Instance Method","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"flatMap","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"SegmentOfResult"},{"text":">((","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:ST7ElementQa","text":"Element","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"SegmentOfResult","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"rethrows","kind":"keyword"},{"text":" -> [","kind":"text"},{"text":"SegmentOfResult","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:ST7ElementQa"},{"text":"]","kind":"text"}],"modules":[{"relatedModules":["Swift"],"name":"Compute"}],"symbolKind":"method","title":"flatMap(_:)","externalID":"s:STsE7flatMapySay7ElementQyd__Gqd__ABQzKXEKSTRd__lF::SYNTHESIZED::s:s15LazyMapSequenceV8IteratorV","extendedModule":"Swift"},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyMapSequence","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyMapSequence\/Sequence-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyMapSequence\/Iterator","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyMapSequence\/Iterator\/Sequence-Implementations"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"flatMap"},{"text":"<","kind":"text"},{"text":"SegmentOfResult","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"text":"transform","kind":"internalParam"},{"kind":"text","text":": ("},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Element","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"SegmentOfResult"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"kind":"text","text":" -> ["},{"kind":"typeIdentifier","text":"SegmentOfResult"},{"text":".","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:ST7ElementQa"},{"kind":"text","text":"] "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"SegmentOfResult"},{"text":" : ","kind":"text"},{"text":"Sequence","kind":"typeIdentifier","preciseIdentifier":"s:ST","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"name":"transform","content":[{"inlineContent":[{"type":"text","text":"A closure that accepts an element of this"},{"text":" ","type":"text"},{"type":"text","text":"sequence as its argument and returns a sequence or collection."}],"type":"paragraph"}]}]},{"kind":"content","content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"inlineContent":[{"text":"The resulting flattened array.","type":"text"}],"type":"paragraph"}]},{"content":[{"anchor":"discussion","type":"heading","text":"Discussion","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Use this method to receive a single-level collection when your"},{"text":" ","type":"text"},{"type":"text","text":"transformation produces a sequence or collection for each element."}]},{"type":"paragraph","inlineContent":[{"text":"In this example, note the difference in the result of using ","type":"text"},{"type":"codeVoice","code":"map"},{"type":"text","text":" and"},{"text":" ","type":"text"},{"code":"flatMap","type":"codeVoice"},{"type":"text","text":" with a transformation that returns an array."}]},{"code":["let numbers = [1, 2, 3, 4]","","let mapped = numbers.map { Array(repeating: $0, count: $0) }","\/\/ [[1], [2, 2], [3, 3, 3], [4, 4, 4, 4]]","","let flatMapped = numbers.flatMap { Array(repeating: $0, count: $0) }","\/\/ [1, 2, 2, 3, 3, 3, 4, 4, 4, 4]"],"type":"codeListing","syntax":null},{"type":"paragraph","inlineContent":[{"type":"text","text":"In fact, "},{"code":"s.flatMap(transform)","type":"codeVoice"},{"text":"  is equivalent to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"Array(s.map(transform).joined())"},{"text":".","type":"text"}]},{"content":[{"inlineContent":[{"type":"text","text":"O("},{"type":"emphasis","inlineContent":[{"text":"m","type":"text"}]},{"type":"text","text":" + "},{"inlineContent":[{"text":"n","type":"text"}],"type":"emphasis"},{"type":"text","text":"), where "},{"inlineContent":[{"text":"n","type":"text"}],"type":"emphasis"},{"type":"text","text":" is the length of this sequence"},{"text":" ","type":"text"},{"type":"text","text":"and "},{"type":"emphasis","inlineContent":[{"text":"m","type":"text"}]},{"type":"text","text":" is the length of the result."}],"type":"paragraph"}],"style":"note","type":"aside","name":"Complexity"}],"kind":"content"}],"abstract":[{"text":"Returns an array containing the concatenated results of calling the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"given transformation with each element of this sequence."}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/LazyMapSequence/Iterator":{"title":"LazyMapSequence.Iterator","kind":"symbol","role":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Base"},{"text":" conforms to ","type":"text"},{"code":"Sequence","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyMapSequence\/Iterator","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Iterator"}],"url":"\/documentation\/compute\/lazymapsequence\/iterator","type":"topic","navigatorTitle":[{"text":"Iterator","kind":"identifier"}],"abstract":[{"text":"A type that provides the sequenceâ€™s iteration interface and","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"encapsulates its iteration state."}]},"doc://com.swallow.documentation.Compute/documentation/Compute/LazyMapSequence/Sequence-Implementations":{"kind":"article","type":"topic","role":"collectionGroup","url":"\/documentation\/compute\/lazymapsequence\/sequence-implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyMapSequence\/Sequence-Implementations","title":"Sequence Implementations","abstract":[]},"doc://com.swallow.documentation.Compute/documentation/Compute/LazyMapSequence/Iterator/Sequence-Implementations":{"role":"collectionGroup","kind":"article","title":"Sequence Implementations","abstract":[],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyMapSequence\/Iterator\/Sequence-Implementations","url":"\/documentation\/compute\/lazymapsequence\/iterator\/sequence-implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/LazyMapSequence/Iterator/flatMap(_:)-1shiq":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyMapSequence\/Iterator\/flatMap(_:)-1shiq","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"flatMap"},{"kind":"text","text":"<"},{"text":"SegmentOfResult","kind":"genericParameter"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Element","preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"SegmentOfResult","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"text":" -> [","kind":"text"},{"kind":"typeIdentifier","text":"SegmentOfResult"},{"kind":"text","text":"."},{"preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier","text":"Element"},{"text":"]","kind":"text"}],"kind":"symbol","type":"topic","title":"flatMap(_:)","abstract":[{"type":"text","text":"Returns an array containing the concatenated results of calling the"},{"text":" ","type":"text"},{"type":"text","text":"given transformation with each element of this sequence."}],"url":"\/documentation\/compute\/lazymapsequence\/iterator\/flatmap(_:)-1shiq"},"doc://com.swallow.documentation.Compute/documentation/Compute/LazyMapSequence":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyMapSequence","url":"\/documentation\/compute\/lazymapsequence","abstract":[{"type":"text","text":"A "},{"code":"Sequence","type":"codeVoice"},{"type":"text","text":" whose elements consist of those in a "},{"type":"codeVoice","code":"Base"},{"type":"text","text":" "},{"code":"Sequence","type":"codeVoice"},{"text":" passed through a transform function returning ","type":"text"},{"code":"Element","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"These elements are computed lazily, each time theyâ€™re read, by"},{"type":"text","text":" "},{"type":"text","text":"calling the transform function on a base element."}],"type":"topic","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LazyMapSequence","kind":"identifier"}],"navigatorTitle":[{"text":"LazyMapSequence","kind":"identifier"}],"kind":"symbol","title":"LazyMapSequence"},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence/Element":{"type":"topic","required":true,"abstract":[{"type":"text","text":"A type representing the sequenceâ€™s elements."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"symbol","url":"\/documentation\/compute\/sequence\/element","role":"symbol","title":"Element","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence":{"url":"\/documentation\/compute\/sequence","navigatorTitle":[{"kind":"identifier","text":"Sequence"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence","title":"Sequence","kind":"symbol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Sequence","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"A type that provides sequential, iterated access to its elements."}]}}}