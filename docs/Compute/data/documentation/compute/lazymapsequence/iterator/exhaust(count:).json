{"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyMapSequence","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyMapSequence\/Sequence-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyMapSequence\/Iterator","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyMapSequence\/Iterator\/IteratorProtocol-Implementations"]]},"abstract":[{"type":"text","text":"Inherited from "},{"code":"IteratorProtocol.exhaust(count:)","type":"codeVoice"},{"type":"text","text":"."}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"mutating"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"exhaust"},{"text":"<","kind":"text"},{"text":"N","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"count"},{"text":": ","kind":"text"},{"text":"N","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/IteratorProtocol\/Element","preciseIdentifier":"s:St7ElementQa","kind":"typeIdentifier","text":"Element"},{"text":"? ","kind":"text"},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"N"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Numeric","text":"Numeric","kind":"typeIdentifier","preciseIdentifier":"s:Sj"},{"text":", ","kind":"text"},{"text":"N","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:Sx","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Strideable","text":"Strideable","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"N"},{"kind":"text","text":"."},{"preciseIdentifier":"s:Sx6StrideQa","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Strideable\/Stride","text":"Stride"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SignedInteger","preciseIdentifier":"s:SZ","text":"SignedInteger","kind":"typeIdentifier"}]}],"kind":"declarations"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/lazymapsequence\/iterator\/exhaust(count:)"]}],"metadata":{"extendedModule":"Swift","title":"exhaust(count:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"exhaust","kind":"identifier"},{"kind":"text","text":"<"},{"text":"N","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"count","kind":"externalParam"},{"kind":"text","text":": "},{"text":"N","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:St7ElementQa","text":"Element","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"modules":[{"name":"Compute","relatedModules":["Swift"]}],"roleHeading":"Instance Method","symbolKind":"method","externalID":"s:St7SwallowE7exhaust5count7ElementQzSgqd___tSjRd__SxRd__SZ6StrideSxRpd__lF::SYNTHESIZED::s:s15LazyMapSequenceV8IteratorV","role":"symbol"},"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyMapSequence\/Iterator\/exhaust(count:)","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"symbol","sections":[],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Strideable/Stride":{"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/compute\/strideable\/stride","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Strideable\/Stride","required":true,"fragments":[{"kind":"keyword","text":"associatedtype"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Stride"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SL","text":"Comparable"},{"text":", ","kind":"text"},{"text":"SignedNumeric","kind":"typeIdentifier","preciseIdentifier":"s:s13SignedNumericP"}],"abstract":[{"type":"text","text":"A type that represents the distance between two values."}],"title":"Stride"},"doc://com.swallow.documentation.Compute/documentation/Compute/IteratorProtocol/Element":{"fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"text":"Element","kind":"identifier"}],"type":"topic","url":"\/documentation\/compute\/iteratorprotocol\/element","abstract":[{"text":"The type of element traversed by the iterator.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/IteratorProtocol\/Element","title":"Element","kind":"symbol","required":true,"role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/LazyMapSequence/Iterator/exhaust(count:)":{"type":"topic","abstract":[],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyMapSequence\/Iterator\/exhaust(count:)","role":"symbol","title":"exhaust(count:)","url":"\/documentation\/compute\/lazymapsequence\/iterator\/exhaust(count:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"exhaust"},{"text":"<","kind":"text"},{"text":"N","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"count"},{"text":": ","kind":"text"},{"text":"N","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:St7ElementQa","text":"Element"},{"kind":"text","text":"?"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/LazyMapSequence/Iterator/IteratorProtocol-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyMapSequence\/Iterator\/IteratorProtocol-Implementations","type":"topic","abstract":[],"role":"collectionGroup","url":"\/documentation\/compute\/lazymapsequence\/iterator\/iteratorprotocol-implementations","title":"IteratorProtocol Implementations","kind":"article"},"doc://com.swallow.documentation.Compute/documentation/Compute/Strideable":{"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/compute\/strideable","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Strideable","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Strideable"}],"navigatorTitle":[{"text":"Strideable","kind":"identifier"}],"abstract":[{"type":"text","text":"A type representing continuous, one-dimensional values that can be offset"},{"type":"text","text":" "},{"type":"text","text":"and measured."}],"title":"Strideable"},"doc://com.swallow.documentation.Compute/documentation/Compute/SignedInteger":{"abstract":[{"type":"text","text":"An integer type that can represent both positive and negative values."}],"kind":"symbol","url":"\/documentation\/compute\/signedinteger","navigatorTitle":[{"kind":"identifier","text":"SignedInteger"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SignedInteger","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"SignedInteger","kind":"identifier"}],"title":"SignedInteger"},"doc://com.swallow.documentation.Compute/documentation/Compute/LazyMapSequence":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyMapSequence","url":"\/documentation\/compute\/lazymapsequence","abstract":[{"type":"text","text":"A "},{"code":"Sequence","type":"codeVoice"},{"type":"text","text":" whose elements consist of those in a "},{"type":"codeVoice","code":"Base"},{"type":"text","text":" "},{"code":"Sequence","type":"codeVoice"},{"text":" passed through a transform function returning ","type":"text"},{"code":"Element","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"These elements are computed lazily, each time theyâ€™re read, by"},{"type":"text","text":" "},{"type":"text","text":"calling the transform function on a base element."}],"type":"topic","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LazyMapSequence","kind":"identifier"}],"navigatorTitle":[{"text":"LazyMapSequence","kind":"identifier"}],"kind":"symbol","title":"LazyMapSequence"},"doc://com.swallow.documentation.Compute/documentation/Compute/LazyMapSequence/Sequence-Implementations":{"kind":"article","type":"topic","role":"collectionGroup","url":"\/documentation\/compute\/lazymapsequence\/sequence-implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyMapSequence\/Sequence-Implementations","title":"Sequence Implementations","abstract":[]},"doc://com.swallow.documentation.Compute/documentation/Compute/LazyMapSequence/Iterator":{"title":"LazyMapSequence.Iterator","kind":"symbol","role":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Base"},{"text":" conforms to ","type":"text"},{"code":"Sequence","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyMapSequence\/Iterator","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Iterator"}],"url":"\/documentation\/compute\/lazymapsequence\/iterator","type":"topic","navigatorTitle":[{"text":"Iterator","kind":"identifier"}],"abstract":[{"text":"A type that provides the sequenceâ€™s iteration interface and","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"encapsulates its iteration state."}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Numeric":{"abstract":[{"type":"text","text":"A type with values that support multiplication."}],"kind":"symbol","url":"\/documentation\/compute\/numeric","navigatorTitle":[{"text":"Numeric","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Numeric","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Numeric"}],"title":"Numeric"}}}