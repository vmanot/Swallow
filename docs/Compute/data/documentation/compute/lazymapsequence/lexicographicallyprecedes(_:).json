{"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyMapSequence","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyMapSequence\/Sequence-Implementations"]]},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"lexicographicallyPrecedes"},{"text":"<","kind":"text"},{"text":"OtherSequence","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"other"},{"kind":"text","text":": "},{"text":"OtherSequence","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bool","preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":" ","kind":"text"},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"OtherSequence"},{"text":" : ","kind":"text"},{"text":"Sequence","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence","preciseIdentifier":"s:ST"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"text":" == ","kind":"text"},{"kind":"typeIdentifier","text":"OtherSequence"},{"kind":"text","text":"."},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","text":"Element","preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier"}],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"other","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A sequence to compare to this sequence."}]}]}]},{"content":[{"type":"heading","text":"Return Value","level":2,"anchor":"return-value"},{"inlineContent":[{"type":"text","text":""},{"code":"true","type":"codeVoice"},{"text":" if this sequence precedes ","type":"text"},{"code":"other","type":"codeVoice"},{"type":"text","text":" in a dictionary"},{"type":"text","text":" "},{"type":"text","text":"ordering; otherwise, "},{"type":"codeVoice","code":"false"},{"text":".","type":"text"}],"type":"paragraph"}],"kind":"content"},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"This example uses the ","type":"text"},{"code":"lexicographicallyPrecedes","type":"codeVoice"},{"type":"text","text":" method to test which"},{"text":" ","type":"text"},{"text":"array of integers comes first in a lexicographical ordering.","type":"text"}]},{"code":["let a = [1, 2, 2, 2]","let b = [1, 2, 3, 4]","","print(a.lexicographicallyPrecedes(b))","\/\/ Prints \"true\"","print(b.lexicographicallyPrecedes(b))","\/\/ Prints \"false\""],"type":"codeListing","syntax":null},{"type":"aside","style":"note","name":"Note","content":[{"inlineContent":[{"type":"text","text":"This method implements the mathematical notion of lexicographical"},{"text":" ","type":"text"},{"type":"text","text":"ordering, which has no connection to Unicode.  If you are sorting"},{"text":" ","type":"text"},{"type":"text","text":"strings to present to the end user, use "},{"type":"codeVoice","code":"String"},{"type":"text","text":" APIs that"},{"type":"text","text":" "},{"type":"text","text":"perform localized comparison."}],"type":"paragraph"}]},{"style":"note","type":"aside","name":"Complexity","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"O("},{"inlineContent":[{"type":"text","text":"m"}],"type":"emphasis"},{"text":"), where ","type":"text"},{"inlineContent":[{"type":"text","text":"m"}],"type":"emphasis"},{"type":"text","text":" is the lesser of the length of the"},{"type":"text","text":" "},{"type":"text","text":"sequence and the length of "},{"type":"codeVoice","code":"other"},{"text":".","type":"text"}]}]}]}],"abstract":[{"text":"Returns a Boolean value indicating whether the sequence precedes another","type":"text"},{"text":" ","type":"text"},{"text":"sequence in a lexicographical (dictionary) ordering, using the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"less-than operator ("},{"code":"<","type":"codeVoice"},{"type":"text","text":") to compare elements."}],"metadata":{"role":"symbol","title":"lexicographicallyPrecedes(_:)","symbolKind":"method","externalID":"s:STsSL7ElementRpzrlE25lexicographicallyPrecedesySbqd__STRd__AAQyd__ABRSlF::SYNTHESIZED::s:s15LazyMapSequenceV","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"lexicographicallyPrecedes"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"OtherSequence"},{"text":">(","kind":"text"},{"text":"OtherSequence","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"modules":[{"name":"Compute","relatedModules":["Swift"]}],"extendedModule":"Swift","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Element"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Comparable"},{"type":"text","text":"."}]},"roleHeading":"Instance Method"},"sections":[],"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyMapSequence\/lexicographicallyPrecedes(_:)","interfaceLanguage":"swift"},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/lazymapsequence\/lexicographicallyprecedes(_:)"]}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Bool":{"url":"\/documentation\/compute\/bool","role":"symbol","title":"Bool","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Bool","kind":"identifier"}],"abstract":[{"type":"text","text":"A value type whose instances are either "},{"type":"codeVoice","code":"true"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"false"},{"text":".","type":"text"}],"navigatorTitle":[{"text":"Bool","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bool","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/LazyMapSequence/lexicographicallyPrecedes(_:)":{"abstract":[{"text":"Returns a Boolean value indicating whether the sequence precedes another","type":"text"},{"type":"text","text":" "},{"text":"sequence in a lexicographical (dictionary) ordering, using the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"less-than operator ("},{"type":"codeVoice","code":"<"},{"type":"text","text":") to compare elements."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"lexicographicallyPrecedes","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"OtherSequence"},{"kind":"text","text":">("},{"text":"OtherSequence","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"url":"\/documentation\/compute\/lazymapsequence\/lexicographicallyprecedes(_:)","role":"symbol","title":"lexicographicallyPrecedes(_:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyMapSequence\/lexicographicallyPrecedes(_:)","type":"topic","kind":"symbol","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Element","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Comparable","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]}},"doc://com.swallow.documentation.Compute/documentation/Compute/LazyMapSequence/Sequence-Implementations":{"kind":"article","type":"topic","role":"collectionGroup","url":"\/documentation\/compute\/lazymapsequence\/sequence-implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyMapSequence\/Sequence-Implementations","title":"Sequence Implementations","abstract":[]},"doc://com.swallow.documentation.Compute/documentation/Compute/LazyMapSequence":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyMapSequence","url":"\/documentation\/compute\/lazymapsequence","abstract":[{"type":"text","text":"A "},{"code":"Sequence","type":"codeVoice"},{"type":"text","text":" whose elements consist of those in a "},{"type":"codeVoice","code":"Base"},{"type":"text","text":" "},{"code":"Sequence","type":"codeVoice"},{"text":" passed through a transform function returning ","type":"text"},{"code":"Element","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"These elements are computed lazily, each time theyâ€™re read, by"},{"type":"text","text":" "},{"type":"text","text":"calling the transform function on a base element."}],"type":"topic","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LazyMapSequence","kind":"identifier"}],"navigatorTitle":[{"text":"LazyMapSequence","kind":"identifier"}],"kind":"symbol","title":"LazyMapSequence"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence/Element":{"type":"topic","required":true,"abstract":[{"type":"text","text":"A type representing the sequenceâ€™s elements."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"symbol","url":"\/documentation\/compute\/sequence\/element","role":"symbol","title":"Element","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence":{"url":"\/documentation\/compute\/sequence","navigatorTitle":[{"kind":"identifier","text":"Sequence"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence","title":"Sequence","kind":"symbol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Sequence","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"A type that provides sequential, iterated access to its elements."}]}}}