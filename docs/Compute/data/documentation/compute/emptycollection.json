{"metadata":{"roleHeading":"Structure","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"EmptyCollection","kind":"identifier"}],"navigatorTitle":[{"text":"EmptyCollection","kind":"identifier"}],"modules":[{"name":"Compute"}],"title":"EmptyCollection","externalID":"s:s15EmptyCollectionV","role":"symbol","symbolKind":"struct"},"kind":"symbol","sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/EmptyCollection"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"@frozen","kind":"attribute"},{"kind":"text","text":" "},{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"EmptyCollection","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Element","kind":"genericParameter"},{"kind":"text","text":">"}]}]}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute"]]},"variants":[{"paths":["\/documentation\/compute\/emptycollection"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"type":"text","text":"A collection whose element type is "},{"type":"codeVoice","code":"Element"},{"text":" but that is always empty.","type":"text"}],"topicSections":[{"generated":true,"identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/EmptyCollection\/init()"],"title":"Initializers","anchor":"Initializers"},{"title":"Default Implementations","identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/EmptyCollection\/BidirectionalCollection-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/EmptyCollection\/Collection-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/EmptyCollection\/Equatable-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/EmptyCollection\/MutableCollection-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/EmptyCollection\/RandomAccessCollection-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/EmptyCollection\/Sequence-Implementations"],"generated":true,"anchor":"Default-Implementations"}],"relationshipsSections":[{"type":"conformsTo","identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BidirectionalCollection","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BitwiseCopyable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Copyable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Equatable","doc:\/\/com.swallow.documentation.Compute\/10Foundation15ContiguousBytesP","doc:\/\/com.swallow.documentation.Compute\/10Foundation12DataProtocolP","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/MutableCollection","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RandomAccessCollection","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sendable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence","doc:\/\/com.swallow.documentation.Compute\/7Swallow9CountableP","doc:\/\/com.swallow.documentation.Compute\/7Swallow9InitiableP"],"kind":"relationships","title":"Conforms To"}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/EmptyCollection/Equatable-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/EmptyCollection\/Equatable-Implementations","kind":"article","role":"collectionGroup","type":"topic","url":"\/documentation\/compute\/emptycollection\/equatable-implementations","abstract":[],"title":"Equatable Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/EmptyCollection/Collection-Implementations":{"type":"topic","kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/EmptyCollection\/Collection-Implementations","title":"Collection Implementations","url":"\/documentation\/compute\/emptycollection\/collection-implementations","abstract":[],"role":"collectionGroup"},"doc://com.swallow.documentation.Compute/documentation/Compute/BidirectionalCollection":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BidirectionalCollection","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BidirectionalCollection","kind":"identifier"}],"kind":"symbol","role":"symbol","type":"topic","url":"\/documentation\/compute\/bidirectionalcollection","abstract":[{"type":"text","text":"A collection that supports backward as well as forward traversal."}],"navigatorTitle":[{"kind":"identifier","text":"BidirectionalCollection"}],"title":"BidirectionalCollection","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"code":"Copyable","type":"codeVoice"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Escapable"},{"type":"text","text":"."}]}},"doc://com.swallow.documentation.Compute/documentation/Compute/RandomAccessCollection":{"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Element"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Copyable"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Escapable"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"role":"symbol","type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RandomAccessCollection","navigatorTitle":[{"kind":"identifier","text":"RandomAccessCollection"}],"kind":"symbol","abstract":[{"text":"A collection that supports efficient random-access index traversal.","type":"text"}],"title":"RandomAccessCollection","url":"\/documentation\/compute\/randomaccesscollection","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RandomAccessCollection"}]},"doc://com.swallow.documentation.Compute/10Foundation15ContiguousBytesP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/10Foundation15ContiguousBytesP","title":"Foundation.ContiguousBytes","type":"unresolvable"},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Sequence","kind":"identifier"}],"role":"symbol","kind":"symbol","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Element"},{"text":" conforms to ","type":"text"},{"code":"Copyable","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"Escapable","type":"codeVoice"},{"text":".","type":"text"}]},"navigatorTitle":[{"text":"Sequence","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"A type that provides sequential, iterated access to its elements."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence","url":"\/documentation\/compute\/sequence","title":"Sequence"},"doc://com.swallow.documentation.Compute/7Swallow9InitiableP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow9InitiableP","title":"Swallow.Initiable","type":"unresolvable"},"doc://com.swallow.documentation.Compute/10Foundation12DataProtocolP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/10Foundation12DataProtocolP","title":"Foundation.DataProtocol","type":"unresolvable"},"doc://com.swallow.documentation.Compute/documentation/Compute/EmptyCollection/BidirectionalCollection-Implementations":{"role":"collectionGroup","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/EmptyCollection\/BidirectionalCollection-Implementations","url":"\/documentation\/compute\/emptycollection\/bidirectionalcollection-implementations","type":"topic","kind":"article","title":"BidirectionalCollection Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/Copyable":{"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Copyable"}],"role":"symbol","kind":"symbol","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Element"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Copyable"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Escapable"},{"text":".","type":"text"}]},"navigatorTitle":[{"text":"Copyable","kind":"identifier"}],"type":"topic","abstract":[{"text":"A type whose values can be implicitly or explicitly copied.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Copyable","url":"\/documentation\/compute\/copyable","title":"Copyable"},"doc://com.swallow.documentation.Compute/documentation/Compute/EmptyCollection":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"EmptyCollection"}],"role":"symbol","kind":"symbol","navigatorTitle":[{"text":"EmptyCollection","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"A collection whose element type is "},{"type":"codeVoice","code":"Element"},{"text":" but that is always empty.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/EmptyCollection","url":"\/documentation\/compute\/emptycollection","title":"EmptyCollection"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/BitwiseCopyable":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BitwiseCopyable","kind":"symbol","url":"\/documentation\/compute\/bitwisecopyable","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"BitwiseCopyable","kind":"identifier"}],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Element","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Copyable","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Escapable"},{"type":"text","text":"."}]},"role":"symbol","abstract":[],"title":"BitwiseCopyable","navigatorTitle":[{"kind":"identifier","text":"BitwiseCopyable"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Sendable":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sendable","kind":"symbol","url":"\/documentation\/compute\/sendable","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Sendable"}],"conformance":{"constraints":[{"code":"Element","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Copyable","type":"codeVoice"},{"type":"text","text":" and "},{"code":"Escapable","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"role":"symbol","abstract":[],"title":"Sendable","navigatorTitle":[{"kind":"identifier","text":"Sendable"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/EmptyCollection/MutableCollection-Implementations":{"kind":"article","title":"MutableCollection Implementations","abstract":[],"role":"collectionGroup","type":"topic","url":"\/documentation\/compute\/emptycollection\/mutablecollection-implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/EmptyCollection\/MutableCollection-Implementations"},"doc://com.swallow.documentation.Compute/7Swallow9CountableP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow9CountableP","title":"Swallow.Countable","type":"unresolvable"},"doc://com.swallow.documentation.Compute/documentation/Compute/EmptyCollection/Sequence-Implementations":{"role":"collectionGroup","kind":"article","type":"topic","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/EmptyCollection\/Sequence-Implementations","url":"\/documentation\/compute\/emptycollection\/sequence-implementations","title":"Sequence Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/Collection":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Collection"}],"kind":"symbol","role":"symbol","type":"topic","url":"\/documentation\/compute\/collection","abstract":[{"type":"text","text":"A sequence whose elements can be traversed multiple times,"},{"type":"text","text":" "},{"text":"nondestructively, and accessed by an indexed subscript.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Collection"}],"title":"Collection","conformance":{"constraints":[{"code":"Element","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Copyable"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Escapable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]}},"doc://com.swallow.documentation.Compute/documentation/Compute/MutableCollection":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/MutableCollection","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"MutableCollection","kind":"identifier"}],"kind":"symbol","role":"symbol","type":"topic","url":"\/documentation\/compute\/mutablecollection","abstract":[{"type":"text","text":"A collection that supports subscript assignment."}],"navigatorTitle":[{"kind":"identifier","text":"MutableCollection"}],"title":"MutableCollection","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Copyable"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Escapable"},{"text":".","type":"text"}]}},"doc://com.swallow.documentation.Compute/documentation/Compute/Equatable":{"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Element","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Copyable"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Escapable"},{"text":".","type":"text"}]},"title":"Equatable","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Equatable"}],"navigatorTitle":[{"kind":"identifier","text":"Equatable"}],"url":"\/documentation\/compute\/equatable","abstract":[{"type":"text","text":"A type that can be compared for value equality."}],"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Equatable","type":"topic","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/EmptyCollection/RandomAccessCollection-Implementations":{"kind":"article","role":"collectionGroup","title":"RandomAccessCollection Implementations","type":"topic","url":"\/documentation\/compute\/emptycollection\/randomaccesscollection-implementations","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/EmptyCollection\/RandomAccessCollection-Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/EmptyCollection/init()":{"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/EmptyCollection\/init()","url":"\/documentation\/compute\/emptycollection\/init()","title":"init()","role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"abstract":[],"type":"topic"}}}