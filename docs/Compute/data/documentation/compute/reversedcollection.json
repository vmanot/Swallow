{"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute"]]},"relationshipsSections":[{"identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BidirectionalCollection","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Copyable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazySequenceProtocol","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RandomAccessCollection","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sendable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence"],"title":"Conforms To","type":"conformsTo","kind":"relationships"}],"metadata":{"modules":[{"name":"Compute"}],"symbolKind":"struct","role":"symbol","roleHeading":"Structure","title":"ReversedCollection","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ReversedCollection"}],"externalID":"s:s18ReversedCollectionV","navigatorTitle":[{"text":"ReversedCollection","kind":"identifier"}]},"schemaVersion":{"patch":0,"major":0,"minor":3},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"attribute","text":"@frozen"},{"kind":"text","text":" "},{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"ReversedCollection","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Base","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Base","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BidirectionalCollection","preciseIdentifier":"s:SK","text":"BidirectionalCollection","kind":"typeIdentifier"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"level":2,"anchor":"overview","type":"heading","text":"Overview"},{"style":"note","name":"Note","type":"aside","content":[{"inlineContent":[{"type":"text","text":"This type is the result of "},{"code":"x.reversed()","type":"codeVoice"},{"type":"text","text":" where "},{"code":"x","type":"codeVoice"},{"type":"text","text":" is a"},{"type":"text","text":" "},{"type":"text","text":"collection having bidirectional indices."}],"type":"paragraph"}]},{"inlineContent":[{"text":"The ","type":"text"},{"code":"reversed()","type":"codeVoice"},{"type":"text","text":" method is always lazy when applied to a collection"},{"type":"text","text":" "},{"type":"text","text":"with bidirectional indices, but does not implicitly confer"},{"type":"text","text":" "},{"text":"laziness on algorithms applied to its result.  In other words, for","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"ordinary collections "},{"type":"codeVoice","code":"c"},{"text":" having bidirectional indices:","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"code":"c.reversed()","type":"codeVoice"},{"text":" does not create new storage","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"c.reversed().map(f)","type":"codeVoice"},{"type":"text","text":" maps eagerly and returns a new array"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"c.lazy.reversed().map(f)","type":"codeVoice"},{"text":" maps lazily and returns a ","type":"text"},{"code":"LazyMapCollection","type":"codeVoice"}]}]}]}],"kind":"content"}],"kind":"symbol","topicSections":[{"title":"Instance Methods","anchor":"Instance-Methods","identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ReversedCollection\/reversed()"],"generated":true},{"anchor":"Default-Implementations","title":"Default Implementations","generated":true,"identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ReversedCollection\/BidirectionalCollection-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ReversedCollection\/Collection-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ReversedCollection\/LazySequenceProtocol-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ReversedCollection\/RandomAccessCollection-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ReversedCollection\/Sequence-Implementations"]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/reversedcollection"]}],"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ReversedCollection","interfaceLanguage":"swift"},"sections":[],"abstract":[{"type":"text","text":"A collection that presents the elements of its base collection"},{"text":" ","type":"text"},{"text":"in reverse order.","type":"text"}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/RandomAccessCollection":{"type":"topic","navigatorTitle":[{"kind":"identifier","text":"RandomAccessCollection"}],"abstract":[{"text":"A collection that supports efficient random-access index traversal.","type":"text"}],"kind":"symbol","role":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Base","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"RandomAccessCollection"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"title":"RandomAccessCollection","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"RandomAccessCollection","kind":"identifier"}],"url":"\/documentation\/compute\/randomaccesscollection","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RandomAccessCollection"},"doc://com.swallow.documentation.Compute/documentation/Compute/ReversedCollection/RandomAccessCollection-Implementations":{"title":"RandomAccessCollection Implementations","role":"collectionGroup","url":"\/documentation\/compute\/reversedcollection\/randomaccesscollection-implementations","kind":"article","type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ReversedCollection\/RandomAccessCollection-Implementations","abstract":[]},"doc://com.swallow.documentation.Compute/documentation/Compute/Copyable":{"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"Copyable","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Copyable","url":"\/documentation\/compute\/copyable","title":"Copyable","navigatorTitle":[{"text":"Copyable","kind":"identifier"}],"type":"topic","conformance":{"constraints":[{"type":"codeVoice","code":"Base"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"BidirectionalCollection"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"kind":"symbol","abstract":[{"text":"A type whose values can be implicitly or explicitly copied.","type":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/ReversedCollection/reversed()":{"abstract":[{"type":"text","text":"Reversing a reversed collection returns the original collection."}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"reversed"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Base"}],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Base","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"BidirectionalCollection"},{"type":"text","text":"."}]},"type":"topic","url":"\/documentation\/compute\/reversedcollection\/reversed()","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ReversedCollection\/reversed()","kind":"symbol","title":"reversed()","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Sendable":{"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Base"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"BidirectionalCollection"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"role":"symbol","title":"Sendable","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Sendable"}],"url":"\/documentation\/compute\/sendable","type":"topic","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sendable","navigatorTitle":[{"kind":"identifier","text":"Sendable"}],"abstract":[]},"doc://com.swallow.documentation.Compute/documentation/Compute/ReversedCollection/LazySequenceProtocol-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ReversedCollection\/LazySequenceProtocol-Implementations","title":"LazySequenceProtocol Implementations","url":"\/documentation\/compute\/reversedcollection\/lazysequenceprotocol-implementations","type":"topic","abstract":[],"kind":"article","role":"collectionGroup"},"doc://com.swallow.documentation.Compute/documentation/Compute/ReversedCollection":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"ReversedCollection","kind":"identifier"}],"url":"\/documentation\/compute\/reversedcollection","kind":"symbol","abstract":[{"type":"text","text":"A collection that presents the elements of its base collection"},{"text":" ","type":"text"},{"text":"in reverse order.","type":"text"}],"title":"ReversedCollection","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ReversedCollection","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ReversedCollection"}],"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/ReversedCollection/Collection-Implementations":{"abstract":[],"title":"Collection Implementations","type":"topic","role":"collectionGroup","kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ReversedCollection\/Collection-Implementations","url":"\/documentation\/compute\/reversedcollection\/collection-implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence":{"title":"Sequence","role":"symbol","url":"\/documentation\/compute\/sequence","kind":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Base","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"RandomAccessCollection","type":"codeVoice"},{"type":"text","text":"."}]},"type":"topic","navigatorTitle":[{"kind":"identifier","text":"Sequence"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence","abstract":[{"type":"text","text":"A type that provides sequential, iterated access to its elements."}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Sequence"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/ReversedCollection/Sequence-Implementations":{"url":"\/documentation\/compute\/reversedcollection\/sequence-implementations","kind":"article","abstract":[],"title":"Sequence Implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ReversedCollection\/Sequence-Implementations","role":"collectionGroup","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/ReversedCollection/BidirectionalCollection-Implementations":{"kind":"article","title":"BidirectionalCollection Implementations","abstract":[],"role":"collectionGroup","type":"topic","url":"\/documentation\/compute\/reversedcollection\/bidirectionalcollection-implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ReversedCollection\/BidirectionalCollection-Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/Collection":{"url":"\/documentation\/compute\/collection","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"Collection","kind":"identifier"}],"title":"Collection","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection","abstract":[{"type":"text","text":"A sequence whose elements can be traversed multiple times,"},{"type":"text","text":" "},{"text":"nondestructively, and accessed by an indexed subscript.","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Collection"}],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Base","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"BidirectionalCollection"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/LazySequenceProtocol":{"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Base"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"BidirectionalCollection"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"LazySequenceProtocol"},{"text":".","type":"text"}]},"role":"symbol","title":"LazySequenceProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LazySequenceProtocol"}],"url":"\/documentation\/compute\/lazysequenceprotocol","type":"topic","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazySequenceProtocol","navigatorTitle":[{"text":"LazySequenceProtocol","kind":"identifier"}],"abstract":[{"text":"A sequence on which normally-eager sequence operations are implemented","type":"text"},{"type":"text","text":" "},{"type":"text","text":"lazily."}]},"doc://com.swallow.documentation.Compute/documentation/Compute/BidirectionalCollection":{"title":"BidirectionalCollection","url":"\/documentation\/compute\/bidirectionalcollection","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"BidirectionalCollection"}],"kind":"symbol","conformance":{"constraints":[{"code":"Base","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"RandomAccessCollection"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BidirectionalCollection","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"BidirectionalCollection"}],"type":"topic","abstract":[{"type":"text","text":"A collection that supports backward as well as forward traversal."}]}}}