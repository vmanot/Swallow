{"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/withUnsafePointer(to:_:)-9fjn6","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/withunsafepointer(to:_:)-9fjn6"]}],"metadata":{"title":"withUnsafePointer(to:_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"withUnsafePointer"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":", "},{"text":"E","kind":"genericParameter"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"Result"},{"text":">(","kind":"text"},{"text":"to","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"text":"T","kind":"typeIdentifier"},{"text":", (","kind":"text"},{"preciseIdentifier":"s:SP","kind":"typeIdentifier","text":"UnsafePointer"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":">) "},{"text":"throws","kind":"keyword"},{"kind":"text","text":"("},{"text":"E","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Result","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"text":"(","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Result","kind":"typeIdentifier"}],"roleHeading":"Function","role":"symbol","symbolKind":"func","modules":[{"name":"Compute"}],"externalID":"s:s17withUnsafePointer2to_q0_xz_q0_SPyxGq_YKXEtq_YKs5ErrorR_Ri_zRi_0_r1_lF"},"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"withUnsafePointer","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"E"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"Result"},{"kind":"text","text":">("},{"text":"to","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"value"},{"text":": ","kind":"text"},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"body","kind":"internalParam"},{"text":": (","kind":"text"},{"text":"UnsafePointer","kind":"typeIdentifier","preciseIdentifier":"s:SP","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafePointer"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"text":">) ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"E"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Result"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":"(","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":" "},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"E"},{"kind":"text","text":" : "},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Error","preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier","text":"Error"},{"kind":"text","text":", "},{"text":"T","kind":"typeIdentifier"},{"text":" : ~Copyable, ","kind":"text"},{"kind":"typeIdentifier","text":"Result"},{"text":" : ~Copyable","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"text":"An instance to temporarily use via pointer. Note that the ","type":"text"},{"type":"codeVoice","code":"inout"},{"type":"text","text":" "},{"text":"exclusivity rules mean that, like any other ","type":"text"},{"type":"codeVoice","code":"inout"},{"type":"text","text":" argument, "},{"type":"codeVoice","code":"value"},{"type":"text","text":" "},{"text":"cannot be directly accessed by other code for the duration of ","type":"text"},{"type":"codeVoice","code":"body"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Access must only occur through the pointer argument to ","type":"text"},{"code":"body","type":"codeVoice"},{"type":"text","text":" until"},{"text":" ","type":"text"},{"type":"codeVoice","code":"body"},{"text":" returns.","type":"text"}],"type":"paragraph"}],"name":"value"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A closure that takes a pointer to "},{"code":"value","type":"codeVoice"},{"text":" as its sole argument. If","type":"text"},{"text":" ","type":"text"},{"text":"the closure has a return value, that value is also used as the return","type":"text"},{"type":"text","text":" "},{"text":"value of the ","type":"text"},{"type":"codeVoice","code":"withUnsafePointer(to:_:)"},{"text":" function. The pointer argument","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"is valid only for the duration of the functionâ€™s execution."},{"type":"text","text":" "},{"type":"text","text":"It is undefined behavior to try to mutate through the pointer argument"},{"text":" ","type":"text"},{"type":"text","text":"by converting it to "},{"code":"UnsafeMutablePointer","type":"codeVoice"},{"type":"text","text":" or any other mutable pointer"},{"type":"text","text":" "},{"text":"type. If you need to mutate the argument through the pointer, use","type":"text"},{"text":" ","type":"text"},{"code":"withUnsafeMutablePointer(to:_:)","type":"codeVoice"},{"type":"text","text":" instead."}]}],"name":"body"}]},{"kind":"content","content":[{"anchor":"return-value","type":"heading","level":2,"text":"Return Value"},{"inlineContent":[{"type":"text","text":"The return value, if any, of the "},{"type":"codeVoice","code":"body"},{"text":" closure.","type":"text"}],"type":"paragraph"}]},{"kind":"content","content":[{"level":2,"type":"heading","text":"Discussion","anchor":"discussion"},{"inlineContent":[{"text":"The ","type":"text"},{"type":"codeVoice","code":"withUnsafePointer(to:_:)"},{"text":" function is useful for calling Objective-C","type":"text"},{"text":" ","type":"text"},{"text":"APIs that take in parameters by const pointer.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"The pointer argument to ","type":"text"},{"code":"body","type":"codeVoice"},{"text":" is valid only during the execution of","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"withUnsafePointer(to:_:)"},{"text":". Do not store or return the pointer for later","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"use."}],"type":"paragraph"}]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute"]]},"abstract":[{"text":"Invokes the given closure with a pointer to the given argument.","type":"text"}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafePointer":{"abstract":[{"type":"text","text":"A pointer for accessing data of a specific type."}],"type":"topic","title":"UnsafePointer","url":"\/documentation\/compute\/unsafepointer","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafePointer","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"UnsafePointer"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"UnsafePointer"}],"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Error":{"url":"\/documentation\/compute\/error","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Error"}],"navigatorTitle":[{"text":"Error","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Error","type":"topic","role":"symbol","abstract":[{"type":"text","text":"A type representing an error value that can be thrown."}],"kind":"symbol","title":"Error"},"doc://com.swallow.documentation.Compute/documentation/Compute/withUnsafePointer(to:_:)-9fjn6":{"type":"topic","abstract":[{"text":"Invokes the given closure with a pointer to the given argument.","type":"text"}],"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"withUnsafePointer"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"E"},{"text":", ","kind":"text"},{"text":"Result","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"to","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":", ("},{"preciseIdentifier":"s:SP","kind":"typeIdentifier","text":"UnsafePointer"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":">) ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":"("},{"text":"E","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"text":"(","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Result"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/withUnsafePointer(to:_:)-9fjn6","title":"withUnsafePointer(to:_:)","role":"symbol","url":"\/documentation\/compute\/withunsafepointer(to:_:)-9fjn6"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"}}}