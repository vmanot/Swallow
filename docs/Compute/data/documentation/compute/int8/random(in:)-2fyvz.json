{"abstract":[{"type":"text","text":"Returns a random value within the specified range."}],"sections":[],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"random"},{"kind":"text","text":"("},{"text":"in","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"range"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sn","text":"Range","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Range","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}]}],"kind":"declarations"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The range in which to create a random value."},{"text":" ","type":"text"},{"code":"range","type":"codeVoice"},{"type":"text","text":" must not be empty."}]}],"name":"range"}],"kind":"parameters"},{"kind":"content","content":[{"level":2,"anchor":"return-value","text":"Return Value","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"A random value within the bounds of ","type":"text"},{"type":"codeVoice","code":"range"},{"text":".","type":"text"}]}]},{"content":[{"anchor":"discussion","level":2,"text":"Discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Use this method to generate an integer within a specific range. This"},{"type":"text","text":" "},{"text":"example creates three new values in the range ","type":"text"},{"type":"codeVoice","code":"1..<100"},{"text":".","type":"text"}]},{"type":"codeListing","syntax":null,"code":["for _ in 1...3 {","    print(Int.random(in: 1..<100))","}","\/\/ Prints \"53\"","\/\/ Prints \"64\"","\/\/ Prints \"5\""]},{"inlineContent":[{"type":"text","text":"This method is equivalent to calling the version that takes a generator,"},{"text":" ","type":"text"},{"type":"text","text":"passing in the systemâ€™s default random generator."}],"type":"paragraph"}],"kind":"content"}],"metadata":{"symbolKind":"method","externalID":"s:s17FixedWidthIntegerPsE6random2inxSnyxG_tFZ::SYNTHESIZED::s:s4Int8V","role":"symbol","extendedModule":"Swift","modules":[{"relatedModules":["Swift"],"name":"Compute"}],"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"random"},{"text":"(","kind":"text"},{"text":"in","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Range","preciseIdentifier":"s:Sn","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"roleHeading":"Type Method","title":"random(in:)"},"kind":"symbol","schemaVersion":{"minor":3,"major":0,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8\/random(in:)-2fyvz"},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8\/FixedWidthInteger-Implementations"]]},"variants":[{"paths":["\/documentation\/compute\/int8\/random(in:)-2fyvz"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Int8/random(in:)-2fyvz":{"url":"\/documentation\/compute\/int8\/random(in:)-2fyvz","abstract":[{"type":"text","text":"Returns a random value within the specified range."}],"type":"topic","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"random"},{"kind":"text","text":"("},{"text":"in","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sn","text":"Range","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"title":"random(in:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8\/random(in:)-2fyvz","kind":"symbol","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int8":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Int8"}],"url":"\/documentation\/compute\/int8","title":"Int8","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Int8"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8","abstract":[{"text":"An 8-bit signed integer value","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"type."}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Int8/FixedWidthInteger-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8\/FixedWidthInteger-Implementations","abstract":[],"title":"FixedWidthInteger Implementations","url":"\/documentation\/compute\/int8\/fixedwidthinteger-implementations","role":"collectionGroup","kind":"article","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/Range":{"kind":"symbol","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Range","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Range","url":"\/documentation\/compute\/range","abstract":[{"text":"A half-open interval from a lower bound up to, but not including, an upper","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"bound."}],"navigatorTitle":[{"text":"Range","kind":"identifier"}],"title":"Range"}}}