{"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8"]]},"kind":"article","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/int8\/fixedwidthinteger-implementations"]}],"metadata":{"roleHeading":"API Collection","role":"collectionGroup","modules":[{"name":"Compute"}],"title":"FixedWidthInteger Implementations"},"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8\/FixedWidthInteger-Implementations","interfaceLanguage":"swift"},"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"topicSections":[{"generated":true,"anchor":"Operators","title":"Operators","identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8\/&*(_:_:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8\/&*=(_:_:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8\/&+(_:_:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8\/&+=(_:_:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8\/&-(_:_:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8\/&-=(_:_:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8\/&__(_:_:)-1v821","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8\/&__(_:_:)-24uqw","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8\/&__(_:_:)-2a90q","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8\/&__(_:_:)-4szuk","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8\/&__(_:_:)-7028d","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8\/&__(_:_:)-9x51j","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8\/&__=(_:_:)-6g9h1","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8\/&__=(_:_:)-9dar0","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8\/__(_:_:)-3z21o","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8\/__(_:_:)-7wosz","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8\/~(_:)"]},{"identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8\/init(_:)-7lqol","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8\/init(_:)-89uu","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8\/init(_:radix:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8\/init(bigEndian:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8\/init(clamping:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8\/init(exactly:)-16mcu","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8\/init(littleEndian:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8\/init(truncatingIfNeeded:)"],"generated":true,"anchor":"Initializers","title":"Initializers"},{"title":"Instance Properties","identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8\/bigEndian","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8\/bitWidth-swift.property","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8\/littleEndian"],"anchor":"Instance-Properties","generated":true},{"identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8\/swapByteOrderHostToPortable()","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8\/swapByteOrderPortableToHost()"],"anchor":"Instance-Methods","generated":true,"title":"Instance Methods"},{"title":"Type Methods","identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8\/random(in:)-2fyvz","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8\/random(in:)-5kgo1","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8\/random(in:using:)-1n6up","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8\/random(in:using:)-8ennz"],"anchor":"Type-Methods","generated":true}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Int8/random(in:using:)-1n6up":{"abstract":[{"type":"text","text":"Returns a random value within the specified range, using the given"},{"type":"text","text":" "},{"type":"text","text":"generator as a source for randomness."}],"url":"\/documentation\/compute\/int8\/random(in:using:)-1n6up","kind":"symbol","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"random"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"in"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sn","kind":"typeIdentifier","text":"Range"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":">, ","kind":"text"},{"text":"using","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"text":"T","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8\/random(in:using:)-1n6up","title":"random(in:using:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int8/bigEndian":{"role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"bigEndian"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8\/bigEndian","url":"\/documentation\/compute\/int8\/bigendian","title":"bigEndian","type":"topic","abstract":[{"type":"text","text":"The big-endian representation of this integer."}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Int8/~(_:)":{"url":"\/documentation\/compute\/int8\/~(_:)","title":"~(_:)","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8\/~(_:)","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"~","kind":"identifier"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"type":"topic","abstract":[{"type":"text","text":"Returns the inverse of the bits set in the argument."}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Int8/&__=(_:_:)-9dar0":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8\/&__=(_:_:)-9dar0","title":"&>>=(_:_:)","kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"&>>="},{"text":" ","kind":"text"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Other"},{"text":">(","kind":"text"},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Other","kind":"typeIdentifier"},{"text":")","kind":"text"}],"role":"symbol","url":"\/documentation\/compute\/int8\/&__=(_:_:)-9dar0","type":"topic","abstract":[{"type":"text","text":"Calculates the result of shifting a value’s binary representation the"},{"text":" ","type":"text"},{"type":"text","text":"specified number of digits to the right, masking the shift amount to the"},{"text":" ","type":"text"},{"type":"text","text":"type’s bit width, and stores the result in the left-hand-side variable."}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Int8/&__(_:_:)-9x51j":{"url":"\/documentation\/compute\/int8\/&__(_:_:)-9x51j","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"&>>"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"}],"role":"symbol","abstract":[{"type":"text","text":"Returns the result of shifting a value’s binary representation the"},{"type":"text","text":" "},{"text":"specified number of digits to the right, masking the shift amount to the","type":"text"},{"text":" ","type":"text"},{"text":"type’s bit width.","type":"text"}],"title":"&>>(_:_:)","type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8\/&__(_:_:)-9x51j","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int8/random(in:)-2fyvz":{"url":"\/documentation\/compute\/int8\/random(in:)-2fyvz","abstract":[{"type":"text","text":"Returns a random value within the specified range."}],"type":"topic","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"random"},{"kind":"text","text":"("},{"text":"in","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sn","text":"Range","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"title":"random(in:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8\/random(in:)-2fyvz","kind":"symbol","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int8/&__(_:_:)-1v821":{"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"&>>","kind":"identifier"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"text":"Int8","preciseIdentifier":"s:s4Int8V","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Int8","kind":"typeIdentifier","preciseIdentifier":"s:s4Int8V"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Int8","preciseIdentifier":"s:s4Int8V"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8\/&__(_:_:)-1v821","kind":"symbol","title":"&>>(_:_:)","role":"symbol","url":"\/documentation\/compute\/int8\/&__(_:_:)-1v821","abstract":[{"type":"text","text":"Returns the result of shifting a value’s binary representation the"},{"text":" ","type":"text"},{"type":"text","text":"specified number of digits to the right, masking the shift amount to the"},{"text":" ","type":"text"},{"text":"type’s bit width.","type":"text"}],"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int8":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Int8"}],"url":"\/documentation\/compute\/int8","title":"Int8","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Int8"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8","abstract":[{"text":"An 8-bit signed integer value","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"type."}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Int8/&__=(_:_:)-6g9h1":{"url":"\/documentation\/compute\/int8\/&__=(_:_:)-6g9h1","role":"symbol","type":"topic","title":"&<<=(_:_:)","abstract":[{"type":"text","text":"Returns the result of shifting a value’s binary representation the"},{"type":"text","text":" "},{"text":"specified number of digits to the left, masking the shift amount to the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"type’s bit width, and stores the result in the left-hand-side variable."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8\/&__=(_:_:)-6g9h1","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"&<<=","kind":"identifier"},{"kind":"text","text":" "},{"text":"<","kind":"text"},{"text":"Other","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"text":"Other","kind":"typeIdentifier"},{"kind":"text","text":")"}]},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int8/&__(_:_:)-7028d":{"url":"\/documentation\/compute\/int8\/&__(_:_:)-7028d","title":"&<<(_:_:)","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"&<<","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8\/&__(_:_:)-7028d","abstract":[{"text":"Returns the result of shifting a value’s binary representation the","type":"text"},{"text":" ","type":"text"},{"text":"specified number of digits to the left, masking the shift amount to the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"type’s bit width."}],"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int8/random(in:)-5kgo1":{"type":"topic","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"random","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"in"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"ClosedRange","preciseIdentifier":"s:SN"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":">) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"title":"random(in:)","url":"\/documentation\/compute\/int8\/random(in:)-5kgo1","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8\/random(in:)-5kgo1","abstract":[{"type":"text","text":"Returns a random value within the specified range."}],"kind":"symbol","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int8/&-(_:_:)":{"abstract":[{"text":"Returns the difference of the two given values, wrapping the result in","type":"text"},{"type":"text","text":" "},{"text":"case of any overflow.","type":"text"}],"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"&-","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"role":"symbol","url":"\/documentation\/compute\/int8\/&-(_:_:)","type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8\/&-(_:_:)","title":"&-(_:_:)","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int8/littleEndian":{"kind":"symbol","role":"symbol","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"littleEndian","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"abstract":[{"text":"The little-endian representation of this integer.","type":"text"}],"url":"\/documentation\/compute\/int8\/littleendian","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8\/littleEndian","title":"littleEndian"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int8/&-=(_:_:)":{"type":"topic","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"&-="},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":")"}],"abstract":[{"text":"Subtracts the second value from the first and stores the difference in the","type":"text"},{"text":" ","type":"text"},{"text":"left-hand-side variable, wrapping any overflow.","type":"text"}],"url":"\/documentation\/compute\/int8\/&-=(_:_:)","role":"symbol","title":"&-=(_:_:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8\/&-=(_:_:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int8/random(in:using:)-8ennz":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8\/random(in:using:)-8ennz","type":"topic","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"random","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"in"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SN","text":"ClosedRange","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"using"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"}],"role":"symbol","url":"\/documentation\/compute\/int8\/random(in:using:)-8ennz","abstract":[{"type":"text","text":"Returns a random value within the specified range, using the given"},{"type":"text","text":" "},{"type":"text","text":"generator as a source for randomness."}],"title":"random(in:using:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int8/init(_:)-7lqol":{"role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"text":"T","kind":"typeIdentifier"},{"text":")","kind":"text"}],"title":"init(_:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8\/init(_:)-7lqol","type":"topic","abstract":[{"type":"text","text":"Creates an integer from the given floating-point value, rounding toward"},{"type":"text","text":" "},{"text":"zero. Any fractional part of the value passed as ","type":"text"},{"type":"codeVoice","code":"source"},{"text":" is removed.","type":"text"}],"kind":"symbol","url":"\/documentation\/compute\/int8\/init(_:)-7lqol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int8/init(bigEndian:)":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8\/init(bigEndian:)","url":"\/documentation\/compute\/int8\/init(bigendian:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"bigEndian","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":")"}],"type":"topic","abstract":[{"type":"text","text":"Creates an integer from its big-endian representation, changing the byte"},{"type":"text","text":" "},{"text":"order if necessary.","type":"text"}],"role":"symbol","title":"init(bigEndian:)","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int8/init(clamping:)":{"url":"\/documentation\/compute\/int8\/init(clamping:)","abstract":[{"text":"Creates a new instance with the representable value that’s closest to the","type":"text"},{"text":" ","type":"text"},{"text":"given integer.","type":"text"}],"type":"topic","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"text":"Other","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"clamping"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Other"},{"text":")","kind":"text"}],"title":"init(clamping:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8\/init(clamping:)","kind":"symbol","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int8/__(_:_:)-3z21o":{"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8\/__(_:_:)-3z21o","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"<<"},{"kind":"text","text":" "},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Other"},{"kind":"text","text":">("},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Other","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"type":"topic","url":"\/documentation\/compute\/int8\/__(_:_:)-3z21o","kind":"symbol","abstract":[{"text":"Returns the result of shifting a value’s binary representation the","type":"text"},{"text":" ","type":"text"},{"text":"specified number of digits to the left.","type":"text"}],"title":"<<(_:_:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int8/&__(_:_:)-24uqw":{"type":"topic","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"&>>","kind":"identifier"},{"text":" ","kind":"text"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Other"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"text":"Other","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Returns the result of shifting a value’s binary representation the"},{"type":"text","text":" "},{"type":"text","text":"specified number of digits to the right, masking the shift amount to the"},{"type":"text","text":" "},{"type":"text","text":"type’s bit width."}],"url":"\/documentation\/compute\/int8\/&__(_:_:)-24uqw","role":"symbol","title":"&>>(_:_:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8\/&__(_:_:)-24uqw"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int8/&__(_:_:)-2a90q":{"role":"symbol","title":"&<<(_:_:)","kind":"symbol","url":"\/documentation\/compute\/int8\/&__(_:_:)-2a90q","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"&<<","kind":"identifier"},{"kind":"text","text":" "},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Other"},{"kind":"text","text":">("},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Other","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"abstract":[{"text":"Returns the result of shifting a value’s binary representation the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"specified number of digits to the left, masking the shift amount to the"},{"text":" ","type":"text"},{"type":"text","text":"type’s bit width."}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8\/&__(_:_:)-2a90q"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int8/init(exactly:)-16mcu":{"fragments":[{"text":"init","kind":"identifier"},{"text":"?<","kind":"text"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"exactly","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}],"kind":"symbol","url":"\/documentation\/compute\/int8\/init(exactly:)-16mcu","role":"symbol","title":"init(exactly:)","abstract":[{"type":"text","text":"Creates an integer from the given floating-point value, if it can be"},{"text":" ","type":"text"},{"type":"text","text":"represented exactly."}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8\/init(exactly:)-16mcu"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int8/&+=(_:_:)":{"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"&+=","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":")","kind":"text"}],"title":"&+=(_:_:)","kind":"symbol","abstract":[{"type":"text","text":"Adds two values and stores the result in the left-hand-side variable,"},{"text":" ","type":"text"},{"type":"text","text":"wrapping any overflow."}],"type":"topic","role":"symbol","url":"\/documentation\/compute\/int8\/&+=(_:_:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8\/&+=(_:_:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int8/init(_:)-89uu":{"url":"\/documentation\/compute\/int8\/init(_:)-89uu","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8\/init(_:)-89uu","role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"?("},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":")","kind":"text"}],"type":"topic","kind":"symbol","title":"init(_:)","abstract":[{"type":"text","text":"Creates a new integer value from the given string."}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Int8/&+(_:_:)":{"abstract":[{"type":"text","text":"Returns the sum of the two given values, wrapping the result in case of"},{"text":" ","type":"text"},{"type":"text","text":"any overflow."}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8\/&+(_:_:)","title":"&+(_:_:)","type":"topic","url":"\/documentation\/compute\/int8\/&+(_:_:)","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"&+"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Int8/bitWidth-swift.property":{"abstract":[{"type":"text","text":"The number of bits in the binary representation of this value."}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8\/bitWidth-swift.property","type":"topic","url":"\/documentation\/compute\/int8\/bitwidth-swift.property","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"bitWidth","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"title":"bitWidth"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int8/__(_:_:)-7wosz":{"type":"topic","role":"symbol","url":"\/documentation\/compute\/int8\/__(_:_:)-7wosz","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8\/__(_:_:)-7wosz","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":">>","kind":"identifier"},{"kind":"text","text":" "},{"kind":"text","text":"<"},{"text":"Other","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"text":"Other","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"title":">>(_:_:)","abstract":[{"text":"Returns the result of shifting a value’s binary representation the","type":"text"},{"type":"text","text":" "},{"text":"specified number of digits to the right.","type":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Int8/init(_:radix:)":{"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8\/init(_:radix:)","url":"\/documentation\/compute\/int8\/init(_:radix:)","type":"topic","title":"init(_:radix:)","abstract":[{"text":"Creates a new integer value from the given string and radix.","type":"text"}],"fragments":[{"kind":"identifier","text":"init"},{"text":"?<","kind":"text"},{"text":"S","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"S","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"radix"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"kind":"text","text":")"}],"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int8/init(littleEndian:)":{"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"littleEndian"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":")","kind":"text"}],"role":"symbol","abstract":[{"text":"Creates an integer from its little-endian representation, changing the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"byte order if necessary."}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8\/init(littleEndian:)","title":"init(littleEndian:)","url":"\/documentation\/compute\/int8\/init(littleendian:)","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int8/init(truncatingIfNeeded:)":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8\/init(truncatingIfNeeded:)","role":"symbol","type":"topic","kind":"symbol","fragments":[{"kind":"identifier","text":"init"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"truncatingIfNeeded"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":")"}],"url":"\/documentation\/compute\/int8\/init(truncatingifneeded:)","abstract":[{"text":"Creates a new instance from the bit pattern of the given instance by","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"truncating or sign-extending if needed to fit this type."}],"title":"init(truncatingIfNeeded:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int8/&*(_:_:)":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8\/&*(_:_:)","abstract":[{"type":"text","text":"Returns the product of the two given values, wrapping the result in case"},{"text":" ","type":"text"},{"type":"text","text":"of any overflow."}],"kind":"symbol","title":"&*(_:_:)","url":"\/documentation\/compute\/int8\/&*(_:_:)","type":"topic","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"&*"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int8/swapByteOrderHostToPortable()":{"kind":"symbol","type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8\/swapByteOrderHostToPortable()","abstract":[],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"swapByteOrderHostToPortable","kind":"identifier"},{"kind":"text","text":"()"}],"url":"\/documentation\/compute\/int8\/swapbyteorderhosttoportable()","title":"swapByteOrderHostToPortable()","role":"symbol","conformance":{"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"code":"ByteOrderSwappable","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]}},"doc://com.swallow.documentation.Compute/documentation/Compute/Int8/&*=(_:_:)":{"type":"topic","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8\/&*=(_:_:)","kind":"symbol","url":"\/documentation\/compute\/int8\/&*=(_:_:)","abstract":[{"text":"Multiplies two values and stores the result in the left-hand-side","type":"text"},{"text":" ","type":"text"},{"text":"variable, wrapping any overflow.","type":"text"}],"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"&*=","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":")","kind":"text"}],"title":"&*=(_:_:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int8/&__(_:_:)-4szuk":{"title":"&<<(_:_:)","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8\/&__(_:_:)-4szuk","abstract":[{"text":"Returns the result of shifting a value’s binary representation the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"specified number of digits to the left, masking the shift amount to the"},{"type":"text","text":" "},{"type":"text","text":"type’s bit width."}],"type":"topic","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"&<<","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Int8","preciseIdentifier":"s:s4Int8V"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Int8V","text":"Int8"},{"kind":"text","text":") -> "},{"text":"Int8","kind":"typeIdentifier","preciseIdentifier":"s:s4Int8V"}],"url":"\/documentation\/compute\/int8\/&__(_:_:)-4szuk","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int8/swapByteOrderPortableToHost()":{"kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"swapByteOrderPortableToHost","kind":"identifier"},{"text":"()","kind":"text"}],"title":"swapByteOrderPortableToHost()","type":"topic","url":"\/documentation\/compute\/int8\/swapbyteorderportabletohost()","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8\/swapByteOrderPortableToHost()","conformance":{"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"ByteOrderSwappable"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]}}}}