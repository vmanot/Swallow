{"sections":[],"kind":"symbol","abstract":[{"text":"Creates a new integer value from the given string and radix.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/int8\/init(_:radix:)"]}],"metadata":{"roleHeading":"Initializer","modules":[{"name":"Compute","relatedModules":["Swift"]}],"extendedModule":"Swift","fragments":[{"kind":"identifier","text":"init"},{"text":"?<","kind":"text"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"radix","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":")"}],"role":"symbol","title":"init(_:radix:)","symbolKind":"init","externalID":"s:s17FixedWidthIntegerPsE_5radixxSgqd___SitcSyRd__lufc::SYNTHESIZED::s:s4Int8V"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"?<"},{"text":"S","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"text","kind":"internalParam"},{"kind":"text","text":": "},{"text":"S","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"radix"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","kind":"typeIdentifier"},{"kind":"text","text":" = 10) "},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"text":"StringProtocol","kind":"typeIdentifier","preciseIdentifier":"s:Sy","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/StringProtocol"}],"platforms":["macOS"]}]},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The ASCII representation of a number in the radix passed as","type":"text"},{"text":" ","type":"text"},{"code":"radix","type":"codeVoice"},{"text":".","type":"text"}]}],"name":"text"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The radix, or base, to use for converting "},{"code":"text","type":"codeVoice"},{"text":" to an integer","type":"text"},{"type":"text","text":" "},{"text":"value. ","type":"text"},{"code":"radix","type":"codeVoice"},{"text":" must be in the range ","type":"text"},{"type":"codeVoice","code":"2...36"},{"text":". The default is 10.","type":"text"}]}],"name":"radix"}],"kind":"parameters"},{"kind":"content","content":[{"anchor":"discussion","text":"Discussion","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"text":"The string passed as ","type":"text"},{"code":"text","type":"codeVoice"},{"type":"text","text":" may begin with a plus or minus sign character"},{"text":" ","type":"text"},{"type":"text","text":"("},{"type":"codeVoice","code":"+"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"-"},{"type":"text","text":"), followed by one or more numeric digits ("},{"code":"0-9","type":"codeVoice"},{"type":"text","text":") or letters"},{"text":" ","type":"text"},{"text":"(","type":"text"},{"code":"a-z","type":"codeVoice"},{"type":"text","text":" or "},{"type":"codeVoice","code":"A-Z"},{"type":"text","text":"). Parsing of the string is case insensitive."}]},{"syntax":null,"code":["let x = Int(\"123\")","\/\/ x == 123","","let y = Int(\"-123\", radix: 8)","\/\/ y == -83","let y = Int(\"+123\", radix: 8)","\/\/ y == +83","","let z = Int(\"07b\", radix: 16)","\/\/ z == 123"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"If "},{"code":"text","type":"codeVoice"},{"type":"text","text":" is in an invalid format or contains characters that are out of"},{"type":"text","text":" "},{"type":"text","text":"bounds for the given "},{"code":"radix","type":"codeVoice"},{"text":", or if the value it denotes in the given","type":"text"},{"text":" ","type":"text"},{"code":"radix","type":"codeVoice"},{"type":"text","text":" is not representable, the result is "},{"code":"nil","type":"codeVoice"},{"type":"text","text":". For example, the"},{"type":"text","text":" "},{"type":"text","text":"following conversions result in "},{"code":"nil","type":"codeVoice"},{"text":":","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":["Int(\" 100\")                       \/\/ Includes whitespace","Int(\"21-50\")                      \/\/ Invalid format","Int(\"ff6600\")                     \/\/ Characters out of bounds","Int(\"zzzzzzzzzzzzz\", radix: 36)   \/\/ Out of range"],"syntax":null}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8\/init(_:radix:)"},"schemaVersion":{"major":0,"patch":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8\/FixedWidthInteger-Implementations"]]},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/StringProtocol":{"url":"\/documentation\/compute\/stringprotocol","role":"symbol","abstract":[{"type":"text","text":"A type that can represent a string as a collection of characters."}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/StringProtocol","title":"StringProtocol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StringProtocol","kind":"identifier"}],"navigatorTitle":[{"text":"StringProtocol","kind":"identifier"}],"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int8":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Int8"}],"url":"\/documentation\/compute\/int8","title":"Int8","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Int8"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8","abstract":[{"text":"An 8-bit signed integer value","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"type."}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Int8/init(_:radix:)":{"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8\/init(_:radix:)","url":"\/documentation\/compute\/int8\/init(_:radix:)","type":"topic","title":"init(_:radix:)","abstract":[{"text":"Creates a new integer value from the given string and radix.","type":"text"}],"fragments":[{"kind":"identifier","text":"init"},{"text":"?<","kind":"text"},{"text":"S","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"S","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"radix"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"kind":"text","text":")"}],"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int8/FixedWidthInteger-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8\/FixedWidthInteger-Implementations","abstract":[],"title":"FixedWidthInteger Implementations","url":"\/documentation\/compute\/int8\/fixedwidthinteger-implementations","role":"collectionGroup","kind":"article","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","abstract":[{"type":"text","text":"A signed integer value type."}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Int","kind":"identifier"}],"navigatorTitle":[{"text":"Int","kind":"identifier"}],"title":"Int","url":"\/documentation\/compute\/int","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"}}}