{"abstract":[{"type":"text","text":"Returns the result of combining the elements of the sequence using the"},{"text":" ","type":"text"},{"type":"text","text":"given closure."}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8\/Words-swift.struct","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8\/Words-swift.struct\/Sequence-Implementations"]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"symbol","identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8\/Words-swift.struct\/reduce(into:_:)","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/compute\/int8\/words-swift.struct\/reduce(into:_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"metadata":{"externalID":"s:STsE6reduce4into_qd__qd__n_yqd__z_7ElementQztKXEtKlF::SYNTHESIZED::s:s4Int8V5WordsV","title":"reduce(into:_:)","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"reduce","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Result","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"into","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"kind":"text","text":", ("},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:ST7ElementQa","text":"Element","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> ()) "},{"kind":"keyword","text":"rethrows"},{"text":" -> ","kind":"text"},{"text":"Result","kind":"typeIdentifier"}],"extendedModule":"Swift","roleHeading":"Instance Method","role":"symbol","modules":[{"relatedModules":["Swift"],"name":"Compute"}]},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"reduce"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Result"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"into"},{"text":" ","kind":"text"},{"text":"initialResult","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"updateAccumulatingResult"},{"kind":"text","text":": ("},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"Element","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ()) ","kind":"text"},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"text":"Result","kind":"typeIdentifier"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"initialResult","content":[{"inlineContent":[{"type":"text","text":"The value to use as the initial accumulating value."}],"type":"paragraph"}]},{"name":"updateAccumulatingResult","content":[{"inlineContent":[{"text":"A closure that updates the accumulating","type":"text"},{"type":"text","text":" "},{"type":"text","text":"value with an element of the sequence."}],"type":"paragraph"}]}]},{"content":[{"level":2,"text":"Return Value","anchor":"return-value","type":"heading"},{"inlineContent":[{"text":"The final accumulated value. If the sequence has no elements,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the result is "},{"code":"initialResult","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}],"kind":"content"},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"inlineContent":[{"text":"Use the ","type":"text"},{"code":"reduce(into:_:)","type":"codeVoice"},{"text":" method to produce a single value from the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"elements of an entire sequence. For example, you can use this method on an"},{"type":"text","text":" "},{"type":"text","text":"array of integers to filter adjacent equal entries or count frequencies."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"This method is preferred over ","type":"text"},{"code":"reduce(_:_:)","type":"codeVoice"},{"type":"text","text":" for efficiency when the"},{"text":" ","type":"text"},{"type":"text","text":"result is a copy-on-write type, for example an Array or a Dictionary."}]},{"inlineContent":[{"text":"The ","type":"text"},{"type":"codeVoice","code":"updateAccumulatingResult"},{"text":" closure is called sequentially with a","type":"text"},{"type":"text","text":" "},{"type":"text","text":"mutable accumulating value initialized to "},{"type":"codeVoice","code":"initialResult"},{"text":" and each element","type":"text"},{"type":"text","text":" "},{"type":"text","text":"of the sequence. This example shows how to build a dictionary of letter"},{"type":"text","text":" "},{"text":"frequencies of a string.","type":"text"}],"type":"paragraph"},{"code":["let letters = \"abracadabra\"","let letterCount = letters.reduce(into: [:]) { counts, letter in","    counts[letter, default: 0] += 1","}","\/\/ letterCount == [\"a\": 5, \"b\": 2, \"r\": 2, \"c\": 1, \"d\": 1]"],"syntax":null,"type":"codeListing"},{"inlineContent":[{"text":"When ","type":"text"},{"type":"codeVoice","code":"letters.reduce(into:_:)"},{"type":"text","text":" is called, the following steps occur:"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"updateAccumulatingResult"},{"text":" closure is called with the initial","type":"text"},{"type":"text","text":" "},{"type":"text","text":"accumulating value—"},{"type":"codeVoice","code":"[:]"},{"type":"text","text":" in this case—and the first character of"},{"type":"text","text":" "},{"code":"letters","type":"codeVoice"},{"type":"text","text":", modifying the accumulating value by setting "},{"type":"codeVoice","code":"1"},{"type":"text","text":" for the key"},{"type":"text","text":" "},{"code":"\"a\"","type":"codeVoice"},{"type":"text","text":"."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"The closure is called again repeatedly with the updated accumulating"},{"type":"text","text":" "},{"text":"value and each element of the sequence.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"When the sequence is exhausted, the accumulating value is returned to"},{"type":"text","text":" "},{"text":"the caller.","type":"text"}]}]}],"type":"orderedList"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If the sequence has no elements, "},{"code":"updateAccumulatingResult","type":"codeVoice"},{"text":" is never","type":"text"},{"type":"text","text":" "},{"type":"text","text":"executed and "},{"code":"initialResult","type":"codeVoice"},{"type":"text","text":" is the result of the call to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"reduce(into:_:)"},{"type":"text","text":"."}]},{"style":"note","name":"Complexity","type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"O(","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"n"}]},{"text":"), where ","type":"text"},{"inlineContent":[{"text":"n","type":"text"}],"type":"emphasis"},{"type":"text","text":" is the length of the sequence."}]}]}]}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence/Element":{"type":"topic","required":true,"abstract":[{"type":"text","text":"A type representing the sequence’s elements."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"symbol","url":"\/documentation\/compute\/sequence\/element","role":"symbol","title":"Element","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Int8":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Int8"}],"url":"\/documentation\/compute\/int8","title":"Int8","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Int8"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8","abstract":[{"text":"An 8-bit signed integer value","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"type."}]},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int8/Words-swift.struct/Sequence-Implementations":{"url":"\/documentation\/compute\/int8\/words-swift.struct\/sequence-implementations","kind":"article","type":"topic","role":"collectionGroup","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8\/Words-swift.struct\/Sequence-Implementations","title":"Sequence Implementations","abstract":[]},"doc://com.swallow.documentation.Compute/documentation/Compute/Int8/Words-swift.struct/reduce(into:_:)":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8\/Words-swift.struct\/reduce(into:_:)","url":"\/documentation\/compute\/int8\/words-swift.struct\/reduce(into:_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"reduce"},{"kind":"text","text":"<"},{"text":"Result","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"into"},{"kind":"text","text":": "},{"text":"Result","kind":"typeIdentifier"},{"text":", (","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:ST7ElementQa"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ()) ","kind":"text"},{"kind":"keyword","text":"rethrows"},{"text":" -> ","kind":"text"},{"text":"Result","kind":"typeIdentifier"}],"kind":"symbol","role":"symbol","title":"reduce(into:_:)","type":"topic","abstract":[{"text":"Returns the result of combining the elements of the sequence using the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"given closure."}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Int8/Words-swift.struct":{"abstract":[{"type":"text","text":"A type that represents the words of this integer."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8\/Words-swift.struct","type":"topic","kind":"symbol","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Words"}],"url":"\/documentation\/compute\/int8\/words-swift.struct","navigatorTitle":[{"kind":"identifier","text":"Words"}],"title":"Int8.Words"}}}