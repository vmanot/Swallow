{"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"symbol","sections":[],"abstract":[{"type":"text","text":"Returns a random value within the specified range, using the given"},{"text":" ","type":"text"},{"type":"text","text":"generator as a source for randomness."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"random","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"in"},{"kind":"text","text":" "},{"text":"range","kind":"internalParam"},{"kind":"text","text":": "},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Range","text":"Range","kind":"typeIdentifier","preciseIdentifier":"s:Sn"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"text":"using","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"generator"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"},{"text":" ","kind":"text"},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","text":"RandomNumberGenerator","preciseIdentifier":"s:SG","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RandomNumberGenerator"}]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The range in which to create a random value."},{"type":"text","text":" "},{"type":"codeVoice","code":"range"},{"text":" must not be empty.","type":"text"}]}],"name":"range"},{"name":"generator","content":[{"inlineContent":[{"type":"text","text":"The random number generator to use when creating the"},{"type":"text","text":" "},{"type":"text","text":"new random value."}],"type":"paragraph"}]}]},{"kind":"content","content":[{"type":"heading","text":"Return Value","anchor":"return-value","level":2},{"type":"paragraph","inlineContent":[{"text":"A random value within the bounds of ","type":"text"},{"code":"range","type":"codeVoice"},{"text":".","type":"text"}]}]},{"content":[{"level":2,"anchor":"discussion","text":"Discussion","type":"heading"},{"inlineContent":[{"text":"Use this method to generate an integer within a specific range when you","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"are using a custom random number generator. This example creates three"},{"text":" ","type":"text"},{"type":"text","text":"new values in the range "},{"code":"1..<100","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"},{"type":"codeListing","code":["for _ in 1...3 {","    print(Int.random(in: 1..<100, using: &myGenerator))","}","\/\/ Prints \"7\"","\/\/ Prints \"44\"","\/\/ Prints \"21\""],"syntax":null},{"name":"Note","style":"note","type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"The algorithm used to create random values may change in a future","type":"text"},{"text":" ","type":"text"},{"text":"version of Swift. If youâ€™re passing a generator that results in the","type":"text"},{"type":"text","text":" "},{"text":"same sequence of integer values each time you run your program, that","type":"text"},{"text":" ","type":"text"},{"text":"sequence may change when your program is compiled using a different","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"version of Swift."}]}]}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8\/FixedWidthInteger-Implementations"]]},"metadata":{"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"random","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"in"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sn","text":"Range","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"text":"using","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"externalID":"s:s17FixedWidthIntegerPsE6random2in5usingxSnyxG_qd__ztSGRd__lFZ::SYNTHESIZED::s:s4Int8V","extendedModule":"Swift","modules":[{"relatedModules":["Swift"],"name":"Compute"}],"title":"random(in:using:)","role":"symbol","roleHeading":"Type Method","symbolKind":"method"},"variants":[{"paths":["\/documentation\/compute\/int8\/random(in:using:)-1n6up"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8\/random(in:using:)-1n6up","interfaceLanguage":"swift"},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int8/random(in:using:)-1n6up":{"abstract":[{"type":"text","text":"Returns a random value within the specified range, using the given"},{"type":"text","text":" "},{"type":"text","text":"generator as a source for randomness."}],"url":"\/documentation\/compute\/int8\/random(in:using:)-1n6up","kind":"symbol","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"random"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"in"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sn","kind":"typeIdentifier","text":"Range"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":">, ","kind":"text"},{"text":"using","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"text":"T","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8\/random(in:using:)-1n6up","title":"random(in:using:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int8":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Int8"}],"url":"\/documentation\/compute\/int8","title":"Int8","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Int8"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8","abstract":[{"text":"An 8-bit signed integer value","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"type."}]},"doc://com.swallow.documentation.Compute/documentation/Compute/RandomNumberGenerator":{"abstract":[{"text":"A type that provides uniformly distributed random data.","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"RandomNumberGenerator"}],"url":"\/documentation\/compute\/randomnumbergenerator","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RandomNumberGenerator","title":"RandomNumberGenerator","role":"symbol","type":"topic","navigatorTitle":[{"text":"RandomNumberGenerator","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Range":{"kind":"symbol","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Range","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Range","url":"\/documentation\/compute\/range","abstract":[{"text":"A half-open interval from a lower bound up to, but not including, an upper","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"bound."}],"navigatorTitle":[{"text":"Range","kind":"identifier"}],"title":"Range"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int8/FixedWidthInteger-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8\/FixedWidthInteger-Implementations","abstract":[],"title":"FixedWidthInteger Implementations","url":"\/documentation\/compute\/int8\/fixedwidthinteger-implementations","role":"collectionGroup","kind":"article","type":"topic"}}}