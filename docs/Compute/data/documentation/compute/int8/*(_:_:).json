{"variants":[{"paths":["\/documentation\/compute\/int8\/*(_:_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"*"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"kind":"internalParam","text":"lhs"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s4Int8V","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8","kind":"typeIdentifier","text":"Int8"},{"kind":"text","text":", "},{"text":"rhs","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8","text":"Int8","preciseIdentifier":"s:s4Int8V"},{"text":") -> ","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8","text":"Int8","kind":"typeIdentifier","preciseIdentifier":"s:s4Int8V"}],"platforms":["macOS"],"languages":["swift"]}]},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The first value to multiply.","type":"text"}]}],"name":"lhs"},{"content":[{"inlineContent":[{"type":"text","text":"The second value to multiply."}],"type":"paragraph"}],"name":"rhs"}],"kind":"parameters"},{"content":[{"level":2,"type":"heading","text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The multiplication operator ("},{"type":"codeVoice","code":"*"},{"type":"text","text":") calculates the product of its two"},{"type":"text","text":" "},{"text":"arguments. For example:","type":"text"}]},{"type":"codeListing","code":["2 * 3                   \/\/ 6","100 * 21                \/\/ 2100","-10 * 15                \/\/ -150","3.5 * 2.25              \/\/ 7.875"],"syntax":null},{"inlineContent":[{"text":"You cannot use ","type":"text"},{"type":"codeVoice","code":"*"},{"text":" with arguments of different types. To multiply values","type":"text"},{"type":"text","text":" "},{"text":"of different types, convert one of the values to the other value’s type.","type":"text"}],"type":"paragraph"},{"syntax":null,"type":"codeListing","code":["let x: Int8 = 21","let y: Int = 1000000","Int(x) * y              \/\/ 21000000"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The product of the two arguments must be representable in the arguments’"},{"type":"text","text":" "},{"type":"text","text":"type. In the following example, the result of "},{"code":"21 * 21","type":"codeVoice"},{"type":"text","text":" is greater than"},{"text":" ","type":"text"},{"type":"text","text":"the maximum representable "},{"code":"Int8","type":"codeVoice"},{"type":"text","text":" value:"}]},{"code":["x * 21                  \/\/ Overflow error"],"type":"codeListing","syntax":null},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"text":"Overflow checking is not performed in ","type":"text"},{"type":"codeVoice","code":"-Ounchecked"},{"type":"text","text":" builds."}]}],"type":"aside","name":"Note"},{"type":"paragraph","inlineContent":[{"text":"If you want to opt out of overflow checking and wrap the result in case","type":"text"},{"type":"text","text":" "},{"type":"text","text":"of any overflow, use the overflow multiplication operator ("},{"code":"&*","type":"codeVoice"},{"text":").","type":"text"}]},{"syntax":null,"type":"codeListing","code":["x &* 21                \/\/ -115"]}],"kind":"content"}],"sections":[],"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8\/*(_:_:)"},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8\/BinaryInteger-Implementations"]]},"abstract":[{"text":"Multiplies two values and produces their product.","type":"text"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"*","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"Int8","preciseIdentifier":"s:s4Int8V","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:s4Int8V","kind":"typeIdentifier","text":"Int8"},{"text":") -> ","kind":"text"},{"text":"Int8","kind":"typeIdentifier","preciseIdentifier":"s:s4Int8V"}],"role":"symbol","externalID":"s:s4Int8V1moiyA2B_ABtFZ","extendedModule":"Swift","roleHeading":"Operator","modules":[{"relatedModules":["Swift"],"name":"Compute"}],"title":"*(_:_:)","symbolKind":"op"},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Int8":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Int8"}],"url":"\/documentation\/compute\/int8","title":"Int8","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Int8"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8","abstract":[{"text":"An 8-bit signed integer value","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"type."}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Int8/*(_:_:)":{"type":"topic","role":"symbol","url":"\/documentation\/compute\/int8\/*(_:_:)","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"*","kind":"identifier"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"text":"Int8","kind":"typeIdentifier","preciseIdentifier":"s:s4Int8V"},{"kind":"text","text":", "},{"text":"Int8","preciseIdentifier":"s:s4Int8V","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:s4Int8V","kind":"typeIdentifier","text":"Int8"}],"abstract":[{"type":"text","text":"Multiplies two values and produces their product."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8\/*(_:_:)","title":"*(_:_:)"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int8/BinaryInteger-Implementations":{"abstract":[],"url":"\/documentation\/compute\/int8\/binaryinteger-implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8\/BinaryInteger-Implementations","kind":"article","title":"BinaryInteger Implementations","role":"collectionGroup","type":"topic"}}}