{"metadata":{"symbolKind":"op","modules":[{"relatedModules":["Swift"],"name":"Compute"}],"externalID":"s:s4Int8V3aggoiyA2B_ABtFZ","roleHeading":"Operator","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"&>>","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"Int8","preciseIdentifier":"s:s4Int8V","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Int8","preciseIdentifier":"s:s4Int8V"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:s4Int8V","text":"Int8","kind":"typeIdentifier"}],"extendedModule":"Swift","role":"symbol","title":"&>>(_:_:)"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8\/&__(_:_:)-1v821"},"kind":"symbol","sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"text":"Returns the result of shifting a value’s binary representation the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"specified number of digits to the right, masking the shift amount to the"},{"type":"text","text":" "},{"type":"text","text":"type’s bit width."}],"variants":[{"paths":["\/documentation\/compute\/int8\/&__(_:_:)-1v821"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8\/FixedWidthInteger-Implementations"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"&>>","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"lhs","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8","preciseIdentifier":"s:s4Int8V","text":"Int8"},{"text":", ","kind":"text"},{"text":"rhs","kind":"internalParam"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8","preciseIdentifier":"s:s4Int8V","kind":"typeIdentifier","text":"Int8"},{"text":") -> ","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8","kind":"typeIdentifier","text":"Int8","preciseIdentifier":"s:s4Int8V"}],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"name":"lhs","content":[{"inlineContent":[{"text":"The value to shift.","type":"text"}],"type":"paragraph"}]},{"name":"rhs","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The number of bits to shift "},{"type":"codeVoice","code":"lhs"},{"type":"text","text":" to the right. If "},{"code":"rhs","type":"codeVoice"},{"text":" is","type":"text"},{"type":"text","text":" "},{"type":"text","text":"outside the range "},{"code":"0..<lhs.bitWidth","type":"codeVoice"},{"type":"text","text":", it is masked to produce a"},{"type":"text","text":" "},{"text":"value within that range.","type":"text"}]}]}]},{"kind":"content","content":[{"anchor":"discussion","text":"Discussion","type":"heading","level":2},{"inlineContent":[{"text":"Use the masking right shift operator (","type":"text"},{"type":"codeVoice","code":"&>>"},{"text":") when you need to perform a","type":"text"},{"type":"text","text":" "},{"text":"shift and are sure that the shift amount is in the range","type":"text"},{"text":" ","type":"text"},{"code":"0..<lhs.bitWidth","type":"codeVoice"},{"type":"text","text":". Before shifting, the masking right shift operator"},{"text":" ","type":"text"},{"type":"text","text":"masks the shift to this range. The shift is performed using this masked"},{"text":" ","type":"text"},{"type":"text","text":"value."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"The following example defines "},{"type":"codeVoice","code":"x"},{"text":" as an instance of ","type":"text"},{"code":"UInt8","type":"codeVoice"},{"text":", an 8-bit,","type":"text"},{"text":" ","type":"text"},{"text":"unsigned integer type. If you use ","type":"text"},{"type":"codeVoice","code":"2"},{"type":"text","text":" as the right-hand-side value in an"},{"type":"text","text":" "},{"text":"operation on ","type":"text"},{"type":"codeVoice","code":"x"},{"type":"text","text":", the shift amount requires no masking."}],"type":"paragraph"},{"syntax":null,"type":"codeListing","code":["let x: UInt8 = 30                 \/\/ 0b00011110","let y = x &>> 2","\/\/ y == 7                         \/\/ 0b00000111"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"However, if you use "},{"type":"codeVoice","code":"8"},{"type":"text","text":" as the shift amount, the method first masks the"},{"text":" ","type":"text"},{"text":"shift amount to zero, and then performs the shift, resulting in no change","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"to the original value."}]},{"type":"codeListing","syntax":null,"code":["let z = x &>> 8","\/\/ z == 30                        \/\/ 0b00011110"]},{"inlineContent":[{"type":"text","text":"If the bit width of the shifted integer type is a power of two, masking"},{"type":"text","text":" "},{"type":"text","text":"is performed using a bitmask; otherwise, masking is performed using a"},{"type":"text","text":" "},{"type":"text","text":"modulo operation."}],"type":"paragraph"}]}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int8":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Int8"}],"url":"\/documentation\/compute\/int8","title":"Int8","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Int8"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8","abstract":[{"text":"An 8-bit signed integer value","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"type."}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Int8/&__(_:_:)-1v821":{"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"&>>","kind":"identifier"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"text":"Int8","preciseIdentifier":"s:s4Int8V","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Int8","kind":"typeIdentifier","preciseIdentifier":"s:s4Int8V"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Int8","preciseIdentifier":"s:s4Int8V"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8\/&__(_:_:)-1v821","kind":"symbol","title":"&>>(_:_:)","role":"symbol","url":"\/documentation\/compute\/int8\/&__(_:_:)-1v821","abstract":[{"type":"text","text":"Returns the result of shifting a value’s binary representation the"},{"text":" ","type":"text"},{"type":"text","text":"specified number of digits to the right, masking the shift amount to the"},{"text":" ","type":"text"},{"text":"type’s bit width.","type":"text"}],"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int8/FixedWidthInteger-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8\/FixedWidthInteger-Implementations","abstract":[],"title":"FixedWidthInteger Implementations","url":"\/documentation\/compute\/int8\/fixedwidthinteger-implementations","role":"collectionGroup","kind":"article","type":"topic"}}}