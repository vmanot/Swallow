{"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8\/FixedWidthInteger-Implementations"]]},"metadata":{"role":"symbol","modules":[{"name":"Compute","relatedModules":["Swift"]}],"extendedModule":"Swift","symbolKind":"op","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":">>","kind":"identifier"},{"kind":"text","text":" "},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Other"},{"kind":"text","text":">("},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Other"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"}],"title":">>(_:_:)","roleHeading":"Operator","externalID":"s:s17FixedWidthIntegerPsE2ggoiyxx_qd__tSzRd__lFZ::SYNTHESIZED::s:s4Int8V"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/int8\/__(_:_:)-7wosz"]}],"kind":"symbol","schemaVersion":{"patch":0,"minor":3,"major":0},"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8\/__(_:_:)-7wosz","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":">>","kind":"identifier"},{"kind":"text","text":" "},{"text":"<","kind":"text"},{"text":"Other","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"internalParam","text":"lhs"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"rhs","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Other","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":" ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Other","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"BinaryInteger","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryInteger","preciseIdentifier":"s:Sz"}]}]},{"parameters":[{"name":"lhs","content":[{"inlineContent":[{"text":"The value to shift.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"The number of bits to shift "},{"type":"codeVoice","code":"lhs"},{"text":" to the right.","type":"text"}],"type":"paragraph"}],"name":"rhs"}],"kind":"parameters"},{"kind":"content","content":[{"anchor":"discussion","type":"heading","text":"Discussion","level":2},{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"type":"codeVoice","code":">>"},{"type":"text","text":" operator performs a "},{"inlineContent":[{"type":"text","text":"smart shift"}],"type":"emphasis"},{"type":"text","text":", which defines a result for a"},{"text":" ","type":"text"},{"type":"text","text":"shift of any value."}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Using a negative value for ","type":"text"},{"code":"rhs","type":"codeVoice"},{"type":"text","text":" performs a left shift using"},{"text":" ","type":"text"},{"type":"codeVoice","code":"abs(rhs)"},{"text":".","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Using a value for ","type":"text"},{"type":"codeVoice","code":"rhs"},{"text":" that is greater than or equal to the bit width","type":"text"},{"text":" ","type":"text"},{"text":"of ","type":"text"},{"code":"lhs","type":"codeVoice"},{"text":" is an ","type":"text"},{"inlineContent":[{"type":"text","text":"overshift"}],"type":"emphasis"},{"type":"text","text":". An overshift results in "},{"type":"codeVoice","code":"-1"},{"type":"text","text":" for a"},{"text":" ","type":"text"},{"type":"text","text":"negative value of "},{"code":"lhs","type":"codeVoice"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"0"},{"type":"text","text":" for a nonnegative value."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Using any other value for ","type":"text"},{"code":"rhs","type":"codeVoice"},{"type":"text","text":" performs a right shift on "},{"code":"lhs","type":"codeVoice"},{"text":" by that","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"amount."}]}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The following example defines "},{"code":"x","type":"codeVoice"},{"type":"text","text":" as an instance of "},{"type":"codeVoice","code":"UInt8"},{"type":"text","text":", an 8-bit,"},{"type":"text","text":" "},{"type":"text","text":"unsigned integer type. If you use "},{"type":"codeVoice","code":"2"},{"text":" as the right-hand-side value in an","type":"text"},{"type":"text","text":" "},{"type":"text","text":"operation on "},{"code":"x","type":"codeVoice"},{"type":"text","text":", the value is shifted right by two bits."}]},{"code":["let x: UInt8 = 30                 \/\/ 0b00011110","let y = x >> 2","\/\/ y == 7                         \/\/ 0b00000111"],"syntax":null,"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you use "},{"type":"codeVoice","code":"11"},{"type":"text","text":" as "},{"type":"codeVoice","code":"rhs"},{"type":"text","text":", "},{"type":"codeVoice","code":"x"},{"text":" is overshifted such that all of its bits","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"are set to zero."}]},{"type":"codeListing","code":["let z = x >> 11","\/\/ z == 0                         \/\/ 0b00000000"],"syntax":null},{"type":"paragraph","inlineContent":[{"type":"text","text":"Using a negative value as "},{"type":"codeVoice","code":"rhs"},{"text":" is the same as performing a left shift","type":"text"},{"type":"text","text":" "},{"text":"using ","type":"text"},{"code":"abs(rhs)","type":"codeVoice"},{"text":".","type":"text"}]},{"syntax":null,"type":"codeListing","code":["let a = x >> -3","\/\/ a == 240                       \/\/ 0b11110000","let b = x << 3","\/\/ b == 240                       \/\/ 0b11110000"]},{"type":"paragraph","inlineContent":[{"text":"Right shift operations on negative values “fill in” the high bits with","type":"text"},{"type":"text","text":" "},{"type":"text","text":"ones instead of zeros."}]},{"type":"codeListing","syntax":null,"code":["let q: Int8 = -30                 \/\/ 0b11100010","let r = q >> 2","\/\/ r == -8                        \/\/ 0b11111000","","let s = q >> 11","\/\/ s == -1                        \/\/ 0b11111111"]}]}],"abstract":[{"text":"Returns the result of shifting a value’s binary representation the","type":"text"},{"text":" ","type":"text"},{"text":"specified number of digits to the right.","type":"text"}],"sections":[],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Int8":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Int8"}],"url":"\/documentation\/compute\/int8","title":"Int8","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Int8"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8","abstract":[{"text":"An 8-bit signed integer value","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"type."}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Int8/FixedWidthInteger-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8\/FixedWidthInteger-Implementations","abstract":[],"title":"FixedWidthInteger Implementations","url":"\/documentation\/compute\/int8\/fixedwidthinteger-implementations","role":"collectionGroup","kind":"article","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/BinaryInteger":{"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"BinaryInteger"}],"navigatorTitle":[{"kind":"identifier","text":"BinaryInteger"}],"url":"\/documentation\/compute\/binaryinteger","type":"topic","abstract":[{"type":"text","text":"An integer type with a binary representation."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryInteger","title":"BinaryInteger","kind":"symbol","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int8/__(_:_:)-7wosz":{"type":"topic","role":"symbol","url":"\/documentation\/compute\/int8\/__(_:_:)-7wosz","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8\/__(_:_:)-7wosz","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":">>","kind":"identifier"},{"kind":"text","text":" "},{"kind":"text","text":"<"},{"text":"Other","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"text":"Other","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"title":">>(_:_:)","abstract":[{"text":"Returns the result of shifting a value’s binary representation the","type":"text"},{"type":"text","text":" "},{"text":"specified number of digits to the right.","type":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"}}}