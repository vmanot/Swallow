{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/int8\/&__(_:_:)-4szuk"]}],"abstract":[{"type":"text","text":"Returns the result of shifting a value’s binary representation the"},{"type":"text","text":" "},{"text":"specified number of digits to the left, masking the shift amount to the","type":"text"},{"type":"text","text":" "},{"text":"type’s bit width.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8\/FixedWidthInteger-Implementations"]]},"sections":[],"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8\/&__(_:_:)-4szuk","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"major":0,"patch":0},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"&<<"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"kind":"internalParam","text":"lhs"},{"text":": ","kind":"text"},{"text":"Int8","preciseIdentifier":"s:s4Int8V","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"rhs","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Int8","kind":"typeIdentifier","preciseIdentifier":"s:s4Int8V","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8"},{"text":") -> ","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8","kind":"typeIdentifier","preciseIdentifier":"s:s4Int8V","text":"Int8"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"lhs","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The value to shift."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The number of bits to shift "},{"code":"lhs","type":"codeVoice"},{"text":" to the left. If ","type":"text"},{"code":"rhs","type":"codeVoice"},{"type":"text","text":" is"},{"text":" ","type":"text"},{"text":"outside the range ","type":"text"},{"type":"codeVoice","code":"0..<lhs.bitWidth"},{"type":"text","text":", it is masked to produce a"},{"type":"text","text":" "},{"type":"text","text":"value within that range."}]}],"name":"rhs"}]},{"content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"inlineContent":[{"type":"text","text":"Use the masking left shift operator ("},{"code":"&<<","type":"codeVoice"},{"type":"text","text":") when you need to perform a"},{"text":" ","type":"text"},{"type":"text","text":"shift and are sure that the shift amount is in the range"},{"text":" ","type":"text"},{"type":"codeVoice","code":"0..<lhs.bitWidth"},{"type":"text","text":". Before shifting, the masking left shift operator"},{"type":"text","text":" "},{"type":"text","text":"masks the shift to this range. The shift is performed using this masked"},{"text":" ","type":"text"},{"type":"text","text":"value."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The following example defines "},{"code":"x","type":"codeVoice"},{"type":"text","text":" as an instance of "},{"type":"codeVoice","code":"UInt8"},{"text":", an 8-bit,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"unsigned integer type. If you use "},{"code":"2","type":"codeVoice"},{"text":" as the right-hand-side value in an","type":"text"},{"type":"text","text":" "},{"type":"text","text":"operation on "},{"code":"x","type":"codeVoice"},{"text":", the shift amount requires no masking.","type":"text"}]},{"syntax":null,"code":["let x: UInt8 = 30                 \/\/ 0b00011110","let y = x &<< 2","\/\/ y == 120                       \/\/ 0b01111000"],"type":"codeListing"},{"inlineContent":[{"text":"However, if you use ","type":"text"},{"code":"8","type":"codeVoice"},{"text":" as the shift amount, the method first masks the","type":"text"},{"text":" ","type":"text"},{"text":"shift amount to zero, and then performs the shift, resulting in no change","type":"text"},{"type":"text","text":" "},{"type":"text","text":"to the original value."}],"type":"paragraph"},{"type":"codeListing","code":["let z = x &<< 8","\/\/ z == 30                        \/\/ 0b00011110"],"syntax":null},{"inlineContent":[{"type":"text","text":"If the bit width of the shifted integer type is a power of two, masking"},{"type":"text","text":" "},{"text":"is performed using a bitmask; otherwise, masking is performed using a","type":"text"},{"type":"text","text":" "},{"type":"text","text":"modulo operation."}],"type":"paragraph"}],"kind":"content"}],"kind":"symbol","metadata":{"roleHeading":"Operator","modules":[{"name":"Compute","relatedModules":["Swift"]}],"extendedModule":"Swift","externalID":"s:s4Int8V3alloiyA2B_ABtFZ","role":"symbol","symbolKind":"op","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"&<<"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"Int8","kind":"typeIdentifier","preciseIdentifier":"s:s4Int8V"},{"kind":"text","text":", "},{"text":"Int8","preciseIdentifier":"s:s4Int8V","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:s4Int8V","text":"Int8","kind":"typeIdentifier"}],"title":"&<<(_:_:)"},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int8/&__(_:_:)-4szuk":{"title":"&<<(_:_:)","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8\/&__(_:_:)-4szuk","abstract":[{"text":"Returns the result of shifting a value’s binary representation the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"specified number of digits to the left, masking the shift amount to the"},{"type":"text","text":" "},{"type":"text","text":"type’s bit width."}],"type":"topic","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"&<<","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Int8","preciseIdentifier":"s:s4Int8V"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Int8V","text":"Int8"},{"kind":"text","text":") -> "},{"text":"Int8","kind":"typeIdentifier","preciseIdentifier":"s:s4Int8V"}],"url":"\/documentation\/compute\/int8\/&__(_:_:)-4szuk","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int8/FixedWidthInteger-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8\/FixedWidthInteger-Implementations","abstract":[],"title":"FixedWidthInteger Implementations","url":"\/documentation\/compute\/int8\/fixedwidthinteger-implementations","role":"collectionGroup","kind":"article","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int8":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Int8"}],"url":"\/documentation\/compute\/int8","title":"Int8","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Int8"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8","abstract":[{"text":"An 8-bit signed integer value","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"type."}]}}}