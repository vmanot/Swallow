{"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"*"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Int16","preciseIdentifier":"s:s5Int16V"},{"kind":"text","text":", "},{"text":"Int16","preciseIdentifier":"s:s5Int16V","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:s5Int16V","text":"Int16","kind":"typeIdentifier"}],"modules":[{"name":"Compute","relatedModules":["Swift"]}],"roleHeading":"Operator","title":"*(_:_:)","role":"symbol","extendedModule":"Swift","symbolKind":"op","externalID":"s:s5Int16V1moiyA2B_ABtFZ"},"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/*(_:_:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Multiplies two values and produces their product."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/int16\/*(_:_:)"]}],"sections":[],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"*","kind":"identifier"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"kind":"internalParam","text":"lhs"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s5Int16V","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16","text":"Int16"},{"kind":"text","text":", "},{"text":"rhs","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Int16","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16","kind":"typeIdentifier","preciseIdentifier":"s:s5Int16V"},{"text":") -> ","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16","text":"Int16","kind":"typeIdentifier","preciseIdentifier":"s:s5Int16V"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The first value to multiply."}]}],"name":"lhs"},{"name":"rhs","content":[{"inlineContent":[{"type":"text","text":"The second value to multiply."}],"type":"paragraph"}]}]},{"content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"The multiplication operator (","type":"text"},{"type":"codeVoice","code":"*"},{"text":") calculates the product of its two","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"arguments. For example:"}]},{"type":"codeListing","syntax":null,"code":["2 * 3                   \/\/ 6","100 * 21                \/\/ 2100","-10 * 15                \/\/ -150","3.5 * 2.25              \/\/ 7.875"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You cannot use "},{"type":"codeVoice","code":"*"},{"type":"text","text":" with arguments of different types. To multiply values"},{"type":"text","text":" "},{"text":"of different types, convert one of the values to the other value’s type.","type":"text"}]},{"type":"codeListing","syntax":null,"code":["let x: Int8 = 21","let y: Int = 1000000","Int(x) * y              \/\/ 21000000"]},{"type":"paragraph","inlineContent":[{"text":"The product of the two arguments must be representable in the arguments’","type":"text"},{"type":"text","text":" "},{"text":"type. In the following example, the result of ","type":"text"},{"code":"21 * 21","type":"codeVoice"},{"text":" is greater than","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the maximum representable "},{"code":"Int8","type":"codeVoice"},{"type":"text","text":" value:"}]},{"type":"codeListing","syntax":null,"code":["x * 21                  \/\/ Overflow error"]},{"name":"Note","style":"note","type":"aside","content":[{"inlineContent":[{"type":"text","text":"Overflow checking is not performed in "},{"code":"-Ounchecked","type":"codeVoice"},{"type":"text","text":" builds."}],"type":"paragraph"}]},{"inlineContent":[{"text":"If you want to opt out of overflow checking and wrap the result in case","type":"text"},{"text":" ","type":"text"},{"text":"of any overflow, use the overflow multiplication operator (","type":"text"},{"code":"&*","type":"codeVoice"},{"type":"text","text":")."}],"type":"paragraph"},{"type":"codeListing","code":["x &* 21                \/\/ -115"],"syntax":null}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/BinaryInteger-Implementations"]]},"kind":"symbol","references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Int16":{"title":"Int16","abstract":[{"text":"A 16-bit signed integer value","type":"text"},{"type":"text","text":" "},{"text":"type.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Int16"}],"type":"topic","url":"\/documentation\/compute\/int16","navigatorTitle":[{"kind":"identifier","text":"Int16"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Int16/*(_:_:)":{"type":"topic","abstract":[{"text":"Multiplies two values and produces their product.","type":"text"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"*","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"preciseIdentifier":"s:s5Int16V","text":"Int16","kind":"typeIdentifier"},{"kind":"text","text":", "},{"preciseIdentifier":"s:s5Int16V","text":"Int16","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:s5Int16V","text":"Int16","kind":"typeIdentifier"}],"title":"*(_:_:)","role":"symbol","url":"\/documentation\/compute\/int16\/*(_:_:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/*(_:_:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int16/BinaryInteger-Implementations":{"role":"collectionGroup","type":"topic","title":"BinaryInteger Implementations","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/BinaryInteger-Implementations","kind":"article","url":"\/documentation\/compute\/int16\/binaryinteger-implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"}}}