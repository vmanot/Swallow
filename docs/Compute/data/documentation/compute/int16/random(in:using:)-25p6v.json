{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/random(in:using:)-25p6v"},"variants":[{"paths":["\/documentation\/compute\/int16\/random(in:using:)-25p6v"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"text":"Returns a random value within the specified range, using the given","type":"text"},{"type":"text","text":" "},{"type":"text","text":"generator as a source for randomness."}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/FixedWidthInteger-Implementations"]]},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"random"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"text":"in","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"range"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Range","preciseIdentifier":"s:Sn","text":"Range"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"using"},{"kind":"text","text":" "},{"text":"generator","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"},{"text":" ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":" : "},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RandomNumberGenerator","kind":"typeIdentifier","preciseIdentifier":"s:SG","text":"RandomNumberGenerator"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"range","content":[{"type":"paragraph","inlineContent":[{"text":"The range in which to create a random value.","type":"text"},{"text":" ","type":"text"},{"code":"range","type":"codeVoice"},{"type":"text","text":" must not be empty."}]}]},{"name":"generator","content":[{"type":"paragraph","inlineContent":[{"text":"The random number generator to use when creating the","type":"text"},{"text":" ","type":"text"},{"text":"new random value.","type":"text"}]}]}]},{"kind":"content","content":[{"type":"heading","text":"Return Value","level":2,"anchor":"return-value"},{"type":"paragraph","inlineContent":[{"text":"A random value within the bounds of ","type":"text"},{"type":"codeVoice","code":"range"},{"type":"text","text":"."}]}]},{"kind":"content","content":[{"level":2,"anchor":"discussion","type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"Use this method to generate an integer within a specific range when you","type":"text"},{"text":" ","type":"text"},{"text":"are using a custom random number generator. This example creates three","type":"text"},{"type":"text","text":" "},{"type":"text","text":"new values in the range "},{"code":"1..<100","type":"codeVoice"},{"text":".","type":"text"}]},{"type":"codeListing","syntax":null,"code":["for _ in 1...3 {","    print(Int.random(in: 1..<100, using: &myGenerator))","}","\/\/ Prints \"7\"","\/\/ Prints \"44\"","\/\/ Prints \"21\""]},{"type":"aside","name":"Note","content":[{"type":"paragraph","inlineContent":[{"text":"The algorithm used to create random values may change in a future","type":"text"},{"text":" ","type":"text"},{"text":"version of Swift. If youâ€™re passing a generator that results in the","type":"text"},{"type":"text","text":" "},{"text":"same sequence of integer values each time you run your program, that","type":"text"},{"text":" ","type":"text"},{"text":"sequence may change when your program is compiled using a different","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"version of Swift."}]}],"style":"note"}]}],"metadata":{"extendedModule":"Swift","symbolKind":"method","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"random"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"text":"in","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Range","preciseIdentifier":"s:Sn","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">, "},{"text":"using","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"}],"role":"symbol","modules":[{"name":"Compute","relatedModules":["Swift"]}],"title":"random(in:using:)","roleHeading":"Type Method","externalID":"s:s17FixedWidthIntegerPsE6random2in5usingxSnyxG_qd__ztSGRd__lFZ::SYNTHESIZED::s:s5Int16V"},"kind":"symbol","references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Range":{"kind":"symbol","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Range","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Range","url":"\/documentation\/compute\/range","abstract":[{"text":"A half-open interval from a lower bound up to, but not including, an upper","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"bound."}],"navigatorTitle":[{"text":"Range","kind":"identifier"}],"title":"Range"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int16/FixedWidthInteger-Implementations":{"url":"\/documentation\/compute\/int16\/fixedwidthinteger-implementations","kind":"article","title":"FixedWidthInteger Implementations","role":"collectionGroup","type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/FixedWidthInteger-Implementations","abstract":[]},"doc://com.swallow.documentation.Compute/documentation/Compute/Int16":{"title":"Int16","abstract":[{"text":"A 16-bit signed integer value","type":"text"},{"type":"text","text":" "},{"text":"type.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Int16"}],"type":"topic","url":"\/documentation\/compute\/int16","navigatorTitle":[{"kind":"identifier","text":"Int16"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/RandomNumberGenerator":{"abstract":[{"text":"A type that provides uniformly distributed random data.","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"RandomNumberGenerator"}],"url":"\/documentation\/compute\/randomnumbergenerator","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RandomNumberGenerator","title":"RandomNumberGenerator","role":"symbol","type":"topic","navigatorTitle":[{"text":"RandomNumberGenerator","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Int16/random(in:using:)-25p6v":{"title":"random(in:using:)","type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/random(in:using:)-25p6v","kind":"symbol","role":"symbol","url":"\/documentation\/compute\/int16\/random(in:using:)-25p6v","abstract":[{"type":"text","text":"Returns a random value within the specified range, using the given"},{"text":" ","type":"text"},{"type":"text","text":"generator as a source for randomness."}],"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"random","kind":"identifier"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"in","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sn","kind":"typeIdentifier","text":"Range"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"using"},{"text":": ","kind":"text"},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"}]}}}