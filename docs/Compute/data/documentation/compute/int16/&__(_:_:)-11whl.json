{"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/&__(_:_:)-11whl","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"&<<","kind":"identifier"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"text":"lhs","kind":"internalParam"},{"kind":"text","text":": "},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16","preciseIdentifier":"s:s5Int16V","text":"Int16","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"internalParam","text":"rhs"},{"text":": ","kind":"text"},{"text":"Int16","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16","kind":"typeIdentifier","preciseIdentifier":"s:s5Int16V"},{"kind":"text","text":") -> "},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16","preciseIdentifier":"s:s5Int16V","text":"Int16","kind":"typeIdentifier"}]}]},{"kind":"parameters","parameters":[{"name":"lhs","content":[{"inlineContent":[{"type":"text","text":"The value to shift."}],"type":"paragraph"}]},{"name":"rhs","content":[{"inlineContent":[{"type":"text","text":"The number of bits to shift "},{"type":"codeVoice","code":"lhs"},{"type":"text","text":" to the left. If "},{"code":"rhs","type":"codeVoice"},{"type":"text","text":" is"},{"type":"text","text":" "},{"text":"outside the range ","type":"text"},{"type":"codeVoice","code":"0..<lhs.bitWidth"},{"text":", it is masked to produce a","type":"text"},{"type":"text","text":" "},{"type":"text","text":"value within that range."}],"type":"paragraph"}]}]},{"content":[{"level":2,"text":"Discussion","type":"heading","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"Use the masking left shift operator (","type":"text"},{"code":"&<<","type":"codeVoice"},{"type":"text","text":") when you need to perform a"},{"text":" ","type":"text"},{"type":"text","text":"shift and are sure that the shift amount is in the range"},{"type":"text","text":" "},{"code":"0..<lhs.bitWidth","type":"codeVoice"},{"type":"text","text":". Before shifting, the masking left shift operator"},{"type":"text","text":" "},{"type":"text","text":"masks the shift to this range. The shift is performed using this masked"},{"type":"text","text":" "},{"type":"text","text":"value."}]},{"inlineContent":[{"type":"text","text":"The following example defines "},{"code":"x","type":"codeVoice"},{"text":" as an instance of ","type":"text"},{"type":"codeVoice","code":"UInt8"},{"text":", an 8-bit,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"unsigned integer type. If you use "},{"type":"codeVoice","code":"2"},{"type":"text","text":" as the right-hand-side value in an"},{"type":"text","text":" "},{"type":"text","text":"operation on "},{"type":"codeVoice","code":"x"},{"text":", the shift amount requires no masking.","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":["let x: UInt8 = 30                 \/\/ 0b00011110","let y = x &<< 2","\/\/ y == 120                       \/\/ 0b01111000"]},{"inlineContent":[{"text":"However, if you use ","type":"text"},{"code":"8","type":"codeVoice"},{"text":" as the shift amount, the method first masks the","type":"text"},{"type":"text","text":" "},{"text":"shift amount to zero, and then performs the shift, resulting in no change","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"to the original value."}],"type":"paragraph"},{"syntax":null,"code":["let z = x &<< 8","\/\/ z == 30                        \/\/ 0b00011110"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"If the bit width of the shifted integer type is a power of two, masking"},{"text":" ","type":"text"},{"text":"is performed using a bitmask; otherwise, masking is performed using a","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"modulo operation."}],"type":"paragraph"}],"kind":"content"}],"kind":"symbol","sections":[],"metadata":{"extendedModule":"Swift","symbolKind":"op","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"&<<","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s5Int16V","text":"Int16"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:s5Int16V","kind":"typeIdentifier","text":"Int16"},{"kind":"text","text":") -> "},{"text":"Int16","preciseIdentifier":"s:s5Int16V","kind":"typeIdentifier"}],"role":"symbol","roleHeading":"Operator","title":"&<<(_:_:)","modules":[{"relatedModules":["Swift"],"name":"Compute"}],"externalID":"s:s5Int16V3alloiyA2B_ABtFZ"},"schemaVersion":{"major":0,"minor":3,"patch":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/int16\/&__(_:_:)-11whl"]}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/FixedWidthInteger-Implementations"]]},"abstract":[{"text":"Returns the result of shifting a value’s binary representation the","type":"text"},{"type":"text","text":" "},{"text":"specified number of digits to the left, masking the shift amount to the","type":"text"},{"type":"text","text":" "},{"text":"type’s bit width.","type":"text"}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Int16/FixedWidthInteger-Implementations":{"url":"\/documentation\/compute\/int16\/fixedwidthinteger-implementations","kind":"article","title":"FixedWidthInteger Implementations","role":"collectionGroup","type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/FixedWidthInteger-Implementations","abstract":[]},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int16":{"title":"Int16","abstract":[{"text":"A 16-bit signed integer value","type":"text"},{"type":"text","text":" "},{"text":"type.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Int16"}],"type":"topic","url":"\/documentation\/compute\/int16","navigatorTitle":[{"kind":"identifier","text":"Int16"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Int16/&__(_:_:)-11whl":{"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"&<<","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"Int16","kind":"typeIdentifier","preciseIdentifier":"s:s5Int16V"},{"kind":"text","text":", "},{"text":"Int16","preciseIdentifier":"s:s5Int16V","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:s5Int16V","text":"Int16","kind":"typeIdentifier"}],"url":"\/documentation\/compute\/int16\/&__(_:_:)-11whl","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/&__(_:_:)-11whl","type":"topic","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Returns the result of shifting a value’s binary representation the"},{"text":" ","type":"text"},{"type":"text","text":"specified number of digits to the left, masking the shift amount to the"},{"type":"text","text":" "},{"text":"type’s bit width.","type":"text"}],"title":"&<<(_:_:)"}}}