{"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":">>=","kind":"identifier"},{"kind":"text","text":" "},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Other"},{"text":">(","kind":"text"},{"kind":"internalParam","text":"lhs"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"internalParam","text":"rhs"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Other"},{"text":") ","kind":"text"},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Other"},{"text":" : ","kind":"text"},{"text":"BinaryInteger","kind":"typeIdentifier","preciseIdentifier":"s:Sz","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryInteger"}],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"name":"lhs","content":[{"inlineContent":[{"type":"text","text":"The value to shift."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"The number of bits to shift ","type":"text"},{"type":"codeVoice","code":"lhs"},{"type":"text","text":" to the right."}]}],"name":"rhs"}]},{"content":[{"anchor":"discussion","level":2,"text":"Discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"code":">>=","type":"codeVoice"},{"text":" operator performs a ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"smart shift"}]},{"type":"text","text":", which defines a result for a"},{"type":"text","text":" "},{"type":"text","text":"shift of any value."}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Using a negative value for ","type":"text"},{"type":"codeVoice","code":"rhs"},{"type":"text","text":" performs a left shift using"},{"type":"text","text":" "},{"code":"abs(rhs)","type":"codeVoice"},{"type":"text","text":"."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Using a value for "},{"type":"codeVoice","code":"rhs"},{"type":"text","text":" that is greater than or equal to the bit width"},{"text":" ","type":"text"},{"type":"text","text":"of "},{"type":"codeVoice","code":"lhs"},{"type":"text","text":" is an "},{"type":"emphasis","inlineContent":[{"text":"overshift","type":"text"}]},{"type":"text","text":". An overshift results in "},{"code":"-1","type":"codeVoice"},{"text":" for a","type":"text"},{"type":"text","text":" "},{"type":"text","text":"negative value of "},{"code":"lhs","type":"codeVoice"},{"type":"text","text":" or "},{"type":"codeVoice","code":"0"},{"type":"text","text":" for a nonnegative value."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Using any other value for ","type":"text"},{"type":"codeVoice","code":"rhs"},{"text":" performs a right shift on ","type":"text"},{"code":"lhs","type":"codeVoice"},{"type":"text","text":" by that"},{"text":" ","type":"text"},{"text":"amount.","type":"text"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The following example defines "},{"code":"x","type":"codeVoice"},{"type":"text","text":" as an instance of "},{"type":"codeVoice","code":"UInt8"},{"type":"text","text":", an 8-bit,"},{"type":"text","text":" "},{"text":"unsigned integer type. If you use ","type":"text"},{"code":"2","type":"codeVoice"},{"text":" as the right-hand-side value in an","type":"text"},{"type":"text","text":" "},{"type":"text","text":"operation on "},{"type":"codeVoice","code":"x"},{"text":", the value is shifted right by two bits.","type":"text"}]},{"type":"codeListing","code":["var x: UInt8 = 30                 \/\/ 0b00011110","x >>= 2","\/\/ x == 7                         \/\/ 0b00000111"],"syntax":null},{"type":"paragraph","inlineContent":[{"text":"If you use ","type":"text"},{"code":"11","type":"codeVoice"},{"text":" as ","type":"text"},{"type":"codeVoice","code":"rhs"},{"text":", ","type":"text"},{"code":"x","type":"codeVoice"},{"type":"text","text":" is overshifted such that all of its bits"},{"type":"text","text":" "},{"text":"are set to zero.","type":"text"}]},{"type":"codeListing","code":["var y: UInt8 = 30                 \/\/ 0b00011110","y >>= 11","\/\/ y == 0                         \/\/ 0b00000000"],"syntax":null},{"type":"paragraph","inlineContent":[{"type":"text","text":"Using a negative value as "},{"type":"codeVoice","code":"rhs"},{"type":"text","text":" is the same as performing a left shift"},{"type":"text","text":" "},{"type":"text","text":"using "},{"type":"codeVoice","code":"abs(rhs)"},{"type":"text","text":"."}]},{"type":"codeListing","code":["var a: UInt8 = 30                 \/\/ 0b00011110","a >>= -3","\/\/ a == 240                       \/\/ 0b11110000","","var b: UInt8 = 30                 \/\/ 0b00011110","b <<= 3","\/\/ b == 240                       \/\/ 0b11110000"],"syntax":null},{"type":"paragraph","inlineContent":[{"text":"Right shift operations on negative values “fill in” the high bits with","type":"text"},{"type":"text","text":" "},{"text":"ones instead of zeros.","type":"text"}]},{"code":["var q: Int8 = -30                 \/\/ 0b11100010","q >>= 2","\/\/ q == -8                        \/\/ 0b11111000","","var r: Int8 = -30                 \/\/ 0b11100010","r >>= 11","\/\/ r == -1                        \/\/ 0b11111111"],"type":"codeListing","syntax":null}],"kind":"content"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/BinaryInteger-Implementations"]]},"abstract":[{"text":"Stores the result of shifting a value’s binary representation the","type":"text"},{"type":"text","text":" "},{"text":"specified number of digits to the right in the left-hand-side variable.","type":"text"}],"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/__=(_:_:)-1hmwr","interfaceLanguage":"swift"},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/int16\/__=(_:_:)-1hmwr"]}],"metadata":{"symbolKind":"op","modules":[{"relatedModules":["Swift"],"name":"Compute"}],"role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":">>="},{"text":" ","kind":"text"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Other"},{"text":">(","kind":"text"},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Other","kind":"typeIdentifier"},{"text":")","kind":"text"}],"title":">>=(_:_:)","externalID":"s:s17FixedWidthIntegerPsE3ggeoiyyxz_qd__tSzRd__lFZ::SYNTHESIZED::s:s5Int16V","roleHeading":"Operator","extendedModule":"Swift"},"kind":"symbol","references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Int16":{"title":"Int16","abstract":[{"text":"A 16-bit signed integer value","type":"text"},{"type":"text","text":" "},{"text":"type.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Int16"}],"type":"topic","url":"\/documentation\/compute\/int16","navigatorTitle":[{"kind":"identifier","text":"Int16"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Int16/BinaryInteger-Implementations":{"role":"collectionGroup","type":"topic","title":"BinaryInteger Implementations","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/BinaryInteger-Implementations","kind":"article","url":"\/documentation\/compute\/int16\/binaryinteger-implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int16/__=(_:_:)-1hmwr":{"title":">>=(_:_:)","role":"symbol","kind":"symbol","type":"topic","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":">>="},{"text":" ","kind":"text"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Other"},{"text":">(","kind":"text"},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"text":"Other","kind":"typeIdentifier"},{"kind":"text","text":")"}],"url":"\/documentation\/compute\/int16\/__=(_:_:)-1hmwr","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/__=(_:_:)-1hmwr","abstract":[{"type":"text","text":"Stores the result of shifting a value’s binary representation the"},{"type":"text","text":" "},{"type":"text","text":"specified number of digits to the right in the left-hand-side variable."}]},"doc://com.swallow.documentation.Compute/documentation/Compute/BinaryInteger":{"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"BinaryInteger"}],"navigatorTitle":[{"kind":"identifier","text":"BinaryInteger"}],"url":"\/documentation\/compute\/binaryinteger","type":"topic","abstract":[{"type":"text","text":"An integer type with a binary representation."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryInteger","title":"BinaryInteger","kind":"symbol","role":"symbol"}}}