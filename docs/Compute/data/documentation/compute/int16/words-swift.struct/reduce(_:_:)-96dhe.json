{"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/Words-swift.struct\/reduce(_:_:)-96dhe","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"major":0,"patch":0},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/Words-swift.struct","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/Words-swift.struct\/Sequence-Implementations"]]},"sections":[],"kind":"symbol","primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"reduce","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Result","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"initialResult"},{"kind":"text","text":": "},{"text":"Result","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"nextPartialResult"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:ST7ElementQa","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Result"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"initialResult","content":[{"type":"paragraph","inlineContent":[{"text":"The value to use as the initial accumulating value.","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"initialResult"},{"text":" is passed to ","type":"text"},{"code":"nextPartialResult","type":"codeVoice"},{"type":"text","text":" the first time the"},{"type":"text","text":" "},{"type":"text","text":"closure is executed."}]}]},{"content":[{"inlineContent":[{"text":"A closure that combines an accumulating value and","type":"text"},{"text":" ","type":"text"},{"text":"an element of the sequence into a new accumulating value, to be used","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"in the next call of the "},{"code":"nextPartialResult","type":"codeVoice"},{"text":" closure or returned to","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the caller."}],"type":"paragraph"}],"name":"nextPartialResult"}]},{"kind":"content","content":[{"anchor":"return-value","level":2,"text":"Return Value","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"The final accumulated value. If the sequence has no elements,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the result is "},{"type":"codeVoice","code":"initialResult"},{"type":"text","text":"."}]}]},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"Use the "},{"code":"reduce(_:_:)","type":"codeVoice"},{"type":"text","text":" method to produce a single value from the elements"},{"type":"text","text":" "},{"type":"text","text":"of an entire sequence. For example, you can use this method on an array"},{"text":" ","type":"text"},{"type":"text","text":"of numbers to find their sum or product."}],"type":"paragraph"},{"inlineContent":[{"text":"The ","type":"text"},{"type":"codeVoice","code":"nextPartialResult"},{"type":"text","text":" closure is called sequentially with an"},{"text":" ","type":"text"},{"type":"text","text":"accumulating value initialized to "},{"code":"initialResult","type":"codeVoice"},{"type":"text","text":" and each element of"},{"text":" ","type":"text"},{"text":"the sequence. This example shows how to find the sum of an array of","type":"text"},{"type":"text","text":" "},{"text":"numbers.","type":"text"}],"type":"paragraph"},{"syntax":null,"type":"codeListing","code":["let numbers = [1, 2, 3, 4]","let numberSum = numbers.reduce(0, { x, y in","    x + y","})","\/\/ numberSum == 10"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"When "},{"code":"numbers.reduce(_:_:)","type":"codeVoice"},{"type":"text","text":" is called, the following steps occur:"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"nextPartialResult"},{"type":"text","text":" closure is called with "},{"code":"initialResult","type":"codeVoice"},{"text":"—","type":"text"},{"code":"0","type":"codeVoice"},{"type":"text","text":" "},{"text":"in this case—and the first element of ","type":"text"},{"type":"codeVoice","code":"numbers"},{"text":", returning the sum:","type":"text"},{"type":"text","text":" "},{"code":"1","type":"codeVoice"},{"text":".","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The closure is called again repeatedly with the previous call’s return"},{"text":" ","type":"text"},{"type":"text","text":"value and each element of the sequence."}]}]},{"content":[{"inlineContent":[{"text":"When the sequence is exhausted, the last value returned from the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"closure is returned to the caller."}],"type":"paragraph"}]}],"type":"orderedList"},{"type":"paragraph","inlineContent":[{"text":"If the sequence has no elements, ","type":"text"},{"type":"codeVoice","code":"nextPartialResult"},{"type":"text","text":" is never executed"},{"text":" ","type":"text"},{"text":"and ","type":"text"},{"code":"initialResult","type":"codeVoice"},{"text":" is the result of the call to ","type":"text"},{"type":"codeVoice","code":"reduce(_:_:)"},{"text":".","type":"text"}]},{"style":"note","content":[{"inlineContent":[{"type":"text","text":"O("},{"inlineContent":[{"text":"n","type":"text"}],"type":"emphasis"},{"text":"), where ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"n","type":"text"}]},{"text":" is the length of the sequence.","type":"text"}],"type":"paragraph"}],"type":"aside","name":"Complexity"}]}],"abstract":[{"type":"text","text":"Returns the result of combining the elements of the sequence using the"},{"type":"text","text":" "},{"type":"text","text":"given closure."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/int16\/words-swift.struct\/reduce(_:_:)-96dhe"]}],"metadata":{"role":"symbol","roleHeading":"Instance Method","modules":[{"name":"Compute","relatedModules":["Swift"]}],"externalID":"s:STsE6reduceyqd__qd___qd__qd___7ElementQztKXEtKlF::SYNTHESIZED::s:s5Int16V5WordsV","symbolKind":"method","title":"reduce(_:_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"reduce","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Result","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"Result","kind":"typeIdentifier"},{"text":", (","kind":"text"},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Result"}],"extendedModule":"Swift"},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence/Element":{"type":"topic","required":true,"abstract":[{"type":"text","text":"A type representing the sequence’s elements."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"symbol","url":"\/documentation\/compute\/sequence\/element","role":"symbol","title":"Element","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int16/Words-swift.struct/reduce(_:_:)-96dhe":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"reduce"},{"text":"<","kind":"text"},{"text":"Result","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":", ("},{"text":"Result","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Result"}],"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/Words-swift.struct\/reduce(_:_:)-96dhe","kind":"symbol","url":"\/documentation\/compute\/int16\/words-swift.struct\/reduce(_:_:)-96dhe","abstract":[{"type":"text","text":"Returns the result of combining the elements of the sequence using the"},{"type":"text","text":" "},{"text":"given closure.","type":"text"}],"type":"topic","title":"reduce(_:_:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int16":{"title":"Int16","abstract":[{"text":"A 16-bit signed integer value","type":"text"},{"type":"text","text":" "},{"text":"type.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Int16"}],"type":"topic","url":"\/documentation\/compute\/int16","navigatorTitle":[{"kind":"identifier","text":"Int16"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Int16/Words-swift.struct":{"title":"Int16.Words","navigatorTitle":[{"kind":"identifier","text":"Words"}],"abstract":[{"text":"A type that represents the words of this integer.","type":"text"}],"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Words"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/Words-swift.struct","role":"symbol","type":"topic","url":"\/documentation\/compute\/int16\/words-swift.struct"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int16/Words-swift.struct/Sequence-Implementations":{"role":"collectionGroup","kind":"article","type":"topic","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/Words-swift.struct\/Sequence-Implementations","url":"\/documentation\/compute\/int16\/words-swift.struct\/sequence-implementations","title":"Sequence Implementations"}}}