{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/uint32\/'.._(_:_:)"]}],"kind":"symbol","abstract":[{"type":"text","text":"Returns a half-open range that contains its lower bound but not its upper"},{"type":"text","text":" "},{"type":"text","text":"bound."}],"schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt32","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt32\/Comparable-Implementations"]]},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"..<","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"minimum","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"maximum","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"text":"Range","kind":"typeIdentifier","preciseIdentifier":"s:Sn","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Range"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"name":"minimum","content":[{"inlineContent":[{"type":"text","text":"The lower bound for the range."}],"type":"paragraph"}]},{"name":"maximum","content":[{"inlineContent":[{"text":"The upper bound for the range.","type":"text"}],"type":"paragraph"}]}],"kind":"parameters"},{"content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Use the half-open range operator ("},{"type":"codeVoice","code":"..<"},{"type":"text","text":") to create a range of any type"},{"type":"text","text":" "},{"type":"text","text":"that conforms to the "},{"code":"Comparable","type":"codeVoice"},{"text":" protocol. This example creates a","type":"text"},{"text":" ","type":"text"},{"code":"Range<Double>","type":"codeVoice"},{"type":"text","text":" from zero up to, but not including, 5.0."}]},{"code":["let lessThanFive = 0.0..<5.0","print(lessThanFive.contains(3.14))  \/\/ Prints \"true\"","print(lessThanFive.contains(5.0))   \/\/ Prints \"false\""],"syntax":null,"type":"codeListing"},{"style":"note","name":"Precondition","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"minimum <= maximum"},{"text":".","type":"text"}]}],"type":"aside"}],"kind":"content"}],"metadata":{"role":"symbol","title":"..<(_:_:)","modules":[{"name":"Compute","relatedModules":["Swift"]}],"extendedModule":"Swift","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"..<","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","text":"Range"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"symbolKind":"op","roleHeading":"Operator","externalID":"s:SLsE3zzloiySnyxGx_xtFZ::SYNTHESIZED::s:s6UInt32V"},"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt32\/.._(_:_:)","interfaceLanguage":"swift"},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/UInt32/Comparable-Implementations":{"role":"collectionGroup","title":"Comparable Implementations","abstract":[],"url":"\/documentation\/compute\/uint32\/comparable-implementations","type":"topic","kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt32\/Comparable-Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt32":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt32","title":"UInt32","abstract":[{"type":"text","text":"A 32-bit unsigned integer value"},{"type":"text","text":" "},{"text":"type.","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"UInt32","kind":"identifier"}],"url":"\/documentation\/compute\/uint32","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"UInt32","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt32/.._(_:_:)":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"..<"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Range","preciseIdentifier":"s:Sn"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"kind":"symbol","title":"..<(_:_:)","abstract":[{"text":"Returns a half-open range that contains its lower bound but not its upper","type":"text"},{"type":"text","text":" "},{"text":"bound.","type":"text"}],"role":"symbol","type":"topic","url":"\/documentation\/compute\/uint32\/'.._(_:_:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt32\/.._(_:_:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/Range":{"kind":"symbol","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Range","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Range","url":"\/documentation\/compute\/range","abstract":[{"text":"A half-open interval from a lower bound up to, but not including, an upper","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"bound."}],"navigatorTitle":[{"text":"Range","kind":"identifier"}],"title":"Range"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"}}}