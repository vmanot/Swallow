{"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt32","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt32\/FixedWidthInteger-Implementations"]]},"schemaVersion":{"major":0,"patch":0,"minor":3},"metadata":{"roleHeading":"Initializer","title":"init(truncatingIfNeeded:)","externalID":"s:s17FixedWidthIntegerPsE18truncatingIfNeededxqd___tcSzRd__lufc::SYNTHESIZED::s:s6UInt32V","modules":[{"name":"Compute","relatedModules":["Swift"]}],"role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"truncatingIfNeeded"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":")"}],"extendedModule":"Swift","symbolKind":"init"},"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt32\/init(truncatingIfNeeded:)","interfaceLanguage":"swift"},"abstract":[{"text":"Creates a new instance from the bit pattern of the given instance by","type":"text"},{"type":"text","text":" "},{"text":"truncating or sign-extending if needed to fit this type.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"init","kind":"keyword"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"truncatingIfNeeded","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"source"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":") ","kind":"text"},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryInteger","text":"BinaryInteger","preciseIdentifier":"s:Sz"}],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"An integer to convert to this type."}]}],"name":"source"}]},{"kind":"content","content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"inlineContent":[{"text":"When the bit width of ","type":"text"},{"type":"codeVoice","code":"T"},{"text":" (the type of ","type":"text"},{"type":"codeVoice","code":"source"},{"type":"text","text":") is equal to or greater"},{"type":"text","text":" "},{"text":"than this type’s bit width, the result is the truncated","type":"text"},{"type":"text","text":" "},{"text":"least-significant bits of ","type":"text"},{"type":"codeVoice","code":"source"},{"type":"text","text":". For example, when converting a"},{"text":" ","type":"text"},{"type":"text","text":"16-bit value to an 8-bit type, only the lower 8 bits of "},{"type":"codeVoice","code":"source"},{"type":"text","text":" are"},{"type":"text","text":" "},{"text":"used.","type":"text"}],"type":"paragraph"},{"code":["let p: Int16 = -500","\/\/ 'p' has a binary representation of 11111110_00001100","let q = Int8(truncatingIfNeeded: p)","\/\/ q == 12","\/\/ 'q' has a binary representation of 00001100"],"syntax":null,"type":"codeListing"},{"inlineContent":[{"text":"When the bit width of ","type":"text"},{"type":"codeVoice","code":"T"},{"type":"text","text":" is less than this type’s bit width, the result"},{"type":"text","text":" "},{"type":"text","text":"is "},{"type":"emphasis","inlineContent":[{"type":"text","text":"sign-extended"}]},{"type":"text","text":" to fill the remaining bits. That is, if "},{"code":"source","type":"codeVoice"},{"type":"text","text":" is"},{"text":" ","type":"text"},{"type":"text","text":"negative, the result is padded with ones; otherwise, the result is"},{"text":" ","type":"text"},{"type":"text","text":"padded with zeros."}],"type":"paragraph"},{"syntax":null,"code":["let u: Int8 = 21","\/\/ 'u' has a binary representation of 00010101","let v = Int16(truncatingIfNeeded: u)","\/\/ v == 21","\/\/ 'v' has a binary representation of 00000000_00010101","","let w: Int8 = -21","\/\/ 'w' has a binary representation of 11101011","let x = Int16(truncatingIfNeeded: w)","\/\/ x == -21","\/\/ 'x' has a binary representation of 11111111_11101011","let y = UInt16(truncatingIfNeeded: w)","\/\/ y == 65515","\/\/ 'y' has a binary representation of 11111111_11101011"],"type":"codeListing"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/uint32\/init(truncatingifneeded:)"]}],"kind":"symbol","sections":[],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/UInt32":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt32","title":"UInt32","abstract":[{"type":"text","text":"A 32-bit unsigned integer value"},{"type":"text","text":" "},{"text":"type.","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"UInt32","kind":"identifier"}],"url":"\/documentation\/compute\/uint32","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"UInt32","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/BinaryInteger":{"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"BinaryInteger"}],"navigatorTitle":[{"kind":"identifier","text":"BinaryInteger"}],"url":"\/documentation\/compute\/binaryinteger","type":"topic","abstract":[{"type":"text","text":"An integer type with a binary representation."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryInteger","title":"BinaryInteger","kind":"symbol","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt32/init(truncatingIfNeeded:)":{"fragments":[{"kind":"identifier","text":"init"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"truncatingIfNeeded"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"text":")","kind":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt32\/init(truncatingIfNeeded:)","type":"topic","kind":"symbol","url":"\/documentation\/compute\/uint32\/init(truncatingifneeded:)","role":"symbol","abstract":[{"type":"text","text":"Creates a new instance from the bit pattern of the given instance by"},{"text":" ","type":"text"},{"text":"truncating or sign-extending if needed to fit this type.","type":"text"}],"title":"init(truncatingIfNeeded:)"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt32/FixedWidthInteger-Implementations":{"role":"collectionGroup","title":"FixedWidthInteger Implementations","url":"\/documentation\/compute\/uint32\/fixedwidthinteger-implementations","kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt32\/FixedWidthInteger-Implementations","abstract":[],"type":"topic"}}}