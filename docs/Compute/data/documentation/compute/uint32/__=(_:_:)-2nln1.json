{"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":">>="},{"text":" ","kind":"text"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Other"},{"text":">(","kind":"text"},{"kind":"internalParam","text":"lhs"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"rhs","kind":"internalParam"},{"kind":"text","text":": "},{"text":"Other","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"text":"Other","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"BinaryInteger","preciseIdentifier":"s:Sz","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryInteger","kind":"typeIdentifier"}]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"text":"The value to shift.","type":"text"}],"type":"paragraph"}],"name":"lhs"},{"name":"rhs","content":[{"inlineContent":[{"type":"text","text":"The number of bits to shift "},{"code":"lhs","type":"codeVoice"},{"type":"text","text":" to the right."}],"type":"paragraph"}]}]},{"content":[{"anchor":"discussion","text":"Discussion","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"The "},{"code":">>=","type":"codeVoice"},{"text":" operator performs a ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"smart shift","type":"text"}]},{"text":", which defines a result for a","type":"text"},{"type":"text","text":" "},{"text":"shift of any value.","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Using a negative value for "},{"code":"rhs","type":"codeVoice"},{"text":" performs a left shift using","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"abs(rhs)"},{"type":"text","text":"."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Using a value for ","type":"text"},{"type":"codeVoice","code":"rhs"},{"text":" that is greater than or equal to the bit width","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"of "},{"code":"lhs","type":"codeVoice"},{"type":"text","text":" is an "},{"inlineContent":[{"type":"text","text":"overshift"}],"type":"emphasis"},{"text":". An overshift results in ","type":"text"},{"type":"codeVoice","code":"-1"},{"type":"text","text":" for a"},{"text":" ","type":"text"},{"text":"negative value of ","type":"text"},{"code":"lhs","type":"codeVoice"},{"type":"text","text":" or "},{"type":"codeVoice","code":"0"},{"text":" for a nonnegative value.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Using any other value for ","type":"text"},{"type":"codeVoice","code":"rhs"},{"text":" performs a right shift on ","type":"text"},{"code":"lhs","type":"codeVoice"},{"type":"text","text":" by that"},{"type":"text","text":" "},{"text":"amount.","type":"text"}]}]}]},{"type":"paragraph","inlineContent":[{"text":"The following example defines ","type":"text"},{"type":"codeVoice","code":"x"},{"text":" as an instance of ","type":"text"},{"code":"UInt8","type":"codeVoice"},{"text":", an 8-bit,","type":"text"},{"text":" ","type":"text"},{"text":"unsigned integer type. If you use ","type":"text"},{"type":"codeVoice","code":"2"},{"text":" as the right-hand-side value in an","type":"text"},{"type":"text","text":" "},{"text":"operation on ","type":"text"},{"code":"x","type":"codeVoice"},{"text":", the value is shifted right by two bits.","type":"text"}]},{"syntax":null,"type":"codeListing","code":["var x: UInt8 = 30                 \/\/ 0b00011110","x >>= 2","\/\/ x == 7                         \/\/ 0b00000111"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you use "},{"code":"11","type":"codeVoice"},{"type":"text","text":" as "},{"code":"rhs","type":"codeVoice"},{"text":", ","type":"text"},{"type":"codeVoice","code":"x"},{"type":"text","text":" is overshifted such that all of its bits"},{"type":"text","text":" "},{"type":"text","text":"are set to zero."}]},{"type":"codeListing","syntax":null,"code":["var y: UInt8 = 30                 \/\/ 0b00011110","y >>= 11","\/\/ y == 0                         \/\/ 0b00000000"]},{"type":"paragraph","inlineContent":[{"text":"Using a negative value as ","type":"text"},{"type":"codeVoice","code":"rhs"},{"text":" is the same as performing a left shift","type":"text"},{"type":"text","text":" "},{"text":"using ","type":"text"},{"type":"codeVoice","code":"abs(rhs)"},{"text":".","type":"text"}]},{"type":"codeListing","syntax":null,"code":["var a: UInt8 = 30                 \/\/ 0b00011110","a >>= -3","\/\/ a == 240                       \/\/ 0b11110000","","var b: UInt8 = 30                 \/\/ 0b00011110","b <<= 3","\/\/ b == 240                       \/\/ 0b11110000"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Right shift operations on negative values “fill in” the high bits with"},{"type":"text","text":" "},{"text":"ones instead of zeros.","type":"text"}]},{"code":["var q: Int8 = -30                 \/\/ 0b11100010","q >>= 2","\/\/ q == -8                        \/\/ 0b11111000","","var r: Int8 = -30                 \/\/ 0b11100010","r >>= 11","\/\/ r == -1                        \/\/ 0b11111111"],"syntax":null,"type":"codeListing"}],"kind":"content"}],"kind":"symbol","metadata":{"symbolKind":"op","roleHeading":"Operator","externalID":"s:s17FixedWidthIntegerPsE3ggeoiyyxz_qd__tSzRd__lFZ::SYNTHESIZED::s:s6UInt32V","role":"symbol","modules":[{"relatedModules":["Swift"],"name":"Compute"}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":">>=","kind":"identifier"},{"kind":"text","text":" "},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Other"},{"kind":"text","text":">("},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Other"},{"text":")","kind":"text"}],"extendedModule":"Swift","title":">>=(_:_:)"},"schemaVersion":{"major":0,"patch":0,"minor":3},"sections":[],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt32","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt32\/BinaryInteger-Implementations"]]},"abstract":[{"text":"Stores the result of shifting a value’s binary representation the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"specified number of digits to the right in the left-hand-side variable."}],"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt32\/__=(_:_:)-2nln1","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/uint32\/__=(_:_:)-2nln1"]}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/UInt32/BinaryInteger-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt32\/BinaryInteger-Implementations","kind":"article","abstract":[],"title":"BinaryInteger Implementations","role":"collectionGroup","url":"\/documentation\/compute\/uint32\/binaryinteger-implementations","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/BinaryInteger":{"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"BinaryInteger"}],"navigatorTitle":[{"kind":"identifier","text":"BinaryInteger"}],"url":"\/documentation\/compute\/binaryinteger","type":"topic","abstract":[{"type":"text","text":"An integer type with a binary representation."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryInteger","title":"BinaryInteger","kind":"symbol","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt32/__=(_:_:)-2nln1":{"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":">>=","kind":"identifier"},{"kind":"text","text":" "},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Other"},{"text":">(","kind":"text"},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Other"},{"text":")","kind":"text"}],"kind":"symbol","role":"symbol","type":"topic","url":"\/documentation\/compute\/uint32\/__=(_:_:)-2nln1","abstract":[{"type":"text","text":"Stores the result of shifting a value’s binary representation the"},{"type":"text","text":" "},{"text":"specified number of digits to the right in the left-hand-side variable.","type":"text"}],"title":">>=(_:_:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt32\/__=(_:_:)-2nln1"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt32":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt32","title":"UInt32","abstract":[{"type":"text","text":"A 32-bit unsigned integer value"},{"type":"text","text":" "},{"text":"type.","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"UInt32","kind":"identifier"}],"url":"\/documentation\/compute\/uint32","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"UInt32","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"}}}