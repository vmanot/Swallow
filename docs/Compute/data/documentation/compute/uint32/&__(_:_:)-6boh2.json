{"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt32","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt32\/FixedWidthInteger-Implementations"]]},"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt32\/&__(_:_:)-6boh2","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/compute\/uint32\/&__(_:_:)-6boh2"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"&<<","kind":"identifier"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"text":"lhs","kind":"internalParam"},{"kind":"text","text":": "},{"text":"UInt32","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt32","kind":"typeIdentifier","preciseIdentifier":"s:s6UInt32V"},{"kind":"text","text":", "},{"text":"rhs","kind":"internalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s6UInt32V","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt32","text":"UInt32"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s6UInt32V","text":"UInt32","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt32"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"text":"The value to shift.","type":"text"}],"type":"paragraph"}],"name":"lhs"},{"name":"rhs","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The number of bits to shift "},{"type":"codeVoice","code":"lhs"},{"text":" to the left. If ","type":"text"},{"type":"codeVoice","code":"rhs"},{"type":"text","text":" is"},{"type":"text","text":" "},{"type":"text","text":"outside the range "},{"type":"codeVoice","code":"0..<lhs.bitWidth"},{"type":"text","text":", it is masked to produce a"},{"text":" ","type":"text"},{"text":"value within that range.","type":"text"}]}]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"text":"Discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"Use the masking left shift operator (","type":"text"},{"type":"codeVoice","code":"&<<"},{"text":") when you need to perform a","type":"text"},{"type":"text","text":" "},{"text":"shift and are sure that the shift amount is in the range","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"0..<lhs.bitWidth"},{"text":". Before shifting, the masking left shift operator","type":"text"},{"type":"text","text":" "},{"text":"masks the shift to this range. The shift is performed using this masked","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"value."}]},{"inlineContent":[{"text":"The following example defines ","type":"text"},{"type":"codeVoice","code":"x"},{"type":"text","text":" as an instance of "},{"code":"UInt8","type":"codeVoice"},{"text":", an 8-bit,","type":"text"},{"type":"text","text":" "},{"text":"unsigned integer type. If you use ","type":"text"},{"type":"codeVoice","code":"2"},{"type":"text","text":" as the right-hand-side value in an"},{"type":"text","text":" "},{"type":"text","text":"operation on "},{"type":"codeVoice","code":"x"},{"type":"text","text":", the shift amount requires no masking."}],"type":"paragraph"},{"syntax":null,"code":["let x: UInt8 = 30                 \/\/ 0b00011110","let y = x &<< 2","\/\/ y == 120                       \/\/ 0b01111000"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"However, if you use "},{"code":"8","type":"codeVoice"},{"text":" as the shift amount, the method first masks the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"shift amount to zero, and then performs the shift, resulting in no change"},{"type":"text","text":" "},{"text":"to the original value.","type":"text"}]},{"code":["let z = x &<< 8","\/\/ z == 30                        \/\/ 0b00011110"],"type":"codeListing","syntax":null},{"type":"paragraph","inlineContent":[{"type":"text","text":"If the bit width of the shifted integer type is a power of two, masking"},{"type":"text","text":" "},{"type":"text","text":"is performed using a bitmask; otherwise, masking is performed using a"},{"type":"text","text":" "},{"type":"text","text":"modulo operation."}]}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"abstract":[{"type":"text","text":"Returns the result of shifting a value’s binary representation the"},{"type":"text","text":" "},{"type":"text","text":"specified number of digits to the left, masking the shift amount to the"},{"text":" ","type":"text"},{"type":"text","text":"type’s bit width."}],"metadata":{"extendedModule":"Swift","roleHeading":"Operator","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"&<<","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"UInt32","preciseIdentifier":"s:s6UInt32V","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"UInt32","kind":"typeIdentifier","preciseIdentifier":"s:s6UInt32V"},{"text":") -> ","kind":"text"},{"text":"UInt32","preciseIdentifier":"s:s6UInt32V","kind":"typeIdentifier"}],"externalID":"s:s6UInt32V3alloiyA2B_ABtFZ","modules":[{"relatedModules":["Swift"],"name":"Compute"}],"title":"&<<(_:_:)","role":"symbol","symbolKind":"op"},"sections":[],"kind":"symbol","references":{"doc://com.swallow.documentation.Compute/documentation/Compute/UInt32/&__(_:_:)-6boh2":{"title":"&<<(_:_:)","kind":"symbol","url":"\/documentation\/compute\/uint32\/&__(_:_:)-6boh2","role":"symbol","type":"topic","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"&<<","kind":"identifier"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UInt32","preciseIdentifier":"s:s6UInt32V"},{"text":", ","kind":"text"},{"text":"UInt32","kind":"typeIdentifier","preciseIdentifier":"s:s6UInt32V"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:s6UInt32V","text":"UInt32","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt32\/&__(_:_:)-6boh2","abstract":[{"text":"Returns the result of shifting a value’s binary representation the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"specified number of digits to the left, masking the shift amount to the"},{"type":"text","text":" "},{"type":"text","text":"type’s bit width."}]},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt32/FixedWidthInteger-Implementations":{"role":"collectionGroup","title":"FixedWidthInteger Implementations","url":"\/documentation\/compute\/uint32\/fixedwidthinteger-implementations","kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt32\/FixedWidthInteger-Implementations","abstract":[],"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt32":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt32","title":"UInt32","abstract":[{"type":"text","text":"A 32-bit unsigned integer value"},{"type":"text","text":" "},{"text":"type.","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"UInt32","kind":"identifier"}],"url":"\/documentation\/compute\/uint32","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"UInt32","kind":"identifier"}]}}}