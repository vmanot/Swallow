{"abstract":[{"type":"text","text":"Returns a tuple containing the high and low parts of the result of"},{"text":" ","type":"text"},{"type":"text","text":"multiplying this value by the given value."}],"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"multipliedFullWidth","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"by"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"other"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s6UInt32V","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt32","text":"UInt32","kind":"typeIdentifier"},{"text":") -> (high","kind":"text"},{"kind":"text","text":": "},{"text":"UInt32","preciseIdentifier":"s:s6UInt32V","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt32","kind":"typeIdentifier"},{"kind":"text","text":", low"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt32","text":"UInt32","preciseIdentifier":"s:s6UInt32V"},{"kind":"text","text":"."},{"preciseIdentifier":"s:s6UInt32V9Magnitudea","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt32\/Magnitude-swift.typealias","text":"Magnitude","kind":"typeIdentifier"},{"text":")","kind":"text"}],"platforms":["macOS"]}]},{"parameters":[{"content":[{"inlineContent":[{"type":"text","text":"The value to multiply this value by."}],"type":"paragraph"}],"name":"other"}],"kind":"parameters"},{"kind":"content","content":[{"text":"Return Value","level":2,"anchor":"return-value","type":"heading"},{"inlineContent":[{"type":"text","text":"A tuple containing the high and low parts of the result of"},{"type":"text","text":" "},{"text":"multiplying this value and ","type":"text"},{"type":"codeVoice","code":"other"},{"type":"text","text":"."}],"type":"paragraph"}]},{"kind":"content","content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"Use this method to calculate the full result of a product that would","type":"text"},{"type":"text","text":" "},{"text":"otherwise overflow. Unlike traditional truncating multiplication, the","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"multipliedFullWidth(by:)"},{"type":"text","text":" method returns a tuple containing both the"},{"type":"text","text":" "},{"type":"codeVoice","code":"high"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"low"},{"type":"text","text":" parts of the product of this value and "},{"type":"codeVoice","code":"other"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"The following example uses this method to multiply two ","type":"text"},{"type":"codeVoice","code":"UInt8"},{"text":" ","type":"text"},{"type":"text","text":"values that normally overflow when multiplied:"}]},{"syntax":null,"code":["let x: UInt8 = 100","let y: UInt8 = 20","let result = x.multipliedFullWidth(by: y)","\/\/ result.high == 0b00000111","\/\/ result.low  == 0b11010000"],"type":"codeListing"},{"inlineContent":[{"text":"The product of ","type":"text"},{"type":"codeVoice","code":"x"},{"type":"text","text":" and "},{"type":"codeVoice","code":"y"},{"text":" is 2000, which is too large to represent in a","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"UInt8"},{"type":"text","text":" instance. The "},{"type":"codeVoice","code":"high"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"low"},{"text":" properties of the ","type":"text"},{"code":"result","type":"codeVoice"},{"text":" value","type":"text"},{"type":"text","text":" "},{"text":"represent 2000 when concatenated to form a double-width integer; that","type":"text"},{"text":" ","type":"text"},{"text":"is, using ","type":"text"},{"code":"result.high","type":"codeVoice"},{"text":" as the high byte and ","type":"text"},{"code":"result.low","type":"codeVoice"},{"type":"text","text":" as the low byte"},{"type":"text","text":" "},{"text":"of a ","type":"text"},{"code":"UInt16","type":"codeVoice"},{"text":" instance.","type":"text"}],"type":"paragraph"},{"syntax":null,"type":"codeListing","code":["let z = UInt16(result.high) << 8 | UInt16(result.low)","\/\/ z == 2000"]}]}],"metadata":{"modules":[{"name":"Compute"}],"roleHeading":"Instance Method","externalID":"s:s6UInt32V19multipliedFullWidth2byAB4high_AB3lowtAB_tF","title":"multipliedFullWidth(by:)","symbolKind":"method","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"multipliedFullWidth","kind":"identifier"},{"text":"(","kind":"text"},{"text":"by","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s6UInt32V","text":"UInt32","kind":"typeIdentifier"},{"text":") -> (high","kind":"text"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s6UInt32V","text":"UInt32"},{"kind":"text","text":", low"},{"kind":"text","text":": "},{"text":"UInt32","preciseIdentifier":"s:s6UInt32V","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:s6UInt32V9Magnitudea","text":"Magnitude"},{"text":")","kind":"text"}]},"schemaVersion":{"minor":3,"major":0,"patch":0},"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt32\/multipliedFullWidth(by:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt32"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/uint32\/multipliedfullwidth(by:)"]}],"kind":"symbol","references":{"doc://com.swallow.documentation.Compute/documentation/Compute/UInt32/multipliedFullWidth(by:)":{"abstract":[{"type":"text","text":"Returns a tuple containing the high and low parts of the result of"},{"text":" ","type":"text"},{"type":"text","text":"multiplying this value by the given value."}],"title":"multipliedFullWidth(by:)","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt32\/multipliedFullWidth(by:)","type":"topic","role":"symbol","url":"\/documentation\/compute\/uint32\/multipliedfullwidth(by:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"multipliedFullWidth","kind":"identifier"},{"text":"(","kind":"text"},{"text":"by","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt32","kind":"typeIdentifier","preciseIdentifier":"s:s6UInt32V"},{"kind":"text","text":") -> (high"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s6UInt32V","text":"UInt32","kind":"typeIdentifier"},{"text":", low","kind":"text"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"UInt32","preciseIdentifier":"s:s6UInt32V"},{"text":".","kind":"text"},{"text":"Magnitude","kind":"typeIdentifier","preciseIdentifier":"s:s6UInt32V9Magnitudea"},{"text":")","kind":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt32/Magnitude-swift.typealias":{"type":"topic","role":"symbol","navigatorTitle":[{"text":"Magnitude","kind":"identifier"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Magnitude"}],"title":"UInt32.Magnitude","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt32\/Magnitude-swift.typealias","url":"\/documentation\/compute\/uint32\/magnitude-swift.typealias","abstract":[{"type":"text","text":"A type that can represent the absolute value of any possible value of"},{"type":"text","text":" "},{"text":"this type.","type":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt32":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt32","title":"UInt32","abstract":[{"type":"text","text":"A 32-bit unsigned integer value"},{"type":"text","text":" "},{"text":"type.","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"UInt32","kind":"identifier"}],"url":"\/documentation\/compute\/uint32","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"UInt32","kind":"identifier"}]}}}