{"metadata":{"roleHeading":"Operator","externalID":"s:SzsE2neoiySbx_qd__tSzRd__lFZ::SYNTHESIZED::s:s6UInt32V","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"!="},{"text":" ","kind":"text"},{"text":"<","kind":"text"},{"text":"Other","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"text":"Other","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"role":"symbol","extendedModule":"Swift","title":"!=(_:_:)","symbolKind":"op","modules":[{"name":"Compute","relatedModules":["Swift"]}]},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/uint32\/!=(_:_:)-6i9jj"]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt32","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt32\/BinaryInteger-Implementations"]]},"schemaVersion":{"minor":3,"major":0,"patch":0},"abstract":[{"type":"text","text":"Returns a Boolean value indicating whether the two given values are not"},{"text":" ","type":"text"},{"text":"equal.","type":"text"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt32\/!=(_:_:)-6i9jj"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"!=","kind":"identifier"},{"kind":"text","text":" "},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Other"},{"kind":"text","text":">("},{"text":"lhs","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"text":"rhs","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Other"},{"text":") -> ","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bool","text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":" ","kind":"text"},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Other"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:Sz","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryInteger","text":"BinaryInteger"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"name":"lhs","content":[{"inlineContent":[{"type":"text","text":"An integer to compare."}],"type":"paragraph"}]},{"name":"rhs","content":[{"inlineContent":[{"type":"text","text":"Another integer to compare."}],"type":"paragraph"}]}]},{"content":[{"type":"heading","anchor":"discussion","level":2,"text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can check the inequality of instances of any "},{"type":"codeVoice","code":"BinaryInteger"},{"type":"text","text":" types"},{"type":"text","text":" "},{"type":"text","text":"using the not-equal-to operator ("},{"type":"codeVoice","code":"!="},{"type":"text","text":"). For example, you can test"},{"type":"text","text":" "},{"text":"whether the first ","type":"text"},{"type":"codeVoice","code":"UInt8"},{"text":" value in a stringâ€™s UTF-8 encoding is not","type":"text"},{"text":" ","type":"text"},{"text":"equal to the first ","type":"text"},{"code":"UInt32","type":"codeVoice"},{"type":"text","text":" value in its Unicode scalar view:"}]},{"type":"codeListing","syntax":null,"code":["let gameName = \"Red Light, Green Light\"","if let firstUTF8 = gameName.utf8.first,","    let firstScalar = gameName.unicodeScalars.first?.value {","    print(\"First code values are different: \\(firstUTF8 != firstScalar)\")","}","\/\/ Prints \"First code values are different: false\""]}],"kind":"content"}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/BinaryInteger":{"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"BinaryInteger"}],"navigatorTitle":[{"kind":"identifier","text":"BinaryInteger"}],"url":"\/documentation\/compute\/binaryinteger","type":"topic","abstract":[{"type":"text","text":"An integer type with a binary representation."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryInteger","title":"BinaryInteger","kind":"symbol","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt32/BinaryInteger-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt32\/BinaryInteger-Implementations","kind":"article","abstract":[],"title":"BinaryInteger Implementations","role":"collectionGroup","url":"\/documentation\/compute\/uint32\/binaryinteger-implementations","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt32":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt32","title":"UInt32","abstract":[{"type":"text","text":"A 32-bit unsigned integer value"},{"type":"text","text":" "},{"text":"type.","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"UInt32","kind":"identifier"}],"url":"\/documentation\/compute\/uint32","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"UInt32","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Bool":{"url":"\/documentation\/compute\/bool","role":"symbol","title":"Bool","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Bool","kind":"identifier"}],"abstract":[{"type":"text","text":"A value type whose instances are either "},{"type":"codeVoice","code":"true"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"false"},{"text":".","type":"text"}],"navigatorTitle":[{"text":"Bool","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bool","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt32/!=(_:_:)-6i9jj":{"role":"symbol","type":"topic","url":"\/documentation\/compute\/uint32\/!=(_:_:)-6i9jj","title":"!=(_:_:)","abstract":[{"text":"Returns a Boolean value indicating whether the two given values are not","type":"text"},{"text":" ","type":"text"},{"text":"equal.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt32\/!=(_:_:)-6i9jj","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"!="},{"kind":"text","text":" "},{"text":"<","kind":"text"},{"text":"Other","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Other"},{"kind":"text","text":") -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}]}}}