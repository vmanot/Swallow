{"abstract":[{"text":"Returns the sum of the two given values, wrapping the result in case of","type":"text"},{"type":"text","text":" "},{"type":"text","text":"any overflow."}],"kind":"symbol","variants":[{"paths":["\/documentation\/compute\/uint32\/&+(_:_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"&+"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"lhs","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"text":"rhs","kind":"internalParam"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"lhs","content":[{"type":"paragraph","inlineContent":[{"text":"The first value to add.","type":"text"}]}]},{"name":"rhs","content":[{"type":"paragraph","inlineContent":[{"text":"The second value to add.","type":"text"}]}]}]},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The overflow addition operator ("},{"code":"&+","type":"codeVoice"},{"text":") discards any bits that overflow the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"fixed width of the integer type. In the following example, the sum of"},{"text":" ","type":"text"},{"type":"codeVoice","code":"100"},{"type":"text","text":" and "},{"code":"121","type":"codeVoice"},{"text":" is greater than the maximum representable ","type":"text"},{"code":"Int8","type":"codeVoice"},{"text":" value,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"so the result is the partial value after discarding the overflowing"},{"type":"text","text":" "},{"type":"text","text":"bits."}]},{"type":"codeListing","syntax":null,"code":["let x: Int8 = 10 &+ 21","\/\/ x == 31","let y: Int8 = 100 &+ 121","\/\/ y == -35 (after overflow)"]},{"type":"paragraph","inlineContent":[{"text":"For more about arithmetic with overflow operators, see ","type":"text"},{"identifier":"https:\/\/docs.swift.org\/swift-book\/LanguageGuide\/AdvancedOperators.html#ID37","type":"reference","isActive":true},{"text":" in ","type":"text"},{"inlineContent":[{"isActive":true,"identifier":"https:\/\/docs.swift.org\/swift-book\/","type":"reference"}],"type":"emphasis"},{"type":"text","text":"."}]}]}],"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt32\/&+(_:_:)","interfaceLanguage":"swift"},"metadata":{"title":"&+(_:_:)","symbolKind":"op","extendedModule":"Swift","role":"symbol","modules":[{"relatedModules":["Swift"],"name":"Compute"}],"roleHeading":"Operator","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"&+"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"}],"externalID":"s:s17FixedWidthIntegerPsE2apoiyxx_xtFZ::SYNTHESIZED::s:s6UInt32V"},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt32","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt32\/FixedWidthInteger-Implementations"]]},"schemaVersion":{"major":0,"patch":0,"minor":3},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/UInt32":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt32","title":"UInt32","abstract":[{"type":"text","text":"A 32-bit unsigned integer value"},{"type":"text","text":" "},{"text":"type.","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"UInt32","kind":"identifier"}],"url":"\/documentation\/compute\/uint32","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"UInt32","kind":"identifier"}]},"https://docs.swift.org/swift-book/":{"titleInlineContent":[{"type":"text","text":"The Swift Programming Language"}],"url":"https:\/\/docs.swift.org\/swift-book\/","type":"link","title":"The Swift Programming Language","identifier":"https:\/\/docs.swift.org\/swift-book\/"},"https://docs.swift.org/swift-book/LanguageGuide/AdvancedOperators.html#ID37":{"titleInlineContent":[{"text":"Overflow","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Operators"}],"url":"https:\/\/docs.swift.org\/swift-book\/LanguageGuide\/AdvancedOperators.html#ID37","type":"link","title":"Overflow Operators","identifier":"https:\/\/docs.swift.org\/swift-book\/LanguageGuide\/AdvancedOperators.html#ID37"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt32/&+(_:_:)":{"title":"&+(_:_:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt32\/&+(_:_:)","kind":"symbol","role":"symbol","url":"\/documentation\/compute\/uint32\/&+(_:_:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"&+","kind":"identifier"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"type":"topic","abstract":[{"type":"text","text":"Returns the sum of the two given values, wrapping the result in case of"},{"type":"text","text":" "},{"text":"any overflow.","type":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt32/FixedWidthInteger-Implementations":{"role":"collectionGroup","title":"FixedWidthInteger Implementations","url":"\/documentation\/compute\/uint32\/fixedwidthinteger-implementations","kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt32\/FixedWidthInteger-Implementations","abstract":[],"type":"topic"}}}