{"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt32\/Words-swift.struct\/flatMap(_:)-8dzxi","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt32","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt32\/Words-swift.struct","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt32\/Words-swift.struct\/Sequence-Implementations"]]},"kind":"symbol","primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"flatMap"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"SegmentOfResult"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"transform"},{"kind":"text","text":": ("},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:ST7ElementQa","text":"Element","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"SegmentOfResult","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> ["},{"text":"SegmentOfResult","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","preciseIdentifier":"s:ST7ElementQa","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"typeIdentifier"},{"kind":"text","text":"] "},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SegmentOfResult","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:ST","text":"Sequence","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A closure that accepts an element of this"},{"text":" ","type":"text"},{"text":"sequence as its argument and returns a sequence or collection.","type":"text"}]}],"name":"transform"}]},{"kind":"content","content":[{"anchor":"return-value","text":"Return Value","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"text":"The resulting flattened array.","type":"text"}]}]},{"kind":"content","content":[{"level":2,"anchor":"discussion","type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"Use this method to receive a single-level collection when your","type":"text"},{"type":"text","text":" "},{"text":"transformation produces a sequence or collection for each element.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"In this example, note the difference in the result of using ","type":"text"},{"type":"codeVoice","code":"map"},{"type":"text","text":" and"},{"type":"text","text":" "},{"type":"codeVoice","code":"flatMap"},{"type":"text","text":" with a transformation that returns an array."}]},{"type":"codeListing","code":["let numbers = [1, 2, 3, 4]","","let mapped = numbers.map { Array(repeating: $0, count: $0) }","\/\/ [[1], [2, 2], [3, 3, 3], [4, 4, 4, 4]]","","let flatMapped = numbers.flatMap { Array(repeating: $0, count: $0) }","\/\/ [1, 2, 2, 3, 3, 3, 4, 4, 4, 4]"],"syntax":null},{"inlineContent":[{"type":"text","text":"In fact, "},{"type":"codeVoice","code":"s.flatMap(transform)"},{"type":"text","text":"  is equivalent to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"Array(s.map(transform).joined())"},{"text":".","type":"text"}],"type":"paragraph"},{"style":"note","content":[{"inlineContent":[{"type":"text","text":"O("},{"inlineContent":[{"type":"text","text":"m"}],"type":"emphasis"},{"text":" + ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"n"}]},{"type":"text","text":"), where "},{"type":"emphasis","inlineContent":[{"text":"n","type":"text"}]},{"type":"text","text":" is the length of this sequence"},{"type":"text","text":" "},{"type":"text","text":"and "},{"inlineContent":[{"type":"text","text":"m"}],"type":"emphasis"},{"type":"text","text":" is the length of the result."}],"type":"paragraph"}],"name":"Complexity","type":"aside"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/uint32\/words-swift.struct\/flatmap(_:)-8dzxi"]}],"abstract":[{"text":"Returns an array containing the concatenated results of calling the","type":"text"},{"text":" ","type":"text"},{"text":"given transformation with each element of this sequence.","type":"text"}],"sections":[],"metadata":{"extendedModule":"Swift","symbolKind":"method","role":"symbol","roleHeading":"Instance Method","title":"flatMap(_:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"flatMap"},{"text":"<","kind":"text"},{"text":"SegmentOfResult","kind":"genericParameter"},{"text":">((","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier","text":"Element"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"SegmentOfResult","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"rethrows","kind":"keyword"},{"text":" -> [","kind":"text"},{"kind":"typeIdentifier","text":"SegmentOfResult"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"kind":"text","text":"]"}],"externalID":"s:STsE7flatMapySay7ElementQyd__Gqd__ABQzKXEKSTRd__lF::SYNTHESIZED::s:s6UInt32V5WordsV","modules":[{"name":"Compute","relatedModules":["Swift"]}]},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/UInt32/Words-swift.struct":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Words","kind":"identifier"}],"url":"\/documentation\/compute\/uint32\/words-swift.struct","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt32\/Words-swift.struct","abstract":[{"type":"text","text":"A type that represents the words of this integer."}],"title":"UInt32.Words","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Words"}],"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt32/Words-swift.struct/flatMap(_:)-8dzxi":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt32\/Words-swift.struct\/flatMap(_:)-8dzxi","url":"\/documentation\/compute\/uint32\/words-swift.struct\/flatmap(_:)-8dzxi","kind":"symbol","role":"symbol","type":"topic","abstract":[{"type":"text","text":"Returns an array containing the concatenated results of calling the"},{"type":"text","text":" "},{"type":"text","text":"given transformation with each element of this sequence."}],"title":"flatMap(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"flatMap","kind":"identifier"},{"kind":"text","text":"<"},{"text":"SegmentOfResult","kind":"genericParameter"},{"text":">((","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:ST7ElementQa"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"SegmentOfResult"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"text":" -> [","kind":"text"},{"text":"SegmentOfResult","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"text":"]","kind":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt32/Words-swift.struct/Sequence-Implementations":{"title":"Sequence Implementations","abstract":[],"type":"topic","kind":"article","url":"\/documentation\/compute\/uint32\/words-swift.struct\/sequence-implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt32\/Words-swift.struct\/Sequence-Implementations","role":"collectionGroup"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt32":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt32","title":"UInt32","abstract":[{"type":"text","text":"A 32-bit unsigned integer value"},{"type":"text","text":" "},{"text":"type.","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"UInt32","kind":"identifier"}],"url":"\/documentation\/compute\/uint32","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"UInt32","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence/Element":{"type":"topic","required":true,"abstract":[{"type":"text","text":"A type representing the sequenceâ€™s elements."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"symbol","url":"\/documentation\/compute\/sequence\/element","role":"symbol","title":"Element","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence":{"url":"\/documentation\/compute\/sequence","navigatorTitle":[{"kind":"identifier","text":"Sequence"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence","title":"Sequence","kind":"symbol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Sequence","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"A type that provides sequential, iterated access to its elements."}]},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"}}}