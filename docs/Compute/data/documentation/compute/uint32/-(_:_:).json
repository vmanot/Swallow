{"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"-","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"internalParam","text":"lhs"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt32","text":"UInt32","kind":"typeIdentifier","preciseIdentifier":"s:s6UInt32V"},{"kind":"text","text":", "},{"text":"rhs","kind":"internalParam"},{"kind":"text","text":": "},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt32","text":"UInt32","kind":"typeIdentifier","preciseIdentifier":"s:s6UInt32V"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt32","preciseIdentifier":"s:s6UInt32V","text":"UInt32"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"lhs","content":[{"type":"paragraph","inlineContent":[{"text":"A numeric value.","type":"text"}]}]},{"name":"rhs","content":[{"inlineContent":[{"text":"The value to subtract from ","type":"text"},{"type":"codeVoice","code":"lhs"},{"text":".","type":"text"}],"type":"paragraph"}]}]},{"content":[{"level":2,"anchor":"discussion","text":"Discussion","type":"heading"},{"inlineContent":[{"text":"The subtraction operator (","type":"text"},{"code":"-","type":"codeVoice"},{"type":"text","text":") calculates the difference of its two"},{"text":" ","type":"text"},{"type":"text","text":"arguments. For example:"}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":["8 - 3                   \/\/ 5","-10 - 5                 \/\/ -15","100 - -5                \/\/ 105","10.5 - 100.0            \/\/ -89.5"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You cannot use "},{"type":"codeVoice","code":"-"},{"text":" with arguments of different types. To subtract values","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"of different types, convert one of the values to the other value’s type."}]},{"code":["let x: UInt8 = 21","let y: UInt = 1000000","y - UInt(x)             \/\/ 999979"],"syntax":null,"type":"codeListing"},{"inlineContent":[{"type":"text","text":"The difference of the two arguments must be representable in the"},{"text":" ","type":"text"},{"text":"arguments’ type. In the following example, the result of ","type":"text"},{"code":"21 - 50","type":"codeVoice"},{"text":" is","type":"text"},{"type":"text","text":" "},{"type":"text","text":"less than zero, the minimum representable "},{"code":"UInt8","type":"codeVoice"},{"text":" value:","type":"text"}],"type":"paragraph"},{"syntax":null,"type":"codeListing","code":["x - 50                  \/\/ Overflow error"]},{"type":"aside","name":"Note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Overflow checking is not performed in "},{"type":"codeVoice","code":"-Ounchecked"},{"text":" builds.","type":"text"}]}],"style":"note"},{"type":"paragraph","inlineContent":[{"text":"If you want to opt out of overflow checking and wrap the result in case","type":"text"},{"type":"text","text":" "},{"text":"of any overflow, use the overflow subtraction operator (","type":"text"},{"code":"&-","type":"codeVoice"},{"text":").","type":"text"}]},{"type":"codeListing","code":["x &- 50                \/\/ 227"],"syntax":null}],"kind":"content"}],"metadata":{"modules":[{"name":"Compute","relatedModules":["Swift"]}],"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"-"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"UInt32","preciseIdentifier":"s:s6UInt32V"},{"text":", ","kind":"text"},{"text":"UInt32","kind":"typeIdentifier","preciseIdentifier":"s:s6UInt32V"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"UInt32","preciseIdentifier":"s:s6UInt32V"}],"role":"symbol","roleHeading":"Operator","title":"-(_:_:)","symbolKind":"op","externalID":"s:s6UInt32V1soiyA2B_ABtFZ","extendedModule":"Swift"},"abstract":[{"text":"Subtracts one value from another and produces their difference.","type":"text"}],"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/uint32\/-(_:_:)"]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt32","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt32\/BinaryInteger-Implementations"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt32\/-(_:_:)"},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/UInt32/-(_:_:)":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt32\/-(_:_:)","url":"\/documentation\/compute\/uint32\/-(_:_:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"-"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"UInt32","preciseIdentifier":"s:s6UInt32V"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"UInt32","preciseIdentifier":"s:s6UInt32V"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:s6UInt32V","kind":"typeIdentifier","text":"UInt32"}],"type":"topic","abstract":[{"text":"Subtracts one value from another and produces their difference.","type":"text"}],"role":"symbol","title":"-(_:_:)","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt32/BinaryInteger-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt32\/BinaryInteger-Implementations","kind":"article","abstract":[],"title":"BinaryInteger Implementations","role":"collectionGroup","url":"\/documentation\/compute\/uint32\/binaryinteger-implementations","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt32":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt32","title":"UInt32","abstract":[{"type":"text","text":"A 32-bit unsigned integer value"},{"type":"text","text":" "},{"text":"type.","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"UInt32","kind":"identifier"}],"url":"\/documentation\/compute\/uint32","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"UInt32","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"}}}