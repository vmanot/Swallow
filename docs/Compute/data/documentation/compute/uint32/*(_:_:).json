{"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt32","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt32\/BinaryInteger-Implementations"]]},"metadata":{"externalID":"s:s6UInt32V1moiyA2B_ABtFZ","role":"symbol","modules":[{"relatedModules":["Swift"],"name":"Compute"}],"extendedModule":"Swift","symbolKind":"op","title":"*(_:_:)","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"*","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:s6UInt32V","kind":"typeIdentifier","text":"UInt32"},{"kind":"text","text":", "},{"preciseIdentifier":"s:s6UInt32V","text":"UInt32","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"UInt32","kind":"typeIdentifier","preciseIdentifier":"s:s6UInt32V"}],"roleHeading":"Operator"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/uint32\/*(_:_:)"]}],"kind":"symbol","primaryContentSections":[{"declarations":[{"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"*","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"lhs","kind":"internalParam"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt32","kind":"typeIdentifier","text":"UInt32","preciseIdentifier":"s:s6UInt32V"},{"text":", ","kind":"text"},{"kind":"internalParam","text":"rhs"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt32","kind":"typeIdentifier","text":"UInt32","preciseIdentifier":"s:s6UInt32V"},{"kind":"text","text":") -> "},{"text":"UInt32","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt32","preciseIdentifier":"s:s6UInt32V"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The first value to multiply."}]}],"name":"lhs"},{"content":[{"inlineContent":[{"type":"text","text":"The second value to multiply."}],"type":"paragraph"}],"name":"rhs"}]},{"kind":"content","content":[{"level":2,"type":"heading","text":"Discussion","anchor":"discussion"},{"inlineContent":[{"text":"The multiplication operator (","type":"text"},{"code":"*","type":"codeVoice"},{"text":") calculates the product of its two","type":"text"},{"type":"text","text":" "},{"type":"text","text":"arguments. For example:"}],"type":"paragraph"},{"type":"codeListing","code":["2 * 3                   \/\/ 6","100 * 21                \/\/ 2100","-10 * 15                \/\/ -150","3.5 * 2.25              \/\/ 7.875"],"syntax":null},{"type":"paragraph","inlineContent":[{"text":"You cannot use ","type":"text"},{"type":"codeVoice","code":"*"},{"type":"text","text":" with arguments of different types. To multiply values"},{"type":"text","text":" "},{"type":"text","text":"of different types, convert one of the values to the other value’s type."}]},{"type":"codeListing","syntax":null,"code":["let x: Int8 = 21","let y: Int = 1000000","Int(x) * y              \/\/ 21000000"]},{"inlineContent":[{"type":"text","text":"The product of the two arguments must be representable in the arguments’"},{"text":" ","type":"text"},{"type":"text","text":"type. In the following example, the result of "},{"type":"codeVoice","code":"21 * 21"},{"type":"text","text":" is greater than"},{"text":" ","type":"text"},{"type":"text","text":"the maximum representable "},{"type":"codeVoice","code":"Int8"},{"type":"text","text":" value:"}],"type":"paragraph"},{"code":["x * 21                  \/\/ Overflow error"],"type":"codeListing","syntax":null},{"type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"Overflow checking is not performed in ","type":"text"},{"type":"codeVoice","code":"-Ounchecked"},{"type":"text","text":" builds."}]}],"name":"Note","style":"note"},{"type":"paragraph","inlineContent":[{"text":"If you want to opt out of overflow checking and wrap the result in case","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"of any overflow, use the overflow multiplication operator ("},{"code":"&*","type":"codeVoice"},{"text":").","type":"text"}]},{"type":"codeListing","code":["x &* 21                \/\/ -115"],"syntax":null}]}],"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt32\/*(_:_:)","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"text":"Multiplies two values and produces their product.","type":"text"}],"sections":[],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt32":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt32","title":"UInt32","abstract":[{"type":"text","text":"A 32-bit unsigned integer value"},{"type":"text","text":" "},{"text":"type.","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"UInt32","kind":"identifier"}],"url":"\/documentation\/compute\/uint32","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"UInt32","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt32/BinaryInteger-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt32\/BinaryInteger-Implementations","kind":"article","abstract":[],"title":"BinaryInteger Implementations","role":"collectionGroup","url":"\/documentation\/compute\/uint32\/binaryinteger-implementations","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt32/*(_:_:)":{"url":"\/documentation\/compute\/uint32\/*(_:_:)","abstract":[{"type":"text","text":"Multiplies two values and produces their product."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt32\/*(_:_:)","type":"topic","role":"symbol","kind":"symbol","title":"*(_:_:)","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"*","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s6UInt32V","text":"UInt32"},{"kind":"text","text":", "},{"text":"UInt32","kind":"typeIdentifier","preciseIdentifier":"s:s6UInt32V"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s6UInt32V","text":"UInt32"}]}}}