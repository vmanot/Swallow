{"kind":"symbol","schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt\/Comparable-Implementations"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt\/...(_:_:)"},"abstract":[{"type":"text","text":"Returns a closed range that contains both of its bounds."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/uint\/'...(_:_:)"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"...","kind":"identifier"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"kind":"internalParam","text":"minimum"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"internalParam","text":"maximum"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:SN","kind":"typeIdentifier","text":"ClosedRange","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ClosedRange"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The lower bound for the range."}]}],"name":"minimum"},{"content":[{"type":"paragraph","inlineContent":[{"text":"The upper bound for the range.","type":"text"}]}],"name":"maximum"}]},{"kind":"content","content":[{"level":2,"anchor":"discussion","type":"heading","text":"Discussion"},{"inlineContent":[{"text":"Use the closed range operator (","type":"text"},{"type":"codeVoice","code":"..."},{"type":"text","text":") to create a closed range of any type"},{"text":" ","type":"text"},{"type":"text","text":"that conforms to the "},{"code":"Comparable","type":"codeVoice"},{"text":" protocol. This example creates a","type":"text"},{"text":" ","type":"text"},{"code":"ClosedRange<Character>","type":"codeVoice"},{"type":"text","text":" from “a” up to, and including, “z”."}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":["let lowercase = \"a\"...\"z\"","print(lowercase.contains(\"z\"))","\/\/ Prints \"true\""]},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"minimum <= maximum"},{"text":".","type":"text"}]}],"type":"aside","name":"Precondition"}]}],"metadata":{"modules":[{"name":"Compute","relatedModules":["Swift"]}],"symbolKind":"op","title":"...(_:_:)","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"..."},{"kind":"text","text":" "},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"ClosedRange","kind":"typeIdentifier","preciseIdentifier":"s:SN"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}],"extendedModule":"Swift","externalID":"s:SLsE3zzzoiySNyxGx_xtFZ::SYNTHESIZED::s:Su","roleHeading":"Operator","role":"symbol"},"sections":[],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/ClosedRange":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ClosedRange","kind":"identifier"}],"role":"symbol","title":"ClosedRange","url":"\/documentation\/compute\/closedrange","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ClosedRange","abstract":[{"text":"An interval from a lower bound up to, and including, an upper bound.","type":"text"}],"type":"topic","navigatorTitle":[{"text":"ClosedRange","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt":{"kind":"symbol","navigatorTitle":[{"text":"UInt","kind":"identifier"}],"type":"topic","title":"UInt","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt","abstract":[{"text":"An unsigned integer value type.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"UInt","kind":"identifier"}],"url":"\/documentation\/compute\/uint"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt/...(_:_:)":{"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt\/...(_:_:)","kind":"symbol","type":"topic","url":"\/documentation\/compute\/uint\/'...(_:_:)","abstract":[{"type":"text","text":"Returns a closed range that contains both of its bounds."}],"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"..."},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"ClosedRange","preciseIdentifier":"s:SN","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"title":"...(_:_:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt/Comparable-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt\/Comparable-Implementations","abstract":[],"kind":"article","url":"\/documentation\/compute\/uint\/comparable-implementations","type":"topic","title":"Comparable Implementations","role":"collectionGroup"}}}