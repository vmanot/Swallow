{"sections":[],"metadata":{"role":"symbol","modules":[{"relatedModules":["Swift"],"name":"Compute"}],"externalID":"s:SLsE3zzloiySnyxGx_xtFZ::SYNTHESIZED::s:Su","title":"..<(_:_:)","roleHeading":"Operator","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"..<","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Range","preciseIdentifier":"s:Sn","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}],"extendedModule":"Swift","symbolKind":"op"},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt\/Comparable-Implementations"]]},"kind":"symbol","identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt\/.._(_:_:)","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/compute\/uint\/'.._(_:_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"..<"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"internalParam","text":"minimum"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"internalParam","text":"maximum"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Range","text":"Range","kind":"typeIdentifier","preciseIdentifier":"s:Sn"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}]},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The lower bound for the range."}]}],"name":"minimum"},{"content":[{"inlineContent":[{"text":"The upper bound for the range.","type":"text"}],"type":"paragraph"}],"name":"maximum"}],"kind":"parameters"},{"content":[{"level":2,"anchor":"discussion","type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"Use the half-open range operator (","type":"text"},{"type":"codeVoice","code":"..<"},{"text":") to create a range of any type","type":"text"},{"text":" ","type":"text"},{"text":"that conforms to the ","type":"text"},{"type":"codeVoice","code":"Comparable"},{"type":"text","text":" protocol. This example creates a"},{"text":" ","type":"text"},{"type":"codeVoice","code":"Range<Double>"},{"text":" from zero up to, but not including, 5.0.","type":"text"}]},{"type":"codeListing","syntax":null,"code":["let lessThanFive = 0.0..<5.0","print(lessThanFive.contains(3.14))  \/\/ Prints \"true\"","print(lessThanFive.contains(5.0))   \/\/ Prints \"false\""]},{"type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"minimum <= maximum"},{"type":"text","text":"."}]}],"name":"Precondition","style":"note"}],"kind":"content"}],"abstract":[{"type":"text","text":"Returns a half-open range that contains its lower bound but not its upper"},{"text":" ","type":"text"},{"type":"text","text":"bound."}],"schemaVersion":{"minor":3,"major":0,"patch":0},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Range":{"kind":"symbol","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Range","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Range","url":"\/documentation\/compute\/range","abstract":[{"text":"A half-open interval from a lower bound up to, but not including, an upper","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"bound."}],"navigatorTitle":[{"text":"Range","kind":"identifier"}],"title":"Range"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt/Comparable-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt\/Comparable-Implementations","abstract":[],"kind":"article","url":"\/documentation\/compute\/uint\/comparable-implementations","type":"topic","title":"Comparable Implementations","role":"collectionGroup"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt":{"kind":"symbol","navigatorTitle":[{"text":"UInt","kind":"identifier"}],"type":"topic","title":"UInt","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt","abstract":[{"text":"An unsigned integer value type.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"UInt","kind":"identifier"}],"url":"\/documentation\/compute\/uint"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt/.._(_:_:)":{"url":"\/documentation\/compute\/uint\/'.._(_:_:)","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt\/.._(_:_:)","kind":"symbol","title":"..<(_:_:)","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"..<"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"text":"Range","kind":"typeIdentifier","preciseIdentifier":"s:Sn"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":">","kind":"text"}],"abstract":[{"text":"Returns a half-open range that contains its lower bound but not its upper","type":"text"},{"type":"text","text":" "},{"type":"text","text":"bound."}],"type":"topic"}}}