{"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"&*","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"lhs","kind":"internalParam"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"internalParam","text":"rhs"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"text":"The first value to multiply.","type":"text"}],"type":"paragraph"}],"name":"lhs"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The second value to multiply."}]}],"name":"rhs"}]},{"kind":"content","content":[{"type":"heading","text":"Discussion","anchor":"discussion","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"The overflow multiplication operator ("},{"code":"&*","type":"codeVoice"},{"text":") discards any bits that","type":"text"},{"type":"text","text":" "},{"type":"text","text":"overflow the fixed width of the integer type. In the following example,"},{"type":"text","text":" "},{"type":"text","text":"the product of "},{"code":"10","type":"codeVoice"},{"type":"text","text":" and "},{"code":"50","type":"codeVoice"},{"type":"text","text":" is greater than the maximum representable"},{"type":"text","text":" "},{"code":"Int8","type":"codeVoice"},{"text":" value, so the result is the partial value after discarding the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"overflowing bits."}]},{"syntax":null,"code":["let x: Int8 = 10 &* 5","\/\/ x == 50","let y: Int8 = 10 &* 50","\/\/ y == -12 (after overflow)"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"For more about arithmetic with overflow operators, see "},{"type":"reference","isActive":true,"identifier":"https:\/\/docs.swift.org\/swift-book\/LanguageGuide\/AdvancedOperators.html#ID37"},{"type":"text","text":" in "},{"type":"emphasis","inlineContent":[{"identifier":"https:\/\/docs.swift.org\/swift-book\/","type":"reference","isActive":true}]},{"text":".","type":"text"}]}]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt\/FixedWidthInteger-Implementations"]]},"abstract":[{"text":"Returns the product of the two given values, wrapping the result in case","type":"text"},{"type":"text","text":" "},{"type":"text","text":"of any overflow."}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt\/&*(_:_:)"},"sections":[],"variants":[{"paths":["\/documentation\/compute\/uint\/&*(_:_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","metadata":{"symbolKind":"op","modules":[{"relatedModules":["Swift"],"name":"Compute"}],"role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"&*"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"title":"&*(_:_:)","externalID":"s:s17FixedWidthIntegerPsE2amoiyxx_xtFZ::SYNTHESIZED::s:Su","roleHeading":"Operator","extendedModule":"Swift"},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/UInt":{"kind":"symbol","navigatorTitle":[{"text":"UInt","kind":"identifier"}],"type":"topic","title":"UInt","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt","abstract":[{"text":"An unsigned integer value type.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"UInt","kind":"identifier"}],"url":"\/documentation\/compute\/uint"},"https://docs.swift.org/swift-book/":{"identifier":"https:\/\/docs.swift.org\/swift-book\/","title":"The Swift Programming Language","titleInlineContent":[{"type":"text","text":"The Swift Programming Language"}],"url":"https:\/\/docs.swift.org\/swift-book\/","type":"link"},"https://docs.swift.org/swift-book/LanguageGuide/AdvancedOperators.html#ID37":{"title":"Overflow Operators","identifier":"https:\/\/docs.swift.org\/swift-book\/LanguageGuide\/AdvancedOperators.html#ID37","titleInlineContent":[{"type":"text","text":"Overflow"},{"text":" ","type":"text"},{"text":"Operators","type":"text"}],"url":"https:\/\/docs.swift.org\/swift-book\/LanguageGuide\/AdvancedOperators.html#ID37","type":"link"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt/&*(_:_:)":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt\/&*(_:_:)","kind":"symbol","role":"symbol","type":"topic","title":"&*(_:_:)","url":"\/documentation\/compute\/uint\/&*(_:_:)","abstract":[{"type":"text","text":"Returns the product of the two given values, wrapping the result in case"},{"type":"text","text":" "},{"type":"text","text":"of any overflow."}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"&*"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt/FixedWidthInteger-Implementations":{"kind":"article","title":"FixedWidthInteger Implementations","url":"\/documentation\/compute\/uint\/fixedwidthinteger-implementations","type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt\/FixedWidthInteger-Implementations","abstract":[],"role":"collectionGroup"}}}