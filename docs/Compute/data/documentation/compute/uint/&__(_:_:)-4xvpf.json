{"abstract":[{"text":"Returns the result of shifting a value’s binary representation the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"specified number of digits to the left, masking the shift amount to the"},{"type":"text","text":" "},{"text":"type’s bit width.","type":"text"}],"metadata":{"title":"&<<(_:_:)","symbolKind":"op","roleHeading":"Operator","extendedModule":"Swift","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"&<<","kind":"identifier"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"text":"UInt","preciseIdentifier":"s:Su","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"}],"modules":[{"relatedModules":["Swift"],"name":"Compute"}],"externalID":"s:Su3alloiyS2u_SutFZ"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/uint\/&__(_:_:)-4xvpf"]}],"kind":"symbol","sections":[],"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt\/&__(_:_:)-4xvpf","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt\/FixedWidthInteger-Implementations"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"&<<"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"text":"lhs","kind":"internalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Su","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt","text":"UInt","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"internalParam","text":"rhs"},{"kind":"text","text":": "},{"text":"UInt","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt","preciseIdentifier":"s:Su"},{"text":") -> ","kind":"text"},{"text":"UInt","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"}]}]},{"kind":"parameters","parameters":[{"name":"lhs","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The value to shift."}]}]},{"name":"rhs","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The number of bits to shift "},{"code":"lhs","type":"codeVoice"},{"type":"text","text":" to the left. If "},{"code":"rhs","type":"codeVoice"},{"type":"text","text":" is"},{"type":"text","text":" "},{"text":"outside the range ","type":"text"},{"code":"0..<lhs.bitWidth","type":"codeVoice"},{"text":", it is masked to produce a","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"value within that range."}]}]}]},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Use the masking left shift operator ("},{"code":"&<<","type":"codeVoice"},{"type":"text","text":") when you need to perform a"},{"type":"text","text":" "},{"type":"text","text":"shift and are sure that the shift amount is in the range"},{"type":"text","text":" "},{"code":"0..<lhs.bitWidth","type":"codeVoice"},{"type":"text","text":". Before shifting, the masking left shift operator"},{"type":"text","text":" "},{"type":"text","text":"masks the shift to this range. The shift is performed using this masked"},{"type":"text","text":" "},{"text":"value.","type":"text"}]},{"inlineContent":[{"type":"text","text":"The following example defines "},{"type":"codeVoice","code":"x"},{"type":"text","text":" as an instance of "},{"type":"codeVoice","code":"UInt8"},{"type":"text","text":", an 8-bit,"},{"text":" ","type":"text"},{"text":"unsigned integer type. If you use ","type":"text"},{"type":"codeVoice","code":"2"},{"text":" as the right-hand-side value in an","type":"text"},{"type":"text","text":" "},{"type":"text","text":"operation on "},{"code":"x","type":"codeVoice"},{"text":", the shift amount requires no masking.","type":"text"}],"type":"paragraph"},{"code":["let x: UInt8 = 30                 \/\/ 0b00011110","let y = x &<< 2","\/\/ y == 120                       \/\/ 0b01111000"],"syntax":null,"type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"However, if you use ","type":"text"},{"code":"8","type":"codeVoice"},{"text":" as the shift amount, the method first masks the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"shift amount to zero, and then performs the shift, resulting in no change"},{"type":"text","text":" "},{"type":"text","text":"to the original value."}]},{"syntax":null,"type":"codeListing","code":["let z = x &<< 8","\/\/ z == 30                        \/\/ 0b00011110"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If the bit width of the shifted integer type is a power of two, masking"},{"text":" ","type":"text"},{"type":"text","text":"is performed using a bitmask; otherwise, masking is performed using a"},{"type":"text","text":" "},{"type":"text","text":"modulo operation."}]}]}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt/&__(_:_:)-4xvpf":{"url":"\/documentation\/compute\/uint\/&__(_:_:)-4xvpf","title":"&<<(_:_:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"&<<"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"}],"role":"symbol","type":"topic","abstract":[{"text":"Returns the result of shifting a value’s binary representation the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"specified number of digits to the left, masking the shift amount to the"},{"type":"text","text":" "},{"type":"text","text":"type’s bit width."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt\/&__(_:_:)-4xvpf","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt":{"kind":"symbol","navigatorTitle":[{"text":"UInt","kind":"identifier"}],"type":"topic","title":"UInt","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt","abstract":[{"text":"An unsigned integer value type.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"UInt","kind":"identifier"}],"url":"\/documentation\/compute\/uint"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt/FixedWidthInteger-Implementations":{"kind":"article","title":"FixedWidthInteger Implementations","url":"\/documentation\/compute\/uint\/fixedwidthinteger-implementations","type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt\/FixedWidthInteger-Implementations","abstract":[],"role":"collectionGroup"}}}