{"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt\/+(_:_:)","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"+"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"text":"lhs","kind":"internalParam"},{"kind":"text","text":": "},{"text":"UInt","preciseIdentifier":"s:Su","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"rhs","kind":"internalParam"},{"kind":"text","text":": "},{"text":"UInt","preciseIdentifier":"s:Su","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"UInt","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"name":"lhs","content":[{"inlineContent":[{"type":"text","text":"The first value to add."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The second value to add."}]}],"name":"rhs"}]},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"inlineContent":[{"text":"The addition operator (","type":"text"},{"type":"codeVoice","code":"+"},{"text":") calculates the sum of its two arguments. For","type":"text"},{"type":"text","text":" "},{"text":"example:","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":["1 + 2                   \/\/ 3","-10 + 15                \/\/ 5","-15 + -5                \/\/ -20","21.5 + 3.25             \/\/ 24.75"]},{"inlineContent":[{"text":"You cannot use ","type":"text"},{"code":"+","type":"codeVoice"},{"type":"text","text":" with arguments of different types. To add values of"},{"text":" ","type":"text"},{"type":"text","text":"different types, convert one of the values to the other value’s type."}],"type":"paragraph"},{"code":["let x: Int8 = 21","let y: Int = 1000000","Int(x) + y              \/\/ 1000021"],"type":"codeListing","syntax":null},{"type":"paragraph","inlineContent":[{"text":"The sum of the two arguments must be representable in the arguments’","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"type. In the following example, the result of "},{"code":"21 + 120","type":"codeVoice"},{"text":" is greater than","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the maximum representable "},{"type":"codeVoice","code":"Int8"},{"type":"text","text":" value:"}]},{"type":"codeListing","syntax":null,"code":["x + 120                 \/\/ Overflow error"]},{"name":"Note","type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"Overflow checking is not performed in ","type":"text"},{"code":"-Ounchecked","type":"codeVoice"},{"text":" builds.","type":"text"}]}],"style":"note"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you want to opt out of overflow checking and wrap the result in case"},{"text":" ","type":"text"},{"text":"of any overflow, use the overflow addition operator (","type":"text"},{"type":"codeVoice","code":"&+"},{"text":").","type":"text"}]},{"code":["x &+ 120                \/\/ -115"],"syntax":null,"type":"codeListing"}]}],"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"type":"text","text":"Adds two values and produces their sum."}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt\/BinaryInteger-Implementations"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/uint\/+(_:_:)"]}],"sections":[],"metadata":{"roleHeading":"Operator","externalID":"s:Su1poiyS2u_SutFZ","extendedModule":"Swift","modules":[{"relatedModules":["Swift"],"name":"Compute"}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"+","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":", "},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"kind":"text","text":") -> "},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"}],"symbolKind":"op","role":"symbol","title":"+(_:_:)"},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/UInt":{"kind":"symbol","navigatorTitle":[{"text":"UInt","kind":"identifier"}],"type":"topic","title":"UInt","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt","abstract":[{"text":"An unsigned integer value type.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"UInt","kind":"identifier"}],"url":"\/documentation\/compute\/uint"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt/BinaryInteger-Implementations":{"kind":"article","url":"\/documentation\/compute\/uint\/binaryinteger-implementations","title":"BinaryInteger Implementations","role":"collectionGroup","type":"topic","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt\/BinaryInteger-Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt/+(_:_:)":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt\/+(_:_:)","role":"symbol","type":"topic","title":"+(_:_:)","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"+","kind":"identifier"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"UInt","preciseIdentifier":"s:Su","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"}],"abstract":[{"text":"Adds two values and produces their sum.","type":"text"}],"url":"\/documentation\/compute\/uint\/+(_:_:)"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"}}}