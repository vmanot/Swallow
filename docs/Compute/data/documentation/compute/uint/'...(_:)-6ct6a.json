{"sections":[],"metadata":{"externalID":"s:SLsE3zzzoPys16PartialRangeFromVyxGxFZ::SYNTHESIZED::s:Su","roleHeading":"Operator","title":"...(_:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"..."},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"PartialRangeFrom","kind":"typeIdentifier","preciseIdentifier":"s:s16PartialRangeFromV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"modules":[{"relatedModules":["Swift"],"name":"Compute"}],"symbolKind":"op","role":"symbol","extendedModule":"Swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/uint\/'...(_:)-6ct6a"]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"symbol","identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt\/...(_:)-6ct6a","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"..."},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"minimum","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/PartialRangeFrom","text":"PartialRangeFrom","kind":"typeIdentifier","preciseIdentifier":"s:s16PartialRangeFromV"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}]},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The lower bound for the range."}]}],"name":"minimum"}],"kind":"parameters"},{"content":[{"text":"Discussion","anchor":"discussion","level":2,"type":"heading"},{"inlineContent":[{"text":"Use the postfix range operator (postfix ","type":"text"},{"code":"...","type":"codeVoice"},{"text":") to create a partial range","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"of any type that conforms to the "},{"type":"codeVoice","code":"Comparable"},{"text":" protocol. This example","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"creates a "},{"code":"PartialRangeFrom<Double>","type":"codeVoice"},{"type":"text","text":" instance that includes any value"},{"type":"text","text":" "},{"type":"text","text":"greater than or equal to "},{"type":"codeVoice","code":"5.0"},{"type":"text","text":"."}],"type":"paragraph"},{"syntax":null,"type":"codeListing","code":["let atLeastFive = 5.0...","","atLeastFive.contains(4.0)     \/\/ false","atLeastFive.contains(5.0)     \/\/ true","atLeastFive.contains(6.0)     \/\/ true"]},{"inlineContent":[{"type":"text","text":"You can use this type of partial range of a collection’s indices to"},{"text":" ","type":"text"},{"type":"text","text":"represent the range from the partial range’s lower bound up to the end"},{"text":" ","type":"text"},{"text":"of the collection.","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":["let numbers = [10, 20, 30, 40, 50, 60, 70]","print(numbers[3...])","\/\/ Prints \"[40, 50, 60, 70]\""]},{"style":"note","type":"aside","content":[{"inlineContent":[{"text":"","type":"text"},{"type":"codeVoice","code":"minimum"},{"type":"text","text":" must compare equal to itself (i.e. cannot be NaN)."}],"type":"paragraph"}],"name":"Precondition"}],"kind":"content"}],"abstract":[{"type":"text","text":"Returns a partial range extending upward from a lower bound."}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt\/Comparable-Implementations"]]},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/UInt/Comparable-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt\/Comparable-Implementations","abstract":[],"kind":"article","url":"\/documentation\/compute\/uint\/comparable-implementations","type":"topic","title":"Comparable Implementations","role":"collectionGroup"},"doc://com.swallow.documentation.Compute/documentation/Compute/PartialRangeFrom":{"kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"PartialRangeFrom","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/PartialRangeFrom","url":"\/documentation\/compute\/partialrangefrom","navigatorTitle":[{"kind":"identifier","text":"PartialRangeFrom"}],"abstract":[{"type":"text","text":"A partial interval extending upward from a lower bound."}],"role":"symbol","title":"PartialRangeFrom"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt/...(_:)-6ct6a":{"title":"...(_:)","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"...","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s16PartialRangeFromV","text":"PartialRangeFrom"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":">","kind":"text"}],"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Returns a partial range extending upward from a lower bound."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt\/...(_:)-6ct6a","url":"\/documentation\/compute\/uint\/'...(_:)-6ct6a"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt":{"kind":"symbol","navigatorTitle":[{"text":"UInt","kind":"identifier"}],"type":"topic","title":"UInt","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt","abstract":[{"text":"An unsigned integer value type.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"UInt","kind":"identifier"}],"url":"\/documentation\/compute\/uint"}}}