{"variants":[{"paths":["\/documentation\/compute\/referencearraytree\/foreachpostorder(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"symbolKind":"method","title":"forEachPostOrder(_:)","externalID":"s:7Compute21RecursiveTreeProtocolPAAE16forEachPostOrderyyy0C5ValueQzXEF::SYNTHESIZED::s:7Compute18ReferenceArrayTreeC","roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"forEachPostOrder"},{"text":"((","kind":"text"},{"text":"TreeValue","kind":"typeIdentifier","preciseIdentifier":"s:7Compute12TreeProtocolP0B5ValueQa"},{"kind":"text","text":") -> "},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":")","kind":"text"}],"extendedModule":"Compute","role":"symbol","modules":[{"name":"Compute"}]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ReferenceArrayTree\/forEachPostOrder(_:)"},"schemaVersion":{"major":0,"patch":0,"minor":3},"sections":[],"abstract":[{"text":"Inherited from ","type":"text"},{"type":"codeVoice","code":"RecursiveTreeProtocol.forEachPostOrder(_:)"},{"text":".","type":"text"}],"kind":"symbol","primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"forEachPostOrder"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"text":"body","kind":"internalParam"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Compute12TreeProtocolP0B5ValueQa","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/TreeProtocol\/TreeValue","text":"TreeValue"},{"text":") -> ","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Void","text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":")","kind":"text"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ReferenceArrayTree","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ReferenceArrayTree\/RecursiveTreeProtocol-Implementations"]]},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/ReferenceArrayTree":{"abstract":[],"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ReferenceArrayTree"}],"title":"ReferenceArrayTree","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ReferenceArrayTree","navigatorTitle":[{"kind":"identifier","text":"ReferenceArrayTree"}],"role":"symbol","type":"topic","url":"\/documentation\/compute\/referencearraytree"},"doc://com.swallow.documentation.Compute/documentation/Compute/ReferenceArrayTree/forEachPostOrder(_:)":{"title":"forEachPostOrder(_:)","abstract":[],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"forEachPostOrder","kind":"identifier"},{"kind":"text","text":"(("},{"kind":"typeIdentifier","preciseIdentifier":"s:7Compute12TreeProtocolP0B5ValueQa","text":"TreeValue"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"text":")","kind":"text"}],"type":"topic","url":"\/documentation\/compute\/referencearraytree\/foreachpostorder(_:)","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ReferenceArrayTree\/forEachPostOrder(_:)","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/ReferenceArrayTree/RecursiveTreeProtocol-Implementations":{"role":"collectionGroup","url":"\/documentation\/compute\/referencearraytree\/recursivetreeprotocol-implementations","type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ReferenceArrayTree\/RecursiveTreeProtocol-Implementations","abstract":[],"kind":"article","title":"RecursiveTreeProtocol Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/TreeProtocol/TreeValue":{"url":"\/documentation\/compute\/treeprotocol\/treevalue","type":"topic","title":"TreeValue","fragments":[{"text":"associatedtype","kind":"keyword"},{"kind":"text","text":" "},{"text":"TreeValue","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/TreeProtocol\/TreeValue","kind":"symbol","abstract":[{"text":"The type of value stored in each node of the tree.","type":"text"}],"required":true,"role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Void":{"abstract":[{"text":"The return type of functions that donâ€™t explicitly specify a return type,","type":"text"},{"text":" ","type":"text"},{"text":"that is, an empty tuple ","type":"text"},{"type":"codeVoice","code":"()"},{"type":"text","text":"."}],"type":"topic","title":"Void","url":"\/documentation\/compute\/void","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Void"}],"navigatorTitle":[{"text":"Void","kind":"identifier"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Void"}}}