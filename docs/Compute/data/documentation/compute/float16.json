{"primaryContentSections":[{"declarations":[{"tokens":[{"text":"@frozen","kind":"attribute"},{"text":" ","kind":"text"},{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Float16"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"text":"Overview","anchor":"overview","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Float16"},{"text":" is available on Apple silicon,","type":"text"},{"text":" ","type":"text"},{"text":"and unavailable on Intel when targeting macOS.","type":"text"}]}]}],"metadata":{"externalID":"s:s7Float16V","title":"Float16","platforms":[{"beta":false,"introducedAt":"14.0","name":"iOS","unavailable":false,"deprecated":false},{"name":"macOS","introducedAt":"11.0","deprecated":false,"unavailable":false,"beta":false},{"deprecated":false,"unavailable":false,"beta":false,"introducedAt":"14.0","name":"tvOS"},{"name":"watchOS","introducedAt":"7.0","deprecated":false,"unavailable":false,"beta":false}],"navigatorTitle":[{"text":"Float16","kind":"identifier"}],"modules":[{"name":"Compute"}],"roleHeading":"Structure","symbolKind":"struct","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Float16"}],"role":"symbol"},"topicSections":[{"anchor":"Initializers","generated":true,"identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float16\/init()","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float16\/init(_:)-5x2si","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float16\/init(_:)-77b3g","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float16\/init(bitPattern:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float16\/init(exactly:)-27ijx","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float16\/init(exactly:)-4hyr3","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float16\/init(exactly:)-8rmd7","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float16\/init(nan:signaling:)"],"title":"Initializers"},{"anchor":"Instance-Properties","title":"Instance Properties","generated":true,"identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float16\/bitPattern"]},{"generated":true,"identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float16\/AdditiveArithmetic-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float16\/BinaryFloatingPoint-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float16\/Comparable-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float16\/CustomDebugStringConvertible-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float16\/CustomStringConvertible-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float16\/Decodable-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float16\/Encodable-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float16\/Equatable-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float16\/ExpressibleByFloatLiteral-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float16\/ExpressibleByIntegerLiteral-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float16\/FloatingPoint-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float16\/Hashable-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float16\/LosslessStringConvertible-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float16\/Numeric-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float16\/SIMDScalar-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float16\/SignedNumeric-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float16\/Strideable-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float16\/TextOutputStreamable-Implementations"],"title":"Default Implementations","anchor":"Default-Implementations"}],"relationshipsSections":[{"identifiers":["doc:\/\/com.swallow.documentation.Compute\/10Accelerate10BNNSScalarP","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AdditiveArithmetic","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryFloatingPoint","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BitwiseCopyable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Comparable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Copyable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CustomDebugStringConvertible","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CustomStringConvertible","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Decodable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Encodable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Equatable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ExpressibleByFloatLiteral","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ExpressibleByIntegerLiteral","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Hashable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LosslessStringConvertible","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Numeric","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMDScalar","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sendable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SignedNumeric","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Strideable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/TextOutputStreamable"],"kind":"relationships","type":"conformsTo","title":"Conforms To"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/float16"]}],"abstract":[{"text":"A half-precision (16b), floating-point value type.","type":"text"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float16"},"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","sections":[],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute"]]},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Decodable":{"kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"Decodable","kind":"identifier"}],"title":"Decodable","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Decodable","abstract":[{"type":"text","text":"A type that can decode itself from an external representation."}],"url":"\/documentation\/compute\/decodable","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Decodable"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Float16/init(_:)-5x2si":{"url":"\/documentation\/compute\/float16\/init(_:)-5x2si","title":"init(_:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float16\/init(_:)-5x2si","kind":"symbol","type":"topic","abstract":[],"fragments":[{"text":"init","kind":"identifier"},{"text":"?(","kind":"text"},{"preciseIdentifier":"s:Ss","text":"Substring","kind":"typeIdentifier"},{"kind":"text","text":")"}],"role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Float16/init(_:)-77b3g":{"role":"symbol","type":"topic","title":"init(_:)","abstract":[{"text":"Creates a new instance initialized to the given value.","type":"text"}],"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:s7Float16V","text":"Float16","kind":"typeIdentifier"},{"kind":"text","text":")"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float16\/init(_:)-77b3g","kind":"symbol","url":"\/documentation\/compute\/float16\/init(_:)-77b3g"},"doc://com.swallow.documentation.Compute/documentation/Compute/Float16/SIMDScalar-Implementations":{"title":"SIMDScalar Implementations","role":"collectionGroup","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float16\/SIMDScalar-Implementations","type":"topic","abstract":[],"kind":"article","url":"\/documentation\/compute\/float16\/simdscalar-implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/Float16/init(bitPattern:)":{"url":"\/documentation\/compute\/float16\/init(bitpattern:)","title":"init(bitPattern:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float16\/init(bitPattern:)","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Creates a new value with the given bit pattern."}],"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"bitPattern","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt16","preciseIdentifier":"s:s6UInt16V"},{"kind":"text","text":")"}],"role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Float16/init(exactly:)-4hyr3":{"role":"symbol","type":"topic","title":"init(exactly:)","abstract":[{"type":"text","text":"Creates a new instance initialized to the given value, if it can be"},{"type":"text","text":" "},{"text":"represented without rounding.","type":"text"}],"fragments":[{"text":"init","kind":"identifier"},{"text":"?(","kind":"text"},{"text":"exactly","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Double","preciseIdentifier":"s:Sd","kind":"typeIdentifier"},{"kind":"text","text":")"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float16\/init(exactly:)-4hyr3","kind":"symbol","url":"\/documentation\/compute\/float16\/init(exactly:)-4hyr3"},"doc://com.swallow.documentation.Compute/documentation/Compute/Float16/Hashable-Implementations":{"url":"\/documentation\/compute\/float16\/hashable-implementations","title":"Hashable Implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float16\/Hashable-Implementations","kind":"article","type":"topic","abstract":[],"role":"collectionGroup"},"doc://com.swallow.documentation.Compute/documentation/Compute/Float16/TextOutputStreamable-Implementations":{"role":"collectionGroup","type":"topic","title":"TextOutputStreamable Implementations","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float16\/TextOutputStreamable-Implementations","kind":"article","url":"\/documentation\/compute\/float16\/textoutputstreamable-implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/LosslessStringConvertible":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LosslessStringConvertible","kind":"identifier"}],"kind":"symbol","title":"LosslessStringConvertible","abstract":[{"type":"text","text":"A type that can be represented as a string in a lossless, unambiguous way."}],"role":"symbol","type":"topic","navigatorTitle":[{"text":"LosslessStringConvertible","kind":"identifier"}],"url":"\/documentation\/compute\/losslessstringconvertible","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LosslessStringConvertible"},"doc://com.swallow.documentation.Compute/documentation/Compute/CustomStringConvertible":{"url":"\/documentation\/compute\/customstringconvertible","navigatorTitle":[{"kind":"identifier","text":"CustomStringConvertible"}],"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CustomStringConvertible","kind":"identifier"}],"abstract":[{"text":"A type with a customized textual representation.","type":"text"}],"type":"topic","title":"CustomStringConvertible","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CustomStringConvertible"},"doc://com.swallow.documentation.Compute/documentation/Compute/Float16/ExpressibleByFloatLiteral-Implementations":{"url":"\/documentation\/compute\/float16\/expressiblebyfloatliteral-implementations","title":"ExpressibleByFloatLiteral Implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float16\/ExpressibleByFloatLiteral-Implementations","kind":"article","type":"topic","abstract":[],"role":"collectionGroup"},"doc://com.swallow.documentation.Compute/documentation/Compute/BinaryFloatingPoint":{"navigatorTitle":[{"text":"BinaryFloatingPoint","kind":"identifier"}],"type":"topic","title":"BinaryFloatingPoint","abstract":[{"text":"A radix-2 (binary) floating-point type.","type":"text"}],"url":"\/documentation\/compute\/binaryfloatingpoint","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BinaryFloatingPoint","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryFloatingPoint","kind":"symbol","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Float16/bitPattern":{"role":"symbol","type":"topic","title":"bitPattern","abstract":[{"type":"text","text":"The bit pattern of the value’s encoding."}],"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"bitPattern","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s6UInt16V","text":"UInt16","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float16\/bitPattern","kind":"symbol","url":"\/documentation\/compute\/float16\/bitpattern"},"doc://com.swallow.documentation.Compute/documentation/Compute/Float16/CustomDebugStringConvertible-Implementations":{"url":"\/documentation\/compute\/float16\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float16\/CustomDebugStringConvertible-Implementations","kind":"article","type":"topic","abstract":[],"role":"collectionGroup"},"doc://com.swallow.documentation.Compute/documentation/Compute/CustomDebugStringConvertible":{"url":"\/documentation\/compute\/customdebugstringconvertible","role":"symbol","abstract":[{"text":"A type with a customized textual representation suitable for debugging","type":"text"},{"type":"text","text":" "},{"text":"purposes.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CustomDebugStringConvertible","title":"CustomDebugStringConvertible","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CustomDebugStringConvertible","kind":"identifier"}],"navigatorTitle":[{"text":"CustomDebugStringConvertible","kind":"identifier"}],"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMDScalar":{"kind":"symbol","navigatorTitle":[{"text":"SIMDScalar","kind":"identifier"}],"type":"topic","title":"SIMDScalar","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMDScalar","abstract":[{"type":"text","text":"A type that can be used as an element in a SIMD vector."}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SIMDScalar","kind":"identifier"}],"url":"\/documentation\/compute\/simdscalar"},"doc://com.swallow.documentation.Compute/documentation/Compute/Float16/Decodable-Implementations":{"role":"collectionGroup","type":"topic","title":"Decodable Implementations","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float16\/Decodable-Implementations","kind":"article","url":"\/documentation\/compute\/float16\/decodable-implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/Float16/ExpressibleByIntegerLiteral-Implementations":{"url":"\/documentation\/compute\/float16\/expressiblebyintegerliteral-implementations","title":"ExpressibleByIntegerLiteral Implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float16\/ExpressibleByIntegerLiteral-Implementations","kind":"article","type":"topic","abstract":[],"role":"collectionGroup"},"doc://com.swallow.documentation.Compute/documentation/Compute/Float16/Strideable-Implementations":{"role":"collectionGroup","type":"topic","title":"Strideable Implementations","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float16\/Strideable-Implementations","kind":"article","url":"\/documentation\/compute\/float16\/strideable-implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/Float16/init(nan:signaling:)":{"url":"\/documentation\/compute\/float16\/init(nan:signaling:)","title":"init(nan:signaling:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float16\/init(nan:signaling:)","kind":"symbol","type":"topic","abstract":[{"text":"Creates a NaN (“not a number”) value with the specified payload.","type":"text"}],"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"nan"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Float16","preciseIdentifier":"s:s7Float16V"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"RawSignificand","preciseIdentifier":"s:s7Float16V14RawSignificanda"},{"kind":"text","text":", "},{"kind":"externalParam","text":"signaling"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":")","kind":"text"}],"role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Copyable":{"title":"Copyable","abstract":[{"type":"text","text":"A type whose values can be implicitly or explicitly copied."}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"Copyable","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Copyable","url":"\/documentation\/compute\/copyable","navigatorTitle":[{"text":"Copyable","kind":"identifier"}],"kind":"symbol","role":"symbol","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/Float16/AdditiveArithmetic-Implementations":{"role":"collectionGroup","type":"topic","title":"AdditiveArithmetic Implementations","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float16\/AdditiveArithmetic-Implementations","kind":"article","url":"\/documentation\/compute\/float16\/additivearithmetic-implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/Comparable":{"url":"\/documentation\/compute\/comparable","type":"topic","kind":"symbol","role":"symbol","abstract":[{"text":"A type that can be compared using the relational operators ","type":"text"},{"code":"<","type":"codeVoice"},{"text":", ","type":"text"},{"code":"<=","type":"codeVoice"},{"text":", ","type":"text"},{"type":"codeVoice","code":">="},{"text":",","type":"text"},{"type":"text","text":" "},{"type":"text","text":"and "},{"type":"codeVoice","code":">"},{"text":".","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Comparable"}],"title":"Comparable","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Comparable","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"Comparable","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Float16/FloatingPoint-Implementations":{"url":"\/documentation\/compute\/float16\/floatingpoint-implementations","role":"collectionGroup","abstract":[],"type":"topic","title":"FloatingPoint Implementations","kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float16\/FloatingPoint-Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/Encodable":{"url":"\/documentation\/compute\/encodable","navigatorTitle":[{"text":"Encodable","kind":"identifier"}],"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"Encodable","kind":"identifier"}],"abstract":[{"text":"A type that can encode itself to an external representation.","type":"text"}],"type":"topic","title":"Encodable","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Encodable"},"doc://com.swallow.documentation.Compute/documentation/Compute/Float16/BinaryFloatingPoint-Implementations":{"url":"\/documentation\/compute\/float16\/binaryfloatingpoint-implementations","title":"BinaryFloatingPoint Implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float16\/BinaryFloatingPoint-Implementations","kind":"article","type":"topic","abstract":[],"role":"collectionGroup"},"doc://com.swallow.documentation.Compute/documentation/Compute/Float16/init(exactly:)-27ijx":{"role":"symbol","type":"topic","title":"init(exactly:)","abstract":[{"text":"Creates a new instance initialized to the given value, if it can be","type":"text"},{"text":" ","type":"text"},{"text":"represented without rounding.","type":"text"}],"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"?("},{"kind":"externalParam","text":"exactly"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Float16","preciseIdentifier":"s:s7Float16V"},{"text":")","kind":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float16\/init(exactly:)-27ijx","kind":"symbol","url":"\/documentation\/compute\/float16\/init(exactly:)-27ijx"},"doc://com.swallow.documentation.Compute/documentation/Compute/Float16/CustomStringConvertible-Implementations":{"url":"\/documentation\/compute\/float16\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float16\/CustomStringConvertible-Implementations","kind":"article","type":"topic","abstract":[],"role":"collectionGroup"},"doc://com.swallow.documentation.Compute/documentation/Compute/SignedNumeric":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SignedNumeric","url":"\/documentation\/compute\/signednumeric","title":"SignedNumeric","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"SignedNumeric"}],"navigatorTitle":[{"text":"SignedNumeric","kind":"identifier"}],"abstract":[{"type":"text","text":"A numeric type with a negation operation."}],"kind":"symbol","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/BitwiseCopyable":{"title":"BitwiseCopyable","abstract":[],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BitwiseCopyable","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BitwiseCopyable","url":"\/documentation\/compute\/bitwisecopyable","navigatorTitle":[{"kind":"identifier","text":"BitwiseCopyable"}],"kind":"symbol","role":"symbol","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/Float16/init(exactly:)-8rmd7":{"role":"symbol","type":"topic","title":"init(exactly:)","abstract":[{"text":"Creates a new instance initialized to the given value, if it can be","type":"text"},{"type":"text","text":" "},{"text":"represented without rounding.","type":"text"}],"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"?("},{"kind":"externalParam","text":"exactly"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sf","text":"Float","kind":"typeIdentifier"},{"text":")","kind":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float16\/init(exactly:)-8rmd7","kind":"symbol","url":"\/documentation\/compute\/float16\/init(exactly:)-8rmd7"},"doc://com.swallow.documentation.Compute/documentation/Compute/Strideable":{"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/compute\/strideable","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Strideable","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Strideable"}],"navigatorTitle":[{"text":"Strideable","kind":"identifier"}],"abstract":[{"type":"text","text":"A type representing continuous, one-dimensional values that can be offset"},{"type":"text","text":" "},{"type":"text","text":"and measured."}],"title":"Strideable"},"doc://com.swallow.documentation.Compute/documentation/Compute/ExpressibleByFloatLiteral":{"url":"\/documentation\/compute\/expressiblebyfloatliteral","title":"ExpressibleByFloatLiteral","navigatorTitle":[{"kind":"identifier","text":"ExpressibleByFloatLiteral"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ExpressibleByFloatLiteral","kind":"symbol","type":"topic","abstract":[{"text":"A type that can be initialized with a floating-point literal.","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ExpressibleByFloatLiteral"}],"role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Equatable":{"abstract":[{"text":"A type that can be compared for value equality.","type":"text"}],"type":"topic","title":"Equatable","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Equatable"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Equatable","role":"symbol","url":"\/documentation\/compute\/equatable","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Equatable","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Float16/Equatable-Implementations":{"role":"collectionGroup","type":"topic","title":"Equatable Implementations","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float16\/Equatable-Implementations","kind":"article","url":"\/documentation\/compute\/float16\/equatable-implementations"},"doc://com.swallow.documentation.Compute/10Accelerate10BNNSScalarP":{"type":"unresolvable","title":"Accelerate.BNNSScalar","identifier":"doc:\/\/com.swallow.documentation.Compute\/10Accelerate10BNNSScalarP"},"doc://com.swallow.documentation.Compute/documentation/Compute/Sendable":{"kind":"symbol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"Sendable","kind":"identifier"}],"title":"Sendable","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sendable","abstract":[],"url":"\/documentation\/compute\/sendable","role":"symbol","navigatorTitle":[{"text":"Sendable","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Float16/Encodable-Implementations":{"role":"collectionGroup","type":"topic","title":"Encodable Implementations","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float16\/Encodable-Implementations","kind":"article","url":"\/documentation\/compute\/float16\/encodable-implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/Float16/Numeric-Implementations":{"url":"\/documentation\/compute\/float16\/numeric-implementations","title":"Numeric Implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float16\/Numeric-Implementations","kind":"article","type":"topic","abstract":[],"role":"collectionGroup"},"doc://com.swallow.documentation.Compute/documentation/Compute/AdditiveArithmetic":{"type":"topic","title":"AdditiveArithmetic","abstract":[{"text":"A type with values that support addition and subtraction.","type":"text"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AdditiveArithmetic"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AdditiveArithmetic","url":"\/documentation\/compute\/additivearithmetic","role":"symbol","navigatorTitle":[{"text":"AdditiveArithmetic","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Float16/init()":{"role":"symbol","type":"topic","title":"init()","abstract":[],"fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"()"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float16\/init()","kind":"symbol","url":"\/documentation\/compute\/float16\/init()"},"doc://com.swallow.documentation.Compute/documentation/Compute/Float16/Comparable-Implementations":{"type":"topic","role":"collectionGroup","title":"Comparable Implementations","abstract":[],"url":"\/documentation\/compute\/float16\/comparable-implementations","kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float16\/Comparable-Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/Numeric":{"abstract":[{"type":"text","text":"A type with values that support multiplication."}],"kind":"symbol","url":"\/documentation\/compute\/numeric","navigatorTitle":[{"text":"Numeric","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Numeric","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Numeric"}],"title":"Numeric"},"doc://com.swallow.documentation.Compute/documentation/Compute/TextOutputStreamable":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TextOutputStreamable","kind":"identifier"}],"kind":"symbol","title":"TextOutputStreamable","abstract":[{"text":"A source of text-streaming operations.","type":"text"}],"role":"symbol","type":"topic","navigatorTitle":[{"text":"TextOutputStreamable","kind":"identifier"}],"url":"\/documentation\/compute\/textoutputstreamable","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/TextOutputStreamable"},"doc://com.swallow.documentation.Compute/documentation/Compute/ExpressibleByIntegerLiteral":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ExpressibleByIntegerLiteral","url":"\/documentation\/compute\/expressiblebyintegerliteral","title":"ExpressibleByIntegerLiteral","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ExpressibleByIntegerLiteral","kind":"identifier"}],"navigatorTitle":[{"text":"ExpressibleByIntegerLiteral","kind":"identifier"}],"abstract":[{"text":"A type that can be initialized with an integer literal.","type":"text"}],"kind":"symbol","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Float16/SignedNumeric-Implementations":{"abstract":[],"url":"\/documentation\/compute\/float16\/signednumeric-implementations","title":"SignedNumeric Implementations","kind":"article","role":"collectionGroup","type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float16\/SignedNumeric-Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/Float16/LosslessStringConvertible-Implementations":{"url":"\/documentation\/compute\/float16\/losslessstringconvertible-implementations","title":"LosslessStringConvertible Implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float16\/LosslessStringConvertible-Implementations","kind":"article","type":"topic","abstract":[],"role":"collectionGroup"},"doc://com.swallow.documentation.Compute/documentation/Compute/Float16":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float16","navigatorTitle":[{"kind":"identifier","text":"Float16"}],"role":"symbol","title":"Float16","url":"\/documentation\/compute\/float16","type":"topic","abstract":[{"type":"text","text":"A half-precision (16b), floating-point value type."}],"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Float16"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Hashable":{"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Hashable"}],"title":"Hashable","navigatorTitle":[{"text":"Hashable","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"A type that can be hashed into a "},{"type":"codeVoice","code":"Hasher"},{"type":"text","text":" to produce an integer hash value."}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Hashable","url":"\/documentation\/compute\/hashable","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/FloatingPoint":{"url":"\/documentation\/compute\/floatingpoint","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint","title":"FloatingPoint","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FloatingPoint","kind":"identifier"}],"navigatorTitle":[{"text":"FloatingPoint","kind":"identifier"}],"abstract":[{"text":"A floating-point numeric type.","type":"text"}],"kind":"symbol","type":"topic"}}}