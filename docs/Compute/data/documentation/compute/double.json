{"relationshipsSections":[{"kind":"relationships","title":"Conforms To","identifiers":["doc:\/\/com.swallow.documentation.Compute\/10Accelerate33vDSP_DiscreteFourierTransformableP","doc:\/\/com.swallow.documentation.Compute\/10Accelerate34vDSP_FloatingPointBiquadFilterableP","doc:\/\/com.swallow.documentation.Compute\/10Accelerate29vDSP_FloatingPointConvertableP","doc:\/\/com.swallow.documentation.Compute\/10Accelerate46vDSP_FloatingPointDiscreteFourierTransformableP","doc:\/\/com.swallow.documentation.Compute\/10Accelerate29vDSP_FloatingPointGeneratableP","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AdditiveArithmetic","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryFloatingPoint","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BitwiseCopyable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CVarArg","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Comparable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Copyable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CustomDebugStringConvertible","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CustomReflectable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CustomStringConvertible","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Decodable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Encodable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Equatable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ExpressibleByFloatLiteral","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ExpressibleByIntegerLiteral","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Hashable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LosslessStringConvertible","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Numeric","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMDScalar","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sendable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SignedNumeric","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Strideable","doc:\/\/com.swallow.documentation.Compute\/7Swallow18AdditionOperatableP","doc:\/\/com.swallow.documentation.Compute\/7Swallow21AnyCodableConvertibleP","doc:\/\/com.swallow.documentation.Compute\/7Swallow22ApproximatelyEquatableP","doc:\/\/com.swallow.documentation.Compute\/7Swallow20ArithmeticOperatableP","doc:\/\/com.swallow.documentation.Compute\/7Swallow16BooleanInitiableP","doc:\/\/com.swallow.documentation.Compute\/7Swallow7BoundedP","doc:\/\/com.swallow.documentation.Compute\/7Swallow18BoundedRandomnableP","doc:\/\/com.swallow.documentation.Compute\/7Swallow18ByteOrderSwappableP","doc:\/\/com.swallow.documentation.Compute\/7Swallow20ByteTupleConvertibleP","doc:\/\/com.swallow.documentation.Compute\/7Swallow14CoderPrimitiveP","doc:\/\/com.swallow.documentation.Compute\/7Swallow10ContinuousP","doc:\/\/com.swallow.documentation.Compute\/7Swallow20DiscreteOrContinuousP","doc:\/\/com.swallow.documentation.Compute\/7Swallow18DivisionOperatableP","doc:\/\/com.swallow.documentation.Compute\/7Swallow22FloatingPointInitiableP","doc:\/\/com.swallow.documentation.Compute\/7Swallow9InitiableP","doc:\/\/com.swallow.documentation.Compute\/7Swallow16IntegerInitiableP","doc:\/\/com.swallow.documentation.Compute\/7Swallow24MultiplicationOperatableP","doc:\/\/com.swallow.documentation.Compute\/7Swallow25MutableAdditionOperatableP","doc:\/\/com.swallow.documentation.Compute\/7Swallow27MutableArithmeticOperatableP","doc:\/\/com.swallow.documentation.Compute\/7Swallow25MutableDivisionOperatableP","doc:\/\/com.swallow.documentation.Compute\/7Swallow31MutableMultiplicationOperatableP","doc:\/\/com.swallow.documentation.Compute\/7Swallow28MutableSubtractionOperatableP","doc:\/\/com.swallow.documentation.Compute\/7Swallow6NumberP","doc:\/\/com.swallow.documentation.Compute\/7Swallow17NumberConvertibleP","doc:\/\/com.swallow.documentation.Compute\/7Swallow15NumberInitiableP","doc:\/\/com.swallow.documentation.Compute\/7Swallow11RandomnableP","doc:\/\/com.swallow.documentation.Compute\/7Swallow26ShouldNotBeDecodedFromBoolP","doc:\/\/com.swallow.documentation.Compute\/7Swallow6SignedP","doc:\/\/com.swallow.documentation.Compute\/7Swallow22SignedIntegerInitiableP","doc:\/\/com.swallow.documentation.Compute\/7Swallow16SignedOrUnsignedP","doc:\/\/com.swallow.documentation.Compute\/7Swallow21SubtractionOperatableP","doc:\/\/com.swallow.documentation.Compute\/7Swallow7TrivialP","doc:\/\/com.swallow.documentation.Compute\/7Swallow24UnsignedIntegerInitiableP","doc:\/\/com.swallow.documentation.Compute\/7SwiftUI10AnimatableP","doc:\/\/com.swallow.documentation.Compute\/7SwiftUI16VectorArithmeticP","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/TextOutputStreamable"],"type":"conformsTo"}],"abstract":[{"type":"text","text":"A double-precision, floating-point value type."}],"topicSections":[{"title":"Initializers","generated":true,"anchor":"Initializers","identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Double\/init()","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Double\/init(_:)-15kej","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Double\/init(_:)-aeox","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Double\/init(bitPattern:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Double\/init(exactly:)-2l6p1","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Double\/init(exactly:)-50ofc","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Double\/init(exactly:)-7cl0t","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Double\/init(nan:signaling:)"]},{"anchor":"Instance-Properties","identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Double\/bitPattern"],"title":"Instance Properties","generated":true},{"identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Double\/AdditiveArithmetic-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Double\/BinaryFloatingPoint-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Double\/Comparable-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Double\/CustomDebugStringConvertible-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Double\/CustomReflectable-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Double\/CustomStringConvertible-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Double\/Decodable-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Double\/Encodable-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Double\/Equatable-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Double\/ExpressibleByFloatLiteral-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Double\/ExpressibleByIntegerLiteral-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Double\/FloatingPoint-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Double\/Hashable-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Double\/LosslessStringConvertible-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Double\/Numeric-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Double\/SIMDScalar-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Double\/SignedNumeric-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Double\/Strideable-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Double\/TextOutputStreamable-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Double\/_CustomPlaygroundQuickLookable-Implementations"],"generated":true,"title":"Default Implementations","anchor":"Default-Implementations"}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"attribute","text":"@frozen"},{"kind":"text","text":" "},{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Double","kind":"identifier"}]}],"kind":"declarations"}],"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Double","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"major":0,"patch":0},"kind":"symbol","variants":[{"paths":["\/documentation\/compute\/double"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"metadata":{"title":"Double","symbolKind":"struct","role":"symbol","modules":[{"name":"Compute"}],"roleHeading":"Structure","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Double","kind":"identifier"}],"externalID":"s:Sd","navigatorTitle":[{"kind":"identifier","text":"Double"}]},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute"]]},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/CustomReflectable":{"url":"\/documentation\/compute\/customreflectable","role":"symbol","abstract":[{"text":"A type that explicitly supplies its own mirror.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CustomReflectable","title":"CustomReflectable","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CustomReflectable"}],"navigatorTitle":[{"kind":"identifier","text":"CustomReflectable"}],"kind":"symbol"},"doc://com.swallow.documentation.Compute/7Swallow9InitiableP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow9InitiableP","title":"Swallow.Initiable","type":"unresolvable"},"doc://com.swallow.documentation.Compute/documentation/Compute/FloatingPoint":{"url":"\/documentation\/compute\/floatingpoint","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint","title":"FloatingPoint","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FloatingPoint","kind":"identifier"}],"navigatorTitle":[{"text":"FloatingPoint","kind":"identifier"}],"abstract":[{"text":"A floating-point numeric type.","type":"text"}],"kind":"symbol","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/Double/Hashable-Implementations":{"url":"\/documentation\/compute\/double\/hashable-implementations","abstract":[],"kind":"article","type":"topic","title":"Hashable Implementations","role":"collectionGroup","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Double\/Hashable-Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/Encodable":{"url":"\/documentation\/compute\/encodable","navigatorTitle":[{"text":"Encodable","kind":"identifier"}],"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"Encodable","kind":"identifier"}],"abstract":[{"text":"A type that can encode itself to an external representation.","type":"text"}],"type":"topic","title":"Encodable","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Encodable"},"doc://com.swallow.documentation.Compute/10Accelerate29vDSP_FloatingPointConvertableP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/10Accelerate29vDSP_FloatingPointConvertableP","title":"Accelerate.vDSP_FloatingPointConvertable","type":"unresolvable"},"doc://com.swallow.documentation.Compute/documentation/Compute/Equatable":{"abstract":[{"text":"A type that can be compared for value equality.","type":"text"}],"type":"topic","title":"Equatable","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Equatable"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Equatable","role":"symbol","url":"\/documentation\/compute\/equatable","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Equatable","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/7Swallow24MultiplicationOperatableP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow24MultiplicationOperatableP","title":"Swallow.MultiplicationOperatable","type":"unresolvable"},"doc://com.swallow.documentation.Compute/documentation/Compute/Double/CustomStringConvertible-Implementations":{"kind":"article","role":"collectionGroup","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Double\/CustomStringConvertible-Implementations","type":"topic","url":"\/documentation\/compute\/double\/customstringconvertible-implementations","abstract":[],"title":"CustomStringConvertible Implementations"},"doc://com.swallow.documentation.Compute/7Swallow7BoundedP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow7BoundedP","title":"Swallow.Bounded","type":"unresolvable"},"doc://com.swallow.documentation.Compute/7Swallow24UnsignedIntegerInitiableP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow24UnsignedIntegerInitiableP","title":"Swallow.UnsignedIntegerInitiable","type":"unresolvable"},"doc://com.swallow.documentation.Compute/documentation/Compute/Double/BinaryFloatingPoint-Implementations":{"kind":"article","type":"topic","role":"collectionGroup","url":"\/documentation\/compute\/double\/binaryfloatingpoint-implementations","abstract":[],"title":"BinaryFloatingPoint Implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Double\/BinaryFloatingPoint-Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/SignedNumeric":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SignedNumeric","url":"\/documentation\/compute\/signednumeric","title":"SignedNumeric","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"SignedNumeric"}],"navigatorTitle":[{"text":"SignedNumeric","kind":"identifier"}],"abstract":[{"type":"text","text":"A numeric type with a negation operation."}],"kind":"symbol","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Double/bitPattern":{"abstract":[{"type":"text","text":"The bit pattern of the value’s encoding."}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Double\/bitPattern","title":"bitPattern","type":"topic","url":"\/documentation\/compute\/double\/bitpattern","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"bitPattern"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s6UInt64V","text":"UInt64"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/TextOutputStreamable":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TextOutputStreamable","kind":"identifier"}],"kind":"symbol","title":"TextOutputStreamable","abstract":[{"text":"A source of text-streaming operations.","type":"text"}],"role":"symbol","type":"topic","navigatorTitle":[{"text":"TextOutputStreamable","kind":"identifier"}],"url":"\/documentation\/compute\/textoutputstreamable","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/TextOutputStreamable"},"doc://com.swallow.documentation.Compute/documentation/Compute/Double/AdditiveArithmetic-Implementations":{"type":"topic","abstract":[],"kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Double\/AdditiveArithmetic-Implementations","title":"AdditiveArithmetic Implementations","role":"collectionGroup","url":"\/documentation\/compute\/double\/additivearithmetic-implementations"},"doc://com.swallow.documentation.Compute/7Swallow7TrivialP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow7TrivialP","title":"Swallow.Trivial","type":"unresolvable"},"doc://com.swallow.documentation.Compute/documentation/Compute/Double/init(exactly:)-7cl0t":{"role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"?(","kind":"text"},{"kind":"externalParam","text":"exactly"},{"kind":"text","text":": "},{"text":"Float","kind":"typeIdentifier","preciseIdentifier":"s:Sf"},{"text":")","kind":"text"}],"url":"\/documentation\/compute\/double\/init(exactly:)-7cl0t","title":"init(exactly:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Double\/init(exactly:)-7cl0t","abstract":[{"type":"text","text":"Creates a new instance initialized to the given value, if it can be"},{"type":"text","text":" "},{"text":"represented without rounding.","type":"text"}],"type":"topic","kind":"symbol"},"doc://com.swallow.documentation.Compute/7Swallow18BoundedRandomnableP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow18BoundedRandomnableP","title":"Swallow.BoundedRandomnable","type":"unresolvable"},"doc://com.swallow.documentation.Compute/documentation/Compute/Double/Comparable-Implementations":{"title":"Comparable Implementations","type":"topic","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Double\/Comparable-Implementations","kind":"article","url":"\/documentation\/compute\/double\/comparable-implementations","role":"collectionGroup"},"doc://com.swallow.documentation.Compute/7SwiftUI10AnimatableP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/7SwiftUI10AnimatableP","title":"SwiftUICore.Animatable","type":"unresolvable"},"doc://com.swallow.documentation.Compute/documentation/Compute/LosslessStringConvertible":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LosslessStringConvertible","kind":"identifier"}],"kind":"symbol","title":"LosslessStringConvertible","abstract":[{"type":"text","text":"A type that can be represented as a string in a lossless, unambiguous way."}],"role":"symbol","type":"topic","navigatorTitle":[{"text":"LosslessStringConvertible","kind":"identifier"}],"url":"\/documentation\/compute\/losslessstringconvertible","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LosslessStringConvertible"},"doc://com.swallow.documentation.Compute/documentation/Compute/Double/init(exactly:)-2l6p1":{"abstract":[{"type":"text","text":"Creates a new instance initialized to the given value, if it can be"},{"text":" ","type":"text"},{"text":"represented without rounding.","type":"text"}],"url":"\/documentation\/compute\/double\/init(exactly:)-2l6p1","fragments":[{"kind":"identifier","text":"init"},{"text":"?(","kind":"text"},{"kind":"externalParam","text":"exactly"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sd","kind":"typeIdentifier","text":"Double"},{"kind":"text","text":")"}],"type":"topic","role":"symbol","title":"init(exactly:)","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Double\/init(exactly:)-2l6p1"},"doc://com.swallow.documentation.Compute/documentation/Compute/Double/Numeric-Implementations":{"title":"Numeric Implementations","role":"collectionGroup","kind":"article","abstract":[],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Double\/Numeric-Implementations","url":"\/documentation\/compute\/double\/numeric-implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/CustomDebugStringConvertible":{"url":"\/documentation\/compute\/customdebugstringconvertible","role":"symbol","abstract":[{"text":"A type with a customized textual representation suitable for debugging","type":"text"},{"type":"text","text":" "},{"text":"purposes.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CustomDebugStringConvertible","title":"CustomDebugStringConvertible","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CustomDebugStringConvertible","kind":"identifier"}],"navigatorTitle":[{"text":"CustomDebugStringConvertible","kind":"identifier"}],"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Double/ExpressibleByFloatLiteral-Implementations":{"role":"collectionGroup","type":"topic","kind":"article","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Double\/ExpressibleByFloatLiteral-Implementations","url":"\/documentation\/compute\/double\/expressiblebyfloatliteral-implementations","title":"ExpressibleByFloatLiteral Implementations"},"doc://com.swallow.documentation.Compute/10Accelerate34vDSP_FloatingPointBiquadFilterableP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/10Accelerate34vDSP_FloatingPointBiquadFilterableP","title":"Accelerate.vDSP_FloatingPointBiquadFilterable","type":"unresolvable"},"doc://com.swallow.documentation.Compute/documentation/Compute/Double/Strideable-Implementations":{"kind":"article","role":"collectionGroup","url":"\/documentation\/compute\/double\/strideable-implementations","title":"Strideable Implementations","type":"topic","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Double\/Strideable-Implementations"},"doc://com.swallow.documentation.Compute/7Swallow25MutableAdditionOperatableP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow25MutableAdditionOperatableP","title":"Swallow.MutableAdditionOperatable","type":"unresolvable"},"doc://com.swallow.documentation.Compute/10Accelerate46vDSP_FloatingPointDiscreteFourierTransformableP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/10Accelerate46vDSP_FloatingPointDiscreteFourierTransformableP","title":"Accelerate.vDSP_FloatingPointDiscreteFourierTransformable","type":"unresolvable"},"doc://com.swallow.documentation.Compute/documentation/Compute/Comparable":{"url":"\/documentation\/compute\/comparable","type":"topic","kind":"symbol","role":"symbol","abstract":[{"text":"A type that can be compared using the relational operators ","type":"text"},{"code":"<","type":"codeVoice"},{"text":", ","type":"text"},{"code":"<=","type":"codeVoice"},{"text":", ","type":"text"},{"type":"codeVoice","code":">="},{"text":",","type":"text"},{"type":"text","text":" "},{"type":"text","text":"and "},{"type":"codeVoice","code":">"},{"text":".","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Comparable"}],"title":"Comparable","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Comparable","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"Comparable","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/7SwiftUI16VectorArithmeticP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/7SwiftUI16VectorArithmeticP","title":"SwiftUICore.VectorArithmetic","type":"unresolvable"},"doc://com.swallow.documentation.Compute/7Swallow6SignedP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow6SignedP","title":"Swallow.Signed","type":"unresolvable"},"doc://com.swallow.documentation.Compute/documentation/Compute/Decodable":{"kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"Decodable","kind":"identifier"}],"title":"Decodable","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Decodable","abstract":[{"type":"text","text":"A type that can decode itself from an external representation."}],"url":"\/documentation\/compute\/decodable","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Decodable"}]},"doc://com.swallow.documentation.Compute/7Swallow16IntegerInitiableP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow16IntegerInitiableP","title":"Swallow.IntegerInitiable","type":"unresolvable"},"doc://com.swallow.documentation.Compute/documentation/Compute/Double/Encodable-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Double\/Encodable-Implementations","url":"\/documentation\/compute\/double\/encodable-implementations","type":"topic","kind":"article","role":"collectionGroup","title":"Encodable Implementations","abstract":[]},"doc://com.swallow.documentation.Compute/documentation/Compute/Double/SIMDScalar-Implementations":{"kind":"article","title":"SIMDScalar Implementations","abstract":[],"role":"collectionGroup","type":"topic","url":"\/documentation\/compute\/double\/simdscalar-implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Double\/SIMDScalar-Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/Double/init(bitPattern:)":{"title":"init(bitPattern:)","role":"symbol","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Double\/init(bitPattern:)","url":"\/documentation\/compute\/double\/init(bitpattern:)","abstract":[{"text":"Creates a new value with the given bit pattern.","type":"text"}],"fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"bitPattern"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s6UInt64V","kind":"typeIdentifier","text":"UInt64"},{"text":")","kind":"text"}],"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/Double/_CustomPlaygroundQuickLookable-Implementations":{"title":"_CustomPlaygroundQuickLookable Implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Double\/_CustomPlaygroundQuickLookable-Implementations","url":"\/documentation\/compute\/double\/_customplaygroundquicklookable-implementations","kind":"article","abstract":[],"type":"topic","role":"collectionGroup"},"doc://com.swallow.documentation.Compute/documentation/Compute/Double/SignedNumeric-Implementations":{"title":"SignedNumeric Implementations","kind":"article","abstract":[],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Double\/SignedNumeric-Implementations","role":"collectionGroup","url":"\/documentation\/compute\/double\/signednumeric-implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/Double/TextOutputStreamable-Implementations":{"role":"collectionGroup","title":"TextOutputStreamable Implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Double\/TextOutputStreamable-Implementations","type":"topic","abstract":[],"url":"\/documentation\/compute\/double\/textoutputstreamable-implementations","kind":"article"},"doc://com.swallow.documentation.Compute/documentation/Compute/Double/init(_:)-15kej":{"role":"symbol","type":"topic","fragments":[{"text":"init","kind":"identifier"},{"text":"?(","kind":"text"},{"text":"Substring","preciseIdentifier":"s:Ss","kind":"typeIdentifier"},{"text":")","kind":"text"}],"kind":"symbol","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Double\/init(_:)-15kej","title":"init(_:)","url":"\/documentation\/compute\/double\/init(_:)-15kej"},"doc://com.swallow.documentation.Compute/7Swallow28MutableSubtractionOperatableP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow28MutableSubtractionOperatableP","title":"Swallow.MutableSubtractionOperatable","type":"unresolvable"},"doc://com.swallow.documentation.Compute/documentation/Compute/AdditiveArithmetic":{"type":"topic","title":"AdditiveArithmetic","abstract":[{"text":"A type with values that support addition and subtraction.","type":"text"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AdditiveArithmetic"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AdditiveArithmetic","url":"\/documentation\/compute\/additivearithmetic","role":"symbol","navigatorTitle":[{"text":"AdditiveArithmetic","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/CVarArg":{"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CVarArg"}],"abstract":[{"text":"A type whose instances can be encoded, and appropriately passed, as","type":"text"},{"text":" ","type":"text"},{"text":"elements of a C ","type":"text"},{"type":"codeVoice","code":"va_list"},{"text":".","type":"text"}],"navigatorTitle":[{"text":"CVarArg","kind":"identifier"}],"title":"CVarArg","type":"topic","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CVarArg","url":"\/documentation\/compute\/cvararg"},"doc://com.swallow.documentation.Compute/documentation/Compute/Double/Equatable-Implementations":{"abstract":[],"kind":"article","role":"collectionGroup","title":"Equatable Implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Double\/Equatable-Implementations","type":"topic","url":"\/documentation\/compute\/double\/equatable-implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/Double/init()":{"fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"()"}],"abstract":[],"type":"topic","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Double\/init()","title":"init()","url":"\/documentation\/compute\/double\/init()","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/ExpressibleByIntegerLiteral":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ExpressibleByIntegerLiteral","url":"\/documentation\/compute\/expressiblebyintegerliteral","title":"ExpressibleByIntegerLiteral","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ExpressibleByIntegerLiteral","kind":"identifier"}],"navigatorTitle":[{"text":"ExpressibleByIntegerLiteral","kind":"identifier"}],"abstract":[{"text":"A type that can be initialized with an integer literal.","type":"text"}],"kind":"symbol","role":"symbol"},"doc://com.swallow.documentation.Compute/7Swallow16BooleanInitiableP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow16BooleanInitiableP","title":"Swallow.BooleanInitiable","type":"unresolvable"},"doc://com.swallow.documentation.Compute/7Swallow31MutableMultiplicationOperatableP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow31MutableMultiplicationOperatableP","title":"Swallow.MutableMultiplicationOperatable","type":"unresolvable"},"doc://com.swallow.documentation.Compute/documentation/Compute/Double":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Double","abstract":[{"text":"A double-precision, floating-point value type.","type":"text"}],"title":"Double","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Double","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"Double","kind":"identifier"}],"kind":"symbol","type":"topic","url":"\/documentation\/compute\/double"},"doc://com.swallow.documentation.Compute/documentation/Compute/Double/CustomReflectable-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Double\/CustomReflectable-Implementations","url":"\/documentation\/compute\/double\/customreflectable-implementations","type":"topic","abstract":[],"role":"collectionGroup","title":"CustomReflectable Implementations","kind":"article"},"doc://com.swallow.documentation.Compute/7Swallow25MutableDivisionOperatableP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow25MutableDivisionOperatableP","title":"Swallow.MutableDivisionOperatable","type":"unresolvable"},"doc://com.swallow.documentation.Compute/7Swallow22ApproximatelyEquatableP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow22ApproximatelyEquatableP","title":"Swallow.ApproximatelyEquatable","type":"unresolvable"},"doc://com.swallow.documentation.Compute/7Swallow6NumberP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow6NumberP","title":"Swallow.Number","type":"unresolvable"},"doc://com.swallow.documentation.Compute/documentation/Compute/Double/ExpressibleByIntegerLiteral-Implementations":{"title":"ExpressibleByIntegerLiteral Implementations","role":"collectionGroup","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Double\/ExpressibleByIntegerLiteral-Implementations","kind":"article","url":"\/documentation\/compute\/double\/expressiblebyintegerliteral-implementations","abstract":[],"type":"topic"},"doc://com.swallow.documentation.Compute/7Swallow22SignedIntegerInitiableP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow22SignedIntegerInitiableP","title":"Swallow.SignedIntegerInitiable","type":"unresolvable"},"doc://com.swallow.documentation.Compute/7Swallow18AdditionOperatableP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow18AdditionOperatableP","title":"Swallow.AdditionOperatable","type":"unresolvable"},"doc://com.swallow.documentation.Compute/10Accelerate33vDSP_DiscreteFourierTransformableP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/10Accelerate33vDSP_DiscreteFourierTransformableP","title":"Accelerate.vDSP_DiscreteFourierTransformable","type":"unresolvable"},"doc://com.swallow.documentation.Compute/7Swallow20DiscreteOrContinuousP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow20DiscreteOrContinuousP","title":"Swallow.DiscreteOrContinuous","type":"unresolvable"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMDScalar":{"kind":"symbol","navigatorTitle":[{"text":"SIMDScalar","kind":"identifier"}],"type":"topic","title":"SIMDScalar","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMDScalar","abstract":[{"type":"text","text":"A type that can be used as an element in a SIMD vector."}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SIMDScalar","kind":"identifier"}],"url":"\/documentation\/compute\/simdscalar"},"doc://com.swallow.documentation.Compute/documentation/Compute/Double/LosslessStringConvertible-Implementations":{"abstract":[],"url":"\/documentation\/compute\/double\/losslessstringconvertible-implementations","type":"topic","role":"collectionGroup","title":"LosslessStringConvertible Implementations","kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Double\/LosslessStringConvertible-Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/Double/init(_:)-aeox":{"title":"init(_:)","url":"\/documentation\/compute\/double\/init(_:)-aeox","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Double\/init(_:)-aeox","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Float16","kind":"typeIdentifier","preciseIdentifier":"s:s7Float16V"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Creates a new instance that approximates the given value."}],"type":"topic","role":"symbol","kind":"symbol"},"doc://com.swallow.documentation.Compute/7Swallow21AnyCodableConvertibleP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow21AnyCodableConvertibleP","title":"Swallow.AnyCodableConvertible","type":"unresolvable"},"doc://com.swallow.documentation.Compute/7Swallow20ByteTupleConvertibleP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow20ByteTupleConvertibleP","title":"Swallow.ByteTupleConvertible","type":"unresolvable"},"doc://com.swallow.documentation.Compute/documentation/Compute/Double/FloatingPoint-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Double\/FloatingPoint-Implementations","url":"\/documentation\/compute\/double\/floatingpoint-implementations","type":"topic","abstract":[],"role":"collectionGroup","title":"FloatingPoint Implementations","kind":"article"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/BitwiseCopyable":{"title":"BitwiseCopyable","abstract":[],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BitwiseCopyable","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BitwiseCopyable","url":"\/documentation\/compute\/bitwisecopyable","navigatorTitle":[{"kind":"identifier","text":"BitwiseCopyable"}],"kind":"symbol","role":"symbol","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/Sendable":{"kind":"symbol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"Sendable","kind":"identifier"}],"title":"Sendable","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sendable","abstract":[],"url":"\/documentation\/compute\/sendable","role":"symbol","navigatorTitle":[{"text":"Sendable","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/7Swallow14CoderPrimitiveP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow14CoderPrimitiveP","title":"Swallow.CoderPrimitive","type":"unresolvable"},"doc://com.swallow.documentation.Compute/documentation/Compute/CustomStringConvertible":{"url":"\/documentation\/compute\/customstringconvertible","navigatorTitle":[{"kind":"identifier","text":"CustomStringConvertible"}],"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CustomStringConvertible","kind":"identifier"}],"abstract":[{"text":"A type with a customized textual representation.","type":"text"}],"type":"topic","title":"CustomStringConvertible","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CustomStringConvertible"},"doc://com.swallow.documentation.Compute/7Swallow20ArithmeticOperatableP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow20ArithmeticOperatableP","title":"Swallow.ArithmeticOperatable","type":"unresolvable"},"doc://com.swallow.documentation.Compute/7Swallow21SubtractionOperatableP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow21SubtractionOperatableP","title":"Swallow.SubtractionOperatable","type":"unresolvable"},"doc://com.swallow.documentation.Compute/7Swallow26ShouldNotBeDecodedFromBoolP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow26ShouldNotBeDecodedFromBoolP","title":"Swallow.ShouldNotBeDecodedFromBool","type":"unresolvable"},"doc://com.swallow.documentation.Compute/documentation/Compute/Numeric":{"abstract":[{"type":"text","text":"A type with values that support multiplication."}],"kind":"symbol","url":"\/documentation\/compute\/numeric","navigatorTitle":[{"text":"Numeric","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Numeric","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Numeric"}],"title":"Numeric"},"doc://com.swallow.documentation.Compute/documentation/Compute/Strideable":{"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/compute\/strideable","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Strideable","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Strideable"}],"navigatorTitle":[{"text":"Strideable","kind":"identifier"}],"abstract":[{"type":"text","text":"A type representing continuous, one-dimensional values that can be offset"},{"type":"text","text":" "},{"type":"text","text":"and measured."}],"title":"Strideable"},"doc://com.swallow.documentation.Compute/7Swallow27MutableArithmeticOperatableP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow27MutableArithmeticOperatableP","title":"Swallow.MutableArithmeticOperatable","type":"unresolvable"},"doc://com.swallow.documentation.Compute/10Accelerate29vDSP_FloatingPointGeneratableP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/10Accelerate29vDSP_FloatingPointGeneratableP","title":"Accelerate.vDSP_FloatingPointGeneratable","type":"unresolvable"},"doc://com.swallow.documentation.Compute/documentation/Compute/Copyable":{"title":"Copyable","abstract":[{"type":"text","text":"A type whose values can be implicitly or explicitly copied."}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"Copyable","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Copyable","url":"\/documentation\/compute\/copyable","navigatorTitle":[{"text":"Copyable","kind":"identifier"}],"kind":"symbol","role":"symbol","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/Hashable":{"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Hashable"}],"title":"Hashable","navigatorTitle":[{"text":"Hashable","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"A type that can be hashed into a "},{"type":"codeVoice","code":"Hasher"},{"type":"text","text":" to produce an integer hash value."}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Hashable","url":"\/documentation\/compute\/hashable","role":"symbol"},"doc://com.swallow.documentation.Compute/7Swallow16SignedOrUnsignedP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow16SignedOrUnsignedP","title":"Swallow.SignedOrUnsigned","type":"unresolvable"},"doc://com.swallow.documentation.Compute/documentation/Compute/ExpressibleByFloatLiteral":{"url":"\/documentation\/compute\/expressiblebyfloatliteral","title":"ExpressibleByFloatLiteral","navigatorTitle":[{"kind":"identifier","text":"ExpressibleByFloatLiteral"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ExpressibleByFloatLiteral","kind":"symbol","type":"topic","abstract":[{"text":"A type that can be initialized with a floating-point literal.","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ExpressibleByFloatLiteral"}],"role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Double/init(nan:signaling:)":{"type":"topic","title":"init(nan:signaling:)","url":"\/documentation\/compute\/double\/init(nan:signaling:)","abstract":[{"text":"Creates a NaN (“not a number”) value with the specified payload.","type":"text"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Double\/init(nan:signaling:)","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"text":"nan","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sd","text":"Double"},{"kind":"text","text":"."},{"text":"RawSignificand","kind":"typeIdentifier","preciseIdentifier":"s:Sd14RawSignificanda"},{"kind":"text","text":", "},{"text":"signaling","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":")"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Double/Decodable-Implementations":{"role":"collectionGroup","type":"topic","title":"Decodable Implementations","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Double\/Decodable-Implementations","kind":"article","url":"\/documentation\/compute\/double\/decodable-implementations"},"doc://com.swallow.documentation.Compute/7Swallow18ByteOrderSwappableP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow18ByteOrderSwappableP","title":"Swallow.ByteOrderSwappable","type":"unresolvable"},"doc://com.swallow.documentation.Compute/7Swallow22FloatingPointInitiableP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow22FloatingPointInitiableP","title":"Swallow.FloatingPointInitiable","type":"unresolvable"},"doc://com.swallow.documentation.Compute/7Swallow17NumberConvertibleP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow17NumberConvertibleP","title":"Swallow.NumberConvertible","type":"unresolvable"},"doc://com.swallow.documentation.Compute/documentation/Compute/BinaryFloatingPoint":{"navigatorTitle":[{"text":"BinaryFloatingPoint","kind":"identifier"}],"type":"topic","title":"BinaryFloatingPoint","abstract":[{"text":"A radix-2 (binary) floating-point type.","type":"text"}],"url":"\/documentation\/compute\/binaryfloatingpoint","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BinaryFloatingPoint","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryFloatingPoint","kind":"symbol","role":"symbol"},"doc://com.swallow.documentation.Compute/7Swallow10ContinuousP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow10ContinuousP","title":"Swallow.Continuous","type":"unresolvable"},"doc://com.swallow.documentation.Compute/7Swallow18DivisionOperatableP":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow18DivisionOperatableP","title":"Swallow.DivisionOperatable","type":"unresolvable"},"doc://com.swallow.documentation.Compute/documentation/Compute/Double/init(exactly:)-50ofc":{"title":"init(exactly:)","role":"symbol","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Double\/init(exactly:)-50ofc","url":"\/documentation\/compute\/double\/init(exactly:)-50ofc","abstract":[{"text":"Creates a new instance initialized to the given value, if it can be","type":"text"},{"text":" ","type":"text"},{"text":"represented without rounding.","type":"text"}],"fragments":[{"kind":"identifier","text":"init"},{"text":"?(","kind":"text"},{"kind":"externalParam","text":"exactly"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Float16","preciseIdentifier":"s:s7Float16V"},{"text":")","kind":"text"}],"type":"topic"},"doc://com.swallow.documentation.Compute/7Swallow11RandomnableP":{"type":"unresolvable","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow11RandomnableP","title":"Swallow.Randomnable"},"doc://com.swallow.documentation.Compute/7Swallow15NumberInitiableP":{"type":"unresolvable","identifier":"doc:\/\/com.swallow.documentation.Compute\/7Swallow15NumberInitiableP","title":"Swallow.NumberInitiable"},"doc://com.swallow.documentation.Compute/documentation/Compute/Double/CustomDebugStringConvertible-Implementations":{"abstract":[],"url":"\/documentation\/compute\/double\/customdebugstringconvertible-implementations","type":"topic","role":"collectionGroup","title":"CustomDebugStringConvertible Implementations","kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Double\/CustomDebugStringConvertible-Implementations"}}}