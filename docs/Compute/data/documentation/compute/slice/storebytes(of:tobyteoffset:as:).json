{"kind":"symbol","sections":[],"abstract":[{"text":"Stores a value’s bytes into the buffer pointer slice’s raw memory at the","type":"text"},{"text":" ","type":"text"},{"text":"specified byte offset.","type":"text"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/storeBytes(of:toByteOffset:as:)"},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"storeBytes","kind":"identifier"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"of","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"value"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":", "},{"text":"toByteOffset","kind":"externalParam"},{"kind":"text","text":" "},{"text":"offset","kind":"internalParam"},{"kind":"text","text":": "},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":" = 0, ","kind":"text"},{"text":"as","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"type"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"text":".Type)","kind":"text"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"value","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The value to store as raw bytes."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"The offset in bytes into the buffer pointer slice’s memory","type":"text"},{"text":" ","type":"text"},{"text":"to begin writing bytes from the value. The default is zero.","type":"text"}]}],"name":"offset"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The type to use for the newly constructed instance. The memory"},{"type":"text","text":" "},{"type":"text","text":"must be initialized to a value of a type that is layout compatible"},{"type":"text","text":" "},{"text":"with ","type":"text"},{"code":"type","type":"codeVoice"},{"type":"text","text":"."}]}],"name":"type"}]},{"content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The type "},{"type":"codeVoice","code":"T"},{"type":"text","text":" to be stored must be a trivial type. The memory must also be"},{"text":" ","type":"text"},{"text":"uninitialized, initialized to ","type":"text"},{"type":"codeVoice","code":"T"},{"text":", or initialized to another trivial","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"type that is layout compatible with "},{"type":"codeVoice","code":"T"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The memory written to must not extend beyond"},{"type":"text","text":" "},{"text":"the memory region represented by the buffer pointer slice—that is,","type":"text"},{"text":" ","type":"text"},{"code":"offset + MemoryLayout<T>.size","type":"codeVoice"},{"text":" must be less than or equal","type":"text"},{"type":"text","text":" "},{"type":"text","text":"to the slice’s "},{"code":"count","type":"codeVoice"},{"text":".","type":"text"}]},{"inlineContent":[{"type":"text","text":"After calling "},{"code":"storeBytes(of:toByteOffset:as:)","type":"codeVoice"},{"type":"text","text":", the memory is"},{"type":"text","text":" "},{"type":"text","text":"initialized to the raw bytes of "},{"type":"codeVoice","code":"value"},{"type":"text","text":". If the memory is bound to a"},{"type":"text","text":" "},{"type":"text","text":"type "},{"type":"codeVoice","code":"U"},{"type":"text","text":" that is layout compatible with "},{"type":"codeVoice","code":"T"},{"type":"text","text":", then it contains a value of"},{"type":"text","text":" "},{"text":"type ","type":"text"},{"code":"U","type":"codeVoice"},{"text":". Calling ","type":"text"},{"code":"storeBytes(of:toByteOffset:as:)","type":"codeVoice"},{"text":" does not change the","type":"text"},{"type":"text","text":" "},{"text":"bound type of the memory.","type":"text"}],"type":"paragraph"},{"name":"Note","content":[{"inlineContent":[{"type":"text","text":"A trivial type can be copied with just a bit-for-bit copy without"},{"text":" ","type":"text"},{"type":"text","text":"any indirection or reference-counting operations. Generally, native"},{"type":"text","text":" "},{"type":"text","text":"Swift types that do not contain strong or weak references or other"},{"text":" ","type":"text"},{"text":"forms of indirection are trivial, as are imported C structs and enums.","type":"text"}],"type":"paragraph"}],"style":"note","type":"aside"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you need to store into memory a copy of a value of a type that isn’t"},{"text":" ","type":"text"},{"text":"trivial, you cannot use the ","type":"text"},{"code":"storeBytes(of:toByteOffset:as:)","type":"codeVoice"},{"text":" method.","type":"text"},{"type":"text","text":" "},{"text":"Instead, you must know either initialize the memory or,","type":"text"},{"text":" ","type":"text"},{"text":"if you know the memory was already bound to ","type":"text"},{"type":"codeVoice","code":"type"},{"type":"text","text":", assign to the memory."}]}],"kind":"content"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"variants":[{"paths":["\/documentation\/compute\/slice\/storebytes(of:tobyteoffset:as:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice"]]},"metadata":{"extendedModule":"Swift","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"storeBytes","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"of","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":", ","kind":"text"},{"text":"toByteOffset","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":", ","kind":"text"},{"text":"as","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":".Type)"}],"modules":[{"relatedModules":["Swift"],"name":"Compute"}],"externalID":"s:s5SliceVsSwRszrlE10storeBytes2of12toByteOffset2asyqd___Siqd__mtlF","roleHeading":"Instance Method","symbolKind":"method","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Base"},{"type":"text","text":" is "},{"code":"UnsafeMutableRawBufferPointer","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"title":"storeBytes(of:toByteOffset:as:)","role":"symbol"},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","abstract":[{"type":"text","text":"A signed integer value type."}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Int","kind":"identifier"}],"navigatorTitle":[{"text":"Int","kind":"identifier"}],"title":"Int","url":"\/documentation\/compute\/int","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Slice":{"kind":"symbol","title":"Slice","abstract":[{"type":"text","text":"A view into a subsequence of elements of another collection."}],"url":"\/documentation\/compute\/slice","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Slice","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice","navigatorTitle":[{"text":"Slice","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Slice/storeBytes(of:toByteOffset:as:)":{"type":"topic","role":"symbol","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/storeBytes(of:toByteOffset:as:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"storeBytes","kind":"identifier"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"of","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"toByteOffset"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"text":", ","kind":"text"},{"text":"as","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":".Type)","kind":"text"}],"url":"\/documentation\/compute\/slice\/storebytes(of:tobyteoffset:as:)","title":"storeBytes(of:toByteOffset:as:)","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Base","type":"codeVoice"},{"type":"text","text":" is "},{"type":"codeVoice","code":"UnsafeMutableRawBufferPointer"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"abstract":[{"type":"text","text":"Stores a value’s bytes into the buffer pointer slice’s raw memory at the"},{"text":" ","type":"text"},{"type":"text","text":"specified byte offset."}]}}}