{"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"flatMap","kind":"identifier"},{"text":"<","kind":"text"},{"text":"ElementOfResult","kind":"genericParameter"},{"kind":"text","text":">(("},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Elements","preciseIdentifier":"s:s20LazySequenceProtocolP8ElementsQa"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"ElementOfResult"},{"kind":"text","text":"?) -> "},{"preciseIdentifier":"s:s15LazyMapSequenceV","text":"LazyMapSequence","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"LazyFilterSequence","preciseIdentifier":"s:s18LazyFilterSequenceV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"LazyMapSequence","kind":"typeIdentifier","preciseIdentifier":"s:s15LazyMapSequenceV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:s20LazySequenceProtocolP8ElementsQa","text":"Elements","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ElementOfResult"},{"text":"?>>, ","kind":"text"},{"kind":"typeIdentifier","text":"ElementOfResult"},{"text":">","kind":"text"}],"symbolKind":"method","extendedModule":"Swift","title":"flatMap(_:)","externalID":"s:s20LazySequenceProtocolPsE7flatMapys0aeB0Vys0a6FilterB0VyAEy8ElementsQzqd__SgGGqd__GAJ7ElementQzclF::SYNTHESIZED::s:s5SliceV","platforms":[],"modules":[{"name":"Compute","relatedModules":["Swift"]}],"roleHeading":"Instance Method"},"deprecationSummary":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Please use compactMap(_:) for the case where closure returns an optional value"}]}],"abstract":[{"type":"text","text":"Returns the non-"},{"code":"nil","type":"codeVoice"},{"text":" results of mapping the given transformation over","type":"text"},{"text":" ","type":"text"},{"text":"this sequence.","type":"text"}],"kind":"symbol","sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/slice\/flatmap(_:)-6ng42"]}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/LazySequenceProtocol-Implementations"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/flatMap(_:)-6ng42"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"flatMap"},{"text":"<","kind":"text"},{"text":"ElementOfResult","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"transform","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" ("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazySequenceProtocol\/Elements-swift.associatedtype","text":"Elements","preciseIdentifier":"s:s20LazySequenceProtocolP8ElementsQa","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Element","preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"ElementOfResult"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyMapSequence","preciseIdentifier":"s:s15LazyMapSequenceV","text":"LazyMapSequence"},{"text":"<","kind":"text"},{"text":"LazyFilterSequence","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyFilterSequence","preciseIdentifier":"s:s18LazyFilterSequenceV","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyMapSequence","kind":"typeIdentifier","text":"LazyMapSequence","preciseIdentifier":"s:s15LazyMapSequenceV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazySequenceProtocol\/Elements-swift.associatedtype","kind":"typeIdentifier","text":"Elements","preciseIdentifier":"s:s20LazySequenceProtocolP8ElementsQa"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"ElementOfResult"},{"text":"?>>, ","kind":"text"},{"kind":"typeIdentifier","text":"ElementOfResult"},{"kind":"text","text":">"}],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"name":"transform","content":[{"inlineContent":[{"type":"text","text":"A closure that accepts an element of this sequence"},{"text":" ","type":"text"},{"type":"text","text":"as its argument and returns an optional value."}],"type":"paragraph"}]}]},{"content":[{"type":"heading","anchor":"discussion","level":2,"text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"Use this method to receive a sequence of non-optional values when your","type":"text"},{"type":"text","text":" "},{"type":"text","text":"transformation produces an optional value."}]},{"content":[{"inlineContent":[{"type":"text","text":"O(1)"}],"type":"paragraph"}],"name":"Complexity","type":"aside","style":"note"}],"kind":"content"}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Slice/flatMap(_:)-6ng42":{"url":"\/documentation\/compute\/slice\/flatmap(_:)-6ng42","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/flatMap(_:)-6ng42","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"flatMap"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"ElementOfResult"},{"text":">((","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s20LazySequenceProtocolP8ElementsQa","text":"Elements"},{"text":".","kind":"text"},{"preciseIdentifier":"s:ST7ElementQa","text":"Element","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"ElementOfResult","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"kind":"typeIdentifier","text":"LazyMapSequence","preciseIdentifier":"s:s15LazyMapSequenceV"},{"text":"<","kind":"text"},{"text":"LazyFilterSequence","kind":"typeIdentifier","preciseIdentifier":"s:s18LazyFilterSequenceV"},{"text":"<","kind":"text"},{"text":"LazyMapSequence","preciseIdentifier":"s:s15LazyMapSequenceV","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:s20LazySequenceProtocolP8ElementsQa","kind":"typeIdentifier","text":"Elements"},{"text":", ","kind":"text"},{"text":"ElementOfResult","kind":"typeIdentifier"},{"text":"?>>, ","kind":"text"},{"kind":"typeIdentifier","text":"ElementOfResult"},{"kind":"text","text":">"}],"type":"topic","deprecated":true,"title":"flatMap(_:)","kind":"symbol","abstract":[{"type":"text","text":"Returns the non-"},{"code":"nil","type":"codeVoice"},{"type":"text","text":" results of mapping the given transformation over"},{"type":"text","text":" "},{"type":"text","text":"this sequence."}]},"doc://com.swallow.documentation.Compute/documentation/Compute/LazySequenceProtocol/Elements-swift.associatedtype":{"required":true,"role":"symbol","abstract":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"Sequence"},{"type":"text","text":" that can contain the same elements as this one,"},{"text":" ","type":"text"},{"type":"text","text":"possibly with a simpler type."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazySequenceProtocol\/Elements-swift.associatedtype","type":"topic","kind":"symbol","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Elements","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"Sequence","preciseIdentifier":"s:ST","kind":"typeIdentifier"},{"text":" = ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"title":"Elements","url":"\/documentation\/compute\/lazysequenceprotocol\/elements-swift.associatedtype"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/LazyMapSequence":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyMapSequence","url":"\/documentation\/compute\/lazymapsequence","abstract":[{"type":"text","text":"A "},{"code":"Sequence","type":"codeVoice"},{"type":"text","text":" whose elements consist of those in a "},{"type":"codeVoice","code":"Base"},{"type":"text","text":" "},{"code":"Sequence","type":"codeVoice"},{"text":" passed through a transform function returning ","type":"text"},{"code":"Element","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"These elements are computed lazily, each time theyâ€™re read, by"},{"type":"text","text":" "},{"type":"text","text":"calling the transform function on a base element."}],"type":"topic","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LazyMapSequence","kind":"identifier"}],"navigatorTitle":[{"text":"LazyMapSequence","kind":"identifier"}],"kind":"symbol","title":"LazyMapSequence"},"doc://com.swallow.documentation.Compute/documentation/Compute/LazyFilterSequence":{"kind":"symbol","navigatorTitle":[{"text":"LazyFilterSequence","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyFilterSequence","abstract":[{"type":"text","text":"A sequence whose elements consist of the elements of some base"},{"type":"text","text":" "},{"type":"text","text":"sequence that also satisfy a given predicate."}],"title":"LazyFilterSequence","url":"\/documentation\/compute\/lazyfiltersequence","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"LazyFilterSequence","kind":"identifier"}],"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence/Element":{"type":"topic","required":true,"abstract":[{"type":"text","text":"A type representing the sequenceâ€™s elements."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"symbol","url":"\/documentation\/compute\/sequence\/element","role":"symbol","title":"Element","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Slice/LazySequenceProtocol-Implementations":{"type":"topic","role":"collectionGroup","url":"\/documentation\/compute\/slice\/lazysequenceprotocol-implementations","kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/LazySequenceProtocol-Implementations","abstract":[],"title":"LazySequenceProtocol Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/Slice":{"kind":"symbol","title":"Slice","abstract":[{"type":"text","text":"A view into a subsequence of elements of another collection."}],"url":"\/documentation\/compute\/slice","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Slice","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice","navigatorTitle":[{"text":"Slice","kind":"identifier"}]}}}