{"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/RangeReplaceableCollection-Implementations"]]},"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/+(_:_:)-4resp","interfaceLanguage":"swift"},"metadata":{"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"+"},{"text":" ","kind":"text"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Other"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Other"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"}],"roleHeading":"Operator","extendedModule":"Swift","externalID":"s:SmsE1poiyxqd___xtSTRd__7ElementQyd__ABRtzlFZ::SYNTHESIZED::s:s5SliceV","title":"+(_:_:)","symbolKind":"op","role":"symbol","modules":[{"relatedModules":["Swift"],"name":"Compute"}]},"abstract":[{"type":"text","text":"Creates a new collection by concatenating the elements of a sequence and a"},{"type":"text","text":" "},{"text":"collection.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/slice\/+(_:_:)-4resp"]}],"sections":[],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"+","kind":"identifier"},{"kind":"text","text":" "},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Other"},{"text":">(","kind":"text"},{"text":"lhs","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Other","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"rhs","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":" "},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Other"},{"kind":"text","text":" : "},{"text":"Sequence","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence","kind":"typeIdentifier","preciseIdentifier":"s:ST"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Element","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"text":" == ","kind":"text"},{"text":"Other","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","preciseIdentifier":"s:ST7ElementQa","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"typeIdentifier"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"lhs","content":[{"type":"paragraph","inlineContent":[{"text":"A collection or finite sequence.","type":"text"}]}]},{"name":"rhs","content":[{"inlineContent":[{"type":"text","text":"A range-replaceable collection."}],"type":"paragraph"}]}]},{"content":[{"level":2,"text":"Discussion","anchor":"discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"The two arguments must have the same ","type":"text"},{"type":"codeVoice","code":"Element"},{"text":" type. For example, you can","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"concatenate the elements of a "},{"type":"codeVoice","code":"Range<Int>"},{"text":" instance and an integer array.","type":"text"}]},{"type":"codeListing","syntax":null,"code":["let numbers = [7, 8, 9, 10]","let moreNumbers = (1...6) + numbers","print(moreNumbers)","\/\/ Prints \"[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\""]},{"inlineContent":[{"text":"The resulting collection has the type of argument on the right-hand side.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"In the example above, "},{"code":"moreNumbers","type":"codeVoice"},{"text":" has the same type as ","type":"text"},{"type":"codeVoice","code":"numbers"},{"text":", which","type":"text"},{"type":"text","text":" "},{"text":"is ","type":"text"},{"type":"codeVoice","code":"[Int]"},{"type":"text","text":"."}],"type":"paragraph"}],"kind":"content"}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Slice/RangeReplaceableCollection-Implementations":{"abstract":[],"kind":"article","role":"collectionGroup","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/RangeReplaceableCollection-Implementations","title":"RangeReplaceableCollection Implementations","type":"topic","url":"\/documentation\/compute\/slice\/rangereplaceablecollection-implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/Slice":{"kind":"symbol","title":"Slice","abstract":[{"type":"text","text":"A view into a subsequence of elements of another collection."}],"url":"\/documentation\/compute\/slice","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Slice","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice","navigatorTitle":[{"text":"Slice","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence":{"url":"\/documentation\/compute\/sequence","navigatorTitle":[{"kind":"identifier","text":"Sequence"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence","title":"Sequence","kind":"symbol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Sequence","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"A type that provides sequential, iterated access to its elements."}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Slice/+(_:_:)-4resp":{"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"+","kind":"identifier"},{"text":" ","kind":"text"},{"kind":"text","text":"<"},{"text":"Other","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"Other"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"type":"topic","title":"+(_:_:)","abstract":[{"type":"text","text":"Creates a new collection by concatenating the elements of a sequence and a"},{"text":" ","type":"text"},{"text":"collection.","type":"text"}],"kind":"symbol","url":"\/documentation\/compute\/slice\/+(_:_:)-4resp","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/+(_:_:)-4resp"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence/Element":{"type":"topic","required":true,"abstract":[{"type":"text","text":"A type representing the sequenceâ€™s elements."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"symbol","url":"\/documentation\/compute\/sequence\/element","role":"symbol","title":"Element","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"identifier"}]}}}