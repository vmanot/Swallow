{"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/difference(from:by:)","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/compute\/slice\/difference(from:by:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/BidirectionalCollection-Implementations"]]},"schemaVersion":{"patch":0,"minor":3,"major":0},"abstract":[{"type":"text","text":"Returns the difference needed to produce this collection’s ordered"},{"text":" ","type":"text"},{"type":"text","text":"elements from the given collection, using the given predicate as an"},{"type":"text","text":" "},{"type":"text","text":"equivalence test."}],"kind":"symbol","metadata":{"modules":[{"relatedModules":["Swift"],"name":"Compute"}],"role":"symbol","extendedModule":"Swift","roleHeading":"Instance Method","symbolKind":"method","externalID":"s:SKsE10difference4from2bys20CollectionDifferenceVy7ElementQzGqd___SbAG_AGtXEtSKRd__AFQyd__AGRSlF::SYNTHESIZED::s:s5SliceV","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"difference"},{"text":"<","kind":"text"},{"text":"C","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"from"},{"text":": ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"by"},{"text":": (","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:ST7ElementQa","text":"Element","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:s20CollectionDifferenceV","text":"CollectionDifference","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:ST7ElementQa","text":"Element","kind":"typeIdentifier"},{"text":">","kind":"text"}],"platforms":[{"introducedAt":"13.0","deprecated":false,"name":"iOS","unavailable":false,"beta":false},{"unavailable":false,"name":"macOS","introducedAt":"10.15","beta":false,"deprecated":false},{"introducedAt":"13.0","unavailable":false,"deprecated":false,"beta":false,"name":"tvOS"},{"beta":false,"introducedAt":"6.0","unavailable":false,"name":"watchOS","deprecated":false}],"title":"difference(from:by:)"},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"difference"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"C"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"from"},{"kind":"text","text":" "},{"kind":"internalParam","text":"other"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"C"},{"text":", ","kind":"text"},{"text":"by","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"areEquivalent"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"C"},{"text":".","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","text":"Element","preciseIdentifier":"s:ST7ElementQa"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"text":") -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bool"},{"kind":"text","text":") -> "},{"text":"CollectionDifference","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CollectionDifference","kind":"typeIdentifier","preciseIdentifier":"s:s20CollectionDifferenceV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Element","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","preciseIdentifier":"s:ST7ElementQa"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:SK","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BidirectionalCollection","kind":"typeIdentifier","text":"BidirectionalCollection"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Element","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","preciseIdentifier":"s:ST7ElementQa"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":"."},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","text":"Element","preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier"}],"platforms":["macOS"]}]},{"parameters":[{"name":"other","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The base state."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A closure that returns a Boolean value indicating"},{"type":"text","text":" "},{"type":"text","text":"whether two elements are equivalent."}]}],"name":"areEquivalent"}],"kind":"parameters"},{"kind":"content","content":[{"text":"Return Value","anchor":"return-value","level":2,"type":"heading"},{"inlineContent":[{"text":"The difference needed to produce the receiver’s state from","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the parameter’s state."}],"type":"paragraph"}]},{"content":[{"anchor":"discussion","text":"Discussion","type":"heading","level":2},{"inlineContent":[{"text":"This function does not infer element moves. If you need to infer moves,","type":"text"},{"text":" ","type":"text"},{"text":"call the ","type":"text"},{"code":"inferringMoves()","type":"codeVoice"},{"type":"text","text":" method on the resulting difference."}],"type":"paragraph"},{"content":[{"type":"paragraph","inlineContent":[{"text":"Worst case performance is O(","type":"text"},{"inlineContent":[{"type":"text","text":"n"}],"type":"emphasis"},{"type":"text","text":" * "},{"type":"emphasis","inlineContent":[{"type":"text","text":"m"}]},{"text":"), where ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"n"}]},{"type":"text","text":" is the"},{"type":"text","text":" "},{"type":"text","text":"count of this collection and "},{"type":"emphasis","inlineContent":[{"type":"text","text":"m"}]},{"type":"text","text":" is "},{"code":"other.count","type":"codeVoice"},{"type":"text","text":". You can expect"},{"text":" ","type":"text"},{"text":"faster execution when the collections share many common elements.","type":"text"}]}],"style":"note","name":"Complexity","type":"aside"}],"kind":"content"}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Slice/difference(from:by:)":{"title":"difference(from:by:)","role":"symbol","kind":"symbol","type":"topic","url":"\/documentation\/compute\/slice\/difference(from:by:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"difference","kind":"identifier"},{"text":"<","kind":"text"},{"text":"C","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"from"},{"text":": ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"by"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"C"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:ST7ElementQa"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"text":") -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s20CollectionDifferenceV","text":"CollectionDifference"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"kind":"text","text":">"}],"abstract":[{"text":"Returns the difference needed to produce this collection’s ordered","type":"text"},{"type":"text","text":" "},{"text":"elements from the given collection, using the given predicate as an","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"equivalence test."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/difference(from:by:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/Slice/BidirectionalCollection-Implementations":{"url":"\/documentation\/compute\/slice\/bidirectionalcollection-implementations","title":"BidirectionalCollection Implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/BidirectionalCollection-Implementations","role":"collectionGroup","type":"topic","kind":"article","abstract":[]},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence/Element":{"type":"topic","required":true,"abstract":[{"type":"text","text":"A type representing the sequence’s elements."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"symbol","url":"\/documentation\/compute\/sequence\/element","role":"symbol","title":"Element","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Slice":{"kind":"symbol","title":"Slice","abstract":[{"type":"text","text":"A view into a subsequence of elements of another collection."}],"url":"\/documentation\/compute\/slice","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Slice","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice","navigatorTitle":[{"text":"Slice","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/BidirectionalCollection":{"navigatorTitle":[{"text":"BidirectionalCollection","kind":"identifier"}],"abstract":[{"text":"A collection that supports backward as well as forward traversal.","type":"text"}],"title":"BidirectionalCollection","kind":"symbol","url":"\/documentation\/compute\/bidirectionalcollection","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"BidirectionalCollection"}],"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BidirectionalCollection","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/CollectionDifference":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CollectionDifference","kind":"identifier"}],"url":"\/documentation\/compute\/collectiondifference","type":"topic","title":"CollectionDifference","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"CollectionDifference"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CollectionDifference","abstract":[{"type":"text","text":"A collection of insertions and removals that describe the difference"},{"text":" ","type":"text"},{"text":"between two ordered collection states.","type":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Bool":{"url":"\/documentation\/compute\/bool","role":"symbol","title":"Bool","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Bool","kind":"identifier"}],"abstract":[{"type":"text","text":"A value type whose instances are either "},{"type":"codeVoice","code":"true"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"false"},{"text":".","type":"text"}],"navigatorTitle":[{"text":"Bool","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bool","kind":"symbol"}}}