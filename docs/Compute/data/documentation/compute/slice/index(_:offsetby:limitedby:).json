{"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"index"},{"kind":"text","text":"("},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"i"},{"kind":"text","text":": "},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice","kind":"typeIdentifier","preciseIdentifier":"s:s5SliceV","text":"Slice"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Base"},{"text":">.","kind":"text"},{"text":"Index","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"offsetBy","kind":"externalParam"},{"kind":"text","text":" "},{"text":"n","kind":"internalParam"},{"kind":"text","text":": "},{"text":"Int","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"text":"limitedBy","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"limit","kind":"internalParam"},{"kind":"text","text":": "},{"text":"Slice","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice","preciseIdentifier":"s:s5SliceV"},{"text":"<","kind":"text"},{"text":"Base","kind":"typeIdentifier"},{"kind":"text","text":">."},{"text":"Index","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Slice","preciseIdentifier":"s:s5SliceV","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Base","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"kind":"typeIdentifier","text":"Index"},{"kind":"text","text":"?"}]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A valid index of the collection."}]}],"name":"i"},{"content":[{"inlineContent":[{"text":"A valid index of the collection to use as a limit. If","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"distance > 0"},{"type":"text","text":", a limit that is less than "},{"type":"codeVoice","code":"i"},{"text":" has no effect.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Likewise, if "},{"code":"distance < 0","type":"codeVoice"},{"text":", a limit that is greater than ","type":"text"},{"code":"i","type":"codeVoice"},{"type":"text","text":" has no"},{"text":" ","type":"text"},{"text":"effect.","type":"text"}],"type":"paragraph"}],"name":"limit"}]},{"kind":"content","content":[{"type":"heading","text":"Return Value","level":2,"anchor":"return-value"},{"inlineContent":[{"text":"An index offset by ","type":"text"},{"code":"distance","type":"codeVoice"},{"text":" from the index ","type":"text"},{"code":"i","type":"codeVoice"},{"type":"text","text":", unless that"},{"type":"text","text":" "},{"text":"index would be beyond ","type":"text"},{"type":"codeVoice","code":"limit"},{"type":"text","text":" in the direction of movement. In that"},{"text":" ","type":"text"},{"type":"text","text":"case, the method returns "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."}],"type":"paragraph"}]},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"inlineContent":[{"type":"text","text":"The following example obtains an index advanced four positions from a"},{"text":" ","type":"text"},{"type":"text","text":"string’s starting index and then prints the character at that position."},{"type":"text","text":" "},{"text":"The operation doesn’t require going beyond the limiting ","type":"text"},{"code":"s.endIndex","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"value, so it succeeds."}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":["let s = \"Swift\"","if let i = s.index(s.startIndex, offsetBy: 4, limitedBy: s.endIndex) {","    print(s[i])","}","\/\/ Prints \"t\""]},{"type":"paragraph","inlineContent":[{"text":"The next example attempts to retrieve an index six positions from","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"s.startIndex"},{"text":" but fails, because that distance is beyond the index","type":"text"},{"type":"text","text":" "},{"type":"text","text":"passed as "},{"type":"codeVoice","code":"limit"},{"text":".","type":"text"}]},{"syntax":null,"code":["let j = s.index(s.startIndex, offsetBy: 6, limitedBy: s.endIndex)","print(j)","\/\/ Prints \"nil\""],"type":"codeListing"},{"inlineContent":[{"text":"The value passed as ","type":"text"},{"type":"codeVoice","code":"distance"},{"type":"text","text":" must not offset "},{"type":"codeVoice","code":"i"},{"text":" beyond the bounds of","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the collection, unless the index passed as "},{"type":"codeVoice","code":"limit"},{"type":"text","text":" prevents offsetting"},{"text":" ","type":"text"},{"text":"beyond those bounds.","type":"text"}],"type":"paragraph"},{"type":"aside","content":[{"inlineContent":[{"type":"text","text":"O(1)"}],"type":"paragraph"}],"style":"note","name":"Complexity"}]}],"variants":[{"paths":["\/documentation\/compute\/slice\/index(_:offsetby:limitedby:)"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/RandomAccessCollection-Implementations"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/index(_:offsetBy:limitedBy:)","interfaceLanguage":"swift"},"metadata":{"extendedModule":"Swift","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"index"},{"kind":"text","text":"("},{"text":"Slice","kind":"typeIdentifier","preciseIdentifier":"s:s5SliceV"},{"kind":"text","text":"<"},{"text":"Base","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"kind":"typeIdentifier","text":"Index"},{"kind":"text","text":", "},{"text":"offsetBy","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"kind":"text","text":", "},{"kind":"externalParam","text":"limitedBy"},{"kind":"text","text":": "},{"text":"Slice","kind":"typeIdentifier","preciseIdentifier":"s:s5SliceV"},{"text":"<","kind":"text"},{"text":"Base","kind":"typeIdentifier"},{"kind":"text","text":">."},{"text":"Index","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Slice","kind":"typeIdentifier","preciseIdentifier":"s:s5SliceV"},{"text":"<","kind":"text"},{"text":"Base","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"kind":"typeIdentifier","text":"Index"},{"text":"?","kind":"text"}],"role":"symbol","modules":[{"name":"Compute","relatedModules":["Swift"]}],"roleHeading":"Instance Method","title":"index(_:offsetBy:limitedBy:)","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Base","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Collection","type":"codeVoice"},{"type":"text","text":"."}]},"externalID":"s:s5SliceV5index_8offsetBy07limitedD05IndexQzSgAG_SiAGtF"},"sections":[],"abstract":[{"type":"text","text":"Returns an index that is the specified distance from the given index,"},{"type":"text","text":" "},{"text":"unless that distance is beyond a given limiting index.","type":"text"}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Slice/index(_:offsetBy:limitedBy:)":{"type":"topic","abstract":[{"text":"Returns an index that is the specified distance from the given index,","type":"text"},{"type":"text","text":" "},{"text":"unless that distance is beyond a given limiting index.","type":"text"}],"kind":"symbol","role":"symbol","url":"\/documentation\/compute\/slice\/index(_:offsetby:limitedby:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/index(_:offsetBy:limitedBy:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"index","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Slice","preciseIdentifier":"s:s5SliceV"},{"kind":"text","text":"<"},{"text":"Base","kind":"typeIdentifier"},{"kind":"text","text":">."},{"text":"Index","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"offsetBy","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"limitedBy","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s5SliceV","kind":"typeIdentifier","text":"Slice"},{"kind":"text","text":"<"},{"text":"Base","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"text":"Index","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:s5SliceV","text":"Slice","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Base"},{"text":">.","kind":"text"},{"kind":"typeIdentifier","text":"Index"},{"kind":"text","text":"?"}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Base"},{"text":" conforms to ","type":"text"},{"code":"Collection","type":"codeVoice"},{"type":"text","text":"."}]},"title":"index(_:offsetBy:limitedBy:)"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","abstract":[{"type":"text","text":"A signed integer value type."}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Int","kind":"identifier"}],"navigatorTitle":[{"text":"Int","kind":"identifier"}],"title":"Int","url":"\/documentation\/compute\/int","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Slice/RandomAccessCollection-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/RandomAccessCollection-Implementations","type":"topic","abstract":[],"kind":"article","role":"collectionGroup","title":"RandomAccessCollection Implementations","url":"\/documentation\/compute\/slice\/randomaccesscollection-implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/Slice":{"kind":"symbol","title":"Slice","abstract":[{"type":"text","text":"A view into a subsequence of elements of another collection."}],"url":"\/documentation\/compute\/slice","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Slice","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice","navigatorTitle":[{"text":"Slice","kind":"identifier"}]}}}