{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"mutating","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"insert","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"C"},{"kind":"text","text":">("},{"kind":"externalParam","text":"contentsOf"},{"kind":"text","text":" "},{"text":"newElements","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"C"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"at"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"i"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/Index","kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa","text":"Index"},{"kind":"text","text":") "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"C"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection","text":"Collection","preciseIdentifier":"s:Sl","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":"."},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","text":"Element","preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier"}],"platforms":["macOS"],"languages":["swift"]}]},{"parameters":[{"content":[{"inlineContent":[{"text":"The new elements to insert into the collection.","type":"text"}],"type":"paragraph"}],"name":"newElements"},{"name":"i","content":[{"type":"paragraph","inlineContent":[{"text":"The position at which to insert the new elements. ","type":"text"},{"type":"codeVoice","code":"index"},{"text":" ","type":"text"},{"text":"must be a valid index of the collection.","type":"text"}]}]}],"kind":"parameters"},{"content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The new elements are inserted before the element currently at the"},{"type":"text","text":" "},{"type":"text","text":"specified index. If you pass the collection’s "},{"type":"codeVoice","code":"endIndex"},{"type":"text","text":" property as the"},{"text":" ","type":"text"},{"code":"index","type":"codeVoice"},{"type":"text","text":" parameter, the new elements are appended to the collection."}]},{"type":"paragraph","inlineContent":[{"text":"Here’s an example of inserting a range of integers into an array of the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"same type:"}]},{"code":["var numbers = [1, 2, 3, 4, 5]","numbers.insert(contentsOf: 100...103, at: 3)","print(numbers)","\/\/ Prints \"[1, 2, 3, 100, 101, 102, 103, 4, 5]\""],"type":"codeListing","syntax":null},{"inlineContent":[{"text":"Calling this method may invalidate any existing indices for use with this","type":"text"},{"type":"text","text":" "},{"text":"collection.","type":"text"}],"type":"paragraph"},{"style":"note","content":[{"inlineContent":[{"text":"O(","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"n"}]},{"text":" + ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"m"}]},{"type":"text","text":"), where "},{"type":"emphasis","inlineContent":[{"text":"n","type":"text"}]},{"text":" is length of this collection and","type":"text"},{"type":"text","text":" "},{"type":"emphasis","inlineContent":[{"text":"m","type":"text"}]},{"text":" is the length of ","type":"text"},{"code":"newElements","type":"codeVoice"},{"text":". If ","type":"text"},{"type":"codeVoice","code":"i == endIndex"},{"type":"text","text":", this method"},{"type":"text","text":" "},{"text":"is equivalent to ","type":"text"},{"type":"codeVoice","code":"append(contentsOf:)"},{"type":"text","text":"."}],"type":"paragraph"}],"type":"aside","name":"Complexity"}],"kind":"content"}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/RangeReplaceableCollection-Implementations"]]},"sections":[],"metadata":{"roleHeading":"Instance Method","modules":[{"name":"Compute","relatedModules":["Swift"]}],"externalID":"s:SmsE6insert10contentsOf2atyqd__n_5IndexQztSlRd__7ElementQyd__AFRtzlF::SYNTHESIZED::s:s5SliceV","symbolKind":"method","extendedModule":"Swift","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"insert","kind":"identifier"},{"text":"<","kind":"text"},{"text":"C","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"contentsOf","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"C"},{"text":", ","kind":"text"},{"text":"at","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa","text":"Index"},{"text":")","kind":"text"}],"title":"insert(contentsOf:at:)","role":"symbol"},"abstract":[{"type":"text","text":"Inserts the elements of a sequence into the collection at the specified"},{"text":" ","type":"text"},{"text":"position.","type":"text"}],"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/insert(contentsOf:at:)-2xj4m","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/slice\/insert(contentsof:at:)-2xj4m"]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence/Element":{"type":"topic","required":true,"abstract":[{"type":"text","text":"A type representing the sequence’s elements."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"symbol","url":"\/documentation\/compute\/sequence\/element","role":"symbol","title":"Element","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Slice/RangeReplaceableCollection-Implementations":{"abstract":[],"kind":"article","role":"collectionGroup","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/RangeReplaceableCollection-Implementations","title":"RangeReplaceableCollection Implementations","type":"topic","url":"\/documentation\/compute\/slice\/rangereplaceablecollection-implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/Collection":{"kind":"symbol","role":"symbol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Collection"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection","url":"\/documentation\/compute\/collection","abstract":[{"type":"text","text":"A sequence whose elements can be traversed multiple times,"},{"text":" ","type":"text"},{"text":"nondestructively, and accessed by an indexed subscript.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Collection"}],"title":"Collection"},"doc://com.swallow.documentation.Compute/documentation/Compute/Collection/Index":{"url":"\/documentation\/compute\/collection\/index","required":true,"role":"symbol","title":"Index","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Index","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"Comparable","preciseIdentifier":"s:SL","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"A type that represents a position in the collection."}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/Index","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Slice":{"kind":"symbol","title":"Slice","abstract":[{"type":"text","text":"A view into a subsequence of elements of another collection."}],"url":"\/documentation\/compute\/slice","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Slice","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice","navigatorTitle":[{"text":"Slice","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Slice/insert(contentsOf:at:)-2xj4m":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"insert"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"C"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"contentsOf"},{"text":": ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"at"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:Sl5IndexQa","kind":"typeIdentifier","text":"Index"},{"text":")","kind":"text"}],"kind":"symbol","title":"insert(contentsOf:at:)","abstract":[{"type":"text","text":"Inserts the elements of a sequence into the collection at the specified"},{"type":"text","text":" "},{"type":"text","text":"position."}],"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/insert(contentsOf:at:)-2xj4m","type":"topic","url":"\/documentation\/compute\/slice\/insert(contentsof:at:)-2xj4m"}}}