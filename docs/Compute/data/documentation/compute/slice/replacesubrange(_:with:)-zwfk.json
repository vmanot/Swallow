{"schemaVersion":{"patch":0,"major":0,"minor":3},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"mutating"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"replaceSubrange","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"C"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"subRange"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Range","preciseIdentifier":"s:Sn","text":"Range","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice","preciseIdentifier":"s:s5SliceV","text":"Slice"},{"kind":"text","text":"<"},{"text":"Base","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"text":"Index","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"with","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"newElements"},{"kind":"text","text":": "},{"text":"C","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:Sl","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection","text":"Collection"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Base"},{"kind":"text","text":"."},{"preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier","text":"Element","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element"},{"text":" == ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":".","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier","text":"Element"}],"platforms":["macOS"]}]},{"parameters":[{"name":"newElements","content":[{"type":"paragraph","inlineContent":[{"text":"The new elements to add to the collection.","type":"text"}]}]}],"kind":"parameters"},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method has the effect of removing the specified range of elements"},{"type":"text","text":" "},{"text":"from the collection and inserting the new elements at the same location.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"The number of new elements need not match the number of elements being"},{"text":" ","type":"text"},{"type":"text","text":"removed."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"In this example, three elements in the middle of an array of integers are"},{"text":" ","type":"text"},{"type":"text","text":"replaced by the five elements of a "},{"type":"codeVoice","code":"Repeated<Int>"},{"type":"text","text":" instance."}]},{"syntax":null,"code":[" var nums = [10, 20, 30, 40, 50]"," nums.replaceSubrange(1...3, with: repeatElement(1, count: 5))"," print(nums)"," \/\/ Prints \"[10, 1, 1, 1, 1, 1, 50]\""],"type":"codeListing"},{"inlineContent":[{"text":"If you pass a zero-length range as the ","type":"text"},{"type":"codeVoice","code":"subrange"},{"text":" parameter, this method","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"inserts the elements of "},{"type":"codeVoice","code":"newElements"},{"text":" at ","type":"text"},{"type":"codeVoice","code":"subrange.startIndex"},{"type":"text","text":". Calling"},{"type":"text","text":" "},{"text":"the ","type":"text"},{"type":"codeVoice","code":"insert(contentsOf:at:)"},{"type":"text","text":" method instead is preferred."}],"type":"paragraph"},{"inlineContent":[{"text":"Likewise, if you pass a zero-length collection as the ","type":"text"},{"code":"newElements","type":"codeVoice"},{"type":"text","text":" "},{"text":"parameter, this method removes the elements in the given subrange","type":"text"},{"type":"text","text":" "},{"text":"without replacement. Calling the ","type":"text"},{"type":"codeVoice","code":"removeSubrange(_:)"},{"text":" method instead is","type":"text"},{"type":"text","text":" "},{"text":"preferred.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"Calling this method may invalidate any existing indices for use with this","type":"text"},{"type":"text","text":" "},{"text":"collection.","type":"text"}]},{"type":"aside","style":"note","content":[{"type":"paragraph","inlineContent":[{"text":"O(","type":"text"},{"type":"emphasis","inlineContent":[{"text":"n","type":"text"}]},{"text":" + ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"m"}]},{"text":"), where ","type":"text"},{"inlineContent":[{"text":"n","type":"text"}],"type":"emphasis"},{"text":" is length of this collection and","type":"text"},{"type":"text","text":" "},{"type":"emphasis","inlineContent":[{"type":"text","text":"m"}]},{"text":" is the length of ","type":"text"},{"type":"codeVoice","code":"newElements"},{"type":"text","text":". If the call to this method simply"},{"type":"text","text":" "},{"type":"text","text":"appends the contents of "},{"code":"newElements","type":"codeVoice"},{"text":" to the collection, this method is","type":"text"},{"type":"text","text":" "},{"type":"text","text":"equivalent to "},{"type":"codeVoice","code":"append(contentsOf:)"},{"text":".","type":"text"}]}],"name":"Complexity"}]}],"sections":[],"abstract":[{"type":"text","text":"Replaces the specified subrange of elements with the given collection."}],"variants":[{"paths":["\/documentation\/compute\/slice\/replacesubrange(_:with:)-zwfk"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/RangeReplaceableCollection-Implementations"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/replaceSubrange(_:with:)-zwfk"},"metadata":{"extendedModule":"Swift","roleHeading":"Instance Method","externalID":"s:s5SliceVsSmRzrlE15replaceSubrange_4withySny5IndexQzG_qd__tSlRd__7ElementQyd__AHRtzlF","title":"replaceSubrange(_:with:)","modules":[{"name":"Compute","relatedModules":["Swift"]}],"symbolKind":"method","conformance":{"constraints":[{"code":"Base","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"RangeReplaceableCollection"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"replaceSubrange"},{"text":"<","kind":"text"},{"text":"C","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"Range","preciseIdentifier":"s:Sn"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s5SliceV","text":"Slice"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Base"},{"kind":"text","text":">."},{"text":"Index","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"with","kind":"externalParam"},{"kind":"text","text":": "},{"text":"C","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Range":{"kind":"symbol","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Range","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Range","url":"\/documentation\/compute\/range","abstract":[{"text":"A half-open interval from a lower bound up to, but not including, an upper","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"bound."}],"navigatorTitle":[{"text":"Range","kind":"identifier"}],"title":"Range"},"doc://com.swallow.documentation.Compute/documentation/Compute/Slice":{"kind":"symbol","title":"Slice","abstract":[{"type":"text","text":"A view into a subsequence of elements of another collection."}],"url":"\/documentation\/compute\/slice","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Slice","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice","navigatorTitle":[{"text":"Slice","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Collection":{"kind":"symbol","role":"symbol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Collection"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection","url":"\/documentation\/compute\/collection","abstract":[{"type":"text","text":"A sequence whose elements can be traversed multiple times,"},{"text":" ","type":"text"},{"text":"nondestructively, and accessed by an indexed subscript.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Collection"}],"title":"Collection"},"doc://com.swallow.documentation.Compute/documentation/Compute/Slice/replaceSubrange(_:with:)-zwfk":{"kind":"symbol","title":"replaceSubrange(_:with:)","abstract":[{"type":"text","text":"Replaces the specified subrange of elements with the given collection."}],"url":"\/documentation\/compute\/slice\/replacesubrange(_:with:)-zwfk","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"replaceSubrange","kind":"identifier"},{"kind":"text","text":"<"},{"text":"C","kind":"genericParameter"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:Sn","text":"Range","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Slice","preciseIdentifier":"s:s5SliceV"},{"kind":"text","text":"<"},{"text":"Base","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"text":"Index","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"with"},{"text":": ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":")","kind":"text"}],"role":"symbol","conformance":{"constraints":[{"code":"Base","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"RangeReplaceableCollection"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/replaceSubrange(_:with:)-zwfk"},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence/Element":{"type":"topic","required":true,"abstract":[{"type":"text","text":"A type representing the sequence’s elements."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"symbol","url":"\/documentation\/compute\/sequence\/element","role":"symbol","title":"Element","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Slice/RangeReplaceableCollection-Implementations":{"abstract":[],"kind":"article","role":"collectionGroup","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/RangeReplaceableCollection-Implementations","title":"RangeReplaceableCollection Implementations","type":"topic","url":"\/documentation\/compute\/slice\/rangereplaceablecollection-implementations"}}}