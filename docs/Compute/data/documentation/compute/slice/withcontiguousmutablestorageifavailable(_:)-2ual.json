{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/withContiguousMutableStorageIfAvailable(_:)-2ual"},"metadata":{"externalID":"s:s5SliceVsSMRzrlE39withContiguousMutableStorageIfAvailableyqd__Sgqd__Sry7ElementQzGzKXEKlF","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Base"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"MutableCollection"},{"text":".","type":"text"}]},"role":"symbol","modules":[{"name":"Compute","relatedModules":["Swift"]}],"title":"withContiguousMutableStorageIfAvailable(_:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"withContiguousMutableStorageIfAvailable","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"R"},{"text":">((","kind":"text"},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"text":"UnsafeMutableBufferPointer","preciseIdentifier":"s:Sr","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:s5SliceV","text":"Slice","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Base","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">) "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"R"},{"kind":"text","text":") "},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"symbolKind":"method","roleHeading":"Instance Method","extendedModule":"Swift"},"sections":[],"abstract":[{"type":"text","text":"Executes a closure on the collection’s contiguous storage."}],"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/slice\/withcontiguousmutablestorageifavailable(_:)-2ual"]}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/MutableCollection-Implementations"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"mutating","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"withContiguousMutableStorageIfAvailable","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"R"},{"kind":"text","text":">("},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"body","kind":"internalParam"},{"kind":"text","text":": ("},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableBufferPointer","text":"UnsafeMutableBufferPointer","preciseIdentifier":"s:Sr"},{"kind":"text","text":"<"},{"text":"Slice","preciseIdentifier":"s:s5SliceV","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice"},{"kind":"text","text":"<"},{"text":"Base","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":">) ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"R"},{"text":"?","kind":"text"}]}],"kind":"declarations"},{"parameters":[{"name":"body","content":[{"type":"paragraph","inlineContent":[{"text":"A closure that receives an in-out","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"UnsafeMutableBufferPointer"},{"text":" to the collection’s contiguous storage.","type":"text"}]}]}],"kind":"parameters"},{"kind":"content","content":[{"level":2,"text":"Return Value","anchor":"return-value","type":"heading"},{"inlineContent":[{"type":"text","text":"The value returned from "},{"type":"codeVoice","code":"body"},{"text":", unless the collection doesn’t","type":"text"},{"type":"text","text":" "},{"text":"support contiguous storage, in which case the method ignores ","type":"text"},{"type":"codeVoice","code":"body"},{"type":"text","text":" and"},{"text":" ","type":"text"},{"type":"text","text":"returns "},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"}],"type":"paragraph"}]},{"kind":"content","content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"This method calls ","type":"text"},{"code":"body(buffer)","type":"codeVoice"},{"type":"text","text":", where "},{"code":"buffer","type":"codeVoice"},{"text":" provides access to the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"contiguous mutable storage of the entire collection. If the contiguous"},{"type":"text","text":" "},{"text":"storage doesn’t exist, the collection creates it. If the collection","type":"text"},{"text":" ","type":"text"},{"text":"doesn’t support an internal representation in the form of contiguous","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"mutable storage, this method doesn’t call "},{"code":"body","type":"codeVoice"},{"type":"text","text":" — it immediately"},{"type":"text","text":" "},{"text":"returns ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"}]},{"inlineContent":[{"type":"text","text":"The optimizer can often eliminate bounds- and uniqueness-checking"},{"type":"text","text":" "},{"type":"text","text":"within an algorithm. When that fails, however, invoking the same"},{"text":" ","type":"text"},{"text":"algorithm on the ","type":"text"},{"type":"codeVoice","code":"buffer"},{"text":" argument may let you trade safety for speed.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"Always perform any necessary cleanup in the closure, because the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"method makes no guarantees about the state of the collection if the"},{"text":" ","type":"text"},{"type":"text","text":"closure throws an error. Your changes to the collection may be absent"},{"type":"text","text":" "},{"text":"from the collection after throwing the error, because the closure could","type":"text"},{"text":" ","type":"text"},{"text":"receive a temporary copy rather than direct access to the collection’s","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"storage."}]},{"name":"Warning","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Your "},{"type":"codeVoice","code":"body"},{"text":" closure must not replace ","type":"text"},{"type":"codeVoice","code":"buffer"},{"type":"text","text":". This leads"},{"text":" ","type":"text"},{"text":"to a crash in all implementations of this method within the standard","type":"text"},{"type":"text","text":" "},{"type":"text","text":"library."}]}],"style":"warning","type":"aside"},{"type":"paragraph","inlineContent":[{"text":"Successive calls to this method may provide a different pointer on each","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"call. Don’t store "},{"type":"codeVoice","code":"buffer"},{"type":"text","text":" outside of this method."}]},{"inlineContent":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"Collection"},{"text":" that provides its own implementation of this method","type":"text"},{"type":"text","text":" "},{"text":"must provide contiguous storage to its elements in the same order","type":"text"},{"type":"text","text":" "},{"type":"text","text":"as they appear in the collection. This guarantees that it’s possible to"},{"text":" ","type":"text"},{"type":"text","text":"generate contiguous mutable storage to any of its subsequences by slicing"},{"type":"text","text":" "},{"code":"buffer","type":"codeVoice"},{"type":"text","text":" with a range formed from the distances to the subsequence’s"},{"text":" ","type":"text"},{"code":"startIndex","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"endIndex","type":"codeVoice"},{"type":"text","text":", respectively."}],"type":"paragraph"}]}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeMutableBufferPointer":{"kind":"symbol","url":"\/documentation\/compute\/unsafemutablebufferpointer","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"UnsafeMutableBufferPointer","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"UnsafeMutableBufferPointer"}],"abstract":[{"type":"text","text":"A nonowning collection interface to a buffer of mutable"},{"text":" ","type":"text"},{"text":"elements stored contiguously in memory.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableBufferPointer","title":"UnsafeMutableBufferPointer","type":"topic","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Slice/withContiguousMutableStorageIfAvailable(_:)-2ual":{"url":"\/documentation\/compute\/slice\/withcontiguousmutablestorageifavailable(_:)-2ual","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"withContiguousMutableStorageIfAvailable","kind":"identifier"},{"kind":"text","text":"<"},{"text":"R","kind":"genericParameter"},{"kind":"text","text":">(("},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:Sr","text":"UnsafeMutableBufferPointer","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:s5SliceV","kind":"typeIdentifier","text":"Slice"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Base"},{"text":">.","kind":"text"},{"kind":"typeIdentifier","text":"Element"},{"text":">) ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"text":" -> ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"role":"symbol","abstract":[{"text":"Executes a closure on the collection’s contiguous storage.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/withContiguousMutableStorageIfAvailable(_:)-2ual","title":"withContiguousMutableStorageIfAvailable(_:)","type":"topic","kind":"symbol","conformance":{"constraints":[{"code":"Base","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"MutableCollection"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]}},"doc://com.swallow.documentation.Compute/documentation/Compute/Slice/MutableCollection-Implementations":{"abstract":[],"type":"topic","title":"MutableCollection Implementations","role":"collectionGroup","kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/MutableCollection-Implementations","url":"\/documentation\/compute\/slice\/mutablecollection-implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/Slice":{"kind":"symbol","title":"Slice","abstract":[{"type":"text","text":"A view into a subsequence of elements of another collection."}],"url":"\/documentation\/compute\/slice","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Slice","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice","navigatorTitle":[{"text":"Slice","kind":"identifier"}]}}}