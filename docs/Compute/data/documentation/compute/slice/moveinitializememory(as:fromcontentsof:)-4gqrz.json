{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/slice\/moveinitializememory(as:fromcontentsof:)-4gqrz"]}],"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/moveInitializeMemory(as:fromContentsOf:)-4gqrz","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"@discardableResult","kind":"attribute"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"moveInitializeMemory","kind":"identifier"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"as","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"type","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":".Type, "},{"text":"fromContentsOf","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"source"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableBufferPointer","text":"UnsafeMutableBufferPointer","preciseIdentifier":"s:Sr"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">) -> "},{"text":"UnsafeMutableBufferPointer","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableBufferPointer","kind":"typeIdentifier","preciseIdentifier":"s:Sr"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"languages":["swift"],"platforms":["macOS"]}]},{"parameters":[{"name":"type","content":[{"inlineContent":[{"text":"The type of element to which this buffer’s memory will be bound.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"A buffer referencing the values to copy.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"The memory region underlying "},{"code":"source","type":"codeVoice"},{"type":"text","text":" must be initialized."},{"text":" ","type":"text"},{"type":"text","text":"The memory regions referenced by "},{"code":"source","type":"codeVoice"},{"text":" and this slice may overlap.","type":"text"}],"type":"paragraph"}],"name":"source"}],"kind":"parameters"},{"kind":"content","content":[{"anchor":"return-value","level":2,"text":"Return Value","type":"heading"},{"inlineContent":[{"text":"A typed buffer referencing the initialized elements.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"The returned buffer references memory starting at the same"},{"text":" ","type":"text"},{"text":"base address as this slice, and its count is equal to ","type":"text"},{"type":"codeVoice","code":"source.count"},{"text":".","type":"text"}],"type":"paragraph"}]},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"text":"When calling the ","type":"text"},{"type":"codeVoice","code":"moveInitializeMemory(as:fromContentsOf:)"},{"text":" method,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the memory referenced by the buffer slice must be uninitialized,"},{"text":" ","type":"text"},{"text":"or initialized to a trivial type. The buffer slice must reference","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"enough memory to store "},{"type":"codeVoice","code":"source.count"},{"text":" elements, and it must be properly","type":"text"},{"text":" ","type":"text"},{"text":"aligned for accessing ","type":"text"},{"type":"codeVoice","code":"C.Element"},{"type":"text","text":". After the method returns,"},{"text":" ","type":"text"},{"type":"text","text":"the memory referenced by the returned buffer is initialized and the"},{"type":"text","text":" "},{"type":"text","text":"memory region underlying "},{"type":"codeVoice","code":"source"},{"text":" is uninitialized.","type":"text"}]},{"inlineContent":[{"type":"text","text":"This method initializes the buffer slice with the contents of "},{"type":"codeVoice","code":"source"},{"text":" ","type":"text"},{"text":"until ","type":"text"},{"type":"codeVoice","code":"source"},{"type":"text","text":" is exhausted."},{"type":"text","text":" "},{"type":"text","text":"After calling "},{"type":"codeVoice","code":"initializeMemory(as:fromContentsOf:)"},{"type":"text","text":", the memory"},{"text":" ","type":"text"},{"type":"text","text":"referenced by the returned "},{"type":"codeVoice","code":"UnsafeMutableBufferPointer"},{"text":" instance is bound","type":"text"},{"type":"text","text":" "},{"text":"to the type of ","type":"text"},{"code":"T","type":"codeVoice"},{"type":"text","text":" and is initialized. This method does not change"},{"text":" ","type":"text"},{"type":"text","text":"the binding state of the unused portion of the buffer slice, if any."}],"type":"paragraph"}]}],"kind":"symbol","schemaVersion":{"minor":3,"major":0,"patch":0},"sections":[],"abstract":[{"type":"text","text":"Moves every element of an initialized source buffer into the"},{"text":" ","type":"text"},{"text":"uninitialized memory referenced by this buffer slice, leaving","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the source memory uninitialized and this slice’s memory initialized."}],"metadata":{"title":"moveInitializeMemory(as:fromContentsOf:)","role":"symbol","symbolKind":"method","modules":[{"name":"Compute","relatedModules":["Swift"]}],"roleHeading":"Instance Method","extendedModule":"Swift","externalID":"s:s5SliceVsSwRszrlE20moveInitializeMemory2as14fromContentsOfSryqd__Gqd__m_AFtlF","conformance":{"constraints":[{"type":"codeVoice","code":"Base"},{"type":"text","text":" is "},{"type":"codeVoice","code":"UnsafeMutableRawBufferPointer"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"moveInitializeMemory"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"as"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":".Type, ","kind":"text"},{"text":"fromContentsOf","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sr","text":"UnsafeMutableBufferPointer"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":">) -> ","kind":"text"},{"text":"UnsafeMutableBufferPointer","preciseIdentifier":"s:Sr","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":">"}]},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Slice/moveInitializeMemory(as:fromContentsOf:)-4gqrz":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"moveInitializeMemory"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"as","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":".Type, ","kind":"text"},{"text":"fromContentsOf","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sr","text":"UnsafeMutableBufferPointer"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sr","text":"UnsafeMutableBufferPointer"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"title":"moveInitializeMemory(as:fromContentsOf:)","conformance":{"constraints":[{"type":"codeVoice","code":"Base"},{"type":"text","text":" is "},{"type":"codeVoice","code":"UnsafeMutableRawBufferPointer"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/moveInitializeMemory(as:fromContentsOf:)-4gqrz","kind":"symbol","url":"\/documentation\/compute\/slice\/moveinitializememory(as:fromcontentsof:)-4gqrz","type":"topic","abstract":[{"text":"Moves every element of an initialized source buffer into the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"uninitialized memory referenced by this buffer slice, leaving"},{"text":" ","type":"text"},{"type":"text","text":"the source memory uninitialized and this slice’s memory initialized."}],"role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Slice":{"kind":"symbol","title":"Slice","abstract":[{"type":"text","text":"A view into a subsequence of elements of another collection."}],"url":"\/documentation\/compute\/slice","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Slice","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice","navigatorTitle":[{"text":"Slice","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeMutableBufferPointer":{"kind":"symbol","url":"\/documentation\/compute\/unsafemutablebufferpointer","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"UnsafeMutableBufferPointer","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"UnsafeMutableBufferPointer"}],"abstract":[{"type":"text","text":"A nonowning collection interface to a buffer of mutable"},{"text":" ","type":"text"},{"text":"elements stored contiguously in memory.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableBufferPointer","title":"UnsafeMutableBufferPointer","type":"topic","role":"symbol"}}}