{"sections":[],"schemaVersion":{"major":0,"patch":0,"minor":3},"metadata":{"role":"symbol","modules":[{"relatedModules":["Swift"],"name":"Compute"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Base"},{"type":"text","text":" conforms to "},{"code":"Collection","type":"codeVoice"},{"text":".","type":"text"}]},"extendedModule":"Swift","externalID":"s:s5SliceV17withMemoryRebound2to_qd_0_qd__m_qd_0_SRyqd__GKXEtKSRyqd_1_GRszr1_lF","title":"withMemoryRebound(to:_:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"withMemoryRebound","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"Result"},{"text":", ","kind":"text"},{"text":"Element","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"to","kind":"externalParam"},{"kind":"text","text":": "},{"text":"T","kind":"typeIdentifier"},{"text":".Type, (","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SR","text":"UnsafeBufferPointer"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">) ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"Result","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Result","kind":"typeIdentifier"}],"symbolKind":"method"},"abstract":[{"text":"Executes the given closure while temporarily binding the memory referenced","type":"text"},{"type":"text","text":" "},{"text":"by this buffer slice to the given type.","type":"text"}],"variants":[{"paths":["\/documentation\/compute\/slice\/withmemoryrebound(to:_:)-6nviy"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"withMemoryRebound"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"Result"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Element"},{"kind":"text","text":">("},{"kind":"externalParam","text":"to"},{"kind":"text","text":" "},{"text":"type","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":".Type, "},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"text":"body","kind":"internalParam"},{"kind":"text","text":": ("},{"preciseIdentifier":"s:SR","text":"UnsafeBufferPointer","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeBufferPointer"},{"kind":"text","text":"<"},{"text":"T","kind":"typeIdentifier"},{"text":">) ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Result"},{"text":") ","kind":"text"},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Result"},{"text":" ","kind":"text"},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"text":"Base","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeBufferPointer","text":"UnsafeBufferPointer","preciseIdentifier":"s:SR"},{"text":"<","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":">","kind":"text"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"type","content":[{"type":"paragraph","inlineContent":[{"text":"The type to temporarily bind the memory referenced by this","type":"text"},{"type":"text","text":" "},{"text":"buffer slice. The type ","type":"text"},{"code":"T","type":"codeVoice"},{"text":" must be layout compatible","type":"text"},{"type":"text","text":" "},{"type":"text","text":"with the pointer’s "},{"code":"Element","type":"codeVoice"},{"type":"text","text":" type."}]}]},{"content":[{"inlineContent":[{"text":"A closure that takes a typed buffer to the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"same memory as this buffer slice, only bound to type "},{"type":"codeVoice","code":"T"},{"type":"text","text":". The buffer"},{"text":" ","type":"text"},{"text":"parameter contains a number of complete instances of ","type":"text"},{"code":"T","type":"codeVoice"},{"text":" based","type":"text"},{"text":" ","type":"text"},{"text":"on the capacity of the original buffer and the stride of ","type":"text"},{"code":"Element","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"The closure’s buffer argument is valid only for the duration of the"},{"type":"text","text":" "},{"text":"closure’s execution. If ","type":"text"},{"type":"codeVoice","code":"body"},{"type":"text","text":" has a return value, that value"},{"type":"text","text":" "},{"text":"is also used as the return value for the ","type":"text"},{"type":"codeVoice","code":"withMemoryRebound(to:_:)"},{"type":"text","text":" "},{"text":"method.","type":"text"}],"type":"paragraph"}],"name":"body"}]},{"kind":"content","content":[{"text":"Return Value","type":"heading","anchor":"return-value","level":2},{"type":"paragraph","inlineContent":[{"text":"The return value, if any, of the ","type":"text"},{"code":"body","type":"codeVoice"},{"type":"text","text":" closure parameter."}]}]},{"content":[{"anchor":"discussion","type":"heading","level":2,"text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Use this method when you have a buffer slice of memory bound to one type"},{"text":" ","type":"text"},{"type":"text","text":"and you need to access that memory as a buffer of another type. Accessing"},{"text":" ","type":"text"},{"type":"text","text":"memory as type "},{"code":"T","type":"codeVoice"},{"type":"text","text":" requires that the memory be bound to that type. A"},{"type":"text","text":" "},{"type":"text","text":"memory location may only be bound to one type at a time, so accessing"},{"text":" ","type":"text"},{"type":"text","text":"the same memory as an unrelated type without first rebinding the memory"},{"type":"text","text":" "},{"type":"text","text":"is undefined."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The number of instances of "},{"code":"T","type":"codeVoice"},{"text":" referenced by the rebound buffer may be","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"different than the number of instances of "},{"type":"codeVoice","code":"Element"},{"text":" referenced by the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"original buffer slice. The number of instances of "},{"code":"T","type":"codeVoice"},{"text":" will be calculated","type":"text"},{"text":" ","type":"text"},{"text":"at runtime.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"Any instance of ","type":"text"},{"code":"T","type":"codeVoice"},{"type":"text","text":" within the re-bound region may be initialized or"},{"text":" ","type":"text"},{"text":"uninitialized. Every instance of ","type":"text"},{"type":"codeVoice","code":"Pointee"},{"text":" overlapping with a given","type":"text"},{"type":"text","text":" "},{"text":"instance of ","type":"text"},{"code":"T","type":"codeVoice"},{"text":" should have the same initialization state (i.e.","type":"text"},{"text":" ","type":"text"},{"text":"initialized or uninitialized.) Accessing a ","type":"text"},{"type":"codeVoice","code":"T"},{"text":" whose underlying","type":"text"},{"type":"text","text":" "},{"code":"Pointee","type":"codeVoice"},{"text":" storage is in a mixed initialization state shall be","type":"text"},{"text":" ","type":"text"},{"text":"undefined behaviour.","type":"text"}]},{"inlineContent":[{"text":"Because this range of memory is no longer bound to its ","type":"text"},{"code":"Element","type":"codeVoice"},{"text":" type","type":"text"},{"type":"text","text":" "},{"type":"text","text":"while the "},{"type":"codeVoice","code":"body"},{"type":"text","text":" closure executes, do not access memory using the"},{"text":" ","type":"text"},{"type":"text","text":"original buffer slice from within "},{"code":"body","type":"codeVoice"},{"text":". Instead,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"use the "},{"type":"codeVoice","code":"body"},{"text":" closure’s buffer argument to access the values","type":"text"},{"type":"text","text":" "},{"type":"text","text":"in memory as instances of type "},{"code":"T","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"After executing ","type":"text"},{"code":"body","type":"codeVoice"},{"type":"text","text":", this method rebinds memory back to the original"},{"text":" ","type":"text"},{"type":"codeVoice","code":"Element"},{"type":"text","text":" type."}]},{"type":"aside","style":"note","content":[{"type":"paragraph","inlineContent":[{"text":"Only use this method to rebind the buffer slice’s memory to a type","type":"text"},{"text":" ","type":"text"},{"text":"that is layout compatible with the currently bound ","type":"text"},{"code":"Element","type":"codeVoice"},{"text":" type.","type":"text"},{"type":"text","text":" "},{"text":"The stride of the temporary type (","type":"text"},{"type":"codeVoice","code":"T"},{"type":"text","text":") may be an integer multiple"},{"type":"text","text":" "},{"text":"or a whole fraction of ","type":"text"},{"code":"Element","type":"codeVoice"},{"type":"text","text":"’s stride."},{"text":" ","type":"text"},{"text":"To bind a region of memory to a type that does not match these","type":"text"},{"text":" ","type":"text"},{"text":"requirements, convert the buffer to a raw buffer and use the","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"withMemoryRebound(to:)"},{"text":" method on the raw buffer.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"If "},{"code":"T","type":"codeVoice"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Element"},{"type":"text","text":" have different alignments, this buffer slice"},{"text":" ","type":"text"},{"text":"must be aligned with the larger of the two alignments.","type":"text"}]}],"name":"Note"}],"kind":"content"}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice"]]},"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/withMemoryRebound(to:_:)-6nviy","interfaceLanguage":"swift"},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Slice":{"kind":"symbol","title":"Slice","abstract":[{"type":"text","text":"A view into a subsequence of elements of another collection."}],"url":"\/documentation\/compute\/slice","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Slice","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice","navigatorTitle":[{"text":"Slice","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeBufferPointer":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeBufferPointer","abstract":[{"type":"text","text":"A nonowning collection interface to a buffer of"},{"type":"text","text":" "},{"text":"elements stored contiguously in memory.","type":"text"}],"role":"symbol","type":"topic","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UnsafeBufferPointer","kind":"identifier"}],"title":"UnsafeBufferPointer","navigatorTitle":[{"kind":"identifier","text":"UnsafeBufferPointer"}],"url":"\/documentation\/compute\/unsafebufferpointer"},"doc://com.swallow.documentation.Compute/documentation/Compute/Slice/withMemoryRebound(to:_:)-6nviy":{"url":"\/documentation\/compute\/slice\/withmemoryrebound(to:_:)-6nviy","title":"withMemoryRebound(to:_:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"withMemoryRebound","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Result"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Element"},{"text":">(","kind":"text"},{"text":"to","kind":"externalParam"},{"kind":"text","text":": "},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":".Type, ("},{"text":"UnsafeBufferPointer","kind":"typeIdentifier","preciseIdentifier":"s:SR"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">) ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Result","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"rethrows","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Result","kind":"typeIdentifier"}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Base"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Collection"},{"type":"text","text":"."}]},"type":"topic","role":"symbol","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/withMemoryRebound(to:_:)-6nviy","abstract":[{"type":"text","text":"Executes the given closure while temporarily binding the memory referenced"},{"type":"text","text":" "},{"text":"by this buffer slice to the given type.","type":"text"}]}}}