{"abstract":[{"text":"Reorders the elements of the collection such that all the elements","type":"text"},{"type":"text","text":" "},{"text":"that match the given predicate are after all the elements that don’t","type":"text"},{"type":"text","text":" "},{"text":"match.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/slice\/partition(by:)-7n9yj"]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"roleHeading":"Instance Method","role":"symbol","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"BidirectionalCollection"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"modules":[{"name":"Compute","relatedModules":["Swift"]}],"symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"partition","kind":"identifier"},{"text":"(","kind":"text"},{"text":"by","kind":"externalParam"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":") ","kind":"text"},{"kind":"keyword","text":"rethrows"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:Sl5IndexQa","text":"Index","kind":"typeIdentifier"}],"externalID":"s:SMsSKRzrlE9partition2by5IndexSlQzSb7ElementSTQzKXE_tKF::SYNTHESIZED::s:s5SliceV","title":"partition(by:)","extendedModule":"Swift"},"kind":"symbol","primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"text":"mutating","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"partition","kind":"identifier"},{"text":"(","kind":"text"},{"text":"by","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"belongsInSecondPartition","kind":"internalParam"},{"kind":"text","text":": ("},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Element","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","preciseIdentifier":"s:ST7ElementQa"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") "},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/Index","kind":"typeIdentifier","text":"Index","preciseIdentifier":"s:Sl5IndexQa"}],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"content":[{"inlineContent":[{"type":"text","text":"A predicate used to partition"},{"text":" ","type":"text"},{"type":"text","text":"the collection. All elements satisfying this predicate are ordered"},{"text":" ","type":"text"},{"type":"text","text":"after all elements not satisfying it."}],"type":"paragraph"}],"name":"belongsInSecondPartition"}],"kind":"parameters"},{"kind":"content","content":[{"level":2,"type":"heading","anchor":"return-value","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The index of the first element in the reordered collection"},{"type":"text","text":" "},{"text":"that matches ","type":"text"},{"code":"belongsInSecondPartition","type":"codeVoice"},{"type":"text","text":". If no elements in the"},{"type":"text","text":" "},{"text":"collection match ","type":"text"},{"type":"codeVoice","code":"belongsInSecondPartition"},{"type":"text","text":", the returned index is"},{"type":"text","text":" "},{"type":"text","text":"equal to the collection’s "},{"type":"codeVoice","code":"endIndex"},{"text":".","type":"text"}]}]},{"kind":"content","content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"After partitioning a collection, there is a pivot index "},{"type":"codeVoice","code":"p"},{"text":" where","type":"text"},{"text":" ","type":"text"},{"text":"no element before ","type":"text"},{"code":"p","type":"codeVoice"},{"text":" satisfies the ","type":"text"},{"type":"codeVoice","code":"belongsInSecondPartition"},{"text":" ","type":"text"},{"type":"text","text":"predicate and every element at or after "},{"code":"p","type":"codeVoice"},{"text":" satisfies","type":"text"},{"text":" ","type":"text"},{"code":"belongsInSecondPartition","type":"codeVoice"},{"type":"text","text":". This operation isn’t guaranteed to be"},{"text":" ","type":"text"},{"text":"stable, so the relative ordering of elements within the partitions might","type":"text"},{"text":" ","type":"text"},{"text":"change.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"In the following example, an array of numbers is partitioned by a"},{"text":" ","type":"text"},{"text":"predicate that matches elements greater than 30.","type":"text"}]},{"syntax":null,"type":"codeListing","code":["var numbers = [30, 40, 20, 30, 30, 60, 10]","let p = numbers.partition(by: { $0 > 30 })","\/\/ p == 5","\/\/ numbers == [30, 10, 20, 30, 30, 60, 40]"]},{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"code":"numbers","type":"codeVoice"},{"type":"text","text":" array is now arranged in two partitions. The first"},{"type":"text","text":" "},{"text":"partition, ","type":"text"},{"code":"numbers[..<p]","type":"codeVoice"},{"text":", is made up of the elements that","type":"text"},{"type":"text","text":" "},{"type":"text","text":"are not greater than 30. The second partition, "},{"type":"codeVoice","code":"numbers[p...]"},{"text":",","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"is made up of the elements that "},{"inlineContent":[{"type":"text","text":"are"}],"type":"emphasis"},{"text":" greater than 30.","type":"text"}]},{"code":["let first = numbers[..<p]","\/\/ first == [30, 10, 20, 30, 30]","let second = numbers[p...]","\/\/ second == [60, 40]"],"type":"codeListing","syntax":null},{"type":"paragraph","inlineContent":[{"text":"Note that the order of elements in both partitions changed.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"That is, "},{"code":"40","type":"codeVoice"},{"type":"text","text":" appears before "},{"code":"60","type":"codeVoice"},{"type":"text","text":" in the original collection,"},{"type":"text","text":" "},{"type":"text","text":"but, after calling "},{"code":"partition(by:)","type":"codeVoice"},{"text":", ","type":"text"},{"type":"codeVoice","code":"60"},{"type":"text","text":" appears before "},{"type":"codeVoice","code":"40"},{"type":"text","text":"."}]},{"style":"note","type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"O(","type":"text"},{"inlineContent":[{"text":"n","type":"text"}],"type":"emphasis"},{"type":"text","text":"), where "},{"type":"emphasis","inlineContent":[{"type":"text","text":"n"}]},{"text":" is the length of the collection.","type":"text"}]}],"name":"Complexity"}]}],"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/partition(by:)-7n9yj","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/MutableCollection-Implementations"]]},"sections":[],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Slice/partition(by:)-7n9yj":{"role":"symbol","title":"partition(by:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"partition","kind":"identifier"},{"text":"(","kind":"text"},{"text":"by","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:Sl5IndexQa","text":"Index","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/partition(by:)-7n9yj","conformance":{"constraints":[{"code":"Self","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"BidirectionalCollection","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"url":"\/documentation\/compute\/slice\/partition(by:)-7n9yj","type":"topic","kind":"symbol","abstract":[{"text":"Reorders the elements of the collection such that all the elements","type":"text"},{"text":" ","type":"text"},{"text":"that match the given predicate are after all the elements that don’t","type":"text"},{"type":"text","text":" "},{"type":"text","text":"match."}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Collection/Index":{"url":"\/documentation\/compute\/collection\/index","required":true,"role":"symbol","title":"Index","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Index","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"Comparable","preciseIdentifier":"s:SL","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"A type that represents a position in the collection."}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/Index","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence/Element":{"type":"topic","required":true,"abstract":[{"type":"text","text":"A type representing the sequence’s elements."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"symbol","url":"\/documentation\/compute\/sequence\/element","role":"symbol","title":"Element","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Slice":{"kind":"symbol","title":"Slice","abstract":[{"type":"text","text":"A view into a subsequence of elements of another collection."}],"url":"\/documentation\/compute\/slice","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Slice","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice","navigatorTitle":[{"text":"Slice","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Slice/MutableCollection-Implementations":{"abstract":[],"type":"topic","title":"MutableCollection Implementations","role":"collectionGroup","kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice\/MutableCollection-Implementations","url":"\/documentation\/compute\/slice\/mutablecollection-implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/Bool":{"url":"\/documentation\/compute\/bool","role":"symbol","title":"Bool","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Bool","kind":"identifier"}],"abstract":[{"type":"text","text":"A value type whose instances are either "},{"type":"codeVoice","code":"true"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"false"},{"text":".","type":"text"}],"navigatorTitle":[{"text":"Bool","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bool","kind":"symbol"}}}