{"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/PrefixSequence\/joined(separator:)-1qaxa","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/PrefixSequence","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/PrefixSequence\/Sequence-Implementations"]]},"sections":[],"metadata":{"externalID":"s:STsSy7ElementRpzrlE6joined9separatorS2S_tF::SYNTHESIZED::s:s14PrefixSequenceV","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"joined","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"separator"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":") -> "},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"}],"title":"joined(separator:)","symbolKind":"method","modules":[{"name":"Compute","relatedModules":["Swift"]}],"conformance":{"constraints":[{"code":"Element","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"StringProtocol"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"extendedModule":"Swift","roleHeading":"Instance Method","role":"symbol"},"abstract":[{"text":"Returns a new string by concatenating the elements of the sequence,","type":"text"},{"type":"text","text":" "},{"text":"adding the given separator between each element.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/prefixsequence\/joined(separator:)-1qaxa"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"joined"},{"kind":"text","text":"("},{"kind":"externalParam","text":"separator"},{"kind":"text","text":": "},{"text":"String","preciseIdentifier":"s:SS","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String","kind":"typeIdentifier"},{"text":" = \"\") -> ","kind":"text"},{"text":"String","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}],"platforms":["macOS"],"languages":["swift"]}]},{"parameters":[{"name":"separator","content":[{"inlineContent":[{"type":"text","text":"A string to insert between each of the elements"},{"text":" ","type":"text"},{"type":"text","text":"in this sequence. The default separator is an empty string."}],"type":"paragraph"}]}],"kind":"parameters"},{"content":[{"type":"heading","level":2,"anchor":"return-value","text":"Return Value"},{"inlineContent":[{"type":"text","text":"A single, concatenated string."}],"type":"paragraph"}],"kind":"content"},{"content":[{"level":2,"type":"heading","text":"Discussion","anchor":"discussion"},{"inlineContent":[{"text":"The following example shows how an array of strings can be joined to a","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"single, comma-separated string:"}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":["let cast = [\"Vivien\", \"Marlon\", \"Kim\", \"Karl\"]","let list = cast.joined(separator: \", \")","print(list)","\/\/ Prints \"Vivien, Marlon, Kim, Karl\""]}],"kind":"content"}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/PrefixSequence/joined(separator:)-1qaxa":{"role":"symbol","title":"joined(separator:)","abstract":[{"text":"Returns a new string by concatenating the elements of the sequence,","type":"text"},{"type":"text","text":" "},{"text":"adding the given separator between each element.","type":"text"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"joined","kind":"identifier"},{"kind":"text","text":"("},{"text":"separator","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/PrefixSequence\/joined(separator:)-1qaxa","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Element"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"StringProtocol"},{"type":"text","text":"."}]},"type":"topic","url":"\/documentation\/compute\/prefixsequence\/joined(separator:)-1qaxa"},"doc://com.swallow.documentation.Compute/documentation/Compute/PrefixSequence/Sequence-Implementations":{"url":"\/documentation\/compute\/prefixsequence\/sequence-implementations","kind":"article","type":"topic","role":"collectionGroup","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/PrefixSequence\/Sequence-Implementations","title":"Sequence Implementations","abstract":[]},"doc://com.swallow.documentation.Compute/documentation/Compute/PrefixSequence":{"url":"\/documentation\/compute\/prefixsequence","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/PrefixSequence","role":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PrefixSequence","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"PrefixSequence"}],"title":"PrefixSequence","abstract":[{"type":"text","text":"A sequence that only consumes up to "},{"type":"codeVoice","code":"n"},{"type":"text","text":" elements from an underlying"},{"text":" ","type":"text"},{"type":"codeVoice","code":"Base"},{"text":" iterator.","type":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/String":{"type":"topic","navigatorTitle":[{"kind":"identifier","text":"String"}],"title":"String","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"String","kind":"identifier"}],"abstract":[{"type":"text","text":"A Unicode string value that is a collection of characters."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String","kind":"symbol","role":"symbol","url":"\/documentation\/compute\/string"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"}}}