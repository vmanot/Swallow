{"sections":[],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"mutating","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"exhaust"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"N"},{"kind":"text","text":">("},{"text":"count","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"N","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Element","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/IteratorProtocol\/Element","preciseIdentifier":"s:St7ElementQa"},{"kind":"text","text":"? "},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"N"},{"kind":"text","text":" : "},{"text":"Numeric","preciseIdentifier":"s:Sj","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Numeric","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"N"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Strideable","kind":"typeIdentifier","text":"Strideable","preciseIdentifier":"s:Sx"},{"text":", ","kind":"text"},{"text":"N","kind":"typeIdentifier"},{"kind":"text","text":"."},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Strideable\/Stride","kind":"typeIdentifier","preciseIdentifier":"s:Sx6StrideQa","text":"Stride"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SignedInteger","preciseIdentifier":"s:SZ","text":"SignedInteger"}]}],"kind":"declarations"}],"metadata":{"role":"symbol","externalID":"s:St7SwallowE7exhaust5count7ElementQzSgqd___tSjRd__SxRd__SZ6StrideSxRpd__lF::SYNTHESIZED::s:s12Zip2SequenceV8IteratorV","extendedModule":"Swift","symbolKind":"method","roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"exhaust","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"N"},{"kind":"text","text":">("},{"text":"count","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"N"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:St7ElementQa"},{"text":"?","kind":"text"}],"modules":[{"relatedModules":["Swift"],"name":"Compute"}],"title":"exhaust(count:)"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Zip2Sequence","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Zip2Sequence\/Sequence-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Zip2Sequence\/Iterator","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Zip2Sequence\/Iterator\/IteratorProtocol-Implementations"]]},"abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"IteratorProtocol.exhaust(count:)"},{"type":"text","text":"."}],"schemaVersion":{"patch":0,"minor":3,"major":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Zip2Sequence\/Iterator\/exhaust(count:)"},"variants":[{"paths":["\/documentation\/compute\/zip2sequence\/iterator\/exhaust(count:)"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Zip2Sequence/Iterator/exhaust(count:)":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"exhaust"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"N"},{"text":">(","kind":"text"},{"text":"count","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"N"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:St7ElementQa"},{"text":"?","kind":"text"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Zip2Sequence\/Iterator\/exhaust(count:)","abstract":[],"url":"\/documentation\/compute\/zip2sequence\/iterator\/exhaust(count:)","title":"exhaust(count:)","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/Strideable":{"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/compute\/strideable","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Strideable","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Strideable"}],"navigatorTitle":[{"text":"Strideable","kind":"identifier"}],"abstract":[{"type":"text","text":"A type representing continuous, one-dimensional values that can be offset"},{"type":"text","text":" "},{"type":"text","text":"and measured."}],"title":"Strideable"},"doc://com.swallow.documentation.Compute/documentation/Compute/Numeric":{"abstract":[{"type":"text","text":"A type with values that support multiplication."}],"kind":"symbol","url":"\/documentation\/compute\/numeric","navigatorTitle":[{"text":"Numeric","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Numeric","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Numeric"}],"title":"Numeric"},"doc://com.swallow.documentation.Compute/documentation/Compute/Zip2Sequence/Sequence-Implementations":{"kind":"article","type":"topic","role":"collectionGroup","title":"Sequence Implementations","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Zip2Sequence\/Sequence-Implementations","url":"\/documentation\/compute\/zip2sequence\/sequence-implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/Zip2Sequence/Iterator/IteratorProtocol-Implementations":{"url":"\/documentation\/compute\/zip2sequence\/iterator\/iteratorprotocol-implementations","title":"IteratorProtocol Implementations","kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Zip2Sequence\/Iterator\/IteratorProtocol-Implementations","role":"collectionGroup","type":"topic","abstract":[]},"doc://com.swallow.documentation.Compute/documentation/Compute/Strideable/Stride":{"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/compute\/strideable\/stride","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Strideable\/Stride","required":true,"fragments":[{"kind":"keyword","text":"associatedtype"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Stride"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SL","text":"Comparable"},{"text":", ","kind":"text"},{"text":"SignedNumeric","kind":"typeIdentifier","preciseIdentifier":"s:s13SignedNumericP"}],"abstract":[{"type":"text","text":"A type that represents the distance between two values."}],"title":"Stride"},"doc://com.swallow.documentation.Compute/documentation/Compute/SignedInteger":{"abstract":[{"type":"text","text":"An integer type that can represent both positive and negative values."}],"kind":"symbol","url":"\/documentation\/compute\/signedinteger","navigatorTitle":[{"kind":"identifier","text":"SignedInteger"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SignedInteger","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"SignedInteger","kind":"identifier"}],"title":"SignedInteger"},"doc://com.swallow.documentation.Compute/documentation/Compute/Zip2Sequence":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Zip2Sequence","kind":"identifier"}],"url":"\/documentation\/compute\/zip2sequence","type":"topic","title":"Zip2Sequence","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"Zip2Sequence","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Zip2Sequence","abstract":[{"type":"text","text":"A sequence of pairs built out of two underlying sequences."}]},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Zip2Sequence/Iterator":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Zip2Sequence\/Iterator","abstract":[{"text":"An iterator for ","type":"text"},{"code":"Zip2Sequence","type":"codeVoice"},{"text":".","type":"text"}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Sequence1"},{"text":" conforms to ","type":"text"},{"code":"Sequence","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Sequence2"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Sequence"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"title":"Zip2Sequence.Iterator","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Iterator","kind":"identifier"}],"url":"\/documentation\/compute\/zip2sequence\/iterator","navigatorTitle":[{"kind":"identifier","text":"Iterator"}],"role":"symbol","kind":"symbol","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/IteratorProtocol/Element":{"fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"text":"Element","kind":"identifier"}],"type":"topic","url":"\/documentation\/compute\/iteratorprotocol\/element","abstract":[{"text":"The type of element traversed by the iterator.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/IteratorProtocol\/Element","title":"Element","kind":"symbol","required":true,"role":"symbol"}}}