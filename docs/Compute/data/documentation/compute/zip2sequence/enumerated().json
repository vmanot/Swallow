{"schemaVersion":{"patch":0,"major":0,"minor":3},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/zip2sequence\/enumerated()"]}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Zip2Sequence","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Zip2Sequence\/Sequence-Implementations"]]},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"enumerated","kind":"identifier"},{"kind":"text","text":"() -> "},{"text":"EnumeratedSequence","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/EnumeratedSequence","preciseIdentifier":"s:s18EnumeratedSequenceV","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"content","content":[{"level":2,"text":"Return Value","type":"heading","anchor":"return-value"},{"inlineContent":[{"text":"A sequence of pairs enumerating the sequence.","type":"text"}],"type":"paragraph"}]},{"content":[{"level":2,"text":"Discussion","type":"heading","anchor":"discussion"},{"inlineContent":[{"text":"This example enumerates the characters of the string “Swift” and prints","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"each character along with its place in the string."}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":["for (n, c) in \"Swift\".enumerated() {","    print(\"\\(n): '\\(c)'\")","}","\/\/ Prints \"0: 'S'\"","\/\/ Prints \"1: 'w'\"","\/\/ Prints \"2: 'i'\"","\/\/ Prints \"3: 'f'\"","\/\/ Prints \"4: 't'\""]},{"inlineContent":[{"text":"When you enumerate a collection, the integer part of each pair is a counter","type":"text"},{"type":"text","text":" "},{"text":"for the enumeration, but is not necessarily the index of the paired value.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"These counters can be used as indices only in instances of zero-based,"},{"type":"text","text":" "},{"type":"text","text":"integer-indexed collections, such as "},{"type":"codeVoice","code":"Array"},{"type":"text","text":" and "},{"code":"ContiguousArray","type":"codeVoice"},{"text":". For","type":"text"},{"type":"text","text":" "},{"text":"other collections the counters may be out of range or of the wrong type","type":"text"},{"type":"text","text":" "},{"text":"to use as an index. To iterate over the elements of a collection with its","type":"text"},{"type":"text","text":" "},{"text":"indices, use the ","type":"text"},{"code":"zip(_:_:)","type":"codeVoice"},{"type":"text","text":" function."}],"type":"paragraph"},{"inlineContent":[{"text":"This example iterates over the indices and elements of a set, building a","type":"text"},{"type":"text","text":" "},{"type":"text","text":"list consisting of indices of names with five or fewer letters."}],"type":"paragraph"},{"syntax":null,"code":["let names: Set = [\"Sofia\", \"Camilla\", \"Martina\", \"Mateo\", \"Nicolás\"]","var shorterIndices: [Set<String>.Index] = []","for (i, name) in zip(names.indices, names) {","    if name.count <= 5 {","        shorterIndices.append(i)","    }","}"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"Now that the ","type":"text"},{"type":"codeVoice","code":"shorterIndices"},{"text":" array holds the indices of the shorter","type":"text"},{"type":"text","text":" "},{"type":"text","text":"names in the "},{"code":"names","type":"codeVoice"},{"text":" set, you can use those indices to access elements in","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the set."}]},{"code":["for i in shorterIndices {","    print(names[i])","}","\/\/ Prints \"Sofia\"","\/\/ Prints \"Mateo\""],"syntax":null,"type":"codeListing"},{"style":"note","name":"Complexity","content":[{"type":"paragraph","inlineContent":[{"text":"O(1)","type":"text"}]}],"type":"aside"}],"kind":"content"}],"abstract":[{"type":"text","text":"Returns a sequence of pairs ("},{"type":"emphasis","inlineContent":[{"type":"text","text":"n"}]},{"text":", ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"x","type":"text"}]},{"type":"text","text":"), where "},{"inlineContent":[{"type":"text","text":"n"}],"type":"emphasis"},{"text":" represents a","type":"text"},{"type":"text","text":" "},{"type":"text","text":"consecutive integer starting at zero and "},{"inlineContent":[{"text":"x","type":"text"}],"type":"emphasis"},{"text":" represents an element of","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the sequence."}],"sections":[],"metadata":{"title":"enumerated()","externalID":"s:STsE10enumerateds18EnumeratedSequenceVyxGyF::SYNTHESIZED::s:s12Zip2SequenceV","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"enumerated","kind":"identifier"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s18EnumeratedSequenceV","text":"EnumeratedSequence"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}],"symbolKind":"method","role":"symbol","modules":[{"relatedModules":["Swift"],"name":"Compute"}],"roleHeading":"Instance Method","extendedModule":"Swift"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Zip2Sequence\/enumerated()"},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/EnumeratedSequence":{"url":"\/documentation\/compute\/enumeratedsequence","navigatorTitle":[{"text":"EnumeratedSequence","kind":"identifier"}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"EnumeratedSequence"}],"abstract":[{"text":"An enumeration of the elements of a sequence or collection.","type":"text"}],"type":"topic","title":"EnumeratedSequence","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/EnumeratedSequence"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Zip2Sequence":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Zip2Sequence","kind":"identifier"}],"url":"\/documentation\/compute\/zip2sequence","type":"topic","title":"Zip2Sequence","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"Zip2Sequence","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Zip2Sequence","abstract":[{"type":"text","text":"A sequence of pairs built out of two underlying sequences."}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Zip2Sequence/enumerated()":{"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Zip2Sequence\/enumerated()","title":"enumerated()","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"enumerated","kind":"identifier"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:s18EnumeratedSequenceV","text":"EnumeratedSequence","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"url":"\/documentation\/compute\/zip2sequence\/enumerated()","abstract":[{"type":"text","text":"Returns a sequence of pairs ("},{"inlineContent":[{"type":"text","text":"n"}],"type":"emphasis"},{"text":", ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"x"}]},{"type":"text","text":"), where "},{"inlineContent":[{"type":"text","text":"n"}],"type":"emphasis"},{"text":" represents a","type":"text"},{"text":" ","type":"text"},{"text":"consecutive integer starting at zero and ","type":"text"},{"inlineContent":[{"type":"text","text":"x"}],"type":"emphasis"},{"type":"text","text":" represents an element of"},{"type":"text","text":" "},{"text":"the sequence.","type":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Zip2Sequence/Sequence-Implementations":{"kind":"article","type":"topic","role":"collectionGroup","title":"Sequence Implementations","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Zip2Sequence\/Sequence-Implementations","url":"\/documentation\/compute\/zip2sequence\/sequence-implementations"}}}