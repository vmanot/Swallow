{"kind":"symbol","sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Zip2Sequence\/underestimatedCount"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"underestimatedCount","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":" { "},{"text":"get","kind":"keyword"},{"text":" }","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"content","content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"The default implementation returns 0. If you provide your own","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"implementation, make sure to compute the value nondestructively."}]},{"type":"aside","content":[{"inlineContent":[{"text":"O(1), except if the sequence also conforms to ","type":"text"},{"type":"codeVoice","code":"Collection"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"In this case, see the documentation of "},{"code":"Collection.underestimatedCount","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}],"style":"note","name":"Complexity"}]}],"metadata":{"modules":[{"relatedModules":["Swift"],"name":"Compute"}],"roleHeading":"Instance Property","externalID":"s:s12Zip2SequenceV19underestimatedCountSivp","symbolKind":"property","extendedModule":"Swift","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"underestimatedCount","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"}],"title":"underestimatedCount","role":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Sequence1","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Sequence"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Sequence2"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Sequence"},{"type":"text","text":"."}]}},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/zip2sequence\/underestimatedcount"]}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Zip2Sequence","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Zip2Sequence\/Sequence-Implementations"]]},"abstract":[{"text":"A value less than or equal to the number of elements in the sequence,","type":"text"},{"type":"text","text":" "},{"text":"calculated nondestructively.","type":"text"}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Zip2Sequence/underestimatedCount":{"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Sequence1"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sequence"},{"type":"text","text":" and "},{"code":"Sequence2","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Sequence","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Zip2Sequence\/underestimatedCount","url":"\/documentation\/compute\/zip2sequence\/underestimatedcount","abstract":[{"text":"A value less than or equal to the number of elements in the sequence,","type":"text"},{"type":"text","text":" "},{"text":"calculated nondestructively.","type":"text"}],"role":"symbol","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"underestimatedCount","kind":"identifier"},{"kind":"text","text":": "},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"}],"title":"underestimatedCount"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","abstract":[{"type":"text","text":"A signed integer value type."}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Int","kind":"identifier"}],"navigatorTitle":[{"text":"Int","kind":"identifier"}],"title":"Int","url":"\/documentation\/compute\/int","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Zip2Sequence":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Zip2Sequence","kind":"identifier"}],"url":"\/documentation\/compute\/zip2sequence","type":"topic","title":"Zip2Sequence","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"Zip2Sequence","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Zip2Sequence","abstract":[{"type":"text","text":"A sequence of pairs built out of two underlying sequences."}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Zip2Sequence/Sequence-Implementations":{"kind":"article","type":"topic","role":"collectionGroup","title":"Sequence Implementations","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Zip2Sequence\/Sequence-Implementations","url":"\/documentation\/compute\/zip2sequence\/sequence-implementations"}}}