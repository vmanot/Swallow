{"variants":[{"paths":["\/documentation\/compute\/rangeset\/ranges-swift.struct\/index(_:offsetby:limitedby:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RangeSet","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RangeSet\/Ranges-swift.struct","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RangeSet\/Ranges-swift.struct\/RandomAccessCollection-Implementations"]]},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"index","kind":"identifier"},{"kind":"text","text":"("},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"i","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Index","preciseIdentifier":"s:Sl5IndexQa","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/Index","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"offsetBy","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"distance"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","kind":"typeIdentifier","text":"Int"},{"kind":"text","text":", "},{"text":"limitedBy","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"limit","kind":"internalParam"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa","text":"Index","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/Index"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/Index","text":"Index","preciseIdentifier":"s:Sl5IndexQa"},{"text":"?","kind":"text"}],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"name":"i","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A valid index of the array."}]}]},{"name":"distance","content":[{"inlineContent":[{"type":"text","text":"The distance to offset "},{"type":"codeVoice","code":"i"},{"text":".","type":"text"}],"type":"paragraph"}]},{"name":"limit","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A valid index of the collection to use as a limit. If"},{"type":"text","text":" "},{"type":"codeVoice","code":"distance > 0"},{"text":", ","type":"text"},{"code":"limit","type":"codeVoice"},{"text":" should be greater than ","type":"text"},{"type":"codeVoice","code":"i"},{"type":"text","text":" to have any"},{"type":"text","text":" "},{"text":"effect. Likewise, if ","type":"text"},{"code":"distance < 0","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"limit"},{"type":"text","text":" should be less than "},{"code":"i","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"to have any effect."}]}]}],"kind":"parameters"},{"kind":"content","content":[{"type":"heading","anchor":"return-value","text":"Return Value","level":2},{"type":"paragraph","inlineContent":[{"text":"An index offset by ","type":"text"},{"type":"codeVoice","code":"distance"},{"text":" from the index ","type":"text"},{"type":"codeVoice","code":"i"},{"type":"text","text":", unless that"},{"text":" ","type":"text"},{"text":"index would be beyond ","type":"text"},{"type":"codeVoice","code":"limit"},{"type":"text","text":" in the direction of movement. In that"},{"text":" ","type":"text"},{"type":"text","text":"case, the method returns "},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"}]}]},{"content":[{"anchor":"discussion","text":"Discussion","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The following example obtains an index advanced four positions from an"},{"text":" ","type":"text"},{"text":"array’s starting index and then prints the element at that position. The","type":"text"},{"type":"text","text":" "},{"type":"text","text":"operation doesn’t require going beyond the limiting "},{"type":"codeVoice","code":"numbers.endIndex"},{"type":"text","text":" "},{"text":"value, so it succeeds.","type":"text"}]},{"type":"codeListing","syntax":null,"code":["let numbers = [10, 20, 30, 40, 50]","let i = numbers.index(numbers.startIndex, offsetBy: 4)","print(numbers[i])","\/\/ Prints \"50\""]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The next example attempts to retrieve an index ten positions from"},{"text":" ","type":"text"},{"type":"codeVoice","code":"numbers.startIndex"},{"type":"text","text":", but fails, because that distance is beyond the"},{"text":" ","type":"text"},{"type":"text","text":"index passed as "},{"type":"codeVoice","code":"limit"},{"type":"text","text":"."}]},{"code":["let j = numbers.index(numbers.startIndex,","                      offsetBy: 10,","                      limitedBy: numbers.endIndex)","print(j)","\/\/ Prints \"nil\""],"type":"codeListing","syntax":null},{"type":"paragraph","inlineContent":[{"text":"The value passed as ","type":"text"},{"code":"distance","type":"codeVoice"},{"type":"text","text":" must not offset "},{"code":"i","type":"codeVoice"},{"type":"text","text":" beyond the bounds of"},{"type":"text","text":" "},{"text":"the collection, unless the index passed as ","type":"text"},{"code":"limit","type":"codeVoice"},{"type":"text","text":" prevents offsetting"},{"text":" ","type":"text"},{"type":"text","text":"beyond those bounds."}]},{"name":"Complexity","content":[{"inlineContent":[{"type":"text","text":"O(1)"}],"type":"paragraph"}],"style":"note","type":"aside"}],"kind":"content"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"sections":[],"metadata":{"externalID":"s:SksE5index_8offsetBy07limitedC05IndexQzSgAE_SiAEtF::SYNTHESIZED::s:s8RangeSetV6RangesV","extendedModule":"Swift","title":"index(_:offsetBy:limitedBy:)","roleHeading":"Instance Method","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"index"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa","text":"Index"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"offsetBy"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":", "},{"text":"limitedBy","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Index","kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:Sl5IndexQa","kind":"typeIdentifier","text":"Index"},{"text":"?","kind":"text"}],"modules":[{"name":"Compute","relatedModules":["Swift"]}],"role":"symbol"},"kind":"symbol","abstract":[{"text":"Returns an index that is the specified distance from the given index,","type":"text"},{"type":"text","text":" "},{"text":"unless that distance is beyond a given limiting index.","type":"text"}],"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RangeSet\/Ranges-swift.struct\/index(_:offsetBy:limitedBy:)","interfaceLanguage":"swift"},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/RangeSet":{"abstract":[{"text":"A set of values of any comparable type, represented by ranges.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"RangeSet","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"RangeSet"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RangeSet","url":"\/documentation\/compute\/rangeset","title":"RangeSet","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/RangeSet/Ranges-swift.struct":{"kind":"symbol","title":"RangeSet.Ranges","type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RangeSet\/Ranges-swift.struct","abstract":[{"type":"text","text":"A collection of the ranges that make up a range set."}],"url":"\/documentation\/compute\/rangeset\/ranges-swift.struct","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Ranges","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"Ranges"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Bound"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Comparable"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]}},"doc://com.swallow.documentation.Compute/documentation/Compute/Int":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","abstract":[{"type":"text","text":"A signed integer value type."}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Int","kind":"identifier"}],"navigatorTitle":[{"text":"Int","kind":"identifier"}],"title":"Int","url":"\/documentation\/compute\/int","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/RangeSet/Ranges-swift.struct/index(_:offsetBy:limitedBy:)":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RangeSet\/Ranges-swift.struct\/index(_:offsetBy:limitedBy:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"index","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:Sl5IndexQa","kind":"typeIdentifier","text":"Index"},{"kind":"text","text":", "},{"text":"offsetBy","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"text":", ","kind":"text"},{"text":"limitedBy","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Index","kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:Sl5IndexQa","text":"Index","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"kind":"symbol","title":"index(_:offsetBy:limitedBy:)","role":"symbol","abstract":[{"type":"text","text":"Returns an index that is the specified distance from the given index,"},{"text":" ","type":"text"},{"type":"text","text":"unless that distance is beyond a given limiting index."}],"url":"\/documentation\/compute\/rangeset\/ranges-swift.struct\/index(_:offsetby:limitedby:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/Collection/Index":{"url":"\/documentation\/compute\/collection\/index","required":true,"role":"symbol","title":"Index","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Index","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"Comparable","preciseIdentifier":"s:SL","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"A type that represents a position in the collection."}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/Index","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/RangeSet/Ranges-swift.struct/RandomAccessCollection-Implementations":{"role":"collectionGroup","url":"\/documentation\/compute\/rangeset\/ranges-swift.struct\/randomaccesscollection-implementations","abstract":[],"kind":"article","title":"RandomAccessCollection Implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RangeSet\/Ranges-swift.struct\/RandomAccessCollection-Implementations","type":"topic"}}}