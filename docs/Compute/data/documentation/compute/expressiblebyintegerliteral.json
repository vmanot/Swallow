{"variants":[{"paths":["\/documentation\/compute\/expressiblebyintegerliteral"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute"]]},"kind":"symbol","topicSections":[{"title":"Associated Types","identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ExpressibleByIntegerLiteral\/IntegerLiteralType"],"generated":true,"anchor":"Associated-Types"},{"identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ExpressibleByIntegerLiteral\/init(integerLiteral:)-7jqe8"],"generated":true,"title":"Initializers","anchor":"Initializers"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"text":"A type that can be initialized with an integer literal.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ExpressibleByIntegerLiteral"}],"platforms":["macOS"]}]},{"kind":"content","content":[{"type":"heading","text":"Overview","level":2,"anchor":"overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The standard library integer and floating-point types, such as "},{"code":"Int","type":"codeVoice"},{"type":"text","text":" and"},{"type":"text","text":" "},{"type":"codeVoice","code":"Double"},{"type":"text","text":", conform to the "},{"code":"ExpressibleByIntegerLiteral","type":"codeVoice"},{"type":"text","text":" protocol. You can"},{"type":"text","text":" "},{"type":"text","text":"initialize a variable or constant of any of these types by assigning an"},{"text":" ","type":"text"},{"text":"integer literal.","type":"text"}]},{"type":"codeListing","code":["\/\/ Type inferred as 'Int'","let cookieCount = 12","","\/\/ An array of 'Int'","let chipsPerCookie = [21, 22, 25, 23, 24, 19]","","\/\/ A floating-point value initialized using an integer literal","let redPercentage: Double = 1","\/\/ redPercentage == 1.0"],"syntax":null},{"anchor":"Conforming-to-ExpressibleByIntegerLiteral","level":1,"text":"Conforming to ExpressibleByIntegerLiteral","type":"heading"},{"inlineContent":[{"text":"To add ","type":"text"},{"type":"codeVoice","code":"ExpressibleByIntegerLiteral"},{"type":"text","text":" conformance to your custom type,"},{"text":" ","type":"text"},{"type":"text","text":"implement the required initializer."}],"type":"paragraph"}]}],"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ExpressibleByIntegerLiteral","interfaceLanguage":"swift"},"sections":[],"metadata":{"title":"ExpressibleByIntegerLiteral","roleHeading":"Protocol","navigatorTitle":[{"text":"ExpressibleByIntegerLiteral","kind":"identifier"}],"symbolKind":"protocol","externalID":"s:s27ExpressibleByIntegerLiteralP","modules":[{"name":"Compute"}],"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ExpressibleByIntegerLiteral","kind":"identifier"}]},"relationshipsSections":[{"kind":"relationships","type":"inheritedBy","identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryFloatingPoint","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryInteger","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ComplexNumeric","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FixedWidthInteger","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Numeric","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Quaternion","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SignedInteger","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SignedNumeric","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsignedInteger"],"title":"Inherited By"},{"kind":"relationships","type":"conformingTypes","identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArrayTree","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Double","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float16","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int128","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int32","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int64","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/StaticBigInt","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt128","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt32","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/simd-swift.module.extension\/simd_quatd","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/simd-swift.module.extension\/simd_quatf"],"title":"Conforming Types"}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/simd-swift.module.extension/simd_quatf":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/simd-swift.module.extension\/simd_quatf","abstract":[],"fragments":[{"kind":"keyword","text":"extension"},{"text":" ","kind":"text"},{"kind":"identifier","text":"simd"},{"text":".","kind":"text"},{"text":"simd_quatf","kind":"identifier","preciseIdentifier":"c:@SA@simd_quatf"}],"title":"simd_quatf","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"simd_quatf"}],"url":"\/documentation\/compute\/simd-swift.module.extension\/simd_quatf","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/ExpressibleByIntegerLiteral":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ExpressibleByIntegerLiteral","url":"\/documentation\/compute\/expressiblebyintegerliteral","title":"ExpressibleByIntegerLiteral","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ExpressibleByIntegerLiteral","kind":"identifier"}],"navigatorTitle":[{"text":"ExpressibleByIntegerLiteral","kind":"identifier"}],"abstract":[{"text":"A type that can be initialized with an integer literal.","type":"text"}],"kind":"symbol","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Quaternion":{"url":"\/documentation\/compute\/quaternion","navigatorTitle":[{"kind":"identifier","text":"Quaternion"}],"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"Quaternion","kind":"identifier"}],"abstract":[],"type":"topic","title":"Quaternion","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Quaternion"},"doc://com.swallow.documentation.Compute/documentation/Compute/Float16":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float16","navigatorTitle":[{"kind":"identifier","text":"Float16"}],"role":"symbol","title":"Float16","url":"\/documentation\/compute\/float16","type":"topic","abstract":[{"type":"text","text":"A half-precision (16b), floating-point value type."}],"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Float16"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/simd-swift.module.extension/simd_quatd":{"abstract":[],"title":"simd_quatd","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/simd-swift.module.extension\/simd_quatd","url":"\/documentation\/compute\/simd-swift.module.extension\/simd_quatd","fragments":[{"text":"extension","kind":"keyword"},{"text":" ","kind":"text"},{"text":"simd","kind":"identifier"},{"text":".","kind":"text"},{"preciseIdentifier":"c:@SA@simd_quatd","text":"simd_quatd","kind":"identifier"}],"kind":"symbol","role":"symbol","navigatorTitle":[{"text":"simd_quatd","kind":"identifier"}],"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt":{"kind":"symbol","navigatorTitle":[{"text":"UInt","kind":"identifier"}],"type":"topic","title":"UInt","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt","abstract":[{"text":"An unsigned integer value type.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"UInt","kind":"identifier"}],"url":"\/documentation\/compute\/uint"},"doc://com.swallow.documentation.Compute/documentation/Compute/BinaryInteger":{"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"BinaryInteger"}],"navigatorTitle":[{"kind":"identifier","text":"BinaryInteger"}],"url":"\/documentation\/compute\/binaryinteger","type":"topic","abstract":[{"type":"text","text":"An integer type with a binary representation."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryInteger","title":"BinaryInteger","kind":"symbol","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/StaticBigInt":{"abstract":[{"text":"An immutable arbitrary-precision signed integer.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"StaticBigInt"}],"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StaticBigInt","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/StaticBigInt","url":"\/documentation\/compute\/staticbigint","kind":"symbol","title":"StaticBigInt","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Float":{"type":"topic","abstract":[{"text":"A single-precision, floating-point value type.","type":"text"}],"url":"\/documentation\/compute\/float","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Float"}],"navigatorTitle":[{"text":"Float","kind":"identifier"}],"title":"Float"},"doc://com.swallow.documentation.Compute/documentation/Compute/Numeric":{"abstract":[{"type":"text","text":"A type with values that support multiplication."}],"kind":"symbol","url":"\/documentation\/compute\/numeric","navigatorTitle":[{"text":"Numeric","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Numeric","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Numeric"}],"title":"Numeric"},"doc://com.swallow.documentation.Compute/documentation/Compute/ComplexNumeric":{"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ComplexNumeric","type":"topic","url":"\/documentation\/compute\/complexnumeric","title":"ComplexNumeric","navigatorTitle":[{"text":"ComplexNumeric","kind":"identifier"}],"abstract":[],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"ComplexNumeric","kind":"identifier"}],"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int16":{"title":"Int16","abstract":[{"text":"A 16-bit signed integer value","type":"text"},{"type":"text","text":" "},{"text":"type.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Int16"}],"type":"topic","url":"\/documentation\/compute\/int16","navigatorTitle":[{"kind":"identifier","text":"Int16"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/SignedInteger":{"abstract":[{"type":"text","text":"An integer type that can represent both positive and negative values."}],"kind":"symbol","url":"\/documentation\/compute\/signedinteger","navigatorTitle":[{"kind":"identifier","text":"SignedInteger"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SignedInteger","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"SignedInteger","kind":"identifier"}],"title":"SignedInteger"},"doc://com.swallow.documentation.Compute/documentation/Compute/Double":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Double","abstract":[{"text":"A double-precision, floating-point value type.","type":"text"}],"title":"Double","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Double","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"Double","kind":"identifier"}],"kind":"symbol","type":"topic","url":"\/documentation\/compute\/double"},"doc://com.swallow.documentation.Compute/documentation/Compute/FixedWidthInteger":{"title":"FixedWidthInteger","kind":"symbol","navigatorTitle":[{"text":"FixedWidthInteger","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FixedWidthInteger","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"FixedWidthInteger","kind":"identifier"}],"abstract":[{"text":"An integer type that uses a fixed size for every instance.","type":"text"}],"type":"topic","url":"\/documentation\/compute\/fixedwidthinteger"},"doc://com.swallow.documentation.Compute/documentation/Compute/FloatingPoint":{"url":"\/documentation\/compute\/floatingpoint","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPoint","title":"FloatingPoint","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FloatingPoint","kind":"identifier"}],"navigatorTitle":[{"text":"FloatingPoint","kind":"identifier"}],"abstract":[{"text":"A floating-point numeric type.","type":"text"}],"kind":"symbol","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt32":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt32","title":"UInt32","abstract":[{"type":"text","text":"A 32-bit unsigned integer value"},{"type":"text","text":" "},{"text":"type.","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"UInt32","kind":"identifier"}],"url":"\/documentation\/compute\/uint32","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"UInt32","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/ExpressibleByIntegerLiteral/init(integerLiteral:)-7jqe8":{"url":"\/documentation\/compute\/expressiblebyintegerliteral\/init(integerliteral:)-7jqe8","title":"init(integerLiteral:)","abstract":[{"type":"text","text":"Creates an instance initialized to the specified integer value."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ExpressibleByIntegerLiteral\/init(integerLiteral:)-7jqe8","required":true,"role":"symbol","defaultImplementations":1,"type":"topic","kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"text":"integerLiteral","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:s27ExpressibleByIntegerLiteralP0cD4TypeQa","text":"IntegerLiteralType"},{"text":")","kind":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Int64":{"url":"\/documentation\/compute\/int64","title":"Int64","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int64","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Int64"}],"abstract":[{"type":"text","text":"A 64-bit signed integer value"},{"text":" ","type":"text"},{"text":"type.","type":"text"}],"navigatorTitle":[{"text":"Int64","kind":"identifier"}],"type":"topic","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsignedInteger":{"url":"\/documentation\/compute\/unsignedinteger","abstract":[{"type":"text","text":"An integer type that can represent only nonnegative values."}],"kind":"symbol","navigatorTitle":[{"text":"UnsignedInteger","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsignedInteger","title":"UnsignedInteger","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"UnsignedInteger"}],"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/ArrayTree":{"title":"ArrayTree","type":"topic","kind":"symbol","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ArrayTree","kind":"identifier"}],"abstract":[],"url":"\/documentation\/compute\/arraytree","navigatorTitle":[{"text":"ArrayTree","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArrayTree","conformance":{"constraints":[{"type":"codeVoice","code":"T"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"ExpressibleByIntegerLiteral"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]}},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt16":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"UInt16","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"UInt16"}],"title":"UInt16","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16","url":"\/documentation\/compute\/uint16","kind":"symbol","role":"symbol","abstract":[{"text":"A 16-bit unsigned integer value","type":"text"},{"text":" ","type":"text"},{"text":"type.","type":"text"}],"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int8":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Int8"}],"url":"\/documentation\/compute\/int8","title":"Int8","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Int8"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8","abstract":[{"text":"An 8-bit signed integer value","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"type."}]},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt8":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"UInt8","kind":"identifier"}],"navigatorTitle":[{"text":"UInt8","kind":"identifier"}],"title":"UInt8","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8","url":"\/documentation\/compute\/uint8","kind":"symbol","role":"symbol","type":"topic","abstract":[{"type":"text","text":"An 8-bit unsigned integer value"},{"text":" ","type":"text"},{"text":"type.","type":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/BinaryFloatingPoint":{"navigatorTitle":[{"text":"BinaryFloatingPoint","kind":"identifier"}],"type":"topic","title":"BinaryFloatingPoint","abstract":[{"text":"A radix-2 (binary) floating-point type.","type":"text"}],"url":"\/documentation\/compute\/binaryfloatingpoint","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BinaryFloatingPoint","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BinaryFloatingPoint","kind":"symbol","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/SignedNumeric":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SignedNumeric","url":"\/documentation\/compute\/signednumeric","title":"SignedNumeric","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"SignedNumeric"}],"navigatorTitle":[{"text":"SignedNumeric","kind":"identifier"}],"abstract":[{"type":"text","text":"A numeric type with a negation operation."}],"kind":"symbol","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int128":{"url":"\/documentation\/compute\/int128","abstract":[{"type":"text","text":"A 128-bit signed integer type."}],"title":"Int128","role":"symbol","navigatorTitle":[{"text":"Int128","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int128","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Int128"}],"kind":"symbol","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt128":{"url":"\/documentation\/compute\/uint128","type":"topic","kind":"symbol","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt128","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"UInt128"}],"title":"UInt128","abstract":[{"text":"A 128-bit unsigned integer type.","type":"text"}],"navigatorTitle":[{"text":"UInt128","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt64":{"navigatorTitle":[{"text":"UInt64","kind":"identifier"}],"kind":"symbol","role":"symbol","type":"topic","title":"UInt64","abstract":[{"text":"A 64-bit unsigned integer value","type":"text"},{"type":"text","text":" "},{"type":"text","text":"type."}],"url":"\/documentation\/compute\/uint64","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"UInt64","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","abstract":[{"type":"text","text":"A signed integer value type."}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Int","kind":"identifier"}],"navigatorTitle":[{"text":"Int","kind":"identifier"}],"title":"Int","url":"\/documentation\/compute\/int","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/ExpressibleByIntegerLiteral/IntegerLiteralType":{"title":"IntegerLiteralType","url":"\/documentation\/compute\/expressiblebyintegerliteral\/integerliteraltype","abstract":[{"text":"A type that represents an integer literal.","type":"text"}],"fragments":[{"kind":"keyword","text":"associatedtype"},{"text":" ","kind":"text"},{"kind":"identifier","text":"IntegerLiteralType"},{"text":" : ","kind":"text"},{"text":"_ExpressibleByBuiltinIntegerLiteral","kind":"typeIdentifier"}],"type":"topic","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ExpressibleByIntegerLiteral\/IntegerLiteralType","kind":"symbol","required":true},"doc://com.swallow.documentation.Compute/documentation/Compute/Int32":{"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Int32","kind":"identifier"}],"abstract":[{"text":"A 32-bit signed integer value","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"type."}],"kind":"symbol","navigatorTitle":[{"text":"Int32","kind":"identifier"}],"type":"topic","url":"\/documentation\/compute\/int32","title":"Int32","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int32"}}}