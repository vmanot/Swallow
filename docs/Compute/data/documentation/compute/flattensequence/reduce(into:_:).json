{"abstract":[{"type":"text","text":"Returns the result of combining the elements of the sequence using the"},{"type":"text","text":" "},{"type":"text","text":"given closure."}],"variants":[{"paths":["\/documentation\/compute\/flattensequence\/reduce(into:_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FlattenSequence","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FlattenSequence\/Sequence-Implementations"]]},"metadata":{"externalID":"s:STsE6reduce4into_qd__qd__n_yqd__z_7ElementQztKXEtKlF::SYNTHESIZED::s:s15FlattenSequenceV","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"reduce","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Result"},{"kind":"text","text":">("},{"text":"into","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Result","kind":"typeIdentifier"},{"text":", (","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:ST7ElementQa"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> ()) "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Result"}],"roleHeading":"Instance Method","modules":[{"name":"Compute","relatedModules":["Swift"]}],"role":"symbol","extendedModule":"Swift","title":"reduce(into:_:)","symbolKind":"method"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FlattenSequence\/reduce(into:_:)"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"reduce","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Result","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"into"},{"text":" ","kind":"text"},{"text":"initialResult","kind":"internalParam"},{"kind":"text","text":": "},{"text":"Result","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"updateAccumulatingResult","kind":"internalParam"},{"kind":"text","text":": ("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"text":"Result","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","text":"Element","preciseIdentifier":"s:ST7ElementQa"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> ()) "},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Result","kind":"typeIdentifier"}],"languages":["swift"],"platforms":["macOS"]}]},{"parameters":[{"name":"initialResult","content":[{"type":"paragraph","inlineContent":[{"text":"The value to use as the initial accumulating value.","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"A closure that updates the accumulating","type":"text"},{"text":" ","type":"text"},{"text":"value with an element of the sequence.","type":"text"}],"type":"paragraph"}],"name":"updateAccumulatingResult"}],"kind":"parameters"},{"kind":"content","content":[{"text":"Return Value","anchor":"return-value","level":2,"type":"heading"},{"inlineContent":[{"text":"The final accumulated value. If the sequence has no elements,","type":"text"},{"type":"text","text":" "},{"text":"the result is ","type":"text"},{"type":"codeVoice","code":"initialResult"},{"type":"text","text":"."}],"type":"paragraph"}]},{"kind":"content","content":[{"level":2,"text":"Discussion","type":"heading","anchor":"discussion"},{"inlineContent":[{"type":"text","text":"Use the "},{"type":"codeVoice","code":"reduce(into:_:)"},{"text":" method to produce a single value from the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"elements of an entire sequence. For example, you can use this method on an"},{"text":" ","type":"text"},{"text":"array of integers to filter adjacent equal entries or count frequencies.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method is preferred over "},{"code":"reduce(_:_:)","type":"codeVoice"},{"text":" for efficiency when the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"result is a copy-on-write type, for example an Array or a Dictionary."}]},{"inlineContent":[{"text":"The ","type":"text"},{"type":"codeVoice","code":"updateAccumulatingResult"},{"text":" closure is called sequentially with a","type":"text"},{"type":"text","text":" "},{"text":"mutable accumulating value initialized to ","type":"text"},{"type":"codeVoice","code":"initialResult"},{"text":" and each element","type":"text"},{"type":"text","text":" "},{"text":"of the sequence. This example shows how to build a dictionary of letter","type":"text"},{"type":"text","text":" "},{"type":"text","text":"frequencies of a string."}],"type":"paragraph"},{"syntax":null,"type":"codeListing","code":["let letters = \"abracadabra\"","let letterCount = letters.reduce(into: [:]) { counts, letter in","    counts[letter, default: 0] += 1","}","\/\/ letterCount == [\"a\": 5, \"b\": 2, \"r\": 2, \"c\": 1, \"d\": 1]"]},{"inlineContent":[{"type":"text","text":"When "},{"type":"codeVoice","code":"letters.reduce(into:_:)"},{"type":"text","text":" is called, the following steps occur:"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"updateAccumulatingResult"},{"type":"text","text":" closure is called with the initial"},{"text":" ","type":"text"},{"text":"accumulating value—","type":"text"},{"type":"codeVoice","code":"[:]"},{"text":" in this case—and the first character of","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"letters"},{"type":"text","text":", modifying the accumulating value by setting "},{"code":"1","type":"codeVoice"},{"text":" for the key","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"\"a\""},{"text":".","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"The closure is called again repeatedly with the updated accumulating","type":"text"},{"type":"text","text":" "},{"text":"value and each element of the sequence.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"When the sequence is exhausted, the accumulating value is returned to"},{"type":"text","text":" "},{"text":"the caller.","type":"text"}],"type":"paragraph"}]}],"type":"orderedList"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If the sequence has no elements, "},{"type":"codeVoice","code":"updateAccumulatingResult"},{"type":"text","text":" is never"},{"text":" ","type":"text"},{"text":"executed and ","type":"text"},{"type":"codeVoice","code":"initialResult"},{"type":"text","text":" is the result of the call to"},{"text":" ","type":"text"},{"code":"reduce(into:_:)","type":"codeVoice"},{"type":"text","text":"."}]},{"type":"aside","name":"Complexity","content":[{"inlineContent":[{"text":"O(","type":"text"},{"type":"emphasis","inlineContent":[{"text":"n","type":"text"}]},{"type":"text","text":"), where "},{"inlineContent":[{"text":"n","type":"text"}],"type":"emphasis"},{"text":" is the length of the sequence.","type":"text"}],"type":"paragraph"}],"style":"note"}]}],"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/FlattenSequence/Sequence-Implementations":{"abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FlattenSequence\/Sequence-Implementations","type":"topic","kind":"article","role":"collectionGroup","url":"\/documentation\/compute\/flattensequence\/sequence-implementations","title":"Sequence Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/FlattenSequence/reduce(into:_:)":{"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"reduce","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Result","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"into","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":", ("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"text":"Result","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:ST7ElementQa"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ()) ","kind":"text"},{"kind":"keyword","text":"rethrows"},{"text":" -> ","kind":"text"},{"text":"Result","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FlattenSequence\/reduce(into:_:)","kind":"symbol","role":"symbol","url":"\/documentation\/compute\/flattensequence\/reduce(into:_:)","title":"reduce(into:_:)","abstract":[{"type":"text","text":"Returns the result of combining the elements of the sequence using the"},{"text":" ","type":"text"},{"text":"given closure.","type":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/FlattenSequence":{"url":"\/documentation\/compute\/flattensequence","navigatorTitle":[{"kind":"identifier","text":"FlattenSequence"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FlattenSequence","title":"FlattenSequence","kind":"symbol","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"FlattenSequence"}],"type":"topic","abstract":[{"type":"text","text":"A sequence consisting of all the elements contained in each segment"},{"text":" ","type":"text"},{"text":"contained in some ","type":"text"},{"code":"Base","type":"codeVoice"},{"type":"text","text":" sequence."}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence/Element":{"type":"topic","required":true,"abstract":[{"type":"text","text":"A type representing the sequence’s elements."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"symbol","url":"\/documentation\/compute\/sequence\/element","role":"symbol","title":"Element","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"identifier"}]}}}