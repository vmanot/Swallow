{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FlattenSequence\/Iterator\/joined(separator:)-14aab"},"sections":[],"kind":"symbol","metadata":{"symbolKind":"method","title":"joined(separator:)","externalID":"s:STsSy7ElementRpzrlE6joined9separatorS2S_tF::SYNTHESIZED::s:s15FlattenSequenceV8IteratorV","extendedModule":"Swift","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Element","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"StringProtocol"},{"type":"text","text":"."}]},"role":"symbol","modules":[{"name":"Compute","relatedModules":["Swift"]}],"roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"joined","kind":"identifier"},{"text":"(","kind":"text"},{"text":"separator","kind":"externalParam"},{"kind":"text","text":": "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"}]},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"joined","kind":"identifier"},{"kind":"text","text":"("},{"text":"separator","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String","preciseIdentifier":"s:SS"},{"kind":"text","text":" = \"\") -> "},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String","text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"content":[{"inlineContent":[{"text":"A string to insert between each of the elements","type":"text"},{"text":" ","type":"text"},{"text":"in this sequence. The default separator is an empty string.","type":"text"}],"type":"paragraph"}],"name":"separator"}],"kind":"parameters"},{"content":[{"anchor":"return-value","text":"Return Value","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"text":"A single, concatenated string.","type":"text"}]}],"kind":"content"},{"kind":"content","content":[{"anchor":"discussion","level":2,"text":"Discussion","type":"heading"},{"inlineContent":[{"text":"The following example shows how an array of strings can be joined to a","type":"text"},{"text":" ","type":"text"},{"text":"single, comma-separated string:","type":"text"}],"type":"paragraph"},{"code":["let cast = [\"Vivien\", \"Marlon\", \"Kim\", \"Karl\"]","let list = cast.joined(separator: \", \")","print(list)","\/\/ Prints \"Vivien, Marlon, Kim, Karl\""],"type":"codeListing","syntax":null}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FlattenSequence","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FlattenSequence\/Sequence-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FlattenSequence\/Iterator","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FlattenSequence\/Iterator\/Sequence-Implementations"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/flattensequence\/iterator\/joined(separator:)-14aab"]}],"abstract":[{"type":"text","text":"Returns a new string by concatenating the elements of the sequence,"},{"type":"text","text":" "},{"type":"text","text":"adding the given separator between each element."}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/FlattenSequence/Iterator/joined(separator:)-14aab":{"kind":"symbol","title":"joined(separator:)","conformance":{"constraints":[{"code":"Element","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"StringProtocol"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"url":"\/documentation\/compute\/flattensequence\/iterator\/joined(separator:)-14aab","type":"topic","abstract":[{"text":"Returns a new string by concatenating the elements of the sequence,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"adding the given separator between each element."}],"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FlattenSequence\/Iterator\/joined(separator:)-14aab","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"joined","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"separator"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/FlattenSequence/Iterator":{"kind":"symbol","type":"topic","abstract":[{"text":"A type that provides the sequenceâ€™s iteration interface and","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"encapsulates its iteration state."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FlattenSequence\/Iterator","title":"FlattenSequence.Iterator","navigatorTitle":[{"text":"Iterator","kind":"identifier"}],"conformance":{"constraints":[{"code":"Base","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sequence"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Base.Element"},{"text":" conforms to ","type":"text"},{"code":"Sequence","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Iterator"}],"url":"\/documentation\/compute\/flattensequence\/iterator","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/String":{"type":"topic","navigatorTitle":[{"kind":"identifier","text":"String"}],"title":"String","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"String","kind":"identifier"}],"abstract":[{"type":"text","text":"A Unicode string value that is a collection of characters."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String","kind":"symbol","role":"symbol","url":"\/documentation\/compute\/string"},"doc://com.swallow.documentation.Compute/documentation/Compute/FlattenSequence/Iterator/Sequence-Implementations":{"type":"topic","url":"\/documentation\/compute\/flattensequence\/iterator\/sequence-implementations","abstract":[],"role":"collectionGroup","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FlattenSequence\/Iterator\/Sequence-Implementations","kind":"article","title":"Sequence Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/FlattenSequence":{"url":"\/documentation\/compute\/flattensequence","navigatorTitle":[{"kind":"identifier","text":"FlattenSequence"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FlattenSequence","title":"FlattenSequence","kind":"symbol","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"FlattenSequence"}],"type":"topic","abstract":[{"type":"text","text":"A sequence consisting of all the elements contained in each segment"},{"text":" ","type":"text"},{"text":"contained in some ","type":"text"},{"code":"Base","type":"codeVoice"},{"type":"text","text":" sequence."}]},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/FlattenSequence/Sequence-Implementations":{"abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FlattenSequence\/Sequence-Implementations","type":"topic","kind":"article","role":"collectionGroup","url":"\/documentation\/compute\/flattensequence\/sequence-implementations","title":"Sequence Implementations"}}}