{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FlattenSequence\/index(_:offsetBy:limitedBy:)-7gfpk"},"schemaVersion":{"major":0,"minor":3,"patch":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/flattensequence\/index(_:offsetby:limitedby:)-7gfpk"]}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FlattenSequence","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FlattenSequence\/Collection-Implementations"]]},"sections":[],"kind":"symbol","metadata":{"role":"symbol","title":"index(_:offsetBy:limitedBy:)","externalID":"s:SlsE5index_8offsetBy07limitedC05IndexQzSgAE_SiAEtF::SYNTHESIZED::s:s15FlattenSequenceV","modules":[{"relatedModules":["Swift"],"name":"Compute"}],"roleHeading":"Instance Method","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"index","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:Sl5IndexQa","text":"Index","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"offsetBy","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"text":", ","kind":"text"},{"text":"limitedBy","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Index","kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:Sl5IndexQa","text":"Index","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"extendedModule":"Swift"},"abstract":[{"type":"text","text":"Returns an index that is the specified distance from the given index,"},{"type":"text","text":" "},{"text":"unless that distance is beyond a given limiting index.","type":"text"}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"index"},{"kind":"text","text":"("},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"i"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/Index","preciseIdentifier":"s:Sl5IndexQa","text":"Index","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"offsetBy","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"distance","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"limitedBy"},{"kind":"text","text":" "},{"kind":"internalParam","text":"limit"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Index","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/Index","preciseIdentifier":"s:Sl5IndexQa"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/Index","kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa","text":"Index"},{"text":"?","kind":"text"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"i","content":[{"type":"paragraph","inlineContent":[{"text":"A valid index of the collection.","type":"text"}]}]},{"name":"distance","content":[{"inlineContent":[{"type":"text","text":"The distance to offset "},{"type":"codeVoice","code":"i"},{"type":"text","text":". "},{"code":"distance","type":"codeVoice"},{"text":" must not be negative","type":"text"},{"type":"text","text":" "},{"text":"unless the collection conforms to the ","type":"text"},{"code":"BidirectionalCollection","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"protocol."}],"type":"paragraph"}]},{"name":"limit","content":[{"inlineContent":[{"type":"text","text":"A valid index of the collection to use as a limit. If"},{"text":" ","type":"text"},{"type":"codeVoice","code":"distance > 0"},{"type":"text","text":", a limit that is less than "},{"code":"i","type":"codeVoice"},{"type":"text","text":" has no effect."},{"type":"text","text":" "},{"type":"text","text":"Likewise, if "},{"type":"codeVoice","code":"distance < 0"},{"text":", a limit that is greater than ","type":"text"},{"type":"codeVoice","code":"i"},{"type":"text","text":" has no"},{"text":" ","type":"text"},{"text":"effect.","type":"text"}],"type":"paragraph"}]}]},{"content":[{"text":"Return Value","type":"heading","anchor":"return-value","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"An index offset by "},{"type":"codeVoice","code":"distance"},{"type":"text","text":" from the index "},{"code":"i","type":"codeVoice"},{"type":"text","text":", unless that"},{"type":"text","text":" "},{"text":"index would be beyond ","type":"text"},{"type":"codeVoice","code":"limit"},{"text":" in the direction of movement. In that","type":"text"},{"type":"text","text":" "},{"text":"case, the method returns ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."}]}],"kind":"content"},{"content":[{"level":2,"text":"Discussion","anchor":"discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The following example obtains an index advanced four positions from a"},{"text":" ","type":"text"},{"text":"string’s starting index and then prints the character at that position.","type":"text"},{"type":"text","text":" "},{"text":"The operation doesn’t require going beyond the limiting ","type":"text"},{"code":"s.endIndex","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"value, so it succeeds."}]},{"code":["let s = \"Swift\"","if let i = s.index(s.startIndex, offsetBy: 4, limitedBy: s.endIndex) {","    print(s[i])","}","\/\/ Prints \"t\""],"syntax":null,"type":"codeListing"},{"inlineContent":[{"text":"The next example attempts to retrieve an index six positions from","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"s.startIndex"},{"text":" but fails, because that distance is beyond the index","type":"text"},{"type":"text","text":" "},{"text":"passed as ","type":"text"},{"type":"codeVoice","code":"limit"},{"type":"text","text":"."}],"type":"paragraph"},{"type":"codeListing","code":["let j = s.index(s.startIndex, offsetBy: 6, limitedBy: s.endIndex)","print(j)","\/\/ Prints \"nil\""],"syntax":null},{"inlineContent":[{"type":"text","text":"The value passed as "},{"type":"codeVoice","code":"distance"},{"text":" must not offset ","type":"text"},{"code":"i","type":"codeVoice"},{"type":"text","text":" beyond the bounds of"},{"type":"text","text":" "},{"text":"the collection, unless the index passed as ","type":"text"},{"type":"codeVoice","code":"limit"},{"text":" prevents offsetting","type":"text"},{"text":" ","type":"text"},{"text":"beyond those bounds.","type":"text"}],"type":"paragraph"},{"name":"Complexity","content":[{"inlineContent":[{"text":"O(1) if the collection conforms to","type":"text"},{"type":"text","text":" "},{"code":"RandomAccessCollection","type":"codeVoice"},{"type":"text","text":"; otherwise, O("},{"inlineContent":[{"text":"k","type":"text"}],"type":"emphasis"},{"text":"), where ","type":"text"},{"inlineContent":[{"type":"text","text":"k"}],"type":"emphasis"},{"type":"text","text":" is the absolute"},{"text":" ","type":"text"},{"text":"value of ","type":"text"},{"code":"distance","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}],"style":"note","type":"aside"}],"kind":"content"}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/FlattenSequence":{"url":"\/documentation\/compute\/flattensequence","navigatorTitle":[{"kind":"identifier","text":"FlattenSequence"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FlattenSequence","title":"FlattenSequence","kind":"symbol","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"FlattenSequence"}],"type":"topic","abstract":[{"type":"text","text":"A sequence consisting of all the elements contained in each segment"},{"text":" ","type":"text"},{"text":"contained in some ","type":"text"},{"code":"Base","type":"codeVoice"},{"type":"text","text":" sequence."}]},"doc://com.swallow.documentation.Compute/documentation/Compute/FlattenSequence/Collection-Implementations":{"url":"\/documentation\/compute\/flattensequence\/collection-implementations","abstract":[],"kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FlattenSequence\/Collection-Implementations","title":"Collection Implementations","role":"collectionGroup","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","abstract":[{"type":"text","text":"A signed integer value type."}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Int","kind":"identifier"}],"navigatorTitle":[{"text":"Int","kind":"identifier"}],"title":"Int","url":"\/documentation\/compute\/int","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/FlattenSequence/index(_:offsetBy:limitedBy:)-7gfpk":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"index"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Index","preciseIdentifier":"s:Sl5IndexQa","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"offsetBy"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"limitedBy","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:Sl5IndexQa","text":"Index","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:Sl5IndexQa","kind":"typeIdentifier","text":"Index"},{"text":"?","kind":"text"}],"abstract":[{"type":"text","text":"Returns an index that is the specified distance from the given index,"},{"text":" ","type":"text"},{"text":"unless that distance is beyond a given limiting index.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FlattenSequence\/index(_:offsetBy:limitedBy:)-7gfpk","url":"\/documentation\/compute\/flattensequence\/index(_:offsetby:limitedby:)-7gfpk","type":"topic","role":"symbol","kind":"symbol","title":"index(_:offsetBy:limitedBy:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/Collection/Index":{"url":"\/documentation\/compute\/collection\/index","required":true,"role":"symbol","title":"Index","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Index","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"Comparable","preciseIdentifier":"s:SL","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"A type that represents a position in the collection."}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/Index","kind":"symbol"}}}