{"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FlattenSequence","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FlattenSequence\/Sequence-Implementations"]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"symbol","abstract":[{"text":"Returns the result of combining the elements of the sequence using the","type":"text"},{"type":"text","text":" "},{"text":"given closure.","type":"text"}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"reduce","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Result"},{"kind":"text","text":">("},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"initialResult","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"nextPartialResult"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Result"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":") "},{"text":"rethrows","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Result"}],"platforms":["macOS"]}],"kind":"declarations"},{"parameters":[{"name":"initialResult","content":[{"inlineContent":[{"type":"text","text":"The value to use as the initial accumulating value."},{"type":"text","text":" "},{"type":"codeVoice","code":"initialResult"},{"text":" is passed to ","type":"text"},{"code":"nextPartialResult","type":"codeVoice"},{"type":"text","text":" the first time the"},{"type":"text","text":" "},{"type":"text","text":"closure is executed."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"A closure that combines an accumulating value and"},{"text":" ","type":"text"},{"type":"text","text":"an element of the sequence into a new accumulating value, to be used"},{"type":"text","text":" "},{"type":"text","text":"in the next call of the "},{"type":"codeVoice","code":"nextPartialResult"},{"text":" closure or returned to","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the caller."}],"type":"paragraph"}],"name":"nextPartialResult"}],"kind":"parameters"},{"content":[{"text":"Return Value","level":2,"type":"heading","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The final accumulated value. If the sequence has no elements,"},{"type":"text","text":" "},{"type":"text","text":"the result is "},{"type":"codeVoice","code":"initialResult"},{"text":".","type":"text"}]}],"kind":"content"},{"kind":"content","content":[{"type":"heading","text":"Discussion","anchor":"discussion","level":2},{"type":"paragraph","inlineContent":[{"text":"Use the ","type":"text"},{"code":"reduce(_:_:)","type":"codeVoice"},{"type":"text","text":" method to produce a single value from the elements"},{"text":" ","type":"text"},{"text":"of an entire sequence. For example, you can use this method on an array","type":"text"},{"type":"text","text":" "},{"type":"text","text":"of numbers to find their sum or product."}]},{"inlineContent":[{"text":"The ","type":"text"},{"code":"nextPartialResult","type":"codeVoice"},{"text":" closure is called sequentially with an","type":"text"},{"type":"text","text":" "},{"type":"text","text":"accumulating value initialized to "},{"code":"initialResult","type":"codeVoice"},{"type":"text","text":" and each element of"},{"type":"text","text":" "},{"type":"text","text":"the sequence. This example shows how to find the sum of an array of"},{"type":"text","text":" "},{"text":"numbers.","type":"text"}],"type":"paragraph"},{"code":["let numbers = [1, 2, 3, 4]","let numberSum = numbers.reduce(0, { x, y in","    x + y","})","\/\/ numberSum == 10"],"syntax":null,"type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"When ","type":"text"},{"code":"numbers.reduce(_:_:)","type":"codeVoice"},{"type":"text","text":" is called, the following steps occur:"}]},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"The "},{"code":"nextPartialResult","type":"codeVoice"},{"type":"text","text":" closure is called with "},{"type":"codeVoice","code":"initialResult"},{"type":"text","text":"—"},{"code":"0","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"in this case—and the first element of "},{"code":"numbers","type":"codeVoice"},{"type":"text","text":", returning the sum:"},{"type":"text","text":" "},{"type":"codeVoice","code":"1"},{"text":".","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"The closure is called again repeatedly with the previous call’s return"},{"type":"text","text":" "},{"text":"value and each element of the sequence.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"When the sequence is exhausted, the last value returned from the"},{"type":"text","text":" "},{"text":"closure is returned to the caller.","type":"text"}],"type":"paragraph"}]}],"type":"orderedList"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If the sequence has no elements, "},{"code":"nextPartialResult","type":"codeVoice"},{"type":"text","text":" is never executed"},{"text":" ","type":"text"},{"text":"and ","type":"text"},{"type":"codeVoice","code":"initialResult"},{"type":"text","text":" is the result of the call to "},{"code":"reduce(_:_:)","type":"codeVoice"},{"text":".","type":"text"}]},{"name":"Complexity","type":"aside","content":[{"inlineContent":[{"text":"O(","type":"text"},{"inlineContent":[{"text":"n","type":"text"}],"type":"emphasis"},{"text":"), where ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"n"}]},{"type":"text","text":" is the length of the sequence."}],"type":"paragraph"}],"style":"note"}]}],"variants":[{"paths":["\/documentation\/compute\/flattensequence\/reduce(_:_:)-3jrfh"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FlattenSequence\/reduce(_:_:)-3jrfh","interfaceLanguage":"swift"},"metadata":{"roleHeading":"Instance Method","title":"reduce(_:_:)","externalID":"s:STsE6reduceyqd__qd___qd__qd___7ElementQztKXEtKlF::SYNTHESIZED::s:s15FlattenSequenceV","symbolKind":"method","role":"symbol","modules":[{"name":"Compute","relatedModules":["Swift"]}],"extendedModule":"Swift","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"reduce","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Result","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"Result"},{"text":", (","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Result","kind":"typeIdentifier"}]},"sections":[],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/FlattenSequence/Sequence-Implementations":{"abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FlattenSequence\/Sequence-Implementations","type":"topic","kind":"article","role":"collectionGroup","url":"\/documentation\/compute\/flattensequence\/sequence-implementations","title":"Sequence Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence/Element":{"type":"topic","required":true,"abstract":[{"type":"text","text":"A type representing the sequence’s elements."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"symbol","url":"\/documentation\/compute\/sequence\/element","role":"symbol","title":"Element","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/FlattenSequence":{"url":"\/documentation\/compute\/flattensequence","navigatorTitle":[{"kind":"identifier","text":"FlattenSequence"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FlattenSequence","title":"FlattenSequence","kind":"symbol","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"FlattenSequence"}],"type":"topic","abstract":[{"type":"text","text":"A sequence consisting of all the elements contained in each segment"},{"text":" ","type":"text"},{"text":"contained in some ","type":"text"},{"code":"Base","type":"codeVoice"},{"type":"text","text":" sequence."}]},"doc://com.swallow.documentation.Compute/documentation/Compute/FlattenSequence/reduce(_:_:)-3jrfh":{"title":"reduce(_:_:)","role":"symbol","abstract":[{"text":"Returns the result of combining the elements of the sequence using the","type":"text"},{"text":" ","type":"text"},{"text":"given closure.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"reduce","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Result"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"Result"},{"text":", (","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:ST7ElementQa","text":"Element","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Result","kind":"typeIdentifier"}],"type":"topic","url":"\/documentation\/compute\/flattensequence\/reduce(_:_:)-3jrfh","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FlattenSequence\/reduce(_:_:)-3jrfh","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"}}}