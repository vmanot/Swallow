{"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FlattenSequence","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FlattenSequence\/Collection-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FlattenSequence\/Index"]]},"kind":"article","topicSections":[{"identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FlattenSequence\/Index\/!=(_:_:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FlattenSequence\/Index\/==(_:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FlattenSequence\/Index\/==(_:_:)"],"generated":true,"title":"Operators","anchor":"Operators"},{"identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FlattenSequence\/Index\/eraseToAnyEquatable()"],"anchor":"Instance-Methods","generated":true,"title":"Instance Methods"}],"variants":[{"paths":["\/documentation\/compute\/flattensequence\/index\/equatable-implementations"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FlattenSequence\/Index\/Equatable-Implementations","interfaceLanguage":"swift"},"sections":[],"schemaVersion":{"minor":3,"major":0,"patch":0},"metadata":{"title":"Equatable Implementations","modules":[{"name":"Compute"}],"roleHeading":"API Collection","role":"collectionGroup"},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/FlattenSequence/Index/eraseToAnyEquatable()":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FlattenSequence\/Index\/eraseToAnyEquatable()","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"eraseToAnyEquatable","kind":"identifier"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Swallow12AnyEquatableV","text":"AnyEquatable"}],"abstract":[],"role":"symbol","title":"eraseToAnyEquatable()","kind":"symbol","url":"\/documentation\/compute\/flattensequence\/index\/erasetoanyequatable()"},"doc://com.swallow.documentation.Compute/documentation/Compute/FlattenSequence/Collection-Implementations":{"url":"\/documentation\/compute\/flattensequence\/collection-implementations","abstract":[],"kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FlattenSequence\/Collection-Implementations","title":"Collection Implementations","role":"collectionGroup","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/FlattenSequence":{"url":"\/documentation\/compute\/flattensequence","navigatorTitle":[{"kind":"identifier","text":"FlattenSequence"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FlattenSequence","title":"FlattenSequence","kind":"symbol","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"FlattenSequence"}],"type":"topic","abstract":[{"type":"text","text":"A sequence consisting of all the elements contained in each segment"},{"text":" ","type":"text"},{"text":"contained in some ","type":"text"},{"code":"Base","type":"codeVoice"},{"type":"text","text":" sequence."}]},"doc://com.swallow.documentation.Compute/documentation/Compute/FlattenSequence/Index/==(_:)":{"role":"symbol","kind":"symbol","title":"==(_:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FlattenSequence\/Index\/==(_:)","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"==","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ((","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":")","kind":"text"}],"type":"topic","abstract":[],"url":"\/documentation\/compute\/flattensequence\/index\/==(_:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/FlattenSequence/Index":{"url":"\/documentation\/compute\/flattensequence\/index","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Index","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"Index"}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Base"},{"type":"text","text":" conforms to "},{"code":"Collection","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"Base.Element","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Collection"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"type":"topic","title":"FlattenSequence.Index","kind":"symbol","abstract":[{"type":"text","text":"A position in a FlattenCollection"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FlattenSequence\/Index"},"doc://com.swallow.documentation.Compute/documentation/Compute/FlattenSequence/Index/!=(_:_:)":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FlattenSequence\/Index\/!=(_:_:)","type":"topic","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"!=","kind":"identifier"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"abstract":[{"type":"text","text":"Returns a Boolean value indicating whether two values are not equal."}],"role":"symbol","title":"!=(_:_:)","kind":"symbol","url":"\/documentation\/compute\/flattensequence\/index\/!=(_:_:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/FlattenSequence/Index/==(_:_:)":{"role":"symbol","kind":"symbol","title":"==(_:_:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FlattenSequence\/Index\/==(_:_:)","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"==","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"FlattenCollection","kind":"typeIdentifier","preciseIdentifier":"s:s17FlattenCollectiona"},{"text":"<","kind":"text"},{"text":"Base","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"text":"Index","preciseIdentifier":"s:s15FlattenSequenceVsSlRzSl7ElementRpzrlE5IndexV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:s17FlattenCollectiona","text":"FlattenCollection","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Base"},{"kind":"text","text":">."},{"text":"Index","kind":"typeIdentifier","preciseIdentifier":"s:s15FlattenSequenceVsSlRzSl7ElementRpzrlE5IndexV"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"type":"topic","abstract":[{"type":"text","text":"Returns a Boolean value indicating whether two values are equal."}],"url":"\/documentation\/compute\/flattensequence\/index\/==(_:_:)","conformance":{"constraints":[{"type":"codeVoice","code":"Base"},{"text":" conforms to ","type":"text"},{"code":"Collection","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"Base.Element","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Collection"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]}},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"}}}