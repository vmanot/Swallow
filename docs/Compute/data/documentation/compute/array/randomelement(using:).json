{"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Array","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Array\/Collection-Implementations"]]},"sections":[],"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Array\/randomElement(using:)","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"type":"text","text":"Returns a random element of the collection, using the given generator as"},{"type":"text","text":" "},{"type":"text","text":"a source for randomness."}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"randomElement"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"text":"using","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"generator"},{"kind":"text","text":": "},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier","text":"Element","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element"},{"kind":"text","text":"? "},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RandomNumberGenerator","kind":"typeIdentifier","text":"RandomNumberGenerator","preciseIdentifier":"s:SG"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"generator","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The random number generator to use when choosing a"},{"type":"text","text":" "},{"text":"random element.","type":"text"}]}]}]},{"content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A random element from the collection. If the collection is"},{"text":" ","type":"text"},{"type":"text","text":"empty, the method returns "},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"}]}],"kind":"content"},{"kind":"content","content":[{"type":"heading","anchor":"discussion","level":2,"text":"Discussion"},{"inlineContent":[{"text":"Call ","type":"text"},{"type":"codeVoice","code":"randomElement(using:)"},{"text":" to select a random element from an array or","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"another collection when you are using a custom random number generator."},{"type":"text","text":" "},{"type":"text","text":"This example picks a name at random from an array:"}],"type":"paragraph"},{"type":"codeListing","code":["let names = [\"Zoey\", \"Chloe\", \"Amani\", \"Amaia\"]","let randomName = names.randomElement(using: &myGenerator)!","\/\/ randomName == \"Amani\""],"syntax":null},{"type":"aside","name":"Complexity","content":[{"type":"paragraph","inlineContent":[{"text":"O(1) if the collection conforms to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"RandomAccessCollection"},{"text":"; otherwise, O(","type":"text"},{"inlineContent":[{"text":"n","type":"text"}],"type":"emphasis"},{"text":"), where ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"n"}]},{"type":"text","text":" is the length"},{"type":"text","text":" "},{"type":"text","text":"of the collection."}]}],"style":"note"},{"style":"note","type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"The algorithm used to select a random element may change in a","type":"text"},{"type":"text","text":" "},{"text":"future version of Swift. If you’re passing a generator that results in","type":"text"},{"text":" ","type":"text"},{"text":"the same sequence of elements each time you run your program, that","type":"text"},{"type":"text","text":" "},{"type":"text","text":"sequence may change when your program is compiled using a different"},{"type":"text","text":" "},{"text":"version of Swift.","type":"text"}]}],"name":"Note"}]}],"metadata":{"title":"randomElement(using:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"randomElement"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"using"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:ST7ElementQa","text":"Element","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"extendedModule":"Swift","modules":[{"name":"Compute","relatedModules":["Swift"]}],"symbolKind":"method","externalID":"s:SlsE13randomElement5using0B0QzSgqd__z_tSGRd__lF::SYNTHESIZED::s:Sa","role":"symbol"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/array\/randomelement(using:)"]}],"kind":"symbol","references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence/Element":{"type":"topic","required":true,"abstract":[{"type":"text","text":"A type representing the sequence’s elements."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"symbol","url":"\/documentation\/compute\/sequence\/element","role":"symbol","title":"Element","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Array/randomElement(using:)":{"role":"symbol","kind":"symbol","title":"randomElement(using:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"randomElement"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"using","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Element","preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Array\/randomElement(using:)","url":"\/documentation\/compute\/array\/randomelement(using:)","abstract":[{"text":"Returns a random element of the collection, using the given generator as","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"a source for randomness."}]},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/RandomNumberGenerator":{"abstract":[{"text":"A type that provides uniformly distributed random data.","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"RandomNumberGenerator"}],"url":"\/documentation\/compute\/randomnumbergenerator","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RandomNumberGenerator","title":"RandomNumberGenerator","role":"symbol","type":"topic","navigatorTitle":[{"text":"RandomNumberGenerator","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Array/Collection-Implementations":{"title":"Collection Implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Array\/Collection-Implementations","kind":"article","abstract":[],"type":"topic","role":"collectionGroup","url":"\/documentation\/compute\/array\/collection-implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/Array":{"abstract":[{"type":"text","text":"An ordered, random-access collection."}],"type":"topic","title":"Array","kind":"symbol","navigatorTitle":[{"text":"Array","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Array","role":"symbol","url":"\/documentation\/compute\/array","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Array","kind":"identifier"}]}}}