{"schemaVersion":{"patch":0,"major":0,"minor":3},"abstract":[{"text":"Creates an array with the specified capacity, then calls the given","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"closure with a buffer covering the array’s uninitialized memory."}],"sections":[],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"text":"unsafeUninitializedCapacity","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","kind":"typeIdentifier","text":"Int"},{"kind":"text","text":", "},{"text":"initializingWith","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"initializer","kind":"internalParam"},{"text":": (","kind":"text"},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"text":"UnsafeMutableBufferPointer","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableBufferPointer","preciseIdentifier":"s:Sr"},{"text":"<","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:Si","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","text":"Int","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Void","preciseIdentifier":"s:s4Voida"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"}],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"unsafeUninitializedCapacity","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The number of elements to allocate"},{"type":"text","text":" "},{"type":"text","text":"space for in the new array."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A closure that initializes elements and sets the count"},{"type":"text","text":" "},{"text":"of the new array.","type":"text"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Parameters:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"buffer: A buffer covering uninitialized memory with room for the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"specified number of elements."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"initializedCount: The count of initialized elements in the array,","type":"text"},{"text":" ","type":"text"},{"text":"which begins as zero. Set ","type":"text"},{"type":"codeVoice","code":"initializedCount"},{"type":"text","text":" to the number of"},{"type":"text","text":" "},{"type":"text","text":"elements you initialize."}]}]}]}]}],"type":"unorderedList"}],"name":"initializer"}]},{"content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Inside the closure, set the "},{"type":"codeVoice","code":"initializedCount"},{"text":" parameter to the number of","type":"text"},{"type":"text","text":" "},{"text":"elements that are initialized by the closure. The memory in the range","type":"text"},{"type":"text","text":" "},{"code":"buffer[0..<initializedCount]","type":"codeVoice"},{"text":" must be initialized at the end of the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"closure’s execution, and the memory in the range"},{"type":"text","text":" "},{"type":"codeVoice","code":"buffer[initializedCount...]"},{"type":"text","text":" must be uninitialized. This postcondition"},{"text":" ","type":"text"},{"type":"text","text":"must hold even if the "},{"type":"codeVoice","code":"initializer"},{"text":" closure throws an error.","type":"text"}]},{"content":[{"inlineContent":[{"type":"text","text":"While the resulting array may have a capacity larger than the"},{"type":"text","text":" "},{"type":"text","text":"requested amount, the buffer passed to the closure will cover exactly"},{"text":" ","type":"text"},{"text":"the requested number of elements.","type":"text"}],"type":"paragraph"}],"type":"aside","style":"note","name":"Note"}],"kind":"content"}],"variants":[{"paths":["\/documentation\/compute\/array\/init(unsafeuninitializedcapacity:initializingwith:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Array\/init(unsafeUninitializedCapacity:initializingWith:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Array"]]},"metadata":{"extendedModule":"Swift","roleHeading":"Initializer","role":"symbol","symbolKind":"init","title":"init(unsafeUninitializedCapacity:initializingWith:)","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"unsafeUninitializedCapacity"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":", "},{"text":"initializingWith","kind":"externalParam"},{"kind":"text","text":": ("},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UnsafeMutableBufferPointer","kind":"typeIdentifier","preciseIdentifier":"s:Sr"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">, "},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"}],"modules":[{"name":"Compute","relatedModules":["Swift"]}],"externalID":"s:Sa27unsafeUninitializedCapacity16initializingWithSayxGSi_ySryxGz_SiztKXEtKcfc"},"kind":"symbol","references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Array/init(unsafeUninitializedCapacity:initializingWith:)":{"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Array\/init(unsafeUninitializedCapacity:initializingWith:)","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"text":"unsafeUninitializedCapacity","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":", "},{"text":"initializingWith","kind":"externalParam"},{"kind":"text","text":": ("},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sr","text":"UnsafeMutableBufferPointer"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Element"},{"text":">, ","kind":"text"},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") "},{"text":"rethrows","kind":"keyword"}],"kind":"symbol","title":"init(unsafeUninitializedCapacity:initializingWith:)","abstract":[{"text":"Creates an array with the specified capacity, then calls the given","type":"text"},{"type":"text","text":" "},{"type":"text","text":"closure with a buffer covering the array’s uninitialized memory."}],"type":"topic","url":"\/documentation\/compute\/array\/init(unsafeuninitializedcapacity:initializingwith:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeMutableBufferPointer":{"kind":"symbol","url":"\/documentation\/compute\/unsafemutablebufferpointer","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"UnsafeMutableBufferPointer","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"UnsafeMutableBufferPointer"}],"abstract":[{"type":"text","text":"A nonowning collection interface to a buffer of mutable"},{"text":" ","type":"text"},{"text":"elements stored contiguously in memory.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableBufferPointer","title":"UnsafeMutableBufferPointer","type":"topic","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","abstract":[{"type":"text","text":"A signed integer value type."}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Int","kind":"identifier"}],"navigatorTitle":[{"text":"Int","kind":"identifier"}],"title":"Int","url":"\/documentation\/compute\/int","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Void":{"abstract":[{"text":"The return type of functions that don’t explicitly specify a return type,","type":"text"},{"text":" ","type":"text"},{"text":"that is, an empty tuple ","type":"text"},{"type":"codeVoice","code":"()"},{"type":"text","text":"."}],"type":"topic","title":"Void","url":"\/documentation\/compute\/void","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Void"}],"navigatorTitle":[{"text":"Void","kind":"identifier"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Void"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Array":{"abstract":[{"type":"text","text":"An ordered, random-access collection."}],"type":"topic","title":"Array","kind":"symbol","navigatorTitle":[{"text":"Array","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Array","role":"symbol","url":"\/documentation\/compute\/array","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Array","kind":"identifier"}]}}}