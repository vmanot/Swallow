{"metadata":{"title":"replaceSubrange(_:with:)","role":"symbol","externalID":"s:Sa15replaceSubrange_4withySnySiG_qd__nt7ElementQyd__RszSlRd__lF","modules":[{"name":"Compute","relatedModules":["Swift"]}],"roleHeading":"Instance Method","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"replaceSubrange","kind":"identifier"},{"kind":"text","text":"<"},{"text":"C","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","text":"Range"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"C"},{"text":")","kind":"text"}],"extendedModule":"Swift"},"kind":"symbol","variants":[{"paths":["\/documentation\/compute\/array\/replacesubrange(_:with:)-6a2ai"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Array","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Array\/RangeReplaceableCollection-Implementations"]]},"abstract":[{"type":"text","text":"Replaces a range of elements with the elements in the specified"},{"type":"text","text":" "},{"type":"text","text":"collection."}],"sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Array\/replaceSubrange(_:with:)-6a2ai"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"mutating","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"replaceSubrange"},{"kind":"text","text":"<"},{"text":"C","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"subrange"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Range","preciseIdentifier":"s:Sn","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Range"},{"kind":"text","text":"<"},{"text":"Int","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"with"},{"kind":"text","text":" "},{"kind":"internalParam","text":"newElements"},{"text":": ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"C"},{"text":".","kind":"text"},{"preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","text":"Element"},{"kind":"text","text":", "},{"text":"C","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"text":"Collection","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection","preciseIdentifier":"s:Sl"}]}]},{"kind":"parameters","parameters":[{"name":"subrange","content":[{"inlineContent":[{"type":"text","text":"The subrange of the array to replace. The start and end of"},{"text":" ","type":"text"},{"type":"text","text":"a subrange must be valid indices of the array."}],"type":"paragraph"}]},{"name":"newElements","content":[{"type":"paragraph","inlineContent":[{"text":"The new elements to add to the array.","type":"text"}]}]}]},{"content":[{"text":"Discussion","anchor":"discussion","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"This method has the effect of removing the specified range of elements"},{"text":" ","type":"text"},{"type":"text","text":"from the array and inserting the new elements at the same location. The"},{"text":" ","type":"text"},{"text":"number of new elements need not match the number of elements being","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"removed."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"In this example, three elements in the middle of an array of integers are"},{"type":"text","text":" "},{"text":"replaced by the five elements of a ","type":"text"},{"code":"Repeated<Int>","type":"codeVoice"},{"type":"text","text":" instance."}],"type":"paragraph"},{"syntax":null,"type":"codeListing","code":[" var nums = [10, 20, 30, 40, 50]"," nums.replaceSubrange(1...3, with: repeatElement(1, count: 5))"," print(nums)"," \/\/ Prints \"[10, 1, 1, 1, 1, 1, 50]\""]},{"inlineContent":[{"type":"text","text":"If you pass a zero-length range as the "},{"type":"codeVoice","code":"subrange"},{"type":"text","text":" parameter, this method"},{"text":" ","type":"text"},{"type":"text","text":"inserts the elements of "},{"code":"newElements","type":"codeVoice"},{"type":"text","text":" at "},{"type":"codeVoice","code":"subrange.startIndex"},{"type":"text","text":". Calling"},{"type":"text","text":" "},{"text":"the ","type":"text"},{"type":"codeVoice","code":"insert(contentsOf:at:)"},{"text":" method instead is preferred.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"Likewise, if you pass a zero-length collection as the ","type":"text"},{"code":"newElements","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"parameter, this method removes the elements in the given subrange"},{"type":"text","text":" "},{"text":"without replacement. Calling the ","type":"text"},{"code":"removeSubrange(_:)","type":"codeVoice"},{"type":"text","text":" method instead is"},{"type":"text","text":" "},{"text":"preferred.","type":"text"}],"type":"paragraph"},{"type":"aside","name":"Complexity","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"O("},{"type":"emphasis","inlineContent":[{"text":"n","type":"text"}]},{"text":" + ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"m","type":"text"}]},{"type":"text","text":"), where "},{"type":"emphasis","inlineContent":[{"type":"text","text":"n"}]},{"text":" is length of the array and","type":"text"},{"text":" ","type":"text"},{"inlineContent":[{"type":"text","text":"m"}],"type":"emphasis"},{"text":" is the length of ","type":"text"},{"type":"codeVoice","code":"newElements"},{"type":"text","text":". If the call to this method simply"},{"type":"text","text":" "},{"type":"text","text":"appends the contents of "},{"code":"newElements","type":"codeVoice"},{"text":" to the array, this method is","type":"text"},{"type":"text","text":" "},{"type":"text","text":"equivalent to "},{"type":"codeVoice","code":"append(contentsOf:)"},{"text":".","type":"text"}]}],"style":"note"}],"kind":"content"}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Array":{"abstract":[{"type":"text","text":"An ordered, random-access collection."}],"type":"topic","title":"Array","kind":"symbol","navigatorTitle":[{"text":"Array","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Array","role":"symbol","url":"\/documentation\/compute\/array","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Array","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Array/replaceSubrange(_:with:)-6a2ai":{"role":"symbol","url":"\/documentation\/compute\/array\/replacesubrange(_:with:)-6a2ai","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"replaceSubrange"},{"text":"<","kind":"text"},{"text":"C","kind":"genericParameter"},{"kind":"text","text":">("},{"preciseIdentifier":"s:Sn","kind":"typeIdentifier","text":"Range"},{"text":"<","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"text":"C","kind":"typeIdentifier"},{"kind":"text","text":")"}],"type":"topic","title":"replaceSubrange(_:with:)","kind":"symbol","abstract":[{"type":"text","text":"Replaces a range of elements with the elements in the specified"},{"type":"text","text":" "},{"text":"collection.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Array\/replaceSubrange(_:with:)-6a2ai"},"doc://com.swallow.documentation.Compute/documentation/Compute/Collection":{"kind":"symbol","role":"symbol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Collection"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection","url":"\/documentation\/compute\/collection","abstract":[{"type":"text","text":"A sequence whose elements can be traversed multiple times,"},{"text":" ","type":"text"},{"text":"nondestructively, and accessed by an indexed subscript.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Collection"}],"title":"Collection"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","abstract":[{"type":"text","text":"A signed integer value type."}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Int","kind":"identifier"}],"navigatorTitle":[{"text":"Int","kind":"identifier"}],"title":"Int","url":"\/documentation\/compute\/int","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence/Element":{"type":"topic","required":true,"abstract":[{"type":"text","text":"A type representing the sequenceâ€™s elements."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"symbol","url":"\/documentation\/compute\/sequence\/element","role":"symbol","title":"Element","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Range":{"kind":"symbol","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Range","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Range","url":"\/documentation\/compute\/range","abstract":[{"text":"A half-open interval from a lower bound up to, but not including, an upper","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"bound."}],"navigatorTitle":[{"text":"Range","kind":"identifier"}],"title":"Range"},"doc://com.swallow.documentation.Compute/documentation/Compute/Array/RangeReplaceableCollection-Implementations":{"role":"collectionGroup","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Array\/RangeReplaceableCollection-Implementations","type":"topic","kind":"article","title":"RangeReplaceableCollection Implementations","url":"\/documentation\/compute\/array\/rangereplaceablecollection-implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"}}}