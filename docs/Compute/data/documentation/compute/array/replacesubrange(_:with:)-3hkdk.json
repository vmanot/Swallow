{"schemaVersion":{"major":0,"minor":3,"patch":0},"variants":[{"paths":["\/documentation\/compute\/array\/replacesubrange(_:with:)-3hkdk"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"Replaces the specified subrange of elements with the given collection."}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Array\/replaceSubrange(_:with:)-3hkdk"},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Array","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Array\/RangeReplaceableCollection-Implementations"]]},"kind":"symbol","primaryContentSections":[{"declarations":[{"tokens":[{"text":"mutating","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"replaceSubrange","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"C"},{"kind":"text","text":">("},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"subrange","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Range","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Range","preciseIdentifier":"s:Sn"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:Sl5IndexQa","text":"Index","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/Index","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"with"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"newElements"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"C"},{"text":") ","kind":"text"},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"text":"C","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"text":"Collection","preciseIdentifier":"s:Sl","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:ST7ElementQa"},{"text":" == ","kind":"text"},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":"."},{"text":"Element","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","preciseIdentifier":"s:ST7ElementQa"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"name":"subrange","content":[{"type":"paragraph","inlineContent":[{"text":"The subrange of the collection to replace. The bounds of","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the range must be valid indices of the collection."}]}]},{"content":[{"inlineContent":[{"text":"The new elements to add to the collection.","type":"text"}],"type":"paragraph"}],"name":"newElements"}],"kind":"parameters"},{"content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method has the effect of removing the specified range of elements"},{"text":" ","type":"text"},{"type":"text","text":"from the collection and inserting the new elements at the same location."},{"type":"text","text":" "},{"type":"text","text":"The number of new elements need not match the number of elements being"},{"type":"text","text":" "},{"type":"text","text":"removed."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"In this example, three elements in the middle of an array of integers are"},{"type":"text","text":" "},{"text":"replaced by the five elements of a ","type":"text"},{"code":"Repeated<Int>","type":"codeVoice"},{"text":" instance.","type":"text"}]},{"syntax":null,"code":[" var nums = [10, 20, 30, 40, 50]"," nums.replaceSubrange(1...3, with: repeatElement(1, count: 5))"," print(nums)"," \/\/ Prints \"[10, 1, 1, 1, 1, 1, 50]\""],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you pass a zero-length range as the "},{"type":"codeVoice","code":"subrange"},{"text":" parameter, this method","type":"text"},{"text":" ","type":"text"},{"text":"inserts the elements of ","type":"text"},{"type":"codeVoice","code":"newElements"},{"text":" at ","type":"text"},{"code":"subrange.startIndex","type":"codeVoice"},{"type":"text","text":". Calling"},{"type":"text","text":" "},{"text":"the ","type":"text"},{"type":"codeVoice","code":"insert(contentsOf:at:)"},{"type":"text","text":" method instead is preferred."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Likewise, if you pass a zero-length collection as the "},{"type":"codeVoice","code":"newElements"},{"type":"text","text":" "},{"text":"parameter, this method removes the elements in the given subrange","type":"text"},{"text":" ","type":"text"},{"text":"without replacement. Calling the ","type":"text"},{"code":"removeSubrange(_:)","type":"codeVoice"},{"type":"text","text":" method instead is"},{"text":" ","type":"text"},{"text":"preferred.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Calling this method may invalidate any existing indices for use with this"},{"text":" ","type":"text"},{"text":"collection.","type":"text"}]},{"name":"Complexity","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"O("},{"type":"emphasis","inlineContent":[{"text":"n","type":"text"}]},{"type":"text","text":" + "},{"type":"emphasis","inlineContent":[{"type":"text","text":"m"}]},{"type":"text","text":"), where "},{"inlineContent":[{"text":"n","type":"text"}],"type":"emphasis"},{"text":" is length of this collection and","type":"text"},{"type":"text","text":" "},{"inlineContent":[{"text":"m","type":"text"}],"type":"emphasis"},{"text":" is the length of ","type":"text"},{"type":"codeVoice","code":"newElements"},{"type":"text","text":". If the call to this method simply"},{"text":" ","type":"text"},{"type":"text","text":"appends the contents of "},{"code":"newElements","type":"codeVoice"},{"text":" to the collection, this method is","type":"text"},{"text":" ","type":"text"},{"text":"equivalent to ","type":"text"},{"code":"append(contentsOf:)","type":"codeVoice"},{"type":"text","text":"."}]}],"style":"note"}],"kind":"content"}],"metadata":{"roleHeading":"Instance Method","extendedModule":"Swift","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"replaceSubrange","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"C"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","text":"Range"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Index","kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa"},{"kind":"text","text":">, "},{"text":"with","kind":"externalParam"},{"kind":"text","text":": "},{"text":"C","kind":"typeIdentifier"},{"kind":"text","text":")"}],"title":"replaceSubrange(_:with:)","platforms":[],"externalID":"s:SmsE15replaceSubrange_4withySny5IndexQzG_qd__tSlRd__7ElementQyd__AFRtzlF::SYNTHESIZED::s:Sa","modules":[{"relatedModules":["Swift"],"name":"Compute"}],"role":"symbol","symbolKind":"method"},"sections":[],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Collection/Index":{"url":"\/documentation\/compute\/collection\/index","required":true,"role":"symbol","title":"Index","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Index","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"Comparable","preciseIdentifier":"s:SL","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"A type that represents a position in the collection."}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/Index","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Array":{"abstract":[{"type":"text","text":"An ordered, random-access collection."}],"type":"topic","title":"Array","kind":"symbol","navigatorTitle":[{"text":"Array","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Array","role":"symbol","url":"\/documentation\/compute\/array","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Array","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Array/RangeReplaceableCollection-Implementations":{"role":"collectionGroup","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Array\/RangeReplaceableCollection-Implementations","type":"topic","kind":"article","title":"RangeReplaceableCollection Implementations","url":"\/documentation\/compute\/array\/rangereplaceablecollection-implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/Range":{"kind":"symbol","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Range","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Range","url":"\/documentation\/compute\/range","abstract":[{"text":"A half-open interval from a lower bound up to, but not including, an upper","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"bound."}],"navigatorTitle":[{"text":"Range","kind":"identifier"}],"title":"Range"},"doc://com.swallow.documentation.Compute/documentation/Compute/Array/replaceSubrange(_:with:)-3hkdk":{"title":"replaceSubrange(_:with:)","kind":"symbol","abstract":[{"type":"text","text":"Replaces the specified subrange of elements with the given collection."}],"role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"replaceSubrange"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"C"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:Sn","text":"Range","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Index","kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"with"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"C"},{"text":")","kind":"text"}],"deprecated":true,"url":"\/documentation\/compute\/array\/replacesubrange(_:with:)-3hkdk","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Array\/replaceSubrange(_:with:)-3hkdk"},"doc://com.swallow.documentation.Compute/documentation/Compute/Collection":{"kind":"symbol","role":"symbol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Collection"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection","url":"\/documentation\/compute\/collection","abstract":[{"type":"text","text":"A sequence whose elements can be traversed multiple times,"},{"text":" ","type":"text"},{"text":"nondestructively, and accessed by an indexed subscript.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Collection"}],"title":"Collection"},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence/Element":{"type":"topic","required":true,"abstract":[{"type":"text","text":"A type representing the sequence’s elements."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"symbol","url":"\/documentation\/compute\/sequence\/element","role":"symbol","title":"Element","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"}}}