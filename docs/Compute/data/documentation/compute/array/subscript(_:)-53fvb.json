{"kind":"symbol","sections":[],"metadata":{"extendedModule":"Swift","symbolKind":"subscript","modules":[{"relatedModules":["Swift"],"name":"Compute"}],"title":"subscript(_:)","externalID":"s:Says10ArraySliceVyxGSnySiGcip","fragments":[{"kind":"keyword","text":"subscript"},{"text":"(","kind":"text"},{"text":"Range","kind":"typeIdentifier","preciseIdentifier":"s:Sn"},{"kind":"text","text":"<"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"ArraySlice","kind":"typeIdentifier","preciseIdentifier":"s:s10ArraySliceV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Element"},{"text":">","kind":"text"}],"roleHeading":"Instance Subscript","role":"symbol"},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"subscript"},{"text":"(","kind":"text"},{"kind":"internalParam","text":"bounds"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Range","kind":"typeIdentifier","preciseIdentifier":"s:Sn","text":"Range"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int"},{"text":">) -> ","kind":"text"},{"text":"ArraySlice","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArraySlice","preciseIdentifier":"s:s10ArraySliceV"},{"text":"<","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":"> { ","kind":"text"},{"kind":"keyword","text":"get"},{"kind":"text","text":" "},{"kind":"keyword","text":"set"},{"kind":"text","text":" }"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"bounds","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A range of integers. The bounds of the range must be"},{"type":"text","text":" "},{"type":"text","text":"valid indices of the array."}]}]}]},{"content":[{"anchor":"overview","text":"Overview","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The returned "},{"type":"codeVoice","code":"ArraySlice"},{"type":"text","text":" instance uses the same indices for the same"},{"type":"text","text":" "},{"text":"elements as the original array. In particular, that slice, unlike an","type":"text"},{"text":" ","type":"text"},{"text":"array, may have a nonzero ","type":"text"},{"code":"startIndex","type":"codeVoice"},{"type":"text","text":" and an "},{"type":"codeVoice","code":"endIndex"},{"type":"text","text":" that is not"},{"type":"text","text":" "},{"type":"text","text":"equal to "},{"type":"codeVoice","code":"count"},{"text":". Always use the slice’s ","type":"text"},{"type":"codeVoice","code":"startIndex"},{"type":"text","text":" and "},{"code":"endIndex","type":"codeVoice"},{"text":" ","type":"text"},{"text":"properties instead of assuming that its indices start or end at a","type":"text"},{"type":"text","text":" "},{"text":"particular value.","type":"text"}]},{"inlineContent":[{"type":"text","text":"This example demonstrates getting a slice of an array of strings, finding"},{"type":"text","text":" "},{"text":"the index of one of the strings in the slice, and then using that index","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"in the original array."}],"type":"paragraph"},{"code":["let streets = [\"Adams\", \"Bryant\", \"Channing\", \"Douglas\", \"Evarts\"]","let streetsSlice = streets[2 ..< streets.endIndex]","print(streetsSlice)","\/\/ Prints \"[\"Channing\", \"Douglas\", \"Evarts\"]\"","","let i = streetsSlice.firstIndex(of: \"Evarts\")    \/\/ 4","print(streets[i!])","\/\/ Prints \"Evarts\""],"syntax":null,"type":"codeListing"}],"kind":"content"}],"abstract":[{"text":"Accesses a contiguous subrange of the array’s elements.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Array","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Array\/RandomAccessCollection-Implementations"]]},"variants":[{"paths":["\/documentation\/compute\/array\/subscript(_:)-53fvb"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Array\/subscript(_:)-53fvb","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"patch":0,"major":0},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","abstract":[{"type":"text","text":"A signed integer value type."}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Int","kind":"identifier"}],"navigatorTitle":[{"text":"Int","kind":"identifier"}],"title":"Int","url":"\/documentation\/compute\/int","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Array/subscript(_:)-53fvb":{"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Array\/subscript(_:)-53fvb","abstract":[{"text":"Accesses a contiguous subrange of the array’s elements.","type":"text"}],"type":"topic","fragments":[{"kind":"keyword","text":"subscript"},{"text":"(","kind":"text"},{"text":"Range","preciseIdentifier":"s:Sn","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"preciseIdentifier":"s:s10ArraySliceV","text":"ArraySlice","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"kind":"text","text":">"}],"url":"\/documentation\/compute\/array\/subscript(_:)-53fvb","title":"subscript(_:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/Range":{"kind":"symbol","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Range","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Range","url":"\/documentation\/compute\/range","abstract":[{"text":"A half-open interval from a lower bound up to, but not including, an upper","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"bound."}],"navigatorTitle":[{"text":"Range","kind":"identifier"}],"title":"Range"},"doc://com.swallow.documentation.Compute/documentation/Compute/Array":{"abstract":[{"type":"text","text":"An ordered, random-access collection."}],"type":"topic","title":"Array","kind":"symbol","navigatorTitle":[{"text":"Array","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Array","role":"symbol","url":"\/documentation\/compute\/array","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Array","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/ArraySlice":{"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArraySlice","role":"symbol","abstract":[{"type":"text","text":"A slice of an "},{"code":"Array","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"ContiguousArray"},{"text":", or ","type":"text"},{"type":"codeVoice","code":"ArraySlice"},{"text":" instance.","type":"text"}],"title":"ArraySlice","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ArraySlice"}],"navigatorTitle":[{"kind":"identifier","text":"ArraySlice"}],"url":"\/documentation\/compute\/arrayslice","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/Array/RandomAccessCollection-Implementations":{"role":"collectionGroup","kind":"article","title":"RandomAccessCollection Implementations","url":"\/documentation\/compute\/array\/randomaccesscollection-implementations","abstract":[],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Array\/RandomAccessCollection-Implementations"}}}