{"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Array\/sort()"},"abstract":[{"text":"Sorts the collection in place.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Array","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Array\/MutableCollection-Implementations"]]},"metadata":{"extendedModule":"Swift","symbolKind":"method","role":"symbol","title":"sort()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"sort"},{"text":"()","kind":"text"}],"conformance":{"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"code":"RandomAccessCollection","type":"codeVoice"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Element"},{"text":" conforms to ","type":"text"},{"code":"Comparable","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"modules":[{"name":"Compute","relatedModules":["Swift"]}],"externalID":"s:SMsSkRzSL7ElementSTRpzrlE4sortyyF::SYNTHESIZED::s:Sa","roleHeading":"Instance Method"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/array\/sort()"]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"mutating"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"sort"},{"text":"()","kind":"text"}]}]},{"content":[{"text":"Discussion","type":"heading","anchor":"discussion","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can sort any mutable collection of elements that conform to the"},{"text":" ","type":"text"},{"code":"Comparable","type":"codeVoice"},{"text":" protocol by calling this method. Elements are sorted in","type":"text"},{"type":"text","text":" "},{"type":"text","text":"ascending order."}]},{"inlineContent":[{"type":"text","text":"Here’s an example of sorting a list of students’ names. Strings in Swift"},{"text":" ","type":"text"},{"text":"conform to the ","type":"text"},{"code":"Comparable","type":"codeVoice"},{"text":" protocol, so the names are sorted in","type":"text"},{"type":"text","text":" "},{"text":"ascending order according to the less-than operator (","type":"text"},{"code":"<","type":"codeVoice"},{"type":"text","text":")."}],"type":"paragraph"},{"syntax":null,"type":"codeListing","code":["var students = [\"Kofi\", \"Abena\", \"Peter\", \"Kweku\", \"Akosua\"]","students.sort()","print(students)","\/\/ Prints \"[\"Abena\", \"Akosua\", \"Kofi\", \"Kweku\", \"Peter\"]\""]},{"type":"paragraph","inlineContent":[{"text":"To sort the elements of your collection in descending order, pass the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"greater-than operator ("},{"type":"codeVoice","code":">"},{"type":"text","text":") to the "},{"type":"codeVoice","code":"sort(by:)"},{"text":" method.","type":"text"}]},{"syntax":null,"type":"codeListing","code":["students.sort(by: >)","print(students)","\/\/ Prints \"[\"Peter\", \"Kweku\", \"Kofi\", \"Akosua\", \"Abena\"]\""]},{"inlineContent":[{"text":"The sorting algorithm is guaranteed to be stable. A stable sort","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"preserves the relative order of elements that compare as equal."}],"type":"paragraph"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"O("},{"inlineContent":[{"text":"n","type":"text"}],"type":"emphasis"},{"type":"text","text":" log "},{"type":"emphasis","inlineContent":[{"type":"text","text":"n"}]},{"text":"), where ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"n"}]},{"text":" is the length of the collection.","type":"text"}]}],"style":"note","name":"Complexity","type":"aside"}],"kind":"content"}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Array":{"abstract":[{"type":"text","text":"An ordered, random-access collection."}],"type":"topic","title":"Array","kind":"symbol","navigatorTitle":[{"text":"Array","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Array","role":"symbol","url":"\/documentation\/compute\/array","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Array","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Array/MutableCollection-Implementations":{"url":"\/documentation\/compute\/array\/mutablecollection-implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Array\/MutableCollection-Implementations","title":"MutableCollection Implementations","kind":"article","role":"collectionGroup","type":"topic","abstract":[]},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Array/sort()":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Array\/sort()","url":"\/documentation\/compute\/array\/sort()","role":"symbol","kind":"symbol","title":"sort()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"sort","kind":"identifier"},{"text":"()","kind":"text"}],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"code":"RandomAccessCollection","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Comparable"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"type":"topic","abstract":[{"text":"Sorts the collection in place.","type":"text"}]}}}