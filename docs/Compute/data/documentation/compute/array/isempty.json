{"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"isEmpty","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bool","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":" { "},{"kind":"keyword","text":"get"},{"kind":"text","text":" }"}]}],"kind":"declarations"},{"content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"When you need to check whether your collection is empty, use the"},{"type":"text","text":" "},{"type":"codeVoice","code":"isEmpty"},{"type":"text","text":" property instead of checking that the "},{"type":"codeVoice","code":"count"},{"text":" property is","type":"text"},{"type":"text","text":" "},{"type":"text","text":"equal to zero. For collections that donâ€™t conform to"},{"type":"text","text":" "},{"code":"RandomAccessCollection","type":"codeVoice"},{"text":", accessing the ","type":"text"},{"type":"codeVoice","code":"count"},{"type":"text","text":" property iterates"},{"text":" ","type":"text"},{"type":"text","text":"through the elements of the collection."}]},{"code":["let horseName = \"Silver\"","if horseName.isEmpty {","    print(\"My horse has no name.\")","} else {","    print(\"Hi ho, \\(horseName)!\")","}","\/\/ Prints \"Hi ho, Silver!\")"],"syntax":null,"type":"codeListing"},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"text":"O(1)","type":"text"}]}],"type":"aside","name":"Complexity"}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Array","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Array\/Collection-Implementations"]]},"sections":[],"metadata":{"extendedModule":"Swift","role":"symbol","symbolKind":"property","title":"isEmpty","modules":[{"relatedModules":["Swift"],"name":"Compute"}],"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isEmpty"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"roleHeading":"Instance Property","externalID":"s:SlsE7isEmptySbvp::SYNTHESIZED::s:Sa"},"kind":"symbol","variants":[{"paths":["\/documentation\/compute\/array\/isempty"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"abstract":[{"text":"A Boolean value indicating whether the collection is empty.","type":"text"}],"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Array\/isEmpty","interfaceLanguage":"swift"},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Array/isEmpty":{"role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"isEmpty","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"title":"isEmpty","url":"\/documentation\/compute\/array\/isempty","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Array\/isEmpty","abstract":[{"text":"A Boolean value indicating whether the collection is empty.","type":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Array/Collection-Implementations":{"title":"Collection Implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Array\/Collection-Implementations","kind":"article","abstract":[],"type":"topic","role":"collectionGroup","url":"\/documentation\/compute\/array\/collection-implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/Bool":{"url":"\/documentation\/compute\/bool","role":"symbol","title":"Bool","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Bool","kind":"identifier"}],"abstract":[{"type":"text","text":"A value type whose instances are either "},{"type":"codeVoice","code":"true"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"false"},{"text":".","type":"text"}],"navigatorTitle":[{"text":"Bool","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bool","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Array":{"abstract":[{"type":"text","text":"An ordered, random-access collection."}],"type":"topic","title":"Array","kind":"symbol","navigatorTitle":[{"text":"Array","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Array","role":"symbol","url":"\/documentation\/compute\/array","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Array","kind":"identifier"}]}}}