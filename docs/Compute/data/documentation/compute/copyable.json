{"sections":[],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"text":"A type whose values can be implicitly or explicitly copied.","type":"text"}],"relationshipsSections":[{"title":"Conforming Types","identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyBidirectionalCollection","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyCollection","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyHashable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyIndex","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyIterator","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyKeyPath","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyRandomAccessCollection","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnySequence","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Array","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArraySlice","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArrayTree","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArrayTreeChildren","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AutoreleasingUnsafeMutablePointer","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bag","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BidirectionalMap","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bool","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BranchingArray","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BranchingDictionary","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CVaListPointer","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Character","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ClosedRange","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ClosedRange\/Index","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CollectionDifference","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CollectionDifference\/Change","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CollectionDifference\/Index","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CollectionOfOne","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CollectionOfOne\/Iterator","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ContiguousArray","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/DefaultIndices","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/DefaultStringInterpolation","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary\/Index","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary\/Iterator","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary\/Keys-swift.struct","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary\/Values-swift.struct","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/DiscontiguousSlice","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/DiscontiguousSlice\/Index","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Double","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/DropFirstSequence","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/DropWhileSequence","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/DropWhileSequence\/Iterator","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Duration","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/EmptyCollection","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/EmptyCollection\/Iterator","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/EnumeratedSequence","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/EnumeratedSequence\/Iterator","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FlattenSequence","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FlattenSequence\/Index","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FlattenSequence\/Iterator","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float16","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPointClassification","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPointRoundingRule","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPointSign","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Hasher","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/IndexingIterator","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int\/Words-swift.struct","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int128","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/Words-swift.struct","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int32","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int32\/Words-swift.struct","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int64","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int64\/Words-swift.struct","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8\/Words-swift.struct","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/IteratorSequence","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/JoinedSequence","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/JoinedSequence\/Iterator","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/KeyValuePairs","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyDropWhileSequence","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyDropWhileSequence\/Iterator","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyFilterSequence","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyFilterSequence\/Iterator","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyMapSequence","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyMapSequence\/Iterator","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyPrefixWhileSequence","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyPrefixWhileSequence\/Index","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyPrefixWhileSequence\/Iterator","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazySequence","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LinkedList","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ManagedBufferPointer","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Matrix","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/MergeSplitSequence","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Mirror","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Mirror\/DisplayStyle-swift.enum","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Never","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ObjectIdentifier","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/OpaquePointer","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Optional","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/PartialRangeFrom","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/PartialRangeThrough","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/PartialRangeUpTo","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/PrefixSequence","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/PrefixSequence\/Iterator","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/PriorityQueue","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Queue","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Range","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RangeSet","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RangeSet\/Ranges-swift.struct","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RecursiveArray","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ReferenceTree","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Repeated","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Result","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ReversedCollection","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ReversedCollection\/Index","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ReversedCollection\/Iterator","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD16","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD2","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD3","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD4","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD64","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD8","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Set","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Set\/Index","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Set\/Iterator","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/StaticBigInt","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/StaticString","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/StrideThrough","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/StrideThroughIterator","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/StrideTo","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/StrideToIterator","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/Index","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/UTF16View","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/UTF8View","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/UnicodeScalarView","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Substring","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Substring\/UTF16View","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Substring\/UTF8View","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Substring\/UnicodeScalarView","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SystemRandomNumberGenerator","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/TreeChains","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/TreeIndexPath","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt\/Words-swift.struct","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt128","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt128\/Words-swift.struct","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/Words-swift.struct","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt32","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt32\/Words-swift.struct","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/Words-swift.struct","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8\/Words-swift.struct","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnboundedRange_","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Unicode\/ASCII","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Unicode\/ASCII\/Parser","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Unicode\/GeneralCategory","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Unicode\/NumericType","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Unicode\/Scalar","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Unicode\/Scalar\/UTF16View","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Unicode\/Scalar\/UTF8View","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Unicode\/UTF16","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Unicode\/UTF16\/ForwardParser","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Unicode\/UTF16\/ReverseParser","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Unicode\/UTF32","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Unicode\/UTF32\/Parser","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Unicode\/UTF8","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Unicode\/UTF8\/ForwardParser","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Unicode\/UTF8\/ReverseParser","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnicodeDecodingResult","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Unmanaged","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeBufferPointer","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeBufferPointer\/Iterator","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableBufferPointer","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutablePointer","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableRawBufferPointer","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableRawPointer","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafePointer","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeRawBufferPointer","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeRawBufferPointer\/Iterator","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeRawPointer","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Zip2Sequence","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Zip2Sequence\/Iterator","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/simd-swift.module.extension\/simd_quatd","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/simd-swift.module.extension\/simd_quatf"],"type":"conformingTypes","kind":"relationships"}],"metadata":{"symbolKind":"protocol","role":"symbol","roleHeading":"Protocol","externalID":"s:s8CopyableP","modules":[{"name":"Compute"}],"navigatorTitle":[{"text":"Copyable","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Copyable"}],"title":"Copyable"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Copyable"},"variants":[{"paths":["\/documentation\/compute\/copyable"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Copyable","kind":"identifier"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"overview","text":"Overview"},{"inlineContent":[{"text":"Conforming to this protocol indicates that a type’s value can be copied;","type":"text"},{"type":"text","text":" "},{"text":"this protocol doesn’t have any required methods or properties.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"You don’t generally need to write an explicit conformance to "},{"code":"Copyable","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"The following places implicitly include ","type":"text"},{"code":"Copyable","type":"codeVoice"},{"type":"text","text":" conformance:"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Structure declarations,","type":"text"},{"type":"text","text":" "},{"text":"unless it has a noncopyable stored property","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Enumeration declarations,"},{"type":"text","text":" "},{"type":"text","text":"unless it has a case whose associated value isn’t copyable"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Class declarations"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Actor declarations"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Protocol declarations","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Associated type declarations"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"Self"},{"text":" type in a protocol extension","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"In an extension, the generic parameters of the type being extended","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A class or actor can contain noncopyable stored properties,"},{"text":" ","type":"text"},{"type":"text","text":"while still being copyable itself —"},{"text":" ","type":"text"},{"type":"text","text":"classes and actors are copied by retaining and releasing references."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"In a declaration that includes generic type parameters,"},{"type":"text","text":" "},{"type":"text","text":"each generic type parameter implicitly includes "},{"code":"Copyable","type":"codeVoice"},{"text":" ","type":"text"},{"text":"in its list of requirements.","type":"text"},{"type":"text","text":" "},{"text":"Metatypes and tuples of copyable types are also implicitly copyable,","type":"text"},{"text":" ","type":"text"},{"text":"as are boxed protocol types.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"For example,"},{"text":" ","type":"text"},{"type":"text","text":"all of the following pairs of declarations are equivalent:"}]},{"code":["struct MyStructure { }","struct MyStructere: Copyable { }","","protocol MyProtocol { }","protocol MyProtocol: Copyable { }","","protocol AnotherProtocol {","    associatedtype MyType","    associatedtype MyType: Copyable","}","","func genericFunction<T>(t: T) { }","func genericFunction<T>(t: T) where T: Copyable { }","","let x: any MyProtocol","let x: any MyProtocol & Copyable"],"syntax":null,"type":"codeListing"},{"inlineContent":[{"type":"text","text":"To suppress an implicit conformance to "},{"type":"codeVoice","code":"Copyable"},{"text":" you write ","type":"text"},{"type":"codeVoice","code":"~Copyable"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"For example,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"only copyable types can conform to "},{"type":"codeVoice","code":"MyProtocol"},{"type":"text","text":" in the example above,"},{"text":" ","type":"text"},{"type":"text","text":"but both copyable and noncopyable types"},{"text":" ","type":"text"},{"text":"can conform ","type":"text"},{"type":"codeVoice","code":"NoRequirements"},{"text":" in the example below:","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":["protocol NoRequirements: ~Copyable { }"],"syntax":null},{"inlineContent":[{"type":"text","text":"Extensions to the "},{"code":"Copyable","type":"codeVoice"},{"text":" protocol are not allowed.","type":"text"}],"type":"paragraph"}]}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/StaticString":{"url":"\/documentation\/compute\/staticstring","navigatorTitle":[{"kind":"identifier","text":"StaticString"}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"StaticString"}],"abstract":[{"type":"text","text":"A string type designed to represent text that is known at compile time."}],"type":"topic","title":"StaticString","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/StaticString"},"doc://com.swallow.documentation.Compute/documentation/Compute/Dictionary/Keys-swift.struct":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary\/Keys-swift.struct","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Key","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Value"},{"text":" conforms to ","type":"text"},{"code":"Copyable","type":"codeVoice"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Value"},{"text":" conforms to ","type":"text"},{"code":"Escapable","type":"codeVoice"},{"type":"text","text":"."}]},"title":"Dictionary.Keys","type":"topic","url":"\/documentation\/compute\/dictionary\/keys-swift.struct","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Keys"}],"role":"symbol","kind":"symbol","navigatorTitle":[{"text":"Keys","kind":"identifier"}],"abstract":[{"type":"text","text":"A view of a dictionary’s keys."}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Unicode/UTF8":{"role":"symbol","navigatorTitle":[{"text":"UTF8","kind":"identifier"}],"fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"UTF8","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/compute\/unicode\/utf8","title":"Unicode.UTF8","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Unicode\/UTF8","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/Unicode/UTF32":{"role":"symbol","abstract":[],"url":"\/documentation\/compute\/unicode\/utf32","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Unicode\/UTF32","title":"Unicode.UTF32","type":"topic","navigatorTitle":[{"text":"UTF32","kind":"identifier"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"UTF32","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/PartialRangeFrom":{"navigatorTitle":[{"text":"PartialRangeFrom","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/PartialRangeFrom","url":"\/documentation\/compute\/partialrangefrom","title":"PartialRangeFrom","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PartialRangeFrom","kind":"identifier"}],"abstract":[{"text":"A partial interval extending upward from a lower bound.","type":"text"}],"type":"topic","role":"symbol","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Bound"},{"type":"text","text":" conforms to "},{"code":"Comparable","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]}},"doc://com.swallow.documentation.Compute/documentation/Compute/LazyPrefixWhileSequence/Index":{"type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Index"}],"kind":"symbol","title":"LazyPrefixWhileSequence.Index","abstract":[{"type":"text","text":"A position in a "},{"code":"LazyPrefixWhileCollection","type":"codeVoice"},{"type":"text","text":" or"},{"type":"text","text":" "},{"code":"LazyPrefixWhileBidirectionalCollection","type":"codeVoice"},{"type":"text","text":" instance."}],"url":"\/documentation\/compute\/lazyprefixwhilesequence\/index","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Index","kind":"identifier"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Base","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Collection","type":"codeVoice"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Base.Index"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Hashable"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyPrefixWhileSequence\/Index"},"doc://com.swallow.documentation.Compute/documentation/Compute/Double":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Double","abstract":[{"text":"A double-precision, floating-point value type.","type":"text"}],"title":"Double","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Double","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"Double","kind":"identifier"}],"kind":"symbol","type":"topic","url":"\/documentation\/compute\/double"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt128/Words-swift.struct":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Words"}],"kind":"symbol","title":"UInt128.Words","abstract":[{"type":"text","text":"A type that represents the words of a binary integer."}],"role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Words"}],"url":"\/documentation\/compute\/uint128\/words-swift.struct","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt128\/Words-swift.struct"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt16":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"UInt16","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"UInt16"}],"title":"UInt16","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16","url":"\/documentation\/compute\/uint16","kind":"symbol","role":"symbol","abstract":[{"text":"A 16-bit unsigned integer value","type":"text"},{"text":" ","type":"text"},{"text":"type.","type":"text"}],"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/LazyDropWhileSequence/Iterator":{"url":"\/documentation\/compute\/lazydropwhilesequence\/iterator","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Iterator","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"Iterator"}],"role":"symbol","abstract":[{"text":"An iterator over the elements traversed by a base iterator that follow the","type":"text"},{"type":"text","text":" "},{"text":"initial consecutive elements that satisfy a given predicate.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyDropWhileSequence\/Iterator","title":"LazyDropWhileSequence.Iterator","type":"topic","kind":"symbol","conformance":{"constraints":[{"type":"codeVoice","code":"Base"},{"type":"text","text":" conforms to "},{"code":"Sequence","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]}},"doc://com.swallow.documentation.Compute/documentation/Compute/ClosedRange/Index":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ClosedRange\/Index","type":"topic","abstract":[{"type":"text","text":"A type that represents a position in the collection."}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Index"}],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Bound","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Strideable","type":"codeVoice"},{"type":"text","text":" and "},{"code":"Bound.Stride","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"SignedInteger","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"kind":"symbol","title":"ClosedRange.Index","navigatorTitle":[{"kind":"identifier","text":"Index"}],"url":"\/documentation\/compute\/closedrange\/index","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/LinkedList":{"title":"LinkedList","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LinkedList","abstract":[],"role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"LinkedList"}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"LinkedList"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"code":"Decodable","type":"codeVoice"},{"text":".","type":"text"}]},"url":"\/documentation\/compute\/linkedlist","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/FlattenSequence/Iterator":{"kind":"symbol","type":"topic","abstract":[{"text":"A type that provides the sequence’s iteration interface and","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"encapsulates its iteration state."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FlattenSequence\/Iterator","title":"FlattenSequence.Iterator","navigatorTitle":[{"text":"Iterator","kind":"identifier"}],"conformance":{"constraints":[{"code":"Base","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sequence"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Base.Element"},{"text":" conforms to ","type":"text"},{"code":"Sequence","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Iterator"}],"url":"\/documentation\/compute\/flattensequence\/iterator","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeMutableRawBufferPointer":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableRawBufferPointer","type":"topic","title":"UnsafeMutableRawBufferPointer","kind":"symbol","url":"\/documentation\/compute\/unsafemutablerawbufferpointer","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"UnsafeMutableRawBufferPointer"}],"role":"symbol","navigatorTitle":[{"text":"UnsafeMutableRawBufferPointer","kind":"identifier"}],"abstract":[{"text":"A mutable nonowning collection interface to the bytes in a","type":"text"},{"type":"text","text":" "},{"text":"region of memory.","type":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD16":{"kind":"symbol","navigatorTitle":[{"text":"SIMD16","kind":"identifier"}],"title":"SIMD16","url":"\/documentation\/compute\/simd16","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"SIMDScalar","type":"codeVoice"},{"type":"text","text":"."}]},"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD16","abstract":[{"type":"text","text":"A vector of 16 scalar values."}],"type":"topic","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SIMD16","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt8/Words-swift.struct":{"abstract":[{"type":"text","text":"A type that represents the words of this integer."}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Words","kind":"identifier"}],"url":"\/documentation\/compute\/uint8\/words-swift.struct","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8\/Words-swift.struct","title":"UInt8.Words","role":"symbol","type":"topic","navigatorTitle":[{"text":"Words","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/PriorityQueue":{"navigatorTitle":[{"text":"PriorityQueue","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/PriorityQueue","url":"\/documentation\/compute\/priorityqueue","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"PriorityQueue","kind":"identifier"}],"type":"topic","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"T"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Comparable"},{"type":"text","text":"."}]},"title":"PriorityQueue","kind":"symbol","abstract":[{"type":"text","text":"A priority queue."}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Unicode/UTF32/Parser":{"abstract":[],"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Unicode\/UTF32\/Parser","type":"topic","url":"\/documentation\/compute\/unicode\/utf32\/parser","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"navigatorTitle":[{"text":"Parser","kind":"identifier"}],"title":"Unicode.UTF32.Parser"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/UTF8View":{"url":"\/documentation\/compute\/string\/utf8view","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"UTF8View"}],"role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"UTF8View"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/UTF8View","abstract":[{"text":"A view of a string’s contents as a collection of UTF-8 code units.","type":"text"}],"type":"topic","title":"String.UTF8View"},"doc://com.swallow.documentation.Compute/documentation/Compute/Unicode/Scalar":{"title":"Unicode.Scalar","type":"topic","kind":"symbol","navigatorTitle":[{"text":"Scalar","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Scalar","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Unicode\/Scalar","abstract":[{"type":"text","text":"A Unicode scalar value."}],"role":"symbol","url":"\/documentation\/compute\/unicode\/scalar"},"doc://com.swallow.documentation.Compute/documentation/Compute/StrideThroughIterator":{"url":"\/documentation\/compute\/stridethroughiterator","navigatorTitle":[{"kind":"identifier","text":"StrideThroughIterator"}],"abstract":[{"type":"text","text":"An iterator for a "},{"code":"StrideThrough","type":"codeVoice"},{"type":"text","text":" instance."}],"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"StrideThroughIterator"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/StrideThroughIterator","kind":"symbol","conformance":{"constraints":[{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Strideable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"role":"symbol","title":"StrideThroughIterator"},"doc://com.swallow.documentation.Compute/documentation/Compute/Optional":{"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Optional","kind":"identifier"}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Wrapped","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Equatable","type":"codeVoice"},{"type":"text","text":"."}]},"type":"topic","navigatorTitle":[{"kind":"identifier","text":"Optional"}],"title":"Optional","url":"\/documentation\/compute\/optional","kind":"symbol","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Optional","abstract":[{"type":"text","text":"A type that represents either a wrapped value or the absence of a value."}]},"doc://com.swallow.documentation.Compute/documentation/Compute/UnboundedRange_":{"type":"topic","url":"\/documentation\/compute\/unboundedrange_","role":"symbol","kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"UnboundedRange_"}],"abstract":[{"type":"text","text":"A range expression that represents the entire range of a collection."}],"navigatorTitle":[{"kind":"identifier","text":"UnboundedRange_"}],"title":"UnboundedRange_","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnboundedRange_"},"doc://com.swallow.documentation.Compute/documentation/Compute/SystemRandomNumberGenerator":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SystemRandomNumberGenerator","title":"SystemRandomNumberGenerator","abstract":[{"type":"text","text":"The system’s default source of random data."}],"url":"\/documentation\/compute\/systemrandomnumbergenerator","role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SystemRandomNumberGenerator"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SystemRandomNumberGenerator"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Bag":{"url":"\/documentation\/compute\/bag","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Bag","kind":"identifier"}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Element"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Copyable"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Escapable"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"kind":"symbol","title":"Bag","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bag","navigatorTitle":[{"text":"Bag","kind":"identifier"}],"abstract":[],"role":"symbol","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafePointer":{"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafePointer","title":"UnsafePointer","url":"\/documentation\/compute\/unsafepointer","kind":"symbol","abstract":[{"type":"text","text":"A pointer for accessing data of a specific type."}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"UnsafePointer","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"UnsafePointer"}],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Pointee"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Escapable"},{"type":"text","text":"."}]}},"doc://com.swallow.documentation.Compute/documentation/Compute/AnyKeyPath":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyKeyPath","url":"\/documentation\/compute\/anykeypath","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"AnyKeyPath","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"AnyKeyPath"}],"role":"symbol","kind":"symbol","abstract":[{"text":"A type-erased key path, from any root type to any resulting value","type":"text"},{"type":"text","text":" "},{"type":"text","text":"type."}],"type":"topic","title":"AnyKeyPath"},"doc://com.swallow.documentation.Compute/documentation/Compute/Dictionary/Values-swift.struct":{"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary\/Values-swift.struct","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Key","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"text":", ","type":"text"},{"code":"Value","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Copyable","type":"codeVoice"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Value"},{"text":" conforms to ","type":"text"},{"code":"Escapable","type":"codeVoice"},{"type":"text","text":"."}]},"title":"Dictionary.Values","role":"symbol","abstract":[{"text":"A view of a dictionary’s values.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Values"}],"url":"\/documentation\/compute\/dictionary\/values-swift.struct","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Values","kind":"identifier"}],"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/AutoreleasingUnsafeMutablePointer":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"AutoreleasingUnsafeMutablePointer","kind":"identifier"}],"title":"AutoreleasingUnsafeMutablePointer","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AutoreleasingUnsafeMutablePointer","url":"\/documentation\/compute\/autoreleasingunsafemutablepointer","kind":"symbol","navigatorTitle":[{"text":"AutoreleasingUnsafeMutablePointer","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"A mutable pointer addressing an Objective-C reference that doesn’t own its"},{"type":"text","text":" "},{"text":"target.","type":"text"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Pointee"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Copyable"},{"type":"text","text":" and "},{"code":"Escapable","type":"codeVoice"},{"type":"text","text":"."}]},"role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Unmanaged":{"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Unmanaged","type":"topic","title":"Unmanaged","url":"\/documentation\/compute\/unmanaged","kind":"symbol","conformance":{"constraints":[{"type":"codeVoice","code":"Instance"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Copyable"},{"text":" and ","type":"text"},{"code":"Escapable","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Unmanaged","kind":"identifier"}],"abstract":[{"text":"A type for propagating an unmanaged object reference.","type":"text"}],"navigatorTitle":[{"text":"Unmanaged","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/RecursiveArray":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RecursiveArray","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RecursiveArray","title":"RecursiveArray","abstract":[],"conformance":{"constraints":[{"type":"codeVoice","code":"Unit"},{"text":" conforms to ","type":"text"},{"code":"Copyable","type":"codeVoice"},{"type":"text","text":" and "},{"code":"Escapable","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"navigatorTitle":[{"kind":"identifier","text":"RecursiveArray"}],"kind":"symbol","role":"symbol","type":"topic","url":"\/documentation\/compute\/recursivearray"},"doc://com.swallow.documentation.Compute/documentation/Compute/Dictionary/Index":{"type":"topic","navigatorTitle":[{"kind":"identifier","text":"Index"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Key","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":", "},{"code":"Value","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Copyable","type":"codeVoice"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"code":"Escapable","type":"codeVoice"},{"type":"text","text":"."}]},"abstract":[{"type":"text","text":"The position of a key-value pair in a dictionary."}],"title":"Dictionary.Index","url":"\/documentation\/compute\/dictionary\/index","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary\/Index","role":"symbol","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Index","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Mirror":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Mirror","kind":"symbol","abstract":[{"type":"text","text":"A representation of the substructure and display style of an instance of"},{"type":"text","text":" "},{"type":"text","text":"any type."}],"role":"symbol","title":"Mirror","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Mirror","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"Mirror"}],"url":"\/documentation\/compute\/mirror","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/DropWhileSequence/Iterator":{"role":"symbol","title":"DropWhileSequence.Iterator","kind":"symbol","abstract":[{"text":"A type that provides the sequence’s iteration interface and","type":"text"},{"type":"text","text":" "},{"text":"encapsulates its iteration state.","type":"text"}],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Base","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Sequence","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"navigatorTitle":[{"text":"Iterator","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/DropWhileSequence\/Iterator","url":"\/documentation\/compute\/dropwhilesequence\/iterator","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Iterator","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/LazyPrefixWhileSequence":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyPrefixWhileSequence","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Base","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sequence"},{"text":".","type":"text"}]},"navigatorTitle":[{"text":"LazyPrefixWhileSequence","kind":"identifier"}],"role":"symbol","type":"topic","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"LazyPrefixWhileSequence"}],"title":"LazyPrefixWhileSequence","abstract":[{"type":"text","text":"A sequence whose elements consist of the initial consecutive elements of"},{"text":" ","type":"text"},{"type":"text","text":"some base sequence that satisfy a given predicate."}],"url":"\/documentation\/compute\/lazyprefixwhilesequence"},"doc://com.swallow.documentation.Compute/documentation/Compute/IndexingIterator":{"url":"\/documentation\/compute\/indexingiterator","navigatorTitle":[{"kind":"identifier","text":"IndexingIterator"}],"abstract":[{"type":"text","text":"A type that iterates over a collection using its indices."}],"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"IndexingIterator"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/IndexingIterator","kind":"symbol","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Elements","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Collection"},{"text":".","type":"text"}]},"role":"symbol","title":"IndexingIterator"},"doc://com.swallow.documentation.Compute/documentation/Compute/Substring/UnicodeScalarView":{"title":"Substring.UnicodeScalarView","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Substring\/UnicodeScalarView","url":"\/documentation\/compute\/substring\/unicodescalarview","kind":"symbol","abstract":[],"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"UnicodeScalarView"}],"role":"symbol","navigatorTitle":[{"text":"UnicodeScalarView","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Int32":{"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Int32","kind":"identifier"}],"abstract":[{"text":"A 32-bit signed integer value","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"type."}],"kind":"symbol","navigatorTitle":[{"text":"Int32","kind":"identifier"}],"type":"topic","url":"\/documentation\/compute\/int32","title":"Int32","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int32"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD8":{"navigatorTitle":[{"kind":"identifier","text":"SIMD8"}],"conformance":{"constraints":[{"code":"Scalar","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"SIMDScalar"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Scalar.SIMD8Storage"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"BitwiseCopyable"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"url":"\/documentation\/compute\/simd8","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD8","kind":"symbol","abstract":[{"type":"text","text":"A vector of eight scalar values."}],"type":"topic","title":"SIMD8","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"SIMD8","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/LazySequence":{"navigatorTitle":[{"kind":"identifier","text":"LazySequence"}],"title":"LazySequence","abstract":[{"type":"text","text":"A sequence containing the same elements as a "},{"type":"codeVoice","code":"Base"},{"text":" sequence, but","type":"text"},{"text":" ","type":"text"},{"text":"on which some operations such as ","type":"text"},{"type":"codeVoice","code":"map"},{"type":"text","text":" and "},{"code":"filter","type":"codeVoice"},{"type":"text","text":" are"},{"type":"text","text":" "},{"type":"text","text":"implemented lazily."}],"role":"symbol","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"LazySequence"}],"type":"topic","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Base"},{"type":"text","text":" conforms to "},{"code":"Collection","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"url":"\/documentation\/compute\/lazysequence","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazySequence"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","abstract":[{"type":"text","text":"A signed integer value type."}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Int","kind":"identifier"}],"navigatorTitle":[{"text":"Int","kind":"identifier"}],"title":"Int","url":"\/documentation\/compute\/int","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt32/Words-swift.struct":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Words","kind":"identifier"}],"url":"\/documentation\/compute\/uint32\/words-swift.struct","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt32\/Words-swift.struct","abstract":[{"type":"text","text":"A type that represents the words of this integer."}],"title":"UInt32.Words","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Words"}],"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/Duration":{"abstract":[{"type":"text","text":"A representation of high precision time."}],"type":"topic","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Duration","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Duration"}],"url":"\/documentation\/compute\/duration","navigatorTitle":[{"kind":"identifier","text":"Duration"}],"title":"Duration","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Unicode/UTF8/ReverseParser":{"type":"topic","abstract":[],"kind":"symbol","title":"Unicode.UTF8.ReverseParser","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Unicode\/UTF8\/ReverseParser","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ReverseParser"}],"url":"\/documentation\/compute\/unicode\/utf8\/reverseparser","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ReverseParser","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Unicode/UTF16/ReverseParser":{"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"ReverseParser","kind":"identifier"}],"title":"Unicode.UTF16.ReverseParser","url":"\/documentation\/compute\/unicode\/utf16\/reverseparser","abstract":[],"type":"topic","navigatorTitle":[{"text":"ReverseParser","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Unicode\/UTF16\/ReverseParser"},"doc://com.swallow.documentation.Compute/documentation/Compute/StrideTo":{"title":"StrideTo","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/StrideTo","type":"topic","url":"\/documentation\/compute\/strideto","kind":"symbol","abstract":[{"text":"A sequence of values formed by striding over a half-open interval.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"StrideTo"}],"navigatorTitle":[{"text":"StrideTo","kind":"identifier"}],"conformance":{"constraints":[{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Strideable"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]}},"doc://com.swallow.documentation.Compute/documentation/Compute/Int16/Words-swift.struct":{"title":"Int16.Words","navigatorTitle":[{"kind":"identifier","text":"Words"}],"abstract":[{"text":"A type that represents the words of this integer.","type":"text"}],"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Words"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16\/Words-swift.struct","role":"symbol","type":"topic","url":"\/documentation\/compute\/int16\/words-swift.struct"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/UnicodeScalarView":{"url":"\/documentation\/compute\/string\/unicodescalarview","abstract":[{"text":"A view of a string’s contents as a collection of Unicode scalar values.","type":"text"}],"kind":"symbol","role":"symbol","title":"String.UnicodeScalarView","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"UnicodeScalarView"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"UnicodeScalarView"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/UnicodeScalarView"},"doc://com.swallow.documentation.Compute/documentation/Compute/ArrayTreeChildren":{"url":"\/documentation\/compute\/arraytreechildren","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"ArrayTreeChildren","kind":"identifier"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"TreeValue","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Copyable"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Escapable"},{"text":".","type":"text"}]},"abstract":[],"kind":"symbol","navigatorTitle":[{"text":"ArrayTreeChildren","kind":"identifier"}],"title":"ArrayTreeChildren","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArrayTreeChildren","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/Unicode/GeneralCategory":{"url":"\/documentation\/compute\/unicode\/generalcategory","navigatorTitle":[{"kind":"identifier","text":"GeneralCategory"}],"role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"GeneralCategory","kind":"identifier"}],"abstract":[{"type":"text","text":"The most general classification of a Unicode scalar."}],"type":"topic","title":"Unicode.GeneralCategory","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Unicode\/GeneralCategory"},"doc://com.swallow.documentation.Compute/documentation/Compute/TreeIndexPath":{"type":"topic","navigatorTitle":[{"text":"TreeIndexPath","kind":"identifier"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Tree"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"TreeProtocol"},{"type":"text","text":", "},{"type":"codeVoice","code":"Tree.Children"},{"text":" conforms to ","type":"text"},{"code":"Collection","type":"codeVoice"},{"type":"text","text":", and "},{"code":"Tree.Children.Index","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Hashable"},{"text":".","type":"text"}]},"abstract":[],"title":"TreeIndexPath","url":"\/documentation\/compute\/treeindexpath","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/TreeIndexPath","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"TreeIndexPath","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/PartialRangeUpTo":{"navigatorTitle":[{"text":"PartialRangeUpTo","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/PartialRangeUpTo","url":"\/documentation\/compute\/partialrangeupto","title":"PartialRangeUpTo","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"PartialRangeUpTo","kind":"identifier"}],"abstract":[{"text":"A partial half-open interval up to, but not including, an upper bound.","type":"text"}],"type":"topic","role":"symbol","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Bound"},{"text":" conforms to ","type":"text"},{"code":"Comparable","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}]}},"doc://com.swallow.documentation.Compute/documentation/Compute/Unicode/ASCII":{"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ASCII","kind":"identifier"}],"navigatorTitle":[{"text":"ASCII","kind":"identifier"}],"title":"Unicode.ASCII","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Unicode\/ASCII","url":"\/documentation\/compute\/unicode\/ascii","kind":"symbol","role":"symbol","type":"topic","abstract":[]},"doc://com.swallow.documentation.Compute/documentation/Compute/IteratorSequence":{"url":"\/documentation\/compute\/iteratorsequence","navigatorTitle":[{"text":"IteratorSequence","kind":"identifier"}],"abstract":[{"text":"A sequence built around an iterator of type ","type":"text"},{"code":"Base","type":"codeVoice"},{"type":"text","text":"."}],"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"IteratorSequence"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/IteratorSequence","kind":"symbol","conformance":{"constraints":[{"type":"codeVoice","code":"Base"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"IteratorProtocol"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"role":"symbol","title":"IteratorSequence"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt8":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"UInt8","kind":"identifier"}],"navigatorTitle":[{"text":"UInt8","kind":"identifier"}],"title":"UInt8","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt8","url":"\/documentation\/compute\/uint8","kind":"symbol","role":"symbol","type":"topic","abstract":[{"type":"text","text":"An 8-bit unsigned integer value"},{"text":" ","type":"text"},{"text":"type.","type":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Int16":{"title":"Int16","abstract":[{"text":"A 16-bit signed integer value","type":"text"},{"type":"text","text":" "},{"text":"type.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int16","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Int16"}],"type":"topic","url":"\/documentation\/compute\/int16","navigatorTitle":[{"kind":"identifier","text":"Int16"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/CVaListPointer":{"url":"\/documentation\/compute\/cvalistpointer","title":"CVaListPointer","role":"symbol","abstract":[],"navigatorTitle":[{"text":"CVaListPointer","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CVaListPointer","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CVaListPointer"}],"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/CollectionOfOne/Iterator":{"abstract":[{"type":"text","text":"An iterator that produces one or zero instances of an element."}],"url":"\/documentation\/compute\/collectionofone\/iterator","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Element"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Copyable"},{"text":" and ","type":"text"},{"code":"Escapable","type":"codeVoice"},{"type":"text","text":"."}]},"navigatorTitle":[{"kind":"identifier","text":"Iterator"}],"type":"topic","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Iterator"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CollectionOfOne\/Iterator","title":"CollectionOfOne.Iterator","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt32":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt32","title":"UInt32","abstract":[{"type":"text","text":"A 32-bit unsigned integer value"},{"type":"text","text":" "},{"text":"type.","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"UInt32","kind":"identifier"}],"url":"\/documentation\/compute\/uint32","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"UInt32","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Substring":{"navigatorTitle":[{"kind":"identifier","text":"Substring"}],"url":"\/documentation\/compute\/substring","title":"Substring","abstract":[{"text":"A slice of a string.","type":"text"}],"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Substring","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Substring","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/ReferenceTree":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ReferenceTree","kind":"identifier"}],"abstract":[{"type":"text","text":"A simple reference-based tree data structure for Swift."}],"navigatorTitle":[{"kind":"identifier","text":"ReferenceTree"}],"type":"topic","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ReferenceTree","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Element","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Equatable","type":"codeVoice"},{"type":"text","text":"."}]},"title":"ReferenceTree","url":"\/documentation\/compute\/referencetree","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/PrefixSequence":{"type":"topic","navigatorTitle":[{"text":"PrefixSequence","kind":"identifier"}],"kind":"symbol","title":"PrefixSequence","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"PrefixSequence"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/PrefixSequence","abstract":[{"text":"A sequence that only consumes up to ","type":"text"},{"code":"n","type":"codeVoice"},{"text":" elements from an underlying","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"Base"},{"type":"text","text":" iterator."}],"url":"\/documentation\/compute\/prefixsequence","role":"symbol","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Base","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Sequence","type":"codeVoice"},{"type":"text","text":"."}]}},"doc://com.swallow.documentation.Compute/documentation/Compute/DiscontiguousSlice":{"title":"DiscontiguousSlice","url":"\/documentation\/compute\/discontiguousslice","role":"symbol","type":"topic","abstract":[{"type":"text","text":"A collection wrapper that provides access to the elements of a collection,"},{"text":" ","type":"text"},{"type":"text","text":"indexed by a set of indices."}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Base","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Collection","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/DiscontiguousSlice","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"DiscontiguousSlice"}],"kind":"symbol","navigatorTitle":[{"text":"DiscontiguousSlice","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/TreeChains":{"navigatorTitle":[{"text":"TreeChains","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/TreeChains","url":"\/documentation\/compute\/treechains","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TreeChains","kind":"identifier"}],"type":"topic","conformance":{"constraints":[{"type":"codeVoice","code":"Tree"},{"type":"text","text":" conforms to "},{"code":"HomogenousTree","type":"codeVoice"},{"type":"text","text":" and "},{"code":"Tree.Children","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Collection"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"title":"TreeChains","kind":"symbol","abstract":[]},"doc://com.swallow.documentation.Compute/documentation/Compute/Queue":{"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Queue","kind":"identifier"}],"kind":"symbol","role":"symbol","url":"\/documentation\/compute\/queue","abstract":[],"navigatorTitle":[{"kind":"identifier","text":"Queue"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Queue","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"T"},{"text":" conforms to ","type":"text"},{"code":"Copyable","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"Escapable","type":"codeVoice"},{"text":".","type":"text"}]},"title":"Queue"},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeMutableRawPointer":{"kind":"symbol","type":"topic","abstract":[{"text":"A raw pointer for accessing and manipulating untyped data.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableRawPointer","url":"\/documentation\/compute\/unsafemutablerawpointer","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"UnsafeMutableRawPointer"}],"title":"UnsafeMutableRawPointer","navigatorTitle":[{"kind":"identifier","text":"UnsafeMutableRawPointer"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/DiscontiguousSlice/Index":{"title":"DiscontiguousSlice.Index","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Index"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/DiscontiguousSlice\/Index","navigatorTitle":[{"text":"Index","kind":"identifier"}],"url":"\/documentation\/compute\/discontiguousslice\/index","abstract":[{"type":"text","text":"A position in a "},{"type":"codeVoice","code":"DiscontiguousSlice"},{"type":"text","text":"."}],"type":"topic","kind":"symbol","role":"symbol","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Base","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Collection"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}]}},"doc://com.swallow.documentation.Compute/documentation/Compute/JoinedSequence":{"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Base"},{"type":"text","text":" conforms to "},{"code":"Sequence","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Base.Element"},{"type":"text","text":" conforms to "},{"code":"Sequence","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"kind":"symbol","title":"JoinedSequence","navigatorTitle":[{"kind":"identifier","text":"JoinedSequence"}],"abstract":[{"text":"A sequence that presents the elements of a base sequence of sequences","type":"text"},{"text":" ","type":"text"},{"text":"concatenated using a given separator.","type":"text"}],"type":"topic","url":"\/documentation\/compute\/joinedsequence","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/JoinedSequence","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"JoinedSequence","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD2":{"url":"\/documentation\/compute\/simd2","navigatorTitle":[{"text":"SIMD2","kind":"identifier"}],"type":"topic","title":"SIMD2","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Scalar","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"SIMDScalar"},{"text":" and ","type":"text"},{"code":"Scalar.SIMD2Storage","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"BitwiseCopyable","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SIMD2"}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD2","abstract":[{"type":"text","text":"A vector of two scalar values."}]},"doc://com.swallow.documentation.Compute/documentation/Compute/OpaquePointer":{"role":"symbol","navigatorTitle":[{"text":"OpaquePointer","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OpaquePointer","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/OpaquePointer","type":"topic","title":"OpaquePointer","kind":"symbol","abstract":[{"type":"text","text":"A wrapper around an opaque C pointer."}],"url":"\/documentation\/compute\/opaquepointer"},"doc://com.swallow.documentation.Compute/documentation/Compute/EmptyCollection":{"url":"\/documentation\/compute\/emptycollection","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"EmptyCollection"}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"code":"Copyable","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"Escapable","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"abstract":[{"type":"text","text":"A collection whose element type is "},{"code":"Element","type":"codeVoice"},{"text":" but that is always empty.","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"EmptyCollection","kind":"identifier"}],"title":"EmptyCollection","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/EmptyCollection","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/String/UTF16View":{"navigatorTitle":[{"text":"UTF16View","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/UTF16View","kind":"symbol","title":"String.UTF16View","url":"\/documentation\/compute\/string\/utf16view","abstract":[{"text":"A view of a string’s contents as a collection of UTF-16 code units.","type":"text"}],"role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"UTF16View"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Set/Index":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Set\/Index","title":"Set.Index","abstract":[{"type":"text","text":"The position of an element in a set."}],"url":"\/documentation\/compute\/set\/index","navigatorTitle":[{"kind":"identifier","text":"Index"}],"type":"topic","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Element","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Hashable"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Index","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/FloatingPointRoundingRule":{"kind":"symbol","navigatorTitle":[{"text":"FloatingPointRoundingRule","kind":"identifier"}],"type":"topic","title":"FloatingPointRoundingRule","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPointRoundingRule","abstract":[{"type":"text","text":"A rule for rounding a floating-point number."}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FloatingPointRoundingRule","kind":"identifier"}],"url":"\/documentation\/compute\/floatingpointroundingrule"},"doc://com.swallow.documentation.Compute/documentation/Compute/Set/Iterator":{"conformance":{"constraints":[{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"code":"Hashable","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Iterator","kind":"identifier"}],"abstract":[{"type":"text","text":"An iterator over the members of a "},{"code":"Set<Element>","type":"codeVoice"},{"type":"text","text":"."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Set\/Iterator","type":"topic","title":"Set.Iterator","navigatorTitle":[{"text":"Iterator","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/compute\/set\/iterator","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/BidirectionalMap":{"title":"BidirectionalMap","abstract":[{"type":"text","text":"A bidirectional map between two "},{"type":"codeVoice","code":"Hashable"},{"text":" types.","type":"text"}],"url":"\/documentation\/compute\/bidirectionalmap","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"BidirectionalMap"}],"kind":"symbol","type":"topic","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Left","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Decodable"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Left"},{"type":"text","text":" conforms to "},{"code":"Encodable","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"Left"},{"text":" conforms to ","type":"text"},{"code":"Hashable","type":"codeVoice"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Right"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Decodable"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Right"},{"text":" conforms to ","type":"text"},{"code":"Encodable","type":"codeVoice"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Right"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"text":".","type":"text"}]},"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BidirectionalMap","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"BidirectionalMap"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/LazyPrefixWhileSequence/Iterator":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Iterator"}],"type":"topic","title":"LazyPrefixWhileSequence.Iterator","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyPrefixWhileSequence\/Iterator","abstract":[{"type":"text","text":"An iterator over the initial elements traversed by a base iterator that"},{"type":"text","text":" "},{"text":"satisfy a given predicate.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Iterator"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Base"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sequence"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"url":"\/documentation\/compute\/lazyprefixwhilesequence\/iterator"},"doc://com.swallow.documentation.Compute/documentation/Compute/Unicode/UTF16":{"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"UTF16"}],"abstract":[],"fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"UTF16"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Unicode\/UTF16","url":"\/documentation\/compute\/unicode\/utf16","type":"topic","kind":"symbol","title":"Unicode.UTF16"},"doc://com.swallow.documentation.Compute/documentation/Compute/ArrayTree":{"type":"topic","role":"symbol","url":"\/documentation\/compute\/arraytree","navigatorTitle":[{"text":"ArrayTree","kind":"identifier"}],"title":"ArrayTree","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArrayTree","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ArrayTree"}],"abstract":[],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"T","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"ExpressibleByFloatLiteral","type":"codeVoice"},{"type":"text","text":"."}]}},"doc://com.swallow.documentation.Compute/documentation/Compute/ReversedCollection/Iterator":{"title":"ReversedCollection.Iterator","abstract":[{"type":"text","text":"A type that provides the sequence’s iteration interface and"},{"type":"text","text":" "},{"text":"encapsulates its iteration state.","type":"text"}],"url":"\/documentation\/compute\/reversedcollection\/iterator","kind":"symbol","type":"topic","conformance":{"constraints":[{"type":"codeVoice","code":"Base"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"BidirectionalCollection"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ReversedCollection\/Iterator","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Iterator","kind":"identifier"}],"navigatorTitle":[{"text":"Iterator","kind":"identifier"}],"role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/DefaultStringInterpolation":{"role":"symbol","type":"topic","title":"DefaultStringInterpolation","abstract":[{"type":"text","text":"Represents a string literal with interpolations while it is being built up."}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"DefaultStringInterpolation"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/DefaultStringInterpolation","navigatorTitle":[{"text":"DefaultStringInterpolation","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/compute\/defaultstringinterpolation"},"doc://com.swallow.documentation.Compute/documentation/Compute/BranchingArray":{"navigatorTitle":[{"text":"BranchingArray","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BranchingArray","url":"\/documentation\/compute\/branchingarray","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"BranchingArray","kind":"identifier"}],"type":"topic","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Branch"},{"type":"text","text":" conforms to "},{"code":"Hashable","type":"codeVoice"},{"type":"text","text":" and "},{"code":"Element","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Equatable"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"title":"BranchingArray","kind":"symbol","abstract":[]},"doc://com.swallow.documentation.Compute/documentation/Compute/Bool":{"url":"\/documentation\/compute\/bool","role":"symbol","title":"Bool","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Bool","kind":"identifier"}],"abstract":[{"type":"text","text":"A value type whose instances are either "},{"type":"codeVoice","code":"true"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"false"},{"text":".","type":"text"}],"navigatorTitle":[{"text":"Bool","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bool","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/PartialRangeThrough":{"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"PartialRangeThrough"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/PartialRangeThrough","navigatorTitle":[{"kind":"identifier","text":"PartialRangeThrough"}],"title":"PartialRangeThrough","url":"\/documentation\/compute\/partialrangethrough","abstract":[{"text":"A partial interval up to, and including, an upper bound.","type":"text"}],"role":"symbol","type":"topic","conformance":{"constraints":[{"code":"Bound","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Comparable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]}},"doc://com.swallow.documentation.Compute/documentation/Compute/Dictionary":{"type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Dictionary"}],"kind":"symbol","title":"Dictionary","abstract":[{"type":"text","text":"A collection whose elements are key-value pairs."}],"url":"\/documentation\/compute\/dictionary","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Dictionary","kind":"identifier"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Key","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":" and "},{"code":"Value","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Hashable","type":"codeVoice"},{"type":"text","text":"."}]},"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary"},"doc://com.swallow.documentation.Compute/documentation/Compute/StaticBigInt":{"abstract":[{"text":"An immutable arbitrary-precision signed integer.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"StaticBigInt"}],"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StaticBigInt","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/StaticBigInt","url":"\/documentation\/compute\/staticbigint","kind":"symbol","title":"StaticBigInt","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeRawBufferPointer/Iterator":{"title":"UnsafeRawBufferPointer.Iterator","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeRawBufferPointer\/Iterator","kind":"symbol","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Iterator","kind":"identifier"}],"navigatorTitle":[{"text":"Iterator","kind":"identifier"}],"url":"\/documentation\/compute\/unsaferawbufferpointer\/iterator","abstract":[{"text":"An iterator over the bytes viewed by a raw buffer pointer.","type":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Copyable":{"title":"Copyable","abstract":[{"type":"text","text":"A type whose values can be implicitly or explicitly copied."}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"Copyable","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Copyable","url":"\/documentation\/compute\/copyable","navigatorTitle":[{"text":"Copyable","kind":"identifier"}],"kind":"symbol","role":"symbol","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/LazyFilterSequence/Iterator":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Iterator"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyFilterSequence\/Iterator","abstract":[{"text":"An iterator over the elements traversed by some base iterator that also","type":"text"},{"type":"text","text":" "},{"text":"satisfy a given predicate.","type":"text"}],"title":"LazyFilterSequence.Iterator","url":"\/documentation\/compute\/lazyfiltersequence\/iterator","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Iterator"}],"conformance":{"constraints":[{"code":"Base","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sequence"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/RangeSet/Ranges-swift.struct":{"kind":"symbol","title":"RangeSet.Ranges","type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RangeSet\/Ranges-swift.struct","abstract":[{"type":"text","text":"A collection of the ranges that make up a range set."}],"url":"\/documentation\/compute\/rangeset\/ranges-swift.struct","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Ranges","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"Ranges"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Bound"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Comparable"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]}},"doc://com.swallow.documentation.Compute/documentation/Compute/Zip2Sequence":{"conformance":{"constraints":[{"type":"codeVoice","code":"Sequence1"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sequence"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Sequence2"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sequence"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"kind":"symbol","title":"Zip2Sequence","navigatorTitle":[{"kind":"identifier","text":"Zip2Sequence"}],"abstract":[{"text":"A sequence of pairs built out of two underlying sequences.","type":"text"}],"type":"topic","url":"\/documentation\/compute\/zip2sequence","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Zip2Sequence","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Zip2Sequence"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Int8/Words-swift.struct":{"abstract":[{"type":"text","text":"A type that represents the words of this integer."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8\/Words-swift.struct","type":"topic","kind":"symbol","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Words"}],"url":"\/documentation\/compute\/int8\/words-swift.struct","navigatorTitle":[{"kind":"identifier","text":"Words"}],"title":"Int8.Words"},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeRawPointer":{"role":"symbol","abstract":[{"text":"A raw pointer for accessing untyped data.","type":"text"}],"title":"UnsafeRawPointer","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"UnsafeRawPointer"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeRawPointer","kind":"symbol","navigatorTitle":[{"text":"UnsafeRawPointer","kind":"identifier"}],"url":"\/documentation\/compute\/unsaferawpointer","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD4":{"kind":"symbol","navigatorTitle":[{"text":"SIMD4","kind":"identifier"}],"title":"SIMD4","url":"\/documentation\/compute\/simd4","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Scalar"},{"type":"text","text":" conforms to "},{"code":"SIMDScalar","type":"codeVoice"},{"type":"text","text":"."}]},"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD4","abstract":[{"type":"text","text":"A vector of four scalar values."}],"type":"topic","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SIMD4"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt":{"kind":"symbol","navigatorTitle":[{"text":"UInt","kind":"identifier"}],"type":"topic","title":"UInt","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt","abstract":[{"text":"An unsigned integer value type.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"UInt","kind":"identifier"}],"url":"\/documentation\/compute\/uint"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int8":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Int8"}],"url":"\/documentation\/compute\/int8","title":"Int8","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Int8"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int8","abstract":[{"text":"An 8-bit signed integer value","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"type."}]},"doc://com.swallow.documentation.Compute/documentation/Compute/simd-swift.module.extension/simd_quatd":{"abstract":[],"title":"simd_quatd","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/simd-swift.module.extension\/simd_quatd","url":"\/documentation\/compute\/simd-swift.module.extension\/simd_quatd","fragments":[{"text":"extension","kind":"keyword"},{"text":" ","kind":"text"},{"text":"simd","kind":"identifier"},{"text":".","kind":"text"},{"preciseIdentifier":"c:@SA@simd_quatd","text":"simd_quatd","kind":"identifier"}],"kind":"symbol","role":"symbol","navigatorTitle":[{"text":"simd_quatd","kind":"identifier"}],"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/Float":{"type":"topic","abstract":[{"text":"A single-precision, floating-point value type.","type":"text"}],"url":"\/documentation\/compute\/float","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Float"}],"navigatorTitle":[{"text":"Float","kind":"identifier"}],"title":"Float"},"doc://com.swallow.documentation.Compute/documentation/Compute/LazyMapSequence":{"role":"symbol","abstract":[{"type":"text","text":"A "},{"code":"Sequence","type":"codeVoice"},{"text":" whose elements consist of those in a ","type":"text"},{"type":"codeVoice","code":"Base"},{"text":" ","type":"text"},{"code":"Sequence","type":"codeVoice"},{"text":" passed through a transform function returning ","type":"text"},{"code":"Element","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"These elements are computed lazily, each time they’re read, by","type":"text"},{"type":"text","text":" "},{"text":"calling the transform function on a base element.","type":"text"}],"title":"LazyMapSequence","url":"\/documentation\/compute\/lazymapsequence","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"LazyMapSequence","kind":"identifier"}],"navigatorTitle":[{"text":"LazyMapSequence","kind":"identifier"}],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Base"},{"text":" conforms to ","type":"text"},{"code":"Collection","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"Element"},{"text":" conforms to ","type":"text"},{"code":"Copyable","type":"codeVoice"},{"text":", and ","type":"text"},{"type":"codeVoice","code":"Element"},{"text":" conforms to ","type":"text"},{"code":"Escapable","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyMapSequence"},"doc://com.swallow.documentation.Compute/documentation/Compute/CollectionOfOne":{"title":"CollectionOfOne","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CollectionOfOne"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CollectionOfOne","type":"topic","navigatorTitle":[{"kind":"identifier","text":"CollectionOfOne"}],"abstract":[{"type":"text","text":"A collection containing a single element."}],"conformance":{"constraints":[{"code":"Element","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Copyable","type":"codeVoice"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Escapable"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","kind":"symbol","url":"\/documentation\/compute\/collectionofone"},"doc://com.swallow.documentation.Compute/documentation/Compute/Never":{"title":"Never","navigatorTitle":[{"kind":"identifier","text":"Never"}],"abstract":[{"type":"text","text":"A type that has no values and can’t be constructed."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Never"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Never","role":"symbol","type":"topic","url":"\/documentation\/compute\/never"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int/Words-swift.struct":{"abstract":[{"type":"text","text":"A type that represents the words of this integer."}],"navigatorTitle":[{"text":"Words","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int\/Words-swift.struct","title":"Int.Words","kind":"symbol","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Words"}],"url":"\/documentation\/compute\/int\/words-swift.struct","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/CollectionDifference/Index":{"type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Index"}],"kind":"symbol","title":"CollectionDifference.Index","abstract":[{"type":"text","text":"The position of a collection difference."}],"url":"\/documentation\/compute\/collectiondifference\/index","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Index","kind":"identifier"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"ChangeElement","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Copyable"},{"type":"text","text":" and "},{"code":"Escapable","type":"codeVoice"},{"type":"text","text":"."}]},"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CollectionDifference\/Index"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt/Words-swift.struct":{"url":"\/documentation\/compute\/uint\/words-swift.struct","abstract":[{"text":"A type that represents the words of this integer.","type":"text"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Words"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt\/Words-swift.struct","title":"UInt.Words","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Words","kind":"identifier"}],"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD32":{"navigatorTitle":[{"text":"SIMD32","kind":"identifier"}],"conformance":{"constraints":[{"type":"codeVoice","code":"Scalar"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"SIMDScalar"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Scalar.SIMD32Storage"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"BitwiseCopyable"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"url":"\/documentation\/compute\/simd32","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD32","kind":"symbol","abstract":[{"type":"text","text":"A vector of 32 scalar values."}],"type":"topic","title":"SIMD32","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"SIMD32","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Mirror/DisplayStyle-swift.enum":{"fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"DisplayStyle","kind":"identifier"}],"role":"symbol","url":"\/documentation\/compute\/mirror\/displaystyle-swift.enum","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Mirror\/DisplayStyle-swift.enum","abstract":[{"text":"A suggestion of how a mirror’s subject is to be interpreted.","type":"text"}],"kind":"symbol","title":"Mirror.DisplayStyle","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DisplayStyle"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Int64/Words-swift.struct":{"title":"Int64.Words","abstract":[{"text":"A type that represents the words of this integer.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int64\/Words-swift.struct","navigatorTitle":[{"kind":"identifier","text":"Words"}],"url":"\/documentation\/compute\/int64\/words-swift.struct","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Words"}],"kind":"symbol","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Matrix":{"role":"symbol","abstract":[],"title":"Matrix","url":"\/documentation\/compute\/matrix","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Matrix","kind":"identifier"}],"navigatorTitle":[{"text":"Matrix","kind":"identifier"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Element","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Copyable"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Escapable"},{"text":".","type":"text"}]},"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Matrix","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt64/Words-swift.struct":{"navigatorTitle":[{"kind":"identifier","text":"Words"}],"kind":"symbol","role":"symbol","type":"topic","title":"UInt64.Words","abstract":[{"type":"text","text":"A type that represents the words of this integer."}],"url":"\/documentation\/compute\/uint64\/words-swift.struct","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Words","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64\/Words-swift.struct"},"doc://com.swallow.documentation.Compute/documentation/Compute/AnyCollection":{"abstract":[{"text":"A type-erased wrapper over any collection with indices that","type":"text"},{"type":"text","text":" "},{"text":"support forward traversal.","type":"text"}],"title":"AnyCollection","kind":"symbol","navigatorTitle":[{"text":"AnyCollection","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyCollection","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Element"},{"text":" conforms to ","type":"text"},{"code":"Copyable","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Escapable"},{"type":"text","text":"."}]},"type":"topic","url":"\/documentation\/compute\/anycollection","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AnyCollection"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeMutablePointer":{"title":"UnsafeMutablePointer","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutablePointer","type":"topic","url":"\/documentation\/compute\/unsafemutablepointer","kind":"symbol","abstract":[{"text":"A pointer for accessing and manipulating data of a","type":"text"},{"type":"text","text":" "},{"type":"text","text":"specific type."}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"UnsafeMutablePointer"}],"navigatorTitle":[{"text":"UnsafeMutablePointer","kind":"identifier"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Pointee","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Escapable","type":"codeVoice"},{"type":"text","text":"."}]}},"doc://com.swallow.documentation.Compute/documentation/Compute/Unicode/ASCII/Parser":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Unicode\/ASCII\/Parser","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"kind":"symbol","role":"symbol","type":"topic","url":"\/documentation\/compute\/unicode\/ascii\/parser","abstract":[],"navigatorTitle":[{"text":"Parser","kind":"identifier"}],"title":"Unicode.ASCII.Parser"},"doc://com.swallow.documentation.Compute/documentation/Compute/AnySequence":{"url":"\/documentation\/compute\/anysequence","abstract":[{"type":"text","text":"A type-erased sequence."}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"AnySequence"}],"type":"topic","title":"AnySequence","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnySequence"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Element","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Copyable"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Escapable"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnySequence"},"doc://com.swallow.documentation.Compute/documentation/Compute/UnicodeDecodingResult":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnicodeDecodingResult","title":"UnicodeDecodingResult","abstract":[{"text":"The result of one Unicode decoding step.","type":"text"}],"type":"topic","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"UnicodeDecodingResult","kind":"identifier"}],"fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"UnicodeDecodingResult"}],"url":"\/documentation\/compute\/unicodedecodingresult"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt16/Words-swift.struct":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Words"}],"navigatorTitle":[{"text":"Words","kind":"identifier"}],"title":"UInt16.Words","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt16\/Words-swift.struct","url":"\/documentation\/compute\/uint16\/words-swift.struct","kind":"symbol","role":"symbol","abstract":[{"text":"A type that represents the words of this integer.","type":"text"}],"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/ReversedCollection":{"navigatorTitle":[{"text":"ReversedCollection","kind":"identifier"}],"title":"ReversedCollection","abstract":[{"type":"text","text":"A collection that presents the elements of its base collection"},{"type":"text","text":" "},{"text":"in reverse order.","type":"text"}],"role":"symbol","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ReversedCollection"}],"type":"topic","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Base"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"BidirectionalCollection"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"url":"\/documentation\/compute\/reversedcollection","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ReversedCollection"},"doc://com.swallow.documentation.Compute/documentation/Compute/AnyBidirectionalCollection":{"title":"AnyBidirectionalCollection","url":"\/documentation\/compute\/anybidirectionalcollection","role":"symbol","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Element","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Copyable","type":"codeVoice"},{"type":"text","text":" and "},{"code":"Escapable","type":"codeVoice"},{"text":".","type":"text"}]},"abstract":[{"type":"text","text":"A type-erased wrapper over any collection with indices that"},{"type":"text","text":" "},{"type":"text","text":"support bidirectional traversal."}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyBidirectionalCollection","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyBidirectionalCollection","kind":"identifier"}],"navigatorTitle":[{"text":"AnyBidirectionalCollection","kind":"identifier"}],"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/Unicode/Scalar/UTF16View":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Unicode\/Scalar\/UTF16View","role":"symbol","type":"topic","url":"\/documentation\/compute\/unicode\/scalar\/utf16view","abstract":[],"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"UTF16View","kind":"identifier"}],"navigatorTitle":[{"text":"UTF16View","kind":"identifier"}],"title":"Unicode.Scalar.UTF16View"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt128":{"url":"\/documentation\/compute\/uint128","type":"topic","kind":"symbol","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt128","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"UInt128"}],"title":"UInt128","abstract":[{"text":"A 128-bit unsigned integer type.","type":"text"}],"navigatorTitle":[{"text":"UInt128","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/PrefixSequence/Iterator":{"kind":"symbol","type":"topic","abstract":[{"text":"A type that provides the sequence’s iteration interface and","type":"text"},{"type":"text","text":" "},{"type":"text","text":"encapsulates its iteration state."}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Iterator","kind":"identifier"}],"url":"\/documentation\/compute\/prefixsequence\/iterator","navigatorTitle":[{"kind":"identifier","text":"Iterator"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/PrefixSequence\/Iterator","conformance":{"constraints":[{"type":"codeVoice","code":"Base"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Sequence"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"title":"PrefixSequence.Iterator"},"doc://com.swallow.documentation.Compute/documentation/Compute/FloatingPointClassification":{"url":"\/documentation\/compute\/floatingpointclassification","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FloatingPointClassification","kind":"identifier"}],"title":"FloatingPointClassification","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPointClassification","abstract":[{"text":"The IEEE 754 floating-point classes.","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"FloatingPointClassification","kind":"identifier"}],"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/Float16":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Float16","navigatorTitle":[{"kind":"identifier","text":"Float16"}],"role":"symbol","title":"Float16","url":"\/documentation\/compute\/float16","type":"topic","abstract":[{"type":"text","text":"A half-precision (16b), floating-point value type."}],"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Float16"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Int32/Words-swift.struct":{"url":"\/documentation\/compute\/int32\/words-swift.struct","navigatorTitle":[{"kind":"identifier","text":"Words"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int32\/Words-swift.struct","title":"Int32.Words","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Words","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"A type that represents the words of this integer."}]},"doc://com.swallow.documentation.Compute/documentation/Compute/StrideToIterator":{"abstract":[{"type":"text","text":"An iterator for a "},{"code":"StrideTo","type":"codeVoice"},{"type":"text","text":" instance."}],"url":"\/documentation\/compute\/stridetoiterator","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Element"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Strideable"},{"type":"text","text":"."}]},"navigatorTitle":[{"text":"StrideToIterator","kind":"identifier"}],"type":"topic","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"StrideToIterator"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/StrideToIterator","title":"StrideToIterator","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Dictionary/Iterator":{"title":"Dictionary.Iterator","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Dictionary\/Iterator","type":"topic","url":"\/documentation\/compute\/dictionary\/iterator","kind":"symbol","abstract":[{"text":"An iterator over the members of a ","type":"text"},{"type":"codeVoice","code":"Dictionary<Key, Value>"},{"text":".","type":"text"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Iterator"}],"navigatorTitle":[{"kind":"identifier","text":"Iterator"}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Key"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":", "},{"code":"Value","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Copyable","type":"codeVoice"},{"type":"text","text":", and "},{"code":"Value","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Escapable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]}},"doc://com.swallow.documentation.Compute/documentation/Compute/Hasher":{"navigatorTitle":[{"text":"Hasher","kind":"identifier"}],"abstract":[{"type":"text","text":"The universal hash function used by "},{"type":"codeVoice","code":"Set"},{"text":" and ","type":"text"},{"code":"Dictionary","type":"codeVoice"},{"text":".","type":"text"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Hasher","kind":"identifier"}],"url":"\/documentation\/compute\/hasher","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Hasher","title":"Hasher","type":"topic","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/AnyHashable":{"role":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyHashable","kind":"identifier"}],"abstract":[{"text":"A type-erased hashable value.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyHashable","navigatorTitle":[{"text":"AnyHashable","kind":"identifier"}],"url":"\/documentation\/compute\/anyhashable","title":"AnyHashable","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Slice":{"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Slice","url":"\/documentation\/compute\/slice","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Slice"}],"navigatorTitle":[{"text":"Slice","kind":"identifier"}],"title":"Slice","abstract":[{"type":"text","text":"A view into a subsequence of elements of another collection."}],"kind":"symbol","conformance":{"constraints":[{"code":"Base","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"RangeReplaceableCollection"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]}},"doc://com.swallow.documentation.Compute/documentation/Compute/LazyMapSequence/Iterator":{"abstract":[{"text":"A type that provides the sequence’s iteration interface and","type":"text"},{"type":"text","text":" "},{"text":"encapsulates its iteration state.","type":"text"}],"url":"\/documentation\/compute\/lazymapsequence\/iterator","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Base","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Sequence","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Element","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Copyable"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Element"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Escapable"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"navigatorTitle":[{"kind":"identifier","text":"Iterator"}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Iterator"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyMapSequence\/Iterator","title":"LazyMapSequence.Iterator","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/MergeSplitSequence":{"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/MergeSplitSequence","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Element","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Copyable"},{"type":"text","text":" and "},{"code":"Escapable","type":"codeVoice"},{"text":".","type":"text"}]},"title":"MergeSplitSequence","role":"symbol","abstract":[],"navigatorTitle":[{"text":"MergeSplitSequence","kind":"identifier"}],"url":"\/documentation\/compute\/mergesplitsequence","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"MergeSplitSequence"}],"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD64":{"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD64","navigatorTitle":[{"text":"SIMD64","kind":"identifier"}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"SIMD64","kind":"identifier"}],"abstract":[{"type":"text","text":"A vector of 64 scalar values."}],"title":"SIMD64","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Scalar"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"SIMDScalar"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Scalar.SIMD64Storage"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"BitwiseCopyable"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"url":"\/documentation\/compute\/simd64","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/DropFirstSequence":{"url":"\/documentation\/compute\/dropfirstsequence","abstract":[{"text":"A sequence that lazily consumes and drops ","type":"text"},{"code":"n","type":"codeVoice"},{"type":"text","text":" elements from an underlying"},{"text":" ","type":"text"},{"code":"Base","type":"codeVoice"},{"text":" iterator before possibly returning the first available element.","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"DropFirstSequence","kind":"identifier"}],"type":"topic","title":"DropFirstSequence","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"DropFirstSequence","kind":"identifier"}],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Base","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Sequence","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/DropFirstSequence"},"doc://com.swallow.documentation.Compute/documentation/Compute/DropWhileSequence":{"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Base","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Sequence","type":"codeVoice"},{"type":"text","text":"."}]},"kind":"symbol","title":"DropWhileSequence","navigatorTitle":[{"kind":"identifier","text":"DropWhileSequence"}],"abstract":[{"type":"text","text":"A sequence that lazily consumes and drops "},{"type":"codeVoice","code":"n"},{"type":"text","text":" elements from an underlying"},{"type":"text","text":" "},{"type":"codeVoice","code":"Base"},{"text":" iterator before possibly returning the first available element.","type":"text"}],"type":"topic","url":"\/documentation\/compute\/dropwhilesequence","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/DropWhileSequence","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DropWhileSequence","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/AnyIterator":{"abstract":[{"text":"A type-erased iterator of ","type":"text"},{"type":"codeVoice","code":"Element"},{"type":"text","text":"."}],"url":"\/documentation\/compute\/anyiterator","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Element","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Copyable"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Escapable"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"navigatorTitle":[{"text":"AnyIterator","kind":"identifier"}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"AnyIterator","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyIterator","title":"AnyIterator","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/LazyFilterSequence":{"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyFilterSequence","url":"\/documentation\/compute\/lazyfiltersequence","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"LazyFilterSequence","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"LazyFilterSequence"}],"title":"LazyFilterSequence","abstract":[{"text":"A sequence whose elements consist of the elements of some base","type":"text"},{"type":"text","text":" "},{"text":"sequence that also satisfy a given predicate.","type":"text"}],"kind":"symbol","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Base"},{"type":"text","text":" conforms to "},{"code":"Collection","type":"codeVoice"},{"text":".","type":"text"}]}},"doc://com.swallow.documentation.Compute/documentation/Compute/Unicode/Scalar/UTF8View":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Unicode\/Scalar\/UTF8View","abstract":[],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"UTF8View","kind":"identifier"}],"navigatorTitle":[{"text":"UTF8View","kind":"identifier"}],"title":"Unicode.Scalar.UTF8View","url":"\/documentation\/compute\/unicode\/scalar\/utf8view","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/AnyRandomAccessCollection":{"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyRandomAccessCollection","url":"\/documentation\/compute\/anyrandomaccesscollection","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyRandomAccessCollection"}],"navigatorTitle":[{"kind":"identifier","text":"AnyRandomAccessCollection"}],"title":"AnyRandomAccessCollection","abstract":[{"type":"text","text":"A type-erased wrapper over any collection with indices that"},{"type":"text","text":" "},{"text":"support random access traversal.","type":"text"}],"kind":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Copyable"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Escapable"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]}},"doc://com.swallow.documentation.Compute/documentation/Compute/String/Index":{"abstract":[{"type":"text","text":"A position of a character or code unit in a string."}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Index","kind":"identifier"}],"url":"\/documentation\/compute\/string\/index","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String\/Index","kind":"symbol","title":"String.Index","role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Index"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/simd-swift.module.extension/simd_quatf":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/simd-swift.module.extension\/simd_quatf","abstract":[],"fragments":[{"kind":"keyword","text":"extension"},{"text":" ","kind":"text"},{"kind":"identifier","text":"simd"},{"text":".","kind":"text"},{"text":"simd_quatf","kind":"identifier","preciseIdentifier":"c:@SA@simd_quatf"}],"title":"simd_quatf","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"simd_quatf"}],"url":"\/documentation\/compute\/simd-swift.module.extension\/simd_quatf","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Unicode/UTF16/ForwardParser":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Unicode\/UTF16\/ForwardParser","url":"\/documentation\/compute\/unicode\/utf16\/forwardparser","navigatorTitle":[{"text":"ForwardParser","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ForwardParser"}],"type":"topic","abstract":[],"role":"symbol","title":"Unicode.UTF16.ForwardParser","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Set":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Set","kind":"identifier"}],"abstract":[{"text":"An unordered collection of unique elements.","type":"text"}],"navigatorTitle":[{"text":"Set","kind":"identifier"}],"type":"topic","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Set","conformance":{"constraints":[{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"code":"Decodable","type":"codeVoice"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"title":"Set","url":"\/documentation\/compute\/set","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/FlattenSequence":{"kind":"symbol","abstract":[{"text":"A sequence consisting of all the elements contained in each segment","type":"text"},{"text":" ","type":"text"},{"text":"contained in some ","type":"text"},{"code":"Base","type":"codeVoice"},{"type":"text","text":" sequence."}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FlattenSequence","kind":"identifier"}],"navigatorTitle":[{"text":"FlattenSequence","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FlattenSequence","title":"FlattenSequence","url":"\/documentation\/compute\/flattensequence","role":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Base"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sequence"},{"type":"text","text":" and "},{"code":"Base.Element","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Sequence"},{"type":"text","text":"."}]},"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/UInt64":{"navigatorTitle":[{"text":"UInt64","kind":"identifier"}],"kind":"symbol","role":"symbol","type":"topic","title":"UInt64","abstract":[{"text":"A 64-bit unsigned integer value","type":"text"},{"type":"text","text":" "},{"type":"text","text":"type."}],"url":"\/documentation\/compute\/uint64","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"UInt64","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UInt64"},"doc://com.swallow.documentation.Compute/documentation/Compute/EnumeratedSequence":{"url":"\/documentation\/compute\/enumeratedsequence","abstract":[{"type":"text","text":"An enumeration of the elements of a sequence or collection."}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"EnumeratedSequence"}],"type":"topic","title":"EnumeratedSequence","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"EnumeratedSequence"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Base","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sequence"},{"text":".","type":"text"}]},"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/EnumeratedSequence"},"doc://com.swallow.documentation.Compute/documentation/Compute/JoinedSequence/Iterator":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Iterator","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/JoinedSequence\/Iterator","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Base","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sequence"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Base.Element"},{"type":"text","text":" conforms to "},{"code":"Sequence","type":"codeVoice"},{"text":".","type":"text"}]},"title":"JoinedSequence.Iterator","type":"topic","role":"symbol","abstract":[{"type":"text","text":"An iterator that presents the elements of the sequences traversed"},{"text":" ","type":"text"},{"text":"by a base iterator, concatenated using a given separator.","type":"text"}],"url":"\/documentation\/compute\/joinedsequence\/iterator","navigatorTitle":[{"text":"Iterator","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/KeyValuePairs":{"abstract":[{"text":"A lightweight collection of key-value pairs.","type":"text"}],"title":"KeyValuePairs","kind":"symbol","navigatorTitle":[{"text":"KeyValuePairs","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/KeyValuePairs","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Key","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Copyable","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"Key"},{"text":" conforms to ","type":"text"},{"code":"Escapable","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"Value"},{"text":" conforms to ","type":"text"},{"code":"Copyable","type":"codeVoice"},{"type":"text","text":", and "},{"code":"Value","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Escapable","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"type":"topic","url":"\/documentation\/compute\/keyvaluepairs","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"KeyValuePairs"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/CollectionDifference":{"url":"\/documentation\/compute\/collectiondifference","title":"CollectionDifference","navigatorTitle":[{"text":"CollectionDifference","kind":"identifier"}],"type":"topic","kind":"symbol","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"ChangeElement"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Equatable"},{"type":"text","text":"."}]},"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CollectionDifference","abstract":[{"type":"text","text":"A collection of insertions and removals that describe the difference"},{"type":"text","text":" "},{"type":"text","text":"between two ordered collection states."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CollectionDifference"}],"role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeMutableBufferPointer":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"UnsafeMutableBufferPointer","kind":"identifier"}],"abstract":[{"text":"A nonowning collection interface to a buffer of mutable","type":"text"},{"type":"text","text":" "},{"type":"text","text":"elements stored contiguously in memory."}],"type":"topic","url":"\/documentation\/compute\/unsafemutablebufferpointer","navigatorTitle":[{"text":"UnsafeMutableBufferPointer","kind":"identifier"}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeMutableBufferPointer","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Element"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Escapable"},{"text":".","type":"text"}]},"title":"UnsafeMutableBufferPointer"},"doc://com.swallow.documentation.Compute/documentation/Compute/Character":{"title":"Character","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Character","abstract":[{"type":"text","text":"A single extended grapheme cluster that approximates a user-perceived"},{"type":"text","text":" "},{"text":"character.","type":"text"}],"type":"topic","role":"symbol","url":"\/documentation\/compute\/character","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Character"}],"navigatorTitle":[{"kind":"identifier","text":"Character"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/FloatingPointSign":{"url":"\/documentation\/compute\/floatingpointsign","title":"FloatingPointSign","abstract":[{"text":"The sign of a floating-point value.","type":"text"}],"role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"FloatingPointSign"}],"navigatorTitle":[{"kind":"identifier","text":"FloatingPointSign"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FloatingPointSign","type":"topic","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Range":{"navigatorTitle":[{"kind":"identifier","text":"Range"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Range","url":"\/documentation\/compute\/range","title":"Range","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Range","kind":"identifier"}],"abstract":[{"type":"text","text":"A half-open interval from a lower bound up to, but not including, an upper"},{"text":" ","type":"text"},{"text":"bound.","type":"text"}],"type":"topic","role":"symbol","conformance":{"constraints":[{"code":"Bound","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Comparable"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]}},"doc://com.swallow.documentation.Compute/documentation/Compute/CollectionDifference/Change":{"type":"topic","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Change","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/CollectionDifference\/Change","url":"\/documentation\/compute\/collectiondifference\/change","abstract":[{"type":"text","text":"A single change to a collection."}],"title":"CollectionDifference.Change","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"ChangeElement","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Equatable","type":"codeVoice"},{"type":"text","text":"."}]},"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Change"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeRawBufferPointer":{"title":"UnsafeRawBufferPointer","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeRawBufferPointer","kind":"symbol","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"UnsafeRawBufferPointer","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"UnsafeRawBufferPointer"}],"url":"\/documentation\/compute\/unsaferawbufferpointer","abstract":[{"type":"text","text":"A  nonowning collection interface to the bytes in a"},{"text":" ","type":"text"},{"type":"text","text":"region of memory."}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Int128":{"url":"\/documentation\/compute\/int128","abstract":[{"type":"text","text":"A 128-bit signed integer type."}],"title":"Int128","role":"symbol","navigatorTitle":[{"text":"Int128","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int128","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Int128"}],"kind":"symbol","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/LazyDropWhileSequence":{"navigatorTitle":[{"kind":"identifier","text":"LazyDropWhileSequence"}],"abstract":[{"type":"text","text":"A sequence whose elements consist of the elements that follow the initial"},{"type":"text","text":" "},{"type":"text","text":"consecutive elements of some base sequence that satisfy a given predicate."}],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Base"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Sequence"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"role":"symbol","title":"LazyDropWhileSequence","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/LazyDropWhileSequence","type":"topic","url":"\/documentation\/compute\/lazydropwhilesequence","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"LazyDropWhileSequence","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeBufferPointer/Iterator":{"url":"\/documentation\/compute\/unsafebufferpointer\/iterator","navigatorTitle":[{"text":"Iterator","kind":"identifier"}],"abstract":[{"text":"An iterator for the elements in the buffer referenced by an","type":"text"},{"type":"text","text":" "},{"code":"UnsafeBufferPointer","type":"codeVoice"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"UnsafeMutableBufferPointer"},{"type":"text","text":" instance."}],"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Iterator","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeBufferPointer\/Iterator","kind":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Element"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Copyable"},{"text":" and ","type":"text"},{"code":"Escapable","type":"codeVoice"},{"type":"text","text":"."}]},"role":"symbol","title":"UnsafeBufferPointer.Iterator"},"doc://com.swallow.documentation.Compute/documentation/Compute/Result":{"url":"\/documentation\/compute\/result","title":"Result","navigatorTitle":[{"kind":"identifier","text":"Result"}],"type":"topic","kind":"symbol","conformance":{"constraints":[{"code":"Success","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Equatable","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"Failure"},{"type":"text","text":" conforms to "},{"code":"Equatable","type":"codeVoice"},{"text":", and ","type":"text"},{"code":"Failure","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Error"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Result","abstract":[{"text":"A value that represents either a success or a failure, including an","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"associated value in each case."}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Result","kind":"identifier"}],"role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/SIMD3":{"kind":"symbol","navigatorTitle":[{"text":"SIMD3","kind":"identifier"}],"title":"SIMD3","url":"\/documentation\/compute\/simd3","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Scalar"},{"text":" conforms to ","type":"text"},{"code":"SIMDScalar","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/SIMD3","abstract":[{"type":"text","text":"A vector of three scalar values."}],"type":"topic","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SIMD3"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Unicode/UTF8/ForwardParser":{"url":"\/documentation\/compute\/unicode\/utf8\/forwardparser","navigatorTitle":[{"text":"ForwardParser","kind":"identifier"}],"title":"Unicode.UTF8.ForwardParser","role":"symbol","kind":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"ForwardParser","kind":"identifier"}],"abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Unicode\/UTF8\/ForwardParser"},"doc://com.swallow.documentation.Compute/documentation/Compute/AnyIndex":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"AnyIndex","kind":"identifier"}],"url":"\/documentation\/compute\/anyindex","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyIndex","role":"symbol","abstract":[{"text":"A wrapper over an underlying index that hides the specific underlying type.","type":"text"}],"navigatorTitle":[{"text":"AnyIndex","kind":"identifier"}],"type":"topic","title":"AnyIndex"},"doc://com.swallow.documentation.Compute/documentation/Compute/Repeated":{"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Repeated","url":"\/documentation\/compute\/repeated","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Repeated","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"Repeated"}],"title":"Repeated","abstract":[{"text":"A collection whose elements are all identical.","type":"text"}],"kind":"symbol","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Element"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Copyable"},{"type":"text","text":" and "},{"code":"Escapable","type":"codeVoice"},{"type":"text","text":"."}]}},"doc://com.swallow.documentation.Compute/documentation/Compute/ArraySlice":{"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArraySlice","title":"ArraySlice","url":"\/documentation\/compute\/arrayslice","kind":"symbol","abstract":[{"type":"text","text":"A slice of an "},{"type":"codeVoice","code":"Array"},{"text":", ","type":"text"},{"type":"codeVoice","code":"ContiguousArray"},{"text":", or ","type":"text"},{"type":"codeVoice","code":"ArraySlice"},{"type":"text","text":" instance."}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ArraySlice"}],"navigatorTitle":[{"kind":"identifier","text":"ArraySlice"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Element","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Copyable","type":"codeVoice"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Escapable"},{"type":"text","text":"."}]}},"doc://com.swallow.documentation.Compute/documentation/Compute/FlattenSequence/Index":{"url":"\/documentation\/compute\/flattensequence\/index","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Index","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"Index"}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Base"},{"type":"text","text":" conforms to "},{"code":"Collection","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"Base.Element","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Collection"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"type":"topic","title":"FlattenSequence.Index","kind":"symbol","abstract":[{"type":"text","text":"A position in a FlattenCollection"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/FlattenSequence\/Index"},"doc://com.swallow.documentation.Compute/documentation/Compute/String":{"type":"topic","navigatorTitle":[{"kind":"identifier","text":"String"}],"title":"String","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"String","kind":"identifier"}],"abstract":[{"type":"text","text":"A Unicode string value that is a collection of characters."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/String","kind":"symbol","role":"symbol","url":"\/documentation\/compute\/string"},"doc://com.swallow.documentation.Compute/documentation/Compute/UnsafeBufferPointer":{"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnsafeBufferPointer","url":"\/documentation\/compute\/unsafebufferpointer","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"UnsafeBufferPointer"}],"navigatorTitle":[{"text":"UnsafeBufferPointer","kind":"identifier"}],"title":"UnsafeBufferPointer","abstract":[{"type":"text","text":"A nonowning collection interface to a buffer of"},{"text":" ","type":"text"},{"type":"text","text":"elements stored contiguously in memory."}],"kind":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Copyable"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Escapable"},{"text":".","type":"text"}]}},"doc://com.swallow.documentation.Compute/documentation/Compute/Int64":{"url":"\/documentation\/compute\/int64","title":"Int64","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int64","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Int64"}],"abstract":[{"type":"text","text":"A 64-bit signed integer value"},{"text":" ","type":"text"},{"text":"type.","type":"text"}],"navigatorTitle":[{"text":"Int64","kind":"identifier"}],"type":"topic","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Substring/UTF16View":{"url":"\/documentation\/compute\/substring\/utf16view","role":"symbol","title":"Substring.UTF16View","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"UTF16View"}],"abstract":[],"navigatorTitle":[{"text":"UTF16View","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Substring\/UTF16View","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/ReversedCollection/Index":{"type":"topic","role":"symbol","navigatorTitle":[{"text":"Index","kind":"identifier"}],"kind":"symbol","title":"ReversedCollection.Index","abstract":[{"type":"text","text":"An index that traverses the same positions as an underlying index,"},{"text":" ","type":"text"},{"type":"text","text":"with inverted traversal direction."}],"url":"\/documentation\/compute\/reversedcollection\/index","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Index"}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Base"},{"type":"text","text":" conforms to "},{"code":"BidirectionalCollection","type":"codeVoice"},{"type":"text","text":" and "},{"code":"Base.Index","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ReversedCollection\/Index"},"doc://com.swallow.documentation.Compute/documentation/Compute/Unicode/NumericType":{"navigatorTitle":[{"text":"NumericType","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Unicode\/NumericType","kind":"symbol","title":"Unicode.NumericType","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"NumericType","kind":"identifier"}],"url":"\/documentation\/compute\/unicode\/numerictype","role":"symbol","abstract":[{"type":"text","text":"The numeric type of a scalar."}]},"doc://com.swallow.documentation.Compute/documentation/Compute/EnumeratedSequence/Iterator":{"url":"\/documentation\/compute\/enumeratedsequence\/iterator","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/EnumeratedSequence\/Iterator","title":"EnumeratedSequence.Iterator","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Iterator","kind":"identifier"}],"conformance":{"constraints":[{"code":"Base","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sequence"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"type":"topic","abstract":[{"type":"text","text":"The iterator for "},{"code":"EnumeratedSequence","type":"codeVoice"},{"type":"text","text":"."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Iterator"}],"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/DefaultIndices":{"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Elements"},{"type":"text","text":" conforms to "},{"code":"BidirectionalCollection","type":"codeVoice"},{"type":"text","text":"."}]},"url":"\/documentation\/compute\/defaultindices","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DefaultIndices","kind":"identifier"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/DefaultIndices","abstract":[{"text":"A collection of indices for an arbitrary collection","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"DefaultIndices"}],"title":"DefaultIndices"},"doc://com.swallow.documentation.Compute/documentation/Compute/ContiguousArray":{"url":"\/documentation\/compute\/contiguousarray","role":"symbol","navigatorTitle":[{"text":"ContiguousArray","kind":"identifier"}],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Equatable"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"title":"ContiguousArray","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ContiguousArray","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ContiguousArray"}],"type":"topic","abstract":[{"type":"text","text":"A contiguously stored array."}]},"doc://com.swallow.documentation.Compute/documentation/Compute/ObjectIdentifier":{"title":"ObjectIdentifier","navigatorTitle":[{"text":"ObjectIdentifier","kind":"identifier"}],"type":"topic","url":"\/documentation\/compute\/objectidentifier","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ObjectIdentifier","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ObjectIdentifier","abstract":[{"type":"text","text":"A unique identifier for a class instance or metatype."}],"role":"symbol","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/StrideThrough":{"title":"StrideThrough","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"StrideThrough","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/StrideThrough","type":"topic","navigatorTitle":[{"text":"StrideThrough","kind":"identifier"}],"abstract":[{"text":"A sequence of values formed by striding over a closed interval.","type":"text"}],"conformance":{"constraints":[{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Strideable"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","kind":"symbol","url":"\/documentation\/compute\/stridethrough"},"doc://com.swallow.documentation.Compute/documentation/Compute/RangeSet":{"type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"RangeSet"}],"kind":"symbol","title":"RangeSet","abstract":[{"type":"text","text":"A set of values of any comparable type, represented by ranges."}],"url":"\/documentation\/compute\/rangeset","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RangeSet","kind":"identifier"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Bound","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Comparable"},{"type":"text","text":" and "},{"code":"Hashable","type":"codeVoice"},{"type":"text","text":"."}]},"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/RangeSet"},"doc://com.swallow.documentation.Compute/documentation/Compute/Array":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Array","kind":"identifier"}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Element","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Equatable","type":"codeVoice"},{"type":"text","text":"."}]},"type":"topic","navigatorTitle":[{"kind":"identifier","text":"Array"}],"title":"Array","url":"\/documentation\/compute\/array","kind":"symbol","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Array","abstract":[{"type":"text","text":"An ordered, random-access collection."}]},"doc://com.swallow.documentation.Compute/documentation/Compute/ManagedBufferPointer":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ManagedBufferPointer"}],"abstract":[{"type":"text","text":"Contains a buffer object, and provides access to an instance of"},{"text":" ","type":"text"},{"type":"codeVoice","code":"Header"},{"type":"text","text":" and contiguous storage for an arbitrary number of"},{"type":"text","text":" "},{"type":"codeVoice","code":"Element"},{"text":" instances stored in that buffer.","type":"text"}],"navigatorTitle":[{"text":"ManagedBufferPointer","kind":"identifier"}],"type":"topic","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ManagedBufferPointer","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Header","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Copyable","type":"codeVoice"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Header"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Escapable"},{"type":"text","text":", "},{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"code":"Copyable","type":"codeVoice"},{"type":"text","text":", and "},{"code":"Element","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Escapable","type":"codeVoice"},{"text":".","type":"text"}]},"title":"ManagedBufferPointer","url":"\/documentation\/compute\/managedbufferpointer","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/BranchingDictionary":{"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/BranchingDictionary","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Branch","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":", "},{"type":"codeVoice","code":"Key"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Hashable"},{"text":", and ","type":"text"},{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"code":"Equatable","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"title":"BranchingDictionary","role":"symbol","abstract":[],"navigatorTitle":[{"kind":"identifier","text":"BranchingDictionary"}],"url":"\/documentation\/compute\/branchingdictionary","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BranchingDictionary","kind":"identifier"}],"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/Substring/UTF8View":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"UTF8View","kind":"identifier"}],"title":"Substring.UTF8View","navigatorTitle":[{"kind":"identifier","text":"UTF8View"}],"type":"topic","abstract":[],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Substring\/UTF8View","url":"\/documentation\/compute\/substring\/utf8view","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/EmptyCollection/Iterator":{"url":"\/documentation\/compute\/emptycollection\/iterator","navigatorTitle":[{"text":"Iterator","kind":"identifier"}],"abstract":[{"type":"text","text":"An iterator that never produces an element."}],"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Iterator"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/EmptyCollection\/Iterator","kind":"symbol","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Copyable"},{"type":"text","text":" and "},{"code":"Escapable","type":"codeVoice"},{"type":"text","text":"."}]},"role":"symbol","title":"EmptyCollection.Iterator"},"doc://com.swallow.documentation.Compute/documentation/Compute/Zip2Sequence/Iterator":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Zip2Sequence\/Iterator","abstract":[{"text":"An iterator for ","type":"text"},{"code":"Zip2Sequence","type":"codeVoice"},{"text":".","type":"text"}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Sequence1"},{"text":" conforms to ","type":"text"},{"code":"Sequence","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Sequence2"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Sequence"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"title":"Zip2Sequence.Iterator","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Iterator","kind":"identifier"}],"url":"\/documentation\/compute\/zip2sequence\/iterator","navigatorTitle":[{"kind":"identifier","text":"Iterator"}],"role":"symbol","kind":"symbol","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/ClosedRange":{"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"ClosedRange","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ClosedRange","navigatorTitle":[{"text":"ClosedRange","kind":"identifier"}],"title":"ClosedRange","url":"\/documentation\/compute\/closedrange","abstract":[{"text":"An interval from a lower bound up to, and including, an upper bound.","type":"text"}],"role":"symbol","type":"topic","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Bound"},{"type":"text","text":" conforms to "},{"code":"Comparable","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]}}}}