{"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"mutating"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"next","kind":"identifier"},{"kind":"text","text":"() -> "},{"text":"Elements","kind":"typeIdentifier"},{"text":".","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"kind":"text","text":"?"}]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","level":2,"text":"Return Value","anchor":"return-value"},{"inlineContent":[{"text":"The next element in the underlying sequence if a next element","type":"text"},{"type":"text","text":" "},{"text":"exists; otherwise, ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}]},{"content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Repeatedly calling this method returns all the elements of the underlying"},{"text":" ","type":"text"},{"type":"text","text":"sequence in order. As soon as the sequence has run out of elements, all"},{"type":"text","text":" "},{"type":"text","text":"subsequent calls return "},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"}]},{"inlineContent":[{"type":"text","text":"This example shows how an iterator can be used explicitly to emulate a"},{"text":" ","type":"text"},{"code":"for","type":"codeVoice"},{"type":"text","text":"-"},{"type":"codeVoice","code":"in"},{"type":"text","text":" loop. First, retrieve a sequence’s iterator, and then call"},{"type":"text","text":" "},{"type":"text","text":"the iterator’s "},{"code":"next()","type":"codeVoice"},{"text":" method until it returns ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"},{"type":"codeListing","code":["let numbers = [2, 3, 5, 7]","var numbersIterator = numbers.makeIterator()","","while let num = numbersIterator.next() {","    print(num)","}","\/\/ Prints \"2\"","\/\/ Prints \"3\"","\/\/ Prints \"5\"","\/\/ Prints \"7\""],"syntax":null}],"kind":"content"}],"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/indexingiterator\/next()"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/IndexingIterator\/next()"},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/IndexingIterator","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/IndexingIterator\/IteratorProtocol-Implementations"]]},"metadata":{"role":"symbol","modules":[{"relatedModules":["Swift"],"name":"Compute"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Elements"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Collection"},{"type":"text","text":"."}]},"title":"next()","symbolKind":"method","externalID":"s:s16IndexingIteratorV4next7ElementQzSgyF","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"next"},{"kind":"text","text":"() -> "},{"text":"Elements","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"kind":"text","text":"?"}],"roleHeading":"Instance Method","extendedModule":"Swift"},"sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"abstract":[{"type":"text","text":"Advances to the next element and returns it, or "},{"code":"nil","type":"codeVoice"},{"text":" if no next element","type":"text"},{"type":"text","text":" "},{"type":"text","text":"exists."}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence/Element":{"type":"topic","required":true,"abstract":[{"type":"text","text":"A type representing the sequence’s elements."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"symbol","url":"\/documentation\/compute\/sequence\/element","role":"symbol","title":"Element","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/IndexingIterator/next()":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"next","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"Elements","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier","text":"Element"},{"kind":"text","text":"?"}],"url":"\/documentation\/compute\/indexingiterator\/next()","title":"next()","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/IndexingIterator\/next()","type":"topic","abstract":[{"type":"text","text":"Advances to the next element and returns it, or "},{"type":"codeVoice","code":"nil"},{"text":" if no next element","type":"text"},{"text":" ","type":"text"},{"text":"exists.","type":"text"}],"role":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Elements"},{"text":" conforms to ","type":"text"},{"code":"Collection","type":"codeVoice"},{"text":".","type":"text"}]}},"doc://com.swallow.documentation.Compute/documentation/Compute/IndexingIterator":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/IndexingIterator","title":"IndexingIterator","abstract":[{"type":"text","text":"A type that iterates over a collection using its indices."}],"kind":"symbol","navigatorTitle":[{"text":"IndexingIterator","kind":"identifier"}],"url":"\/documentation\/compute\/indexingiterator","type":"topic","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"IndexingIterator","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/IndexingIterator/IteratorProtocol-Implementations":{"abstract":[],"url":"\/documentation\/compute\/indexingiterator\/iteratorprotocol-implementations","title":"IteratorProtocol Implementations","role":"collectionGroup","kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/IndexingIterator\/IteratorProtocol-Implementations","type":"topic"}}}