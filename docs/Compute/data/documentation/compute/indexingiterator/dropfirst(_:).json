{"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/IndexingIterator\/dropFirst(_:)","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"major":0,"patch":0},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/IndexingIterator","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/IndexingIterator\/Sequence-Implementations"]]},"kind":"symbol","sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"dropFirst","kind":"identifier"},{"kind":"text","text":"("},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"k"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":" = 1) -> "},{"text":"DropFirstSequence","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/DropFirstSequence","preciseIdentifier":"s:s17DropFirstSequenceV","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}]}]},{"kind":"parameters","parameters":[{"name":"k","content":[{"type":"paragraph","inlineContent":[{"text":"The number of elements to drop from the beginning of","type":"text"},{"type":"text","text":" "},{"text":"the sequence. ","type":"text"},{"type":"codeVoice","code":"k"},{"type":"text","text":" must be greater than or equal to zero."}]}]}]},{"content":[{"type":"heading","level":2,"anchor":"return-value","text":"Return Value"},{"inlineContent":[{"type":"text","text":"A sequence starting after the specified number of"},{"type":"text","text":" "},{"text":"elements.","type":"text"}],"type":"paragraph"}],"kind":"content"},{"content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"If the number of elements to drop exceeds the number of elements in","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the sequence, the result is an empty sequence."}]},{"type":"codeListing","syntax":null,"code":["let numbers = [1, 2, 3, 4, 5]","print(numbers.dropFirst(2))","\/\/ Prints \"[3, 4, 5]\"","print(numbers.dropFirst(10))","\/\/ Prints \"[]\""]},{"style":"note","name":"Complexity","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"O(1), with O("},{"inlineContent":[{"text":"k","type":"text"}],"type":"emphasis"},{"text":") deferred to each iteration of the result,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"where "},{"type":"emphasis","inlineContent":[{"type":"text","text":"k"}]},{"text":" is the number of elements to drop from the beginning of","type":"text"},{"text":" ","type":"text"},{"text":"the sequence.","type":"text"}]}],"type":"aside"}],"kind":"content"}],"abstract":[{"type":"text","text":"Returns a sequence containing all but the given number of initial"},{"type":"text","text":" "},{"type":"text","text":"elements."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/indexingiterator\/dropfirst(_:)"]}],"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"dropFirst"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"DropFirstSequence","preciseIdentifier":"s:s17DropFirstSequenceV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}],"externalID":"s:STsE9dropFirstys04DropB8SequenceVyxGSiF::SYNTHESIZED::s:s16IndexingIteratorV","modules":[{"relatedModules":["Swift"],"name":"Compute"}],"role":"symbol","extendedModule":"Swift","symbolKind":"method","roleHeading":"Instance Method","title":"dropFirst(_:)"},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/IndexingIterator/dropFirst(_:)":{"type":"topic","url":"\/documentation\/compute\/indexingiterator\/dropfirst(_:)","title":"dropFirst(_:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"dropFirst","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:s17DropFirstSequenceV","kind":"typeIdentifier","text":"DropFirstSequence"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"abstract":[{"type":"text","text":"Returns a sequence containing all but the given number of initial"},{"text":" ","type":"text"},{"text":"elements.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/IndexingIterator\/dropFirst(_:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/DropFirstSequence":{"abstract":[{"type":"text","text":"A sequence that lazily consumes and drops "},{"type":"codeVoice","code":"n"},{"type":"text","text":" elements from an underlying"},{"text":" ","type":"text"},{"code":"Base","type":"codeVoice"},{"type":"text","text":" iterator before possibly returning the first available element."}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"DropFirstSequence"}],"type":"topic","role":"symbol","url":"\/documentation\/compute\/dropfirstsequence","navigatorTitle":[{"kind":"identifier","text":"DropFirstSequence"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/DropFirstSequence","title":"DropFirstSequence","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/IndexingIterator/Sequence-Implementations":{"title":"Sequence Implementations","type":"topic","abstract":[],"kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/IndexingIterator\/Sequence-Implementations","url":"\/documentation\/compute\/indexingiterator\/sequence-implementations","role":"collectionGroup"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","abstract":[{"type":"text","text":"A signed integer value type."}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Int","kind":"identifier"}],"navigatorTitle":[{"text":"Int","kind":"identifier"}],"title":"Int","url":"\/documentation\/compute\/int","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/IndexingIterator":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/IndexingIterator","title":"IndexingIterator","abstract":[{"type":"text","text":"A type that iterates over a collection using its indices."}],"kind":"symbol","navigatorTitle":[{"text":"IndexingIterator","kind":"identifier"}],"url":"\/documentation\/compute\/indexingiterator","type":"topic","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"IndexingIterator","kind":"identifier"}]}}}