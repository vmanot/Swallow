{"kind":"symbol","sections":[],"abstract":[{"type":"text","text":"Returns the first element of the sequence that satisfies the given"},{"type":"text","text":" "},{"type":"text","text":"predicate."}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArraySlice","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArraySlice\/Sequence-Implementations"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"first","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"where"},{"kind":"text","text":" "},{"text":"predicate","kind":"internalParam"},{"kind":"text","text":": ("},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","text":"Element"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bool","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") "},{"text":"rethrows","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element"},{"text":"?","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A closure that takes an element of the sequence as"},{"type":"text","text":" "},{"text":"its argument and returns a Boolean value indicating whether the","type":"text"},{"type":"text","text":" "},{"text":"element is a match.","type":"text"}]}],"name":"predicate"}]},{"content":[{"type":"heading","text":"Return Value","level":2,"anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The first element of the sequence that satisfies "},{"type":"codeVoice","code":"predicate"},{"type":"text","text":","},{"text":" ","type":"text"},{"text":"or ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":" if there is no element that satisfies "},{"type":"codeVoice","code":"predicate"},{"text":".","type":"text"}]}],"kind":"content"},{"content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The following example uses the "},{"type":"codeVoice","code":"first(where:)"},{"text":" method to find the first","type":"text"},{"type":"text","text":" "},{"text":"negative number in an array of integers:","type":"text"}]},{"type":"codeListing","syntax":null,"code":["let numbers = [3, 7, 4, -2, 9, -6, 10, 1]","if let firstNegative = numbers.first(where: { $0 < 0 }) {","    print(\"The first negative number is \\(firstNegative).\")","}","\/\/ Prints \"The first negative number is -2.\""]},{"style":"note","type":"aside","content":[{"inlineContent":[{"type":"text","text":"O("},{"type":"emphasis","inlineContent":[{"type":"text","text":"n"}]},{"type":"text","text":"), where "},{"inlineContent":[{"type":"text","text":"n"}],"type":"emphasis"},{"text":" is the length of the sequence.","type":"text"}],"type":"paragraph"}],"name":"Complexity"}],"kind":"content"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArraySlice\/first(where:)","interfaceLanguage":"swift"},"metadata":{"role":"symbol","externalID":"s:STsE5first5where7ElementQzSgSbADKXE_tKF::SYNTHESIZED::s:s10ArraySliceV","extendedModule":"Swift","symbolKind":"method","modules":[{"relatedModules":["Swift"],"name":"Compute"}],"title":"first(where:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"first"},{"text":"(","kind":"text"},{"text":"where","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"text":"?","kind":"text"}],"roleHeading":"Instance Method"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/arrayslice\/first(where:)"]}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/ArraySlice":{"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArraySlice","role":"symbol","abstract":[{"type":"text","text":"A slice of an "},{"code":"Array","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"ContiguousArray"},{"text":", or ","type":"text"},{"type":"codeVoice","code":"ArraySlice"},{"text":" instance.","type":"text"}],"title":"ArraySlice","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ArraySlice"}],"navigatorTitle":[{"kind":"identifier","text":"ArraySlice"}],"url":"\/documentation\/compute\/arrayslice","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence/Element":{"type":"topic","required":true,"abstract":[{"type":"text","text":"A type representing the sequenceâ€™s elements."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"symbol","url":"\/documentation\/compute\/sequence\/element","role":"symbol","title":"Element","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/ArraySlice/first(where:)":{"kind":"symbol","title":"first(where:)","role":"symbol","abstract":[{"text":"Returns the first element of the sequence that satisfies the given","type":"text"},{"type":"text","text":" "},{"type":"text","text":"predicate."}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"first"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"where"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"text":"?","kind":"text"}],"type":"topic","url":"\/documentation\/compute\/arrayslice\/first(where:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArraySlice\/first(where:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/Bool":{"url":"\/documentation\/compute\/bool","role":"symbol","title":"Bool","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Bool","kind":"identifier"}],"abstract":[{"type":"text","text":"A value type whose instances are either "},{"type":"codeVoice","code":"true"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"false"},{"text":".","type":"text"}],"navigatorTitle":[{"text":"Bool","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bool","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/ArraySlice/Sequence-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArraySlice\/Sequence-Implementations","title":"Sequence Implementations","abstract":[],"kind":"article","url":"\/documentation\/compute\/arrayslice\/sequence-implementations","type":"topic","role":"collectionGroup"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"}}}