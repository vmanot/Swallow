{"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"endIndex","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","text":"Int"},{"text":" { ","kind":"text"},{"text":"get","kind":"keyword"},{"kind":"text","text":" }"}]}]},{"kind":"content","content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"inlineContent":[{"type":"text","text":"When you need a range that includes the last element of an array, use the"},{"text":" ","type":"text"},{"type":"text","text":"half-open range operator ("},{"code":"..<","type":"codeVoice"},{"type":"text","text":") with "},{"type":"codeVoice","code":"endIndex"},{"type":"text","text":". The "},{"code":"..<","type":"codeVoice"},{"text":" operator","type":"text"},{"type":"text","text":" "},{"type":"text","text":"creates a range that doesn’t include the upper bound, so it’s always"},{"type":"text","text":" "},{"text":"safe to use with ","type":"text"},{"type":"codeVoice","code":"endIndex"},{"type":"text","text":". For example:"}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":["let numbers = [10, 20, 30, 40, 50]","if let i = numbers.firstIndex(of: 30) {","    print(numbers[i ..< numbers.endIndex])","}","\/\/ Prints \"[30, 40, 50]\""]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If the array is empty, "},{"type":"codeVoice","code":"endIndex"},{"text":" is equal to ","type":"text"},{"type":"codeVoice","code":"startIndex"},{"type":"text","text":"."}]}]}],"variants":[{"paths":["\/documentation\/compute\/arrayslice\/endindex"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"text":"The array’s “past the end” position—that is, the position one greater","type":"text"},{"type":"text","text":" "},{"type":"text","text":"than the last valid subscript argument."}],"metadata":{"roleHeading":"Instance Property","modules":[{"name":"Compute","relatedModules":["Swift"]}],"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"endIndex"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"}],"externalID":"s:s10ArraySliceV8endIndexSivp","extendedModule":"Swift","symbolKind":"property","role":"symbol","title":"endIndex"},"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArraySlice","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArraySlice\/RandomAccessCollection-Implementations"]]},"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArraySlice\/endIndex"},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/ArraySlice/RandomAccessCollection-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArraySlice\/RandomAccessCollection-Implementations","url":"\/documentation\/compute\/arrayslice\/randomaccesscollection-implementations","abstract":[],"title":"RandomAccessCollection Implementations","type":"topic","kind":"article","role":"collectionGroup"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/ArraySlice":{"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArraySlice","role":"symbol","abstract":[{"type":"text","text":"A slice of an "},{"code":"Array","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"ContiguousArray"},{"text":", or ","type":"text"},{"type":"codeVoice","code":"ArraySlice"},{"text":" instance.","type":"text"}],"title":"ArraySlice","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ArraySlice"}],"navigatorTitle":[{"kind":"identifier","text":"ArraySlice"}],"url":"\/documentation\/compute\/arrayslice","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","abstract":[{"type":"text","text":"A signed integer value type."}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Int","kind":"identifier"}],"navigatorTitle":[{"text":"Int","kind":"identifier"}],"title":"Int","url":"\/documentation\/compute\/int","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/ArraySlice/endIndex":{"kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"endIndex"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"type":"topic","url":"\/documentation\/compute\/arrayslice\/endindex","role":"symbol","abstract":[{"type":"text","text":"The array’s “past the end” position—that is, the position one greater"},{"text":" ","type":"text"},{"type":"text","text":"than the last valid subscript argument."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArraySlice\/endIndex","title":"endIndex"}}}