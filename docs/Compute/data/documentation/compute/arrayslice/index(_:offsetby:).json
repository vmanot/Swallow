{"sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"abstract":[{"type":"text","text":"Returns an index that is the specified distance from the given index."}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"index","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"text":"i","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Int","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","preciseIdentifier":"s:Si"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"offsetBy"},{"kind":"text","text":" "},{"kind":"internalParam","text":"distance"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","preciseIdentifier":"s:Si","text":"Int"}],"platforms":["macOS"]}],"kind":"declarations"},{"parameters":[{"name":"i","content":[{"inlineContent":[{"text":"A valid index of the array.","type":"text"}],"type":"paragraph"}]},{"name":"distance","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The distance to offset "},{"code":"i","type":"codeVoice"},{"text":".","type":"text"}]}]}],"kind":"parameters"},{"content":[{"text":"Return Value","level":2,"type":"heading","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"text":"An index offset by ","type":"text"},{"type":"codeVoice","code":"distance"},{"text":" from the index ","type":"text"},{"code":"i","type":"codeVoice"},{"text":". If","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"distance"},{"type":"text","text":" is positive, this is the same value as the result of"},{"text":" ","type":"text"},{"type":"codeVoice","code":"distance"},{"type":"text","text":" calls to "},{"type":"codeVoice","code":"index(after:)"},{"type":"text","text":". If "},{"code":"distance","type":"codeVoice"},{"type":"text","text":" is negative, this"},{"text":" ","type":"text"},{"type":"text","text":"is the same value as the result of "},{"code":"abs(distance)","type":"codeVoice"},{"type":"text","text":" calls to"},{"type":"text","text":" "},{"type":"codeVoice","code":"index(before:)"},{"type":"text","text":"."}]}],"kind":"content"},{"kind":"content","content":[{"level":2,"type":"heading","text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The following example obtains an index advanced four positions from an"},{"text":" ","type":"text"},{"text":"arrayâ€™s starting index and then prints the element at that position.","type":"text"}]},{"type":"codeListing","code":["let numbers = [10, 20, 30, 40, 50]","let i = numbers.index(numbers.startIndex, offsetBy: 4)","print(numbers[i])","\/\/ Prints \"50\""],"syntax":null},{"type":"paragraph","inlineContent":[{"text":"The value passed as ","type":"text"},{"type":"codeVoice","code":"distance"},{"text":" must not offset ","type":"text"},{"type":"codeVoice","code":"i"},{"type":"text","text":" beyond the bounds of"},{"text":" ","type":"text"},{"type":"text","text":"the collection."}]}]}],"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArraySlice\/index(_:offsetBy:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArraySlice","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArraySlice\/RandomAccessCollection-Implementations"]]},"metadata":{"symbolKind":"method","externalID":"s:s10ArraySliceV5index_8offsetByS2i_SitF","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"index"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"text":"offsetBy","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"}],"extendedModule":"Swift","roleHeading":"Instance Method","role":"symbol","modules":[{"name":"Compute","relatedModules":["Swift"]}],"title":"index(_:offsetBy:)"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/arrayslice\/index(_:offsetby:)"]}],"kind":"symbol","references":{"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Int":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","abstract":[{"type":"text","text":"A signed integer value type."}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Int","kind":"identifier"}],"navigatorTitle":[{"text":"Int","kind":"identifier"}],"title":"Int","url":"\/documentation\/compute\/int","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/ArraySlice/index(_:offsetBy:)":{"url":"\/documentation\/compute\/arrayslice\/index(_:offsetby:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArraySlice\/index(_:offsetBy:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"index","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"offsetBy","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"text":") -> ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"}],"type":"topic","kind":"symbol","title":"index(_:offsetBy:)","abstract":[{"type":"text","text":"Returns an index that is the specified distance from the given index."}]},"doc://com.swallow.documentation.Compute/documentation/Compute/ArraySlice/RandomAccessCollection-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArraySlice\/RandomAccessCollection-Implementations","url":"\/documentation\/compute\/arrayslice\/randomaccesscollection-implementations","abstract":[],"title":"RandomAccessCollection Implementations","type":"topic","kind":"article","role":"collectionGroup"},"doc://com.swallow.documentation.Compute/documentation/Compute/ArraySlice":{"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArraySlice","role":"symbol","abstract":[{"type":"text","text":"A slice of an "},{"code":"Array","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"ContiguousArray"},{"text":", or ","type":"text"},{"type":"codeVoice","code":"ArraySlice"},{"text":" instance.","type":"text"}],"title":"ArraySlice","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ArraySlice"}],"navigatorTitle":[{"kind":"identifier","text":"ArraySlice"}],"url":"\/documentation\/compute\/arrayslice","type":"topic"}}}