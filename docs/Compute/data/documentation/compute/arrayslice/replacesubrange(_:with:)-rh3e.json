{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"mutating","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"replaceSubrange","kind":"identifier"},{"kind":"text","text":"<"},{"text":"C","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"subrange","kind":"internalParam"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Range","text":"Range","preciseIdentifier":"s:Sn","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"with"},{"kind":"text","text":" "},{"kind":"internalParam","text":"newElements"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":") "},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":" == "},{"text":"C","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","text":"Element","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"C"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:Sl","text":"Collection","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection"}],"platforms":["macOS"],"languages":["swift"]}]},{"parameters":[{"name":"subrange","content":[{"inlineContent":[{"text":"The subrange of the array to replace. The start and end of","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"a subrange must be valid indices of the array."}],"type":"paragraph"}]},{"name":"newElements","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The new elements to add to the array."}]}]}],"kind":"parameters"},{"content":[{"level":2,"type":"heading","text":"Discussion","anchor":"discussion"},{"inlineContent":[{"text":"This method has the effect of removing the specified range of elements","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"from the array and inserting the new elements at the same location. The"},{"text":" ","type":"text"},{"text":"number of new elements need not match the number of elements being","type":"text"},{"type":"text","text":" "},{"text":"removed.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"In this example, three elements in the middle of an array of integers are"},{"text":" ","type":"text"},{"text":"replaced by the five elements of a ","type":"text"},{"code":"Repeated<Int>","type":"codeVoice"},{"type":"text","text":" instance."}]},{"type":"codeListing","code":[" var nums = [10, 20, 30, 40, 50]"," nums.replaceSubrange(1...3, with: repeatElement(1, count: 5))"," print(nums)"," \/\/ Prints \"[10, 1, 1, 1, 1, 1, 50]\""],"syntax":null},{"type":"paragraph","inlineContent":[{"text":"If you pass a zero-length range as the ","type":"text"},{"type":"codeVoice","code":"subrange"},{"type":"text","text":" parameter, this method"},{"type":"text","text":" "},{"text":"inserts the elements of ","type":"text"},{"code":"newElements","type":"codeVoice"},{"text":" at ","type":"text"},{"type":"codeVoice","code":"subrange.startIndex"},{"text":". Calling","type":"text"},{"type":"text","text":" "},{"text":"the ","type":"text"},{"code":"insert(contentsOf:at:)","type":"codeVoice"},{"type":"text","text":" method instead is preferred."}]},{"inlineContent":[{"type":"text","text":"Likewise, if you pass a zero-length collection as the "},{"code":"newElements","type":"codeVoice"},{"text":" ","type":"text"},{"type":"text","text":"parameter, this method removes the elements in the given subrange"},{"type":"text","text":" "},{"type":"text","text":"without replacement. Calling the "},{"code":"removeSubrange(_:)","type":"codeVoice"},{"type":"text","text":" method instead is"},{"text":" ","type":"text"},{"text":"preferred.","type":"text"}],"type":"paragraph"},{"style":"note","type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"O(","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"n"}]},{"text":" + ","type":"text"},{"inlineContent":[{"text":"m","type":"text"}],"type":"emphasis"},{"type":"text","text":"), where "},{"type":"emphasis","inlineContent":[{"text":"n","type":"text"}]},{"text":" is length of the array and","type":"text"},{"text":" ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"m"}]},{"text":" is the length of ","type":"text"},{"type":"codeVoice","code":"newElements"},{"type":"text","text":". If the call to this method simply"},{"text":" ","type":"text"},{"type":"text","text":"appends the contents of "},{"code":"newElements","type":"codeVoice"},{"type":"text","text":" to the array, this method is"},{"text":" ","type":"text"},{"type":"text","text":"equivalent to "},{"type":"codeVoice","code":"append(contentsOf:)"},{"type":"text","text":"."}]}],"name":"Complexity"}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/arrayslice\/replacesubrange(_:with:)-rh3e"]}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArraySlice","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArraySlice\/RangeReplaceableCollection-Implementations"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"title":"replaceSubrange(_:with:)","roleHeading":"Instance Method","symbolKind":"method","role":"symbol","extendedModule":"Swift","modules":[{"relatedModules":["Swift"],"name":"Compute"}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"replaceSubrange"},{"text":"<","kind":"text"},{"text":"C","kind":"genericParameter"},{"kind":"text","text":">("},{"preciseIdentifier":"s:Sn","kind":"typeIdentifier","text":"Range"},{"kind":"text","text":"<"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"with"},{"text":": ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":")","kind":"text"}],"externalID":"s:s10ArraySliceV15replaceSubrange_4withySnySiG_qd__nt7ElementQyd__RszSlRd__lF"},"kind":"symbol","abstract":[{"type":"text","text":"Replaces a range of elements with the elements in the specified"},{"text":" ","type":"text"},{"type":"text","text":"collection."}],"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArraySlice\/replaceSubrange(_:with:)-rh3e","interfaceLanguage":"swift"},"sections":[],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Int":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","abstract":[{"type":"text","text":"A signed integer value type."}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Int","kind":"identifier"}],"navigatorTitle":[{"text":"Int","kind":"identifier"}],"title":"Int","url":"\/documentation\/compute\/int","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Collection":{"kind":"symbol","role":"symbol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Collection"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection","url":"\/documentation\/compute\/collection","abstract":[{"type":"text","text":"A sequence whose elements can be traversed multiple times,"},{"text":" ","type":"text"},{"text":"nondestructively, and accessed by an indexed subscript.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Collection"}],"title":"Collection"},"doc://com.swallow.documentation.Compute/documentation/Compute/ArraySlice/replaceSubrange(_:with:)-rh3e":{"title":"replaceSubrange(_:with:)","abstract":[{"type":"text","text":"Replaces a range of elements with the elements in the specified"},{"text":" ","type":"text"},{"text":"collection.","type":"text"}],"url":"\/documentation\/compute\/arrayslice\/replacesubrange(_:with:)-rh3e","kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArraySlice\/replaceSubrange(_:with:)-rh3e","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"replaceSubrange"},{"text":"<","kind":"text"},{"text":"C","kind":"genericParameter"},{"kind":"text","text":">("},{"preciseIdentifier":"s:Sn","text":"Range","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"text":">, ","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"kind":"text","text":")"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/ArraySlice":{"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArraySlice","role":"symbol","abstract":[{"type":"text","text":"A slice of an "},{"code":"Array","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"ContiguousArray"},{"text":", or ","type":"text"},{"type":"codeVoice","code":"ArraySlice"},{"text":" instance.","type":"text"}],"title":"ArraySlice","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ArraySlice"}],"navigatorTitle":[{"kind":"identifier","text":"ArraySlice"}],"url":"\/documentation\/compute\/arrayslice","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence/Element":{"type":"topic","required":true,"abstract":[{"type":"text","text":"A type representing the sequence’s elements."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"symbol","url":"\/documentation\/compute\/sequence\/element","role":"symbol","title":"Element","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/ArraySlice/RangeReplaceableCollection-Implementations":{"role":"collectionGroup","type":"topic","url":"\/documentation\/compute\/arrayslice\/rangereplaceablecollection-implementations","title":"RangeReplaceableCollection Implementations","abstract":[],"kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArraySlice\/RangeReplaceableCollection-Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Range":{"kind":"symbol","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Range","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Range","url":"\/documentation\/compute\/range","abstract":[{"text":"A half-open interval from a lower bound up to, but not including, an upper","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"bound."}],"navigatorTitle":[{"text":"Range","kind":"identifier"}],"title":"Range"}}}