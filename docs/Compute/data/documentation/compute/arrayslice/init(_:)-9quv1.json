{"metadata":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"text":"S","kind":"typeIdentifier"},{"text":")","kind":"text"}],"extendedModule":"Swift","externalID":"s:s10ArraySliceVyAByxGqd__c7ElementQyd__RszSTRd__lufc","roleHeading":"Initializer","symbolKind":"init","modules":[{"name":"Compute","relatedModules":["Swift"]}]},"schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArraySlice","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArraySlice\/RangeReplaceableCollection-Implementations"]]},"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArraySlice\/init(_:)-9quv1","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/compute\/arrayslice\/init(_:)-9quv1"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"init"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"S"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"text":"s","kind":"internalParam"},{"kind":"text","text":": "},{"text":"S","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":" == "},{"text":"S","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"S"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence","kind":"typeIdentifier","text":"Sequence","preciseIdentifier":"s:ST"}]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The sequence of elements to turn into an array.","type":"text"}]}],"name":"s"}]},{"kind":"content","content":[{"anchor":"discussion","text":"Discussion","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"You can use this initializer to create an array from any other type that"},{"type":"text","text":" "},{"type":"text","text":"conforms to the "},{"code":"Sequence","type":"codeVoice"},{"type":"text","text":" protocol. For example, you might want to"},{"text":" ","type":"text"},{"type":"text","text":"create an array with the integers from 1 through 7. Use this initializer"},{"type":"text","text":" "},{"type":"text","text":"around a range instead of typing all those numbers in an array literal."}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":["let numbers = Array(1...7)","print(numbers)","\/\/ Prints \"[1, 2, 3, 4, 5, 6, 7]\""]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can also use this initializer to convert a complex sequence or"},{"type":"text","text":" "},{"type":"text","text":"collection type back to an array. For example, the "},{"type":"codeVoice","code":"keys"},{"type":"text","text":" property of"},{"text":" ","type":"text"},{"type":"text","text":"a dictionary isn’t an array with its own storage, it’s a collection"},{"type":"text","text":" "},{"text":"that maps its elements from the dictionary only when they’re","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"accessed, saving the time and space needed to allocate an array. If"},{"type":"text","text":" "},{"type":"text","text":"you need to pass those keys to a method that takes an array, however,"},{"type":"text","text":" "},{"type":"text","text":"use this initializer to convert that list from its type of"},{"type":"text","text":" "},{"code":"LazyMapCollection<Dictionary<String, Int>, Int>","type":"codeVoice"},{"type":"text","text":" to a simple"},{"text":" ","type":"text"},{"type":"codeVoice","code":"[String]"},{"text":".","type":"text"}]},{"code":["func cacheImagesWithNames(names: [String]) {","    \/\/ custom image loading and caching"," }","","let namedHues: [String: Int] = [\"Vermillion\": 18, \"Magenta\": 302,","        \"Gold\": 50, \"Cerise\": 320]","let colorNames = Array(namedHues.keys)","cacheImagesWithNames(colorNames)","","print(colorNames)","\/\/ Prints \"[\"Gold\", \"Cerise\", \"Magenta\", \"Vermillion\"]\""],"syntax":null,"type":"codeListing"}]}],"abstract":[{"type":"text","text":"Creates an array containing the elements of a sequence."}],"sections":[],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence/Element":{"type":"topic","required":true,"abstract":[{"type":"text","text":"A type representing the sequence’s elements."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"symbol","url":"\/documentation\/compute\/sequence\/element","role":"symbol","title":"Element","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence":{"url":"\/documentation\/compute\/sequence","navigatorTitle":[{"kind":"identifier","text":"Sequence"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence","title":"Sequence","kind":"symbol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Sequence","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"A type that provides sequential, iterated access to its elements."}]},"doc://com.swallow.documentation.Compute/documentation/Compute/ArraySlice/init(_:)-9quv1":{"type":"topic","title":"init(_:)","fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"text":"S","kind":"typeIdentifier"},{"kind":"text","text":")"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArraySlice\/init(_:)-9quv1","url":"\/documentation\/compute\/arrayslice\/init(_:)-9quv1","kind":"symbol","role":"symbol","abstract":[{"text":"Creates an array containing the elements of a sequence.","type":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/ArraySlice/RangeReplaceableCollection-Implementations":{"role":"collectionGroup","type":"topic","url":"\/documentation\/compute\/arrayslice\/rangereplaceablecollection-implementations","title":"RangeReplaceableCollection Implementations","abstract":[],"kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArraySlice\/RangeReplaceableCollection-Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/ArraySlice":{"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArraySlice","role":"symbol","abstract":[{"type":"text","text":"A slice of an "},{"code":"Array","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"ContiguousArray"},{"text":", or ","type":"text"},{"type":"codeVoice","code":"ArraySlice"},{"text":" instance.","type":"text"}],"title":"ArraySlice","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ArraySlice"}],"navigatorTitle":[{"kind":"identifier","text":"ArraySlice"}],"url":"\/documentation\/compute\/arrayslice","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"}}}