{"abstract":[{"type":"text","text":"Returns a subsequence containing all but the specified number of final"},{"type":"text","text":" "},{"type":"text","text":"elements."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"dropLast","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"text":"k","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"SubSequence","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/SubSequence","preciseIdentifier":"s:Sl11SubSequenceQa"}],"languages":["swift"],"platforms":["macOS"]}]},{"parameters":[{"name":"k","content":[{"inlineContent":[{"text":"The number of elements to drop off the end of the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"collection. "},{"type":"codeVoice","code":"k"},{"type":"text","text":" must be greater than or equal to zero."}],"type":"paragraph"}]}],"kind":"parameters"},{"content":[{"level":2,"text":"Return Value","anchor":"return-value","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"A subsequence that leaves off ","type":"text"},{"type":"codeVoice","code":"k"},{"type":"text","text":" elements from the end."}]}],"kind":"content"},{"content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"If the number of elements to drop exceeds the number of elements in the","type":"text"},{"type":"text","text":" "},{"text":"collection, the result is an empty subsequence.","type":"text"}]},{"code":["let numbers = [1, 2, 3, 4, 5]","print(numbers.dropLast(2))","\/\/ Prints \"[1, 2, 3]\"","print(numbers.dropLast(10))","\/\/ Prints \"[]\""],"type":"codeListing","syntax":null},{"name":"Complexity","style":"note","content":[{"type":"paragraph","inlineContent":[{"text":"O(1) if the collection conforms to","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"RandomAccessCollection"},{"text":"; otherwise, O(","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"k"}]},{"type":"text","text":"), where "},{"type":"emphasis","inlineContent":[{"type":"text","text":"k"}]},{"type":"text","text":" is the number of"},{"text":" ","type":"text"},{"text":"elements to drop.","type":"text"}]}],"type":"aside"}],"kind":"content"}],"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArraySlice\/dropLast(_:)","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"major":0,"patch":0},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArraySlice","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArraySlice\/BidirectionalCollection-Implementations"]]},"kind":"symbol","variants":[{"paths":["\/documentation\/compute\/arrayslice\/droplast(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"metadata":{"title":"dropLast(_:)","modules":[{"name":"Compute","relatedModules":["Swift"]}],"extendedModule":"Swift","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"dropLast"},{"kind":"text","text":"("},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"SubSequence","kind":"typeIdentifier","preciseIdentifier":"s:Sl11SubSequenceQa"}],"externalID":"s:SKsE8dropLasty11SubSequenceQzSiF::SYNTHESIZED::s:s10ArraySliceV","roleHeading":"Instance Method","symbolKind":"method"},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Int":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Int","abstract":[{"type":"text","text":"A signed integer value type."}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Int","kind":"identifier"}],"navigatorTitle":[{"text":"Int","kind":"identifier"}],"title":"Int","url":"\/documentation\/compute\/int","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/ArraySlice/dropLast(_:)":{"role":"symbol","type":"topic","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"dropLast","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:Sl11SubSequenceQa","text":"SubSequence","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArraySlice\/dropLast(_:)","title":"dropLast(_:)","abstract":[{"type":"text","text":"Returns a subsequence containing all but the specified number of final"},{"text":" ","type":"text"},{"text":"elements.","type":"text"}],"url":"\/documentation\/compute\/arrayslice\/droplast(_:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/ArraySlice/BidirectionalCollection-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArraySlice\/BidirectionalCollection-Implementations","kind":"article","type":"topic","role":"collectionGroup","abstract":[],"title":"BidirectionalCollection Implementations","url":"\/documentation\/compute\/arrayslice\/bidirectionalcollection-implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/Collection/SubSequence":{"url":"\/documentation\/compute\/collection\/subsequence","title":"SubSequence","abstract":[{"type":"text","text":"A collection representing a contiguous subrange of this collectionâ€™s"},{"type":"text","text":" "},{"text":"elements. The subsequence shares indices with the original collection.","type":"text"}],"type":"topic","kind":"symbol","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SubSequence"},{"kind":"text","text":" : "},{"text":"Collection","preciseIdentifier":"s:Sl","kind":"typeIdentifier"},{"text":" = ","kind":"text"},{"text":"Slice","preciseIdentifier":"s:s5SliceV","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":">","kind":"text"}],"required":true,"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Collection\/SubSequence"},"doc://com.swallow.documentation.Compute/documentation/Compute/ArraySlice":{"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArraySlice","role":"symbol","abstract":[{"type":"text","text":"A slice of an "},{"code":"Array","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"ContiguousArray"},{"text":", or ","type":"text"},{"type":"codeVoice","code":"ArraySlice"},{"text":" instance.","type":"text"}],"title":"ArraySlice","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ArraySlice"}],"navigatorTitle":[{"kind":"identifier","text":"ArraySlice"}],"url":"\/documentation\/compute\/arrayslice","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"}}}