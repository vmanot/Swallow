{"metadata":{"role":"symbol","modules":[{"name":"Compute","relatedModules":["Swift"]}],"extendedModule":"Swift","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"append","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":")","kind":"text"}],"title":"append(_:)","roleHeading":"Instance Method","externalID":"s:s10ArraySliceV6appendyyxnF"},"schemaVersion":{"patch":0,"major":0,"minor":3},"abstract":[{"text":"Adds a new element at the end of the array.","type":"text"}],"sections":[],"kind":"symbol","primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"mutating"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"append"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"newElement"},{"text":": ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":")","kind":"text"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"newElement","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The element to append to the array."}]}]}]},{"content":[{"text":"Discussion","level":2,"anchor":"discussion","type":"heading"},{"inlineContent":[{"type":"text","text":"Use this method to append a single element to the end of a mutable array."}],"type":"paragraph"},{"code":["var numbers = [1, 2, 3, 4, 5]","numbers.append(100)","print(numbers)","\/\/ Prints \"[1, 2, 3, 4, 5, 100]\""],"type":"codeListing","syntax":null},{"inlineContent":[{"type":"text","text":"Because arrays increase their allocated capacity using an exponential"},{"text":" ","type":"text"},{"type":"text","text":"strategy, appending a single element to an array is an O(1) operation"},{"type":"text","text":" "},{"type":"text","text":"when averaged over many calls to the "},{"type":"codeVoice","code":"append(_:)"},{"type":"text","text":" method. When an array"},{"type":"text","text":" "},{"text":"has additional capacity and is not sharing its storage with another","type":"text"},{"type":"text","text":" "},{"type":"text","text":"instance, appending an element is O(1). When an array needs to"},{"type":"text","text":" "},{"text":"reallocate storage before appending or its storage is shared with","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"another copy, appending is O("},{"inlineContent":[{"text":"n","type":"text"}],"type":"emphasis"},{"type":"text","text":"), where "},{"type":"emphasis","inlineContent":[{"type":"text","text":"n"}]},{"type":"text","text":" is the length of the array."}],"type":"paragraph"},{"style":"note","content":[{"inlineContent":[{"text":"O(1) on average, over many calls to ","type":"text"},{"type":"codeVoice","code":"append(_:)"},{"type":"text","text":" on the"},{"text":" ","type":"text"},{"text":"same array.","type":"text"}],"type":"paragraph"}],"name":"Complexity","type":"aside"}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArraySlice","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArraySlice\/RangeReplaceableCollection-Implementations"]]},"variants":[{"paths":["\/documentation\/compute\/arrayslice\/append(_:)-3ox9j"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArraySlice\/append(_:)-3ox9j"},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/ArraySlice/append(_:)-3ox9j":{"type":"topic","role":"symbol","url":"\/documentation\/compute\/arrayslice\/append(_:)-3ox9j","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArraySlice\/append(_:)-3ox9j","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"append"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":")"}],"title":"append(_:)","abstract":[{"type":"text","text":"Adds a new element at the end of the array."}]},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/ArraySlice/RangeReplaceableCollection-Implementations":{"role":"collectionGroup","type":"topic","url":"\/documentation\/compute\/arrayslice\/rangereplaceablecollection-implementations","title":"RangeReplaceableCollection Implementations","abstract":[],"kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArraySlice\/RangeReplaceableCollection-Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/ArraySlice":{"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArraySlice","role":"symbol","abstract":[{"type":"text","text":"A slice of an "},{"code":"Array","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"ContiguousArray"},{"text":", or ","type":"text"},{"type":"codeVoice","code":"ArraySlice"},{"text":" instance.","type":"text"}],"title":"ArraySlice","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ArraySlice"}],"navigatorTitle":[{"kind":"identifier","text":"ArraySlice"}],"url":"\/documentation\/compute\/arrayslice","type":"topic"}}}