{"variants":[{"paths":["\/documentation\/compute\/arrayslice\/sort()"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"text":"Sorts the collection in place.","type":"text"}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"mutating","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"sort","kind":"identifier"},{"text":"()","kind":"text"}]}],"kind":"declarations"},{"content":[{"level":2,"type":"heading","text":"Discussion","anchor":"discussion"},{"inlineContent":[{"type":"text","text":"You can sort any mutable collection of elements that conform to the"},{"type":"text","text":" "},{"code":"Comparable","type":"codeVoice"},{"text":" protocol by calling this method. Elements are sorted in","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"ascending order."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"Here’s an example of sorting a list of students’ names. Strings in Swift","type":"text"},{"type":"text","text":" "},{"text":"conform to the ","type":"text"},{"type":"codeVoice","code":"Comparable"},{"type":"text","text":" protocol, so the names are sorted in"},{"type":"text","text":" "},{"text":"ascending order according to the less-than operator (","type":"text"},{"code":"<","type":"codeVoice"},{"text":").","type":"text"}]},{"syntax":null,"code":["var students = [\"Kofi\", \"Abena\", \"Peter\", \"Kweku\", \"Akosua\"]","students.sort()","print(students)","\/\/ Prints \"[\"Abena\", \"Akosua\", \"Kofi\", \"Kweku\", \"Peter\"]\""],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"To sort the elements of your collection in descending order, pass the"},{"type":"text","text":" "},{"type":"text","text":"greater-than operator ("},{"code":">","type":"codeVoice"},{"text":") to the ","type":"text"},{"code":"sort(by:)","type":"codeVoice"},{"type":"text","text":" method."}]},{"type":"codeListing","code":["students.sort(by: >)","print(students)","\/\/ Prints \"[\"Peter\", \"Kweku\", \"Kofi\", \"Akosua\", \"Abena\"]\""],"syntax":null},{"type":"paragraph","inlineContent":[{"type":"text","text":"The sorting algorithm is guaranteed to be stable. A stable sort"},{"text":" ","type":"text"},{"type":"text","text":"preserves the relative order of elements that compare as equal."}]},{"type":"aside","name":"Complexity","style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"O("},{"type":"emphasis","inlineContent":[{"text":"n","type":"text"}]},{"text":" log ","type":"text"},{"inlineContent":[{"text":"n","type":"text"}],"type":"emphasis"},{"type":"text","text":"), where "},{"inlineContent":[{"type":"text","text":"n"}],"type":"emphasis"},{"text":" is the length of the collection.","type":"text"}]}]}],"kind":"content"}],"metadata":{"modules":[{"relatedModules":["Swift"],"name":"Compute"}],"externalID":"s:SMsSkRzSL7ElementSTRpzrlE4sortyyF::SYNTHESIZED::s:s10ArraySliceV","extendedModule":"Swift","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"code":"RandomAccessCollection","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Comparable"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"title":"sort()","symbolKind":"method","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"sort"},{"text":"()","kind":"text"}],"role":"symbol"},"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArraySlice\/sort()"},"sections":[],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArraySlice","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArraySlice\/MutableCollection-Implementations"]]},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/ArraySlice/MutableCollection-Implementations":{"role":"collectionGroup","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArraySlice\/MutableCollection-Implementations","url":"\/documentation\/compute\/arrayslice\/mutablecollection-implementations","title":"MutableCollection Implementations","type":"topic","kind":"article","abstract":[]},"doc://com.swallow.documentation.Compute/documentation/Compute/ArraySlice/sort()":{"role":"symbol","abstract":[{"text":"Sorts the collection in place.","type":"text"}],"url":"\/documentation\/compute\/arrayslice\/sort()","type":"topic","kind":"symbol","title":"sort()","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArraySlice\/sort()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"sort"},{"kind":"text","text":"()"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"code":"RandomAccessCollection","type":"codeVoice"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"code":"Comparable","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]}},"doc://com.swallow.documentation.Compute/documentation/Compute/ArraySlice":{"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArraySlice","role":"symbol","abstract":[{"type":"text","text":"A slice of an "},{"code":"Array","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"ContiguousArray"},{"text":", or ","type":"text"},{"type":"codeVoice","code":"ArraySlice"},{"text":" instance.","type":"text"}],"title":"ArraySlice","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ArraySlice"}],"navigatorTitle":[{"kind":"identifier","text":"ArraySlice"}],"url":"\/documentation\/compute\/arrayslice","type":"topic"}}}