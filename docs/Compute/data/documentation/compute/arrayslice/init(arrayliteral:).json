{"primaryContentSections":[{"declarations":[{"tokens":[{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"arrayLiteral"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"elements"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Element"},{"text":"...)","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"content":[{"inlineContent":[{"type":"text","text":"A variadic list of elements of the new array."}],"type":"paragraph"}],"name":"elements"}],"kind":"parameters"},{"content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"inlineContent":[{"text":"Do not call this initializer directly. It is used by the compiler when","type":"text"},{"text":" ","type":"text"},{"text":"you use an array literal. Instead, create a new array by using an array","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"literal as its value. To do this, enclose a comma-separated list of"},{"text":" ","type":"text"},{"type":"text","text":"values in square brackets."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Here, an array of strings is created from an array literal holding only"},{"type":"text","text":" "},{"type":"text","text":"strings:"}]},{"type":"codeListing","code":["let ingredients: ArraySlice =","      [\"cocoa beans\", \"sugar\", \"cocoa butter\", \"salt\"]"],"syntax":null}],"kind":"content"}],"metadata":{"extendedModule":"Swift","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"arrayLiteral"},{"text":": ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":"...)","kind":"text"}],"roleHeading":"Initializer","externalID":"s:s10ArraySliceV12arrayLiteralAByxGxd_tcfc","modules":[{"relatedModules":["Swift"],"name":"Compute"}],"symbolKind":"init","title":"init(arrayLiteral:)","role":"symbol"},"kind":"symbol","schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArraySlice\/init(arrayLiteral:)"},"variants":[{"paths":["\/documentation\/compute\/arrayslice\/init(arrayliteral:)"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"Creates an array from the given array literal."}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArraySlice","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArraySlice\/ExpressibleByArrayLiteral-Implementations"]]},"sections":[],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/ArraySlice/init(arrayLiteral:)":{"type":"topic","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"arrayLiteral"},{"text":": ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"kind":"text","text":"...)"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArraySlice\/init(arrayLiteral:)","abstract":[{"text":"Creates an array from the given array literal.","type":"text"}],"kind":"symbol","title":"init(arrayLiteral:)","url":"\/documentation\/compute\/arrayslice\/init(arrayliteral:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/ArraySlice/ExpressibleByArrayLiteral-Implementations":{"title":"ExpressibleByArrayLiteral Implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArraySlice\/ExpressibleByArrayLiteral-Implementations","type":"topic","role":"collectionGroup","kind":"article","abstract":[],"url":"\/documentation\/compute\/arrayslice\/expressiblebyarrayliteral-implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/ArraySlice":{"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArraySlice","role":"symbol","abstract":[{"type":"text","text":"A slice of an "},{"code":"Array","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"ContiguousArray"},{"text":", or ","type":"text"},{"type":"codeVoice","code":"ArraySlice"},{"text":" instance.","type":"text"}],"title":"ArraySlice","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ArraySlice"}],"navigatorTitle":[{"kind":"identifier","text":"ArraySlice"}],"url":"\/documentation\/compute\/arrayslice","type":"topic"}}}