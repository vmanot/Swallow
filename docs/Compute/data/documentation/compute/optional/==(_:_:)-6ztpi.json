{"abstract":[{"type":"text","text":"Returns a Boolean value indicating whether the right-hand-side argument is"},{"type":"text","text":" "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"=="},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"internalParam","text":"lhs"},{"kind":"text","text":": "},{"text":"_OptionalNilComparisonType","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"rhs","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"keyword","text":"borrowing"},{"text":" ","kind":"text"},{"text":"Wrapped","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"text":"Bool","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"platforms":["macOS"]}],"kind":"declarations"},{"parameters":[{"content":[{"inlineContent":[{"type":"text","text":"A "},{"code":"nil","type":"codeVoice"},{"type":"text","text":" literal."}],"type":"paragraph"}],"name":"lhs"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A value to compare to "},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"}]}],"name":"rhs"}],"kind":"parameters"},{"content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"You can use this equal-to operator (","type":"text"},{"code":"==","type":"codeVoice"},{"type":"text","text":") to test whether an optional"},{"type":"text","text":" "},{"type":"text","text":"instance is "},{"code":"nil","type":"codeVoice"},{"type":"text","text":" even when the wrapped valueâ€™s type does not conform to"},{"type":"text","text":" "},{"type":"text","text":"the "},{"type":"codeVoice","code":"Equatable"},{"type":"text","text":" protocol."}]},{"type":"paragraph","inlineContent":[{"text":"The following example declares the ","type":"text"},{"type":"codeVoice","code":"stream"},{"type":"text","text":" variable as an optional"},{"type":"text","text":" "},{"type":"text","text":"instance of a hypothetical "},{"code":"DataStream","type":"codeVoice"},{"type":"text","text":" type. Although "},{"code":"DataStream","type":"codeVoice"},{"text":" is not","type":"text"},{"text":" ","type":"text"},{"text":"an ","type":"text"},{"code":"Equatable","type":"codeVoice"},{"type":"text","text":" type, this operator allows checking whether "},{"code":"stream","type":"codeVoice"},{"type":"text","text":" is"},{"type":"text","text":" "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."}]},{"type":"codeListing","code":["var stream: DataStream? = nil","if nil == stream {","    print(\"No data stream is configured.\")","}","\/\/ Prints \"No data stream is configured.\""],"syntax":null}],"kind":"content"}],"sections":[],"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Optional\/==(_:_:)-6ztpi"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/optional\/==(_:_:)-6ztpi"]}],"metadata":{"externalID":"s:SqsRi_zrlE2eeoiySbs26_OptionalNilComparisonTypeV_xSgtFZ","extendedModule":"Swift","modules":[{"name":"Compute","relatedModules":["Swift"]}],"title":"==(_:_:)","symbolKind":"op","roleHeading":"Operator","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"=="},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"text":"_OptionalNilComparisonType","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"borrowing","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Wrapped"},{"text":"?) -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"role":"symbol"},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Optional"]]},"schemaVersion":{"patch":0,"minor":3,"major":0},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Optional":{"type":"topic","role":"symbol","navigatorTitle":[{"text":"Optional","kind":"identifier"}],"url":"\/documentation\/compute\/optional","kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"Optional","kind":"identifier"}],"abstract":[{"type":"text","text":"A type that represents either a wrapped value or the absence of a value."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Optional","title":"Optional"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Bool":{"url":"\/documentation\/compute\/bool","role":"symbol","title":"Bool","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Bool","kind":"identifier"}],"abstract":[{"type":"text","text":"A value type whose instances are either "},{"type":"codeVoice","code":"true"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"false"},{"text":".","type":"text"}],"navigatorTitle":[{"text":"Bool","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bool","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Optional/==(_:_:)-6ztpi":{"kind":"symbol","title":"==(_:_:)","type":"topic","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"==","kind":"identifier"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"text":"_OptionalNilComparisonType","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"borrowing","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Wrapped"},{"kind":"text","text":"?) -> "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"url":"\/documentation\/compute\/optional\/==(_:_:)-6ztpi","role":"symbol","abstract":[{"text":"Returns a Boolean value indicating whether the right-hand-side argument is","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Optional\/==(_:_:)-6ztpi"}}}