{"schemaVersion":{"major":0,"patch":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Optional","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Optional\/Hashable-Implementations"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"eraseToAnyHashable"},{"kind":"text","text":"() -> "},{"text":"AnyHashable","preciseIdentifier":"s:s11AnyHashableV","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyHashable","kind":"typeIdentifier"}],"platforms":["macOS"],"languages":["swift"]}]}],"sections":[],"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Optional\/eraseToAnyHashable()","interfaceLanguage":"swift"},"kind":"symbol","metadata":{"extendedModule":"Swift","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"eraseToAnyHashable","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"AnyHashable","kind":"typeIdentifier","preciseIdentifier":"s:s11AnyHashableV"}],"role":"symbol","modules":[{"name":"Compute","relatedModules":["Swift"]}],"roleHeading":"Instance Method","title":"eraseToAnyHashable()","externalID":"s:SH7SwallowE18eraseToAnyHashables0dE0VyF::SYNTHESIZED::s:Sq"},"variants":[{"paths":["\/documentation\/compute\/optional\/erasetoanyhashable()"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"Hashable.eraseToAnyHashable()"},{"text":".","type":"text"}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Optional":{"type":"topic","role":"symbol","navigatorTitle":[{"text":"Optional","kind":"identifier"}],"url":"\/documentation\/compute\/optional","kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"Optional","kind":"identifier"}],"abstract":[{"type":"text","text":"A type that represents either a wrapped value or the absence of a value."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Optional","title":"Optional"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Optional/Hashable-Implementations":{"type":"topic","role":"collectionGroup","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Optional\/Hashable-Implementations","kind":"article","abstract":[],"url":"\/documentation\/compute\/optional\/hashable-implementations","title":"Hashable Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/Optional/eraseToAnyHashable()":{"title":"eraseToAnyHashable()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"eraseToAnyHashable"},{"text":"() -> ","kind":"text"},{"text":"AnyHashable","preciseIdentifier":"s:s11AnyHashableV","kind":"typeIdentifier"}],"abstract":[],"type":"topic","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Optional\/eraseToAnyHashable()","url":"\/documentation\/compute\/optional\/erasetoanyhashable()","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/AnyHashable":{"role":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyHashable","kind":"identifier"}],"abstract":[{"text":"A type-erased hashable value.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyHashable","navigatorTitle":[{"text":"AnyHashable","kind":"identifier"}],"url":"\/documentation\/compute\/anyhashable","title":"AnyHashable","kind":"symbol"}}}