{"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Optional"]]},"abstract":[{"type":"text","text":"Evaluates the given closure when this "},{"code":"Optional","type":"codeVoice"},{"type":"text","text":" instance is not "},{"code":"nil","type":"codeVoice"},{"text":",","type":"text"},{"type":"text","text":" "},{"type":"text","text":"passing the unwrapped value as a parameter."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"map"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"E"},{"text":", ","kind":"text"},{"text":"U","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"transform"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Wrapped"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":"(","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"U"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":"(","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"U","kind":"typeIdentifier"},{"kind":"text","text":"? "},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"text":"E","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Error","kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP","text":"Error"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"U"},{"kind":"text","text":" : ~Copyable"}],"languages":["swift"],"platforms":["macOS"]}]},{"parameters":[{"content":[{"inlineContent":[{"type":"text","text":"A closure that takes the unwrapped value"},{"text":" ","type":"text"},{"text":"of the instance.","type":"text"}],"type":"paragraph"}],"name":"transform"}],"kind":"parameters"},{"kind":"content","content":[{"anchor":"return-value","text":"Return Value","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"The result of the given closure. If this instance is ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":","},{"text":" ","type":"text"},{"type":"text","text":"returns "},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"}]}]},{"kind":"content","content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Use the "},{"code":"map","type":"codeVoice"},{"text":" method with a closure that returns a non-optional value.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"This example performs an arithmetic operation on an"},{"type":"text","text":" "},{"type":"text","text":"optional integer."}]},{"syntax":null,"type":"codeListing","code":["let possibleNumber: Int? = Int(\"42\")","let possibleSquare = possibleNumber.map { $0 * $0 }","print(possibleSquare)","\/\/ Prints \"Optional(1764)\"","","let noNumber: Int? = nil","let noSquare = noNumber.map { $0 * $0 }","print(noSquare)","\/\/ Prints \"nil\""]}]}],"variants":[{"paths":["\/documentation\/compute\/optional\/map(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"modules":[{"name":"Compute","relatedModules":["Swift"]}],"symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"map"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"E"},{"text":", ","kind":"text"},{"text":"U","kind":"genericParameter"},{"kind":"text","text":">(("},{"text":"Wrapped","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"E"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"U"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":"(","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"U","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"externalID":"s:Sq3mapyqd_0_Sgqd_0_xqd__YKXEqd__YKs5ErrorRd__Ri_d_0_r0_lF","extendedModule":"Swift","role":"symbol","title":"map(_:)","roleHeading":"Instance Method"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Optional\/map(_:)"},"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"symbol","sections":[],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Optional":{"type":"topic","role":"symbol","navigatorTitle":[{"text":"Optional","kind":"identifier"}],"url":"\/documentation\/compute\/optional","kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"Optional","kind":"identifier"}],"abstract":[{"type":"text","text":"A type that represents either a wrapped value or the absence of a value."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Optional","title":"Optional"},"doc://com.swallow.documentation.Compute/documentation/Compute/Optional/map(_:)":{"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Optional\/map(_:)","abstract":[{"type":"text","text":"Evaluates the given closure when this "},{"code":"Optional","type":"codeVoice"},{"type":"text","text":" instance is not "},{"code":"nil","type":"codeVoice"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"text","text":"passing the unwrapped value as a parameter."}],"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"map"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"E"},{"text":", ","kind":"text"},{"text":"U","kind":"genericParameter"},{"text":">((","kind":"text"},{"text":"Wrapped","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"E"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"U"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":"("},{"text":"E","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"U"},{"kind":"text","text":"?"}],"role":"symbol","url":"\/documentation\/compute\/optional\/map(_:)","title":"map(_:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/Error":{"url":"\/documentation\/compute\/error","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Error"}],"navigatorTitle":[{"text":"Error","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Error","type":"topic","role":"symbol","abstract":[{"type":"text","text":"A type representing an error value that can be thrown."}],"kind":"symbol","title":"Error"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"}}}