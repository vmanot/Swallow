{"topicSections":[{"generated":true,"identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Optional\/!=(_:_:)-1bazb","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Optional\/==(_:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Optional\/==(_:_:)-m6x"],"anchor":"Operators","title":"Operators"},{"anchor":"Instance-Methods","title":"Instance Methods","generated":true,"identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Optional\/eraseToAnyEquatable()"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Optional\/Equatable-Implementations"},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Optional"]]},"sections":[],"schemaVersion":{"minor":3,"major":0,"patch":0},"kind":"article","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/optional\/equatable-implementations"]}],"metadata":{"modules":[{"name":"Compute"}],"roleHeading":"API Collection","title":"Equatable Implementations","role":"collectionGroup"},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Optional/==(_:_:)-m6x":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Optional\/==(_:_:)-m6x","title":"==(_:_:)","abstract":[{"type":"text","text":"Returns a Boolean value indicating whether two optional instances are"},{"type":"text","text":" "},{"type":"text","text":"equal."}],"role":"symbol","kind":"symbol","url":"\/documentation\/compute\/optional\/==(_:_:)-m6x","type":"topic","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Wrapped"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Equatable"},{"type":"text","text":"."}]},"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"=="},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Wrapped"},{"kind":"text","text":"?, "},{"kind":"typeIdentifier","text":"Wrapped"},{"kind":"text","text":"?) -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Optional/eraseToAnyEquatable()":{"kind":"symbol","url":"\/documentation\/compute\/optional\/erasetoanyequatable()","title":"eraseToAnyEquatable()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"eraseToAnyEquatable"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:7Swallow12AnyEquatableV","kind":"typeIdentifier","text":"AnyEquatable"}],"abstract":[],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Optional\/eraseToAnyEquatable()","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Optional/==(_:)":{"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"=="},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ((","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":")","kind":"text"}],"title":"==(_:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Optional\/==(_:)","abstract":[],"url":"\/documentation\/compute\/optional\/==(_:)","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/Optional":{"type":"topic","role":"symbol","navigatorTitle":[{"text":"Optional","kind":"identifier"}],"url":"\/documentation\/compute\/optional","kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"Optional","kind":"identifier"}],"abstract":[{"type":"text","text":"A type that represents either a wrapped value or the absence of a value."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Optional","title":"Optional"},"doc://com.swallow.documentation.Compute/documentation/Compute/Optional/!=(_:_:)-1bazb":{"abstract":[{"type":"text","text":"Returns a Boolean value indicating whether two values are not equal."}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Optional\/!=(_:_:)-1bazb","type":"topic","url":"\/documentation\/compute\/optional\/!=(_:_:)-1bazb","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"!=","kind":"identifier"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"title":"!=(_:_:)"}}}