{"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/DefaultRecursiveIndices","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/DefaultRecursiveIndices\/Sequence-Implementations"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/defaultrecursiveindices\/reduce(_:_:)-cedf"]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/DefaultRecursiveIndices\/reduce(_:_:)-cedf"},"sections":[],"kind":"symbol","abstract":[{"type":"text","text":"Returns the result of combining the elements of the sequence using the"},{"text":" ","type":"text"},{"text":"given closure.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"reduce","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Result"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"initialResult"},{"text":": ","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"text":"nextPartialResult","kind":"internalParam"},{"text":": (","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Result"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Result"}],"languages":["swift"]}]},{"parameters":[{"name":"initialResult","content":[{"type":"paragraph","inlineContent":[{"text":"The value to use as the initial accumulating value.","type":"text"},{"text":" ","type":"text"},{"code":"initialResult","type":"codeVoice"},{"text":" is passed to ","type":"text"},{"type":"codeVoice","code":"nextPartialResult"},{"text":" the first time the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"closure is executed."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"A closure that combines an accumulating value and"},{"type":"text","text":" "},{"text":"an element of the sequence into a new accumulating value, to be used","type":"text"},{"text":" ","type":"text"},{"text":"in the next call of the ","type":"text"},{"code":"nextPartialResult","type":"codeVoice"},{"type":"text","text":" closure or returned to"},{"type":"text","text":" "},{"text":"the caller.","type":"text"}],"type":"paragraph"}],"name":"nextPartialResult"}],"kind":"parameters"},{"kind":"content","content":[{"level":2,"anchor":"return-value","type":"heading","text":"Return Value"},{"inlineContent":[{"type":"text","text":"The final accumulated value. If the sequence has no elements,"},{"text":" ","type":"text"},{"type":"text","text":"the result is "},{"type":"codeVoice","code":"initialResult"},{"text":".","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"heading","text":"Discussion","anchor":"discussion","level":2},{"type":"paragraph","inlineContent":[{"text":"Use the ","type":"text"},{"type":"codeVoice","code":"reduce(_:_:)"},{"text":" method to produce a single value from the elements","type":"text"},{"type":"text","text":" "},{"text":"of an entire sequence. For example, you can use this method on an array","type":"text"},{"type":"text","text":" "},{"type":"text","text":"of numbers to find their sum or product."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"code":"nextPartialResult","type":"codeVoice"},{"text":" closure is called sequentially with an","type":"text"},{"type":"text","text":" "},{"text":"accumulating value initialized to ","type":"text"},{"code":"initialResult","type":"codeVoice"},{"type":"text","text":" and each element of"},{"text":" ","type":"text"},{"type":"text","text":"the sequence. This example shows how to find the sum of an array of"},{"text":" ","type":"text"},{"type":"text","text":"numbers."}]},{"type":"codeListing","syntax":null,"code":["let numbers = [1, 2, 3, 4]","let numberSum = numbers.reduce(0, { x, y in","    x + y","})","\/\/ numberSum == 10"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"When "},{"type":"codeVoice","code":"numbers.reduce(_:_:)"},{"text":" is called, the following steps occur:","type":"text"}]},{"type":"orderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"nextPartialResult"},{"type":"text","text":" closure is called with "},{"code":"initialResult","type":"codeVoice"},{"text":"—","type":"text"},{"type":"codeVoice","code":"0"},{"text":" ","type":"text"},{"text":"in this case—and the first element of ","type":"text"},{"type":"codeVoice","code":"numbers"},{"text":", returning the sum:","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"1"},{"text":".","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"The closure is called again repeatedly with the previous call’s return","type":"text"},{"type":"text","text":" "},{"text":"value and each element of the sequence.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"When the sequence is exhausted, the last value returned from the"},{"text":" ","type":"text"},{"text":"closure is returned to the caller.","type":"text"}],"type":"paragraph"}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If the sequence has no elements, "},{"type":"codeVoice","code":"nextPartialResult"},{"type":"text","text":" is never executed"},{"type":"text","text":" "},{"type":"text","text":"and "},{"code":"initialResult","type":"codeVoice"},{"type":"text","text":" is the result of the call to "},{"type":"codeVoice","code":"reduce(_:_:)"},{"type":"text","text":"."}]},{"type":"aside","name":"Complexity","style":"note","content":[{"inlineContent":[{"text":"O(","type":"text"},{"inlineContent":[{"type":"text","text":"n"}],"type":"emphasis"},{"text":"), where ","type":"text"},{"inlineContent":[{"type":"text","text":"n"}],"type":"emphasis"},{"text":" is the length of the sequence.","type":"text"}],"type":"paragraph"}]}],"kind":"content"}],"metadata":{"extendedModule":"Swift","externalID":"s:STsE6reduceyqd__qd___qd__qd___7ElementQztKXEtKlF::SYNTHESIZED::s:7Compute23DefaultRecursiveIndicesV","roleHeading":"Instance Method","role":"symbol","symbolKind":"method","modules":[{"relatedModules":["Swift"],"name":"Compute"}],"title":"reduce(_:_:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"reduce","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Result","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"kind":"text","text":", ("},{"text":"Result","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Result"}]},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/DefaultRecursiveIndices/reduce(_:_:)-cedf":{"abstract":[{"text":"Returns the result of combining the elements of the sequence using the","type":"text"},{"type":"text","text":" "},{"text":"given closure.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/DefaultRecursiveIndices\/reduce(_:_:)-cedf","url":"\/documentation\/compute\/defaultrecursiveindices\/reduce(_:_:)-cedf","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"reduce"},{"text":"<","kind":"text"},{"text":"Result","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"kind":"text","text":", ("},{"text":"Result","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:ST7ElementQa","text":"Element","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Result","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Result","kind":"typeIdentifier"}],"kind":"symbol","role":"symbol","title":"reduce(_:_:)"},"doc://com.swallow.documentation.Compute/documentation/Compute/DefaultRecursiveIndices/Sequence-Implementations":{"role":"collectionGroup","kind":"article","title":"Sequence Implementations","url":"\/documentation\/compute\/defaultrecursiveindices\/sequence-implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/DefaultRecursiveIndices\/Sequence-Implementations","type":"topic","abstract":[]},"doc://com.swallow.documentation.Compute/documentation/Compute/DefaultRecursiveIndices":{"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/DefaultRecursiveIndices","type":"topic","url":"\/documentation\/compute\/defaultrecursiveindices","abstract":[],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"DefaultRecursiveIndices","kind":"identifier"}],"navigatorTitle":[{"text":"DefaultRecursiveIndices","kind":"identifier"}],"title":"DefaultRecursiveIndices","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence/Element":{"type":"topic","required":true,"abstract":[{"type":"text","text":"A type representing the sequence’s elements."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"symbol","url":"\/documentation\/compute\/sequence\/element","role":"symbol","title":"Element","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"identifier"}]}}}