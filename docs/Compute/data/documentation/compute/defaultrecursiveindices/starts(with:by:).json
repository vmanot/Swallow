{"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"starts","kind":"identifier"},{"text":"<","kind":"text"},{"text":"PossiblePrefix","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"with"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"possiblePrefix"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"PossiblePrefix"},{"text":", ","kind":"text"},{"text":"by","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"areEquivalent"},{"text":": (","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:ST7ElementQa","text":"Element","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"PossiblePrefix"},{"kind":"text","text":"."},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bool"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Bool","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bool","preciseIdentifier":"s:Sb"},{"text":" ","kind":"text"},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"text":"PossiblePrefix","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","text":"Sequence","preciseIdentifier":"s:ST","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence"}],"languages":["swift"]}]},{"parameters":[{"content":[{"inlineContent":[{"type":"text","text":"A sequence to compare to this sequence."}],"type":"paragraph"}],"name":"possiblePrefix"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A predicate that returns "},{"code":"true","type":"codeVoice"},{"text":" if its two arguments","type":"text"},{"text":" ","type":"text"},{"text":"are equivalent; otherwise, ","type":"text"},{"code":"false","type":"codeVoice"},{"type":"text","text":"."}]}],"name":"areEquivalent"}],"kind":"parameters"},{"content":[{"anchor":"return-value","type":"heading","level":2,"text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"true"},{"text":" if the initial elements of the sequence are equivalent","type":"text"},{"type":"text","text":" "},{"text":"to the elements of ","type":"text"},{"code":"possiblePrefix","type":"codeVoice"},{"type":"text","text":"; otherwise, "},{"code":"false","type":"codeVoice"},{"type":"text","text":". If"},{"type":"text","text":" "},{"code":"possiblePrefix","type":"codeVoice"},{"type":"text","text":" has no elements, the return value is "},{"code":"true","type":"codeVoice"},{"type":"text","text":"."}]}],"kind":"content"},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"inlineContent":[{"type":"text","text":"The predicate must be an "},{"type":"emphasis","inlineContent":[{"text":"equivalence relation","type":"text"}]},{"type":"text","text":" over the elements. That"},{"text":" ","type":"text"},{"type":"text","text":"is, for any elements "},{"code":"a","type":"codeVoice"},{"text":", ","type":"text"},{"type":"codeVoice","code":"b"},{"text":", and ","type":"text"},{"type":"codeVoice","code":"c"},{"type":"text","text":", the following conditions must"},{"text":" ","type":"text"},{"text":"hold:","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"code":"areEquivalent(a, a)","type":"codeVoice"},{"type":"text","text":" is always "},{"code":"true","type":"codeVoice"},{"type":"text","text":". (Reflexivity)"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"code":"areEquivalent(a, b)","type":"codeVoice"},{"text":" implies ","type":"text"},{"code":"areEquivalent(b, a)","type":"codeVoice"},{"type":"text","text":". (Symmetry)"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"If "},{"code":"areEquivalent(a, b)","type":"codeVoice"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"areEquivalent(b, c)"},{"type":"text","text":" are both "},{"type":"codeVoice","code":"true"},{"text":", then","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"areEquivalent(a, c)"},{"type":"text","text":" is also "},{"type":"codeVoice","code":"true"},{"text":". (Transitivity)","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"},{"name":"Complexity","style":"note","type":"aside","content":[{"inlineContent":[{"text":"O(","type":"text"},{"type":"emphasis","inlineContent":[{"text":"m","type":"text"}]},{"text":"), where ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"m","type":"text"}]},{"type":"text","text":" is the lesser of the length of the"},{"text":" ","type":"text"},{"type":"text","text":"sequence and the length of "},{"type":"codeVoice","code":"possiblePrefix"},{"text":".","type":"text"}],"type":"paragraph"}]}]}],"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/DefaultRecursiveIndices\/starts(with:by:)","interfaceLanguage":"swift"},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/defaultrecursiveindices\/starts(with:by:)"]}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/DefaultRecursiveIndices","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/DefaultRecursiveIndices\/Sequence-Implementations"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"starts"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"PossiblePrefix"},{"text":">(","kind":"text"},{"text":"with","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"PossiblePrefix"},{"text":", ","kind":"text"},{"text":"by","kind":"externalParam"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:ST7ElementQa"},{"text":", ","kind":"text"},{"text":"PossiblePrefix","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:ST7ElementQa","text":"Element","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"extendedModule":"Swift","modules":[{"relatedModules":["Swift"],"name":"Compute"}],"title":"starts(with:by:)","role":"symbol","externalID":"s:STsE6starts4with2bySbqd___Sb7ElementQz_ADQyd__tKXEtKSTRd__lF::SYNTHESIZED::s:7Compute23DefaultRecursiveIndicesV","symbolKind":"method"},"kind":"symbol","abstract":[{"type":"text","text":"Returns a Boolean value indicating whether the initial elements of the"},{"text":" ","type":"text"},{"text":"sequence are equivalent to the elements in another sequence, using","type":"text"},{"text":" ","type":"text"},{"text":"the given predicate as the equivalence test.","type":"text"}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Bool":{"url":"\/documentation\/compute\/bool","role":"symbol","title":"Bool","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Bool","kind":"identifier"}],"abstract":[{"type":"text","text":"A value type whose instances are either "},{"type":"codeVoice","code":"true"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"false"},{"text":".","type":"text"}],"navigatorTitle":[{"text":"Bool","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bool","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence/Element":{"type":"topic","required":true,"abstract":[{"type":"text","text":"A type representing the sequenceâ€™s elements."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"symbol","url":"\/documentation\/compute\/sequence\/element","role":"symbol","title":"Element","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/DefaultRecursiveIndices/Sequence-Implementations":{"role":"collectionGroup","kind":"article","title":"Sequence Implementations","url":"\/documentation\/compute\/defaultrecursiveindices\/sequence-implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/DefaultRecursiveIndices\/Sequence-Implementations","type":"topic","abstract":[]},"doc://com.swallow.documentation.Compute/documentation/Compute/DefaultRecursiveIndices/starts(with:by:)":{"title":"starts(with:by:)","url":"\/documentation\/compute\/defaultrecursiveindices\/starts(with:by:)","abstract":[{"type":"text","text":"Returns a Boolean value indicating whether the initial elements of the"},{"text":" ","type":"text"},{"text":"sequence are equivalent to the elements in another sequence, using","type":"text"},{"text":" ","type":"text"},{"text":"the given predicate as the equivalence test.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"starts","kind":"identifier"},{"kind":"text","text":"<"},{"text":"PossiblePrefix","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"with","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"PossiblePrefix"},{"text":", ","kind":"text"},{"text":"by","kind":"externalParam"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:ST7ElementQa","text":"Element","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"PossiblePrefix","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"text":" -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"type":"topic","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/DefaultRecursiveIndices\/starts(with:by:)","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/DefaultRecursiveIndices":{"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/DefaultRecursiveIndices","type":"topic","url":"\/documentation\/compute\/defaultrecursiveindices","abstract":[],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"DefaultRecursiveIndices","kind":"identifier"}],"navigatorTitle":[{"text":"DefaultRecursiveIndices","kind":"identifier"}],"title":"DefaultRecursiveIndices","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence":{"url":"\/documentation\/compute\/sequence","navigatorTitle":[{"kind":"identifier","text":"Sequence"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence","title":"Sequence","kind":"symbol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Sequence","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"A type that provides sequential, iterated access to its elements."}]},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"}}}