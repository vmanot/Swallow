{"schemaVersion":{"major":0,"patch":0,"minor":3},"metadata":{"externalID":"s:7Compute13ReferenceTreeCAASeRzlE4fromACyxGs7Decoder_p_tKcfc","symbolKind":"init","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"from"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s7DecoderP","text":"Decoder"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"}],"title":"init(from:)","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Element"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Decodable"},{"type":"text","text":"."}]},"roleHeading":"Initializer","modules":[{"name":"Compute"}],"extendedModule":"Compute","role":"symbol"},"abstract":[{"text":"Creates a new instance by decoding from the given decoder.","type":"text"}],"kind":"symbol","sections":[],"variants":[{"paths":["\/documentation\/compute\/referencetree\/init(from:)"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"convenience"},{"kind":"text","text":" "},{"kind":"keyword","text":"init"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"from"},{"text":" ","kind":"text"},{"text":"decoder","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Decoder","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Decoder","kind":"typeIdentifier","preciseIdentifier":"s:s7DecoderP"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"}],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"name":"decoder","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The decoder to read data from."}]}]}]},{"kind":"content","content":[{"anchor":"discussion","type":"heading","text":"Discussion","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"This initializer throws an error if reading from the decoder fails, or"},{"text":" ","type":"text"},{"type":"text","text":"if the data read is corrupted or otherwise invalid."}]}]}],"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ReferenceTree\/init(from:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ReferenceTree","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ReferenceTree\/Decodable-Implementations"]]},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/ReferenceTree/init(from:)":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ReferenceTree\/init(from:)","url":"\/documentation\/compute\/referencetree\/init(from:)","type":"topic","title":"init(from:)","abstract":[{"text":"Creates a new instance by decoding from the given decoder.","type":"text"}],"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"from"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Decoder","preciseIdentifier":"s:s7DecoderP"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Decodable"},{"text":".","type":"text"}]},"kind":"symbol","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/ReferenceTree/Decodable-Implementations":{"type":"topic","title":"Decodable Implementations","url":"\/documentation\/compute\/referencetree\/decodable-implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ReferenceTree\/Decodable-Implementations","kind":"article","role":"collectionGroup","abstract":[]},"doc://com.swallow.documentation.Compute/documentation/Compute/ReferenceTree":{"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"ReferenceTree","kind":"identifier"}],"type":"topic","title":"ReferenceTree","url":"\/documentation\/compute\/referencetree","navigatorTitle":[{"text":"ReferenceTree","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ReferenceTree","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"A simple reference-based tree data structure for Swift."}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Decoder":{"title":"Decoder","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Decoder"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Decoder","url":"\/documentation\/compute\/decoder","abstract":[{"type":"text","text":"A type that can decode values from a native format into in-memory"},{"type":"text","text":" "},{"type":"text","text":"representations."}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"Decoder"}]}}}