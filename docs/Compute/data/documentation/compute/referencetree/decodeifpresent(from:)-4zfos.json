{"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ReferenceTree","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ReferenceTree\/Decodable-Implementations"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/referencetree\/decodeifpresent(from:)-4zfos"]}],"abstract":[{"type":"text","text":"Inherited from "},{"code":"Decodable.decodeIfPresent(from:)","type":"codeVoice"},{"type":"text","text":"."}],"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ReferenceTree\/decodeIfPresent(from:)-4zfos","interfaceLanguage":"swift"},"sections":[],"metadata":{"symbolKind":"method","extendedModule":"Swift","title":"decodeIfPresent(from:)","roleHeading":"Type Method","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"decodeIfPresent"},{"kind":"text","text":"<"},{"text":"Container","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"from"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Container","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"role":"symbol","externalID":"s:Se20_SwallowSwiftOverlayE15decodeIfPresent4fromxSgqd__z_tKs24UnkeyedDecodingContainerRd__lFZ::SYNTHESIZED::s:7Compute13ReferenceTreeC","modules":[{"relatedModules":["Swift"],"name":"Compute"}]},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"decodeIfPresent","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Container","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"from","kind":"externalParam"},{"kind":"text","text":" "},{"text":"container","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Container"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Self","kind":"typeIdentifier"},{"text":"? ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Container","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"UnkeyedDecodingContainer","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnkeyedDecodingContainer","preciseIdentifier":"s:s24UnkeyedDecodingContainerP"}],"platforms":["macOS"]}],"kind":"declarations"}],"schemaVersion":{"patch":0,"minor":3,"major":0},"kind":"symbol","references":{"doc://com.swallow.documentation.Compute/documentation/Compute/ReferenceTree":{"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"ReferenceTree","kind":"identifier"}],"type":"topic","title":"ReferenceTree","url":"\/documentation\/compute\/referencetree","navigatorTitle":[{"text":"ReferenceTree","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ReferenceTree","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"A simple reference-based tree data structure for Swift."}]},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/UnkeyedDecodingContainer":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/UnkeyedDecodingContainer","navigatorTitle":[{"text":"UnkeyedDecodingContainer","kind":"identifier"}],"url":"\/documentation\/compute\/unkeyeddecodingcontainer","type":"topic","kind":"symbol","abstract":[{"text":"A type that provides a view into a decoderâ€™s storage and is used to hold","type":"text"},{"text":" ","type":"text"},{"text":"the encoded properties of a decodable type sequentially, without keys.","type":"text"}],"title":"UnkeyedDecodingContainer","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UnkeyedDecodingContainer","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/ReferenceTree/Decodable-Implementations":{"type":"topic","title":"Decodable Implementations","url":"\/documentation\/compute\/referencetree\/decodable-implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ReferenceTree\/Decodable-Implementations","kind":"article","role":"collectionGroup","abstract":[]},"doc://com.swallow.documentation.Compute/documentation/Compute/ReferenceTree/decodeIfPresent(from:)-4zfos":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ReferenceTree\/decodeIfPresent(from:)-4zfos","kind":"symbol","title":"decodeIfPresent(from:)","type":"topic","url":"\/documentation\/compute\/referencetree\/decodeifpresent(from:)-4zfos","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"decodeIfPresent","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Container","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"from","kind":"externalParam"},{"kind":"text","text":": "},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Container"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"role":"symbol","abstract":[]}}}