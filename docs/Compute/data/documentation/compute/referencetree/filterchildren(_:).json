{"abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"RecursiveTreeProtocol.filterChildren(_:)"},{"type":"text","text":"."}],"metadata":{"roleHeading":"Instance Method","extendedModule":"Compute","modules":[{"name":"Compute"}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"filterChildren","kind":"identifier"},{"kind":"text","text":"(("},{"preciseIdentifier":"s:7Compute12TreeProtocolP0B5ValueQa","text":"TreeValue","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"ArrayTree","preciseIdentifier":"s:7Compute9ArrayTreeV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"TreeValue","kind":"typeIdentifier","preciseIdentifier":"s:7Compute12TreeProtocolP0B5ValueQa"},{"text":">","kind":"text"}],"symbolKind":"method","title":"filterChildren(_:)","externalID":"s:7Compute21RecursiveTreeProtocolPAAE14filterChildrenyAA05ArrayC0Vy0C5ValueQzGSbAHKXEKF::SYNTHESIZED::s:7Compute13ReferenceTreeC","role":"symbol"},"kind":"symbol","identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ReferenceTree\/filterChildren(_:)","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/referencetree\/filterchildren(_:)"]}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ReferenceTree","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ReferenceTree\/RecursiveTreeProtocol-Implementations"]]},"sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"filterChildren","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"predicate"},{"text":": (","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/TreeProtocol\/TreeValue","text":"TreeValue","kind":"typeIdentifier","preciseIdentifier":"s:7Compute12TreeProtocolP0B5ValueQa"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bool"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:7Compute9ArrayTreeV","text":"ArrayTree","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArrayTree","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/TreeProtocol\/TreeValue","kind":"typeIdentifier","text":"TreeValue","preciseIdentifier":"s:7Compute12TreeProtocolP0B5ValueQa"},{"text":">","kind":"text"}],"platforms":["macOS"]}],"kind":"declarations"}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/ReferenceTree/filterChildren(_:)":{"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"filterChildren","kind":"identifier"},{"text":"((","kind":"text"},{"text":"TreeValue","kind":"typeIdentifier","preciseIdentifier":"s:7Compute12TreeProtocolP0B5ValueQa"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":") ","kind":"text"},{"kind":"keyword","text":"rethrows"},{"text":" -> ","kind":"text"},{"text":"ArrayTree","kind":"typeIdentifier","preciseIdentifier":"s:7Compute9ArrayTreeV"},{"kind":"text","text":"<"},{"text":"TreeValue","preciseIdentifier":"s:7Compute12TreeProtocolP0B5ValueQa","kind":"typeIdentifier"},{"text":">","kind":"text"}],"url":"\/documentation\/compute\/referencetree\/filterchildren(_:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ReferenceTree\/filterChildren(_:)","abstract":[],"title":"filterChildren(_:)","role":"symbol","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/ReferenceTree/RecursiveTreeProtocol-Implementations":{"title":"RecursiveTreeProtocol Implementations","url":"\/documentation\/compute\/referencetree\/recursivetreeprotocol-implementations","role":"collectionGroup","type":"topic","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ReferenceTree\/RecursiveTreeProtocol-Implementations","kind":"article"},"doc://com.swallow.documentation.Compute/documentation/Compute/TreeProtocol/TreeValue":{"url":"\/documentation\/compute\/treeprotocol\/treevalue","type":"topic","title":"TreeValue","fragments":[{"text":"associatedtype","kind":"keyword"},{"kind":"text","text":" "},{"text":"TreeValue","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/TreeProtocol\/TreeValue","kind":"symbol","abstract":[{"text":"The type of value stored in each node of the tree.","type":"text"}],"required":true,"role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Bool":{"url":"\/documentation\/compute\/bool","role":"symbol","title":"Bool","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Bool","kind":"identifier"}],"abstract":[{"type":"text","text":"A value type whose instances are either "},{"type":"codeVoice","code":"true"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"false"},{"text":".","type":"text"}],"navigatorTitle":[{"text":"Bool","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bool","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/ArrayTree":{"url":"\/documentation\/compute\/arraytree","type":"topic","title":"ArrayTree","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"ArrayTree","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ArrayTree","kind":"symbol","abstract":[],"role":"symbol","navigatorTitle":[{"text":"ArrayTree","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/ReferenceTree":{"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"ReferenceTree","kind":"identifier"}],"type":"topic","title":"ReferenceTree","url":"\/documentation\/compute\/referencetree","navigatorTitle":[{"text":"ReferenceTree","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ReferenceTree","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"A simple reference-based tree data structure for Swift."}]}}}