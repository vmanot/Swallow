{"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ReferenceTree","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ReferenceTree\/RecursiveTreeProtocol-Implementations"]]},"abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"RecursiveTreeProtocol.forEachDepthFirst(_:)"},{"type":"text","text":"."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"forEachDepthFirst","kind":"identifier"},{"kind":"text","text":"("},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"body","kind":"internalParam"},{"text":": (","kind":"text"},{"text":"TreeValue","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/TreeProtocol\/TreeValue","preciseIdentifier":"s:7Compute12TreeProtocolP0B5ValueQa"},{"text":") -> ","kind":"text"},{"text":"Void","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":")","kind":"text"}]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/referencetree\/foreachdepthfirst(_:)"]}],"sections":[],"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ReferenceTree\/forEachDepthFirst(_:)","interfaceLanguage":"swift"},"kind":"symbol","metadata":{"modules":[{"name":"Compute"}],"roleHeading":"Instance Method","extendedModule":"Compute","symbolKind":"method","externalID":"s:7Compute21RecursiveTreeProtocolPAAE17forEachDepthFirstyyy0C5ValueQzXEF::SYNTHESIZED::s:7Compute13ReferenceTreeC","title":"forEachDepthFirst(_:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"forEachDepthFirst"},{"kind":"text","text":"(("},{"preciseIdentifier":"s:7Compute12TreeProtocolP0B5ValueQa","text":"TreeValue","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"kind":"text","text":")"}]},"schemaVersion":{"major":0,"patch":0,"minor":3},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/ReferenceTree/RecursiveTreeProtocol-Implementations":{"title":"RecursiveTreeProtocol Implementations","url":"\/documentation\/compute\/referencetree\/recursivetreeprotocol-implementations","role":"collectionGroup","type":"topic","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ReferenceTree\/RecursiveTreeProtocol-Implementations","kind":"article"},"doc://com.swallow.documentation.Compute/documentation/Compute/Void":{"abstract":[{"text":"The return type of functions that donâ€™t explicitly specify a return type,","type":"text"},{"text":" ","type":"text"},{"text":"that is, an empty tuple ","type":"text"},{"type":"codeVoice","code":"()"},{"type":"text","text":"."}],"type":"topic","title":"Void","url":"\/documentation\/compute\/void","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Void"}],"navigatorTitle":[{"text":"Void","kind":"identifier"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Void"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/ReferenceTree/forEachDepthFirst(_:)":{"abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ReferenceTree\/forEachDepthFirst(_:)","title":"forEachDepthFirst(_:)","url":"\/documentation\/compute\/referencetree\/foreachdepthfirst(_:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"forEachDepthFirst","kind":"identifier"},{"text":"((","kind":"text"},{"text":"TreeValue","kind":"typeIdentifier","preciseIdentifier":"s:7Compute12TreeProtocolP0B5ValueQa"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"text":")","kind":"text"}],"type":"topic","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/ReferenceTree":{"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"ReferenceTree","kind":"identifier"}],"type":"topic","title":"ReferenceTree","url":"\/documentation\/compute\/referencetree","navigatorTitle":[{"text":"ReferenceTree","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/ReferenceTree","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"A simple reference-based tree data structure for Swift."}]},"doc://com.swallow.documentation.Compute/documentation/Compute/TreeProtocol/TreeValue":{"url":"\/documentation\/compute\/treeprotocol\/treevalue","type":"topic","title":"TreeValue","fragments":[{"text":"associatedtype","kind":"keyword"},{"kind":"text","text":" "},{"text":"TreeValue","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/TreeProtocol\/TreeValue","kind":"symbol","abstract":[{"text":"The type of value stored in each node of the tree.","type":"text"}],"required":true,"role":"symbol"}}}