{"topicSections":[{"identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/OpaquePointer\/!=(_:_:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/OpaquePointer\/==(_:)","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/OpaquePointer\/==(_:_:)"],"generated":true,"anchor":"Operators","title":"Operators"},{"anchor":"Instance-Methods","identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/OpaquePointer\/eraseToAnyEquatable()"],"generated":true,"title":"Instance Methods"}],"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/OpaquePointer\/Equatable-Implementations","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"major":0,"patch":0},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/OpaquePointer"]]},"sections":[],"kind":"article","variants":[{"paths":["\/documentation\/compute\/opaquepointer\/equatable-implementations"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"modules":[{"name":"Compute"}],"title":"Equatable Implementations","role":"collectionGroup","roleHeading":"API Collection"},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/OpaquePointer/!=(_:_:)":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/OpaquePointer\/!=(_:_:)","role":"symbol","title":"!=(_:_:)","url":"\/documentation\/compute\/opaquepointer\/!=(_:_:)","abstract":[{"text":"Returns a Boolean value indicating whether two values are not equal.","type":"text"}],"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"!=","kind":"identifier"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"kind":"symbol","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/OpaquePointer/eraseToAnyEquatable()":{"type":"topic","title":"eraseToAnyEquatable()","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"eraseToAnyEquatable","kind":"identifier"},{"kind":"text","text":"() -> "},{"text":"AnyEquatable","kind":"typeIdentifier","preciseIdentifier":"s:7Swallow12AnyEquatableV"}],"url":"\/documentation\/compute\/opaquepointer\/erasetoanyequatable()","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/OpaquePointer\/eraseToAnyEquatable()","kind":"symbol","role":"symbol","abstract":[]},"doc://com.swallow.documentation.Compute/documentation/Compute/OpaquePointer/==(_:)":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/OpaquePointer\/==(_:)","role":"symbol","title":"==(_:)","url":"\/documentation\/compute\/opaquepointer\/==(_:)","abstract":[],"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"=="},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> (("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":")"}],"kind":"symbol","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/OpaquePointer":{"role":"symbol","navigatorTitle":[{"text":"OpaquePointer","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OpaquePointer","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/OpaquePointer","type":"topic","title":"OpaquePointer","kind":"symbol","abstract":[{"type":"text","text":"A wrapper around an opaque C pointer."}],"url":"\/documentation\/compute\/opaquepointer"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/OpaquePointer/==(_:_:)":{"type":"topic","title":"==(_:_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"==","kind":"identifier"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:s13OpaquePointerV","text":"OpaquePointer"},{"text":", ","kind":"text"},{"text":"OpaquePointer","preciseIdentifier":"s:s13OpaquePointerV","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"url":"\/documentation\/compute\/opaquepointer\/==(_:_:)","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/OpaquePointer\/==(_:_:)","kind":"symbol","role":"symbol","abstract":[{"text":"Returns a Boolean value indicating whether two values are equal.","type":"text"}]}}}