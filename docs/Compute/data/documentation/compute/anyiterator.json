{"relationshipsSections":[{"kind":"relationships","title":"Conforms To","type":"conformsTo","identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Copyable","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/IteratorProtocol","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence"]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/anyiterator"]}],"metadata":{"title":"AnyIterator","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyIterator"}],"externalID":"s:s11AnyIteratorV","navigatorTitle":[{"text":"AnyIterator","kind":"identifier"}],"symbolKind":"struct","role":"symbol","modules":[{"name":"Compute"}],"roleHeading":"Structure"},"topicSections":[{"identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyIterator\/init(_:)-3m1u6","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyIterator\/init(_:)-5l6js"],"title":"Initializers","anchor":"Initializers","generated":true},{"title":"Default Implementations","identifiers":["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyIterator\/IteratorProtocol-Implementations","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyIterator\/Sequence-Implementations"],"anchor":"Default-Implementations","generated":true}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"attribute","text":"@frozen"},{"text":" ","kind":"text"},{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AnyIterator"},{"text":"<","kind":"text"},{"text":"Element","kind":"genericParameter"},{"kind":"text","text":">"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"overview","text":"Overview"},{"inlineContent":[{"type":"text","text":"This iterator forwards its "},{"code":"next()","type":"codeVoice"},{"type":"text","text":" method to an arbitrary underlying"},{"type":"text","text":" "},{"type":"text","text":"iterator having the same "},{"type":"codeVoice","code":"Element"},{"type":"text","text":" type, hiding the specifics of the"},{"text":" ","type":"text"},{"text":"underlying ","type":"text"},{"code":"IteratorProtocol","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}]}],"abstract":[{"text":"A type-erased iterator of ","type":"text"},{"code":"Element","type":"codeVoice"},{"type":"text","text":"."}],"schemaVersion":{"major":0,"patch":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute"]]},"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyIterator"},"kind":"symbol","references":{"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Copyable":{"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Copyable"}],"role":"symbol","kind":"symbol","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Element"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Copyable"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Escapable"},{"text":".","type":"text"}]},"navigatorTitle":[{"text":"Copyable","kind":"identifier"}],"type":"topic","abstract":[{"text":"A type whose values can be implicitly or explicitly copied.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Copyable","url":"\/documentation\/compute\/copyable","title":"Copyable"},"doc://com.swallow.documentation.Compute/documentation/Compute/AnyIterator":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyIterator","title":"AnyIterator","url":"\/documentation\/compute\/anyiterator","navigatorTitle":[{"text":"AnyIterator","kind":"identifier"}],"type":"topic","role":"symbol","abstract":[{"text":"A type-erased iterator of ","type":"text"},{"type":"codeVoice","code":"Element"},{"text":".","type":"text"}],"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"AnyIterator","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/AnyIterator/Sequence-Implementations":{"type":"topic","abstract":[],"role":"collectionGroup","title":"Sequence Implementations","kind":"article","url":"\/documentation\/compute\/anyiterator\/sequence-implementations","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyIterator\/Sequence-Implementations"},"doc://com.swallow.documentation.Compute/documentation/Compute/AnyIterator/init(_:)-3m1u6":{"url":"\/documentation\/compute\/anyiterator\/init(_:)-3m1u6","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyIterator\/init(_:)-3m1u6","kind":"symbol","abstract":[{"text":"Creates an iterator that wraps a base iterator but whose type depends","type":"text"},{"type":"text","text":" "},{"type":"text","text":"only on the base iteratorâ€™s element type."}],"title":"init(_:)","role":"symbol","type":"topic","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"I"},{"text":">(","kind":"text"},{"text":"I","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Sequence","kind":"identifier"}],"role":"symbol","kind":"symbol","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Element"},{"text":" conforms to ","type":"text"},{"code":"Copyable","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"Escapable","type":"codeVoice"},{"text":".","type":"text"}]},"navigatorTitle":[{"text":"Sequence","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"A type that provides sequential, iterated access to its elements."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence","url":"\/documentation\/compute\/sequence","title":"Sequence"},"doc://com.swallow.documentation.Compute/documentation/Compute/AnyIterator/init(_:)-5l6js":{"url":"\/documentation\/compute\/anyiterator\/init(_:)-5l6js","title":"init(_:)","kind":"symbol","role":"symbol","type":"topic","abstract":[{"text":"Creates an iterator that wraps the given closure in its ","type":"text"},{"code":"next()","type":"codeVoice"},{"text":" method.","type":"text"}],"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"(() -> "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":"?)"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyIterator\/init(_:)-5l6js"},"doc://com.swallow.documentation.Compute/documentation/Compute/IteratorProtocol":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/IteratorProtocol","kind":"symbol","url":"\/documentation\/compute\/iteratorprotocol","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"IteratorProtocol"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"code":"Copyable","type":"codeVoice"},{"type":"text","text":" and "},{"code":"Escapable","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","abstract":[{"text":"A type that supplies the values of a sequence one at a time.","type":"text"}],"title":"IteratorProtocol","navigatorTitle":[{"kind":"identifier","text":"IteratorProtocol"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/AnyIterator/IteratorProtocol-Implementations":{"type":"topic","url":"\/documentation\/compute\/anyiterator\/iteratorprotocol-implementations","kind":"article","role":"collectionGroup","title":"IteratorProtocol Implementations","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/AnyIterator\/IteratorProtocol-Implementations"}}}