{"metadata":{"extendedModule":"Swift","title":"init(arrayLiteral:)","externalID":"s:Sh12arrayLiteralShyxGxd_tcfc","symbolKind":"init","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Element"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Hashable"},{"text":".","type":"text"}]},"roleHeading":"Initializer","modules":[{"relatedModules":["Swift"],"name":"Compute"}],"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"arrayLiteral","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":"...)","kind":"text"}],"role":"symbol"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"arrayLiteral"},{"kind":"text","text":" "},{"kind":"internalParam","text":"elements"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":"...)"}],"languages":["swift"],"platforms":["macOS"]}]},{"parameters":[{"name":"elements","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A variadic list of elements of the new set."}]}]}],"kind":"parameters"},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Do not call this initializer directly. It is used by the compiler when"},{"text":" ","type":"text"},{"text":"you use an array literal. Instead, create a new set using an array","type":"text"},{"type":"text","text":" "},{"type":"text","text":"literal as its value by enclosing a comma-separated list of values in"},{"type":"text","text":" "},{"text":"square brackets. You can use an array literal anywhere a set is expected","type":"text"},{"text":" ","type":"text"},{"text":"by the type context.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"Here, a set of strings is created from an array literal holding only","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"strings."}]},{"syntax":null,"code":["let ingredients: Set = [\"cocoa beans\", \"sugar\", \"cocoa butter\", \"salt\"]","if ingredients.isSuperset(of: [\"sugar\", \"salt\"]) {","    print(\"Whatever it is, it's bound to be delicious!\")","}","\/\/ Prints \"Whatever it is, it's bound to be delicious!\""],"type":"codeListing"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/set\/init(arrayliteral:)-3uja4"]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"kind":"symbol","sections":[],"abstract":[{"type":"text","text":"Creates a set containing the elements of the given array literal."}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Set\/init(arrayLiteral:)-3uja4"},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Set","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Set\/ExpressibleByArrayLiteral-Implementations"]]},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Set/init(arrayLiteral:)-3uja4":{"fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"arrayLiteral"},{"text":": ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"kind":"text","text":"...)"}],"kind":"symbol","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Element","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"type":"topic","title":"init(arrayLiteral:)","abstract":[{"type":"text","text":"Creates a set containing the elements of the given array literal."}],"url":"\/documentation\/compute\/set\/init(arrayliteral:)-3uja4","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Set\/init(arrayLiteral:)-3uja4","role":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Set/ExpressibleByArrayLiteral-Implementations":{"url":"\/documentation\/compute\/set\/expressiblebyarrayliteral-implementations","title":"ExpressibleByArrayLiteral Implementations","type":"topic","kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Set\/ExpressibleByArrayLiteral-Implementations","abstract":[],"role":"collectionGroup"},"doc://com.swallow.documentation.Compute/documentation/Compute/Set":{"abstract":[{"type":"text","text":"An unordered collection of unique elements."}],"navigatorTitle":[{"text":"Set","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Set","title":"Set","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Set"}],"type":"topic","url":"\/documentation\/compute\/set"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"}}}