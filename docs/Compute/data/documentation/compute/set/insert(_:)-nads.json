{"metadata":{"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Element","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"roleHeading":"Instance Method","title":"insert(_:)","externalID":"s:Sh6insertySb8inserted_x17memberAfterInserttxnF","modules":[{"relatedModules":["Swift"],"name":"Compute"}],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"insert"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> (inserted"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"kind":"text","text":", memberAfterInsert"},{"kind":"text","text":": "},{"text":"Element","kind":"typeIdentifier"},{"text":")","kind":"text"}],"extendedModule":"Swift","symbolKind":"method"},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Set","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Set\/SetAlgebra-Implementations"]]},"schemaVersion":{"major":0,"patch":0,"minor":3},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"@discardableResult","kind":"attribute"},{"text":" ","kind":"text"},{"kind":"keyword","text":"mutating"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"insert","kind":"identifier"},{"kind":"text","text":"("},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"newMember"},{"text":": ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":") -> (inserted","kind":"text"},{"kind":"text","text":": "},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bool","preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"kind":"text","text":", memberAfterInsert"},{"kind":"text","text":": "},{"text":"Element","kind":"typeIdentifier"},{"kind":"text","text":")"}],"languages":["swift"]}]},{"parameters":[{"content":[{"inlineContent":[{"type":"text","text":"An element to insert into the set."}],"type":"paragraph"}],"name":"newMember"}],"kind":"parameters"},{"kind":"content","content":[{"type":"heading","anchor":"return-value","level":2,"text":"Return Value"},{"inlineContent":[{"type":"text","text":""},{"code":"(true, newMember)","type":"codeVoice"},{"type":"text","text":" if "},{"code":"newMember","type":"codeVoice"},{"type":"text","text":" was not contained in the"},{"type":"text","text":" "},{"type":"text","text":"set. If an element equal to "},{"type":"codeVoice","code":"newMember"},{"type":"text","text":" was already contained in the"},{"type":"text","text":" "},{"text":"set, the method returns ","type":"text"},{"code":"(false, oldMember)","type":"codeVoice"},{"type":"text","text":", where "},{"type":"codeVoice","code":"oldMember"},{"type":"text","text":" is the"},{"type":"text","text":" "},{"type":"text","text":"element that was equal to "},{"type":"codeVoice","code":"newMember"},{"text":". In some cases, ","type":"text"},{"type":"codeVoice","code":"oldMember"},{"text":" may","type":"text"},{"type":"text","text":" "},{"type":"text","text":"be distinguishable from "},{"code":"newMember","type":"codeVoice"},{"type":"text","text":" by identity comparison or some"},{"type":"text","text":" "},{"text":"other means.","type":"text"}],"type":"paragraph"}]},{"kind":"content","content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"inlineContent":[{"type":"text","text":"If an element equal to "},{"type":"codeVoice","code":"newMember"},{"type":"text","text":" is already contained in the set, this"},{"type":"text","text":" "},{"text":"method has no effect. In the following example, a new element is","type":"text"},{"text":" ","type":"text"},{"text":"inserted into ","type":"text"},{"code":"classDays","type":"codeVoice"},{"type":"text","text":", a set of days of the week. When an existing"},{"text":" ","type":"text"},{"type":"text","text":"element is inserted, the "},{"type":"codeVoice","code":"classDays"},{"text":" set does not change.","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":["enum DayOfTheWeek: Int {","    case sunday, monday, tuesday, wednesday, thursday,","        friday, saturday","}","","var classDays: Set<DayOfTheWeek> = [.wednesday, .friday]","print(classDays.insert(.monday))","\/\/ Prints \"(inserted: true, memberAfterInsert: DayOfTheWeek.monday)\"","print(classDays)","\/\/ Prints \"[DayOfTheWeek.friday, DayOfTheWeek.wednesday, DayOfTheWeek.monday]\"","","print(classDays.insert(.friday))","\/\/ Prints \"(inserted: false, memberAfterInsert: DayOfTheWeek.friday)\"","print(classDays)","\/\/ Prints \"[DayOfTheWeek.friday, DayOfTheWeek.wednesday, DayOfTheWeek.monday]\""]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/set\/insert(_:)-nads"]}],"kind":"symbol","sections":[],"abstract":[{"text":"Inserts the given element in the set if it is not already present.","type":"text"}],"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Set\/insert(_:)-nads","interfaceLanguage":"swift"},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Set":{"abstract":[{"type":"text","text":"An unordered collection of unique elements."}],"navigatorTitle":[{"text":"Set","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Set","title":"Set","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Set"}],"type":"topic","url":"\/documentation\/compute\/set"},"doc://com.swallow.documentation.Compute/documentation/Compute/Set/insert(_:)-nads":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Set\/insert(_:)-nads","url":"\/documentation\/compute\/set\/insert(_:)-nads","kind":"symbol","abstract":[{"type":"text","text":"Inserts the given element in the set if it is not already present."}],"type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"insert","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> (inserted"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":", memberAfterInsert","kind":"text"},{"kind":"text","text":": "},{"text":"Element","kind":"typeIdentifier"},{"kind":"text","text":")"}],"conformance":{"constraints":[{"type":"codeVoice","code":"Element"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Hashable"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"title":"insert(_:)"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Bool":{"url":"\/documentation\/compute\/bool","role":"symbol","title":"Bool","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Bool","kind":"identifier"}],"abstract":[{"type":"text","text":"A value type whose instances are either "},{"type":"codeVoice","code":"true"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"false"},{"text":".","type":"text"}],"navigatorTitle":[{"text":"Bool","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Bool","kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Set/SetAlgebra-Implementations":{"abstract":[],"url":"\/documentation\/compute\/set\/setalgebra-implementations","title":"SetAlgebra Implementations","role":"collectionGroup","kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Set\/SetAlgebra-Implementations","type":"topic"}}}