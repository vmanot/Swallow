{"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Set\/update(with:)-2n6tk","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"@discardableResult","kind":"attribute"},{"text":" ","kind":"text"},{"text":"mutating","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"update","kind":"identifier"},{"kind":"text","text":"("},{"text":"with","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"newMember"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Element"},{"text":"?","kind":"text"}]}]},{"kind":"parameters","parameters":[{"name":"newMember","content":[{"type":"paragraph","inlineContent":[{"text":"An element to insert into the set.","type":"text"}]}]}]},{"content":[{"text":"Return Value","anchor":"return-value","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"An element equal to "},{"code":"newMember","type":"codeVoice"},{"type":"text","text":" if the set already contained"},{"type":"text","text":" "},{"text":"such a member; otherwise, ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":". In some cases, the returned element"},{"text":" ","type":"text"},{"text":"may be distinguishable from ","type":"text"},{"code":"newMember","type":"codeVoice"},{"text":" by identity comparison or some","type":"text"},{"type":"text","text":" "},{"type":"text","text":"other means."}]}],"kind":"content"},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"If an element equal to ","type":"text"},{"code":"newMember","type":"codeVoice"},{"text":" is already contained in the set,","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"newMember"},{"text":" replaces the existing element. In this example, an existing","type":"text"},{"type":"text","text":" "},{"type":"text","text":"element is inserted into "},{"code":"classDays","type":"codeVoice"},{"type":"text","text":", a set of days of the week."}]},{"code":["enum DayOfTheWeek: Int {","    case sunday, monday, tuesday, wednesday, thursday,","        friday, saturday","}","","var classDays: Set<DayOfTheWeek> = [.monday, .wednesday, .friday]","print(classDays.update(with: .monday))","\/\/ Prints \"Optional(DayOfTheWeek.monday)\""],"type":"codeListing","syntax":null}]}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Set","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Set\/SetAlgebra-Implementations"]]},"abstract":[{"type":"text","text":"Inserts the given element into the set unconditionally."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/set\/update(with:)-2n6tk"]}],"metadata":{"title":"update(with:)","conformance":{"constraints":[{"type":"codeVoice","code":"Element"},{"text":" conforms to ","type":"text"},{"code":"Hashable","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"extendedModule":"Swift","role":"symbol","modules":[{"relatedModules":["Swift"],"name":"Compute"}],"symbolKind":"method","externalID":"s:Sh6update4withxSgxn_tF","roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"update","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"with"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Element"},{"text":") -> ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"kind":"text","text":"?"}]},"schemaVersion":{"patch":0,"minor":3,"major":0},"sections":[],"kind":"symbol","references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Set":{"abstract":[{"type":"text","text":"An unordered collection of unique elements."}],"navigatorTitle":[{"text":"Set","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Set","title":"Set","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Set"}],"type":"topic","url":"\/documentation\/compute\/set"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Set/update(with:)-2n6tk":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Set\/update(with:)-2n6tk","title":"update(with:)","type":"topic","abstract":[{"type":"text","text":"Inserts the given element into the set unconditionally."}],"url":"\/documentation\/compute\/set\/update(with:)-2n6tk","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Element"},{"text":" conforms to ","type":"text"},{"code":"Hashable","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"update","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"text":": ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Element","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"kind":"symbol"},"doc://com.swallow.documentation.Compute/documentation/Compute/Set/SetAlgebra-Implementations":{"abstract":[],"url":"\/documentation\/compute\/set\/setalgebra-implementations","title":"SetAlgebra Implementations","role":"collectionGroup","kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Set\/SetAlgebra-Implementations","type":"topic"}}}