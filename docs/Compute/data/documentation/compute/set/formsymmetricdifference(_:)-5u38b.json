{"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/set\/formsymmetricdifference(_:)-5u38b"]}],"metadata":{"title":"formSymmetricDifference(_:)","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Element","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Hashable","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"extendedModule":"Swift","externalID":"s:Sh23formSymmetricDifferenceyyqd__n7ElementQyd__RszSTRd__lF","role":"symbol","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"formSymmetricDifference","kind":"identifier"},{"kind":"text","text":"<"},{"text":"S","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":")"}],"modules":[{"relatedModules":["Swift"],"name":"Compute"}],"roleHeading":"Instance Method"},"kind":"symbol","abstract":[{"text":"Replace this set with the elements contained in this set or the given","type":"text"},{"type":"text","text":" "},{"type":"text","text":"set, but not both."}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Set"]]},"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Set\/formSymmetricDifference(_:)-5u38b","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"mutating","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"formSymmetricDifference","kind":"identifier"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"text":"other","kind":"internalParam"},{"kind":"text","text":": "},{"text":"S","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"text":"Element","kind":"typeIdentifier"},{"kind":"text","text":" == "},{"text":"S","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","text":"Element","preciseIdentifier":"s:ST7ElementQa"},{"text":", ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:ST","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence","text":"Sequence","kind":"typeIdentifier"}]}],"kind":"declarations"},{"parameters":[{"name":"other","content":[{"inlineContent":[{"text":"A sequence of elements. ","type":"text"},{"code":"other","type":"codeVoice"},{"text":" must be finite.","type":"text"}],"type":"paragraph"}]}],"kind":"parameters"},{"content":[{"anchor":"discussion","text":"Discussion","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"text":"In the following example, the elements of the ","type":"text"},{"code":"employees","type":"codeVoice"},{"type":"text","text":" set that are"},{"text":" ","type":"text"},{"text":"also members of ","type":"text"},{"type":"codeVoice","code":"neighbors"},{"type":"text","text":" are removed from "},{"code":"employees","type":"codeVoice"},{"text":", while the","type":"text"},{"type":"text","text":" "},{"text":"elements of ","type":"text"},{"type":"codeVoice","code":"neighbors"},{"type":"text","text":" that are not members of "},{"code":"employees","type":"codeVoice"},{"type":"text","text":" are added to"},{"type":"text","text":" "},{"code":"employees","type":"codeVoice"},{"type":"text","text":". In particular, the names "},{"type":"codeVoice","code":"\"Bethany\""},{"type":"text","text":" and "},{"type":"codeVoice","code":"\"Eric\""},{"type":"text","text":" are"},{"type":"text","text":" "},{"text":"removed from ","type":"text"},{"code":"employees","type":"codeVoice"},{"text":" while the name ","type":"text"},{"code":"\"Forlani\"","type":"codeVoice"},{"type":"text","text":" is added."}]},{"code":["var employees: Set = [\"Alicia\", \"Bethany\", \"Diana\", \"Eric\"]","let neighbors = [\"Bethany\", \"Eric\", \"Forlani\"]","employees.formSymmetricDifference(neighbors)","print(employees)","\/\/ Prints \"[\"Diana\", \"Forlani\", \"Alicia\"]\""],"syntax":null,"type":"codeListing"}],"kind":"content"}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Set":{"abstract":[{"type":"text","text":"An unordered collection of unique elements."}],"navigatorTitle":[{"text":"Set","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Set","title":"Set","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Set"}],"type":"topic","url":"\/documentation\/compute\/set"},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence":{"url":"\/documentation\/compute\/sequence","navigatorTitle":[{"kind":"identifier","text":"Sequence"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence","title":"Sequence","kind":"symbol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Sequence","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"A type that provides sequential, iterated access to its elements."}]},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Set/formSymmetricDifference(_:)-5u38b":{"type":"topic","url":"\/documentation\/compute\/set\/formsymmetricdifference(_:)-5u38b","title":"formSymmetricDifference(_:)","abstract":[{"type":"text","text":"Replace this set with the elements contained in this set or the given"},{"text":" ","type":"text"},{"text":"set, but not both.","type":"text"}],"kind":"symbol","conformance":{"constraints":[{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Set\/formSymmetricDifference(_:)-5u38b","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"formSymmetricDifference"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"S"},{"text":")","kind":"text"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence/Element":{"type":"topic","required":true,"abstract":[{"type":"text","text":"A type representing the sequenceâ€™s elements."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"symbol","url":"\/documentation\/compute\/sequence\/element","role":"symbol","title":"Element","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"identifier"}]}}}