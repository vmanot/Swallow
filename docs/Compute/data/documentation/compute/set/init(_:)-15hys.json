{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Set\/init(_:)-15hys"},"sections":[],"schemaVersion":{"patch":0,"minor":3,"major":0},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Set","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Set\/SetAlgebra-Implementations"]]},"metadata":{"title":"init(_:)","symbolKind":"init","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Source"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"Source"},{"text":")","kind":"text"}],"extendedModule":"Swift","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Element","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Hashable"},{"text":".","type":"text"}]},"modules":[{"relatedModules":["Swift"],"name":"Compute"}],"externalID":"s:ShyShyxGqd__nc7ElementQyd__RszSTRd__lufc","role":"symbol","roleHeading":"Initializer"},"abstract":[{"text":"Creates a new set from a finite sequence of items.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"init","kind":"keyword"},{"kind":"text","text":"<"},{"text":"Source","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"sequence"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Source"},{"text":") ","kind":"text"},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"text":"Element","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"text":"Source","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:ST7ElementQa","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"typeIdentifier","text":"Element"},{"kind":"text","text":", "},{"text":"Source","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:ST","kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence","text":"Sequence"}]}]},{"kind":"parameters","parameters":[{"name":"sequence","content":[{"inlineContent":[{"text":"The elements to use as members of the new set.","type":"text"}],"type":"paragraph"}]}]},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","level":2,"type":"heading"},{"inlineContent":[{"text":"Use this initializer to create a new set from an existing sequence, for","type":"text"},{"text":" ","type":"text"},{"text":"example, an array or a range.","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":["let validIndices = Set(0..<7).subtracting([2, 4, 5])","print(validIndices)","\/\/ Prints \"[6, 0, 1, 3]\""]},{"inlineContent":[{"text":"This initializer can also be used to restore set methods after performing","type":"text"},{"type":"text","text":" "},{"type":"text","text":"sequence operations such as "},{"code":"filter(_:)","type":"codeVoice"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"map(_:)"},{"text":" on a set. For","type":"text"},{"type":"text","text":" "},{"type":"text","text":"example, after filtering a set of prime numbers to remove any below 10,"},{"text":" ","type":"text"},{"text":"you can create a new set by using this initializer.","type":"text"}],"type":"paragraph"},{"code":["let primes: Set = [2, 3, 5, 7, 11, 13, 17, 19, 23]","let laterPrimes = Set(primes.lazy.filter { $0 > 10 })","print(laterPrimes)","\/\/ Prints \"[17, 19, 23, 11, 13]\""],"type":"codeListing","syntax":null}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/set\/init(_:)-15hys"]}],"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Set/init(_:)-15hys":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Set\/init(_:)-15hys","role":"symbol","kind":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Source"},{"text":">(","kind":"text"},{"text":"Source","kind":"typeIdentifier"},{"text":")","kind":"text"}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Element","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":"."}]},"url":"\/documentation\/compute\/set\/init(_:)-15hys","abstract":[{"text":"Creates a new set from a finite sequence of items.","type":"text"}],"type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute/Set":{"abstract":[{"type":"text","text":"An unordered collection of unique elements."}],"navigatorTitle":[{"text":"Set","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Set","title":"Set","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Set"}],"type":"topic","url":"\/documentation\/compute\/set"},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence/Element":{"type":"topic","required":true,"abstract":[{"type":"text","text":"A type representing the sequenceâ€™s elements."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"symbol","url":"\/documentation\/compute\/sequence\/element","role":"symbol","title":"Element","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence":{"url":"\/documentation\/compute\/sequence","navigatorTitle":[{"kind":"identifier","text":"Sequence"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence","title":"Sequence","kind":"symbol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Sequence","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"A type that provides sequential, iterated access to its elements."}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Set/SetAlgebra-Implementations":{"abstract":[],"url":"\/documentation\/compute\/set\/setalgebra-implementations","title":"SetAlgebra Implementations","role":"collectionGroup","kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Set\/SetAlgebra-Implementations","type":"topic"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"}}}