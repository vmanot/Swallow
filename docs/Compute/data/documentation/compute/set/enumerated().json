{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/compute\/set\/enumerated()"]}],"sections":[],"metadata":{"symbolKind":"method","extendedModule":"Swift","role":"symbol","modules":[{"name":"Compute","relatedModules":["Swift"]}],"roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"enumerated","kind":"identifier"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:s18EnumeratedSequenceV","text":"EnumeratedSequence","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}],"externalID":"s:STsE10enumerateds18EnumeratedSequenceVyxGyF::SYNTHESIZED::s:Sh","title":"enumerated()"},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Set","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Set\/Sequence-Implementations"]]},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"enumerated","kind":"identifier"},{"text":"() -> ","kind":"text"},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/EnumeratedSequence","kind":"typeIdentifier","preciseIdentifier":"s:s18EnumeratedSequenceV","text":"EnumeratedSequence"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"platforms":["macOS"]}],"kind":"declarations"},{"content":[{"anchor":"return-value","text":"Return Value","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"text":"A sequence of pairs enumerating the sequence.","type":"text"}]}],"kind":"content"},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"inlineContent":[{"text":"This example enumerates the characters of the string “Swift” and prints","type":"text"},{"type":"text","text":" "},{"type":"text","text":"each character along with its place in the string."}],"type":"paragraph"},{"code":["for (n, c) in \"Swift\".enumerated() {","    print(\"\\(n): '\\(c)'\")","}","\/\/ Prints \"0: 'S'\"","\/\/ Prints \"1: 'w'\"","\/\/ Prints \"2: 'i'\"","\/\/ Prints \"3: 'f'\"","\/\/ Prints \"4: 't'\""],"type":"codeListing","syntax":null},{"inlineContent":[{"text":"When you enumerate a collection, the integer part of each pair is a counter","type":"text"},{"type":"text","text":" "},{"text":"for the enumeration, but is not necessarily the index of the paired value.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"These counters can be used as indices only in instances of zero-based,"},{"type":"text","text":" "},{"text":"integer-indexed collections, such as ","type":"text"},{"code":"Array","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"ContiguousArray"},{"text":". For","type":"text"},{"type":"text","text":" "},{"text":"other collections the counters may be out of range or of the wrong type","type":"text"},{"type":"text","text":" "},{"text":"to use as an index. To iterate over the elements of a collection with its","type":"text"},{"type":"text","text":" "},{"text":"indices, use the ","type":"text"},{"code":"zip(_:_:)","type":"codeVoice"},{"type":"text","text":" function."}],"type":"paragraph"},{"inlineContent":[{"text":"This example iterates over the indices and elements of a set, building a","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"list consisting of indices of names with five or fewer letters."}],"type":"paragraph"},{"syntax":null,"type":"codeListing","code":["let names: Set = [\"Sofia\", \"Camilla\", \"Martina\", \"Mateo\", \"Nicolás\"]","var shorterIndices: [Set<String>.Index] = []","for (i, name) in zip(names.indices, names) {","    if name.count <= 5 {","        shorterIndices.append(i)","    }","}"]},{"inlineContent":[{"type":"text","text":"Now that the "},{"type":"codeVoice","code":"shorterIndices"},{"type":"text","text":" array holds the indices of the shorter"},{"type":"text","text":" "},{"type":"text","text":"names in the "},{"code":"names","type":"codeVoice"},{"type":"text","text":" set, you can use those indices to access elements in"},{"type":"text","text":" "},{"text":"the set.","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":["for i in shorterIndices {","    print(names[i])","}","\/\/ Prints \"Sofia\"","\/\/ Prints \"Mateo\""],"syntax":null},{"name":"Complexity","type":"aside","style":"note","content":[{"inlineContent":[{"type":"text","text":"O(1)"}],"type":"paragraph"}]}]}],"abstract":[{"type":"text","text":"Returns a sequence of pairs ("},{"inlineContent":[{"type":"text","text":"n"}],"type":"emphasis"},{"type":"text","text":", "},{"inlineContent":[{"type":"text","text":"x"}],"type":"emphasis"},{"type":"text","text":"), where "},{"inlineContent":[{"text":"n","type":"text"}],"type":"emphasis"},{"text":" represents a","type":"text"},{"text":" ","type":"text"},{"text":"consecutive integer starting at zero and ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"x"}]},{"type":"text","text":" represents an element of"},{"text":" ","type":"text"},{"type":"text","text":"the sequence."}],"schemaVersion":{"major":0,"patch":0,"minor":3},"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Set\/enumerated()","interfaceLanguage":"swift"},"kind":"symbol","references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Set/enumerated()":{"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Set\/enumerated()","abstract":[{"text":"Returns a sequence of pairs (","type":"text"},{"inlineContent":[{"text":"n","type":"text"}],"type":"emphasis"},{"type":"text","text":", "},{"type":"emphasis","inlineContent":[{"text":"x","type":"text"}]},{"text":"), where ","type":"text"},{"inlineContent":[{"type":"text","text":"n"}],"type":"emphasis"},{"type":"text","text":" represents a"},{"type":"text","text":" "},{"type":"text","text":"consecutive integer starting at zero and "},{"inlineContent":[{"type":"text","text":"x"}],"type":"emphasis"},{"text":" represents an element of","type":"text"},{"type":"text","text":" "},{"text":"the sequence.","type":"text"}],"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"enumerated"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s18EnumeratedSequenceV","text":"EnumeratedSequence"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"url":"\/documentation\/compute\/set\/enumerated()","title":"enumerated()"},"doc://com.swallow.documentation.Compute/documentation/Compute/EnumeratedSequence":{"url":"\/documentation\/compute\/enumeratedsequence","navigatorTitle":[{"text":"EnumeratedSequence","kind":"identifier"}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"EnumeratedSequence"}],"abstract":[{"text":"An enumeration of the elements of a sequence or collection.","type":"text"}],"type":"topic","title":"EnumeratedSequence","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/EnumeratedSequence"},"doc://com.swallow.documentation.Compute/documentation/Compute/Set/Sequence-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Set\/Sequence-Implementations","kind":"article","abstract":[],"url":"\/documentation\/compute\/set\/sequence-implementations","type":"topic","title":"Sequence Implementations","role":"collectionGroup"},"doc://com.swallow.documentation.Compute/documentation/Compute/Set":{"abstract":[{"type":"text","text":"An unordered collection of unique elements."}],"navigatorTitle":[{"text":"Set","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Set","title":"Set","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Set"}],"type":"topic","url":"\/documentation\/compute\/set"},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"}}}