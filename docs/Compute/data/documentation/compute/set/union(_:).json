{"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Set","doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Set\/SetAlgebra-Implementations"]]},"sections":[],"kind":"symbol","variants":[{"paths":["\/documentation\/compute\/set\/union(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"union"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"S"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"other"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"S"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Set","preciseIdentifier":"s:Sh","text":"Set"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"kind":"text","text":" == "},{"text":"S","kind":"typeIdentifier"},{"kind":"text","text":"."},{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"S"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence","preciseIdentifier":"s:ST","text":"Sequence"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"other","content":[{"inlineContent":[{"text":"A sequence of elements. ","type":"text"},{"type":"codeVoice","code":"other"},{"type":"text","text":" must be finite."}],"type":"paragraph"}]}]},{"kind":"content","content":[{"text":"Return Value","type":"heading","level":2,"anchor":"return-value"},{"inlineContent":[{"text":"A new set with the unique elements of this set and ","type":"text"},{"type":"codeVoice","code":"other"},{"type":"text","text":"."}],"type":"paragraph"}]},{"kind":"content","content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"inlineContent":[{"text":"In the following example, the ","type":"text"},{"type":"codeVoice","code":"attendeesAndVisitors"},{"text":" set is made up","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"of the elements of the "},{"code":"attendees","type":"codeVoice"},{"text":" set and the ","type":"text"},{"type":"codeVoice","code":"visitors"},{"text":" array:","type":"text"}],"type":"paragraph"},{"code":["let attendees: Set = [\"Alicia\", \"Bethany\", \"Diana\"]","let visitors = [\"Marcia\", \"Nathaniel\"]","let attendeesAndVisitors = attendees.union(visitors)","print(attendeesAndVisitors)","\/\/ Prints \"[\"Diana\", \"Nathaniel\", \"Bethany\", \"Alicia\", \"Marcia\"]\""],"syntax":null,"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If the set already contains one or more elements that are also in"},{"type":"text","text":" "},{"code":"other","type":"codeVoice"},{"text":", the existing members are kept. If ","type":"text"},{"code":"other","type":"codeVoice"},{"type":"text","text":" contains multiple"},{"text":" ","type":"text"},{"type":"text","text":"instances of equivalent elements, only the first instance is kept."}]},{"code":["let initialIndices = Set(0..<5)","let expandedIndices = initialIndices.union([2, 3, 6, 6, 7, 7])","print(expandedIndices)","\/\/ Prints \"[2, 4, 6, 7, 0, 1, 3]\""],"syntax":null,"type":"codeListing"}]}],"identifier":{"url":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Set\/union(_:)","interfaceLanguage":"swift"},"metadata":{"symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"union","kind":"identifier"},{"kind":"text","text":"<"},{"text":"S","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Set","preciseIdentifier":"s:Sh"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">"}],"extendedModule":"Swift","externalID":"s:Sh5unionyShyxGqd__n7ElementQyd__RszSTRd__lF","roleHeading":"Instance Method","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Element"},{"text":" conforms to ","type":"text"},{"code":"Hashable","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"modules":[{"relatedModules":["Swift"],"name":"Compute"}],"role":"symbol","title":"union(_:)"},"abstract":[{"text":"Returns a new set with the elements of both this set and the given","type":"text"},{"text":" ","type":"text"},{"text":"sequence.","type":"text"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"references":{"doc://com.swallow.documentation.Compute/documentation/Compute/Set":{"abstract":[{"type":"text","text":"An unordered collection of unique elements."}],"navigatorTitle":[{"text":"Set","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Set","title":"Set","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Set"}],"type":"topic","url":"\/documentation\/compute\/set"},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence/Element":{"type":"topic","required":true,"abstract":[{"type":"text","text":"A type representing the sequenceâ€™s elements."}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence\/Element","kind":"symbol","url":"\/documentation\/compute\/sequence\/element","role":"symbol","title":"Element","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"identifier"}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Sequence":{"url":"\/documentation\/compute\/sequence","navigatorTitle":[{"kind":"identifier","text":"Sequence"}],"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Sequence","title":"Sequence","kind":"symbol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Sequence","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"A type that provides sequential, iterated access to its elements."}]},"doc://com.swallow.documentation.Compute/documentation/Compute":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute","url":"\/documentation\/compute","role":"collection","kind":"symbol","abstract":[],"type":"topic","title":"Compute"},"doc://com.swallow.documentation.Compute/documentation/Compute/Set/union(_:)":{"identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Set\/union(_:)","url":"\/documentation\/compute\/set\/union(_:)","role":"symbol","kind":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"union","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"S"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sh","kind":"typeIdentifier","text":"Set"},{"kind":"text","text":"<"},{"text":"Element","kind":"typeIdentifier"},{"kind":"text","text":">"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Element","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Hashable","type":"codeVoice"},{"type":"text","text":"."}]},"title":"union(_:)","abstract":[{"text":"Returns a new set with the elements of both this set and the given","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"sequence."}]},"doc://com.swallow.documentation.Compute/documentation/Compute/Set/SetAlgebra-Implementations":{"abstract":[],"url":"\/documentation\/compute\/set\/setalgebra-implementations","title":"SetAlgebra Implementations","role":"collectionGroup","kind":"article","identifier":"doc:\/\/com.swallow.documentation.Compute\/documentation\/Compute\/Set\/SetAlgebra-Implementations","type":"topic"}}}