{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/coremodel\/preprocessor\/point\/memoize(with:_:)-4lxpb"]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"memoize"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"cache"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"MemoizationCache"},{"text":"? = MemoizationCache.shared, ","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"keyPath","kind":"internalParam"},{"kind":"text","text":": "},{"text":"KeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"T"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"The shared cache to use; "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" disables caching and simply returns the result of "},{"type":"codeVoice","code":"predicate"},{"type":"text","text":" directly"}],"type":"paragraph"}],"name":"cache"}]},{"kind":"content","content":[{"text":"Return Value","type":"heading","anchor":"return-value","level":2},{"type":"paragraph","inlineContent":[{"text":"The result from the ","type":"text"},{"type":"codeVoice","code":"predicate"},{"text":", either a previously cached value, or the result of executing the ","type":"text"},{"type":"codeVoice","code":"predicate"}]}]},{"content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"The source subject (the receiver) and the result object (the return value) should be value types, and the ","type":"text"},{"type":"codeVoice","code":"predicate"},{"type":"text","text":" must be a "},{"type":"emphasis","inlineContent":[{"type":"text","text":"pure"}]},{"text":" function that captures ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"no state"}]},{"type":"text","text":", in that:"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Its return value is the same for the same arguments (no variation with local static variables, non-local variables, mutable reference arguments or input streams from I\/O devices)."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Its evaluation has no side effects (no mutation of local static variables, non-local variables, mutable reference arguments or I\/O streams)."}]}]}],"type":"orderedList"},{"name":"Note","style":"note","type":"aside","content":[{"inlineContent":[{"text":"The calling functionâ€™s source file and line are used as the cache key, so care must be taken to avoid having multiple calls to ","type":"text"},{"code":"memoize","type":"codeVoice"},{"type":"text","text":" occur from a single line of source code."}],"type":"paragraph"}]},{"type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"Re-Throws and errors from ","type":"text"},{"code":"predicate","type":"codeVoice"}]}],"name":"Throws","style":"note"},{"content":[{"type":"paragraph","inlineContent":[{"text":"Around O(1) for a successful cache hit, otherwise the complexity of the keyPath execution","type":"text"}]}],"type":"aside","name":"Complexity","style":"note"}],"kind":"content"}],"metadata":{"modules":[{"name":"CoreModel","relatedModules":["Swift"]}],"roleHeading":"Instance Method","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"memoize","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"MemoizationCache"},{"kind":"text","text":"?, "},{"kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC","text":"KeyPath"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"text":"T","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"extendedModule":"Swift","title":"memoize(with:_:)","role":"symbol","externalID":"s:SH7SwallowE7memoize4with_qd__AA6_CacheCyAA011MemoizationD3KeyVypGSg_s0F4PathCyxqd__GtlF::SYNTHESIZED::s:7Swallow12PreprocessorO5PointV"},"identifier":{"url":"doc:\/\/com.swallow.documentation.CoreModel\/documentation\/CoreModel\/Preprocessor\/Point\/memoize(with:_:)-4lxpb","interfaceLanguage":"swift"},"kind":"symbol","abstract":[{"text":"Memoize the result of the execution of a predicate for the ","type":"text"},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":" receiver."}],"sections":[],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.CoreModel\/documentation\/CoreModel","doc:\/\/com.swallow.documentation.CoreModel\/documentation\/CoreModel\/Preprocessor","doc:\/\/com.swallow.documentation.CoreModel\/documentation\/CoreModel\/Preprocessor\/Point","doc:\/\/com.swallow.documentation.CoreModel\/documentation\/CoreModel\/Preprocessor\/Point\/Hashable-Implementations"]]},"references":{"doc://com.swallow.documentation.CoreModel/documentation/CoreModel":{"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.CoreModel\/documentation\/CoreModel","role":"collection","url":"\/documentation\/coremodel","abstract":[],"type":"topic","title":"CoreModel"},"doc://com.swallow.documentation.CoreModel/documentation/CoreModel/Preprocessor/Point":{"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.CoreModel\/documentation\/CoreModel\/Preprocessor\/Point","navigatorTitle":[{"text":"Point","kind":"identifier"}],"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Point"}],"abstract":[{"type":"text","text":"A textual point in the source code of the program."}],"url":"\/documentation\/coremodel\/preprocessor\/point","kind":"symbol","title":"Preprocessor.Point"},"doc://com.swallow.documentation.CoreModel/documentation/CoreModel/Preprocessor/Point/memoize(with:_:)-4lxpb":{"type":"topic","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"memoize"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"with","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"MemoizationCache"},{"text":"?, ","kind":"text"},{"text":"KeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"text":"T","kind":"typeIdentifier"}],"url":"\/documentation\/coremodel\/preprocessor\/point\/memoize(with:_:)-4lxpb","title":"memoize(with:_:)","identifier":"doc:\/\/com.swallow.documentation.CoreModel\/documentation\/CoreModel\/Preprocessor\/Point\/memoize(with:_:)-4lxpb","abstract":[{"text":"Memoize the result of the execution of a predicate for the ","type":"text"},{"type":"codeVoice","code":"Hashable"},{"text":" receiver.","type":"text"}]},"doc://com.swallow.documentation.CoreModel/documentation/CoreModel/Preprocessor":{"url":"\/documentation\/coremodel\/preprocessor","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.CoreModel\/documentation\/CoreModel\/Preprocessor","title":"Preprocessor","abstract":[{"type":"text","text":"A namespace for preprocessor-magic related structures."}],"fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Preprocessor"}],"type":"topic","navigatorTitle":[{"text":"Preprocessor","kind":"identifier"}],"kind":"symbol"},"doc://com.swallow.documentation.CoreModel/documentation/CoreModel/Preprocessor/Point/Hashable-Implementations":{"title":"Hashable Implementations","role":"collectionGroup","abstract":[],"kind":"article","type":"topic","url":"\/documentation\/coremodel\/preprocessor\/point\/hashable-implementations","identifier":"doc:\/\/com.swallow.documentation.CoreModel\/documentation\/CoreModel\/Preprocessor\/Point\/Hashable-Implementations"}}}