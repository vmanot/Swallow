{"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"memoize"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"with"},{"text":": ","kind":"text"},{"text":"MemoizationCache","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"KeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"text":"T","kind":"typeIdentifier"}],"roleHeading":"Instance Method","title":"memoize(with:_:)","externalID":"s:SH7SwallowE7memoize4with_qd__AA6_CacheCyAA011MemoizationD3KeyVypGSg_s0F4PathCyxqd__GtlF::SYNTHESIZED::s:7Swallow19MemoizationCacheKeyV","extendedModule":"Swift","modules":[{"relatedModules":["Swift"],"name":"CoreModel"}],"role":"symbol","symbolKind":"method"},"kind":"symbol","primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"memoize","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"with","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"cache"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"MemoizationCache"},{"text":"? = MemoizationCache.shared, ","kind":"text"},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"text":"keyPath","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"KeyPath","preciseIdentifier":"s:s7KeyPathC"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","text":"T"}],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"cache","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The shared cache to use; "},{"type":"codeVoice","code":"nil"},{"text":" disables caching and simply returns the result of ","type":"text"},{"type":"codeVoice","code":"predicate"},{"text":" directly","type":"text"}]}]}]},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"return-value","text":"Return Value"},{"inlineContent":[{"text":"The result from the ","type":"text"},{"type":"codeVoice","code":"predicate"},{"text":", either a previously cached value, or the result of executing the ","type":"text"},{"type":"codeVoice","code":"predicate"}],"type":"paragraph"}]},{"content":[{"level":2,"type":"heading","anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"The source subject (the receiver) and the result object (the return value) should be value types, and the ","type":"text"},{"code":"predicate","type":"codeVoice"},{"text":" must be a ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"pure"}]},{"type":"text","text":" function that captures "},{"type":"emphasis","inlineContent":[{"text":"no state","type":"text"}]},{"type":"text","text":", in that:"}]},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Its return value is the same for the same arguments (no variation with local static variables, non-local variables, mutable reference arguments or input streams from I\/O devices)."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Its evaluation has no side effects (no mutation of local static variables, non-local variables, mutable reference arguments or I\/O streams).","type":"text"}],"type":"paragraph"}]}],"type":"orderedList"},{"style":"note","content":[{"inlineContent":[{"type":"text","text":"The calling functionâ€™s source file and line are used as the cache key, so care must be taken to avoid having multiple calls to "},{"code":"memoize","type":"codeVoice"},{"type":"text","text":" occur from a single line of source code."}],"type":"paragraph"}],"name":"Note","type":"aside"},{"name":"Throws","type":"aside","style":"note","content":[{"type":"paragraph","inlineContent":[{"text":"Re-Throws and errors from ","type":"text"},{"type":"codeVoice","code":"predicate"}]}]},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"text":"Around O(1) for a successful cache hit, otherwise the complexity of the keyPath execution","type":"text"}]}],"type":"aside","name":"Complexity"}],"kind":"content"}],"sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"variants":[{"paths":["\/documentation\/coremodel\/memoizationcachekey\/memoize(with:_:)-6uqzx"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.CoreModel\/documentation\/CoreModel\/MemoizationCacheKey\/memoize(with:_:)-6uqzx"},"abstract":[{"type":"text","text":"Memoize the result of the execution of a predicate for the "},{"code":"Hashable","type":"codeVoice"},{"type":"text","text":" receiver."}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.CoreModel\/documentation\/CoreModel","doc:\/\/com.swallow.documentation.CoreModel\/documentation\/CoreModel\/MemoizationCacheKey","doc:\/\/com.swallow.documentation.CoreModel\/documentation\/CoreModel\/MemoizationCacheKey\/Hashable-Implementations"]]},"references":{"doc://com.swallow.documentation.CoreModel/documentation/CoreModel/MemoizationCacheKey/Hashable-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.CoreModel\/documentation\/CoreModel\/MemoizationCacheKey\/Hashable-Implementations","url":"\/documentation\/coremodel\/memoizationcachekey\/hashable-implementations","abstract":[],"role":"collectionGroup","title":"Hashable Implementations","kind":"article","type":"topic"},"doc://com.swallow.documentation.CoreModel/documentation/CoreModel":{"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.CoreModel\/documentation\/CoreModel","role":"collection","url":"\/documentation\/coremodel","abstract":[],"type":"topic","title":"CoreModel"},"doc://com.swallow.documentation.CoreModel/documentation/CoreModel/MemoizationCacheKey/memoize(with:_:)-6uqzx":{"title":"memoize(with:_:)","type":"topic","identifier":"doc:\/\/com.swallow.documentation.CoreModel\/documentation\/CoreModel\/MemoizationCacheKey\/memoize(with:_:)-6uqzx","abstract":[{"type":"text","text":"Memoize the result of the execution of a predicate for the "},{"code":"Hashable","type":"codeVoice"},{"type":"text","text":" receiver."}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"memoize","kind":"identifier"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"text":"MemoizationCache","kind":"typeIdentifier"},{"kind":"text","text":"?, "},{"preciseIdentifier":"s:s7KeyPathC","text":"KeyPath","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","text":"T"}],"role":"symbol","url":"\/documentation\/coremodel\/memoizationcachekey\/memoize(with:_:)-6uqzx","kind":"symbol"},"doc://com.swallow.documentation.CoreModel/documentation/CoreModel/MemoizationCacheKey":{"identifier":"doc:\/\/com.swallow.documentation.CoreModel\/documentation\/CoreModel\/MemoizationCacheKey","url":"\/documentation\/coremodel\/memoizationcachekey","abstract":[{"type":"text","text":"A key for memoization that uses a "},{"code":"Hashable","type":"codeVoice"},{"text":" instance with a hashable ","type":"text"},{"type":"codeVoice","code":"KeyPath"},{"type":"text","text":" to form a cache key."}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"MemoizationCacheKey","kind":"identifier"}],"role":"symbol","title":"MemoizationCacheKey","kind":"symbol","navigatorTitle":[{"text":"MemoizationCacheKey","kind":"identifier"}],"type":"topic"}}}