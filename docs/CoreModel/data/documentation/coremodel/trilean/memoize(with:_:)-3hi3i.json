{"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.CoreModel\/documentation\/CoreModel","doc:\/\/com.swallow.documentation.CoreModel\/documentation\/CoreModel\/Trilean","doc:\/\/com.swallow.documentation.CoreModel\/documentation\/CoreModel\/Trilean\/Hashable-Implementations"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.CoreModel\/documentation\/CoreModel\/Trilean\/memoize(with:_:)-3hi3i"},"kind":"symbol","metadata":{"symbolKind":"method","externalID":"s:SH7SwallowE7memoize4with_qd__AA6_CacheCyAA011MemoizationD3KeyVypGSg_s0F4PathCyxqd__GtlF::SYNTHESIZED::s:7Swallow7TrileanO","title":"memoize(with:_:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"memoize","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"MemoizationCache"},{"text":"?, ","kind":"text"},{"text":"KeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"T"},{"text":">) -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"role":"symbol","extendedModule":"Swift","modules":[{"name":"CoreModel","relatedModules":["Swift"]}]},"schemaVersion":{"minor":3,"major":0,"patch":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/coremodel\/trilean\/memoize(with:_:)-3hi3i"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"memoize"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"text":"with","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"cache","kind":"internalParam"},{"kind":"text","text":": "},{"text":"MemoizationCache","kind":"typeIdentifier"},{"kind":"text","text":"? = MemoizationCache.shared, "},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"keyPath","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"KeyPath","preciseIdentifier":"s:s7KeyPathC"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"T"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"name":"cache","content":[{"inlineContent":[{"type":"text","text":"The shared cache to use; "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" disables caching and simply returns the result of "},{"type":"codeVoice","code":"predicate"},{"type":"text","text":" directly"}],"type":"paragraph"}]}]},{"kind":"content","content":[{"text":"Return Value","level":2,"anchor":"return-value","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"The result from the ","type":"text"},{"type":"codeVoice","code":"predicate"},{"text":", either a previously cached value, or the result of executing the ","type":"text"},{"code":"predicate","type":"codeVoice"}]}]},{"content":[{"level":2,"text":"Discussion","type":"heading","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The source subject (the receiver) and the result object (the return value) should be value types, and the "},{"type":"codeVoice","code":"predicate"},{"text":" must be a ","type":"text"},{"inlineContent":[{"text":"pure","type":"text"}],"type":"emphasis"},{"text":" function that captures ","type":"text"},{"inlineContent":[{"text":"no state","type":"text"}],"type":"emphasis"},{"text":", in that:","type":"text"}]},{"items":[{"content":[{"inlineContent":[{"text":"Its return value is the same for the same arguments (no variation with local static variables, non-local variables, mutable reference arguments or input streams from I\/O devices).","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Its evaluation has no side effects (no mutation of local static variables, non-local variables, mutable reference arguments or I\/O streams)."}],"type":"paragraph"}]}],"type":"orderedList"},{"name":"Note","type":"aside","style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The calling functionâ€™s source file and line are used as the cache key, so care must be taken to avoid having multiple calls to "},{"code":"memoize","type":"codeVoice"},{"text":" occur from a single line of source code.","type":"text"}]}]},{"style":"note","content":[{"inlineContent":[{"text":"Re-Throws and errors from ","type":"text"},{"type":"codeVoice","code":"predicate"}],"type":"paragraph"}],"type":"aside","name":"Throws"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Around O(1) for a successful cache hit, otherwise the complexity of the keyPath execution"}]}],"type":"aside","style":"note","name":"Complexity"}],"kind":"content"}],"sections":[],"abstract":[{"text":"Memoize the result of the execution of a predicate for the ","type":"text"},{"code":"Hashable","type":"codeVoice"},{"type":"text","text":" receiver."}],"references":{"doc://com.swallow.documentation.CoreModel/documentation/CoreModel/Trilean/memoize(with:_:)-3hi3i":{"url":"\/documentation\/coremodel\/trilean\/memoize(with:_:)-3hi3i","kind":"symbol","title":"memoize(with:_:)","identifier":"doc:\/\/com.swallow.documentation.CoreModel\/documentation\/CoreModel\/Trilean\/memoize(with:_:)-3hi3i","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"memoize","kind":"identifier"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"with"},{"text":": ","kind":"text"},{"text":"MemoizationCache","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC","text":"KeyPath"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"T","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"type":"topic","abstract":[{"text":"Memoize the result of the execution of a predicate for the ","type":"text"},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":" receiver."}],"role":"symbol"},"doc://com.swallow.documentation.CoreModel/documentation/CoreModel/Trilean/Hashable-Implementations":{"url":"\/documentation\/coremodel\/trilean\/hashable-implementations","identifier":"doc:\/\/com.swallow.documentation.CoreModel\/documentation\/CoreModel\/Trilean\/Hashable-Implementations","title":"Hashable Implementations","abstract":[],"type":"topic","kind":"article","role":"collectionGroup"},"doc://com.swallow.documentation.CoreModel/documentation/CoreModel/Trilean":{"url":"\/documentation\/coremodel\/trilean","type":"topic","identifier":"doc:\/\/com.swallow.documentation.CoreModel\/documentation\/CoreModel\/Trilean","kind":"symbol","abstract":[],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Trilean"}],"title":"Trilean","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Trilean","kind":"identifier"}]},"doc://com.swallow.documentation.CoreModel/documentation/CoreModel":{"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.CoreModel\/documentation\/CoreModel","role":"collection","url":"\/documentation\/coremodel","abstract":[],"type":"topic","title":"CoreModel"}}}