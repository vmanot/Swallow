{"metadata":{"roleHeading":"Operator","role":"symbol","extendedModule":"Swift","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"==","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> (("},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":")","kind":"text"}],"externalID":"s:SQ7SwallowE2eeopySbxcxFZ::SYNTHESIZED::s:7Swallow8AnyErrorV","title":"==(_:)","modules":[{"relatedModules":["Swift"],"name":"CoreModel"}],"symbolKind":"op"},"schemaVersion":{"patch":0,"major":0,"minor":3},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"==","kind":"identifier"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"kind":"internalParam","text":"rhs"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> (("},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"text":")","kind":"text"}]}],"kind":"declarations"}],"kind":"symbol","sections":[],"abstract":[{"text":"Inherited from ","type":"text"},{"code":"Equatable.==(_:)","type":"codeVoice"},{"text":".","type":"text"}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.CoreModel\/documentation\/CoreModel","doc:\/\/com.swallow.documentation.CoreModel\/documentation\/CoreModel\/AnyError","doc:\/\/com.swallow.documentation.CoreModel\/documentation\/CoreModel\/AnyError\/Equatable-Implementations"]]},"identifier":{"url":"doc:\/\/com.swallow.documentation.CoreModel\/documentation\/CoreModel\/AnyError\/==(_:)","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/coremodel\/anyerror\/==(_:)"]}],"references":{"doc://com.swallow.documentation.CoreModel/documentation/CoreModel/AnyError/Equatable-Implementations":{"url":"\/documentation\/coremodel\/anyerror\/equatable-implementations","role":"collectionGroup","type":"topic","title":"Equatable Implementations","kind":"article","identifier":"doc:\/\/com.swallow.documentation.CoreModel\/documentation\/CoreModel\/AnyError\/Equatable-Implementations","abstract":[]},"doc://com.swallow.documentation.CoreModel/documentation/CoreModel":{"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.CoreModel\/documentation\/CoreModel","role":"collection","url":"\/documentation\/coremodel","abstract":[],"type":"topic","title":"CoreModel"},"doc://com.swallow.documentation.CoreModel/documentation/CoreModel/AnyError":{"type":"topic","url":"\/documentation\/coremodel\/anyerror","identifier":"doc:\/\/com.swallow.documentation.CoreModel\/documentation\/CoreModel\/AnyError","kind":"symbol","abstract":[{"text":"A type-erased error.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"AnyError","kind":"identifier"}],"title":"AnyError","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyError"}]},"doc://com.swallow.documentation.CoreModel/documentation/CoreModel/AnyError/==(_:)":{"type":"topic","identifier":"doc:\/\/com.swallow.documentation.CoreModel\/documentation\/CoreModel\/AnyError\/==(_:)","url":"\/documentation\/coremodel\/anyerror\/==(_:)","abstract":[],"title":"==(_:)","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"=="},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ((","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"kind":"text","text":")"}],"role":"symbol"}}}