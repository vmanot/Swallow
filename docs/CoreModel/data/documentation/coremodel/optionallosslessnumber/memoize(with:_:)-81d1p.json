{"schemaVersion":{"major":0,"minor":3,"patch":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/coremodel\/optionallosslessnumber\/memoize(with:_:)-81d1p"]}],"kind":"symbol","sections":[],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.CoreModel\/documentation\/CoreModel","doc:\/\/com.swallow.documentation.CoreModel\/documentation\/CoreModel\/OptionalLosslessNumber","doc:\/\/com.swallow.documentation.CoreModel\/documentation\/CoreModel\/OptionalLosslessNumber\/Hashable-Implementations"]]},"abstract":[{"type":"text","text":"Memoize the result of the execution of a predicate for the "},{"code":"Hashable","type":"codeVoice"},{"text":" receiver.","type":"text"}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"memoize"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"with","kind":"externalParam"},{"kind":"text","text":" "},{"text":"cache","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"MemoizationCache"},{"text":"? = MemoizationCache.shared, ","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"keyPath"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC","text":"KeyPath"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"T"}]}],"kind":"declarations"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The shared cache to use; ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":" disables caching and simply returns the result of ","type":"text"},{"code":"predicate","type":"codeVoice"},{"type":"text","text":" directly"}]}],"name":"cache"}],"kind":"parameters"},{"kind":"content","content":[{"level":2,"anchor":"return-value","text":"Return Value","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The result from the "},{"code":"predicate","type":"codeVoice"},{"text":", either a previously cached value, or the result of executing the ","type":"text"},{"code":"predicate","type":"codeVoice"}]}]},{"content":[{"level":2,"text":"Discussion","anchor":"discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"The source subject (the receiver) and the result object (the return value) should be value types, and the ","type":"text"},{"code":"predicate","type":"codeVoice"},{"type":"text","text":" must be a "},{"inlineContent":[{"type":"text","text":"pure"}],"type":"emphasis"},{"type":"text","text":" function that captures "},{"type":"emphasis","inlineContent":[{"type":"text","text":"no state"}]},{"type":"text","text":", in that:"}]},{"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Its return value is the same for the same arguments (no variation with local static variables, non-local variables, mutable reference arguments or input streams from I\/O devices)."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Its evaluation has no side effects (no mutation of local static variables, non-local variables, mutable reference arguments or I\/O streams).","type":"text"}]}]}]},{"name":"Note","style":"note","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The calling functionâ€™s source file and line are used as the cache key, so care must be taken to avoid having multiple calls to "},{"code":"memoize","type":"codeVoice"},{"text":" occur from a single line of source code.","type":"text"}]}]},{"name":"Throws","content":[{"type":"paragraph","inlineContent":[{"text":"Re-Throws and errors from ","type":"text"},{"code":"predicate","type":"codeVoice"}]}],"type":"aside","style":"note"},{"content":[{"inlineContent":[{"text":"Around O(1) for a successful cache hit, otherwise the complexity of the keyPath execution","type":"text"}],"type":"paragraph"}],"type":"aside","style":"note","name":"Complexity"}],"kind":"content"}],"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"memoize","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"MemoizationCache"},{"text":"?, ","kind":"text"},{"preciseIdentifier":"s:s7KeyPathC","kind":"typeIdentifier","text":"KeyPath"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"modules":[{"relatedModules":["Swift"],"name":"CoreModel"}],"symbolKind":"method","externalID":"s:SH7SwallowE7memoize4with_qd__AA6_CacheCyAA011MemoizationD3KeyVypGSg_s0F4PathCyxqd__GtlF::SYNTHESIZED::s:7Swallow22OptionalLosslessNumberV","roleHeading":"Instance Method","title":"memoize(with:_:)","extendedModule":"Swift","role":"symbol"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.CoreModel\/documentation\/CoreModel\/OptionalLosslessNumber\/memoize(with:_:)-81d1p"},"references":{"doc://com.swallow.documentation.CoreModel/documentation/CoreModel/OptionalLosslessNumber":{"url":"\/documentation\/coremodel\/optionallosslessnumber","role":"symbol","type":"topic","title":"OptionalLosslessNumber","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.CoreModel\/documentation\/CoreModel\/OptionalLosslessNumber","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"OptionalLosslessNumber","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"OptionalLosslessNumber"}],"abstract":[]},"doc://com.swallow.documentation.CoreModel/documentation/CoreModel":{"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.CoreModel\/documentation\/CoreModel","role":"collection","url":"\/documentation\/coremodel","abstract":[],"type":"topic","title":"CoreModel"},"doc://com.swallow.documentation.CoreModel/documentation/CoreModel/OptionalLosslessNumber/memoize(with:_:)-81d1p":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"memoize","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"text":"MemoizationCache","kind":"typeIdentifier"},{"kind":"text","text":"?, "},{"kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC","text":"KeyPath"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","text":"T"}],"kind":"symbol","type":"topic","abstract":[{"text":"Memoize the result of the execution of a predicate for the ","type":"text"},{"type":"codeVoice","code":"Hashable"},{"text":" receiver.","type":"text"}],"title":"memoize(with:_:)","identifier":"doc:\/\/com.swallow.documentation.CoreModel\/documentation\/CoreModel\/OptionalLosslessNumber\/memoize(with:_:)-81d1p","role":"symbol","url":"\/documentation\/coremodel\/optionallosslessnumber\/memoize(with:_:)-81d1p"},"doc://com.swallow.documentation.CoreModel/documentation/CoreModel/OptionalLosslessNumber/Hashable-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.CoreModel\/documentation\/CoreModel\/OptionalLosslessNumber\/Hashable-Implementations","type":"topic","title":"Hashable Implementations","kind":"article","url":"\/documentation\/coremodel\/optionallosslessnumber\/hashable-implementations","role":"collectionGroup","abstract":[]}}}