{"identifier":{"url":"doc:\/\/com.swallow.documentation.CoreModel\/documentation\/CoreModel\/LossyCoding\/memoize(with:_:)-9jb2o","interfaceLanguage":"swift"},"metadata":{"symbolKind":"method","title":"memoize(with:_:)","roleHeading":"Instance Method","modules":[{"name":"CoreModel","relatedModules":["Swift"]}],"extendedModule":"Swift","role":"symbol","externalID":"s:SH7SwallowE7memoize4with_qd__AA6_CacheCyAA011MemoizationD3KeyVypGSg_s0F4PathCyxqd__GtlF::SYNTHESIZED::s:7Swallow11LossyCodingV","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"memoize","kind":"identifier"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"text":"MemoizationCache","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC","text":"KeyPath"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"T"}]},"abstract":[{"type":"text","text":"Memoize the result of the execution of a predicate for the "},{"code":"Hashable","type":"codeVoice"},{"type":"text","text":" receiver."}],"schemaVersion":{"minor":3,"major":0,"patch":0},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.CoreModel\/documentation\/CoreModel","doc:\/\/com.swallow.documentation.CoreModel\/documentation\/CoreModel\/LossyCoding","doc:\/\/com.swallow.documentation.CoreModel\/documentation\/CoreModel\/LossyCoding\/Hashable-Implementations"]]},"sections":[],"variants":[{"paths":["\/documentation\/coremodel\/lossycoding\/memoize(with:_:)-9jb2o"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"memoize","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"with"},{"text":" ","kind":"text"},{"text":"cache","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"MemoizationCache"},{"kind":"text","text":"? = MemoizationCache.shared, "},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"keyPath"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s7KeyPathC","text":"KeyPath","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"text":"T","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"text":"The shared cache to use; ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":" disables caching and simply returns the result of ","type":"text"},{"code":"predicate","type":"codeVoice"},{"type":"text","text":" directly"}],"type":"paragraph"}],"name":"cache"}]},{"kind":"content","content":[{"anchor":"return-value","level":2,"text":"Return Value","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The result from the "},{"type":"codeVoice","code":"predicate"},{"text":", either a previously cached value, or the result of executing the ","type":"text"},{"type":"codeVoice","code":"predicate"}]}]},{"kind":"content","content":[{"text":"Discussion","level":2,"anchor":"discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"The source subject (the receiver) and the result object (the return value) should be value types, and the ","type":"text"},{"type":"codeVoice","code":"predicate"},{"type":"text","text":" must be a "},{"inlineContent":[{"text":"pure","type":"text"}],"type":"emphasis"},{"text":" function that captures ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"no state"}]},{"type":"text","text":", in that:"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Its return value is the same for the same arguments (no variation with local static variables, non-local variables, mutable reference arguments or input streams from I\/O devices)."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Its evaluation has no side effects (no mutation of local static variables, non-local variables, mutable reference arguments or I\/O streams).","type":"text"}]}]}],"type":"orderedList"},{"style":"note","name":"Note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The calling functionâ€™s source file and line are used as the cache key, so care must be taken to avoid having multiple calls to "},{"code":"memoize","type":"codeVoice"},{"type":"text","text":" occur from a single line of source code."}]}],"type":"aside"},{"type":"aside","style":"note","name":"Throws","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Re-Throws and errors from "},{"type":"codeVoice","code":"predicate"}]}]},{"name":"Complexity","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Around O(1) for a successful cache hit, otherwise the complexity of the keyPath execution"}]}],"style":"note","type":"aside"}]}],"kind":"symbol","references":{"doc://com.swallow.documentation.CoreModel/documentation/CoreModel/LossyCoding/memoize(with:_:)-9jb2o":{"url":"\/documentation\/coremodel\/lossycoding\/memoize(with:_:)-9jb2o","title":"memoize(with:_:)","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Memoize the result of the execution of a predicate for the "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":" receiver."}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.CoreModel\/documentation\/CoreModel\/LossyCoding\/memoize(with:_:)-9jb2o","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"memoize"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"MemoizationCache"},{"text":"?, ","kind":"text"},{"text":"KeyPath","preciseIdentifier":"s:s7KeyPathC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"text":"T","kind":"typeIdentifier"}]},"doc://com.swallow.documentation.CoreModel/documentation/CoreModel/LossyCoding/Hashable-Implementations":{"url":"\/documentation\/coremodel\/lossycoding\/hashable-implementations","abstract":[],"role":"collectionGroup","title":"Hashable Implementations","type":"topic","kind":"article","identifier":"doc:\/\/com.swallow.documentation.CoreModel\/documentation\/CoreModel\/LossyCoding\/Hashable-Implementations"},"doc://com.swallow.documentation.CoreModel/documentation/CoreModel/LossyCoding":{"title":"LossyCoding","role":"symbol","abstract":[{"type":"text","text":"Allow keys that are not present to be decoded as empty values."}],"navigatorTitle":[{"text":"LossyCoding","kind":"identifier"}],"url":"\/documentation\/coremodel\/lossycoding","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.CoreModel\/documentation\/CoreModel\/LossyCoding","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"LossyCoding","kind":"identifier"}],"type":"topic"},"doc://com.swallow.documentation.CoreModel/documentation/CoreModel":{"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.CoreModel\/documentation\/CoreModel","role":"collection","url":"\/documentation\/coremodel","abstract":[],"type":"topic","title":"CoreModel"}}}