{"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Diagnostics\/documentation\/Diagnostics\/SourceCodeLocation\/memoize(with:_:)-5v2i1"},"schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"externalID":"s:SH7SwallowE7memoize4with_qd__AA6_CacheCyAA011MemoizationD3KeyVypGSg_s0F4PathCyxqd__GtlF::SYNTHESIZED::s:7Swallow18SourceCodeLocationO","modules":[{"relatedModules":["Swift"],"name":"Diagnostics"}],"roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"memoize","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"with"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"MemoizationCache"},{"kind":"text","text":"?, "},{"preciseIdentifier":"s:s7KeyPathC","text":"KeyPath","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"text":"T","kind":"typeIdentifier"}],"title":"memoize(with:_:)","role":"symbol","extendedModule":"Swift","symbolKind":"method"},"abstract":[{"type":"text","text":"Memoize the result of the execution of a predicate for the "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":" receiver."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"memoize"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"with"},{"text":" ","kind":"text"},{"text":"cache","kind":"internalParam"},{"kind":"text","text":": "},{"text":"MemoizationCache","kind":"typeIdentifier"},{"text":"? = MemoizationCache.shared, ","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"keyPath"},{"text":": ","kind":"text"},{"text":"KeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">) -> "},{"text":"T","kind":"typeIdentifier"}]}]},{"parameters":[{"content":[{"inlineContent":[{"type":"text","text":"The shared cache to use; "},{"code":"nil","type":"codeVoice"},{"text":" disables caching and simply returns the result of ","type":"text"},{"type":"codeVoice","code":"predicate"},{"type":"text","text":" directly"}],"type":"paragraph"}],"name":"cache"}],"kind":"parameters"},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"return-value","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The result from the "},{"type":"codeVoice","code":"predicate"},{"text":", either a previously cached value, or the result of executing the ","type":"text"},{"code":"predicate","type":"codeVoice"}]}]},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"inlineContent":[{"type":"text","text":"The source subject (the receiver) and the result object (the return value) should be value types, and the "},{"type":"codeVoice","code":"predicate"},{"type":"text","text":" must be a "},{"type":"emphasis","inlineContent":[{"type":"text","text":"pure"}]},{"text":" function that captures ","type":"text"},{"inlineContent":[{"type":"text","text":"no state"}],"type":"emphasis"},{"type":"text","text":", in that:"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Its return value is the same for the same arguments (no variation with local static variables, non-local variables, mutable reference arguments or input streams from I\/O devices)."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Its evaluation has no side effects (no mutation of local static variables, non-local variables, mutable reference arguments or I\/O streams)."}]}]}],"type":"orderedList"},{"name":"Note","content":[{"inlineContent":[{"type":"text","text":"The calling functionâ€™s source file and line are used as the cache key, so care must be taken to avoid having multiple calls to "},{"type":"codeVoice","code":"memoize"},{"type":"text","text":" occur from a single line of source code."}],"type":"paragraph"}],"type":"aside","style":"note"},{"name":"Throws","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Re-Throws and errors from "},{"code":"predicate","type":"codeVoice"}]}],"type":"aside","style":"note"},{"style":"note","type":"aside","name":"Complexity","content":[{"inlineContent":[{"type":"text","text":"Around O(1) for a successful cache hit, otherwise the complexity of the keyPath execution"}],"type":"paragraph"}]}]}],"kind":"symbol","variants":[{"paths":["\/documentation\/diagnostics\/sourcecodelocation\/memoize(with:_:)-5v2i1"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Diagnostics\/documentation\/Diagnostics","doc:\/\/com.swallow.documentation.Diagnostics\/documentation\/Diagnostics\/SourceCodeLocation","doc:\/\/com.swallow.documentation.Diagnostics\/documentation\/Diagnostics\/SourceCodeLocation\/Hashable-Implementations"]]},"references":{"doc://com.swallow.documentation.Diagnostics/documentation/Diagnostics/SourceCodeLocation/memoize(with:_:)-5v2i1":{"identifier":"doc:\/\/com.swallow.documentation.Diagnostics\/documentation\/Diagnostics\/SourceCodeLocation\/memoize(with:_:)-5v2i1","url":"\/documentation\/diagnostics\/sourcecodelocation\/memoize(with:_:)-5v2i1","type":"topic","role":"symbol","kind":"symbol","title":"memoize(with:_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"memoize","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"text":"MemoizationCache","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC","text":"KeyPath"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">) -> "},{"text":"T","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Memoize the result of the execution of a predicate for the "},{"code":"Hashable","type":"codeVoice"},{"text":" receiver.","type":"text"}]},"doc://com.swallow.documentation.Diagnostics/documentation/Diagnostics/SourceCodeLocation/Hashable-Implementations":{"title":"Hashable Implementations","kind":"article","type":"topic","abstract":[],"url":"\/documentation\/diagnostics\/sourcecodelocation\/hashable-implementations","identifier":"doc:\/\/com.swallow.documentation.Diagnostics\/documentation\/Diagnostics\/SourceCodeLocation\/Hashable-Implementations","role":"collectionGroup"},"doc://com.swallow.documentation.Diagnostics/documentation/Diagnostics":{"abstract":[],"url":"\/documentation\/diagnostics","kind":"symbol","role":"collection","type":"topic","title":"Diagnostics","identifier":"doc:\/\/com.swallow.documentation.Diagnostics\/documentation\/Diagnostics"},"doc://com.swallow.documentation.Diagnostics/documentation/Diagnostics/SourceCodeLocation":{"navigatorTitle":[{"kind":"identifier","text":"SourceCodeLocation"}],"kind":"symbol","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SourceCodeLocation","kind":"identifier"}],"url":"\/documentation\/diagnostics\/sourcecodelocation","type":"topic","identifier":"doc:\/\/com.swallow.documentation.Diagnostics\/documentation\/Diagnostics\/SourceCodeLocation","abstract":[{"text":"A type capable of representing the location of a line of code.","type":"text"}],"title":"SourceCodeLocation"}}}