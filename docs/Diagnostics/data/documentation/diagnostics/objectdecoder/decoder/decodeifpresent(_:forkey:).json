{"kind":"symbol","identifier":{"url":"doc:\/\/com.swallow.documentation.Diagnostics\/documentation\/Diagnostics\/ObjectDecoder\/Decoder\/decodeIfPresent(_:forKey:)","interfaceLanguage":"swift"},"abstract":[{"text":"Inherited from ","type":"text"},{"type":"codeVoice","code":"Decoder.decodeIfPresent(_:forKey:)"},{"type":"text","text":"."}],"sections":[],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Diagnostics\/documentation\/Diagnostics","doc:\/\/com.swallow.documentation.Diagnostics\/documentation\/Diagnostics\/ObjectDecoder","doc:\/\/com.swallow.documentation.Diagnostics\/documentation\/Diagnostics\/ObjectDecoder\/Decoder","doc:\/\/com.swallow.documentation.Diagnostics\/documentation\/Diagnostics\/ObjectDecoder\/Decoder\/Decoder-Implementations"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"externalID":"s:s7DecoderP20_SwallowSwiftOverlayE15decodeIfPresent_6forKeyqd__Sgqd__m_qd_0_tKSeRd__s06CodingI0Rd_0_r0_lF::SYNTHESIZED::s:7Swallow13ObjectDecoderV0C0V","symbolKind":"method","modules":[{"name":"Diagnostics","relatedModules":["Swift"]}],"title":"decodeIfPresent(_:forKey:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"decodeIfPresent","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":", "},{"text":"Key","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"text":".Type, ","kind":"text"},{"kind":"externalParam","text":"forKey"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Key"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"roleHeading":"Instance Method","extendedModule":"Swift","role":"symbol"},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"decodeIfPresent","kind":"identifier"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Key","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"type","kind":"internalParam"},{"kind":"text","text":": "},{"text":"T","kind":"typeIdentifier"},{"text":".Type = T.self, ","kind":"text"},{"text":"forKey","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"key","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Key"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"T","kind":"typeIdentifier"},{"text":"? ","kind":"text"},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:Se","text":"Decodable","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Key","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:s9CodingKeyP","text":"CodingKey","kind":"typeIdentifier"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"}],"variants":[{"paths":["\/documentation\/diagnostics\/objectdecoder\/decoder\/decodeifpresent(_:forkey:)"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://com.swallow.documentation.Diagnostics/documentation/Diagnostics/ObjectDecoder/Decoder":{"type":"topic","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Diagnostics\/documentation\/Diagnostics\/ObjectDecoder\/Decoder","title":"ObjectDecoder.Decoder","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Decoder","kind":"identifier"}],"navigatorTitle":[{"text":"Decoder","kind":"identifier"}],"url":"\/documentation\/diagnostics\/objectdecoder\/decoder","kind":"symbol"},"doc://com.swallow.documentation.Diagnostics/documentation/Diagnostics/ObjectDecoder/Decoder/Decoder-Implementations":{"url":"\/documentation\/diagnostics\/objectdecoder\/decoder\/decoder-implementations","kind":"article","type":"topic","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Diagnostics\/documentation\/Diagnostics\/ObjectDecoder\/Decoder\/Decoder-Implementations","role":"collectionGroup","title":"Decoder Implementations"},"doc://com.swallow.documentation.Diagnostics/documentation/Diagnostics/ObjectDecoder":{"identifier":"doc:\/\/com.swallow.documentation.Diagnostics\/documentation\/Diagnostics\/ObjectDecoder","role":"symbol","url":"\/documentation\/diagnostics\/objectdecoder","type":"topic","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"ObjectDecoder","kind":"identifier"}],"title":"ObjectDecoder","navigatorTitle":[{"text":"ObjectDecoder","kind":"identifier"}],"abstract":[]},"doc://com.swallow.documentation.Diagnostics/documentation/Diagnostics":{"abstract":[],"url":"\/documentation\/diagnostics","kind":"symbol","role":"collection","type":"topic","title":"Diagnostics","identifier":"doc:\/\/com.swallow.documentation.Diagnostics\/documentation\/Diagnostics"},"doc://com.swallow.documentation.Diagnostics/documentation/Diagnostics/ObjectDecoder/Decoder/decodeIfPresent(_:forKey:)":{"title":"decodeIfPresent(_:forKey:)","role":"symbol","type":"topic","abstract":[],"url":"\/documentation\/diagnostics\/objectdecoder\/decoder\/decodeifpresent(_:forkey:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"decodeIfPresent","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":", "},{"text":"Key","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":".Type, "},{"text":"forKey","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Key"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"identifier":"doc:\/\/com.swallow.documentation.Diagnostics\/documentation\/Diagnostics\/ObjectDecoder\/Decoder\/decodeIfPresent(_:forKey:)","kind":"symbol"}}}