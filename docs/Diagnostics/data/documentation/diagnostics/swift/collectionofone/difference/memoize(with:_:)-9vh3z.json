{"abstract":[{"type":"text","text":"Memoize the result of the execution of a predicate for the "},{"code":"Hashable","type":"codeVoice"},{"type":"text","text":" receiver."}],"metadata":{"modules":[{"name":"Diagnostics","relatedModules":["Swift"]}],"externalID":"s:SH7SwallowE7memoize4with_qd__AA6_CacheCyAA011MemoizationD3KeyVypGSg_s0F4PathCyxqd__GtlF::SYNTHESIZED::s:s15CollectionOfOneV7SwallowE10DifferenceV","title":"memoize(with:_:)","extendedModule":"Swift","roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"memoize"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"MemoizationCache"},{"kind":"text","text":"?, "},{"preciseIdentifier":"s:s7KeyPathC","kind":"typeIdentifier","text":"KeyPath"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","text":"T"}],"role":"symbol","symbolKind":"method"},"sections":[],"schemaVersion":{"minor":3,"major":0,"patch":0},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Diagnostics\/documentation\/Diagnostics","doc:\/\/com.swallow.documentation.Diagnostics\/documentation\/Diagnostics\/Swift","doc:\/\/com.swallow.documentation.Diagnostics\/documentation\/Diagnostics\/Swift\/CollectionOfOne","doc:\/\/com.swallow.documentation.Diagnostics\/documentation\/Diagnostics\/Swift\/CollectionOfOne\/Diffable-Implementations","doc:\/\/com.swallow.documentation.Diagnostics\/documentation\/Diagnostics\/Swift\/CollectionOfOne\/Difference","doc:\/\/com.swallow.documentation.Diagnostics\/documentation\/Diagnostics\/Swift\/CollectionOfOne\/Difference\/Hashable-Implementations"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"memoize","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"with","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"cache","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"MemoizationCache"},{"text":"? = MemoizationCache.shared, ","kind":"text"},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"text":"keyPath","kind":"internalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s7KeyPathC","kind":"typeIdentifier","text":"KeyPath"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"T"}],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The shared cache to use; "},{"code":"nil","type":"codeVoice"},{"type":"text","text":" disables caching and simply returns the result of "},{"type":"codeVoice","code":"predicate"},{"type":"text","text":" directly"}]}],"name":"cache"}]},{"kind":"content","content":[{"text":"Return Value","type":"heading","anchor":"return-value","level":2},{"type":"paragraph","inlineContent":[{"text":"The result from the ","type":"text"},{"type":"codeVoice","code":"predicate"},{"type":"text","text":", either a previously cached value, or the result of executing the "},{"code":"predicate","type":"codeVoice"}]}]},{"content":[{"level":2,"anchor":"discussion","text":"Discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"The source subject (the receiver) and the result object (the return value) should be value types, and the ","type":"text"},{"code":"predicate","type":"codeVoice"},{"text":" must be a ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"pure"}]},{"type":"text","text":" function that captures "},{"type":"emphasis","inlineContent":[{"type":"text","text":"no state"}]},{"text":", in that:","type":"text"}]},{"type":"orderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Its return value is the same for the same arguments (no variation with local static variables, non-local variables, mutable reference arguments or input streams from I\/O devices)."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Its evaluation has no side effects (no mutation of local static variables, non-local variables, mutable reference arguments or I\/O streams)."}]}]}]},{"type":"aside","style":"note","name":"Note","content":[{"type":"paragraph","inlineContent":[{"text":"The calling functionâ€™s source file and line are used as the cache key, so care must be taken to avoid having multiple calls to ","type":"text"},{"type":"codeVoice","code":"memoize"},{"text":" occur from a single line of source code.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Re-Throws and errors from "},{"code":"predicate","type":"codeVoice"}]}],"name":"Throws","type":"aside","style":"note"},{"style":"note","name":"Complexity","content":[{"inlineContent":[{"text":"Around O(1) for a successful cache hit, otherwise the complexity of the keyPath execution","type":"text"}],"type":"paragraph"}],"type":"aside"}],"kind":"content"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Diagnostics\/documentation\/Diagnostics\/Swift\/CollectionOfOne\/Difference\/memoize(with:_:)-9vh3z"},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/diagnostics\/swift\/collectionofone\/difference\/memoize(with:_:)-9vh3z"]}],"references":{"doc://com.swallow.documentation.Diagnostics/documentation/Diagnostics/Swift/CollectionOfOne":{"url":"\/documentation\/diagnostics\/swift\/collectionofone","type":"topic","title":"CollectionOfOne","role":"symbol","kind":"symbol","fragments":[{"text":"extension","kind":"keyword"},{"kind":"text","text":" "},{"text":"CollectionOfOne","kind":"identifier","preciseIdentifier":"s:s15CollectionOfOneV"}],"navigatorTitle":[{"text":"CollectionOfOne","kind":"identifier"}],"abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Diagnostics\/documentation\/Diagnostics\/Swift\/CollectionOfOne"},"doc://com.swallow.documentation.Diagnostics/documentation/Diagnostics/Swift/CollectionOfOne/Difference":{"navigatorTitle":[{"text":"Difference","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Diagnostics\/documentation\/Diagnostics\/Swift\/CollectionOfOne\/Difference","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Difference"}],"type":"topic","title":"CollectionOfOne.Difference","kind":"symbol","url":"\/documentation\/diagnostics\/swift\/collectionofone\/difference","abstract":[]},"doc://com.swallow.documentation.Diagnostics/documentation/Diagnostics/Swift/CollectionOfOne/Diffable-Implementations":{"role":"collectionGroup","identifier":"doc:\/\/com.swallow.documentation.Diagnostics\/documentation\/Diagnostics\/Swift\/CollectionOfOne\/Diffable-Implementations","type":"topic","title":"Diffable Implementations","kind":"article","url":"\/documentation\/diagnostics\/swift\/collectionofone\/diffable-implementations","abstract":[]},"doc://com.swallow.documentation.Diagnostics/documentation/Diagnostics/Swift":{"url":"\/documentation\/diagnostics\/swift","type":"topic","kind":"symbol","title":"Swift","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Diagnostics\/documentation\/Diagnostics\/Swift","role":"collection"},"doc://com.swallow.documentation.Diagnostics/documentation/Diagnostics":{"abstract":[],"url":"\/documentation\/diagnostics","kind":"symbol","role":"collection","type":"topic","title":"Diagnostics","identifier":"doc:\/\/com.swallow.documentation.Diagnostics\/documentation\/Diagnostics"},"doc://com.swallow.documentation.Diagnostics/documentation/Diagnostics/Swift/CollectionOfOne/Difference/Hashable-Implementations":{"abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Diagnostics\/documentation\/Diagnostics\/Swift\/CollectionOfOne\/Difference\/Hashable-Implementations","type":"topic","title":"Hashable Implementations","url":"\/documentation\/diagnostics\/swift\/collectionofone\/difference\/hashable-implementations","role":"collectionGroup","kind":"article"},"doc://com.swallow.documentation.Diagnostics/documentation/Diagnostics/Swift/CollectionOfOne/Difference/memoize(with:_:)-9vh3z":{"url":"\/documentation\/diagnostics\/swift\/collectionofone\/difference\/memoize(with:_:)-9vh3z","title":"memoize(with:_:)","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Diagnostics\/documentation\/Diagnostics\/Swift\/CollectionOfOne\/Difference\/memoize(with:_:)-9vh3z","type":"topic","abstract":[{"type":"text","text":"Memoize the result of the execution of a predicate for the "},{"type":"codeVoice","code":"Hashable"},{"text":" receiver.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"memoize","kind":"identifier"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"with"},{"text":": ","kind":"text"},{"text":"MemoizationCache","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"KeyPath","preciseIdentifier":"s:s7KeyPathC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"T","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"role":"symbol"}}}