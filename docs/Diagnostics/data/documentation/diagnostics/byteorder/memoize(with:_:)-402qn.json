{"abstract":[{"text":"Memoize the result of the execution of a predicate for the ","type":"text"},{"type":"codeVoice","code":"Hashable"},{"text":" receiver.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Diagnostics\/documentation\/Diagnostics","doc:\/\/com.swallow.documentation.Diagnostics\/documentation\/Diagnostics\/ByteOrder","doc:\/\/com.swallow.documentation.Diagnostics\/documentation\/Diagnostics\/ByteOrder\/Hashable-Implementations"]]},"kind":"symbol","metadata":{"title":"memoize(with:_:)","modules":[{"relatedModules":["Swift"],"name":"Diagnostics"}],"role":"symbol","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"memoize","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"with"},{"text":": ","kind":"text"},{"text":"MemoizationCache","kind":"typeIdentifier"},{"kind":"text","text":"?, "},{"kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC","text":"KeyPath"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"T","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","text":"T"}],"externalID":"s:SH7SwallowE7memoize4with_qd__AA6_CacheCyAA011MemoizationD3KeyVypGSg_s0F4PathCyxqd__GtlF::SYNTHESIZED::s:7Swallow9ByteOrderO","extendedModule":"Swift","roleHeading":"Instance Method"},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"memoize"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"cache"},{"kind":"text","text":": "},{"text":"MemoizationCache","kind":"typeIdentifier"},{"kind":"text","text":"? = MemoizationCache.shared, "},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"keyPath"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s7KeyPathC","kind":"typeIdentifier","text":"KeyPath"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":">) -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"languages":["swift"],"platforms":["macOS"]}]},{"parameters":[{"content":[{"inlineContent":[{"type":"text","text":"The shared cache to use; "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" disables caching and simply returns the result of "},{"code":"predicate","type":"codeVoice"},{"text":" directly","type":"text"}],"type":"paragraph"}],"name":"cache"}],"kind":"parameters"},{"content":[{"type":"heading","level":2,"anchor":"return-value","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The result from the "},{"type":"codeVoice","code":"predicate"},{"type":"text","text":", either a previously cached value, or the result of executing the "},{"code":"predicate","type":"codeVoice"}]}],"kind":"content"},{"content":[{"type":"heading","anchor":"discussion","level":2,"text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"The source subject (the receiver) and the result object (the return value) should be value types, and the ","type":"text"},{"code":"predicate","type":"codeVoice"},{"type":"text","text":" must be a "},{"type":"emphasis","inlineContent":[{"type":"text","text":"pure"}]},{"text":" function that captures ","type":"text"},{"inlineContent":[{"text":"no state","type":"text"}],"type":"emphasis"},{"text":", in that:","type":"text"}]},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Its return value is the same for the same arguments (no variation with local static variables, non-local variables, mutable reference arguments or input streams from I\/O devices)."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Its evaluation has no side effects (no mutation of local static variables, non-local variables, mutable reference arguments or I\/O streams)."}],"type":"paragraph"}]}],"type":"orderedList"},{"name":"Note","type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"The calling functionâ€™s source file and line are used as the cache key, so care must be taken to avoid having multiple calls to ","type":"text"},{"type":"codeVoice","code":"memoize"},{"type":"text","text":" occur from a single line of source code."}]}],"style":"note"},{"name":"Throws","content":[{"inlineContent":[{"text":"Re-Throws and errors from ","type":"text"},{"type":"codeVoice","code":"predicate"}],"type":"paragraph"}],"type":"aside","style":"note"},{"type":"aside","name":"Complexity","style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Around O(1) for a successful cache hit, otherwise the complexity of the keyPath execution"}]}]}],"kind":"content"}],"variants":[{"paths":["\/documentation\/diagnostics\/byteorder\/memoize(with:_:)-402qn"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Diagnostics\/documentation\/Diagnostics\/ByteOrder\/memoize(with:_:)-402qn"},"references":{"doc://com.swallow.documentation.Diagnostics/documentation/Diagnostics/ByteOrder":{"title":"ByteOrder","kind":"symbol","url":"\/documentation\/diagnostics\/byteorder","type":"topic","navigatorTitle":[{"text":"ByteOrder","kind":"identifier"}],"abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Diagnostics\/documentation\/Diagnostics\/ByteOrder","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ByteOrder","kind":"identifier"}]},"doc://com.swallow.documentation.Diagnostics/documentation/Diagnostics/ByteOrder/memoize(with:_:)-402qn":{"title":"memoize(with:_:)","url":"\/documentation\/diagnostics\/byteorder\/memoize(with:_:)-402qn","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"memoize","kind":"identifier"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"with","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"MemoizationCache"},{"kind":"text","text":"?, "},{"preciseIdentifier":"s:s7KeyPathC","kind":"typeIdentifier","text":"KeyPath"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.Diagnostics\/documentation\/Diagnostics\/ByteOrder\/memoize(with:_:)-402qn","role":"symbol","abstract":[{"text":"Memoize the result of the execution of a predicate for the ","type":"text"},{"code":"Hashable","type":"codeVoice"},{"type":"text","text":" receiver."}]},"doc://com.swallow.documentation.Diagnostics/documentation/Diagnostics":{"abstract":[],"url":"\/documentation\/diagnostics","kind":"symbol","role":"collection","type":"topic","title":"Diagnostics","identifier":"doc:\/\/com.swallow.documentation.Diagnostics\/documentation\/Diagnostics"},"doc://com.swallow.documentation.Diagnostics/documentation/Diagnostics/ByteOrder/Hashable-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.Diagnostics\/documentation\/Diagnostics\/ByteOrder\/Hashable-Implementations","url":"\/documentation\/diagnostics\/byteorder\/hashable-implementations","type":"topic","abstract":[],"role":"collectionGroup","kind":"article","title":"Hashable Implementations"}}}