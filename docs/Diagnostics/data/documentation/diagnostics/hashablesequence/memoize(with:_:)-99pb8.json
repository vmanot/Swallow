{"metadata":{"externalID":"s:SH7SwallowE7memoize4with_qd__AA6_CacheCyAA011MemoizationD3KeyVypGSg_s0F4PathCyxqd__GtlF::SYNTHESIZED::s:7Swallow16HashableSequenceV","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"memoize"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"with","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"MemoizationCache"},{"kind":"text","text":"?, "},{"text":"KeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":">) -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"roleHeading":"Instance Method","title":"memoize(with:_:)","modules":[{"name":"Diagnostics","relatedModules":["Swift"]}],"extendedModule":"Swift","symbolKind":"method","role":"symbol"},"abstract":[{"type":"text","text":"Memoize the result of the execution of a predicate for the "},{"type":"codeVoice","code":"Hashable"},{"text":" receiver.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"memoize","kind":"identifier"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"with","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"cache"},{"text":": ","kind":"text"},{"text":"MemoizationCache","kind":"typeIdentifier"},{"kind":"text","text":"? = MemoizationCache.shared, "},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"keyPath"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s7KeyPathC","text":"KeyPath","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","text":"T"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"name":"cache","content":[{"inlineContent":[{"text":"The shared cache to use; ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":" disables caching and simply returns the result of "},{"code":"predicate","type":"codeVoice"},{"type":"text","text":" directly"}],"type":"paragraph"}]}]},{"kind":"content","content":[{"level":2,"anchor":"return-value","text":"Return Value","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"The result from the ","type":"text"},{"code":"predicate","type":"codeVoice"},{"text":", either a previously cached value, or the result of executing the ","type":"text"},{"code":"predicate","type":"codeVoice"}]}]},{"kind":"content","content":[{"type":"heading","anchor":"discussion","text":"Discussion","level":2},{"type":"paragraph","inlineContent":[{"text":"The source subject (the receiver) and the result object (the return value) should be value types, and the ","type":"text"},{"code":"predicate","type":"codeVoice"},{"type":"text","text":" must be a "},{"inlineContent":[{"type":"text","text":"pure"}],"type":"emphasis"},{"text":" function that captures ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"no state","type":"text"}]},{"type":"text","text":", in that:"}]},{"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Its return value is the same for the same arguments (no variation with local static variables, non-local variables, mutable reference arguments or input streams from I\/O devices)."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Its evaluation has no side effects (no mutation of local static variables, non-local variables, mutable reference arguments or I\/O streams)."}],"type":"paragraph"}]}]},{"name":"Note","content":[{"inlineContent":[{"type":"text","text":"The calling functionâ€™s source file and line are used as the cache key, so care must be taken to avoid having multiple calls to "},{"type":"codeVoice","code":"memoize"},{"text":" occur from a single line of source code.","type":"text"}],"type":"paragraph"}],"type":"aside","style":"note"},{"name":"Throws","content":[{"inlineContent":[{"type":"text","text":"Re-Throws and errors from "},{"type":"codeVoice","code":"predicate"}],"type":"paragraph"}],"type":"aside","style":"note"},{"name":"Complexity","content":[{"type":"paragraph","inlineContent":[{"text":"Around O(1) for a successful cache hit, otherwise the complexity of the keyPath execution","type":"text"}]}],"style":"note","type":"aside"}]}],"sections":[],"identifier":{"url":"doc:\/\/com.swallow.documentation.Diagnostics\/documentation\/Diagnostics\/HashableSequence\/memoize(with:_:)-99pb8","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Diagnostics\/documentation\/Diagnostics","doc:\/\/com.swallow.documentation.Diagnostics\/documentation\/Diagnostics\/HashableSequence","doc:\/\/com.swallow.documentation.Diagnostics\/documentation\/Diagnostics\/HashableSequence\/Hashable-Implementations"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/diagnostics\/hashablesequence\/memoize(with:_:)-99pb8"]}],"references":{"doc://com.swallow.documentation.Diagnostics/documentation/Diagnostics/HashableSequence":{"identifier":"doc:\/\/com.swallow.documentation.Diagnostics\/documentation\/Diagnostics\/HashableSequence","navigatorTitle":[{"kind":"identifier","text":"HashableSequence"}],"type":"topic","title":"HashableSequence","role":"symbol","url":"\/documentation\/diagnostics\/hashablesequence","abstract":[],"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"HashableSequence"}]},"doc://com.swallow.documentation.Diagnostics/documentation/Diagnostics/HashableSequence/memoize(with:_:)-99pb8":{"kind":"symbol","type":"topic","identifier":"doc:\/\/com.swallow.documentation.Diagnostics\/documentation\/Diagnostics\/HashableSequence\/memoize(with:_:)-99pb8","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"memoize"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"text":"with","kind":"externalParam"},{"kind":"text","text":": "},{"text":"MemoizationCache","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"kind":"typeIdentifier","text":"KeyPath","preciseIdentifier":"s:s7KeyPathC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"T"}],"url":"\/documentation\/diagnostics\/hashablesequence\/memoize(with:_:)-99pb8","title":"memoize(with:_:)","abstract":[{"type":"text","text":"Memoize the result of the execution of a predicate for the "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":" receiver."}],"role":"symbol"},"doc://com.swallow.documentation.Diagnostics/documentation/Diagnostics":{"abstract":[],"url":"\/documentation\/diagnostics","kind":"symbol","role":"collection","type":"topic","title":"Diagnostics","identifier":"doc:\/\/com.swallow.documentation.Diagnostics\/documentation\/Diagnostics"},"doc://com.swallow.documentation.Diagnostics/documentation/Diagnostics/HashableSequence/Hashable-Implementations":{"abstract":[],"url":"\/documentation\/diagnostics\/hashablesequence\/hashable-implementations","identifier":"doc:\/\/com.swallow.documentation.Diagnostics\/documentation\/Diagnostics\/HashableSequence\/Hashable-Implementations","role":"collectionGroup","type":"topic","kind":"article","title":"Hashable Implementations"}}}