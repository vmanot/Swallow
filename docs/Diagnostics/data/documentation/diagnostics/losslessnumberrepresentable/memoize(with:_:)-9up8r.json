{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Diagnostics\/documentation\/Diagnostics\/LosslessNumberRepresentable\/memoize(with:_:)-9up8r"},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"memoize","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"with","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"cache"},{"text":": ","kind":"text"},{"text":"MemoizationCache","kind":"typeIdentifier"},{"text":"? = MemoizationCache.shared, ","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"text":"keyPath","kind":"internalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s7KeyPathC","text":"KeyPath","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"T"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","text":"T"}],"platforms":["macOS"],"languages":["swift"]}]},{"parameters":[{"name":"cache","content":[{"type":"paragraph","inlineContent":[{"text":"The shared cache to use; ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":" disables caching and simply returns the result of "},{"type":"codeVoice","code":"predicate"},{"type":"text","text":" directly"}]}]}],"kind":"parameters"},{"kind":"content","content":[{"type":"heading","anchor":"return-value","text":"Return Value","level":2},{"inlineContent":[{"text":"The result from the ","type":"text"},{"code":"predicate","type":"codeVoice"},{"text":", either a previously cached value, or the result of executing the ","type":"text"},{"code":"predicate","type":"codeVoice"}],"type":"paragraph"}]},{"kind":"content","content":[{"anchor":"discussion","text":"Discussion","type":"heading","level":2},{"inlineContent":[{"text":"The source subject (the receiver) and the result object (the return value) should be value types, and the ","type":"text"},{"code":"predicate","type":"codeVoice"},{"text":" must be a ","type":"text"},{"inlineContent":[{"type":"text","text":"pure"}],"type":"emphasis"},{"type":"text","text":" function that captures "},{"type":"emphasis","inlineContent":[{"type":"text","text":"no state"}]},{"text":", in that:","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Its return value is the same for the same arguments (no variation with local static variables, non-local variables, mutable reference arguments or input streams from I\/O devices).","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Its evaluation has no side effects (no mutation of local static variables, non-local variables, mutable reference arguments or I\/O streams)."}],"type":"paragraph"}]}],"type":"orderedList"},{"content":[{"inlineContent":[{"type":"text","text":"The calling functionâ€™s source file and line are used as the cache key, so care must be taken to avoid having multiple calls to "},{"type":"codeVoice","code":"memoize"},{"type":"text","text":" occur from a single line of source code."}],"type":"paragraph"}],"style":"note","type":"aside","name":"Note"},{"content":[{"inlineContent":[{"text":"Re-Throws and errors from ","type":"text"},{"type":"codeVoice","code":"predicate"}],"type":"paragraph"}],"name":"Throws","style":"note","type":"aside"},{"name":"Complexity","type":"aside","style":"note","content":[{"type":"paragraph","inlineContent":[{"text":"Around O(1) for a successful cache hit, otherwise the complexity of the keyPath execution","type":"text"}]}]}]}],"metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"memoize"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"with"},{"text":": ","kind":"text"},{"text":"MemoizationCache","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"kind":"typeIdentifier","text":"KeyPath","preciseIdentifier":"s:s7KeyPathC"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"T","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"modules":[{"relatedModules":["Swift"],"name":"Diagnostics"}],"roleHeading":"Instance Method","role":"symbol","symbolKind":"method","extendedModule":"Swift","externalID":"s:SH7SwallowE7memoize4with_qd__AA6_CacheCyAA011MemoizationD3KeyVypGSg_s0F4PathCyxqd__GtlF::SYNTHESIZED::s:7Swallow27LosslessNumberRepresentableV","title":"memoize(with:_:)"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/diagnostics\/losslessnumberrepresentable\/memoize(with:_:)-9up8r"]}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Diagnostics\/documentation\/Diagnostics","doc:\/\/com.swallow.documentation.Diagnostics\/documentation\/Diagnostics\/LosslessNumberRepresentable","doc:\/\/com.swallow.documentation.Diagnostics\/documentation\/Diagnostics\/LosslessNumberRepresentable\/Hashable-Implementations"]]},"schemaVersion":{"patch":0,"minor":3,"major":0},"abstract":[{"type":"text","text":"Memoize the result of the execution of a predicate for the "},{"code":"Hashable","type":"codeVoice"},{"text":" receiver.","type":"text"}],"kind":"symbol","references":{"doc://com.swallow.documentation.Diagnostics/documentation/Diagnostics/LosslessNumberRepresentable/memoize(with:_:)-9up8r":{"kind":"symbol","role":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"memoize","kind":"identifier"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"text":"MemoizationCache","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"KeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","text":"T"}],"url":"\/documentation\/diagnostics\/losslessnumberrepresentable\/memoize(with:_:)-9up8r","abstract":[{"type":"text","text":"Memoize the result of the execution of a predicate for the "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":" receiver."}],"identifier":"doc:\/\/com.swallow.documentation.Diagnostics\/documentation\/Diagnostics\/LosslessNumberRepresentable\/memoize(with:_:)-9up8r","title":"memoize(with:_:)"},"doc://com.swallow.documentation.Diagnostics/documentation/Diagnostics/LosslessNumberRepresentable/Hashable-Implementations":{"kind":"article","abstract":[],"url":"\/documentation\/diagnostics\/losslessnumberrepresentable\/hashable-implementations","role":"collectionGroup","identifier":"doc:\/\/com.swallow.documentation.Diagnostics\/documentation\/Diagnostics\/LosslessNumberRepresentable\/Hashable-Implementations","type":"topic","title":"Hashable Implementations"},"doc://com.swallow.documentation.Diagnostics/documentation/Diagnostics/LosslessNumberRepresentable":{"role":"symbol","navigatorTitle":[{"text":"LosslessNumberRepresentable","kind":"identifier"}],"kind":"symbol","title":"LosslessNumberRepresentable","identifier":"doc:\/\/com.swallow.documentation.Diagnostics\/documentation\/Diagnostics\/LosslessNumberRepresentable","type":"topic","url":"\/documentation\/diagnostics\/losslessnumberrepresentable","abstract":[],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"LosslessNumberRepresentable"}]},"doc://com.swallow.documentation.Diagnostics/documentation/Diagnostics":{"abstract":[],"url":"\/documentation\/diagnostics","kind":"symbol","role":"collection","type":"topic","title":"Diagnostics","identifier":"doc:\/\/com.swallow.documentation.Diagnostics\/documentation\/Diagnostics"}}}