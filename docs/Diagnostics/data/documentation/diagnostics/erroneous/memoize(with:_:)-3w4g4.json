{"sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"abstract":[{"text":"Memoize the result of the execution of a predicate for the ","type":"text"},{"code":"Hashable","type":"codeVoice"},{"text":" receiver.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"memoize"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"with"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"cache"},{"text":": ","kind":"text"},{"text":"MemoizationCache","kind":"typeIdentifier"},{"text":"? = MemoizationCache.shared, ","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"keyPath","kind":"internalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s7KeyPathC","text":"KeyPath","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"text":"T","kind":"typeIdentifier"}]}]},{"parameters":[{"content":[{"inlineContent":[{"type":"text","text":"The shared cache to use; "},{"code":"nil","type":"codeVoice"},{"text":" disables caching and simply returns the result of ","type":"text"},{"type":"codeVoice","code":"predicate"},{"type":"text","text":" directly"}],"type":"paragraph"}],"name":"cache"}],"kind":"parameters"},{"kind":"content","content":[{"anchor":"return-value","text":"Return Value","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"The result from the "},{"code":"predicate","type":"codeVoice"},{"type":"text","text":", either a previously cached value, or the result of executing the "},{"type":"codeVoice","code":"predicate"}],"type":"paragraph"}]},{"kind":"content","content":[{"level":2,"anchor":"discussion","text":"Discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"The source subject (the receiver) and the result object (the return value) should be value types, and the ","type":"text"},{"code":"predicate","type":"codeVoice"},{"text":" must be a ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"pure"}]},{"type":"text","text":" function that captures "},{"inlineContent":[{"type":"text","text":"no state"}],"type":"emphasis"},{"text":", in that:","type":"text"}]},{"items":[{"content":[{"inlineContent":[{"text":"Its return value is the same for the same arguments (no variation with local static variables, non-local variables, mutable reference arguments or input streams from I\/O devices).","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Its evaluation has no side effects (no mutation of local static variables, non-local variables, mutable reference arguments or I\/O streams)."}],"type":"paragraph"}]}],"type":"orderedList"},{"style":"note","content":[{"inlineContent":[{"text":"The calling functionâ€™s source file and line are used as the cache key, so care must be taken to avoid having multiple calls to ","type":"text"},{"code":"memoize","type":"codeVoice"},{"type":"text","text":" occur from a single line of source code."}],"type":"paragraph"}],"type":"aside","name":"Note"},{"name":"Throws","type":"aside","style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Re-Throws and errors from "},{"code":"predicate","type":"codeVoice"}]}]},{"style":"note","type":"aside","name":"Complexity","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Around O(1) for a successful cache hit, otherwise the complexity of the keyPath execution"}]}]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/diagnostics\/erroneous\/memoize(with:_:)-3w4g4"]}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Diagnostics\/documentation\/Diagnostics","doc:\/\/com.swallow.documentation.Diagnostics\/documentation\/Diagnostics\/Erroneous","doc:\/\/com.swallow.documentation.Diagnostics\/documentation\/Diagnostics\/Erroneous\/Hashable-Implementations"]]},"kind":"symbol","metadata":{"modules":[{"name":"Diagnostics","relatedModules":["Swift"]}],"extendedModule":"Swift","title":"memoize(with:_:)","roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"memoize","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"text":"with","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"MemoizationCache","kind":"typeIdentifier"},{"kind":"text","text":"?, "},{"kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC","text":"KeyPath"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"T"}],"externalID":"s:SH7SwallowE7memoize4with_qd__AA6_CacheCyAA011MemoizationD3KeyVypGSg_s0F4PathCyxqd__GtlF::SYNTHESIZED::s:7Swallow9ErroneousV","role":"symbol","symbolKind":"method"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.Diagnostics\/documentation\/Diagnostics\/Erroneous\/memoize(with:_:)-3w4g4"},"references":{"doc://com.swallow.documentation.Diagnostics/documentation/Diagnostics/Erroneous/memoize(with:_:)-3w4g4":{"kind":"symbol","url":"\/documentation\/diagnostics\/erroneous\/memoize(with:_:)-3w4g4","type":"topic","abstract":[{"text":"Memoize the result of the execution of a predicate for the ","type":"text"},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":" receiver."}],"title":"memoize(with:_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"memoize","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"MemoizationCache"},{"text":"?, ","kind":"text"},{"preciseIdentifier":"s:s7KeyPathC","kind":"typeIdentifier","text":"KeyPath"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"T"}],"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.Diagnostics\/documentation\/Diagnostics\/Erroneous\/memoize(with:_:)-3w4g4"},"doc://com.swallow.documentation.Diagnostics/documentation/Diagnostics/Erroneous":{"abstract":[{"type":"text","text":"A thin wrapper that can wrap an arbitrary value as a Swift error."}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Diagnostics\/documentation\/Diagnostics\/Erroneous","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Erroneous"}],"title":"Erroneous","type":"topic","url":"\/documentation\/diagnostics\/erroneous","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Erroneous"}]},"doc://com.swallow.documentation.Diagnostics/documentation/Diagnostics/Erroneous/Hashable-Implementations":{"abstract":[],"url":"\/documentation\/diagnostics\/erroneous\/hashable-implementations","kind":"article","role":"collectionGroup","type":"topic","title":"Hashable Implementations","identifier":"doc:\/\/com.swallow.documentation.Diagnostics\/documentation\/Diagnostics\/Erroneous\/Hashable-Implementations"},"doc://com.swallow.documentation.Diagnostics/documentation/Diagnostics":{"abstract":[],"url":"\/documentation\/diagnostics","kind":"symbol","role":"collection","type":"topic","title":"Diagnostics","identifier":"doc:\/\/com.swallow.documentation.Diagnostics\/documentation\/Diagnostics"}}}