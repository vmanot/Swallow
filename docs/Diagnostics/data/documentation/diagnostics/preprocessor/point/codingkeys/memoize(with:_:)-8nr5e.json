{"variants":[{"paths":["\/documentation\/diagnostics\/preprocessor\/point\/codingkeys\/memoize(with:_:)-8nr5e"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"abstract":[{"type":"text","text":"Memoize the result of the execution of a predicate for the "},{"type":"codeVoice","code":"Hashable"},{"text":" receiver.","type":"text"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"kind":"symbol","metadata":{"externalID":"s:SH7SwallowE7memoize4with_qd__AA6_CacheCyAA011MemoizationD3KeyVypGSg_s0F4PathCyxqd__GtlF::SYNTHESIZED::s:7Swallow12PreprocessorO5PointV10CodingKeysO","extendedModule":"Swift","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"memoize","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"text":"MemoizationCache","kind":"typeIdentifier"},{"kind":"text","text":"?, "},{"kind":"typeIdentifier","text":"KeyPath","preciseIdentifier":"s:s7KeyPathC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":">) -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"title":"memoize(with:_:)","modules":[{"relatedModules":["Swift"],"name":"Diagnostics"}],"role":"symbol","roleHeading":"Instance Method","symbolKind":"method"},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Diagnostics\/documentation\/Diagnostics","doc:\/\/com.swallow.documentation.Diagnostics\/documentation\/Diagnostics\/Preprocessor","doc:\/\/com.swallow.documentation.Diagnostics\/documentation\/Diagnostics\/Preprocessor\/Point","doc:\/\/com.swallow.documentation.Diagnostics\/documentation\/Diagnostics\/Preprocessor\/Point\/CodingKeys","doc:\/\/com.swallow.documentation.Diagnostics\/documentation\/Diagnostics\/Preprocessor\/Point\/CodingKeys\/Hashable-Implementations"]]},"identifier":{"url":"doc:\/\/com.swallow.documentation.Diagnostics\/documentation\/Diagnostics\/Preprocessor\/Point\/CodingKeys\/memoize(with:_:)-8nr5e","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"memoize"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"with"},{"kind":"text","text":" "},{"kind":"internalParam","text":"cache"},{"text":": ","kind":"text"},{"text":"MemoizationCache","kind":"typeIdentifier"},{"text":"? = MemoizationCache.shared, ","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"keyPath"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC","text":"KeyPath"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"T","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","text":"T"}]}]},{"parameters":[{"name":"cache","content":[{"type":"paragraph","inlineContent":[{"text":"The shared cache to use; ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":" disables caching and simply returns the result of ","type":"text"},{"type":"codeVoice","code":"predicate"},{"type":"text","text":" directly"}]}]}],"kind":"parameters"},{"kind":"content","content":[{"type":"heading","text":"Return Value","level":2,"anchor":"return-value"},{"inlineContent":[{"type":"text","text":"The result from the "},{"type":"codeVoice","code":"predicate"},{"text":", either a previously cached value, or the result of executing the ","type":"text"},{"code":"predicate","type":"codeVoice"}],"type":"paragraph"}]},{"content":[{"text":"Discussion","type":"heading","anchor":"discussion","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"The source subject (the receiver) and the result object (the return value) should be value types, and the "},{"code":"predicate","type":"codeVoice"},{"type":"text","text":" must be a "},{"inlineContent":[{"type":"text","text":"pure"}],"type":"emphasis"},{"type":"text","text":" function that captures "},{"type":"emphasis","inlineContent":[{"type":"text","text":"no state"}]},{"type":"text","text":", in that:"}]},{"type":"orderedList","items":[{"content":[{"inlineContent":[{"text":"Its return value is the same for the same arguments (no variation with local static variables, non-local variables, mutable reference arguments or input streams from I\/O devices).","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Its evaluation has no side effects (no mutation of local static variables, non-local variables, mutable reference arguments or I\/O streams).","type":"text"}]}]}]},{"name":"Note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The calling functionâ€™s source file and line are used as the cache key, so care must be taken to avoid having multiple calls to "},{"code":"memoize","type":"codeVoice"},{"text":" occur from a single line of source code.","type":"text"}]}],"type":"aside","style":"note"},{"style":"note","content":[{"inlineContent":[{"type":"text","text":"Re-Throws and errors from "},{"type":"codeVoice","code":"predicate"}],"type":"paragraph"}],"name":"Throws","type":"aside"},{"content":[{"inlineContent":[{"type":"text","text":"Around O(1) for a successful cache hit, otherwise the complexity of the keyPath execution"}],"type":"paragraph"}],"style":"note","type":"aside","name":"Complexity"}],"kind":"content"}],"references":{"doc://com.swallow.documentation.Diagnostics/documentation/Diagnostics/Preprocessor/Point":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Point"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Diagnostics\/documentation\/Diagnostics\/Preprocessor\/Point","role":"symbol","title":"Preprocessor.Point","abstract":[{"text":"A textual point in the source code of the program.","type":"text"}],"type":"topic","url":"\/documentation\/diagnostics\/preprocessor\/point","navigatorTitle":[{"text":"Point","kind":"identifier"}]},"doc://com.swallow.documentation.Diagnostics/documentation/Diagnostics/Preprocessor/Point/CodingKeys/Hashable-Implementations":{"title":"Hashable Implementations","url":"\/documentation\/diagnostics\/preprocessor\/point\/codingkeys\/hashable-implementations","abstract":[],"kind":"article","role":"collectionGroup","identifier":"doc:\/\/com.swallow.documentation.Diagnostics\/documentation\/Diagnostics\/Preprocessor\/Point\/CodingKeys\/Hashable-Implementations","type":"topic"},"doc://com.swallow.documentation.Diagnostics/documentation/Diagnostics/Preprocessor":{"identifier":"doc:\/\/com.swallow.documentation.Diagnostics\/documentation\/Diagnostics\/Preprocessor","abstract":[{"text":"A namespace for preprocessor-magic related structures.","type":"text"}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"Preprocessor","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"Preprocessor"}],"url":"\/documentation\/diagnostics\/preprocessor","role":"symbol","kind":"symbol","type":"topic","title":"Preprocessor"},"doc://com.swallow.documentation.Diagnostics/documentation/Diagnostics":{"abstract":[],"url":"\/documentation\/diagnostics","kind":"symbol","role":"collection","type":"topic","title":"Diagnostics","identifier":"doc:\/\/com.swallow.documentation.Diagnostics\/documentation\/Diagnostics"},"doc://com.swallow.documentation.Diagnostics/documentation/Diagnostics/Preprocessor/Point/CodingKeys":{"type":"topic","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"CodingKeys","kind":"identifier"}],"url":"\/documentation\/diagnostics\/preprocessor\/point\/codingkeys","abstract":[],"role":"symbol","kind":"symbol","title":"Preprocessor.Point.CodingKeys","identifier":"doc:\/\/com.swallow.documentation.Diagnostics\/documentation\/Diagnostics\/Preprocessor\/Point\/CodingKeys","navigatorTitle":[{"kind":"identifier","text":"CodingKeys"}]},"doc://com.swallow.documentation.Diagnostics/documentation/Diagnostics/Preprocessor/Point/CodingKeys/memoize(with:_:)-8nr5e":{"type":"topic","kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.Diagnostics\/documentation\/Diagnostics\/Preprocessor\/Point\/CodingKeys\/memoize(with:_:)-8nr5e","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"memoize"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"with"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"MemoizationCache"},{"text":"?, ","kind":"text"},{"text":"KeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"T"},{"text":">) -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"abstract":[{"text":"Memoize the result of the execution of a predicate for the ","type":"text"},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":" receiver."}],"title":"memoize(with:_:)","url":"\/documentation\/diagnostics\/preprocessor\/point\/codingkeys\/memoize(with:_:)-8nr5e","role":"symbol"}}}