{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/diagnostics\/codingpathelement\/memoize(with:_:)-8ect5"]}],"metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"memoize","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"with"},{"text":": ","kind":"text"},{"text":"MemoizationCache","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"KeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"text":"T","kind":"typeIdentifier"}],"extendedModule":"Swift","role":"symbol","symbolKind":"method","roleHeading":"Instance Method","title":"memoize(with:_:)","modules":[{"name":"Diagnostics","relatedModules":["Swift"]}],"externalID":"s:SH7SwallowE7memoize4with_qd__AA6_CacheCyAA011MemoizationD3KeyVypGSg_s0F4PathCyxqd__GtlF::SYNTHESIZED::s:7Swallow17CodingPathElementO"},"sections":[],"identifier":{"url":"doc:\/\/com.swallow.documentation.Diagnostics\/documentation\/Diagnostics\/CodingPathElement\/memoize(with:_:)-8ect5","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"major":0,"minor":3},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"memoize","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"with"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"cache"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"MemoizationCache"},{"text":"? = MemoizationCache.shared, ","kind":"text"},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"keyPath"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"KeyPath","preciseIdentifier":"s:s7KeyPathC"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","text":"T"}],"platforms":["macOS"],"languages":["swift"]}]},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The shared cache to use; "},{"code":"nil","type":"codeVoice"},{"text":" disables caching and simply returns the result of ","type":"text"},{"type":"codeVoice","code":"predicate"},{"text":" directly","type":"text"}]}],"name":"cache"}],"kind":"parameters"},{"kind":"content","content":[{"anchor":"return-value","text":"Return Value","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"The result from the "},{"type":"codeVoice","code":"predicate"},{"type":"text","text":", either a previously cached value, or the result of executing the "},{"type":"codeVoice","code":"predicate"}],"type":"paragraph"}]},{"kind":"content","content":[{"level":2,"anchor":"discussion","type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The source subject (the receiver) and the result object (the return value) should be value types, and the "},{"code":"predicate","type":"codeVoice"},{"text":" must be a ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"pure"}]},{"type":"text","text":" function that captures "},{"type":"emphasis","inlineContent":[{"type":"text","text":"no state"}]},{"type":"text","text":", in that:"}]},{"type":"orderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Its return value is the same for the same arguments (no variation with local static variables, non-local variables, mutable reference arguments or input streams from I\/O devices)."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Its evaluation has no side effects (no mutation of local static variables, non-local variables, mutable reference arguments or I\/O streams)."}]}]}]},{"type":"aside","style":"note","name":"Note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The calling functionâ€™s source file and line are used as the cache key, so care must be taken to avoid having multiple calls to "},{"code":"memoize","type":"codeVoice"},{"text":" occur from a single line of source code.","type":"text"}]}]},{"style":"note","type":"aside","name":"Throws","content":[{"inlineContent":[{"text":"Re-Throws and errors from ","type":"text"},{"code":"predicate","type":"codeVoice"}],"type":"paragraph"}]},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"text":"Around O(1) for a successful cache hit, otherwise the complexity of the keyPath execution","type":"text"}]}],"type":"aside","name":"Complexity"}]}],"abstract":[{"text":"Memoize the result of the execution of a predicate for the ","type":"text"},{"type":"codeVoice","code":"Hashable"},{"text":" receiver.","type":"text"}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.Diagnostics\/documentation\/Diagnostics","doc:\/\/com.swallow.documentation.Diagnostics\/documentation\/Diagnostics\/CodingPathElement","doc:\/\/com.swallow.documentation.Diagnostics\/documentation\/Diagnostics\/CodingPathElement\/Hashable-Implementations"]]},"references":{"doc://com.swallow.documentation.Diagnostics/documentation/Diagnostics/CodingPathElement/memoize(with:_:)-8ect5":{"identifier":"doc:\/\/com.swallow.documentation.Diagnostics\/documentation\/Diagnostics\/CodingPathElement\/memoize(with:_:)-8ect5","role":"symbol","url":"\/documentation\/diagnostics\/codingpathelement\/memoize(with:_:)-8ect5","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"memoize","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"with","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"MemoizationCache"},{"text":"?, ","kind":"text"},{"preciseIdentifier":"s:s7KeyPathC","text":"KeyPath","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"T"},{"text":">) -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"kind":"symbol","abstract":[{"type":"text","text":"Memoize the result of the execution of a predicate for the "},{"type":"codeVoice","code":"Hashable"},{"text":" receiver.","type":"text"}],"title":"memoize(with:_:)","type":"topic"},"doc://com.swallow.documentation.Diagnostics/documentation/Diagnostics/CodingPathElement/Hashable-Implementations":{"url":"\/documentation\/diagnostics\/codingpathelement\/hashable-implementations","kind":"article","type":"topic","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.Diagnostics\/documentation\/Diagnostics\/CodingPathElement\/Hashable-Implementations","role":"collectionGroup","title":"Hashable Implementations"},"doc://com.swallow.documentation.Diagnostics/documentation/Diagnostics/CodingPathElement":{"url":"\/documentation\/diagnostics\/codingpathelement","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"CodingPathElement","kind":"identifier"}],"abstract":[],"navigatorTitle":[{"kind":"identifier","text":"CodingPathElement"}],"identifier":"doc:\/\/com.swallow.documentation.Diagnostics\/documentation\/Diagnostics\/CodingPathElement","title":"CodingPathElement","type":"topic"},"doc://com.swallow.documentation.Diagnostics/documentation/Diagnostics":{"abstract":[],"url":"\/documentation\/diagnostics","kind":"symbol","role":"collection","type":"topic","title":"Diagnostics","identifier":"doc:\/\/com.swallow.documentation.Diagnostics\/documentation\/Diagnostics"}}}