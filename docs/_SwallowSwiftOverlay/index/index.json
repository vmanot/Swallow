{"includedArchiveIdentifiers":["com.swallow.documentation._SwallowSwiftOverlay"],"interfaceLanguages":{"swift":[{"children":[{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/_swallowswiftoverlay\/binaryintegersquarerootcomputationerror\/noperfectsquare","title":"case noPerfectSquare","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/_swallowswiftoverlay\/binaryintegersquarerootcomputationerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/_swallowswiftoverlay\/binaryintegersquarerootcomputationerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/_swallowswiftoverlay\/binaryintegersquarerootcomputationerror\/localizeddescription","title":"var localizedDescription: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/_swallowswiftoverlay\/binaryintegersquarerootcomputationerror\/throw()","title":"func `throw`() throws -> Never","type":"method"}],"path":"\/documentation\/_swallowswiftoverlay\/binaryintegersquarerootcomputationerror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/_swallowswiftoverlay\/binaryintegersquarerootcomputationerror\/localizeddescription","title":"var localizedDescription: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/_swallowswiftoverlay\/binaryintegersquarerootcomputationerror\/throw()","title":"func `throw`() throws -> Never","type":"method"}],"path":"\/documentation\/_swallowswiftoverlay\/binaryintegersquarerootcomputationerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/_swallowswiftoverlay\/binaryintegersquarerootcomputationerror","title":"BinaryIntegerSquareRootComputationError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/_swallowswiftoverlay\/sequencefirstandonlyerror\/foundanother(_:)","title":"case foundAnother(S.Element)","type":"case"},{"path":"\/documentation\/_swallowswiftoverlay\/sequencefirstandonlyerror\/noelementfound","title":"case noElementFound","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/_swallowswiftoverlay\/sequencefirstandonlyerror\/localizeddescription","title":"var localizedDescription: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/_swallowswiftoverlay\/sequencefirstandonlyerror\/throw()","title":"func `throw`() throws -> Never","type":"method"}],"path":"\/documentation\/_swallowswiftoverlay\/sequencefirstandonlyerror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/_swallowswiftoverlay\/sequencefirstandonlyerror\/localizeddescription","title":"var localizedDescription: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/_swallowswiftoverlay\/sequencefirstandonlyerror\/throw()","title":"func `throw`() throws -> Never","type":"method"}],"path":"\/documentation\/_swallowswiftoverlay\/sequencefirstandonlyerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/_swallowswiftoverlay\/sequencefirstandonlyerror","title":"SequenceFirstAndOnlyError","type":"enum"},{"title":"Extended Modules","type":"groupMarker"},{"children":[{"title":"Extended Classes","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/_swallowswiftoverlay\/foundation\/nserror\/genericapplicationerror(description:recoverysuggestion:domainpostfix:)","title":"static func genericApplicationError(description: String, recoverySuggestion: String?, domainPostfix: String?) -> Self","type":"method"}],"path":"\/documentation\/_swallowswiftoverlay\/foundation\/nserror","title":"NSError","type":"extension"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/_swallowswiftoverlay\/foundation\/nsnumber\/downcast()","title":"func downcast() -> Any","type":"method"}],"path":"\/documentation\/_swallowswiftoverlay\/foundation\/nsnumber","title":"NSNumber","type":"extension"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/_swallowswiftoverlay\/foundation\/processinfo\/fingerprint-swift.struct\/groupidentifier-swift.struct\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/_swallowswiftoverlay\/foundation\/processinfo\/fingerprint-swift.struct\/groupidentifier-swift.struct\/init(rawvalue:)","title":"init(rawValue: gid_t)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/_swallowswiftoverlay\/foundation\/processinfo\/fingerprint-swift.struct\/groupidentifier-swift.struct\/rawvalue","title":"let rawValue: gid_t","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/_swallowswiftoverlay\/foundation\/processinfo\/fingerprint-swift.struct\/groupidentifier-swift.struct\/decode(from:)","title":"static func decode<Container>(from: inout Container) throws -> Self","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/foundation\/processinfo\/fingerprint-swift.struct\/groupidentifier-swift.struct\/decode(from:forkey:)","title":"static func decode<Container>(from: Container, forKey: Container.Key) throws -> Self","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/foundation\/processinfo\/fingerprint-swift.struct\/groupidentifier-swift.struct\/decodeifpresent(from:)-2cyla","title":"static func decodeIfPresent<Container>(from: inout Container) throws -> Self?","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/foundation\/processinfo\/fingerprint-swift.struct\/groupidentifier-swift.struct\/decodeifpresent(from:)-cfkw","title":"static func decodeIfPresent<Container>(from: Container) throws -> Self?","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/foundation\/processinfo\/fingerprint-swift.struct\/groupidentifier-swift.struct\/decodeifpresent(from:forkey:)","title":"static func decodeIfPresent<Container>(from: Container, forKey: Container.Key) throws -> Self?","type":"method"}],"path":"\/documentation\/_swallowswiftoverlay\/foundation\/processinfo\/fingerprint-swift.struct\/groupidentifier-swift.struct\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/_swallowswiftoverlay\/foundation\/processinfo\/fingerprint-swift.struct\/groupidentifier-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/_swallowswiftoverlay\/foundation\/processinfo\/fingerprint-swift.struct\/groupidentifier-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/_swallowswiftoverlay\/foundation\/processinfo\/fingerprint-swift.struct\/groupidentifier-swift.struct","title":"ProcessInfo.Fingerprint.GroupIdentifier","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/_swallowswiftoverlay\/foundation\/processinfo\/fingerprint-swift.struct\/useridentifier-swift.struct\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/_swallowswiftoverlay\/foundation\/processinfo\/fingerprint-swift.struct\/useridentifier-swift.struct\/init(rawvalue:)","title":"init(rawValue: uid_t)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/_swallowswiftoverlay\/foundation\/processinfo\/fingerprint-swift.struct\/useridentifier-swift.struct\/rawvalue","title":"let rawValue: uid_t","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/_swallowswiftoverlay\/foundation\/processinfo\/fingerprint-swift.struct\/useridentifier-swift.struct\/decode(from:)","title":"static func decode<Container>(from: inout Container) throws -> Self","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/foundation\/processinfo\/fingerprint-swift.struct\/useridentifier-swift.struct\/decode(from:forkey:)","title":"static func decode<Container>(from: Container, forKey: Container.Key) throws -> Self","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/foundation\/processinfo\/fingerprint-swift.struct\/useridentifier-swift.struct\/decodeifpresent(from:)-2goco","title":"static func decodeIfPresent<Container>(from: inout Container) throws -> Self?","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/foundation\/processinfo\/fingerprint-swift.struct\/useridentifier-swift.struct\/decodeifpresent(from:)-8t8lq","title":"static func decodeIfPresent<Container>(from: Container) throws -> Self?","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/foundation\/processinfo\/fingerprint-swift.struct\/useridentifier-swift.struct\/decodeifpresent(from:forkey:)","title":"static func decodeIfPresent<Container>(from: Container, forKey: Container.Key) throws -> Self?","type":"method"}],"path":"\/documentation\/_swallowswiftoverlay\/foundation\/processinfo\/fingerprint-swift.struct\/useridentifier-swift.struct\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/_swallowswiftoverlay\/foundation\/processinfo\/fingerprint-swift.struct\/useridentifier-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/_swallowswiftoverlay\/foundation\/processinfo\/fingerprint-swift.struct\/useridentifier-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/_swallowswiftoverlay\/foundation\/processinfo\/fingerprint-swift.struct\/useridentifier-swift.struct","title":"ProcessInfo.Fingerprint.UserIdentifier","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/_swallowswiftoverlay\/foundation\/processinfo\/fingerprint-swift.struct\/init()","title":"init()","type":"init"},{"path":"\/documentation\/_swallowswiftoverlay\/foundation\/processinfo\/fingerprint-swift.struct\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/_swallowswiftoverlay\/foundation\/processinfo\/fingerprint-swift.struct\/init(processinfo:)","title":"init(processInfo: ProcessInfo)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/_swallowswiftoverlay\/foundation\/processinfo\/fingerprint-swift.struct\/commandlinearguments","title":"let commandLineArguments: [String]","type":"property"},{"path":"\/documentation\/_swallowswiftoverlay\/foundation\/processinfo\/fingerprint-swift.struct\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/_swallowswiftoverlay\/foundation\/processinfo\/fingerprint-swift.struct\/executablepath","title":"let executablePath: String?","type":"property"},{"path":"\/documentation\/_swallowswiftoverlay\/foundation\/processinfo\/fingerprint-swift.struct\/groupidentifier-swift.property","title":"let groupIdentifier: GroupIdentifier","type":"property"},{"path":"\/documentation\/_swallowswiftoverlay\/foundation\/processinfo\/fingerprint-swift.struct\/parentprocessid","title":"let parentProcessID: Int32","type":"property"},{"path":"\/documentation\/_swallowswiftoverlay\/foundation\/processinfo\/fingerprint-swift.struct\/processid","title":"let processID: Int32","type":"property"},{"path":"\/documentation\/_swallowswiftoverlay\/foundation\/processinfo\/fingerprint-swift.struct\/processname","title":"let processName: String","type":"property"},{"path":"\/documentation\/_swallowswiftoverlay\/foundation\/processinfo\/fingerprint-swift.struct\/processstarttime","title":"let processStartTime: Date?","type":"property"},{"path":"\/documentation\/_swallowswiftoverlay\/foundation\/processinfo\/fingerprint-swift.struct\/useridentifier-swift.property","title":"let userIdentifier: UserIdentifier","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/_swallowswiftoverlay\/foundation\/processinfo\/fingerprint-swift.struct\/decode(from:)","title":"static func decode<Container>(from: inout Container) throws -> Self","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/foundation\/processinfo\/fingerprint-swift.struct\/decode(from:forkey:)","title":"static func decode<Container>(from: Container, forKey: Container.Key) throws -> Self","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/foundation\/processinfo\/fingerprint-swift.struct\/decodeifpresent(from:)-3rzhw","title":"static func decodeIfPresent<Container>(from: Container) throws -> Self?","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/foundation\/processinfo\/fingerprint-swift.struct\/decodeifpresent(from:)-99q73","title":"static func decodeIfPresent<Container>(from: inout Container) throws -> Self?","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/foundation\/processinfo\/fingerprint-swift.struct\/decodeifpresent(from:forkey:)","title":"static func decodeIfPresent<Container>(from: Container, forKey: Container.Key) throws -> Self?","type":"method"}],"path":"\/documentation\/_swallowswiftoverlay\/foundation\/processinfo\/fingerprint-swift.struct\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/_swallowswiftoverlay\/foundation\/processinfo\/fingerprint-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/_swallowswiftoverlay\/foundation\/processinfo\/fingerprint-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/_swallowswiftoverlay\/foundation\/processinfo\/fingerprint-swift.struct","title":"ProcessInfo.Fingerprint","type":"struct"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/_swallowswiftoverlay\/foundation\/processinfo\/fingerprint-swift.property","title":"var fingerprint: Fingerprint","type":"property"},{"path":"\/documentation\/_swallowswiftoverlay\/foundation\/processinfo\/starttime","title":"var startTime: Date?","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/_swallowswiftoverlay\/foundation\/processinfo\/fingerprint-swift.type.property","title":"static var fingerprint: Fingerprint","type":"property"}],"path":"\/documentation\/_swallowswiftoverlay\/foundation\/processinfo","title":"ProcessInfo","type":"extension"}],"path":"\/documentation\/_swallowswiftoverlay\/foundation","title":"Foundation","type":"extension"},{"children":[{"title":"Extended Protocols","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/bidirectionalcollection\/lastindex","title":"var lastIndex: Index?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/bidirectionalcollection\/hassuffix(_:)-1so21","title":"func hasSuffix<Suffix>(Suffix) -> Bool","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/bidirectionalcollection\/hassuffix(_:)-7fvv5","title":"func hasSuffix<Suffix>(Suffix) -> Bool","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/bidirectionalcollection\/index(ifpresentafter:)","title":"func index(ifPresentAfter: Index) -> Index?","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/bidirectionalcollection\/index(ifpresentbefore:)","title":"func index(ifPresentBefore: Index) -> Index?","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/bidirectionalcollection\/reverse(index:)","title":"func reverse(index: Index) -> Index","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/bidirectionalcollection\/reverseinplace()","title":"func reverseInPlace()","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/bidirectionalcollection\/splittinglast()","title":"func splittingLast() -> (head: SubSequence, tail: Element)?","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/bidirectionalcollection\/unfoldingbackward()","title":"func unfoldingBackward() -> UnfoldSequence<(SubSequence, Element), SubSequence>","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/bidirectionalcollection\/subscript(reverse:)-2c311","title":"subscript(reverse _: Index) -> Element","type":"subscript"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/bidirectionalcollection\/subscript(reverse:)-6dc47","title":"subscript(reverse _: Index) -> Element","type":"subscript"}],"path":"\/documentation\/_swallowswiftoverlay\/swift\/bidirectionalcollection","title":"BidirectionalCollection","type":"extension"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/binaryfloatingpoint\/isinteger","title":"var isInteger: Bool","type":"property"}],"path":"\/documentation\/_swallowswiftoverlay\/swift\/binaryfloatingpoint","title":"BinaryFloatingPoint","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/binaryinteger\/init(use_stdlib_init:)-3mqxb","title":"init<T>(use_stdlib_init: T)","type":"init"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/binaryinteger\/init(use_stdlib_init:)-4t5ja","title":"init<T>(use_stdlib_init: T)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/binaryinteger\/clamp(to:)-4k090","title":"func clamp(to: PartialRangeThrough<Self>)","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/binaryinteger\/clamp(to:)-6n5hh","title":"func clamp(to: PartialRangeFrom<Self>)","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/binaryinteger\/clamp(to:)-7usyu","title":"func clamp(to: ClosedRange<Self>)","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/binaryinteger\/clamped(to:)-102a6","title":"func clamped(to: ClosedRange<Self>) -> Self","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/binaryinteger\/clamped(to:)-2ogjj","title":"func clamped(to: PartialRangeThrough<Self>) -> Self","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/binaryinteger\/clamped(to:)-o80d","title":"func clamped(to: PartialRangeFrom<Self>) -> Self","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/binaryinteger\/flooredaverage(with:)","title":"func flooredAverage(with: Self) -> Self","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/binaryinteger\/raised(to:)","title":"func raised(to: Self) -> Self","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/binaryinteger\/squareroot()","title":"func squareRoot() throws -> Self","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/binaryinteger\/squarerootorlower()","title":"func squareRootOrLower() -> Self","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/binaryinteger\/squared()","title":"func squared() -> Self","type":"method"}],"path":"\/documentation\/_swallowswiftoverlay\/swift\/binaryinteger","title":"BinaryInteger","type":"extension"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/collection\/bounds","title":"var bounds: Range<Index>","type":"property"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/collection\/last","title":"var last: Element?","type":"property"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/collection\/lastindex","title":"var lastIndex: Index?","type":"property"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/collection\/second","title":"var second: Element?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/collection\/contains(_:)","title":"func contains(Range<Index>) -> Bool","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/collection\/contains(after:)","title":"func contains(after: Index) -> Bool","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/collection\/containsindex(_:)","title":"func containsIndex(Index) -> Bool","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/collection\/distancefromstartindex(to:)","title":"func distanceFromStartIndex(to: Index) -> Int","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/collection\/enumeratelazysubsequences(matching:)","title":"func enumerateLazySubsequences(matching: (Element) -> Bool) -> LazySequence<UnfoldSequence<(Range<Index>, SubSequence), Index>>","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/collection\/index(_:insetby:)","title":"func index(Index, insetBy: Int) -> Index","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/collection\/index(_:offsetbydistancefromstartindexfor:)","title":"func index(Index, offsetByDistanceFromStartIndexFor: Index) -> Index","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/collection\/index(atdistance:)","title":"func index(atDistance: Int) -> Index","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/collection\/index(before:)","title":"func index(before: Index) -> Index","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/collection\/indices(of:)","title":"func indices(of: Element) -> [Index]","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/collection\/lazysubsequences(matching:)","title":"func lazySubsequences(matching: (Element) -> Bool) -> LazySequence<UnfoldSequence<SubSequence, Index>>","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/collection\/range(from:)","title":"func range(from: Range<Int>) -> Range<Index>","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/collection\/index(after:)","title":"func index(after: Index) -> Index","type":"method"}],"path":"\/documentation\/_swallowswiftoverlay\/swift\/collection\/collection-implementations","title":"Collection Implementations","type":"symbol"}],"path":"\/documentation\/_swallowswiftoverlay\/swift\/collection","title":"Collection","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/customdebugstringconvertible\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/_swallowswiftoverlay\/swift\/customdebugstringconvertible\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"}],"path":"\/documentation\/_swallowswiftoverlay\/swift\/customdebugstringconvertible","title":"CustomDebugStringConvertible","type":"extension"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/decodable\/decode(from:)","title":"static func decode<Container>(from: inout Container) throws -> Self","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/decodable\/decode(from:forkey:)","title":"static func decode<Container>(from: Container, forKey: Container.Key) throws -> Self","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/decodable\/decodeifpresent(from:)-7ewef","title":"static func decodeIfPresent<Container>(from: inout Container) throws -> Self?","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/decodable\/decodeifpresent(from:)-ro0n","title":"static func decodeIfPresent<Container>(from: Container) throws -> Self?","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/decodable\/decodeifpresent(from:forkey:)","title":"static func decodeIfPresent<Container>(from: Container, forKey: Container.Key) throws -> Self?","type":"method"}],"path":"\/documentation\/_swallowswiftoverlay\/swift\/decodable","title":"Decodable","type":"extension"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/decoder\/decode(_:forkey:)","title":"func decode<T, Key>(T.Type, forKey: Key) throws -> T","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/decoder\/decode(first:)","title":"func decode<T>(first: T.Type) throws -> T","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/decoder\/decodeifpresent(_:forkey:)","title":"func decodeIfPresent<T, Key>(T.Type, forKey: Key) throws -> T?","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/decoder\/decodeifpresent(single:)","title":"func decodeIfPresent<T>(single: T.Type) throws -> T?","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/decoder\/decodekeyednil()","title":"func decodeKeyedNil() throws -> Bool","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/decoder\/decodenil()","title":"func decodeNil() throws -> Bool","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/decoder\/decodesinglevalue(_:)","title":"func decodeSingleValue<T>(T.Type) throws -> T","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/decoder\/decodesinglevaluenil()","title":"func decodeSingleValueNil() throws -> Bool","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/decoder\/decodeunkeyednil()","title":"func decodeUnkeyedNil() throws -> Bool","type":"method"}],"path":"\/documentation\/_swallowswiftoverlay\/swift\/decoder","title":"Decoder","type":"extension"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/error\/throw()","title":"func `throw`() throws -> Never","type":"method"}],"path":"\/documentation\/_swallowswiftoverlay\/swift\/error","title":"Error","type":"extension"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/floatingpoint\/clamp(to:)-5np3s","title":"func clamp(to: ClosedRange<Self>)","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/floatingpoint\/clamp(to:)-6b302","title":"func clamp(to: PartialRangeThrough<Self>)","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/floatingpoint\/clamp(to:)-9cdi3","title":"func clamp(to: PartialRangeFrom<Self>)","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/floatingpoint\/clamped(to:)-1d5k8","title":"func clamped(to: PartialRangeFrom<Self>) -> Self","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/floatingpoint\/clamped(to:)-47lbk","title":"func clamped(to: PartialRangeThrough<Self>) -> Self","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/floatingpoint\/clamped(to:)-5dzho","title":"func clamped(to: ClosedRange<Self>) -> Self","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/floatingpoint\/formatted(todecimalplaces:)","title":"func formatted(toDecimalPlaces: Int) -> String","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/floatingpoint\/square()","title":"func square() -> Self","type":"method"}],"path":"\/documentation\/_swallowswiftoverlay\/swift\/floatingpoint","title":"FloatingPoint","type":"extension"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/optionset\/with(rawvalue:)","title":"static func with(rawValue: RawValue) -> Self","type":"method"}],"path":"\/documentation\/_swallowswiftoverlay\/swift\/optionset","title":"OptionSet","type":"extension"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/sequence\/first","title":"var first: Element?","type":"property"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/sequence\/isempty","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/sequence\/maximum","title":"var maximum: Element?","type":"property"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/sequence\/minimum","title":"var minimum: Element?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/sequence\/allelementsareequal()","title":"func allElementsAreEqual() -> Bool","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/sequence\/allelementsareequal(to:)","title":"func allElementsAreEqual(to: Element) -> Bool","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/sequence\/allsatisfy(_:)","title":"func allSatisfy(KeyPath<Element, Bool>) -> Bool","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/sequence\/anysatisfies(_:)","title":"func anySatisfies(KeyPath<Element, Bool>) -> Bool","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/sequence\/asynccompactmap(_:)","title":"func asyncCompactMap<T>((Element) async throws -> T?) async rethrows -> [T]","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/sequence\/asyncflatmap(_:)","title":"func asyncFlatMap<T>((Element) async throws -> T) async rethrows -> [T.Element]","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/sequence\/asyncforeach(_:)","title":"func asyncForEach((Element) async throws -> Void) async rethrows","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/sequence\/asyncmap(_:)","title":"func asyncMap<T>((Element) async throws -> T) async rethrows -> [T]","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/sequence\/between(count:and:)","title":"func between(count: Int, and: Int) -> PrefixSequence<DropFirstSequence<Self>>","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/sequence\/concatenateandreduce(_:_:)","title":"func concatenateAndReduce<T>((Element, Element) throws -> T, (T, Element) throws -> T) rethrows -> T?","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/sequence\/concurrentflatmap(priority:_:)","title":"func concurrentFlatMap<T>(priority: TaskPriority?, (Element) async throws -> T) async rethrows -> [T.Element]","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/sequence\/concurrentforeach(_:)-2vqa0","title":"func concurrentForEach((Element) async throws -> Void) async throws","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/sequence\/concurrentforeach(_:)-64tms","title":"func concurrentForEach((Element) async -> Void) async","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/sequence\/concurrentmap(priority:_:)","title":"func concurrentMap<T>(priority: TaskPriority?, (Element) async throws -> T) async rethrows -> [T]","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/sequence\/distinct()-7nhql","title":"func distinct() -> AnySequence<Element>","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/sequence\/distinct()-7znzj","title":"func distinct() -> [Element]","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/sequence\/distinct(by:)-5t1v2","title":"func distinct<T>(by: (Element) -> T) -> AnySequence<Element>","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/sequence\/distinct(by:)-69jnl","title":"func distinct<T>(by: KeyPath<Element, T>) -> AnySequence<Element>","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/sequence\/duplicates(groupedby:)","title":"func duplicates<T>(groupedBy: KeyPath<Element, T>) -> [T : [Element]]","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/sequence\/element(after:)","title":"func element(after: ((Element) throws -> Bool)) rethrows -> Element?","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/sequence\/element(before:)","title":"func element(before: ((Element) throws -> Bool)) rethrows -> Element?","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/sequence\/elements(between:and:)","title":"func elements(between: ((Element) throws -> Bool), and: ((Element) throws -> Bool)) rethrows -> [Element]","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/sequence\/erasetoanysequence()","title":"func eraseToAnySequence() -> AnySequence<Element>","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/sequence\/find(_:)","title":"func find<T>(((_ take: ((T) -> Void), _ element: Element) throws -> Void)) rethrows -> T?","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/sequence\/find(_:mutate:)-67378","title":"func find<Result>((Element) throws -> Bool, mutate: (inout Element) throws -> Result) rethrows -> Result?","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/sequence\/find(_:mutate:)-fkwy","title":"func find<Result>((Element) throws -> Bool, mutate: (inout Element?) throws -> Result) rethrows -> Result?","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/sequence\/first(byunwrapping:)-3egmc","title":"func first<T>(byUnwrapping: (Element) async throws -> T?) async rethrows -> T?","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/sequence\/first(byunwrapping:)-yco2","title":"func first<T>(byUnwrapping: (Element) throws -> T?) rethrows -> T?","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/sequence\/first(oftype:)","title":"func first<T>(ofType: T.Type) -> T?","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/sequence\/firstandonly(byunwrapping:)-41deq","title":"func firstAndOnly<T>(byUnwrapping: (Element) async throws -> T?) async throws -> T?","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/sequence\/firstandonly(byunwrapping:)-9ehgb","title":"func firstAndOnly<T>(byUnwrapping: (Element) throws -> T?) throws -> T?","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/sequence\/firstandonly(oftype:)","title":"func firstAndOnly<T>(ofType: T.Type) throws -> T?","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/sequence\/firstandonly(where:)-49ufd","title":"func firstAndOnly(where: (Element) async throws -> Bool) async throws -> Element?","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/sequence\/firstandonly(where:)-5vgx0","title":"func firstAndOnly(where: (Element) throws -> Bool) throws -> Element?","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/sequence\/hasprefix(_:)-2gwin","title":"func hasPrefix(Element) -> Bool","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/sequence\/hasprefix(_:)-89w7s","title":"func hasPrefix(some Sequence<Element>) -> Bool","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/sequence\/lexicographicallyprecedes(_:orderingshortersequencesafter:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, orderingShorterSequencesAfter: ()) -> Bool","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/sequence\/longestconsecutivesequence(where:)","title":"func longestConsecutiveSequence(where: (Element, Element) -> Bool) -> [Element]","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/sequence\/longestconsecutivesequences(by:relativeto:)-4uzo1","title":"func longestConsecutiveSequences<T>(by: KeyPath<Element, T>, relativeTo: some Sequence<Element>) -> [[Element]]","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/sequence\/longestconsecutivesequences(by:relativeto:)-87vfp","title":"func longestConsecutiveSequences<T>(by: KeyPath<Element, T>, relativeTo: some Sequence<T>) -> [[Element]]","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/sequence\/longestconsecutivesequences(where:)","title":"func longestConsecutiveSequences(where: (Element, Element) -> Bool) -> [[Element]]","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/sequence\/max(by:)","title":"func max<Value>(by: (Element) -> Value) -> Element?","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/sequence\/min(by:)","title":"func min<Value>(by: (Element) -> Value) -> Element?","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/sequence\/minormax(_:)","title":"func minOrMax(_SequenceMinimumOrMaximum) -> Element?","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/sequence\/minormax(_:by:)-4mqlx","title":"func minOrMax<Value>(_SequenceMinimumOrMaximum, by: (Element) -> Value) -> Element?","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/sequence\/minormax(_:by:)-5ldsk","title":"func minOrMax<Value>(_SequenceMinimumOrMaximum, by: KeyPath<Element, Value>) -> Element?","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/sequence\/reduce(_:)-2pp85","title":"func reduce<T>(((T) throws -> ((Element) -> T))) rethrows -> T","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/sequence\/reduce(_:)-3iyb0","title":"func reduce(((Element, Element) throws -> Element)) rethrows -> Element?","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/sequence\/reduce(_:)-9k0zl","title":"func reduce<T>(((T, Element) throws -> T)) rethrows -> T","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/sequence\/reduce(_:_:)","title":"func reduce<T>(T, ((T) throws -> ((Element) -> T))) rethrows -> T","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/sequence\/reduce(_:combine:)","title":"func reduce<T>((Element) -> T, combine: ((T, Element) throws -> T)) rethrows -> T?","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/sequence\/removefirst(byunwrapping:)","title":"func removeFirst<T>(byUnwrapping: (Element) throws -> T?) rethrows -> T?","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/sequence\/sorted(by:)-3snxt","title":"func sorted<T>(by: (Element) throws -> T) rethrows -> [Element]","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/sequence\/sorted(by:)-4rczv","title":"func sorted<T>(by: KeyPath<Element, T>) -> [Element]","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/sequence\/sorted(by:order:)-2r4dd","title":"func sorted<T>(by: KeyPath<Element, T>, order: _SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/sequence\/sorted(by:order:)-8jdmt","title":"func sorted<T>(by: (Element) throws -> T, order: _SequenceSortOrder) rethrows -> [Element]","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/sequence\/sorted(order:)","title":"func sorted(order: _SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/sequence\/splitbefore(separator:)","title":"func splitBefore(separator: (Iterator.Element) throws -> Bool) rethrows -> [AnySequence<Iterator.Element>]","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/sequence\/subsequences(groupedby:)","title":"func subsequences<T>(groupedBy: (Element) throws -> T) rethrows -> [Array<Element>]","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/sequence\/sum()","title":"func sum() -> Element","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/sequence\/zip(_:)","title":"func zip<S>(S) -> Zip2Sequence<Self, S>","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/sequence\/subscript(between:)","title":"subscript(between _: Range<Int>) -> PrefixSequence<DropFirstSequence<Self>>","type":"subscript"}],"path":"\/documentation\/_swallowswiftoverlay\/swift\/sequence","title":"Sequence","type":"extension"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/strideable\/advance()","title":"func advance()","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/strideable\/advance(by:)","title":"func advance(by: Stride)","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/strideable\/predecessor()","title":"func predecessor() -> Self","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/strideable\/successor()","title":"func successor() -> Self","type":"method"}],"path":"\/documentation\/_swallowswiftoverlay\/swift\/strideable","title":"Strideable","type":"extension"},{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/character\/init(utf16codeunit:)","title":"init?(utf16CodeUnit: UTF16.CodeUnit)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/character\/backtick","title":"static let backtick: `Self`","type":"property"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/character\/newline","title":"static var newline: `Self`","type":"property"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/character\/quotationmark","title":"static let quotationMark: `Self`","type":"property"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/character\/zerowidthspace","title":"static let zeroWidthSpace: Character","type":"property"}],"path":"\/documentation\/_swallowswiftoverlay\/swift\/character","title":"Character","type":"extension"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/collectiondifference\/map(_:)","title":"func map<T>((ChangeElement) throws -> T) rethrows -> CollectionDifference<T>","type":"method"},{"title":"Extended Enumerations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/collectiondifference\/change\/init(_:)-3c3yg","title":"init(CollectionDifference<ChangeElement>._Removal)","type":"init"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/collectiondifference\/change\/init(_:)-8vhxg","title":"init(CollectionDifference<ChangeElement>._Insertion)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/collectiondifference\/change\/insertion","title":"var insertion: CollectionDifference<ChangeElement>._Insertion?","type":"property"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/collectiondifference\/change\/removal","title":"var removal: CollectionDifference<ChangeElement>._Removal?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/collectiondifference\/change\/map(_:)","title":"func map<T>((ChangeElement) throws -> T) rethrows -> CollectionDifference<T>.Change","type":"method"}],"path":"\/documentation\/_swallowswiftoverlay\/swift\/collectiondifference\/change","title":"CollectionDifference.Change","type":"extension"}],"path":"\/documentation\/_swallowswiftoverlay\/swift\/collectiondifference","title":"CollectionDifference","type":"extension"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/dictionary\/compactmapkeys(_:)","title":"func compactMapKeys<T>((Key) throws -> T?) rethrows -> [T : Value]","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/dictionary\/mapdictionary(key:value:)","title":"func mapDictionary<T, U>(key: (Key) throws -> T, value: (Value) throws -> U) rethrows -> [T : U]","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/dictionary\/mapkeys(_:)","title":"func mapKeys<T>((Key) throws -> T) rethrows -> [T : Value]","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/dictionary\/mapkeysandvalues(_:_:)","title":"func mapKeysAndValues<T, U>((Key) throws -> T, (Value) throws -> U) rethrows -> [T : U]","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/dictionary\/merge(uniquekeyswithvalues:)","title":"func merge<S>(uniqueKeysWithValues: S)","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/dictionary\/merging(uniquekeyswithvalues:)-1073g","title":"func merging<S>(uniqueKeysWithValues: S) -> Dictionary<Key, Value>","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/dictionary\/merging(uniquekeyswithvalues:)-8zlcl","title":"func merging<S>(uniqueKeysWithValues: S) -> Dictionary<Key, Value>","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/dictionary\/reduce(_:)","title":"func reduce<T, U>((inout [T : U], (key: Key, value: Value)) throws -> ()) rethrows -> [T : U]","type":"method"}],"path":"\/documentation\/_swallowswiftoverlay\/swift\/dictionary","title":"Dictionary","type":"extension"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/range\/allnonemptysubranges()","title":"func allNonEmptySubRanges() -> [CountableRange<Index>]","type":"method"}],"path":"\/documentation\/_swallowswiftoverlay\/swift\/range","title":"Range","type":"extension"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/set\/intersects(with:)","title":"func intersects(with: Set) -> Bool","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/set\/map(_:)","title":"func map<T>((Element) throws -> T) rethrows -> Set<T>","type":"method"}],"path":"\/documentation\/_swallowswiftoverlay\/swift\/set","title":"Set","type":"extension"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/string\/numberoflines","title":"var numberOfLines: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/string\/addingprefixifmissing(_:)","title":"func addingPrefixIfMissing(String) -> String","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/string\/addingsuffixifmissing(_:)","title":"func addingSuffixIfMissing(String) -> String","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/string\/dropfirst()","title":"func dropFirst() -> Substring","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/string\/droplast()","title":"func dropLast() -> Substring","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/string\/dropprefixifpresent(_:)-21a6s","title":"func dropPrefixIfPresent<String>(String) -> Substring","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/string\/dropprefixifpresent(_:)-2r93h","title":"func dropPrefixIfPresent<String>(String) -> String","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/string\/droppresentprefix(_:)-5mxeb","title":"func dropPresentPrefix<String>(String) -> `Self`?","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/string\/droppresentprefix(_:)-8kieu","title":"func dropPresentPrefix<String>(String) -> Substring?","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/string\/dropsuffixifpresent(_:)-2te0x","title":"func dropSuffixIfPresent<String>(String) -> Substring","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/string\/dropsuffixifpresent(_:)-5936a","title":"func dropSuffixIfPresent<String>(String) -> String","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/string\/enumeratedlines()","title":"func enumeratedLines() -> [String]","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/string\/lines(omittingempty:)","title":"func lines(omittingEmpty: Bool) -> [Substring]","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/string\/substrings(separatedby:)","title":"func substrings(separatedBy: Character) -> [Substring]","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/string\/subscript(firstsubstring:)","title":"subscript(firstSubstring _: String) -> Substring?","type":"subscript"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/string\/backtick","title":"static var backtick: `Self`","type":"property"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/string\/newline","title":"static var newline: `Self`","type":"property"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/string\/quotationmark","title":"static var quotationMark: `Self`","type":"property"},{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/string\/index\/init(utf8offset:in:)","title":"init(utf8Offset: Int, in: String)","type":"init"}],"path":"\/documentation\/_swallowswiftoverlay\/swift\/string\/index","title":"String.Index","type":"extension"}],"path":"\/documentation\/_swallowswiftoverlay\/swift\/string","title":"String","type":"extension"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/substring\/dropfirst()","title":"func dropFirst() -> Substring","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/substring\/droplast()","title":"func dropLast() -> Substring","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/substring\/dropprefixifpresent(_:)","title":"func dropPrefixIfPresent<String>(String) -> Substring","type":"method"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/substring\/dropsuffixifpresent(_:)","title":"func dropSuffixIfPresent<String>(String) -> Substring","type":"method"}],"path":"\/documentation\/_swallowswiftoverlay\/swift\/substring","title":"Substring","type":"extension"},{"title":"Extended Enumerations","type":"groupMarker"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/commandline\/isrunningfromcommandline","title":"static var isRunningFromCommandLine: Bool","type":"property"}],"path":"\/documentation\/_swallowswiftoverlay\/swift\/commandline","title":"CommandLine","type":"extension"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/decodingerror\/context-swift.property","title":"var context: DecodingError.Context?","type":"property"},{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/decodingerror\/context-swift.struct.extension\/init(codingpath:)","title":"init(codingPath: [CodingKey])","type":"init"}],"path":"\/documentation\/_swallowswiftoverlay\/swift\/decodingerror\/context-swift.struct.extension","title":"DecodingError.Context","type":"extension"}],"path":"\/documentation\/_swallowswiftoverlay\/swift\/decodingerror","title":"DecodingError","type":"extension"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/encodingerror\/context-swift.property","title":"var context: EncodingError.Context?","type":"property"},{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/encodingerror\/context-swift.struct.extension\/init(codingpath:)","title":"init(codingPath: [CodingKey])","type":"init"}],"path":"\/documentation\/_swallowswiftoverlay\/swift\/encodingerror\/context-swift.struct.extension","title":"EncodingError.Context","type":"extension"}],"path":"\/documentation\/_swallowswiftoverlay\/swift\/encodingerror","title":"EncodingError","type":"extension"},{"title":"Extended Types","type":"groupMarker"},{"children":[{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/_swallowswiftoverlay\/swift\/collectionofone\/iterator\/init(element:)","title":"init(element: Element)","type":"init"}],"path":"\/documentation\/_swallowswiftoverlay\/swift\/collectionofone\/iterator","title":"CollectionOfOne.Iterator","type":"extension"}],"path":"\/documentation\/_swallowswiftoverlay\/swift\/collectionofone","title":"CollectionOfOne","type":"extension"}],"path":"\/documentation\/_swallowswiftoverlay\/swift","title":"Swift","type":"extension"}],"path":"\/documentation\/_swallowswiftoverlay","title":"_SwallowSwiftOverlay","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":2}}