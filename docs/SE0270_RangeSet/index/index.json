{"includedArchiveIdentifiers":["com.swallow.documentation.SE0270_RangeSet"],"interfaceLanguages":{"swift":[{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/base","title":"var base: Base","type":"property"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/subranges","title":"var subranges: RangeSet<Base.Index>","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/last","title":"var last: Self.Element?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/difference(from:)","title":"func difference<C>(from: C) -> CollectionDifference<Self.Element>","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/difference(from:by:)","title":"func difference<C>(from: C, by: (C.Element, Self.Element) -> Bool) -> CollectionDifference<Self.Element>","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/firstrange(of:)-918t0","title":"func firstRange<C>(of: C) -> Range<Self.Index>?","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/formindex(before:)","title":"func formIndex(before: inout Self.Index)","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/index(before:)","title":"func index(before: Index) -> Index","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/joined(separator:)-891dd","title":"func joined(separator: String) -> String","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/last(where:)","title":"func last(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/lastindex(of:)","title":"func lastIndex(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/lastindex(where:)","title":"func lastIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/poplast()","title":"func popLast() -> Self.Element?","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/removelast()","title":"func removeLast() -> Self.Element","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/removelast(_:)","title":"func removeLast(Int)","type":"method"}],"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/bidirectionalcollection-implementations","title":"BidirectionalCollection Implementations","type":"symbol"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/index\/_(_:_:)-4zlpb","title":"static func < (Index, Index) -> Bool","type":"op"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/index\/base","title":"var base: Base.Index","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/index\/'...(_:)-1tr6z","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/index\/'...(_:)-6075d","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/index\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/index\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/index\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/index\/_(_:_:)-766ep","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/index\/_=(_:_:)-5lrdb","title":"static func <= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/index\/_=(_:_:)-uma2","title":"static func >= (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/index\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/index\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/index\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/index","title":"DiscontiguousSlice.Index","type":"struct"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/count","title":"var count: Int","type":"property"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/endindex","title":"var endIndex: Index","type":"property"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/first","title":"var first: Self.Element?","type":"property"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/indices","title":"var indices: DefaultIndices<Self>","type":"property"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/isempty","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/startindex","title":"var startIndex: Index","type":"property"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/underestimatedcount","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/contains(_:)-9npxn","title":"func contains<C>(C) -> Bool","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/distance(from:to:)","title":"func distance(from: Self.Index, to: Self.Index) -> Int","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/drop(while:)","title":"func drop(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/dropfirst(_:)","title":"func dropFirst(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/droplast(_:)","title":"func dropLast(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/firstindex(of:)","title":"func firstIndex(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/firstindex(where:)","title":"func firstIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/firstrange(of:)-22aq5","title":"func firstRange<C>(of: C) -> Range<Self.Index>?","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/formindex(_:offsetby:)","title":"func formIndex(inout Self.Index, offsetBy: Int)","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/formindex(_:offsetby:limitedby:)","title":"func formIndex(inout Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Bool","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/formindex(after:)","title":"func formIndex(after: inout Self.Index)","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/index(_:offsetby:)","title":"func index(Self.Index, offsetBy: Int) -> Self.Index","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/index(_:offsetby:limitedby:)","title":"func index(Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Self.Index?","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/index(after:)","title":"func index(after: Index) -> Index","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/index(of:)","title":"func index(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/indices(of:)","title":"func indices(of: Self.Element) -> RangeSet<Self.Index>","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/indices(where:)","title":"func indices(where: (Self.Element) throws -> Bool) rethrows -> RangeSet<Self.Index>","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/makeiterator()","title":"func makeIterator() -> IndexingIterator<Self>","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/map(_:)-5o7bf","title":"func map<T, E>((Self.Element) throws(E) -> T) throws(E) -> [T]","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/popfirst()","title":"func popFirst() -> Self.Element?","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/prefix(_:)","title":"func prefix(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/prefix(through:)","title":"func prefix(through: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/prefix(upto:)","title":"func prefix(upTo: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/prefix(while:)","title":"func prefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/randomelement()","title":"func randomElement() -> Self.Element?","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/randomelement(using:)","title":"func randomElement<T>(using: inout T) -> Self.Element?","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/ranges(of:)","title":"func ranges<C>(of: C) -> [Range<Self.Index>]","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/removefirst()","title":"func removeFirst() -> Self.Element","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/removefirst(_:)","title":"func removeFirst(Int)","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/removingsubranges(_:)","title":"func removingSubranges(RangeSet<Index>) -> DiscontiguousSlice<Self>","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/split(separator:maxsplits:omittingemptysubsequences:)-2l7w2","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/split(separator:maxsplits:omittingemptysubsequences:)-35jd1","title":"func split<C>(separator: C, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/subranges(of:)","title":"func subranges(of: Element) -> RangeSet<Index>","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/subranges(where:)","title":"func subranges(where: (Element) throws -> Bool) rethrows -> RangeSet<Index>","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/suffix(_:)","title":"func suffix(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/suffix(from:)","title":"func suffix(from: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/trimprefix(_:)","title":"func trimPrefix<Prefix>(Prefix)","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/trimprefix(while:)","title":"func trimPrefix(while: (Self.Element) throws -> Bool) throws","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/trimmingprefix(_:)","title":"func trimmingPrefix<Prefix>(Prefix) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/trimmingprefix(while:)","title":"func trimmingPrefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/subscript(_:)-1mnpm","title":"subscript<R>(R) -> Self.SubSequence","type":"subscript"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/subscript(_:)-3s9de","title":"subscript(RangeSet<Index>) -> DiscontiguousSlice<Self>","type":"subscript"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/subscript(_:)-5jrdk","title":"subscript(Index) -> Base.Element","type":"subscript"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/subscript(_:)-625jk","title":"subscript(Range<Index>) -> DiscontiguousSlice<Base>","type":"subscript"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/subscript(_:)-734py","title":"subscript(RangeSet<Self.Index>) -> DiscontiguousSlice<Self>","type":"subscript"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/subscript(_:)-7xhzn","title":"subscript((UnboundedRange_) -> ()) -> Self.SubSequence","type":"subscript"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/subsequence","title":"DiscontiguousSlice.SubSequence","type":"typealias"}],"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/collection-implementations","title":"Collection Implementations","type":"symbol"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/index\/_(_:_:)-4zlpb","title":"static func < (Index, Index) -> Bool","type":"op"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/index\/base","title":"var base: Base.Index","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/index\/'...(_:)-1tr6z","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/index\/'...(_:)-6075d","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/index\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/index\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/index\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/index\/_(_:_:)-766ep","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/index\/_=(_:_:)-5lrdb","title":"static func <= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/index\/_=(_:_:)-uma2","title":"static func >= (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/index\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/index\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/index\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/index","title":"DiscontiguousSlice.Index","type":"struct"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/count","title":"var count: Int","type":"property"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/endindex","title":"var endIndex: Index","type":"property"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/first","title":"var first: Self.Element?","type":"property"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/indices","title":"var indices: DefaultIndices<Self>","type":"property"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/isempty","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/startindex","title":"var startIndex: Index","type":"property"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/underestimatedcount","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/contains(_:)-9npxn","title":"func contains<C>(C) -> Bool","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/distance(from:to:)","title":"func distance(from: Self.Index, to: Self.Index) -> Int","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/drop(while:)","title":"func drop(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/dropfirst(_:)","title":"func dropFirst(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/droplast(_:)","title":"func dropLast(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/firstindex(of:)","title":"func firstIndex(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/firstindex(where:)","title":"func firstIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/firstrange(of:)-22aq5","title":"func firstRange<C>(of: C) -> Range<Self.Index>?","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/formindex(_:offsetby:)","title":"func formIndex(inout Self.Index, offsetBy: Int)","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/formindex(_:offsetby:limitedby:)","title":"func formIndex(inout Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Bool","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/formindex(after:)","title":"func formIndex(after: inout Self.Index)","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/index(_:offsetby:)","title":"func index(Self.Index, offsetBy: Int) -> Self.Index","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/index(_:offsetby:limitedby:)","title":"func index(Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Self.Index?","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/index(after:)","title":"func index(after: Index) -> Index","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/index(of:)","title":"func index(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/indices(of:)","title":"func indices(of: Self.Element) -> RangeSet<Self.Index>","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/indices(where:)","title":"func indices(where: (Self.Element) throws -> Bool) rethrows -> RangeSet<Self.Index>","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/makeiterator()","title":"func makeIterator() -> IndexingIterator<Self>","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/map(_:)-5o7bf","title":"func map<T, E>((Self.Element) throws(E) -> T) throws(E) -> [T]","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/popfirst()","title":"func popFirst() -> Self.Element?","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/prefix(_:)","title":"func prefix(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/prefix(through:)","title":"func prefix(through: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/prefix(upto:)","title":"func prefix(upTo: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/prefix(while:)","title":"func prefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/randomelement()","title":"func randomElement() -> Self.Element?","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/randomelement(using:)","title":"func randomElement<T>(using: inout T) -> Self.Element?","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/ranges(of:)","title":"func ranges<C>(of: C) -> [Range<Self.Index>]","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/removefirst()","title":"func removeFirst() -> Self.Element","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/removefirst(_:)","title":"func removeFirst(Int)","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/removingsubranges(_:)","title":"func removingSubranges(RangeSet<Index>) -> DiscontiguousSlice<Self>","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/split(separator:maxsplits:omittingemptysubsequences:)-2l7w2","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/split(separator:maxsplits:omittingemptysubsequences:)-35jd1","title":"func split<C>(separator: C, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/subranges(of:)","title":"func subranges(of: Element) -> RangeSet<Index>","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/subranges(where:)","title":"func subranges(where: (Element) throws -> Bool) rethrows -> RangeSet<Index>","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/suffix(_:)","title":"func suffix(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/suffix(from:)","title":"func suffix(from: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/trimprefix(_:)","title":"func trimPrefix<Prefix>(Prefix)","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/trimprefix(while:)","title":"func trimPrefix(while: (Self.Element) throws -> Bool) throws","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/trimmingprefix(_:)","title":"func trimmingPrefix<Prefix>(Prefix) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/trimmingprefix(while:)","title":"func trimmingPrefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/subscript(_:)-1mnpm","title":"subscript<R>(R) -> Self.SubSequence","type":"subscript"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/subscript(_:)-3s9de","title":"subscript(RangeSet<Index>) -> DiscontiguousSlice<Self>","type":"subscript"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/subscript(_:)-5jrdk","title":"subscript(Index) -> Base.Element","type":"subscript"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/subscript(_:)-625jk","title":"subscript(Range<Index>) -> DiscontiguousSlice<Base>","type":"subscript"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/subscript(_:)-734py","title":"subscript(RangeSet<Self.Index>) -> DiscontiguousSlice<Self>","type":"subscript"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/subscript(_:)-7xhzn","title":"subscript((UnboundedRange_) -> ()) -> Self.SubSequence","type":"subscript"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/subsequence","title":"DiscontiguousSlice.SubSequence","type":"typealias"}],"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/collection-implementations","title":"Collection Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/movesubranges(_:to:)-5dcm0","title":"func moveSubranges(RangeSet<Index>, to: Index) -> Range<Index>","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/movesubranges(_:to:)-7cfg1","title":"func moveSubranges(RangeSet<Self.Index>, to: Self.Index) -> Range<Self.Index>","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/partition(by:)-7ibqh","title":"func partition(by: (Self.Element) throws -> Bool) rethrows -> Self.Index","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/partition(by:)-ql6e","title":"func partition(by: (Self.Element) throws -> Bool) rethrows -> Self.Index","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/reverse()","title":"func reverse()","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/swapat(_:_:)","title":"func swapAt(Self.Index, Self.Index)","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/withcontiguousmutablestorageifavailable(_:)","title":"func withContiguousMutableStorageIfAvailable<R>((inout UnsafeMutableBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/subscript(_:)-3uh7u","title":"subscript(Range<Self.Index>) -> Self.SubSequence","type":"subscript"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/subscript(_:)-5dpfp","title":"subscript(RangeSet<Index>) -> DiscontiguousSlice<Self>","type":"subscript"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/subscript(_:)-76wct","title":"subscript((UnboundedRange_) -> ()) -> Self.SubSequence","type":"subscript"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/subscript(_:)-80hak","title":"subscript(Index) -> Base.Element","type":"subscript"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/subscript(_:)-9ftfr","title":"subscript(Range<Index>) -> DiscontiguousSlice<Base>","type":"subscript"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/subscript(_:)-9fv08","title":"subscript(Range<Self.Index>) -> Slice<Self>","type":"subscript"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/subscript(_:)-nmga","title":"subscript<R>(R) -> Self.SubSequence","type":"subscript"}],"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/mutablecollection-implementations","title":"MutableCollection Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/movesubranges(_:to:)-5dcm0","title":"func moveSubranges(RangeSet<Index>, to: Index) -> Range<Index>","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/movesubranges(_:to:)-7cfg1","title":"func moveSubranges(RangeSet<Self.Index>, to: Self.Index) -> Range<Self.Index>","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/partition(by:)-7ibqh","title":"func partition(by: (Self.Element) throws -> Bool) rethrows -> Self.Index","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/partition(by:)-ql6e","title":"func partition(by: (Self.Element) throws -> Bool) rethrows -> Self.Index","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/reverse()","title":"func reverse()","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/swapat(_:_:)","title":"func swapAt(Self.Index, Self.Index)","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/withcontiguousmutablestorageifavailable(_:)","title":"func withContiguousMutableStorageIfAvailable<R>((inout UnsafeMutableBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/subscript(_:)-3uh7u","title":"subscript(Range<Self.Index>) -> Self.SubSequence","type":"subscript"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/subscript(_:)-5dpfp","title":"subscript(RangeSet<Index>) -> DiscontiguousSlice<Self>","type":"subscript"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/subscript(_:)-76wct","title":"subscript((UnboundedRange_) -> ()) -> Self.SubSequence","type":"subscript"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/subscript(_:)-80hak","title":"subscript(Index) -> Base.Element","type":"subscript"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/subscript(_:)-9ftfr","title":"subscript(Range<Index>) -> DiscontiguousSlice<Base>","type":"subscript"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/subscript(_:)-9fv08","title":"subscript(Range<Self.Index>) -> Slice<Self>","type":"subscript"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/subscript(_:)-nmga","title":"subscript<R>(R) -> Self.SubSequence","type":"subscript"}],"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/mutablecollection-implementations","title":"MutableCollection Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/lazy","title":"var lazy: LazySequence<Self>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/compactmap(_:)","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/contains(_:)-79vhf","title":"func contains(Self.Element) -> Bool","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/count(where:)","title":"func count<E>(where: (Self.Element) throws(E) -> Bool) throws(E) -> Int","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/elementsequal(_:)","title":"func elementsEqual<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/filter(_:)","title":"func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/flatmap(_:)-1409a","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/flatmap(_:)-3boxr","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/foreach(_:)","title":"func forEach((Self.Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/joined()","title":"func joined() -> FlattenSequence<Self>","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/joined(separator:)-5eg6b","title":"func joined<Separator>(separator: Separator) -> JoinedSequence<Self>","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/joined(separator:)-5kzho","title":"func joined(separator: String) -> String","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/lexicographicallyprecedes(_:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/map(_:)-6gk79","title":"func map<T, E>((Self.Element) throws(E) -> T) throws(E) -> [T]","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/max()","title":"func max() -> Self.Element?","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/min()","title":"func min() -> Self.Element?","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/reversed()","title":"func reversed() -> [Self.Element]","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/sorted()","title":"func sorted() -> [Self.Element]","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/sorted(by:)","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/split(separator:maxsplits:omittingemptysubsequences:)-5vkdn","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [ArraySlice<Self.Element>]","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/starts(with:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/withcontiguousstorageifavailable(_:)","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"}],"path":"\/documentation\/se0270_rangeset\/discontiguousslice\/sequence-implementations","title":"Sequence Implementations","type":"symbol"}],"path":"\/documentation\/se0270_rangeset\/discontiguousslice","title":"DiscontiguousSlice","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/ranges-swift.struct\/endindex","title":"var endIndex: Int","type":"property"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/ranges-swift.struct\/startindex","title":"var startIndex: Int","type":"property"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/ranges-swift.struct\/subscript(_:)","title":"subscript(Int) -> Range<Bound>","type":"subscript"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/ranges-swift.struct\/last","title":"var last: Self.Element?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/ranges-swift.struct\/difference(from:)","title":"func difference<C>(from: C) -> CollectionDifference<Self.Element>","type":"method"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/ranges-swift.struct\/difference(from:by:)","title":"func difference<C>(from: C, by: (C.Element, Self.Element) -> Bool) -> CollectionDifference<Self.Element>","type":"method"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/ranges-swift.struct\/droplast(_:)","title":"func dropLast(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/ranges-swift.struct\/formindex(before:)","title":"func formIndex(before: inout Self.Index)","type":"method"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/ranges-swift.struct\/last(where:)","title":"func last(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/ranges-swift.struct\/lastindex(of:)","title":"func lastIndex(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/ranges-swift.struct\/lastindex(where:)","title":"func lastIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","type":"method"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/ranges-swift.struct\/reversed()","title":"func reversed() -> ReversedCollection<Self>","type":"method"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/ranges-swift.struct\/suffix(_:)","title":"func suffix(Int) -> Self.SubSequence","type":"method"}],"path":"\/documentation\/se0270_rangeset\/rangeset\/ranges-swift.struct\/bidirectionalcollection-implementations","title":"BidirectionalCollection Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/ranges-swift.struct\/count","title":"var count: Int","type":"property"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/ranges-swift.struct\/first","title":"var first: Self.Element?","type":"property"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/ranges-swift.struct\/isempty","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/ranges-swift.struct\/underestimatedcount","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/ranges-swift.struct\/drop(while:)","title":"func drop(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/ranges-swift.struct\/dropfirst(_:)","title":"func dropFirst(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/ranges-swift.struct\/firstindex(of:)","title":"func firstIndex(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/ranges-swift.struct\/firstindex(where:)","title":"func firstIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","type":"method"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/ranges-swift.struct\/firstrange(of:)","title":"func firstRange<C>(of: C) -> Range<Self.Index>?","type":"method"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/ranges-swift.struct\/formindex(_:offsetby:)","title":"func formIndex(inout Self.Index, offsetBy: Int)","type":"method"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/ranges-swift.struct\/formindex(_:offsetby:limitedby:)","title":"func formIndex(inout Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Bool","type":"method"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/ranges-swift.struct\/formindex(after:)","title":"func formIndex(after: inout Self.Index)","type":"method"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/ranges-swift.struct\/index(of:)","title":"func index(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/ranges-swift.struct\/indices(of:)","title":"func indices(of: Self.Element) -> RangeSet<Self.Index>","type":"method"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/ranges-swift.struct\/indices(where:)","title":"func indices(where: (Self.Element) throws -> Bool) rethrows -> RangeSet<Self.Index>","type":"method"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/ranges-swift.struct\/makeiterator()","title":"func makeIterator() -> IndexingIterator<Self>","type":"method"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/ranges-swift.struct\/map(_:)-usd6","title":"func map<T, E>((Self.Element) throws(E) -> T) throws(E) -> [T]","type":"method"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/ranges-swift.struct\/prefix(_:)","title":"func prefix(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/ranges-swift.struct\/prefix(through:)","title":"func prefix(through: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/ranges-swift.struct\/prefix(upto:)","title":"func prefix(upTo: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/ranges-swift.struct\/prefix(while:)","title":"func prefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/ranges-swift.struct\/randomelement()","title":"func randomElement() -> Self.Element?","type":"method"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/ranges-swift.struct\/randomelement(using:)","title":"func randomElement<T>(using: inout T) -> Self.Element?","type":"method"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/ranges-swift.struct\/ranges(of:)","title":"func ranges<C>(of: C) -> [Range<Self.Index>]","type":"method"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/ranges-swift.struct\/removingsubranges(_:)","title":"func removingSubranges(RangeSet<Index>) -> DiscontiguousSlice<Self>","type":"method"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/ranges-swift.struct\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/ranges-swift.struct\/split(separator:maxsplits:omittingemptysubsequences:)","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/ranges-swift.struct\/subranges(of:)","title":"func subranges(of: Element) -> RangeSet<Index>","type":"method"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/ranges-swift.struct\/subranges(where:)","title":"func subranges(where: (Element) throws -> Bool) rethrows -> RangeSet<Index>","type":"method"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/ranges-swift.struct\/suffix(from:)","title":"func suffix(from: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/ranges-swift.struct\/trimmingprefix(_:)","title":"func trimmingPrefix<Prefix>(Prefix) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/ranges-swift.struct\/trimmingprefix(while:)","title":"func trimmingPrefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"}],"path":"\/documentation\/se0270_rangeset\/rangeset\/ranges-swift.struct\/collection-implementations","title":"Collection Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/ranges-swift.struct\/count","title":"var count: Int","type":"property"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/ranges-swift.struct\/first","title":"var first: Self.Element?","type":"property"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/ranges-swift.struct\/isempty","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/ranges-swift.struct\/underestimatedcount","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/ranges-swift.struct\/drop(while:)","title":"func drop(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/ranges-swift.struct\/dropfirst(_:)","title":"func dropFirst(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/ranges-swift.struct\/firstindex(of:)","title":"func firstIndex(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/ranges-swift.struct\/firstindex(where:)","title":"func firstIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","type":"method"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/ranges-swift.struct\/firstrange(of:)","title":"func firstRange<C>(of: C) -> Range<Self.Index>?","type":"method"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/ranges-swift.struct\/formindex(_:offsetby:)","title":"func formIndex(inout Self.Index, offsetBy: Int)","type":"method"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/ranges-swift.struct\/formindex(_:offsetby:limitedby:)","title":"func formIndex(inout Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Bool","type":"method"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/ranges-swift.struct\/formindex(after:)","title":"func formIndex(after: inout Self.Index)","type":"method"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/ranges-swift.struct\/index(of:)","title":"func index(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/ranges-swift.struct\/indices(of:)","title":"func indices(of: Self.Element) -> RangeSet<Self.Index>","type":"method"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/ranges-swift.struct\/indices(where:)","title":"func indices(where: (Self.Element) throws -> Bool) rethrows -> RangeSet<Self.Index>","type":"method"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/ranges-swift.struct\/makeiterator()","title":"func makeIterator() -> IndexingIterator<Self>","type":"method"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/ranges-swift.struct\/map(_:)-usd6","title":"func map<T, E>((Self.Element) throws(E) -> T) throws(E) -> [T]","type":"method"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/ranges-swift.struct\/prefix(_:)","title":"func prefix(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/ranges-swift.struct\/prefix(through:)","title":"func prefix(through: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/ranges-swift.struct\/prefix(upto:)","title":"func prefix(upTo: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/ranges-swift.struct\/prefix(while:)","title":"func prefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/ranges-swift.struct\/randomelement()","title":"func randomElement() -> Self.Element?","type":"method"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/ranges-swift.struct\/randomelement(using:)","title":"func randomElement<T>(using: inout T) -> Self.Element?","type":"method"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/ranges-swift.struct\/ranges(of:)","title":"func ranges<C>(of: C) -> [Range<Self.Index>]","type":"method"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/ranges-swift.struct\/removingsubranges(_:)","title":"func removingSubranges(RangeSet<Index>) -> DiscontiguousSlice<Self>","type":"method"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/ranges-swift.struct\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/ranges-swift.struct\/split(separator:maxsplits:omittingemptysubsequences:)","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/ranges-swift.struct\/subranges(of:)","title":"func subranges(of: Element) -> RangeSet<Index>","type":"method"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/ranges-swift.struct\/subranges(where:)","title":"func subranges(where: (Element) throws -> Bool) rethrows -> RangeSet<Index>","type":"method"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/ranges-swift.struct\/suffix(from:)","title":"func suffix(from: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/ranges-swift.struct\/trimmingprefix(_:)","title":"func trimmingPrefix<Prefix>(Prefix) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/ranges-swift.struct\/trimmingprefix(while:)","title":"func trimmingPrefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"}],"path":"\/documentation\/se0270_rangeset\/rangeset\/ranges-swift.struct\/collection-implementations","title":"Collection Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/ranges-swift.struct\/index(_:offsetby:limitedby:)","title":"func index(Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Self.Index?","type":"method"}],"path":"\/documentation\/se0270_rangeset\/rangeset\/ranges-swift.struct\/randomaccesscollection-implementations","title":"RandomAccessCollection Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/ranges-swift.struct\/lazy","title":"var lazy: LazySequence<Self>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/ranges-swift.struct\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/ranges-swift.struct\/compactmap(_:)","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/ranges-swift.struct\/contains(_:)","title":"func contains(Self.Element) -> Bool","type":"method"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/ranges-swift.struct\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/ranges-swift.struct\/count(where:)","title":"func count<E>(where: (Self.Element) throws(E) -> Bool) throws(E) -> Int","type":"method"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/ranges-swift.struct\/elementsequal(_:)","title":"func elementsEqual<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/ranges-swift.struct\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/ranges-swift.struct\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/ranges-swift.struct\/filter(_:)","title":"func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/ranges-swift.struct\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/ranges-swift.struct\/flatmap(_:)-7z33u","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/ranges-swift.struct\/flatmap(_:)-9t5ir","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/ranges-swift.struct\/foreach(_:)","title":"func forEach((Self.Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/ranges-swift.struct\/joined()","title":"func joined() -> FlattenSequence<Self>","type":"method"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/ranges-swift.struct\/joined(separator:)","title":"func joined<Separator>(separator: Separator) -> JoinedSequence<Self>","type":"method"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/ranges-swift.struct\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/ranges-swift.struct\/map(_:)-8mz3s","title":"func map<T, E>((Self.Element) throws(E) -> T) throws(E) -> [T]","type":"method"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/ranges-swift.struct\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/ranges-swift.struct\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/ranges-swift.struct\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/ranges-swift.struct\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/ranges-swift.struct\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/ranges-swift.struct\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/ranges-swift.struct\/sorted(by:)","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/ranges-swift.struct\/starts(with:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool","type":"method"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/ranges-swift.struct\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/ranges-swift.struct\/withcontiguousstorageifavailable(_:)","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"}],"path":"\/documentation\/se0270_rangeset\/rangeset\/ranges-swift.struct\/sequence-implementations","title":"Sequence Implementations","type":"symbol"}],"path":"\/documentation\/se0270_rangeset\/rangeset\/ranges-swift.struct","title":"RangeSet.Ranges","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/init()","title":"init()","type":"init"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/init(_:)-2kia3","title":"init(Range<Bound>)","type":"init"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/init(_:)-70emd","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/init(_:within:)","title":"init<S, C>(S, within: C)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/isempty","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/ranges-swift.property","title":"var ranges: Ranges","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/contains(_:)","title":"func contains(Bound) -> Bool","type":"method"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/formintersection(_:)","title":"func formIntersection(RangeSet<Bound>)","type":"method"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(RangeSet<Bound>)","type":"method"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/formunion(_:)","title":"func formUnion(RangeSet<Bound>)","type":"method"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/insert(_:within:)","title":"func insert<C>(Bound, within: C)","type":"method"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/insert(contentsof:)","title":"func insert(contentsOf: Range<Bound>)","type":"method"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/intersection(_:)","title":"func intersection(RangeSet<Bound>) -> RangeSet<Bound>","type":"method"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/isstrictsubset(of:)","title":"func isStrictSubset(of: RangeSet<Bound>) -> Bool","type":"method"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: RangeSet<Bound>) -> Bool","type":"method"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/issubset(of:)","title":"func isSubset(of: RangeSet<Bound>) -> Bool","type":"method"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/issuperset(of:)","title":"func isSuperset(of: RangeSet<Bound>) -> Bool","type":"method"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/remove(_:within:)","title":"func remove<C>(Bound, within: C)","type":"method"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/remove(contentsof:)","title":"func remove(contentsOf: Range<Bound>)","type":"method"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/subtract(_:)","title":"func subtract(RangeSet<Bound>)","type":"method"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/subtracting(_:)","title":"func subtracting(RangeSet<Bound>) -> RangeSet<Bound>","type":"method"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/symmetricdifference(_:)","title":"func symmetricDifference(RangeSet<Bound>) -> RangeSet<Bound>","type":"method"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/union(_:)","title":"func union(RangeSet<Bound>) -> RangeSet<Bound>","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/se0270_rangeset\/rangeset\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/se0270_rangeset\/rangeset\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/se0270_rangeset\/rangeset\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/se0270_rangeset\/rangeset","title":"RangeSet","type":"struct"},{"title":"Extended Modules","type":"groupMarker"},{"children":[{"title":"Extended Protocols","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/se0270_rangeset\/swift\/collection\/removingsubranges(_:)","title":"func removingSubranges(RangeSet<Index>) -> DiscontiguousSlice<Self>","type":"method"},{"path":"\/documentation\/se0270_rangeset\/swift\/collection\/subranges(of:)","title":"func subranges(of: Element) -> RangeSet<Index>","type":"method"},{"path":"\/documentation\/se0270_rangeset\/swift\/collection\/subranges(where:)","title":"func subranges(where: (Element) throws -> Bool) rethrows -> RangeSet<Index>","type":"method"}],"path":"\/documentation\/se0270_rangeset\/swift\/collection","title":"Collection","type":"extension"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/se0270_rangeset\/swift\/mutablecollection\/movesubranges(_:to:)","title":"func moveSubranges(RangeSet<Index>, to: Index) -> Range<Index>","type":"method"},{"path":"\/documentation\/se0270_rangeset\/swift\/mutablecollection\/removesubranges(_:)","title":"func removeSubranges(RangeSet<Index>)","type":"method"}],"path":"\/documentation\/se0270_rangeset\/swift\/mutablecollection","title":"MutableCollection","type":"extension"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/se0270_rangeset\/swift\/rangereplaceablecollection\/removesubranges(_:)","title":"func removeSubranges(RangeSet<Index>)","type":"method"}],"path":"\/documentation\/se0270_rangeset\/swift\/rangereplaceablecollection","title":"RangeReplaceableCollection","type":"extension"}],"path":"\/documentation\/se0270_rangeset\/swift","title":"Swift","type":"extension"}],"path":"\/documentation\/se0270_rangeset","title":"SE0270_RangeSet","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":2}}