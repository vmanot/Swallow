{"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"decodeIfPresent","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Container","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"from"},{"text":" ","kind":"text"},{"text":"container","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Container"},{"kind":"text","text":", "},{"text":"forKey","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"key"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Container"},{"kind":"text","text":"."},{"text":"Key","kind":"typeIdentifier","preciseIdentifier":"s:s30KeyedDecodingContainerProtocolP3KeyQa"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"? "},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Container"},{"text":" : ","kind":"text"},{"text":"KeyedDecodingContainerProtocol","kind":"typeIdentifier","preciseIdentifier":"s:s30KeyedDecodingContainerProtocolP"}],"languages":["swift"]}]}],"sections":[],"kind":"symbol","identifier":{"url":"doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/Indirect\/decodeIfPresent(from:forKey:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"Decodable.decodeIfPresent(from:forKey:)"},{"type":"text","text":"."}],"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"roleHeading":"Type Method","externalID":"s:Se20_SwallowSwiftOverlayE15decodeIfPresent4from6forKeyxSgqd___0I0Qyd__tKs30KeyedDecodingContainerProtocolRd__lFZ::SYNTHESIZED::s:7Swallow8IndirectV","symbolKind":"method","extendedModule":"Swift","role":"symbol","modules":[{"relatedModules":["Swift"],"name":"SwallowMacrosClient"}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"decodeIfPresent"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Container"},{"text":">(","kind":"text"},{"text":"from","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Container","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"forKey"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Container"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:s30KeyedDecodingContainerProtocolP3KeyQa","text":"Key"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"?"}],"title":"decodeIfPresent(from:forKey:)"},"variants":[{"paths":["\/documentation\/swallowmacrosclient\/indirect\/decodeifpresent(from:forkey:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient","doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/Indirect","doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/Indirect\/Decodable-Implementations"]]},"references":{"doc://com.swallow.documentation.SwallowMacrosClient/documentation/SwallowMacrosClient/Indirect/Decodable-Implementations":{"kind":"article","identifier":"doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/Indirect\/Decodable-Implementations","type":"topic","abstract":[],"url":"\/documentation\/swallowmacrosclient\/indirect\/decodable-implementations","role":"collectionGroup","title":"Decodable Implementations"},"doc://com.swallow.documentation.SwallowMacrosClient/documentation/SwallowMacrosClient/Indirect/decodeIfPresent(from:forKey:)":{"kind":"symbol","abstract":[],"title":"decodeIfPresent(from:forKey:)","identifier":"doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/Indirect\/decodeIfPresent(from:forKey:)","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"decodeIfPresent","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Container","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"from"},{"text":": ","kind":"text"},{"text":"Container","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"forKey","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Container","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s30KeyedDecodingContainerProtocolP3KeyQa","text":"Key"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"Self","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"type":"topic","url":"\/documentation\/swallowmacrosclient\/indirect\/decodeifpresent(from:forkey:)"},"doc://com.swallow.documentation.SwallowMacrosClient/documentation/SwallowMacrosClient/Indirect":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Indirect"}],"identifier":"doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/Indirect","type":"topic","abstract":[{"text":"An indirect, copy-on-write wrapper over a value.","type":"text"}],"url":"\/documentation\/swallowmacrosclient\/indirect","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Indirect","kind":"identifier"}],"title":"Indirect"},"doc://com.swallow.documentation.SwallowMacrosClient/documentation/SwallowMacrosClient":{"title":"SwallowMacrosClient","kind":"symbol","abstract":[],"type":"topic","url":"\/documentation\/swallowmacrosclient","identifier":"doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient","role":"collection"}}}