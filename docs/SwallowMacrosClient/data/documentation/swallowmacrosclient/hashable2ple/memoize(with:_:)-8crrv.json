{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/Hashable2ple\/memoize(with:_:)-8crrv"},"sections":[],"metadata":{"extendedModule":"Swift","role":"symbol","roleHeading":"Instance Method","modules":[{"relatedModules":["Swift"],"name":"SwallowMacrosClient"}],"title":"memoize(with:_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"memoize","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"text":"with","kind":"externalParam"},{"kind":"text","text":": "},{"text":"MemoizationCache","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"KeyPath","preciseIdentifier":"s:s7KeyPathC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"text":"T","kind":"typeIdentifier"}],"symbolKind":"method","externalID":"s:SH7SwallowE7memoize4with_qd__AA6_CacheCyAA011MemoizationD3KeyVypGSg_s0F4PathCyxqd__GtlF::SYNTHESIZED::s:7Swallow12Hashable2pleV"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"memoize"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"with"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"cache"},{"text":": ","kind":"text"},{"text":"MemoizationCache","kind":"typeIdentifier"},{"text":"? = MemoizationCache.shared, ","kind":"text"},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"keyPath"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s7KeyPathC","kind":"typeIdentifier","text":"KeyPath"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">) -> "},{"text":"T","kind":"typeIdentifier"}],"languages":["swift"],"platforms":["macOS"]}]},{"parameters":[{"name":"cache","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The shared cache to use; "},{"type":"codeVoice","code":"nil"},{"text":" disables caching and simply returns the result of ","type":"text"},{"type":"codeVoice","code":"predicate"},{"text":" directly","type":"text"}]}]}],"kind":"parameters"},{"kind":"content","content":[{"anchor":"return-value","text":"Return Value","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"The result from the "},{"type":"codeVoice","code":"predicate"},{"type":"text","text":", either a previously cached value, or the result of executing the "},{"code":"predicate","type":"codeVoice"}]}]},{"content":[{"level":2,"text":"Discussion","anchor":"discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The source subject (the receiver) and the result object (the return value) should be value types, and the "},{"code":"predicate","type":"codeVoice"},{"text":" must be a ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"pure"}]},{"text":" function that captures ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"no state"}]},{"type":"text","text":", in that:"}]},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Its return value is the same for the same arguments (no variation with local static variables, non-local variables, mutable reference arguments or input streams from I\/O devices)."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Its evaluation has no side effects (no mutation of local static variables, non-local variables, mutable reference arguments or I\/O streams)."}]}]}],"type":"orderedList"},{"type":"aside","style":"note","name":"Note","content":[{"inlineContent":[{"text":"The calling functionâ€™s source file and line are used as the cache key, so care must be taken to avoid having multiple calls to ","type":"text"},{"code":"memoize","type":"codeVoice"},{"text":" occur from a single line of source code.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Re-Throws and errors from ","type":"text"},{"type":"codeVoice","code":"predicate"}]}],"style":"note","type":"aside","name":"Throws"},{"type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"Around O(1) for a successful cache hit, otherwise the complexity of the keyPath execution","type":"text"}]}],"name":"Complexity","style":"note"}],"kind":"content"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"abstract":[{"text":"Memoize the result of the execution of a predicate for the ","type":"text"},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":" receiver."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swallowmacrosclient\/hashable2ple\/memoize(with:_:)-8crrv"]}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient","doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/Hashable2ple","doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/Hashable2ple\/Hashable-Implementations"]]},"references":{"doc://com.swallow.documentation.SwallowMacrosClient/documentation/SwallowMacrosClient":{"title":"SwallowMacrosClient","kind":"symbol","abstract":[],"type":"topic","url":"\/documentation\/swallowmacrosclient","identifier":"doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient","role":"collection"},"doc://com.swallow.documentation.SwallowMacrosClient/documentation/SwallowMacrosClient/Hashable2ple/Hashable-Implementations":{"role":"collectionGroup","url":"\/documentation\/swallowmacrosclient\/hashable2ple\/hashable-implementations","abstract":[],"title":"Hashable Implementations","kind":"article","type":"topic","identifier":"doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/Hashable2ple\/Hashable-Implementations"},"doc://com.swallow.documentation.SwallowMacrosClient/documentation/SwallowMacrosClient/Hashable2ple/memoize(with:_:)-8crrv":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"memoize"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"text":"with","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"MemoizationCache"},{"kind":"text","text":"?, "},{"kind":"typeIdentifier","text":"KeyPath","preciseIdentifier":"s:s7KeyPathC"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"T"}],"title":"memoize(with:_:)","abstract":[{"type":"text","text":"Memoize the result of the execution of a predicate for the "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":" receiver."}],"type":"topic","url":"\/documentation\/swallowmacrosclient\/hashable2ple\/memoize(with:_:)-8crrv","identifier":"doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/Hashable2ple\/memoize(with:_:)-8crrv","role":"symbol","kind":"symbol"},"doc://com.swallow.documentation.SwallowMacrosClient/documentation/SwallowMacrosClient/Hashable2ple":{"type":"topic","kind":"symbol","url":"\/documentation\/swallowmacrosclient\/hashable2ple","navigatorTitle":[{"text":"Hashable2ple","kind":"identifier"}],"title":"Hashable2ple","abstract":[],"role":"symbol","identifier":"doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/Hashable2ple","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Hashable2ple"}]}}}