{"relationshipsSections":[{"type":"conformsTo","identifiers":["doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/AdditionOperatable","doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/AnyCodableConvertible","doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/ApproximatelyEquatable","doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/ArithmeticOperatable","doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/BooleanInitiable","doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/Bounded","doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/BoundedRandomnable","doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/ByteOrderSwappable","doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/ByteTupleConvertible","doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/CoderPrimitive","doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/Continuous","doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/DiscreteOrContinuous","doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/DivisionOperatable","doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/FloatingPointInitiable","doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/Initiable","doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/IntegerInitiable","doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/MultiplicationOperatable","doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/MutableAdditionOperatable","doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/MutableArithmeticOperatable","doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/MutableDivisionOperatable","doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/MutableMultiplicationOperatable","doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/MutableSubtractionOperatable","doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/Number","doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/NumberConvertible","doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/NumberInitiable","doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/Randomnable","doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/ShouldNotBeDecodedFromBool","doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/Signed","doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/SignedIntegerInitiable","doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/SignedOrUnsigned","doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/SubtractionOperatable","doc:\/\/com.swallow.documentation.SwallowMacrosClient\/SL","doc:\/\/com.swallow.documentation.SwallowMacrosClient\/s8CopyableP","doc:\/\/com.swallow.documentation.SwallowMacrosClient\/s23CustomStringConvertibleP","doc:\/\/com.swallow.documentation.SwallowMacrosClient\/Se","doc:\/\/com.swallow.documentation.SwallowMacrosClient\/SE","doc:\/\/com.swallow.documentation.SwallowMacrosClient\/SQ","doc:\/\/com.swallow.documentation.SwallowMacrosClient\/SH","doc:\/\/com.swallow.documentation.SwallowMacrosClient\/s8SendableP","doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/Trivial","doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/UnsignedIntegerInitiable"],"title":"Conforms To","kind":"relationships"}],"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient","doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/Swift"]]},"metadata":{"navigatorTitle":[{"kind":"identifier","text":"Double"}],"symbolKind":"extension","role":"symbol","title":"Double","roleHeading":"Extended Structure","extendedModule":"Swift","modules":[{"name":"SwallowMacrosClient","relatedModules":["Swift"]}],"externalID":"s:e:s:Sd7SwallowE12toAnyCodableAA0cD0OyF","fragments":[{"kind":"keyword","text":"extension"},{"text":" ","kind":"text"},{"kind":"identifier","preciseIdentifier":"s:Sd","text":"Double"}]},"schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"extension","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sd","text":"Double"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"}],"identifier":{"url":"doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/Swift\/Double","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swallowmacrosclient\/swift\/double"]}],"kind":"symbol","topicSections":[{"identifiers":["doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/Swift\/Double\/AnyCodableConvertible-Implementations","doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/Swift\/Double\/BooleanInitiable-Implementations","doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/Swift\/Double\/Bounded-Implementations","doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/Swift\/Double\/BoundedRandomnable-Implementations","doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/Swift\/Double\/ByteOrderSwappable-Implementations","doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/Swift\/Double\/ByteTupleConvertible-Implementations","doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/Swift\/Double\/DiscreteOrContinuous-Implementations","doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/Swift\/Double\/Equatable-Implementations","doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/Swift\/Double\/FloatingPointInitiable-Implementations","doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/Swift\/Double\/Initiable-Implementations","doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/Swift\/Double\/Number-Implementations","doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/Swift\/Double\/NumberConvertible-Implementations","doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/Swift\/Double\/Signed-Implementations","doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/Swift\/Double\/SignedIntegerInitiable-Implementations","doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/Swift\/Double\/Trivial-Implementations","doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/Swift\/Double\/UnsignedIntegerInitiable-Implementations"],"generated":true,"anchor":"Default-Implementations","title":"Default Implementations"}],"sections":[],"references":{"doc://com.swallow.documentation.SwallowMacrosClient/documentation/SwallowMacrosClient/Swift/Double/Number-Implementations":{"role":"collectionGroup","identifier":"doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/Swift\/Double\/Number-Implementations","abstract":[],"url":"\/documentation\/swallowmacrosclient\/swift\/double\/number-implementations","type":"topic","kind":"article","title":"Number Implementations"},"doc://com.swallow.documentation.SwallowMacrosClient/documentation/SwallowMacrosClient/AnyCodableConvertible":{"navigatorTitle":[{"text":"AnyCodableConvertible","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/AnyCodableConvertible","role":"symbol","abstract":[],"kind":"symbol","title":"AnyCodableConvertible","url":"\/documentation\/swallowmacrosclient\/anycodableconvertible","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"AnyCodableConvertible","kind":"identifier"}]},"doc://com.swallow.documentation.SwallowMacrosClient/documentation/SwallowMacrosClient/SignedIntegerInitiable":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SignedIntegerInitiable","kind":"identifier"}],"url":"\/documentation\/swallowmacrosclient\/signedintegerinitiable","navigatorTitle":[{"text":"SignedIntegerInitiable","kind":"identifier"}],"role":"symbol","kind":"symbol","type":"topic","title":"SignedIntegerInitiable","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/SignedIntegerInitiable"},"doc://com.swallow.documentation.SwallowMacrosClient/documentation/SwallowMacrosClient/Swift/Double/NumberConvertible-Implementations":{"title":"NumberConvertible Implementations","kind":"article","role":"collectionGroup","url":"\/documentation\/swallowmacrosclient\/swift\/double\/numberconvertible-implementations","type":"topic","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/Swift\/Double\/NumberConvertible-Implementations"},"doc://com.swallow.documentation.SwallowMacrosClient/SL":{"title":"Swift.Comparable","type":"unresolvable","identifier":"doc:\/\/com.swallow.documentation.SwallowMacrosClient\/SL"},"doc://com.swallow.documentation.SwallowMacrosClient/documentation/SwallowMacrosClient/MutableDivisionOperatable":{"title":"MutableDivisionOperatable","navigatorTitle":[{"kind":"identifier","text":"MutableDivisionOperatable"}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"MutableDivisionOperatable","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/swallowmacrosclient\/mutabledivisionoperatable","abstract":[{"text":"A type capable of mutating division.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/MutableDivisionOperatable"},"doc://com.swallow.documentation.SwallowMacrosClient/documentation/SwallowMacrosClient/ByteOrderSwappable":{"navigatorTitle":[{"kind":"identifier","text":"ByteOrderSwappable"}],"title":"ByteOrderSwappable","url":"\/documentation\/swallowmacrosclient\/byteorderswappable","kind":"symbol","type":"topic","identifier":"doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/ByteOrderSwappable","abstract":[{"text":"A type whose byte-order can be swapped.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"ByteOrderSwappable","kind":"identifier"}]},"doc://com.swallow.documentation.SwallowMacrosClient/documentation/SwallowMacrosClient/Swift/Double/BooleanInitiable-Implementations":{"kind":"article","abstract":[],"url":"\/documentation\/swallowmacrosclient\/swift\/double\/booleaninitiable-implementations","role":"collectionGroup","identifier":"doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/Swift\/Double\/BooleanInitiable-Implementations","type":"topic","title":"BooleanInitiable Implementations"},"doc://com.swallow.documentation.SwallowMacrosClient/s8CopyableP":{"identifier":"doc:\/\/com.swallow.documentation.SwallowMacrosClient\/s8CopyableP","type":"unresolvable","title":"Swift.Copyable"},"doc://com.swallow.documentation.SwallowMacrosClient/SQ":{"identifier":"doc:\/\/com.swallow.documentation.SwallowMacrosClient\/SQ","type":"unresolvable","title":"Swift.Equatable"},"doc://com.swallow.documentation.SwallowMacrosClient/documentation/SwallowMacrosClient/Initiable":{"kind":"symbol","type":"topic","abstract":[],"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Initiable","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/Initiable","title":"Initiable","url":"\/documentation\/swallowmacrosclient\/initiable","navigatorTitle":[{"text":"Initiable","kind":"identifier"}]},"doc://com.swallow.documentation.SwallowMacrosClient/documentation/SwallowMacrosClient/MutableSubtractionOperatable":{"title":"MutableSubtractionOperatable","navigatorTitle":[{"kind":"identifier","text":"MutableSubtractionOperatable"}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"MutableSubtractionOperatable"}],"kind":"symbol","url":"\/documentation\/swallowmacrosclient\/mutablesubtractionoperatable","abstract":[{"type":"text","text":"A type capable of mutating subtraction."}],"identifier":"doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/MutableSubtractionOperatable"},"doc://com.swallow.documentation.SwallowMacrosClient/documentation/SwallowMacrosClient/Swift/Double/ByteTupleConvertible-Implementations":{"url":"\/documentation\/swallowmacrosclient\/swift\/double\/bytetupleconvertible-implementations","identifier":"doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/Swift\/Double\/ByteTupleConvertible-Implementations","abstract":[],"kind":"article","title":"ByteTupleConvertible Implementations","type":"topic","role":"collectionGroup"},"doc://com.swallow.documentation.SwallowMacrosClient/documentation/SwallowMacrosClient/Swift/Double":{"role":"symbol","fragments":[{"kind":"keyword","text":"extension"},{"kind":"text","text":" "},{"kind":"identifier","text":"Double","preciseIdentifier":"s:Sd"}],"title":"Double","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Double"}],"identifier":"doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/Swift\/Double","abstract":[],"url":"\/documentation\/swallowmacrosclient\/swift\/double","type":"topic"},"doc://com.swallow.documentation.SwallowMacrosClient/documentation/SwallowMacrosClient/Swift/Double/BoundedRandomnable-Implementations":{"title":"BoundedRandomnable Implementations","kind":"article","role":"collectionGroup","identifier":"doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/Swift\/Double\/BoundedRandomnable-Implementations","abstract":[],"type":"topic","url":"\/documentation\/swallowmacrosclient\/swift\/double\/boundedrandomnable-implementations"},"doc://com.swallow.documentation.SwallowMacrosClient/documentation/SwallowMacrosClient/Swift/Double/AnyCodableConvertible-Implementations":{"title":"AnyCodableConvertible Implementations","type":"topic","identifier":"doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/Swift\/Double\/AnyCodableConvertible-Implementations","role":"collectionGroup","url":"\/documentation\/swallowmacrosclient\/swift\/double\/anycodableconvertible-implementations","abstract":[],"kind":"article"},"doc://com.swallow.documentation.SwallowMacrosClient/documentation/SwallowMacrosClient/MutableArithmeticOperatable":{"title":"MutableArithmeticOperatable","navigatorTitle":[{"kind":"identifier","text":"MutableArithmeticOperatable"}],"type":"topic","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"MutableArithmeticOperatable","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/swallowmacrosclient\/mutablearithmeticoperatable","abstract":[{"type":"text","text":"A type capable of mutating arithmetic."}],"identifier":"doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/MutableArithmeticOperatable"},"doc://com.swallow.documentation.SwallowMacrosClient/documentation/SwallowMacrosClient/AdditionOperatable":{"type":"topic","role":"symbol","navigatorTitle":[{"text":"AdditionOperatable","kind":"identifier"}],"kind":"symbol","title":"AdditionOperatable","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AdditionOperatable"}],"identifier":"doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/AdditionOperatable","url":"\/documentation\/swallowmacrosclient\/additionoperatable","abstract":[{"type":"text","text":"A type capable of addition."}]},"doc://com.swallow.documentation.SwallowMacrosClient/documentation/SwallowMacrosClient/Trivial":{"title":"Trivial","type":"topic","abstract":[{"text":"A trivial (Darwin) type.","type":"text"}],"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Trivial","kind":"identifier"}],"navigatorTitle":[{"text":"Trivial","kind":"identifier"}],"url":"\/documentation\/swallowmacrosclient\/trivial","identifier":"doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/Trivial","kind":"symbol"},"doc://com.swallow.documentation.SwallowMacrosClient/documentation/SwallowMacrosClient/Number":{"navigatorTitle":[{"text":"Number","kind":"identifier"}],"abstract":[{"text":"A type that represents a number.","type":"text"}],"kind":"symbol","title":"Number","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"Number","kind":"identifier"}],"identifier":"doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/Number","url":"\/documentation\/swallowmacrosclient\/number","role":"symbol","type":"topic"},"doc://com.swallow.documentation.SwallowMacrosClient/documentation/SwallowMacrosClient/Randomnable":{"title":"Randomnable","navigatorTitle":[{"kind":"identifier","text":"Randomnable"}],"type":"topic","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Randomnable"}],"kind":"symbol","url":"\/documentation\/swallowmacrosclient\/randomnable","abstract":[{"type":"text","text":"A type capable of generating random instances of itself."}],"identifier":"doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/Randomnable"},"doc://com.swallow.documentation.SwallowMacrosClient/documentation/SwallowMacrosClient/ArithmeticOperatable":{"title":"ArithmeticOperatable","navigatorTitle":[{"kind":"identifier","text":"ArithmeticOperatable"}],"type":"topic","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ArithmeticOperatable"}],"kind":"symbol","url":"\/documentation\/swallowmacrosclient\/arithmeticoperatable","abstract":[{"text":"A type capable of arithmetic.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/ArithmeticOperatable"},"doc://com.swallow.documentation.SwallowMacrosClient/documentation/SwallowMacrosClient/Swift/Double/FloatingPointInitiable-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/Swift\/Double\/FloatingPointInitiable-Implementations","title":"FloatingPointInitiable Implementations","url":"\/documentation\/swallowmacrosclient\/swift\/double\/floatingpointinitiable-implementations","abstract":[],"type":"topic","kind":"article","role":"collectionGroup"},"doc://com.swallow.documentation.SwallowMacrosClient/documentation/SwallowMacrosClient/ShouldNotBeDecodedFromBool":{"navigatorTitle":[{"text":"ShouldNotBeDecodedFromBool","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/ShouldNotBeDecodedFromBool","role":"symbol","abstract":[],"kind":"symbol","title":"ShouldNotBeDecodedFromBool","url":"\/documentation\/swallowmacrosclient\/shouldnotbedecodedfrombool","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ShouldNotBeDecodedFromBool"}]},"doc://com.swallow.documentation.SwallowMacrosClient/documentation/SwallowMacrosClient/NumberConvertible":{"title":"NumberConvertible","navigatorTitle":[{"kind":"identifier","text":"NumberConvertible"}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"NumberConvertible","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/swallowmacrosclient\/numberconvertible","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/NumberConvertible"},"doc://com.swallow.documentation.SwallowMacrosClient/documentation/SwallowMacrosClient/IntegerInitiable":{"title":"IntegerInitiable","navigatorTitle":[{"text":"IntegerInitiable","kind":"identifier"}],"type":"topic","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"IntegerInitiable"}],"kind":"symbol","url":"\/documentation\/swallowmacrosclient\/integerinitiable","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/IntegerInitiable"},"doc://com.swallow.documentation.SwallowMacrosClient/documentation/SwallowMacrosClient/Swift/Double/ByteOrderSwappable-Implementations":{"url":"\/documentation\/swallowmacrosclient\/swift\/double\/byteorderswappable-implementations","title":"ByteOrderSwappable Implementations","identifier":"doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/Swift\/Double\/ByteOrderSwappable-Implementations","type":"topic","abstract":[],"kind":"article","role":"collectionGroup"},"doc://com.swallow.documentation.SwallowMacrosClient/documentation/SwallowMacrosClient/DivisionOperatable":{"title":"DivisionOperatable","navigatorTitle":[{"kind":"identifier","text":"DivisionOperatable"}],"type":"topic","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"DivisionOperatable"}],"kind":"symbol","url":"\/documentation\/swallowmacrosclient\/divisionoperatable","abstract":[{"text":"A type capable of division.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/DivisionOperatable"},"doc://com.swallow.documentation.SwallowMacrosClient/documentation/SwallowMacrosClient/Swift/Double/Equatable-Implementations":{"identifier":"doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/Swift\/Double\/Equatable-Implementations","url":"\/documentation\/swallowmacrosclient\/swift\/double\/equatable-implementations","kind":"article","role":"collectionGroup","type":"topic","abstract":[],"title":"Equatable Implementations"},"doc://com.swallow.documentation.SwallowMacrosClient/documentation/SwallowMacrosClient":{"title":"SwallowMacrosClient","kind":"symbol","abstract":[],"type":"topic","url":"\/documentation\/swallowmacrosclient","identifier":"doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient","role":"collection"},"doc://com.swallow.documentation.SwallowMacrosClient/documentation/SwallowMacrosClient/MutableMultiplicationOperatable":{"title":"MutableMultiplicationOperatable","navigatorTitle":[{"kind":"identifier","text":"MutableMultiplicationOperatable"}],"type":"topic","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"MutableMultiplicationOperatable"}],"kind":"symbol","url":"\/documentation\/swallowmacrosclient\/mutablemultiplicationoperatable","abstract":[{"type":"text","text":"A type capable of mutating multiplication."}],"identifier":"doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/MutableMultiplicationOperatable"},"doc://com.swallow.documentation.SwallowMacrosClient/Se":{"identifier":"doc:\/\/com.swallow.documentation.SwallowMacrosClient\/Se","type":"unresolvable","title":"Swift.Decodable"},"doc://com.swallow.documentation.SwallowMacrosClient/documentation/SwallowMacrosClient/SignedOrUnsigned":{"navigatorTitle":[{"kind":"identifier","text":"SignedOrUnsigned"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/SignedOrUnsigned","role":"symbol","abstract":[],"kind":"symbol","title":"SignedOrUnsigned","url":"\/documentation\/swallowmacrosclient\/signedorunsigned","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SignedOrUnsigned"}]},"doc://com.swallow.documentation.SwallowMacrosClient/documentation/SwallowMacrosClient/Swift/Double/Bounded-Implementations":{"type":"topic","abstract":[],"kind":"article","identifier":"doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/Swift\/Double\/Bounded-Implementations","title":"Bounded Implementations","role":"collectionGroup","url":"\/documentation\/swallowmacrosclient\/swift\/double\/bounded-implementations"},"doc://com.swallow.documentation.SwallowMacrosClient/documentation/SwallowMacrosClient/Swift/Double/Initiable-Implementations":{"title":"Initiable Implementations","url":"\/documentation\/swallowmacrosclient\/swift\/double\/initiable-implementations","abstract":[],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/Swift\/Double\/Initiable-Implementations","kind":"article","role":"collectionGroup"},"doc://com.swallow.documentation.SwallowMacrosClient/documentation/SwallowMacrosClient/Swift/Double/Signed-Implementations":{"url":"\/documentation\/swallowmacrosclient\/swift\/double\/signed-implementations","type":"topic","title":"Signed Implementations","role":"collectionGroup","identifier":"doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/Swift\/Double\/Signed-Implementations","abstract":[],"kind":"article"},"doc://com.swallow.documentation.SwallowMacrosClient/documentation/SwallowMacrosClient/ApproximatelyEquatable":{"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ApproximatelyEquatable"}],"kind":"symbol","identifier":"doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/ApproximatelyEquatable","abstract":[{"type":"text","text":"A type that can be compared for approximate equality."}],"url":"\/documentation\/swallowmacrosclient\/approximatelyequatable","type":"topic","title":"ApproximatelyEquatable","navigatorTitle":[{"text":"ApproximatelyEquatable","kind":"identifier"}],"role":"symbol"},"doc://com.swallow.documentation.SwallowMacrosClient/documentation/SwallowMacrosClient/CoderPrimitive":{"navigatorTitle":[{"kind":"identifier","text":"CoderPrimitive"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/CoderPrimitive","role":"symbol","abstract":[{"text":"A primitive ","type":"text"},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" type."}],"kind":"symbol","title":"CoderPrimitive","url":"\/documentation\/swallowmacrosclient\/coderprimitive","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"CoderPrimitive","kind":"identifier"}]},"doc://com.swallow.documentation.SwallowMacrosClient/documentation/SwallowMacrosClient/SubtractionOperatable":{"identifier":"doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/SubtractionOperatable","role":"symbol","type":"topic","navigatorTitle":[{"text":"SubtractionOperatable","kind":"identifier"}],"title":"SubtractionOperatable","kind":"symbol","url":"\/documentation\/swallowmacrosclient\/subtractionoperatable","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SubtractionOperatable"}],"abstract":[{"text":"A type capable of subtraction.","type":"text"}]},"doc://com.swallow.documentation.SwallowMacrosClient/documentation/SwallowMacrosClient/Signed":{"identifier":"doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/Signed","kind":"symbol","url":"\/documentation\/swallowmacrosclient\/signed","role":"symbol","abstract":[],"navigatorTitle":[{"text":"Signed","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"Signed","kind":"identifier"}],"type":"topic","title":"Signed"},"doc://com.swallow.documentation.SwallowMacrosClient/documentation/SwallowMacrosClient/Swift/Double/DiscreteOrContinuous-Implementations":{"abstract":[],"url":"\/documentation\/swallowmacrosclient\/swift\/double\/discreteorcontinuous-implementations","role":"collectionGroup","title":"DiscreteOrContinuous Implementations","type":"topic","identifier":"doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/Swift\/Double\/DiscreteOrContinuous-Implementations","kind":"article"},"doc://com.swallow.documentation.SwallowMacrosClient/s8SendableP":{"identifier":"doc:\/\/com.swallow.documentation.SwallowMacrosClient\/s8SendableP","type":"unresolvable","title":"Swift.Sendable"},"doc://com.swallow.documentation.SwallowMacrosClient/SE":{"identifier":"doc:\/\/com.swallow.documentation.SwallowMacrosClient\/SE","type":"unresolvable","title":"Swift.Encodable"},"doc://com.swallow.documentation.SwallowMacrosClient/documentation/SwallowMacrosClient/ByteTupleConvertible":{"title":"ByteTupleConvertible","type":"topic","identifier":"doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/ByteTupleConvertible","url":"\/documentation\/swallowmacrosclient\/bytetupleconvertible","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"ByteTupleConvertible","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"ByteTupleConvertible","kind":"identifier"}],"abstract":[{"text":"A type that can be converted to and from a tuple representation of its bytes.","type":"text"}]},"doc://com.swallow.documentation.SwallowMacrosClient/documentation/SwallowMacrosClient/Swift/Double/SignedIntegerInitiable-Implementations":{"kind":"article","identifier":"doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/Swift\/Double\/SignedIntegerInitiable-Implementations","abstract":[],"type":"topic","title":"SignedIntegerInitiable Implementations","url":"\/documentation\/swallowmacrosclient\/swift\/double\/signedintegerinitiable-implementations","role":"collectionGroup"},"doc://com.swallow.documentation.SwallowMacrosClient/documentation/SwallowMacrosClient/UnsignedIntegerInitiable":{"navigatorTitle":[{"kind":"identifier","text":"UnsignedIntegerInitiable"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/UnsignedIntegerInitiable","role":"symbol","abstract":[],"kind":"symbol","title":"UnsignedIntegerInitiable","url":"\/documentation\/swallowmacrosclient\/unsignedintegerinitiable","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"UnsignedIntegerInitiable","kind":"identifier"}]},"doc://com.swallow.documentation.SwallowMacrosClient/documentation/SwallowMacrosClient/Swift/Double/UnsignedIntegerInitiable-Implementations":{"url":"\/documentation\/swallowmacrosclient\/swift\/double\/unsignedintegerinitiable-implementations","type":"topic","title":"UnsignedIntegerInitiable Implementations","role":"collectionGroup","identifier":"doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/Swift\/Double\/UnsignedIntegerInitiable-Implementations","abstract":[],"kind":"article"},"doc://com.swallow.documentation.SwallowMacrosClient/s23CustomStringConvertibleP":{"identifier":"doc:\/\/com.swallow.documentation.SwallowMacrosClient\/s23CustomStringConvertibleP","type":"unresolvable","title":"Swift.CustomStringConvertible"},"doc://com.swallow.documentation.SwallowMacrosClient/documentation/SwallowMacrosClient/NumberInitiable":{"title":"NumberInitiable","navigatorTitle":[{"kind":"identifier","text":"NumberInitiable"}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"NumberInitiable","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/swallowmacrosclient\/numberinitiable","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/NumberInitiable"},"doc://com.swallow.documentation.SwallowMacrosClient/documentation/SwallowMacrosClient/Swift/Double/Trivial-Implementations":{"role":"collectionGroup","title":"Trivial Implementations","kind":"article","type":"topic","url":"\/documentation\/swallowmacrosclient\/swift\/double\/trivial-implementations","abstract":[],"identifier":"doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/Swift\/Double\/Trivial-Implementations"},"doc://com.swallow.documentation.SwallowMacrosClient/documentation/SwallowMacrosClient/MutableAdditionOperatable":{"title":"MutableAdditionOperatable","navigatorTitle":[{"kind":"identifier","text":"MutableAdditionOperatable"}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"MutableAdditionOperatable"}],"kind":"symbol","url":"\/documentation\/swallowmacrosclient\/mutableadditionoperatable","abstract":[{"text":"A type capable of mutating addition.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/MutableAdditionOperatable"},"doc://com.swallow.documentation.SwallowMacrosClient/documentation/SwallowMacrosClient/Swift":{"type":"topic","kind":"symbol","url":"\/documentation\/swallowmacrosclient\/swift","identifier":"doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/Swift","title":"Swift","role":"collection","abstract":[]},"doc://com.swallow.documentation.SwallowMacrosClient/documentation/SwallowMacrosClient/Continuous":{"url":"\/documentation\/swallowmacrosclient\/continuous","kind":"symbol","abstract":[{"type":"text","text":"A continuous type."}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"Continuous"}],"identifier":"doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/Continuous","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"Continuous","kind":"identifier"}],"title":"Continuous"},"doc://com.swallow.documentation.SwallowMacrosClient/SH":{"identifier":"doc:\/\/com.swallow.documentation.SwallowMacrosClient\/SH","type":"unresolvable","title":"Swift.Hashable"},"doc://com.swallow.documentation.SwallowMacrosClient/documentation/SwallowMacrosClient/DiscreteOrContinuous":{"title":"DiscreteOrContinuous","navigatorTitle":[{"kind":"identifier","text":"DiscreteOrContinuous"}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DiscreteOrContinuous"}],"kind":"symbol","url":"\/documentation\/swallowmacrosclient\/discreteorcontinuous","abstract":[{"text":"A type that is either discrete or continuous.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/DiscreteOrContinuous"},"doc://com.swallow.documentation.SwallowMacrosClient/documentation/SwallowMacrosClient/BoundedRandomnable":{"navigatorTitle":[{"kind":"identifier","text":"BoundedRandomnable"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/BoundedRandomnable","role":"symbol","abstract":[{"text":"A bounded type capable of generating random instances of itself.","type":"text"}],"kind":"symbol","title":"BoundedRandomnable","url":"\/documentation\/swallowmacrosclient\/boundedrandomnable","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"BoundedRandomnable"}]},"doc://com.swallow.documentation.SwallowMacrosClient/documentation/SwallowMacrosClient/BooleanInitiable":{"navigatorTitle":[{"kind":"identifier","text":"BooleanInitiable"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/BooleanInitiable","role":"symbol","abstract":[],"kind":"symbol","title":"BooleanInitiable","url":"\/documentation\/swallowmacrosclient\/booleaninitiable","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"BooleanInitiable"}]},"doc://com.swallow.documentation.SwallowMacrosClient/documentation/SwallowMacrosClient/MultiplicationOperatable":{"title":"MultiplicationOperatable","navigatorTitle":[{"kind":"identifier","text":"MultiplicationOperatable"}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"MultiplicationOperatable","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/swallowmacrosclient\/multiplicationoperatable","abstract":[{"text":"A type capable of multiplication.","type":"text"}],"identifier":"doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/MultiplicationOperatable"},"doc://com.swallow.documentation.SwallowMacrosClient/documentation/SwallowMacrosClient/Bounded":{"navigatorTitle":[{"kind":"identifier","text":"Bounded"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/Bounded","role":"symbol","abstract":[{"type":"text","text":"A type bounded by a minimum and a maximum value."}],"kind":"symbol","title":"Bounded","url":"\/documentation\/swallowmacrosclient\/bounded","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"Bounded","kind":"identifier"}]},"doc://com.swallow.documentation.SwallowMacrosClient/documentation/SwallowMacrosClient/FloatingPointInitiable":{"navigatorTitle":[{"kind":"identifier","text":"FloatingPointInitiable"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/FloatingPointInitiable","role":"symbol","abstract":[{"text":"A type which can be initialized from a floating-point.","type":"text"}],"kind":"symbol","title":"FloatingPointInitiable","url":"\/documentation\/swallowmacrosclient\/floatingpointinitiable","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"FloatingPointInitiable","kind":"identifier"}]}}}