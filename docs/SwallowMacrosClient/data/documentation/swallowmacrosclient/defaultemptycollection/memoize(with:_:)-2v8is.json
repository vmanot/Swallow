{"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"memoize"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"with","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"cache","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"MemoizationCache"},{"text":"? = MemoizationCache.shared, ","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"keyPath","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC","text":"KeyPath"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","text":"T"}],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The shared cache to use; "},{"code":"nil","type":"codeVoice"},{"text":" disables caching and simply returns the result of ","type":"text"},{"type":"codeVoice","code":"predicate"},{"type":"text","text":" directly"}]}],"name":"cache"}]},{"kind":"content","content":[{"type":"heading","level":2,"text":"Return Value","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The result from the "},{"type":"codeVoice","code":"predicate"},{"text":", either a previously cached value, or the result of executing the ","type":"text"},{"type":"codeVoice","code":"predicate"}]}]},{"content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The source subject (the receiver) and the result object (the return value) should be value types, and the "},{"type":"codeVoice","code":"predicate"},{"type":"text","text":" must be a "},{"inlineContent":[{"text":"pure","type":"text"}],"type":"emphasis"},{"text":" function that captures ","type":"text"},{"inlineContent":[{"text":"no state","type":"text"}],"type":"emphasis"},{"type":"text","text":", in that:"}]},{"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Its return value is the same for the same arguments (no variation with local static variables, non-local variables, mutable reference arguments or input streams from I\/O devices).","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Its evaluation has no side effects (no mutation of local static variables, non-local variables, mutable reference arguments or I\/O streams)."}]}]}]},{"content":[{"inlineContent":[{"type":"text","text":"The calling functionâ€™s source file and line are used as the cache key, so care must be taken to avoid having multiple calls to "},{"type":"codeVoice","code":"memoize"},{"type":"text","text":" occur from a single line of source code."}],"type":"paragraph"}],"name":"Note","style":"note","type":"aside"},{"style":"note","name":"Throws","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Re-Throws and errors from "},{"type":"codeVoice","code":"predicate"}]}]},{"type":"aside","style":"note","name":"Complexity","content":[{"inlineContent":[{"type":"text","text":"Around O(1) for a successful cache hit, otherwise the complexity of the keyPath execution"}],"type":"paragraph"}]}],"kind":"content"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient","doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/DefaultEmptyCollection","doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/DefaultEmptyCollection\/Hashable-Implementations"]]},"metadata":{"modules":[{"name":"SwallowMacrosClient","relatedModules":["Swift"]}],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"memoize","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"text":"with","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"MemoizationCache"},{"text":"?, ","kind":"text"},{"kind":"typeIdentifier","text":"KeyPath","preciseIdentifier":"s:s7KeyPathC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"T"},{"text":">) -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"roleHeading":"Instance Method","externalID":"s:SH7SwallowE7memoize4with_qd__AA6_CacheCyAA011MemoizationD3KeyVypGSg_s0F4PathCyxqd__GtlF::SYNTHESIZED::s:7Swallow22DefaultEmptyCollectionV","symbolKind":"method","title":"memoize(with:_:)","extendedModule":"Swift"},"kind":"symbol","abstract":[{"type":"text","text":"Memoize the result of the execution of a predicate for the "},{"type":"codeVoice","code":"Hashable"},{"text":" receiver.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swallowmacrosclient\/defaultemptycollection\/memoize(with:_:)-2v8is"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/DefaultEmptyCollection\/memoize(with:_:)-2v8is"},"sections":[],"references":{"doc://com.swallow.documentation.SwallowMacrosClient/documentation/SwallowMacrosClient/DefaultEmptyCollection":{"identifier":"doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/DefaultEmptyCollection","navigatorTitle":[{"text":"DefaultEmptyCollection","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"DefaultEmptyCollection","kind":"identifier"}],"url":"\/documentation\/swallowmacrosclient\/defaultemptycollection","type":"topic","abstract":[{"text":"A property wrapper that decodes an empty collection in the absence of a value.","type":"text"}],"title":"DefaultEmptyCollection","kind":"symbol","role":"symbol"},"doc://com.swallow.documentation.SwallowMacrosClient/documentation/SwallowMacrosClient/DefaultEmptyCollection/memoize(with:_:)-2v8is":{"url":"\/documentation\/swallowmacrosclient\/defaultemptycollection\/memoize(with:_:)-2v8is","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"memoize"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"with"},{"text":": ","kind":"text"},{"text":"MemoizationCache","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"preciseIdentifier":"s:s7KeyPathC","text":"KeyPath","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":">) -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"type":"topic","identifier":"doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/DefaultEmptyCollection\/memoize(with:_:)-2v8is","abstract":[{"text":"Memoize the result of the execution of a predicate for the ","type":"text"},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":" receiver."}],"kind":"symbol","title":"memoize(with:_:)"},"doc://com.swallow.documentation.SwallowMacrosClient/documentation/SwallowMacrosClient":{"title":"SwallowMacrosClient","kind":"symbol","abstract":[],"type":"topic","url":"\/documentation\/swallowmacrosclient","identifier":"doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient","role":"collection"},"doc://com.swallow.documentation.SwallowMacrosClient/documentation/SwallowMacrosClient/DefaultEmptyCollection/Hashable-Implementations":{"title":"Hashable Implementations","kind":"article","url":"\/documentation\/swallowmacrosclient\/defaultemptycollection\/hashable-implementations","abstract":[],"type":"topic","role":"collectionGroup","identifier":"doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/DefaultEmptyCollection\/Hashable-Implementations"}}}