{"abstract":[{"text":"Memoize the result of the execution of a predicate for the ","type":"text"},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":" receiver."}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"memoize"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"with","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"cache"},{"kind":"text","text":": "},{"text":"MemoizationCache","kind":"typeIdentifier"},{"text":"? = MemoizationCache.shared, ","kind":"text"},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"keyPath","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"KeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"T"}],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The shared cache to use; "},{"type":"codeVoice","code":"nil"},{"text":" disables caching and simply returns the result of ","type":"text"},{"code":"predicate","type":"codeVoice"},{"text":" directly","type":"text"}]}],"name":"cache"}]},{"kind":"content","content":[{"text":"Return Value","type":"heading","level":2,"anchor":"return-value"},{"type":"paragraph","inlineContent":[{"text":"The result from the ","type":"text"},{"code":"predicate","type":"codeVoice"},{"text":", either a previously cached value, or the result of executing the ","type":"text"},{"code":"predicate","type":"codeVoice"}]}]},{"kind":"content","content":[{"anchor":"discussion","text":"Discussion","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"The source subject (the receiver) and the result object (the return value) should be value types, and the ","type":"text"},{"type":"codeVoice","code":"predicate"},{"text":" must be a ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"pure"}]},{"type":"text","text":" function that captures "},{"type":"emphasis","inlineContent":[{"text":"no state","type":"text"}]},{"type":"text","text":", in that:"}]},{"items":[{"content":[{"inlineContent":[{"text":"Its return value is the same for the same arguments (no variation with local static variables, non-local variables, mutable reference arguments or input streams from I\/O devices).","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Its evaluation has no side effects (no mutation of local static variables, non-local variables, mutable reference arguments or I\/O streams).","type":"text"}],"type":"paragraph"}]}],"type":"orderedList"},{"style":"note","name":"Note","content":[{"inlineContent":[{"type":"text","text":"The calling functionâ€™s source file and line are used as the cache key, so care must be taken to avoid having multiple calls to "},{"code":"memoize","type":"codeVoice"},{"text":" occur from a single line of source code.","type":"text"}],"type":"paragraph"}],"type":"aside"},{"style":"note","content":[{"inlineContent":[{"text":"Re-Throws and errors from ","type":"text"},{"code":"predicate","type":"codeVoice"}],"type":"paragraph"}],"type":"aside","name":"Throws"},{"name":"Complexity","type":"aside","content":[{"inlineContent":[{"text":"Around O(1) for a successful cache hit, otherwise the complexity of the keyPath execution","type":"text"}],"type":"paragraph"}],"style":"note"}]}],"identifier":{"url":"doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/LosslessNumber\/memoize(with:_:)-8p5nq","interfaceLanguage":"swift"},"sections":[],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient","doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/LosslessNumber","doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/LosslessNumber\/Hashable-Implementations"]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swallowmacrosclient\/losslessnumber\/memoize(with:_:)-8p5nq"]}],"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"memoize","kind":"identifier"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"with","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"MemoizationCache","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"kind":"typeIdentifier","text":"KeyPath","preciseIdentifier":"s:s7KeyPathC"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"T"}],"symbolKind":"method","modules":[{"relatedModules":["Swift"],"name":"SwallowMacrosClient"}],"roleHeading":"Instance Method","extendedModule":"Swift","externalID":"s:SH7SwallowE7memoize4with_qd__AA6_CacheCyAA011MemoizationD3KeyVypGSg_s0F4PathCyxqd__GtlF::SYNTHESIZED::s:7Swallow14LosslessNumberV","role":"symbol","title":"memoize(with:_:)"},"references":{"doc://com.swallow.documentation.SwallowMacrosClient/documentation/SwallowMacrosClient/LosslessNumber/Hashable-Implementations":{"abstract":[],"url":"\/documentation\/swallowmacrosclient\/losslessnumber\/hashable-implementations","role":"collectionGroup","type":"topic","identifier":"doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/LosslessNumber\/Hashable-Implementations","title":"Hashable Implementations","kind":"article"},"doc://com.swallow.documentation.SwallowMacrosClient/documentation/SwallowMacrosClient/LosslessNumber/memoize(with:_:)-8p5nq":{"abstract":[{"text":"Memoize the result of the execution of a predicate for the ","type":"text"},{"code":"Hashable","type":"codeVoice"},{"type":"text","text":" receiver."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"memoize"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"text":"with","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"MemoizationCache"},{"text":"?, ","kind":"text"},{"text":"KeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"text":"T","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","text":"T"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/LosslessNumber\/memoize(with:_:)-8p5nq","type":"topic","url":"\/documentation\/swallowmacrosclient\/losslessnumber\/memoize(with:_:)-8p5nq","title":"memoize(with:_:)"},"doc://com.swallow.documentation.SwallowMacrosClient/documentation/SwallowMacrosClient":{"title":"SwallowMacrosClient","kind":"symbol","abstract":[],"type":"topic","url":"\/documentation\/swallowmacrosclient","identifier":"doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient","role":"collection"},"doc://com.swallow.documentation.SwallowMacrosClient/documentation/SwallowMacrosClient/LosslessNumber":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"LosslessNumber"}],"navigatorTitle":[{"kind":"identifier","text":"LosslessNumber"}],"title":"LosslessNumber","abstract":[],"url":"\/documentation\/swallowmacrosclient\/losslessnumber","kind":"symbol","type":"topic","identifier":"doc:\/\/com.swallow.documentation.SwallowMacrosClient\/documentation\/SwallowMacrosClient\/LosslessNumber","role":"symbol"}}}